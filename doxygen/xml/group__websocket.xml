<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__websocket" kind="group">
    <compoundname>websocket</compoundname>
    <title>Websocket API</title>
    <innerclass refid="structwebsocket__request" prot="public">websocket_request</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__websocket_1ga207402575311103c75906143724e8c35" prot="public" static="no" strong="no">
        <type></type>
        <name>websocket_opcode</name>
        <enumvalue id="group__websocket_1gga207402575311103c75906143724e8c35a8912ad4ae9a3bbbe7ecb02cd2c1a8b35" prot="public">
          <name>WEBSOCKET_OPCODE_CONTINUE</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__websocket_1gga207402575311103c75906143724e8c35a2058fe14c900c3298affa6eed05d182c" prot="public">
          <name>WEBSOCKET_OPCODE_DATA_TEXT</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__websocket_1gga207402575311103c75906143724e8c35aa8d476ba0f4f3f892503d29fa76f1a69" prot="public">
          <name>WEBSOCKET_OPCODE_DATA_BINARY</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__websocket_1gga207402575311103c75906143724e8c35a291cb41ba1d8b535a1625d394c066191" prot="public">
          <name>WEBSOCKET_OPCODE_CLOSE</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__websocket_1gga207402575311103c75906143724e8c35af7a26bf82e06544e8393f17d6c074709" prot="public">
          <name>WEBSOCKET_OPCODE_PING</name>
          <initializer>= 0x09</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__websocket_1gga207402575311103c75906143724e8c35a141c7a8d3c0864115c8bfe3248e59d90" prot="public">
          <name>WEBSOCKET_OPCODE_PONG</name>
          <initializer>= 0x0A</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/websocket.h" line="41" column="1" bodyfile="include/net/websocket.h" bodystart="41" bodyend="48"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__websocket_1ga4cfa3b60fe810341a1dbc80ecfe49a8e" prot="public" static="no">
        <type>int(*</type>
        <definition>websocket_connect_cb_t</definition>
        <argsstring>)(int ws_sock, struct http_request *req, void *user_data)</argsstring>
        <name>websocket_connect_cb_t</name>
        <briefdescription>
<para>Callback called after Websocket connection is established. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ws_sock</parametername>
</parameternamelist>
<parameterdescription>
<para>Websocket id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>HTTP handshake request </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid pointer on some user data or NULL</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt;0 if there is an error and connection should be aborted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/websocket.h" line="60" column="9" bodyfile="include/net/websocket.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__websocket_1ga71a43ec629929d2eb1baba4e3f13a615" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int websocket_connect</definition>
        <argsstring>(int http_sock, struct websocket_request *req, int32_t timeout, void *user_data)</argsstring>
        <name>websocket_connect</name>
        <param>
          <type>int</type>
          <declname>http_sock</declname>
        </param>
        <param>
          <type>struct <ref refid="structwebsocket__request" kindref="compound">websocket_request</ref> *</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Connect to a server that provides Websocket service. The callback is called after connection is established. The returned value is a new socket descriptor that can be used to send / receive data using the BSD socket API. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>http_sock</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket id to the server. Note that this socket is used to do HTTP handshakes etc. The actual Websocket connectivity is done via the returned websocket id. Note that the http_sock must not be closed after this function returns as it is used to deliver the Websocket packets to the Websocket server. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>Websocket request. User should allocate and fill the request data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Max timeout to wait for the connection. The timeout value is in milliseconds. Value SYS_FOREVER_MS means to wait forever. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>User specified data that is passed to the callback.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Websocket id to be used when sending/receiving Websocket data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/websocket.h" line="126" column="5" declfile="include/net/websocket.h" declline="126" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__websocket_1gac23c351e5020d0fc9e936933d399b187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int websocket_send_msg</definition>
        <argsstring>(int ws_sock, const uint8_t *payload, size_t payload_len, enum websocket_opcode opcode, bool mask, bool final, int32_t timeout)</argsstring>
        <name>websocket_send_msg</name>
        <param>
          <type>int</type>
          <declname>ws_sock</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>payload</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>payload_len</declname>
        </param>
        <param>
          <type>enum <ref refid="group__websocket_1ga207402575311103c75906143724e8c35" kindref="member">websocket_opcode</ref></type>
          <declname>opcode</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>final</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Send websocket msg to peer. </para>
        </briefdescription>
        <detaileddescription>
<para>The function will automatically add websocket header to the message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ws_sock</parametername>
</parameternamelist>
<parameterdescription>
<para>Websocket id returned by <ref refid="group__websocket_1ga71a43ec629929d2eb1baba4e3f13a615" kindref="member">websocket_connect()</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>Websocket data to send. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data to be sent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opcode</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation code (text, binary, ping, pong, close) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask the data, see RFC 6455 for details </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>final</parametername>
</parameternamelist>
<parameterdescription>
<para>Is this final message for this message send. If final == false, then the first message must have valid opcode and subsequent messages must have opcode WEBSOCKET_OPCODE_CONTINUE. If final == true and this is the only message, then opcode should have proper opcode (text or binary) set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>How long to try to send the message. The value is in milliseconds. Value SYS_FOREVER_MS means to wait forever.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&lt;0 if error, &gt;=0 amount of bytes sent </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/websocket.h" line="150" column="5" declfile="include/net/websocket.h" declline="150" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__websocket_1ga0fb118f84b7631d12c1b742b75593ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int websocket_recv_msg</definition>
        <argsstring>(int ws_sock, uint8_t *buf, size_t buf_len, uint32_t *message_type, uint64_t *remaining, int32_t timeout)</argsstring>
        <name>websocket_recv_msg</name>
        <param>
          <type>int</type>
          <declname>ws_sock</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> *</type>
          <declname>message_type</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref> *</type>
          <declname>remaining</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Receive websocket msg from peer. </para>
        </briefdescription>
        <detaileddescription>
<para>The function will automatically remove websocket header from the message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ws_sock</parametername>
</parameternamelist>
<parameterdescription>
<para>Websocket id returned by <ref refid="group__websocket_1ga71a43ec629929d2eb1baba4e3f13a615" kindref="member">websocket_connect()</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer where websocket data is read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>remaining</parametername>
</parameternamelist>
<parameterdescription>
<para>How much there is data left in the message after this read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>How long to try to receive the message. The value is in milliseconds. Value SYS_FOREVER_MS means to wait forever.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&lt;0 if error, &gt;=0 amount of bytes received </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/websocket.h" line="171" column="5" declfile="include/net/websocket.h" declline="171" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__websocket_1gacc2f06e2c361317ff48f171abc3d1209" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int websocket_disconnect</definition>
        <argsstring>(int ws_sock)</argsstring>
        <name>websocket_disconnect</name>
        <param>
          <type>int</type>
          <declname>ws_sock</declname>
        </param>
        <briefdescription>
<para>Close websocket. </para>
        </briefdescription>
        <detaileddescription>
<para>One must call <ref refid="group__websocket_1ga71a43ec629929d2eb1baba4e3f13a615" kindref="member">websocket_connect()</ref> after this call to re-establish the connection.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ws_sock</parametername>
</parameternamelist>
<parameterdescription>
<para>Websocket id returned by <ref refid="group__websocket_1ga71a43ec629929d2eb1baba4e3f13a615" kindref="member">websocket_connect()</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/websocket.h" line="183" column="5" declfile="include/net/websocket.h" declline="183" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__websocket_1gab258dd52880c6cbbc7e2aceee329a4a3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void websocket_init</definition>
        <argsstring>(void)</argsstring>
        <name>websocket_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/websocket.h" line="188" column="20" bodyfile="include/net/websocket.h" bodystart="188" bodyend="190"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__websocket_1ga002ade0e3787b6d9da82ab84af1cd354" prot="public" static="no">
        <name>WEBSOCKET_FLAG_FINAL</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message type values. Returned in <ref refid="group__websocket_1ga0fb118f84b7631d12c1b742b75593ba6" kindref="member">websocket_recv_msg()</ref> Final frame <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/websocket.h" line="34" column="9" bodyfile="include/net/websocket.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__websocket_1ga9405e69474b48472dfe0b10017dfcd75" prot="public" static="no">
        <name>WEBSOCKET_FLAG_TEXT</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Textual data <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/websocket.h" line="35" column="9" bodyfile="include/net/websocket.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__websocket_1ga8616f88cb194d82da9367f2f48832842" prot="public" static="no">
        <name>WEBSOCKET_FLAG_BINARY</name>
        <initializer>0x00000004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Binary data <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/websocket.h" line="36" column="9" bodyfile="include/net/websocket.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__websocket_1gaab5fa480351106751f6482f5056b4238" prot="public" static="no">
        <name>WEBSOCKET_FLAG_CLOSE</name>
        <initializer>0x00000008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Closing connection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/websocket.h" line="37" column="9" bodyfile="include/net/websocket.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__websocket_1ga2f2ea01b18c13f38fe834f855ae0da93" prot="public" static="no">
        <name>WEBSOCKET_FLAG_PING</name>
        <initializer>0x00000010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ping message <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/websocket.h" line="38" column="9" bodyfile="include/net/websocket.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__websocket_1ga68cdf577c5401440095dacf224541047" prot="public" static="no">
        <name>WEBSOCKET_FLAG_PONG</name>
        <initializer>0x00000020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pong message <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/websocket.h" line="39" column="9" bodyfile="include/net/websocket.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Websocket API. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
