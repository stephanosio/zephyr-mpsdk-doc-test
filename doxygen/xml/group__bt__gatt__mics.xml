<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__bt__gatt__mics" kind="group">
    <compoundname>bt_gatt_mics</compoundname>
    <title>Microphone Input Control Service (Microphone Input Control Service)</title>
    <innerclass refid="structbt__mics__register__param" prot="public">bt_mics_register_param</innerclass>
    <innerclass refid="structbt__mics__included" prot="public">bt_mics_included</innerclass>
    <innerclass refid="structbt__mics__cb" prot="public">bt_mics_cb</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__bt__gatt__mics_1ga486f13a3efdf14a1020f07697cb47f8a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mics_discover_cb) (struct bt_mics *mics, int err, uint8_t aics_count)</definition>
        <argsstring>)(struct bt_mics *mics, int err, uint8_t aics_count)</argsstring>
        <name>bt_mics_discover_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mics_1gac77bbb79833c922bd1dc49ebb28bff29" kindref="member">bt_mics_discover</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This callback is only used for the client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aics_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of Audio Input Control Service instances on peer device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="123" column="9" bodyfile="include/bluetooth/audio/mics.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mics_1ga4f4737b6e78d8d62f31fb318df78777f" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mics_mute_read_cb) (struct bt_mics *mics, int err, uint8_t mute)</definition>
        <argsstring>)(struct bt_mics *mics, int err, uint8_t mute)</argsstring>
        <name>bt_mics_mute_read_cb</name>
        <briefdescription>
<para>Callback function for Microphone Input Control Service mute. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the value is read, or if the value is changed by either the server or client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail. For notifications, this will always be 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mute</parametername>
</parameternamelist>
<parameterdescription>
<para>The mute setting of the Microphone Input Control Service. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="137" column="9" bodyfile="include/bluetooth/audio/mics.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mics_1ga3ac4229e291dae17d9ee827f1a6f5744" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mics_mute_write_cb) (struct bt_mics *mics, int err)</definition>
        <argsstring>)(struct bt_mics *mics, int err)</argsstring>
        <name>bt_mics_mute_write_cb</name>
        <briefdescription>
<para>Callback function for Microphone Input Control Service mute/unmute. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="146" column="9" bodyfile="include/bluetooth/audio/mics.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__gatt__mics_1ga1dae0b1b25d72a235741e94eb3ef734b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_register</definition>
        <argsstring>(struct bt_mics_register_param *param, struct bt_mics **mics)</argsstring>
        <name>bt_mics_register</name>
        <param>
          <type>struct <ref refid="structbt__mics__register__param" kindref="compound">bt_mics_register_param</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>struct bt_mics **</type>
          <declname>mics</declname>
        </param>
        <briefdescription>
<para>Initialize the Microphone Input Control Service. </para>
        </briefdescription>
        <detaileddescription>
<para>This will enable the service and make it discoverable by clients. This can only be done as the server.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an initialization structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the registered Microphone Input Control Service. This will still be valid if the return value is -EALREADY.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="82" column="5" declfile="include/bluetooth/audio/mics.h" declline="82" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga7dbc4370d1ebc7fb662088745aefa002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_included_get</definition>
        <argsstring>(struct bt_mics *mics, struct bt_mics_included *included)</argsstring>
        <name>bt_mics_included_get</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mics__included" kindref="compound">bt_mics_included</ref> *</type>
          <declname>included</declname>
        </param>
        <briefdescription>
<para>Get Microphone Input Control Service included services. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a pointer to a struct that contains information about the Microphone Input Control Service included services instances, such as pointers to the Audio Input Control Service instances.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">included</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the result in.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="97" column="5" declfile="include/bluetooth/audio/mics.h" declline="97" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga25a2c10db4fc277052a36bf025b14f67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_client_conn_get</definition>
        <argsstring>(const struct bt_mics *mics, struct bt_conn **conn)</argsstring>
        <name>bt_mics_client_conn_get</name>
        <param>
          <type>const struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_conn **</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Get the connection pointer of a client instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the Bluetooth connection pointer of a Microphone Input Control Service client instance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service client instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="111" column="5" declfile="include/bluetooth/audio/mics.h" declline="111" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1gac77bbb79833c922bd1dc49ebb28bff29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_discover</definition>
        <argsstring>(struct bt_conn *conn, struct bt_mics **mics)</argsstring>
        <name>bt_mics_discover</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct bt_mics **</type>
          <declname>mics</declname>
        </param>
        <briefdescription>
<para>Discover Microphone Input Control Service. </para>
        </briefdescription>
        <detaileddescription>
<para>This will start a GATT discovery and setup handles and subscriptions. This shall be called once before any other actions can be executed for the peer device, and the <ref refid="group__bt__gatt__mics_1ga486f13a3efdf14a1020f07697cb47f8a" kindref="member">bt_mics_discover_cb</ref> callback will notify when it is possible to start remote operations.</para>
<para>This shall only be done as the client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection to initialize the profile for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Valid remote instance object on success.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="176" column="5" declfile="include/bluetooth/audio/mics.h" declline="176" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1gaa4991366e1a39421ab44d557cf3b7bb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_unmute</definition>
        <argsstring>(struct bt_mics *mics)</argsstring>
        <name>bt_mics_unmute</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <briefdescription>
<para>Unmute the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="185" column="5" declfile="include/bluetooth/audio/mics.h" declline="185" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga8f8172c232a75f79d863abe3ec2054fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_mute</definition>
        <argsstring>(struct bt_mics *mics)</argsstring>
        <name>bt_mics_mute</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <briefdescription>
<para>Mute the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="194" column="5" declfile="include/bluetooth/audio/mics.h" declline="194" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga47bf9b166a1f6c7c2e13e177f8d79f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_mute_disable</definition>
        <argsstring>(struct bt_mics *mics)</argsstring>
        <name>bt_mics_mute_disable</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <briefdescription>
<para>Disable the mute functionality. </para>
        </briefdescription>
        <detaileddescription>
<para>Can be reenabled by called <ref refid="group__bt__gatt__mics_1ga8f8172c232a75f79d863abe3ec2054fb" kindref="member">bt_mics_mute</ref> or <ref refid="group__bt__gatt__mics_1gaa4991366e1a39421ab44d557cf3b7bb8" kindref="member">bt_mics_unmute</ref>. This can only be done as the server.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="206" column="5" declfile="include/bluetooth/audio/mics.h" declline="206" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga3dfa790997656d9ec654a7c72b82c3a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_mute_get</definition>
        <argsstring>(struct bt_mics *mics)</argsstring>
        <name>bt_mics_mute_get</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <briefdescription>
<para>Read the mute state of a Microphone Input Control Service. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="215" column="5" declfile="include/bluetooth/audio/mics.h" declline="215" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga11412629e7e82b18514ae701fca28025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_state_get</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_state_get</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Audio Input Control Service input state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="225" column="5" declfile="include/bluetooth/audio/mics.h" declline="225" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga6569fd2385d849aebb698a23c1303593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_gain_setting_get</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_gain_setting_get</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Audio Input Control Service gain settings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="235" column="5" declfile="include/bluetooth/audio/mics.h" declline="235" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1gafd6ebff3fd2511fbde80ee0e3d2c0963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_type_get</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_type_get</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Audio Input Control Service input type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="245" column="5" declfile="include/bluetooth/audio/mics.h" declline="245" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga92af4462af4aea925835c67f6998ab0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_status_get</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_status_get</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Audio Input Control Service input status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="255" column="5" declfile="include/bluetooth/audio/mics.h" declline="255" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga0bf86be1e9765798a82dcffbb25895a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_unmute</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_unmute</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Unmute the Audio Input Control Service input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="265" column="5" declfile="include/bluetooth/audio/mics.h" declline="265" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1gab6f3b18964e38149dc3df30fd8c85500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_mute</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_mute</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Mute the Audio Input Control Service input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="275" column="5" declfile="include/bluetooth/audio/mics.h" declline="275" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga7e1372a29687ad265b1aff043f573fe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_manual_gain_set</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_manual_gain_set</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Set Audio Input Control Service gain mode to manual. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="285" column="5" declfile="include/bluetooth/audio/mics.h" declline="285" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1gab1ac1a46f77ca7b45a81ca10315eeb91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_automatic_gain_set</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_automatic_gain_set</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Set Audio Input Control Service gain mode to automatic. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="295" column="5" declfile="include/bluetooth/audio/mics.h" declline="295" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1gaf9e4b7cc76729bb6fd57c7dd99469942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_gain_set</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst, int8_t gain)</argsstring>
        <name>bt_mics_aics_gain_set</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref></type>
          <declname>gain</declname>
        </param>
        <briefdescription>
<para>Set Audio Input Control Service input gain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gain</parametername>
</parameternamelist>
<parameterdescription>
<para>The gain in dB to set (-128 to 127).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="306" column="5" declfile="include/bluetooth/audio/mics.h" declline="306" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga706550da73522ff57dd6ecc84dfd3f8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_description_get</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_description_get</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Audio Input Control Service description. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="317" column="5" declfile="include/bluetooth/audio/mics.h" declline="317" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1gaccbd3981a8dced63eb3380abc76ce396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_description_set</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst, const char *description)</argsstring>
        <name>bt_mics_aics_description_set</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>description</declname>
        </param>
        <briefdescription>
<para>Set the Audio Input Control Service description. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>The description to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="328" column="5" declfile="include/bluetooth/audio/mics.h" declline="328" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga78f7df2763fc8942173f64eaa5ba7b6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_deactivate</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_deactivate</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Deactivates a Audio Input Control Service instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Audio Input Control Services are activated by default, but this will allow the server to deactivate a Audio Input Control Service. This can only be done as the server.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="343" column="5" declfile="include/bluetooth/audio/mics.h" declline="343" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga008fe480ea99fd1e1be92c66d3640128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_activate</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_activate</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Activates a Audio Input Control Service instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Audio Input Control Services are activated by default, but this will allow the server to reactivate a Audio Input Control Service instance after it has been deactivated with <ref refid="group__bt__gatt__mics_1ga78f7df2763fc8942173f64eaa5ba7b6e" kindref="member">bt_mics_aics_deactivate</ref>. This can only be done as the server.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="358" column="5" declfile="include/bluetooth/audio/mics.h" declline="358" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1gae62517af0f5b45ca6b9242dbab532f50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_client_cb_register</definition>
        <argsstring>(struct bt_mics_cb *cb)</argsstring>
        <name>bt_mics_client_cb_register</name>
        <param>
          <type>struct <ref refid="structbt__mics__cb" kindref="compound">bt_mics_cb</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Registers the callbacks used by Microphone Input Control Service client. </para>
        </briefdescription>
        <detaileddescription>
<para>This can only be done as the client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="369" column="5" declfile="include/bluetooth/audio/mics.h" declline="369" declcolumn="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__gatt__mics_1ga8ca2e0d6b6d21238e7624196cb7219ce" prot="public" static="no">
        <name>BT_MICS_AICS_CNT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="32" column="10" bodyfile="include/bluetooth/audio/mics.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__mics_1ga5b76ad207dab6c33c9d68644e1e73e7d" prot="public" static="no">
        <name>BT_MICS_ERR_MUTE_DISABLED</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Application error codes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="36" column="9" bodyfile="include/bluetooth/audio/mics.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__mics_1gabd9e5f77b097d2aa598fb8b5393e353f" prot="public" static="no">
        <name>BT_MICS_ERR_VAL_OUT_OF_RANGE</name>
        <initializer>0x81</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="37" column="9" bodyfile="include/bluetooth/audio/mics.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__mics_1ga4e1da147c4efde1ecd6ebff52718bf70" prot="public" static="no">
        <name>BT_MICS_MUTE_UNMUTED</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Microphone Input Control Service mute states </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="40" column="9" bodyfile="include/bluetooth/audio/mics.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__mics_1gaf86ba12049d5050e6501c0b97ad47bfa" prot="public" static="no">
        <name>BT_MICS_MUTE_MUTED</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="41" column="9" bodyfile="include/bluetooth/audio/mics.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__mics_1gacb41137ba21036cffb43eed9fa216154" prot="public" static="no">
        <name>BT_MICS_MUTE_DISABLED</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="42" column="9" bodyfile="include/bluetooth/audio/mics.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Microphone Input Control Service (Microphone Input Control Service) </para>
    </briefdescription>
    <detaileddescription>
<para>[Experimental] Users should note that the APIs can change as a part of ongoing development. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
