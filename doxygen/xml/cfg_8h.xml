<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="cfg_8h" kind="file" language="C++">
    <compoundname>cfg.h</compoundname>
    <includes refid="stdbool_8h" local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <includes refid="lib_2libc_2minimal_2include_2sys_2types_8h" local="no">sys/types.h</includes>
    <includedby refid="mesh_8h" local="no">include/bluetooth/mesh.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/bluetooth/mesh/cfg.h</label>
        <link refid="cfg_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="5">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="6">
        <label>sys/_types.h</label>
        <link refid="__types_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/types.h</label>
        <link refid="lib_2libc_2minimal_2include_2sys_2types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/bluetooth/mesh.h</label>
        <link refid="mesh_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/bluetooth/mesh/cfg.h</label>
        <link refid="cfg_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/bluetooth/mesh/shell.h</label>
        <link refid="bluetooth_2mesh_2shell_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__mesh__cfg_1ga5b3af48dfe15948654b7791d7a684ba8" prot="public" static="no">
        <name>BT_MESH_KR_NORMAL</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="39" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1ga139d621ce45ea87b4d8a15fc2b29dbe3" prot="public" static="no">
        <name>BT_MESH_KR_PHASE_1</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="40" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1gaff6e8f59719f341ab681268e421b1612" prot="public" static="no">
        <name>BT_MESH_KR_PHASE_2</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="41" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1gab0e65cdc2b152d3b84615223fdaebb2e" prot="public" static="no">
        <name>BT_MESH_KR_PHASE_3</name>
        <initializer>0x03</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="42" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1gaafd10319da7d2f938207b8fd6de02dbc" prot="public" static="no">
        <name>BT_MESH_RELAY_DISABLED</name>
        <initializer><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba17b0aabc3d26da41aab09f009004f729" kindref="member">BT_MESH_FEATURE_DISABLED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="45" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1gae5d235a7c182a8add961d7ce344f87aa" prot="public" static="no">
        <name>BT_MESH_RELAY_ENABLED</name>
        <initializer><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedbabff35d6447ab5608292065f20d1e5275" kindref="member">BT_MESH_FEATURE_ENABLED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="46" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1gabbbbddd31c2a92256fe2f7a7520e76f7" prot="public" static="no">
        <name>BT_MESH_RELAY_NOT_SUPPORTED</name>
        <initializer><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba1e42ee4fce611297ef133bd8260ecdd0" kindref="member">BT_MESH_FEATURE_NOT_SUPPORTED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="47" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1ga8fa3d0ac3cb9f69464c4068ca61689b9" prot="public" static="no">
        <name>BT_MESH_BEACON_DISABLED</name>
        <initializer><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba17b0aabc3d26da41aab09f009004f729" kindref="member">BT_MESH_FEATURE_DISABLED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="49" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1ga01235217559423b93d7e6cf2236278f0" prot="public" static="no">
        <name>BT_MESH_BEACON_ENABLED</name>
        <initializer><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedbabff35d6447ab5608292065f20d1e5275" kindref="member">BT_MESH_FEATURE_ENABLED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="50" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1ga3fe3e68efd25a3a03a041b978435fd7b" prot="public" static="no">
        <name>BT_MESH_GATT_PROXY_DISABLED</name>
        <initializer><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba17b0aabc3d26da41aab09f009004f729" kindref="member">BT_MESH_FEATURE_DISABLED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="52" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1ga77f4438624aae49ea2bb66437c9623f7" prot="public" static="no">
        <name>BT_MESH_GATT_PROXY_ENABLED</name>
        <initializer><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedbabff35d6447ab5608292065f20d1e5275" kindref="member">BT_MESH_FEATURE_ENABLED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="53" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1gaecec3747198a29dd10185e3755e660f8" prot="public" static="no">
        <name>BT_MESH_GATT_PROXY_NOT_SUPPORTED</name>
        <initializer><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba1e42ee4fce611297ef133bd8260ecdd0" kindref="member">BT_MESH_FEATURE_NOT_SUPPORTED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="54" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1ga29fe48989e760438f2c5241110134c8c" prot="public" static="no">
        <name>BT_MESH_FRIEND_DISABLED</name>
        <initializer><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba17b0aabc3d26da41aab09f009004f729" kindref="member">BT_MESH_FEATURE_DISABLED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="56" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1gaa23bba212dc1b322651723ca20f497a3" prot="public" static="no">
        <name>BT_MESH_FRIEND_ENABLED</name>
        <initializer><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedbabff35d6447ab5608292065f20d1e5275" kindref="member">BT_MESH_FEATURE_ENABLED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="57" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1ga35f85e6a9c085cdad4f70b8e60d0b027" prot="public" static="no">
        <name>BT_MESH_FRIEND_NOT_SUPPORTED</name>
        <initializer><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba1e42ee4fce611297ef133bd8260ecdd0" kindref="member">BT_MESH_FEATURE_NOT_SUPPORTED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="58" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1ga9a83214cdbd34ac1d4bc644136523bd9" prot="public" static="no">
        <name>BT_MESH_NODE_IDENTITY_STOPPED</name>
        <initializer><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba17b0aabc3d26da41aab09f009004f729" kindref="member">BT_MESH_FEATURE_DISABLED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="60" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1ga86e88acc6fdcc26a9cea4415daad016c" prot="public" static="no">
        <name>BT_MESH_NODE_IDENTITY_RUNNING</name>
        <initializer><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedbabff35d6447ab5608292065f20d1e5275" kindref="member">BT_MESH_FEATURE_ENABLED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="61" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__cfg_1ga7ffe6722b12a8663518b4e17349e4da5" prot="public" static="no">
        <name>BT_MESH_NODE_IDENTITY_NOT_SUPPORTED</name>
        <initializer><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba1e42ee4fce611297ef133bd8260ecdd0" kindref="member">BT_MESH_FEATURE_NOT_SUPPORTED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="62" column="9" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" prot="public" static="no" strong="no">
        <type></type>
        <name>bt_mesh_feat_state</name>
        <enumvalue id="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba17b0aabc3d26da41aab09f009004f729" prot="public">
          <name>BT_MESH_FEATURE_DISABLED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Feature is supported, but disabled. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedbabff35d6447ab5608292065f20d1e5275" prot="public">
          <name>BT_MESH_FEATURE_ENABLED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Feature is supported and enabled. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba1e42ee4fce611297ef133bd8260ecdd0" prot="public">
          <name>BT_MESH_FEATURE_NOT_SUPPORTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Feature is not supported, and cannot be enabled. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bluetooth mesh feature states </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="29" column="1" bodyfile="include/bluetooth/mesh/cfg.h" bodystart="29" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__mesh__cfg_1ga15de1cdc964628b6f001ef893021ce6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bt_mesh_beacon_set</definition>
        <argsstring>(bool beacon)</argsstring>
        <name>bt_mesh_beacon_set</name>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>beacon</declname>
        </param>
        <briefdescription>
<para>Enable or disable sending of the Secure Network Beacon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>beacon</parametername>
</parameternamelist>
<parameterdescription>
<para>New Secure Network Beacon state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="68" column="6" declfile="include/bluetooth/mesh/cfg.h" declline="68" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg_1ga479c14f6b0d4a08ddf5b160fa9267844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool bt_mesh_beacon_enabled</definition>
        <argsstring>(void)</argsstring>
        <name>bt_mesh_beacon_enabled</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the current Secure Network Beacon state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether the Secure Network Beacon feature is enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="74" column="6" declfile="include/bluetooth/mesh/cfg.h" declline="74" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg_1gaafea57625c9fdba535431cc92dadd162" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_default_ttl_set</definition>
        <argsstring>(uint8_t default_ttl)</argsstring>
        <name>bt_mesh_default_ttl_set</name>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>default_ttl</declname>
        </param>
        <briefdescription>
<para>Set the default TTL value. </para>
        </briefdescription>
        <detaileddescription>
<para>The default TTL value is used when no explicit TTL value is set. Models will use the default TTL value when <ref refid="structbt__mesh__msg__ctx_1a43b0ebfdc3c8018a02886d93dfe2f21b" kindref="member">bt_mesh_msg_ctx::send_ttl</ref> is <ref refid="group__bt__mesh__access_1ga16516272b42420263b1c47c3ea16c0c8" kindref="member">BT_MESH_TTL_DEFAULT</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>default_ttl</parametername>
</parameternamelist>
<parameterdescription>
<para>The new default TTL value. Valid values are 0x00 and 0x02 to <ref refid="group__bt__mesh__access_1ga071e85e929589d31bf876e2e09cf2f19" kindref="member">BT_MESH_TTL_MAX</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully set the default TTL value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid TTL value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="88" column="5" declfile="include/bluetooth/mesh/cfg.h" declline="88" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg_1gaa97f63f5b3167c672fa1a0d8c8fe9ab7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_default_ttl_get</definition>
        <argsstring>(void)</argsstring>
        <name>bt_mesh_default_ttl_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the current default TTL value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current default TTL value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="94" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="94" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg_1gaa652e4f1460f62252065ac21854ab3f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bt_mesh_net_transmit_set</definition>
        <argsstring>(uint8_t xmit)</argsstring>
        <name>bt_mesh_net_transmit_set</name>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>xmit</declname>
        </param>
        <briefdescription>
<para>Set the Network Transmit parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>The Network Transmit parameters determine the parameters local messages are transmitted with.</para>
<para><simplesect kind="see"><para><ref refid="group__bt__mesh__access_1gaff82bf652232fbce71c31f38a10577a9" kindref="member">BT_MESH_TRANSMIT</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmit</parametername>
</parameternamelist>
<parameterdescription>
<para>New Network Transmit parameters. Use <ref refid="group__bt__mesh__access_1gaff82bf652232fbce71c31f38a10577a9" kindref="member">BT_MESH_TRANSMIT</ref> for encoding. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="106" column="6" declfile="include/bluetooth/mesh/cfg.h" declline="106" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg_1ga08b336fa1a4a721ac9b10fbb75e4af6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_net_transmit_get</definition>
        <argsstring>(void)</argsstring>
        <name>bt_mesh_net_transmit_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the current Network Transmit parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__bt__mesh__access_1ga62fda0d731241efbaa4827e4eb9d1795" kindref="member">BT_MESH_TRANSMIT_COUNT</ref> and <ref refid="group__bt__mesh__access_1ga2aa21171c5677d23ad0c472291639417" kindref="member">BT_MESH_TRANSMIT_INT</ref> macros can be used to decode the Network Transmit parameters.</para>
<para><simplesect kind="return"><para>The current Network Transmit parameters. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="115" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="115" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg_1gad8d6773753b80540b2aaa982c1ec8c03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_relay_set</definition>
        <argsstring>(enum bt_mesh_feat_state relay, uint8_t xmit)</argsstring>
        <name>bt_mesh_relay_set</name>
        <param>
          <type>enum <ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref></type>
          <declname>relay</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>xmit</declname>
        </param>
        <briefdescription>
<para>Configure the Relay feature. </para>
        </briefdescription>
        <detaileddescription>
<para>Enable or disable the Relay feature, and configure the parameters to transmit relayed messages with.</para>
<para>Support for the Relay feature must be enabled through the <computeroutput>CONFIG_BT_MESH_RELAY</computeroutput> configuration option.</para>
<para><simplesect kind="see"><para><ref refid="group__bt__mesh__access_1gaff82bf652232fbce71c31f38a10577a9" kindref="member">BT_MESH_TRANSMIT</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>relay</parametername>
</parameternamelist>
<parameterdescription>
<para>New Relay feature state. Must be one of <ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedbabff35d6447ab5608292065f20d1e5275" kindref="member">BT_MESH_FEATURE_ENABLED</ref> and <ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba17b0aabc3d26da41aab09f009004f729" kindref="member">BT_MESH_FEATURE_DISABLED</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmit</parametername>
</parameternamelist>
<parameterdescription>
<para>New Relay retransmit parameters. Use <ref refid="group__bt__mesh__access_1gaff82bf652232fbce71c31f38a10577a9" kindref="member">BT_MESH_TRANSMIT</ref> for encoding.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully changed the Relay configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>The Relay feature is not supported. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>Already using the given parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="138" column="5" declfile="include/bluetooth/mesh/cfg.h" declline="138" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg_1gadb41d2f78a490aa81b5640bb7ff5a5ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref></type>
        <definition>enum bt_mesh_feat_state bt_mesh_relay_get</definition>
        <argsstring>(void)</argsstring>
        <name>bt_mesh_relay_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the current Relay feature state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The Relay feature state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="144" column="24" declfile="include/bluetooth/mesh/cfg.h" declline="144" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg_1gaf9abf4bcba55d273a7e6e8ee42c521a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_relay_retransmit_get</definition>
        <argsstring>(void)</argsstring>
        <name>bt_mesh_relay_retransmit_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the current Relay Retransmit parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__bt__mesh__access_1ga62fda0d731241efbaa4827e4eb9d1795" kindref="member">BT_MESH_TRANSMIT_COUNT</ref> and <ref refid="group__bt__mesh__access_1ga2aa21171c5677d23ad0c472291639417" kindref="member">BT_MESH_TRANSMIT_INT</ref> macros can be used to decode the Relay Retransmit parameters.</para>
<para><simplesect kind="return"><para>The current Relay Retransmit parameters, or 0 if relay is not supported. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="154" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="154" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg_1gaac543b57580f9ac8dff36c0ce1196144" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_gatt_proxy_set</definition>
        <argsstring>(enum bt_mesh_feat_state gatt_proxy)</argsstring>
        <name>bt_mesh_gatt_proxy_set</name>
        <param>
          <type>enum <ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref></type>
          <declname>gatt_proxy</declname>
        </param>
        <briefdescription>
<para>Enable or disable the GATT Proxy feature. </para>
        </briefdescription>
        <detaileddescription>
<para>Support for the GATT Proxy feature must be enabled through the <computeroutput>CONFIG_BT_MESH_GATT_PROXY</computeroutput> configuration option.</para>
<para><simplesect kind="note"><para>The GATT Proxy feature only controls a Proxy node&apos;s ability to relay messages to the mesh network. A node that supports GATT Proxy will still advertise Connectable Proxy beacons, even if the feature is disabled. The Proxy feature can only be fully disabled through compile time configuration.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gatt_proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>New GATT Proxy state. Must be one of <ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedbabff35d6447ab5608292065f20d1e5275" kindref="member">BT_MESH_FEATURE_ENABLED</ref> and <ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba17b0aabc3d26da41aab09f009004f729" kindref="member">BT_MESH_FEATURE_DISABLED</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully changed the GATT Proxy feature state. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>The GATT Proxy feature is not supported. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>Already in the given state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="176" column="5" declfile="include/bluetooth/mesh/cfg.h" declline="176" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg_1ga8457f222211bc812106b2dccc87b1abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref></type>
        <definition>enum bt_mesh_feat_state bt_mesh_gatt_proxy_get</definition>
        <argsstring>(void)</argsstring>
        <name>bt_mesh_gatt_proxy_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the current GATT Proxy state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The GATT Proxy feature state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="182" column="24" declfile="include/bluetooth/mesh/cfg.h" declline="182" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg_1ga74b79bc6a15c35ef399e7d5f7c4d26e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_friend_set</definition>
        <argsstring>(enum bt_mesh_feat_state friendship)</argsstring>
        <name>bt_mesh_friend_set</name>
        <param>
          <type>enum <ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref></type>
          <declname>friendship</declname>
        </param>
        <briefdescription>
<para>Enable or disable the Friend feature. </para>
        </briefdescription>
        <detaileddescription>
<para>Any active friendships will be terminated immediately if the Friend feature is disabled.</para>
<para>Support for the Friend feature must be enabled through the <computeroutput>CONFIG_BT_MESH_FRIEND</computeroutput> configuration option.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>friendship</parametername>
</parameternamelist>
<parameterdescription>
<para>New Friend feature state. Must be one of <ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedbabff35d6447ab5608292065f20d1e5275" kindref="member">BT_MESH_FEATURE_ENABLED</ref> and <ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba17b0aabc3d26da41aab09f009004f729" kindref="member">BT_MESH_FEATURE_DISABLED</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully changed the Friend feature state. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>The Friend feature is not supported. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>Already in the given state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="201" column="5" declfile="include/bluetooth/mesh/cfg.h" declline="201" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg_1gac7b1f1208659c80956e6dab6ac0ebc47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref></type>
        <definition>enum bt_mesh_feat_state bt_mesh_friend_get</definition>
        <argsstring>(void)</argsstring>
        <name>bt_mesh_friend_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the current Friend state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The Friend feature state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="207" column="24" declfile="include/bluetooth/mesh/cfg.h" declline="207" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1ga6a6ba6ac1dcbe5f6cfce9bbf38c1851f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_subnet_add</definition>
        <argsstring>(uint16_t net_idx, const uint8_t key[16])</argsstring>
        <name>bt_mesh_subnet_add</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>key</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
<para>Add a Subnet. </para>
        </briefdescription>
        <detaileddescription>
<para>Adds a subnet with the given network index and network key to the list of known Subnets. All messages sent on the given Subnet will be processed by this node, and the node may send and receive Network Beacons on the given Subnet.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Root network key of the Subnet. All other keys are derived from this.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The Subnet was successfully added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INSUFF_RESOURCES</parametername>
</parameternamelist>
<parameterdescription>
<para>No room for this Subnet. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_UNSPECIFIED</parametername>
</parameternamelist>
<parameterdescription>
<para>The Subnet couldn&apos;t be created for some reason. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="230" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="230" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1ga47236f48940303be27fa6af4797424c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_subnet_update</definition>
        <argsstring>(uint16_t net_idx, const uint8_t key[16])</argsstring>
        <name>bt_mesh_subnet_update</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>key</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
<para>Update the given Subnet. </para>
        </briefdescription>
        <detaileddescription>
<para>Starts the Key Refresh procedure for this Subnet by adding a second set of encryption keys. The Subnet will continue sending with the old key (but receiving messages using both) until the Subnet enters Key Refresh phase 2.</para>
<para>This allows a network configurator to replace old network and application keys for the entire network, effectively removing access for all nodes that aren&apos;t given the new keys.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>New root network key of the Subnet.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The Subnet was updated with a second key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_NETKEY</parametername>
</parameternamelist>
<parameterdescription>
<para>The NetIdx is unknown. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_IDX_ALREADY_STORED</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>key</computeroutput> value is the same as the current key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_CANNOT_UPDATE</parametername>
</parameternamelist>
<parameterdescription>
<para>The Subnet cannot be updated for some reason. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="251" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="251" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1gaec9d827d5f026b473f3ac88988d3c842" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_subnet_del</definition>
        <argsstring>(uint16_t net_idx)</argsstring>
        <name>bt_mesh_subnet_del</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <briefdescription>
<para>Delete a Subnet. </para>
        </briefdescription>
        <detaileddescription>
<para>Removes the Subnet with the given network index from the node. The node will stop sending Network Beacons with the given Subnet, and can no longer process messages on this Subnet.</para>
<para>All Applications bound to this Subnet are also deleted.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The Subnet was deleted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_NETKEY</parametername>
</parameternamelist>
<parameterdescription>
<para>The NetIdx is unknown. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="266" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="266" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1gad48780acaae085350a8b48d033717bfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool bt_mesh_subnet_exists</definition>
        <argsstring>(uint16_t net_idx)</argsstring>
        <name>bt_mesh_subnet_exists</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <briefdescription>
<para>Check whether a Subnet is known. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if a Subnet with the given index exists, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="274" column="6" declfile="include/bluetooth/mesh/cfg.h" declline="274" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1gaef15af43e74e3c71590c63c5f1e3ea55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_subnet_kr_phase_set</definition>
        <argsstring>(uint16_t net_idx, uint8_t *phase)</argsstring>
        <name>bt_mesh_subnet_kr_phase_set</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Set the Subnet&apos;s Key Refresh phase. </para>
        </briefdescription>
        <detaileddescription>
<para>The Key Refresh procedure is started by updating the Subnet keys through <ref refid="group__bt__mesh__cfg__subnet_1ga47236f48940303be27fa6af4797424c2" kindref="member">bt_mesh_subnet_update</ref>. This puts the Subnet in Key Refresh Phase 1. Once all nodes have received the new Subnet key, Key Refresh Phase 2 can be activated through this function to start transmitting with the new network key. Finally, to revoke the old key, set the Key Refresh Phase to 3. This removes the old keys from the node, and returns the Subnet back to normal single-key operation with the new key set.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phase</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the new Key Refresh phase. Will return the actual Key Refresh phase after updating.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The Key Refresh phase of the Subnet was successfully changed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_NETKEY</parametername>
</parameternamelist>
<parameterdescription>
<para>The NetIdx is unknown. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_CANNOT_UPDATE</parametername>
</parameternamelist>
<parameterdescription>
<para>The given phase change is invalid. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="295" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="295" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1gad251907892150649f3f1ae6b4112cd84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_subnet_kr_phase_get</definition>
        <argsstring>(uint16_t net_idx, uint8_t *phase)</argsstring>
        <name>bt_mesh_subnet_kr_phase_get</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Get the Subnet&apos;s Key Refresh phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phase</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Key Refresh variable to fill.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully populated the <computeroutput>phase</computeroutput> variable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_NETKEY</parametername>
</parameternamelist>
<parameterdescription>
<para>The NetIdx is unknown. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="305" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="305" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1ga59bf9f022665edc0ad03267e4bd16632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_subnet_node_id_set</definition>
        <argsstring>(uint16_t net_idx, enum bt_mesh_feat_state node_id)</argsstring>
        <name>bt_mesh_subnet_node_id_set</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <param>
          <type>enum <ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref></type>
          <declname>node_id</declname>
        </param>
        <briefdescription>
<para>Set the Node Identity state of the Subnet. </para>
        </briefdescription>
        <detaileddescription>
<para>The Node Identity state of a Subnet determines whether the Subnet advertises connectable Node Identity beacons for Proxy Clients to connect to. Once started, the Node Identity beacon runs for 60 seconds, or until it is stopped.</para>
<para>This function serves the same purpose as <ref refid="group__bt__mesh__proxy_1ga7fb3c76f1be6943dd4a18f26e8dd18e7" kindref="member">bt_mesh_proxy_identity_enable</ref>, but only acts on a single Subnet.</para>
<para>GATT Proxy support must be enabled through <verbatim>embed:rst:inline :kconfig:`CONFIG_BT_MESH_GATT_PROXY` </verbatim>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>New Node Identity state, must be either <ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedbabff35d6447ab5608292065f20d1e5275" kindref="member">BT_MESH_FEATURE_ENABLED</ref> or <ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba17b0aabc3d26da41aab09f009004f729" kindref="member">BT_MESH_FEATURE_DISABLED</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully set the Node Identity state of the Subnet. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_NETKEY</parametername>
</parameternamelist>
<parameterdescription>
<para>The NetIdx is unknown. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_FEAT_NOT_SUPP</parametername>
</parameternamelist>
<parameterdescription>
<para>The Node Identity feature is not supported. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_CANNOT_SET</parametername>
</parameternamelist>
<parameterdescription>
<para>Couldn&apos;t set the Node Identity state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="330" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="330" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1ga683d1f9abe82649a774b3d53dcaced8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_subnet_node_id_get</definition>
        <argsstring>(uint16_t net_idx, enum bt_mesh_feat_state *node_id)</argsstring>
        <name>bt_mesh_subnet_node_id_get</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <param>
          <type>enum <ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref> *</type>
          <declname>node_id</declname>
        </param>
        <briefdescription>
<para>Get the Node Identity state of the Subnet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Node Identity variable to fill.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully populated the <computeroutput>node_id</computeroutput> variable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_NETKEY</parametername>
</parameternamelist>
<parameterdescription>
<para>The NetIdx is unknown. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="341" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="341" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1ga0fd04bff5423a36b013089a4ba351d67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>ssize_t bt_mesh_subnets_get</definition>
        <argsstring>(uint16_t net_idxs[], size_t max, off_t skip)</argsstring>
        <name>bt_mesh_subnets_get</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idxs</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>max</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>skip</declname>
        </param>
        <briefdescription>
<para>Get a list of all known Subnet indexes. </para>
        </briefdescription>
        <detaileddescription>
<para>Builds a list of all known Subnet indexes in the <computeroutput>net_idxs</computeroutput> array. If the <computeroutput>net_idxs</computeroutput> array is smaller than the list of known Subnets, this function fills all available entries and returns <computeroutput>-ENOMEM</computeroutput>. In this case, the next <computeroutput>max</computeroutput> entries of the list can be read out by calling <programlisting><codeline><highlight class="normal">bt_mesh_subnets_get(list,<sp/>max,<sp/>max);</highlight></codeline>
</programlisting></para>
<para>Note that any changes to the Subnet list between calls to this function could change the order and number of entries in the list.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idxs</parametername>
</parameternamelist>
<parameterdescription>
<para>Array to fill. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>Max number of indexes to return. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>skip</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of indexes to skip. Enables batched processing of the list.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of indexes added to the <computeroutput>net_idxs</computeroutput> array, or <computeroutput>-ENOMEM</computeroutput> if the number of known Subnets exceeds the <computeroutput>max</computeroutput> parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="365" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="365" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__app_1ga0110ef750489af49a156a259c5a95c9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_app_key_add</definition>
        <argsstring>(uint16_t app_idx, uint16_t net_idx, const uint8_t key[16])</argsstring>
        <name>bt_mesh_app_key_add</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>app_idx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>key</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
<para>Add an Application key. </para>
        </briefdescription>
        <detaileddescription>
<para>Adds the Application with the given index to the list of known applications. Allows the node to send and receive model messages encrypted with this Application key.</para>
<para>Every Application is bound to a specific Subnet. The node must know the Subnet the Application is bound to before it can add the Application.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>app_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Application index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index the Application is bound to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Application key value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The Application was successfully added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_NETKEY</parametername>
</parameternamelist>
<parameterdescription>
<para>The NetIdx is unknown. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INSUFF_RESOURCES</parametername>
</parameternamelist>
<parameterdescription>
<para>There&apos;s no room for storing this Application. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_BINDING</parametername>
</parameternamelist>
<parameterdescription>
<para>This AppIdx is already bound to another Subnet. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_IDX_ALREADY_STORED</parametername>
</parameternamelist>
<parameterdescription>
<para>This AppIdx is already stored with a different key value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_CANNOT_SET</parametername>
</parameternamelist>
<parameterdescription>
<para>Cannot set the Application key for some reason. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="400" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="400" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__app_1ga5ae73ef766f0e1c38c0414c0a34e4053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_app_key_update</definition>
        <argsstring>(uint16_t app_idx, uint16_t net_idx, const uint8_t key[16])</argsstring>
        <name>bt_mesh_app_key_update</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>app_idx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>key</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
<para>Update an Application key. </para>
        </briefdescription>
        <detaileddescription>
<para>Update an Application with a second Application key, as part of the Key Refresh procedure of the bound Subnet. The node will continue transmitting with the old application key (but receiving on both) until the Subnet enters Key Refresh phase 2. Once the Subnet enters Key Refresh phase 3, the old application key will be deleted.</para>
<para><simplesect kind="note"><para>The Application key can only be updated if the bound Subnet is in Key Refresh phase 1.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>app_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Application index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index the Application is bound to, or <ref refid="group__bt__mesh__access_1ga7718cce0713be98a08420c7eab1b40ee" kindref="member">BT_MESH_KEY_ANY</ref> to skip the binding check. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>New key value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The Application key was successfully updated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_NETKEY</parametername>
</parameternamelist>
<parameterdescription>
<para>The NetIdx is unknown. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_BINDING</parametername>
</parameternamelist>
<parameterdescription>
<para>This AppIdx is not bound to the given NetIdx. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_CANNOT_UPDATE</parametername>
</parameternamelist>
<parameterdescription>
<para>The Application key cannot be updated for some reason. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_IDX_ALREADY_STORED</parametername>
</parameternamelist>
<parameterdescription>
<para>This AppIdx is already updated with a different key value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="427" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="427" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__app_1gaa0e80a19c14d47808fc11459bf5ea2eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_app_key_del</definition>
        <argsstring>(uint16_t app_idx, uint16_t net_idx)</argsstring>
        <name>bt_mesh_app_key_del</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>app_idx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <briefdescription>
<para>Delete an Application key. </para>
        </briefdescription>
        <detaileddescription>
<para>All models bound to this application will remove this binding. All models publishing with this application will stop publishing.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>app_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Application index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The Application key was successfully deleted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_NETKEY</parametername>
</parameternamelist>
<parameterdescription>
<para>The NetIdx is unknown. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_BINDING</parametername>
</parameternamelist>
<parameterdescription>
<para>This AppIdx is not bound to the given NetIdx. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="442" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="442" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__app_1ga42c46a936e589460225a1fa69598a1ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool bt_mesh_app_key_exists</definition>
        <argsstring>(uint16_t app_idx)</argsstring>
        <name>bt_mesh_app_key_exists</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>app_idx</declname>
        </param>
        <briefdescription>
<para>Check if an Application key is known. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>app_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Application index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the Application is known, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="450" column="6" declfile="include/bluetooth/mesh/cfg.h" declline="450" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__app_1gad7a949a0a814f6c9a26816c076d8b92a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>ssize_t bt_mesh_app_keys_get</definition>
        <argsstring>(uint16_t net_idx, uint16_t app_idxs[], size_t max, off_t skip)</argsstring>
        <name>bt_mesh_app_keys_get</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>app_idxs</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>max</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>skip</declname>
        </param>
        <briefdescription>
<para>Get a list of all known Application key indexes. </para>
        </briefdescription>
        <detaileddescription>
<para>Builds a list of all Application indexes for the given network index in the <computeroutput>app_idxs</computeroutput> array. If the <computeroutput>app_idxs</computeroutput> array cannot fit all bound Applications, this function fills all available entries and returns <computeroutput>-ENOMEM</computeroutput>. In this case, the next <computeroutput>max</computeroutput> entries of the list can be read out by calling <programlisting><codeline><highlight class="normal">bt_mesh_app_keys_get(net_idx,<sp/>list,<sp/>max,<sp/>max);</highlight></codeline>
</programlisting></para>
<para>Note that any changes to the Application key list between calls to this function could change the order and number of entries in the list.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network Index to get the Applications of, or <ref refid="group__bt__mesh__access_1ga7718cce0713be98a08420c7eab1b40ee" kindref="member">BT_MESH_KEY_ANY</ref> to get all Applications. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>app_idxs</parametername>
</parameternamelist>
<parameterdescription>
<para>Array to fill. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>Max number of indexes to return. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>skip</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of indexes to skip. Enables batched processing of the list.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of indexes added to the <computeroutput>app_idxs</computeroutput> array, or <computeroutput>-ENOMEM</computeroutput> if the number of known Applications exceeds the <computeroutput>max</computeroutput> parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="476" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="476" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Runtime configuration APIs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Nordic<sp/>Semiconductor</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_BLUETOOTH_MESH_CFG_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_BLUETOOTH_MESH_CFG_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdbool_8h" kindref="compound">stdbool.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h" kindref="compound">sys/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref><sp/>{</highlight></codeline>
<codeline lineno="31" refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba17b0aabc3d26da41aab09f009004f729" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba17b0aabc3d26da41aab09f009004f729" kindref="member">BT_MESH_FEATURE_DISABLED</ref>,</highlight></codeline>
<codeline lineno="33" refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedbabff35d6447ab5608292065f20d1e5275" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedbabff35d6447ab5608292065f20d1e5275" kindref="member">BT_MESH_FEATURE_ENABLED</ref>,</highlight></codeline>
<codeline lineno="35" refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba1e42ee4fce611297ef133bd8260ecdd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba1e42ee4fce611297ef133bd8260ecdd0" kindref="member">BT_MESH_FEATURE_NOT_SUPPORTED</ref>,</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Key<sp/>Refresh<sp/>Phase<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="group__bt__mesh__cfg_1ga5b3af48dfe15948654b7791d7a684ba8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_KR_NORMAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="group__bt__mesh__cfg_1ga139d621ce45ea87b4d8a15fc2b29dbe3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_KR_PHASE_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="group__bt__mesh__cfg_1gaff6e8f59719f341ab681268e421b1612" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_KR_PHASE_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="group__bt__mesh__cfg_1gab0e65cdc2b152d3b84615223fdaebb2e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_KR_PHASE_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Legacy<sp/>feature<sp/>defines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="group__bt__mesh__cfg_1gaafd10319da7d2f938207b8fd6de02dbc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_RELAY_DISABLED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_FEATURE_DISABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="group__bt__mesh__cfg_1gae5d235a7c182a8add961d7ce344f87aa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_RELAY_ENABLED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_FEATURE_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group__bt__mesh__cfg_1gabbbbddd31c2a92256fe2f7a7520e76f7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_RELAY_NOT_SUPPORTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_FEATURE_NOT_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="group__bt__mesh__cfg_1ga8fa3d0ac3cb9f69464c4068ca61689b9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_BEACON_DISABLED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_FEATURE_DISABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group__bt__mesh__cfg_1ga01235217559423b93d7e6cf2236278f0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_BEACON_ENABLED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_FEATURE_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group__bt__mesh__cfg_1ga3fe3e68efd25a3a03a041b978435fd7b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_GATT_PROXY_DISABLED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_FEATURE_DISABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="group__bt__mesh__cfg_1ga77f4438624aae49ea2bb66437c9623f7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_GATT_PROXY_ENABLED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_FEATURE_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group__bt__mesh__cfg_1gaecec3747198a29dd10185e3755e660f8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_GATT_PROXY_NOT_SUPPORTED<sp/><sp/><sp/><sp/>BT_MESH_FEATURE_NOT_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="group__bt__mesh__cfg_1ga29fe48989e760438f2c5241110134c8c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_FRIEND_DISABLED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_FEATURE_DISABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="group__bt__mesh__cfg_1gaa23bba212dc1b322651723ca20f497a3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_FRIEND_ENABLED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_FEATURE_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group__bt__mesh__cfg_1ga35f85e6a9c085cdad4f70b8e60d0b027" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_FRIEND_NOT_SUPPORTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_FEATURE_NOT_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="group__bt__mesh__cfg_1ga9a83214cdbd34ac1d4bc644136523bd9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_NODE_IDENTITY_STOPPED<sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_FEATURE_DISABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group__bt__mesh__cfg_1ga86e88acc6fdcc26a9cea4415daad016c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_NODE_IDENTITY_RUNNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_FEATURE_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="group__bt__mesh__cfg_1ga7ffe6722b12a8663518b4e17349e4da5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_NODE_IDENTITY_NOT_SUPPORTED<sp/>BT_MESH_FEATURE_NOT_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="group__bt__mesh__cfg_1ga15de1cdc964628b6f001ef893021ce6e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg_1ga15de1cdc964628b6f001ef893021ce6e" kindref="member">bt_mesh_beacon_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>beacon);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="group__bt__mesh__cfg_1ga479c14f6b0d4a08ddf5b160fa9267844" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg_1ga479c14f6b0d4a08ddf5b160fa9267844" kindref="member">bt_mesh_beacon_enabled</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="group__bt__mesh__cfg_1gaafea57625c9fdba535431cc92dadd162" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg_1gaafea57625c9fdba535431cc92dadd162" kindref="member">bt_mesh_default_ttl_set</ref>(<ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>default_ttl);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="group__bt__mesh__cfg_1gaa97f63f5b3167c672fa1a0d8c8fe9ab7" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__bt__mesh__cfg_1gaa97f63f5b3167c672fa1a0d8c8fe9ab7" kindref="member">bt_mesh_default_ttl_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="group__bt__mesh__cfg_1gaa652e4f1460f62252065ac21854ab3f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg_1gaa652e4f1460f62252065ac21854ab3f6" kindref="member">bt_mesh_net_transmit_set</ref>(<ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>xmit);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="group__bt__mesh__cfg_1ga08b336fa1a4a721ac9b10fbb75e4af6b" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__bt__mesh__cfg_1ga08b336fa1a4a721ac9b10fbb75e4af6b" kindref="member">bt_mesh_net_transmit_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="group__bt__mesh__cfg_1gad8d6773753b80540b2aaa982c1ec8c03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg_1gad8d6773753b80540b2aaa982c1ec8c03" kindref="member">bt_mesh_relay_set</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref><sp/>relay,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>xmit);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="group__bt__mesh__cfg_1gadb41d2f78a490aa81b5640bb7ff5a5ce" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref><sp/><ref refid="group__bt__mesh__cfg_1gadb41d2f78a490aa81b5640bb7ff5a5ce" kindref="member">bt_mesh_relay_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="group__bt__mesh__cfg_1gaf9abf4bcba55d273a7e6e8ee42c521a9" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__bt__mesh__cfg_1gaf9abf4bcba55d273a7e6e8ee42c521a9" kindref="member">bt_mesh_relay_retransmit_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="group__bt__mesh__cfg_1gaac543b57580f9ac8dff36c0ce1196144" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg_1gaac543b57580f9ac8dff36c0ce1196144" kindref="member">bt_mesh_gatt_proxy_set</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref><sp/>gatt_proxy);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="group__bt__mesh__cfg_1ga8457f222211bc812106b2dccc87b1abe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref><sp/><ref refid="group__bt__mesh__cfg_1ga8457f222211bc812106b2dccc87b1abe" kindref="member">bt_mesh_gatt_proxy_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="group__bt__mesh__cfg_1ga74b79bc6a15c35ef399e7d5f7c4d26e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg_1ga74b79bc6a15c35ef399e7d5f7c4d26e6" kindref="member">bt_mesh_friend_set</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref><sp/>friendship);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="group__bt__mesh__cfg_1gac7b1f1208659c80956e6dab6ac0ebc47" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref><sp/><ref refid="group__bt__mesh__cfg_1gac7b1f1208659c80956e6dab6ac0ebc47" kindref="member">bt_mesh_friend_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="group__bt__mesh__cfg__subnet_1ga6a6ba6ac1dcbe5f6cfce9bbf38c1851f" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__bt__mesh__cfg__subnet_1ga6a6ba6ac1dcbe5f6cfce9bbf38c1851f" kindref="member">bt_mesh_subnet_add</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>net_idx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>[16]);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="group__bt__mesh__cfg__subnet_1ga47236f48940303be27fa6af4797424c2" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__bt__mesh__cfg__subnet_1ga47236f48940303be27fa6af4797424c2" kindref="member">bt_mesh_subnet_update</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>net_idx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>[16]);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="group__bt__mesh__cfg__subnet_1gaec9d827d5f026b473f3ac88988d3c842" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__bt__mesh__cfg__subnet_1gaec9d827d5f026b473f3ac88988d3c842" kindref="member">bt_mesh_subnet_del</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>net_idx);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="group__bt__mesh__cfg__subnet_1gad48780acaae085350a8b48d033717bfa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg__subnet_1gad48780acaae085350a8b48d033717bfa" kindref="member">bt_mesh_subnet_exists</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>net_idx);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="group__bt__mesh__cfg__subnet_1gaef15af43e74e3c71590c63c5f1e3ea55" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__bt__mesh__cfg__subnet_1gaef15af43e74e3c71590c63c5f1e3ea55" kindref="member">bt_mesh_subnet_kr_phase_set</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>net_idx,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*phase);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="group__bt__mesh__cfg__subnet_1gad251907892150649f3f1ae6b4112cd84" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__bt__mesh__cfg__subnet_1gad251907892150649f3f1ae6b4112cd84" kindref="member">bt_mesh_subnet_kr_phase_get</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>net_idx,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*phase);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="group__bt__mesh__cfg__subnet_1ga59bf9f022665edc0ad03267e4bd16632" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__bt__mesh__cfg__subnet_1ga59bf9f022665edc0ad03267e4bd16632" kindref="member">bt_mesh_subnet_node_id_set</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>net_idx,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref><sp/>node_id);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="group__bt__mesh__cfg__subnet_1ga683d1f9abe82649a774b3d53dcaced8e" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__bt__mesh__cfg__subnet_1ga683d1f9abe82649a774b3d53dcaced8e" kindref="member">bt_mesh_subnet_node_id_get</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>net_idx,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref><sp/>*node_id);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="group__bt__mesh__cfg__subnet_1ga0fd04bff5423a36b013089a4ba351d67" refkind="member"><highlight class="normal"><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref><sp/><ref refid="group__bt__mesh__cfg__subnet_1ga0fd04bff5423a36b013089a4ba351d67" kindref="member">bt_mesh_subnets_get</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>net_idxs[],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max,<sp/>off_t<sp/>skip);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="group__bt__mesh__cfg__app_1ga0110ef750489af49a156a259c5a95c9b" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__bt__mesh__cfg__app_1ga0110ef750489af49a156a259c5a95c9b" kindref="member">bt_mesh_app_key_add</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>app_idx,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>net_idx,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>[16]);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="group__bt__mesh__cfg__app_1ga5ae73ef766f0e1c38c0414c0a34e4053" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__bt__mesh__cfg__app_1ga5ae73ef766f0e1c38c0414c0a34e4053" kindref="member">bt_mesh_app_key_update</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>app_idx,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>net_idx,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>[16]);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="group__bt__mesh__cfg__app_1gaa0e80a19c14d47808fc11459bf5ea2eb" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__bt__mesh__cfg__app_1gaa0e80a19c14d47808fc11459bf5ea2eb" kindref="member">bt_mesh_app_key_del</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>app_idx,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>net_idx);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="group__bt__mesh__cfg__app_1ga42c46a936e589460225a1fa69598a1ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__cfg__app_1ga42c46a936e589460225a1fa69598a1ac" kindref="member">bt_mesh_app_key_exists</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>app_idx);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="group__bt__mesh__cfg__app_1gad7a949a0a814f6c9a26816c076d8b92a" refkind="member"><highlight class="normal"><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref><sp/><ref refid="group__bt__mesh__cfg__app_1gad7a949a0a814f6c9a26816c076d8b92a" kindref="member">bt_mesh_app_keys_get</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>net_idx,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>app_idxs[],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>off_t<sp/>skip);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_BLUETOOTH_MESH_CFG_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/bluetooth/mesh/cfg.h"/>
  </compounddef>
</doxygen>
