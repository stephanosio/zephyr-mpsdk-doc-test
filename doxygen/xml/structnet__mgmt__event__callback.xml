<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structnet__mgmt__event__callback" kind="struct" language="C++" prot="public">
    <compoundname>net_mgmt_event_callback</compoundname>
    <includes refid="net__mgmt_8h" local="no">net_mgmt.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnet__mgmt__event__callback_1a05a4f445731f9f72209a652f2653e1ea" prot="public" static="no" mutable="no">
        <type><ref refid="slist_8h_1a69bf43aad81e3ee2d55250c59b857493" kindref="member">sys_snode_t</ref></type>
        <definition>sys_snode_t net_mgmt_event_callback::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Meant to be used internally, to insert the callback into a list. So nobody should mess with it. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="127" column="13" bodyfile="include/net/net_mgmt.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__mgmt__event__callback_1ada57aabc8acc3e9be93fb2726321f1b2" prot="public" static="no" mutable="no">
        <type><ref refid="group__net__mgmt_1ga01c7010a1ad7e89f314dfedd531dcbd2" kindref="member">net_mgmt_event_handler_t</ref></type>
        <definition>net_mgmt_event_handler_t net_mgmt_event_callback::handler</definition>
        <argsstring></argsstring>
        <name>handler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Actual callback function being used to notify the owner </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="132" column="26" bodyfile="include/net/net_mgmt.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__mgmt__event__callback_1a7403d98fe528c492a4b1b449b43c10d3" prot="public" static="no" mutable="no">
        <type>struct k_sem *</type>
        <definition>struct k_sem* net_mgmt_event_callback::sync_call</definition>
        <argsstring></argsstring>
        <name>sync_call</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Semaphore meant to be used internaly for the synchronous <ref refid="group__net__mgmt_1gacbaa95c65717747d802dc80eb745aa17" kindref="member">net_mgmt_event_wait()</ref> function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="136" column="12" bodyfile="include/net/net_mgmt.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__mgmt__event__callback_1a118dfd9b03e4144216f6d518428b8825" prot="public" static="no" mutable="no">
        <type>union net_mgmt_event_callback::@178</type>
        <definition>union net_mgmt_event_callback::@178 net_mgmt_event_callback::@179</definition>
        <argsstring></argsstring>
        <name>@179</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__mgmt__event__callback_1acd2d06e59f71b30e6d9089c165c4a589" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t net_mgmt_event_callback::event_mask</definition>
        <argsstring></argsstring>
        <name>event_mask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A mask of network events on which the above handler should be called in case those events come. Note that only the command part is treated as a mask, matching one to several commands. Layer and layer code will be made of an exact match. This means that in order to receive events from multiple layers, one must have multiple listeners registered, one for each layer being listened. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="158" column="10" bodyfile="include/net/net_mgmt.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__mgmt__event__callback_1a7c92da4524db9294d9a157606b85c497" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t net_mgmt_event_callback::raised_event</definition>
        <argsstring></argsstring>
        <name>raised_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Internal place holder when a synchronous event wait is successfully unlocked on a event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="162" column="10" bodyfile="include/net/net_mgmt.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__mgmt__event__callback_1a3a6de8a158df59c6b2d2cc685715ecc9" prot="public" static="no" mutable="no">
        <type>union net_mgmt_event_callback::@180</type>
        <definition>union net_mgmt_event_callback::@180 net_mgmt_event_callback::@181</definition>
        <argsstring></argsstring>
        <name>@181</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A mask of network events on which the above handler should be called in case those events come. Such mask can be modified whenever necessary by the owner, and thus will affect the handler being called or not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="163" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Network Management event callback structure Used to register a callback into the network management event part, in order to let the owner of this struct to get network event notification based on given event mask. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>_snode</label>
      </node>
      <node id="1">
        <label>net_mgmt_event_callback</label>
        <link refid="structnet__mgmt__event__callback"/>
        <childnode refid="2" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>handler</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/net/net_mgmt.h" line="123" column="1" bodyfile="include/net/net_mgmt.h" bodystart="123" bodyend="164"/>
    <listofallmembers>
      <member refid="structnet__mgmt__event__callback_1acd2d06e59f71b30e6d9089c165c4a589" prot="public" virt="non-virtual"><scope>net_mgmt_event_callback</scope><name>event_mask</name></member>
      <member refid="structnet__mgmt__event__callback_1ada57aabc8acc3e9be93fb2726321f1b2" prot="public" virt="non-virtual"><scope>net_mgmt_event_callback</scope><name>handler</name></member>
      <member refid="structnet__mgmt__event__callback_1a05a4f445731f9f72209a652f2653e1ea" prot="public" virt="non-virtual"><scope>net_mgmt_event_callback</scope><name>node</name></member>
      <member refid="structnet__mgmt__event__callback_1a7c92da4524db9294d9a157606b85c497" prot="public" virt="non-virtual"><scope>net_mgmt_event_callback</scope><name>raised_event</name></member>
      <member refid="structnet__mgmt__event__callback_1a7403d98fe528c492a4b1b449b43c10d3" prot="public" virt="non-virtual"><scope>net_mgmt_event_callback</scope><name>sync_call</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
