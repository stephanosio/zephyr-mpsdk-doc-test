<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structmedia__proxy__pl__calls" kind="struct" language="C++" prot="public">
    <compoundname>media_proxy_pl_calls</compoundname>
    <includes refid="media__proxy_8h" local="no">media_proxy.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a2946f7572e12ffabc5f6ba2f562d52cf" prot="public" static="no" mutable="no">
        <type>const char *(*</type>
        <definition>const char *(* media_proxy_pl_calls::get_player_name) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_player_name</name>
        <briefdescription>
<para>Read Media Player Name. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The name of the media player </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1111" column="7" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1ad1215725454c6b76dcdc197a275c03cf" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref>(*</type>
        <definition>uint64_t(* media_proxy_pl_calls::get_icon_id) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_icon_id</name>
        <briefdescription>
<para>Read Icon Object ID. </para>
        </briefdescription>
        <detaileddescription>
<para>Get an ID (48 bit) that can be used to retrieve the Icon Object from an Object Transfer Service</para>
<para>See the Media Control Service spec v1.0 sections 3.2 and 4.1 for a description of the Icon Object.</para>
<para><simplesect kind="return"><para>The Icon Object ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1124" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a319dd309f94c45292613ab9caa0e399b" prot="public" static="no" mutable="no">
        <type>const char *(*</type>
        <definition>const char *(* media_proxy_pl_calls::get_icon_url) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_icon_url</name>
        <briefdescription>
<para>Read Icon URL. </para>
        </briefdescription>
        <detaileddescription>
<para>Get a URL to the media player&apos;s icon.</para>
<para><simplesect kind="return"><para>The URL of the Icon </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1133" column="7" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1af9fc0af545c8c28f8f4dbf8c6afb4acf" prot="public" static="no" mutable="no">
        <type>const char *(*</type>
        <definition>const char *(* media_proxy_pl_calls::get_track_title) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_track_title</name>
        <briefdescription>
<para>Read Track Title. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The title of the current track </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1140" column="7" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a1b852ccc45a6ee1174b9d58df3b599b6" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref>(*</type>
        <definition>int32_t(* media_proxy_pl_calls::get_track_duration) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_track_duration</name>
        <briefdescription>
<para>Read Track Duration. </para>
        </briefdescription>
        <detaileddescription>
<para>The duration of a track is measured in hundredths of a second.</para>
<para><simplesect kind="return"><para>The duration of the current track </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1150" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a11ea1cf984a7d11ac7e61405df84ee06" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref>(*</type>
        <definition>int32_t(* media_proxy_pl_calls::get_track_position) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_track_position</name>
        <briefdescription>
<para>Read Track Position. </para>
        </briefdescription>
        <detaileddescription>
<para>The position of the player (the playing position) is measured in hundredths of a second from the beginning of the track</para>
<para><simplesect kind="return"><para>The position of the player in the current track </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1161" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a001ae07161b8a6c7dfc9c2e471f229e5" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_pl_calls::set_track_position) (int32_t position)</definition>
        <argsstring>)(int32_t position)</argsstring>
        <name>set_track_position</name>
        <briefdescription>
<para>Set Track Position. </para>
        </briefdescription>
        <detaileddescription>
<para>Set the playing position of the media player in the current track. The position is given in in hundredths of a second, from the beginning of the track of the track for positive values, and (backwards) from the end of the track for negative values.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The player position to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1174" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1ae1006d5c684e12e1e1c927f71aa93930" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref>(*</type>
        <definition>int8_t(* media_proxy_pl_calls::get_playback_speed) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_playback_speed</name>
        <briefdescription>
<para>Get Playback Speed. </para>
        </briefdescription>
        <detaileddescription>
<para>The playback speed parameter is related to the actual playback speed as follows: actual playback speed = 2^(speed_parameter/64)</para>
<para>A speed parameter of 0 corresponds to unity speed playback (i.e. playback at &quot;normal&quot; speed). A speed parameter of -128 corresponds to playback at one fourth of normal speed, 127 corresponds to playback at almost four times the normal speed.</para>
<para><simplesect kind="return"><para>The playback speed parameter </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1191" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a7535dad9be2f4b83c8a7c55fccc8a7af" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_pl_calls::set_playback_speed) (int8_t speed)</definition>
        <argsstring>)(int8_t speed)</argsstring>
        <name>set_playback_speed</name>
        <briefdescription>
<para>Set Playback Speed. </para>
        </briefdescription>
        <detaileddescription>
<para>See the <ref refid="structmedia__proxy__pl__calls_1ae1006d5c684e12e1e1c927f71aa93930" kindref="member">get_playback_speed()</ref> function for an explanation of the playback speed parameter.</para>
<para>Note that the media player may not support all possible values of the playback speed parameter. If the value given is not supported, and is higher than the current value, the player should set the playback speed to the next higher supported value. (And correspondingly to the next lower supported value for given values lower than the current value.)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>The playback speed parameter to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1209" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1aebf24b582cf33786f2dc17765d858a15" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref>(*</type>
        <definition>int8_t(* media_proxy_pl_calls::get_seeking_speed) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_seeking_speed</name>
        <briefdescription>
<para>Get Seeking Speed. </para>
        </briefdescription>
        <detaileddescription>
<para>The seeking speed gives the speed with which the player is seeking. It is a factor, relative to real-time playback speed - a factor four means seeking happens at four times the real-time playback speed. Positive values are for forward seeking, negative values for backwards seeking.</para>
<para>The seeking speed is not setable - a non-zero seeking speed is the result of &quot;fast rewind&quot; of &quot;fast forward&quot; commands.</para>
<para><simplesect kind="return"><para>The seeking speed factor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1225" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a86a71b788b54a4e7c966f162fcab6433" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref>(*</type>
        <definition>uint64_t(* media_proxy_pl_calls::get_track_segments_id) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_track_segments_id</name>
        <briefdescription>
<para>Read Current Track Segments Object ID. </para>
        </briefdescription>
        <detaileddescription>
<para>Get an ID (48 bit) that can be used to retrieve the Current Track Segments Object from an Object Transfer Service</para>
<para>See the Media Control Service spec v1.0 sections 3.10 and 4.2 for a description of the Track Segments Object.</para>
<para><simplesect kind="return"><para>Current The Track Segments Object ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1238" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a7f19bd75114835d151ff5b26733ed450" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref>(*</type>
        <definition>uint64_t(* media_proxy_pl_calls::get_current_track_id) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_current_track_id</name>
        <briefdescription>
<para>Read Current Track Object ID. </para>
        </briefdescription>
        <detaileddescription>
<para>Get an ID (48 bit) that can be used to retrieve the Current Track Object from an Object Transfer Service</para>
<para>See the Media Control Service spec v1.0 sections 3.11 and 4.3 for a description of the Current Track Object.</para>
<para><simplesect kind="return"><para>The Current Track Object ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1251" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a422cec33063313a9aab86baf0bd65ef1" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_pl_calls::set_current_track_id) (uint64_t id)</definition>
        <argsstring>)(uint64_t id)</argsstring>
        <name>set_current_track_id</name>
        <briefdescription>
<para>Set Current Track Object ID. </para>
        </briefdescription>
        <detaileddescription>
<para>Change the player&apos;s current track to the track given by the ID. (Behaves similarly to the goto track command.)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of a track object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1261" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1af939a96fbcfe474dfcdcfb353ae0aac5" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref>(*</type>
        <definition>uint64_t(* media_proxy_pl_calls::get_next_track_id) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_next_track_id</name>
        <briefdescription>
<para>Read Next Track Object ID. </para>
        </briefdescription>
        <detaileddescription>
<para>Get an ID (48 bit) that can be used to retrieve the Next Track Object from an Object Transfer Service</para>
<para><simplesect kind="return"><para>The Next Track Object ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1271" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1acbf8dc9dcc8fbaba44d436310c92f3a9" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_pl_calls::set_next_track_id) (uint64_t id)</definition>
        <argsstring>)(uint64_t id)</argsstring>
        <name>set_next_track_id</name>
        <briefdescription>
<para>Set Next Track Object ID. </para>
        </briefdescription>
        <detaileddescription>
<para>Change the player&apos;s next track to the track given by the ID.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of a track object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1280" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a1409764199d47d0c27d07e13c8fa8f68" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref>(*</type>
        <definition>uint64_t(* media_proxy_pl_calls::get_parent_group_id) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_parent_group_id</name>
        <briefdescription>
<para>Read Parent Group Object ID. </para>
        </briefdescription>
        <detaileddescription>
<para>Get an ID (48 bit) that can be used to retrieve the Parent Track Object from an Object Transfer Service</para>
<para>The parent group is the parent of the current group.</para>
<para>See the Media Control Service spec v1.0 sections 3.14 and 4.4 for a description of the Current Track Object.</para>
<para><simplesect kind="return"><para>The Current Group Object ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1295" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a98b02d4689cd5e279f43094f3ca09339" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref>(*</type>
        <definition>uint64_t(* media_proxy_pl_calls::get_current_group_id) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_current_group_id</name>
        <briefdescription>
<para>Read Current Group Object ID. </para>
        </briefdescription>
        <detaileddescription>
<para>Get an ID (48 bit) that can be used to retrieve the Current Track Object from an Object Transfer Service</para>
<para>See the Media Control Service spec v1.0 sections 3.14 and 4.4 for a description of the Current Group Object.</para>
<para><simplesect kind="return"><para>The Current Group Object ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1308" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a5049e21965e7fd08aaeafcbedf76809c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_pl_calls::set_current_group_id) (uint64_t id)</definition>
        <argsstring>)(uint64_t id)</argsstring>
        <name>set_current_group_id</name>
        <briefdescription>
<para>Set Current Group Object ID. </para>
        </briefdescription>
        <detaileddescription>
<para>Change the player&apos;s current group to the group given by the ID, and the current track to the first track in that group.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of a group object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1318" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a98989105d01265de4b268b623a26df2e" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref>(*</type>
        <definition>uint8_t(* media_proxy_pl_calls::get_playing_order) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_playing_order</name>
        <briefdescription>
<para>Read Playing Order. </para>
        </briefdescription>
        <detaileddescription>
<para>return The media player&apos;s current playing order </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1325" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1ad6fad92957146aeaf1bec0e56606da72" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_pl_calls::set_playing_order) (uint8_t order)</definition>
        <argsstring>)(uint8_t order)</argsstring>
        <name>set_playing_order</name>
        <briefdescription>
<para>Set Playing Order. </para>
        </briefdescription>
        <detaileddescription>
<para>Set the media player&apos;s playing order See the Media Control Service spec, or the BT_MCS_PLAYING_ORDER_* defines in the <ref refid="mcs_8h" kindref="compound">mcs.h</ref> file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>order</parametername>
</parameternamelist>
<parameterdescription>
<para>The playing order to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1336" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a9b733c3187cc032ef6644a16ffd3f7c9" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref>(*</type>
        <definition>uint16_t(* media_proxy_pl_calls::get_playing_orders_supported) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_playing_orders_supported</name>
        <briefdescription>
<para>Read Playing Orders Supported. </para>
        </briefdescription>
        <detaileddescription>
<para>Read a bitmap containing the media player&apos;s supported playing orders. See the Media Control Service spec, or the BT_MCS_PLAYING_ORDERS_SUPPORTED_* defines in the <ref refid="mcs_8h" kindref="compound">mcs.h</ref> file.</para>
<para><simplesect kind="return"><para>The media player&apos;s supported playing orders </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1349" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a6a339aa7ee564acacffd2637eeb8e7ea" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref>(*</type>
        <definition>uint8_t(* media_proxy_pl_calls::get_media_state) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_media_state</name>
        <briefdescription>
<para>Read Media State. </para>
        </briefdescription>
        <detaileddescription>
<para>Read the media player&apos;s state See the Media Control Service spec, or the BT_MCS_MEDIA_STATE_* defines in the <ref refid="mcs_8h" kindref="compound">mcs.h</ref> file.</para>
<para><simplesect kind="return"><para>The media player&apos;s state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1360" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a7170edadd423ffe76dfe3b762f4c6264" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_pl_calls::send_command) (struct mpl_cmd command)</definition>
        <argsstring>)(struct mpl_cmd command)</argsstring>
        <name>send_command</name>
        <briefdescription>
<para>Send Command. </para>
        </briefdescription>
        <detaileddescription>
<para>Send a command to the media player. For command opcodes (play, pause, ... - see the Media Control Service spec, or the BT_MCS_OPC_* defines in the <ref refid="mcs_8h" kindref="compound">mcs.h</ref> file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The command to send </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1372" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1ae0a4457fcc35d32541f2557698d5aa83" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref>(*</type>
        <definition>uint32_t(* media_proxy_pl_calls::get_commands_supported) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_commands_supported</name>
        <briefdescription>
<para>Read Commands Supported. </para>
        </briefdescription>
        <detaileddescription>
<para>Read a bitmap containing the media player&apos;s supported command opcodes.. See the Media Control Service spec, or the BT_MCS_OPC_SUP_* defines in the <ref refid="mcs_8h" kindref="compound">mcs.h</ref> file.</para>
<para><simplesect kind="return"><para>The media player&apos;s supported command opcodes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1384" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a946364db406b589745e81e5d9bd62ea5" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_pl_calls::send_search) (struct mpl_search search)</definition>
        <argsstring>)(struct mpl_search search)</argsstring>
        <name>send_search</name>
        <briefdescription>
<para>Set Search. </para>
        </briefdescription>
        <detaileddescription>
<para>Write a search to the media player. (For the formatting of a search, see the Media Control Service spec and the <ref refid="mcs_8h" kindref="compound">mcs.h</ref> file.)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>search</parametername>
</parameternamelist>
<parameterdescription>
<para>The search to write </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1395" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1adf4003ba8ef1a5c38b75876f864564c5" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref>(*</type>
        <definition>uint64_t(* media_proxy_pl_calls::get_search_results_id) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_search_results_id</name>
        <briefdescription>
<para>Read Search Results Object ID. </para>
        </briefdescription>
        <detaileddescription>
<para>Get an ID (48 bit) that can be used to retrieve the Search Results Object from an Object Transfer Service</para>
<para>The search results object is a group object. The search results object only exists if a successful search operation has been done.</para>
<para><simplesect kind="return"><para>The Search Results Object ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1409" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__pl__calls_1a64bc23cc61e69b1b6c4050f76a9bc674" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref>(*</type>
        <definition>uint8_t(* media_proxy_pl_calls::get_content_ctrl_id) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>get_content_ctrl_id</name>
        <briefdescription>
<para>Read Content Control ID. </para>
        </briefdescription>
        <detaileddescription>
<para>The content control ID identifies a content control service on a device, and links it to the corresponding audio stream.</para>
<para><simplesect kind="return"><para>The content control ID for the media player </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="1420" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1420" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Availalable calls in a player, that the media proxy can call. </para>
    </briefdescription>
    <detaileddescription>
<para>Given by a player when registering. </para>
    </detaileddescription>
    <location file="include/bluetooth/audio/media_proxy.h" line="1104" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="1104" bodyend="1421"/>
    <listofallmembers>
      <member refid="structmedia__proxy__pl__calls_1ae0a4457fcc35d32541f2557698d5aa83" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_commands_supported</name></member>
      <member refid="structmedia__proxy__pl__calls_1a64bc23cc61e69b1b6c4050f76a9bc674" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_content_ctrl_id</name></member>
      <member refid="structmedia__proxy__pl__calls_1a98b02d4689cd5e279f43094f3ca09339" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_current_group_id</name></member>
      <member refid="structmedia__proxy__pl__calls_1a7f19bd75114835d151ff5b26733ed450" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_current_track_id</name></member>
      <member refid="structmedia__proxy__pl__calls_1ad1215725454c6b76dcdc197a275c03cf" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_icon_id</name></member>
      <member refid="structmedia__proxy__pl__calls_1a319dd309f94c45292613ab9caa0e399b" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_icon_url</name></member>
      <member refid="structmedia__proxy__pl__calls_1a6a339aa7ee564acacffd2637eeb8e7ea" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_media_state</name></member>
      <member refid="structmedia__proxy__pl__calls_1af939a96fbcfe474dfcdcfb353ae0aac5" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_next_track_id</name></member>
      <member refid="structmedia__proxy__pl__calls_1a1409764199d47d0c27d07e13c8fa8f68" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_parent_group_id</name></member>
      <member refid="structmedia__proxy__pl__calls_1ae1006d5c684e12e1e1c927f71aa93930" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_playback_speed</name></member>
      <member refid="structmedia__proxy__pl__calls_1a2946f7572e12ffabc5f6ba2f562d52cf" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_player_name</name></member>
      <member refid="structmedia__proxy__pl__calls_1a98989105d01265de4b268b623a26df2e" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_playing_order</name></member>
      <member refid="structmedia__proxy__pl__calls_1a9b733c3187cc032ef6644a16ffd3f7c9" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_playing_orders_supported</name></member>
      <member refid="structmedia__proxy__pl__calls_1adf4003ba8ef1a5c38b75876f864564c5" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_search_results_id</name></member>
      <member refid="structmedia__proxy__pl__calls_1aebf24b582cf33786f2dc17765d858a15" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_seeking_speed</name></member>
      <member refid="structmedia__proxy__pl__calls_1a1b852ccc45a6ee1174b9d58df3b599b6" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_track_duration</name></member>
      <member refid="structmedia__proxy__pl__calls_1a11ea1cf984a7d11ac7e61405df84ee06" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_track_position</name></member>
      <member refid="structmedia__proxy__pl__calls_1a86a71b788b54a4e7c966f162fcab6433" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_track_segments_id</name></member>
      <member refid="structmedia__proxy__pl__calls_1af9fc0af545c8c28f8f4dbf8c6afb4acf" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>get_track_title</name></member>
      <member refid="structmedia__proxy__pl__calls_1a7170edadd423ffe76dfe3b762f4c6264" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>send_command</name></member>
      <member refid="structmedia__proxy__pl__calls_1a946364db406b589745e81e5d9bd62ea5" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>send_search</name></member>
      <member refid="structmedia__proxy__pl__calls_1a5049e21965e7fd08aaeafcbedf76809c" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>set_current_group_id</name></member>
      <member refid="structmedia__proxy__pl__calls_1a422cec33063313a9aab86baf0bd65ef1" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>set_current_track_id</name></member>
      <member refid="structmedia__proxy__pl__calls_1acbf8dc9dcc8fbaba44d436310c92f3a9" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>set_next_track_id</name></member>
      <member refid="structmedia__proxy__pl__calls_1a7535dad9be2f4b83c8a7c55fccc8a7af" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>set_playback_speed</name></member>
      <member refid="structmedia__proxy__pl__calls_1ad6fad92957146aeaf1bec0e56606da72" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>set_playing_order</name></member>
      <member refid="structmedia__proxy__pl__calls_1a001ae07161b8a6c7dfc9c2e471f229e5" prot="public" virt="non-virtual"><scope>media_proxy_pl_calls</scope><name>set_track_position</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
