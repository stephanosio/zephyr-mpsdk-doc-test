<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structnet__buf__pool" kind="struct" language="C++" prot="public">
    <compoundname>net_buf_pool</compoundname>
    <includes refid="net_2buf_8h" local="no">buf.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnet__buf__pool_1a97e5b2e51238e859f93882a8008ba305" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__lifo" kindref="compound">k_lifo</ref></type>
        <definition>struct k_lifo net_buf_pool::free</definition>
        <argsstring></argsstring>
        <name>free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LIFO to place the buffer into when free </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/buf.h" line="984" column="13" bodyfile="include/net/buf.h" bodystart="984" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__buf__pool_1ae92fc3f3f51be63ccdeee9614d21cc34" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__spinlock" kindref="compound">k_spinlock</ref></type>
        <definition>struct k_spinlock net_buf_pool::lock</definition>
        <argsstring></argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/buf.h" line="987" column="17" bodyfile="include/net/buf.h" bodystart="987" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__buf__pool_1a55b57f4f573c7e752c3ccf2f92f25626" prot="public" static="no" mutable="no">
        <type>const <ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>const uint16_t net_buf_pool::buf_count</definition>
        <argsstring></argsstring>
        <name>buf_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of buffers in pool </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/buf.h" line="990" column="16" bodyfile="include/net/buf.h" bodystart="990" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__buf__pool_1a3fdf83b4c0b5acefbb761da285791ad2" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t net_buf_pool::uninit_count</definition>
        <argsstring></argsstring>
        <name>uninit_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of uninitialized buffers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/buf.h" line="993" column="10" bodyfile="include/net/buf.h" bodystart="993" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__buf__pool_1a4718ecec19d7e2ccaf04b6ff61120975" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t net_buf_pool::user_data_size</definition>
        <argsstring></argsstring>
        <name>user_data_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/buf.h" line="996" column="9" bodyfile="include/net/buf.h" bodystart="996" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__buf__pool_1a2a9141d7cd20cd98818a92dc5bc99f56" prot="public" static="no" mutable="no">
        <type>void(*const</type>
        <definition>void(*const net_buf_pool::destroy) (struct net_buf *buf)</definition>
        <argsstring>)(struct net_buf *buf)</argsstring>
        <name>destroy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Optional destroy callback when buffer is freed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/buf.h" line="1010" column="1" bodyfile="include/net/buf.h" bodystart="1010" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__buf__pool_1a617bd8f77e55481d97183da8c0c62cc5" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structnet__buf__data__alloc" kindref="compound">net_buf_data_alloc</ref> *</type>
        <definition>const struct net_buf_data_alloc* net_buf_pool::alloc</definition>
        <argsstring></argsstring>
        <name>alloc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Data allocation handlers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/buf.h" line="1013" column="31" bodyfile="include/net/buf.h" bodystart="1013" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Network buffer pool representation. </para>
    </briefdescription>
    <detaileddescription>
<para>This struct is used to represent a pool of network buffers. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>k_lifo</label>
        <link refid="structk__lifo"/>
      </node>
      <node id="3">
        <label>k_spinlock</label>
        <link refid="structk__spinlock"/>
      </node>
      <node id="4">
        <label>net_buf_data_alloc</label>
        <link refid="structnet__buf__data__alloc"/>
        <childnode refid="5" relation="usage">
          <edgelabel>cb</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>net_buf_data_cb</label>
        <link refid="structnet__buf__data__cb"/>
      </node>
      <node id="1">
        <label>net_buf_pool</label>
        <link refid="structnet__buf__pool"/>
        <childnode refid="2" relation="usage">
          <edgelabel>free</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>alloc</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/net/buf.h" line="982" column="1" bodyfile="include/net/buf.h" bodystart="982" bodyend="1017"/>
    <listofallmembers>
      <member refid="structnet__buf__pool_1a617bd8f77e55481d97183da8c0c62cc5" prot="public" virt="non-virtual"><scope>net_buf_pool</scope><name>alloc</name></member>
      <member refid="structnet__buf__pool_1a55b57f4f573c7e752c3ccf2f92f25626" prot="public" virt="non-virtual"><scope>net_buf_pool</scope><name>buf_count</name></member>
      <member refid="structnet__buf__pool_1a2a9141d7cd20cd98818a92dc5bc99f56" prot="public" virt="non-virtual"><scope>net_buf_pool</scope><name>destroy</name></member>
      <member refid="structnet__buf__pool_1a97e5b2e51238e859f93882a8008ba305" prot="public" virt="non-virtual"><scope>net_buf_pool</scope><name>free</name></member>
      <member refid="structnet__buf__pool_1ae92fc3f3f51be63ccdeee9614d21cc34" prot="public" virt="non-virtual"><scope>net_buf_pool</scope><name>lock</name></member>
      <member refid="structnet__buf__pool_1a3fdf83b4c0b5acefbb761da285791ad2" prot="public" virt="non-virtual"><scope>net_buf_pool</scope><name>uninit_count</name></member>
      <member refid="structnet__buf__pool_1a4718ecec19d7e2ccaf04b6ff61120975" prot="public" virt="non-virtual"><scope>net_buf_pool</scope><name>user_data_size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
