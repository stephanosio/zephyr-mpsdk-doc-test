<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__futex__apis" kind="group">
    <compoundname>futex_apis</compoundname>
    <title>FUTEX APIs</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__futex__apis_1ga596bfa265f88567ad9e80fd38cd433d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_futex_wait</definition>
        <argsstring>(struct k_futex *futex, int expected, k_timeout_t timeout)</argsstring>
        <name>k_futex_wait</name>
        <param>
          <type>struct <ref refid="structk__futex" kindref="compound">k_futex</ref> *</type>
          <declname>futex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>expected</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Pend the current thread on a futex. </para>
        </briefdescription>
        <detaileddescription>
<para>Tests that the supplied futex contains the expected value, and if so, goes to sleep until some other thread calls <ref refid="group__futex__apis_1ga62de1aeb7c5c273aed20d0e05336d7a0" kindref="member">k_futex_wake()</ref> on it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>futex</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the futex. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expected</parametername>
</parameternamelist>
<parameterdescription>
<para>Expected value of the futex, if it is different the caller will not wait on it. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-negative waiting period on the futex, or one of the special values K_NO_WAIT or K_FOREVER. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EACCES</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller does not have read access to futex address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>If the futex value did not match the expected parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Futex parameter address not recognized by the kernel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread woke up due to timeout and not a futex wakeup. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if the caller went to sleep and was woken up. The caller should check the futex&apos;s value on wakeup to determine if it needs to block again. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="1969" column="6" declfile="include/kernel.h" declline="1969" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__futex__apis_1ga62de1aeb7c5c273aed20d0e05336d7a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_futex_wake</definition>
        <argsstring>(struct k_futex *futex, bool wake_all)</argsstring>
        <name>k_futex_wake</name>
        <param>
          <type>struct <ref refid="structk__futex" kindref="compound">k_futex</ref> *</type>
          <declname>futex</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>wake_all</declname>
        </param>
        <briefdescription>
<para>Wake one/all threads pending on a futex. </para>
        </briefdescription>
        <detaileddescription>
<para>Wake up the highest priority thread pending on the supplied futex, or wakeup all the threads pending on the supplied futex, and the behavior depends on wake_all.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>futex</parametername>
</parameternamelist>
<parameterdescription>
<para>Futex to wake up pending threads. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wake_all</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, wake up all pending threads; If false, wakeup the highest priority thread. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EACCES</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller does not have access to the futex address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Futex parameter address not recognized by the kernel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Number</parametername>
</parameternamelist>
<parameterdescription>
<para>of threads that were woken up. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="1986" column="6" declfile="include/kernel.h" declline="1986" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
