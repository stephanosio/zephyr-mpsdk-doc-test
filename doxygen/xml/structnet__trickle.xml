<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structnet__trickle" kind="struct" language="C++" prot="public">
    <compoundname>net_trickle</compoundname>
    <includes refid="trickle_8h" local="no">trickle.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnet__trickle_1aaf14e013a0fa74488a26cd7ff476f6e7" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t net_trickle::Imin</definition>
        <argsstring></argsstring>
        <name>Imin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Min interval size in ms </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="54" column="10" bodyfile="include/net/trickle.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__trickle_1a01ffd968b645bb66db67c759520298aa" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t net_trickle::Imax</definition>
        <argsstring></argsstring>
        <name>Imax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Max number of doublings </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="55" column="9" bodyfile="include/net/trickle.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__trickle_1a7c3399e45f85874cec48434d605066d9" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t net_trickle::k</definition>
        <argsstring></argsstring>
        <name>k</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Redundancy constant </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="56" column="9" bodyfile="include/net/trickle.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__trickle_1a6186d8e41cce5193851587d1c72162ea" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t net_trickle::I</definition>
        <argsstring></argsstring>
        <name>I</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current interval size </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="58" column="10" bodyfile="include/net/trickle.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__trickle_1aab8a98c8a918528db6f2ddec85df4796" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t net_trickle::Istart</definition>
        <argsstring></argsstring>
        <name>Istart</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start of the interval in ms </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="59" column="10" bodyfile="include/net/trickle.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__trickle_1aaa03f7763e6bd335b932896ee4433b3b" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t net_trickle::c</definition>
        <argsstring></argsstring>
        <name>c</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Consistency counter </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="60" column="9" bodyfile="include/net/trickle.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__trickle_1ae9f7ecd9b9730cd1c232ead5d21fec05" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t net_trickle::Imax_abs</definition>
        <argsstring></argsstring>
        <name>Imax_abs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Max interval size in ms (not doublings) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="62" column="10" bodyfile="include/net/trickle.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__trickle_1a2a1fb8ad04123ebcb781bc3e0173d8be" prot="public" static="no" mutable="no">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool net_trickle::double_to</definition>
        <argsstring></argsstring>
        <name>double_to</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="63" column="6" bodyfile="include/net/trickle.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__trickle_1a2dde5d732f009a85a27ff6fa0c778636" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__work__delayable" kindref="compound">k_work_delayable</ref></type>
        <definition>struct k_work_delayable net_trickle::timer</definition>
        <argsstring></argsstring>
        <name>timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="65" column="23" bodyfile="include/net/trickle.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__trickle_1a63a3cbf019c99def91e3a9dde7c2f9b4" prot="public" static="no" mutable="no">
        <type><ref refid="group__trickle_1ga36e3856ac2e9b596984d4817e580ef42" kindref="member">net_trickle_cb_t</ref></type>
        <definition>net_trickle_cb_t net_trickle::cb</definition>
        <argsstring></argsstring>
        <name>cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback to be called when timer expires </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="66" column="18" bodyfile="include/net/trickle.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__trickle_1a40f69e10d41e34541ca88c092d6a3341" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* net_trickle::user_data</definition>
        <argsstring></argsstring>
        <name>user_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="67" column="6" bodyfile="include/net/trickle.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The variable names are taken directly from RFC 6206 when applicable. Note that the struct members should not be accessed directly but only via the Trickle API. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="10">
        <label>__thread_entry</label>
      </node>
      <node id="8">
        <label>_callee_saved</label>
      </node>
      <node id="12">
        <label>_mem_domain_info</label>
      </node>
      <node id="18">
        <label>_slist</label>
      </node>
      <node id="4">
        <label>_snode</label>
      </node>
      <node id="17">
        <label>_thread_arch</label>
      </node>
      <node id="7">
        <label>_thread_base</label>
      </node>
      <node id="11">
        <label>_thread_stack_info</label>
      </node>
      <node id="19">
        <label>_timeout</label>
      </node>
      <node id="9">
        <label>_wait_q_t</label>
      </node>
      <node id="14">
        <label>k_heap</label>
        <link refid="structk__heap"/>
        <childnode refid="15" relation="usage">
          <edgelabel>heap</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>k_spinlock</label>
        <link refid="structk__spinlock"/>
      </node>
      <node id="6">
        <label>k_thread</label>
        <link refid="structk__thread"/>
        <childnode refid="7" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>callee_saved</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>join_queue</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>entry</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>next_thread</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>stack_info</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>mem_domain_info</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>stack_obj</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>resource_pool</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>arch</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>k_work</label>
        <link refid="structk__work"/>
        <childnode refid="4" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>handler</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>k_work_delayable</label>
        <link refid="structk__work__delayable"/>
        <childnode refid="3" relation="usage">
          <edgelabel>work</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>timeout</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>k_work_q</label>
        <link refid="structk__work__q"/>
        <childnode refid="6" relation="usage">
          <edgelabel>thread</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>pending</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>drainq</edgelabel>
          <edgelabel>notifyq</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>net_trickle</label>
        <link refid="structnet__trickle"/>
        <childnode refid="2" relation="usage">
          <edgelabel>timer</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>cb</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>sys_heap</label>
        <link refid="structsys__heap"/>
      </node>
      <node id="13">
        <label>z_thread_stack_element</label>
      </node>
    </collaborationgraph>
    <location file="include/net/trickle.h" line="53" column="1" bodyfile="include/net/trickle.h" bodystart="53" bodyend="68"/>
    <listofallmembers>
      <member refid="structnet__trickle_1aaa03f7763e6bd335b932896ee4433b3b" prot="public" virt="non-virtual"><scope>net_trickle</scope><name>c</name></member>
      <member refid="structnet__trickle_1a63a3cbf019c99def91e3a9dde7c2f9b4" prot="public" virt="non-virtual"><scope>net_trickle</scope><name>cb</name></member>
      <member refid="structnet__trickle_1a2a1fb8ad04123ebcb781bc3e0173d8be" prot="public" virt="non-virtual"><scope>net_trickle</scope><name>double_to</name></member>
      <member refid="structnet__trickle_1a6186d8e41cce5193851587d1c72162ea" prot="public" virt="non-virtual"><scope>net_trickle</scope><name>I</name></member>
      <member refid="structnet__trickle_1a01ffd968b645bb66db67c759520298aa" prot="public" virt="non-virtual"><scope>net_trickle</scope><name>Imax</name></member>
      <member refid="structnet__trickle_1ae9f7ecd9b9730cd1c232ead5d21fec05" prot="public" virt="non-virtual"><scope>net_trickle</scope><name>Imax_abs</name></member>
      <member refid="structnet__trickle_1aaf14e013a0fa74488a26cd7ff476f6e7" prot="public" virt="non-virtual"><scope>net_trickle</scope><name>Imin</name></member>
      <member refid="structnet__trickle_1aab8a98c8a918528db6f2ddec85df4796" prot="public" virt="non-virtual"><scope>net_trickle</scope><name>Istart</name></member>
      <member refid="structnet__trickle_1a7c3399e45f85874cec48434d605066d9" prot="public" virt="non-virtual"><scope>net_trickle</scope><name>k</name></member>
      <member refid="structnet__trickle_1a2dde5d732f009a85a27ff6fa0c778636" prot="public" virt="non-virtual"><scope>net_trickle</scope><name>timer</name></member>
      <member refid="structnet__trickle_1a40f69e10d41e34541ca88c092d6a3341" prot="public" virt="non-virtual"><scope>net_trickle</scope><name>user_data</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
