<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="uart__console_8h" kind="file" language="C++">
    <compoundname>uart_console.h</compoundname>
    <includes local="no">kernel.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/drivers/console/uart_console.h</label>
        <link refid="uart__console_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="uart__console_8h_1a090eed88ce36e49ecea535d61746abd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void uart_register_input</definition>
        <argsstring>(struct k_fifo *avail, struct k_fifo *lines, uint8_t(*completion)(char *str, uint8_t len))</argsstring>
        <name>uart_register_input</name>
        <param>
          <type>struct <ref refid="structk__fifo" kindref="compound">k_fifo</ref> *</type>
          <declname>avail</declname>
        </param>
        <param>
          <type>struct <ref refid="structk__fifo" kindref="compound">k_fifo</ref> *</type>
          <declname>lines</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref>(*)(char *str, <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> len)</type>
          <declname>completion</declname>
        </param>
        <briefdescription>
<para>Register uart input processing. </para>
        </briefdescription>
        <detaileddescription>
<para>Input processing is started when string is typed in the console. Carriage return is translated to NULL making string always NULL terminated. Application before calling register function need to initialize two fifo queues mentioned below.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>avail</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structk__fifo" kindref="compound">k_fifo</ref> queue keeping available input slots </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lines</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structk__fifo" kindref="compound">k_fifo</ref> queue of entered lines which to be processed in the application code. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>completion</parametername>
</parameternamelist>
<parameterdescription>
<para>callback for tab completion of entered commands </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/console/uart_console.h" line="30" column="6" declfile="include/drivers/console/uart_console.h" declline="30" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>uart_console.h<sp/>-<sp/>uart<sp/>console<sp/>driver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2011,<sp/>2014<sp/>Wind<sp/>River<sp/>Systems,<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_DRIVERS_CONSOLE_UART_CONSOLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_DRIVERS_CONSOLE_UART_CONSOLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="uart__console_8h_1a090eed88ce36e49ecea535d61746abd5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="uart__console_8h_1a090eed88ce36e49ecea535d61746abd5" kindref="member">uart_register_input</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__fifo" kindref="compound">k_fifo</ref><sp/>*avail,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__fifo" kindref="compound">k_fifo</ref><sp/>*lines,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>(*completion)(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>len));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>Allows<sp/>having<sp/>debug<sp/>hooks<sp/>in<sp/>the<sp/>console<sp/>driver<sp/>for<sp/>handling<sp/>incoming</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>control<sp/>characters,<sp/>and<sp/>letting<sp/>other<sp/>ones<sp/>through.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_CONSOLE_DEBUG_HOOK_HANDLED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_CONSOLE_OUT_DEBUG_HOOK_SIG(x)<sp/>int(x)(char<sp/>c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>UART_CONSOLE_OUT_DEBUG_HOOK_SIG(uart_console_out_debug_hook_t);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>uart_console_out_debug_hook_install(</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_console_out_debug_hook_t<sp/>*hook);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*uart_console_in_debug_hook_t)<sp/>(<ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>uart_console_in_debug_hook_install(uart_console_in_debug_hook_t<sp/>hook);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_DRIVERS_CONSOLE_UART_CONSOLE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/drivers/console/uart_console.h"/>
  </compounddef>
</doxygen>
