<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__bt__test__cb" kind="group">
    <compoundname>bt_test_cb</compoundname>
    <title>Bluetooth testing callbacks</title>
    <innerclass refid="structbt__test__cb" prot="public">bt_test_cb</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__test__cb_1gae1e022f389f26c9505461c31ed01c632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bt_test_cb_register</definition>
        <argsstring>(struct bt_test_cb *cb)</argsstring>
        <name>bt_test_cb_register</name>
        <param>
          <type>struct <ref refid="structbt__test__cb" kindref="compound">bt_test_cb</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register callbacks for Bluetooth testing purposes</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structbt__test__cb" kindref="compound">bt_test_cb</ref> callback structure </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/testing.h" line="53" column="6" declfile="include/bluetooth/testing.h" declline="53" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__test__cb_1ga2d2c1085532ce33175e20bf6ef48329c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bt_test_cb_unregister</definition>
        <argsstring>(struct bt_test_cb *cb)</argsstring>
        <name>bt_test_cb_unregister</name>
        <param>
          <type>struct <ref refid="structbt__test__cb" kindref="compound">bt_test_cb</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unregister callbacks for Bluetooth testing purposes</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structbt__test__cb" kindref="compound">bt_test_cb</ref> callback structure </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/testing.h" line="59" column="6" declfile="include/bluetooth/testing.h" declline="59" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__test__cb_1gad0590321fdc43ee71b10a9a1d260bb92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_test_mesh_lpn_group_add</definition>
        <argsstring>(uint16_t group)</argsstring>
        <name>bt_test_mesh_lpn_group_add</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send Friend Subscription List Add message.</para>
<para>Used by Low Power node to send the group address for which messages are to be stored by Friend node.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>Group address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success or (negative) error code otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/testing.h" line="70" column="5" declfile="include/bluetooth/testing.h" declline="70" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__test__cb_1gaa33faa58edd5a8bf286815309571baf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_test_mesh_lpn_group_remove</definition>
        <argsstring>(uint16_t *groups, size_t groups_count)</argsstring>
        <name>bt_test_mesh_lpn_group_remove</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref> *</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>groups_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send Friend Subscription List Remove message.</para>
<para>Used by Low Power node to remove the group addresses from Friend node subscription list. Messages sent to those addresses will not be stored by Friend node.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>groups</parametername>
</parameternamelist>
<parameterdescription>
<para>Group addresses </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>groups_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Group addresses count</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success or (negative) error code otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/testing.h" line="83" column="5" declfile="include/bluetooth/testing.h" declline="83" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__test__cb_1ga02e2d32cec7115970a4278d733df1879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_test_mesh_rpl_clear</definition>
        <argsstring>(void)</argsstring>
        <name>bt_test_mesh_rpl_clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear replay protection list cache.</para>
<para><simplesect kind="return"><para>Zero on success or (negative) error code otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/testing.h" line="89" column="5" declfile="include/bluetooth/testing.h" declline="89" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Bluetooth testing. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
