<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="hash_8h" kind="file" language="C++">
    <compoundname>hash.h</compoundname>
    <includedby refid="crypto_2crypto_8h" local="no">include/crypto/crypto.h</includedby>
    <invincdepgraph>
      <node id="2">
        <label>include/crypto/crypto.h</label>
        <link refid="crypto_2crypto_8h"/>
      </node>
      <node id="1">
        <label>include/crypto/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structhash__ctx" prot="public">hash_ctx</innerclass>
    <innerclass refid="structhash__pkt" prot="public">hash_pkt</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__crypto__hash_1gaaea88501aa8243eacc8c57ac0914ac7a" prot="public" static="no" strong="no">
        <type></type>
        <name>hash_algo</name>
        <enumvalue id="group__crypto__hash_1ggaaea88501aa8243eacc8c57ac0914ac7aaa49fd348b98d55eca407ae88e3626265" prot="public">
          <name>CRYPTO_HASH_ALGO_SHA224</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__crypto__hash_1ggaaea88501aa8243eacc8c57ac0914ac7aa1b0b60a3270618fd492491668dc2ad43" prot="public">
          <name>CRYPTO_HASH_ALGO_SHA256</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__crypto__hash_1ggaaea88501aa8243eacc8c57ac0914ac7aabba9e518a333ce75825957fde1993dd5" prot="public">
          <name>CRYPTO_HASH_ALGO_SHA384</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__crypto__hash_1ggaaea88501aa8243eacc8c57ac0914ac7aa72a129765ae9e15f456c295c3917bf3f" prot="public">
          <name>CRYPTO_HASH_ALGO_SHA512</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hash algorithm </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/hash.h" line="26" column="1" bodyfile="include/crypto/hash.h" bodystart="26" bodyend="31"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__crypto__hash_1ga955369c6da6aa70ded229d8861292070" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* hash_op_t) (struct hash_ctx *ctx, struct hash_pkt *pkt, bool finish)</definition>
        <argsstring>)(struct hash_ctx *ctx, struct hash_pkt *pkt, bool finish)</argsstring>
        <name>hash_op_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/hash.h" line="38" column="9" bodyfile="include/crypto/hash.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__crypto__hash_1ga1f49008c35d9f04b66e587d1b43404bd" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* hash_completion_cb) (struct hash_pkt *completed, int status)</definition>
        <argsstring>)(struct hash_pkt *completed, int status)</argsstring>
        <name>hash_completion_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/hash.h" line="114" column="9" bodyfile="include/crypto/hash.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Crypto Hash APIs. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains the Crypto Abstraction layer APIs. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022<sp/>Intel<sp/>Corporation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_CRYPTO_HASH_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_CRYPTO_HASH_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="group__crypto__hash_1gaaea88501aa8243eacc8c57ac0914ac7a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__crypto__hash_1gaaea88501aa8243eacc8c57ac0914ac7a" kindref="member">hash_algo</ref><sp/>{</highlight></codeline>
<codeline lineno="27" refid="group__crypto__hash_1ggaaea88501aa8243eacc8c57ac0914ac7aaa49fd348b98d55eca407ae88e3626265" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__hash_1ggaaea88501aa8243eacc8c57ac0914ac7aaa49fd348b98d55eca407ae88e3626265" kindref="member">CRYPTO_HASH_ALGO_SHA224</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="28" refid="group__crypto__hash_1ggaaea88501aa8243eacc8c57ac0914ac7aa1b0b60a3270618fd492491668dc2ad43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__hash_1ggaaea88501aa8243eacc8c57ac0914ac7aa1b0b60a3270618fd492491668dc2ad43" kindref="member">CRYPTO_HASH_ALGO_SHA256</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="29" refid="group__crypto__hash_1ggaaea88501aa8243eacc8c57ac0914ac7aabba9e518a333ce75825957fde1993dd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__hash_1ggaaea88501aa8243eacc8c57ac0914ac7aabba9e518a333ce75825957fde1993dd5" kindref="member">CRYPTO_HASH_ALGO_SHA384</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="30" refid="group__crypto__hash_1ggaaea88501aa8243eacc8c57ac0914ac7aa72a129765ae9e15f456c295c3917bf3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__hash_1ggaaea88501aa8243eacc8c57ac0914ac7aa72a129765ae9e15f456c295c3917bf3f" kindref="member">CRYPTO_HASH_ALGO_SHA512</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Forward<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhash__ctx" kindref="compound">hash_ctx</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhash__pkt" kindref="compound">hash_pkt</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="group__crypto__hash_1ga955369c6da6aa70ded229d8861292070" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__crypto__hash_1ga955369c6da6aa70ded229d8861292070" kindref="member">hash_op_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhash__ctx" kindref="compound">hash_ctx</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhash__pkt" kindref="compound">hash_pkt</ref><sp/>*pkt,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>finish);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structhash__ctx" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhash__ctx" kindref="compound">hash_ctx</ref><sp/>{</highlight></codeline>
<codeline lineno="51" refid="structhash__ctx_1abe1e70bd23305296e54564b5966ff310" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*<ref refid="structhash__ctx_1abe1e70bd23305296e54564b5966ff310" kindref="member">device</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structhash__ctx_1ad9c9bb4472975ba6999986bb6c01b501" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structhash__ctx_1ad9c9bb4472975ba6999986bb6c01b501" kindref="member">drv_sessn_state</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structhash__ctx_1a72a2e7af667bed1ee1dabb8411b01e40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__crypto__hash_1ga955369c6da6aa70ded229d8861292070" kindref="member">hash_op_t</ref><sp/><ref refid="structhash__ctx_1a72a2e7af667bed1ee1dabb8411b01e40" kindref="member">hash_hndlr</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structhash__ctx_1a33dbeb54cd8663f1f5391988d8ee642e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhash__ctx_1a33dbeb54cd8663f1f5391988d8ee642e" kindref="member">started</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="structhash__ctx_1ab550711912423a0eb03c410aef491854" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structhash__ctx_1ab550711912423a0eb03c410aef491854" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="structhash__pkt" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhash__pkt" kindref="compound">hash_pkt</ref><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="structhash__pkt_1a80d73d3c64718a62213a7fb857e3c5ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="structhash__pkt_1a80d73d3c64718a62213a7fb857e3c5ce" kindref="member">in_buf</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="structhash__pkt_1a06c516ec59f233a2090fb37eb0476652" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><ref refid="structhash__pkt_1a06c516ec59f233a2090fb37eb0476652" kindref="member">in_len</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structhash__pkt_1ac86c2221c6ebe7c3e568c6d72b91ff43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="structhash__pkt_1ac86c2221c6ebe7c3e568c6d72b91ff43" kindref="member">out_buf</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="structhash__pkt_1ab5b3ffd87a11ce3838178b2e652d49b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhash__ctx" kindref="compound">hash_ctx</ref><sp/>*<ref refid="structhash__pkt_1ab5b3ffd87a11ce3838178b2e652d49b9" kindref="member">ctx</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Prototype<sp/>for<sp/>the<sp/>application<sp/>function<sp/>to<sp/>be<sp/>invoked<sp/>by<sp/>the<sp/>crypto<sp/>driver</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>on<sp/>completion<sp/>of<sp/>an<sp/>async<sp/>request.<sp/>The<sp/>app<sp/>may<sp/>get<sp/>the<sp/>session<sp/>context</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>via<sp/>the<sp/>pkt-&gt;ctx<sp/>field.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="group__crypto__hash_1ga1f49008c35d9f04b66e587d1b43404bd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__crypto__hash_1ga1f49008c35d9f04b66e587d1b43404bd" kindref="member">hash_completion_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhash__pkt" kindref="compound">hash_pkt</ref><sp/>*completed,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_CRYPTO_HASH_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/crypto/hash.h"/>
  </compounddef>
</doxygen>
