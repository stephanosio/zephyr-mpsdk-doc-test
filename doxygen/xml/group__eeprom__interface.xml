<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__eeprom__interface" kind="group">
    <compoundname>eeprom_interface</compoundname>
    <title>EEPROM Interface</title>
    <innerclass refid="structeeprom__driver__api" prot="public">eeprom_driver_api</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__eeprom__interface_1gaa12f5fdb02e73a608d5fdf128b14b4be" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* eeprom_api_read) (const struct device *dev, off_t offset, void *data, size_t len)</definition>
        <argsstring>)(const struct device *dev, off_t offset, void *data, size_t len)</argsstring>
        <name>eeprom_api_read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/eeprom.h" line="35" column="9" bodyfile="include/drivers/eeprom.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__eeprom__interface_1gaee46582bce50cf50cc0293d006ca2ba8" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* eeprom_api_write) (const struct device *dev, off_t offset, const void *data, size_t len)</definition>
        <argsstring>)(const struct device *dev, off_t offset, const void *data, size_t len)</argsstring>
        <name>eeprom_api_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/eeprom.h" line="38" column="9" bodyfile="include/drivers/eeprom.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__eeprom__interface_1gabbf1d1f66944f2297c68686a7db080ac" prot="public" static="no">
        <type>size_t(*</type>
        <definition>typedef size_t(* eeprom_api_size) (const struct device *dev)</definition>
        <argsstring>)(const struct device *dev)</argsstring>
        <name>eeprom_api_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/eeprom.h" line="40" column="9" bodyfile="include/drivers/eeprom.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__eeprom__interface_1ga92b92c8fb721f1b94038a20443d46e52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eeprom_read</definition>
        <argsstring>(const struct device *dev, off_t offset, void *data, size_t len)</argsstring>
        <name>eeprom_read</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Read data from EEPROM. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>EEPROM device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Address offset to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store read data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to read.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative errno code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/eeprom.h" line="58" column="6" declfile="include/drivers/eeprom.h" declline="58" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__eeprom__interface_1ga1973e8982de88f53e49154dc73461e56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eeprom_write</definition>
        <argsstring>(const struct device *dev, off_t offset, const void *data, size_t len)</argsstring>
        <name>eeprom_write</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Write data to EEPROM. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>EEPROM device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Address offset to write data to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer with data to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to write.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative errno code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/eeprom.h" line="80" column="6" declfile="include/drivers/eeprom.h" declline="80" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__eeprom__interface_1ga27a1f50af8916f9291dad4a63796a707" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t eeprom_get_size</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>eeprom_get_size</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Get the size of the EEPROM in bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>EEPROM device.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>EEPROM size in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/eeprom.h" line="100" column="9" declfile="include/drivers/eeprom.h" declline="100" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>EEPROM Interface. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
