<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="lldp_8h" kind="file" language="C++">
    <compoundname>lldp.h</compoundname>
    <innerclass refid="structnet__lldp__chassis__tlv" prot="public">net_lldp_chassis_tlv</innerclass>
    <innerclass refid="structnet__lldp__port__tlv" prot="public">net_lldp_port_tlv</innerclass>
    <innerclass refid="structnet__lldp__time__to__live__tlv" prot="public">net_lldp_time_to_live_tlv</innerclass>
    <innerclass refid="structnet__lldpdu" prot="public">net_lldpdu</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__lldp_1ga961bc59567ffa2d5a4d21290d1d78407" prot="public" static="no">
        <name>net_lldp_set_lldpdu</name>
        <param><defname>iface</defname></param>
        <briefdescription>
<para>Set LLDP protocol data unit (LLDPDU) for the network interface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>Network interface</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&lt;0 if error, index in lldp array if iface is found there </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lldp.h" line="246" column="10" bodyfile="include/net/lldp.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lldp_1gafdd1b4cea9f560597c31a0e42d5341e0" prot="public" static="no">
        <name>net_lldp_unset_lldpdu</name>
        <param><defname>iface</defname></param>
        <briefdescription>
<para>Unset LLDP protocol data unit (LLDPDU) for the network interface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>Network interface </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lldp.h" line="257" column="10" bodyfile="include/net/lldp.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__lldp_1gadd4273e4fe55757729008ce081771899" prot="public" static="no" strong="no">
        <type></type>
        <name>net_lldp_tlv_type</name>
        <enumvalue id="group__lldp_1ggadd4273e4fe55757729008ce081771899a2b7c2a5f9f23b3bd6361e09d190c859a" prot="public">
          <name>LLDP_TLV_END_LLDPDU</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>End Of LLDPDU (optional) <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lldp_1ggadd4273e4fe55757729008ce081771899acd8e886391d4356096db264cba5383e6" prot="public">
          <name>LLDP_TLV_CHASSIS_ID</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Chassis ID (mandatory) <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lldp_1ggadd4273e4fe55757729008ce081771899a247164e4394c67b5ebe8da8fd71dae45" prot="public">
          <name>LLDP_TLV_PORT_ID</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Port ID (mandatory) <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lldp_1ggadd4273e4fe55757729008ce081771899af6c7e7e44b7c0a9b1466c4c124f2c12c" prot="public">
          <name>LLDP_TLV_TTL</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Time To Live (mandatory) <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lldp_1ggadd4273e4fe55757729008ce081771899a848167601f7bb7a21ce25bd1a79836c0" prot="public">
          <name>LLDP_TLV_PORT_DESC</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Port Description (optional) <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lldp_1ggadd4273e4fe55757729008ce081771899abb2ebbce9ab2e6234d443dbaa246b6d9" prot="public">
          <name>LLDP_TLV_SYSTEM_NAME</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>System Name (optional) <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lldp_1ggadd4273e4fe55757729008ce081771899ab99a55a2b6620c3d77cb0aeedf135782" prot="public">
          <name>LLDP_TLV_SYSTEM_DESC</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>System Description (optional) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lldp_1ggadd4273e4fe55757729008ce081771899a9c81c35102ccc8baa15797f69ef95521" prot="public">
          <name>LLDP_TLV_SYSTEM_CAPABILITIES</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>System Capability (optional) <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lldp_1ggadd4273e4fe55757729008ce081771899ab0219acd11fad13967aec8a30054cae5" prot="public">
          <name>LLDP_TLV_MANAGEMENT_ADDR</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Management Address (optional) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lldp_1ggadd4273e4fe55757729008ce081771899a07dee140b7ee13ec88a271fc292887ad" prot="public">
          <name>LLDP_TLV_ORG_SPECIFIC</name>
          <initializer>= 127</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Org specific TLVs (optional) </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TLV Types. Please refer to table 8-1 from IEEE 802.1AB standard. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lldp.h" line="121" column="1" bodyfile="include/net/lldp.h" bodystart="121" bodyend="133"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__lldp_1ga1e9fb662d7cdfc3c4c68cfd0312987cf" prot="public" static="no">
        <type>enum <ref refid="group__net__core_1ga8e5393f3bdd85491f221324e637c3896" kindref="member">net_verdict</ref>(*</type>
        <definition>typedef enum net_verdict(* net_lldp_recv_cb_t) (struct net_if *iface, struct net_pkt *pkt)</definition>
        <argsstring>)(struct net_if *iface, struct net_pkt *pkt)</argsstring>
        <name>net_lldp_recv_cb_t</name>
        <briefdescription>
<para>LLDP Receive packet callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Callback gets called upon receiving packet. It is responsible for freeing packet or indicating to the stack that it needs to free packet by returning correct net_verdict.</para>
<para>Returns:<itemizedlist>
<listitem><para>NET_DROP, if packet was invalid, rejected or we want the stack to free it. In this case the core stack will free the packet.</para>
</listitem><listitem><para>NET_OK, if the packet was accepted, in this case the ownership of the <ref refid="structnet__pkt" kindref="compound">net_pkt</ref> goes to callback and core network stack will forget it. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lldp.h" line="198" column="6" bodyfile="include/net/lldp.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lldp_1ga0efa1813c537dcf02e021db60049c284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_lldp_config</definition>
        <argsstring>(struct net_if *iface, const struct net_lldpdu *lldpdu)</argsstring>
        <name>net_lldp_config</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <param>
          <type>const struct <ref refid="structnet__lldpdu" kindref="compound">net_lldpdu</ref> *</type>
          <declname>lldpdu</declname>
        </param>
        <briefdescription>
<para>Set the LLDP data unit for a network interface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>Network interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lldpdu</parametername>
</parameternamelist>
<parameterdescription>
<para>LLDP data unit struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt;0 if error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lldp.h" line="181" column="5" declfile="include/net/lldp.h" declline="181" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lldp_1ga9702175375a71eaab20f450291cb51ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_lldp_config_optional</definition>
        <argsstring>(struct net_if *iface, const uint8_t *tlv, size_t len)</argsstring>
        <name>net_lldp_config_optional</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>tlv</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Set the Optional LLDP TLVs for a network interface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>Network interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tlv</parametername>
</parameternamelist>
<parameterdescription>
<para>LLDP optional TLVs following mandatory part </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the optional TLVs</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt;0 if error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lldp.h" line="192" column="5" declfile="include/net/lldp.h" declline="192" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lldp_1ga38f3eff9da2f06e10defddb1776cdb37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void net_lldp_init</definition>
        <argsstring>(void)</argsstring>
        <name>net_lldp_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize LLDP engine. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lldp.h" line="198" column="6" declfile="include/net/lldp.h" declline="198" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lldp_1ga61845c96c65d6df83f422a68e31162cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_lldp_register_callback</definition>
        <argsstring>(struct net_if *iface, net_lldp_recv_cb_t cb)</argsstring>
        <name>net_lldp_register_callback</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <param>
          <type><ref refid="group__lldp_1ga1e9fb662d7cdfc3c4c68cfd0312987cf" kindref="member">net_lldp_recv_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Register LLDP Rx callback function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>Network interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt; 0 if error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lldp.h" line="224" column="5" declfile="include/net/lldp.h" declline="224" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lldp_1gafde82841435942b1ce7cc91083c9a06f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="group__net__core_1ga8e5393f3bdd85491f221324e637c3896" kindref="member">net_verdict</ref></type>
        <definition>enum net_verdict net_lldp_recv</definition>
        <argsstring>(struct net_if *iface, struct net_pkt *pkt)</argsstring>
        <name>net_lldp_recv</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <param>
          <type>struct <ref refid="structnet__pkt" kindref="compound">net_pkt</ref> *</type>
          <declname>pkt</declname>
        </param>
        <briefdescription>
<para>Parse LLDP packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>Network interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Network packet</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return the policy for network buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lldp.h" line="234" column="17" declfile="include/net/lldp.h" declline="234" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>LLDP definitions and handler. </para>
    </briefdescription>
    <detaileddescription>
<para>This is not to be included by the application. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_NET_LLDP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_NET_LLDP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LLDP_TLV_GET_LENGTH(type_length)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(type_length<sp/>&amp;<sp/>BIT_MASK(9))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LLDP_TLV_GET_TYPE(type_length)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)(type_length<sp/>&gt;&gt;<sp/>9))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>LLDP<sp/>Definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>According<sp/>to<sp/>the<sp/>spec,<sp/>End<sp/>of<sp/>LLDPDU<sp/>TLV<sp/>value<sp/>is<sp/>constant.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_END_LLDPDU_VALUE<sp/>0x0000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>For<sp/>the<sp/>Chassis<sp/>ID<sp/>TLV<sp/>Value,<sp/>if<sp/>subtype<sp/>is<sp/>a<sp/>MAC<sp/>address<sp/>then<sp/>we<sp/>must</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>use<sp/>values<sp/>from<sp/>CONFIG_NET_LLDP_CHASSIS_ID_MAC0<sp/>through</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>CONFIG_NET_LLDP_CHASSIS_ID_MAC5.<sp/>If<sp/>not,<sp/>we<sp/>use<sp/>CONFIG_NET_LLDP_CHASSIS_ID.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>FIXME:<sp/>implement<sp/>a<sp/>similar<sp/>scheme<sp/>for<sp/>subtype<sp/>5<sp/>(network<sp/>address).</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_LLDP_CHASSIS_ID_SUBTYPE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(CONFIG_NET_LLDP_CHASSIS_ID_SUBTYPE<sp/>==<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_CHASSIS_ID_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONFIG_NET_LLDP_CHASSIS_ID_MAC0,<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONFIG_NET_LLDP_CHASSIS_ID_MAC1,<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONFIG_NET_LLDP_CHASSIS_ID_MAC2,<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONFIG_NET_LLDP_CHASSIS_ID_MAC3,<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONFIG_NET_LLDP_CHASSIS_ID_MAC4,<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONFIG_NET_LLDP_CHASSIS_ID_MAC5<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_CHASSIS_ID_VALUE_LEN<sp/>(6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_CHASSIS_ID_VALUE<sp/>CONFIG_NET_LLDP_CHASSIS_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_CHASSIS_ID_VALUE_LEN<sp/>(sizeof(CONFIG_NET_LLDP_CHASSIS_ID)<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_CHASSIS_ID_VALUE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_CHASSIS_ID_VALUE_LEN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>For<sp/>the<sp/>Port<sp/>ID<sp/>TLV<sp/>Value,<sp/>if<sp/>subtype<sp/>is<sp/>a<sp/>MAC<sp/>address<sp/>then<sp/>we<sp/>must</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>use<sp/>values<sp/>from<sp/>CONFIG_NET_LLDP_PORT_ID_MAC0<sp/>through</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>CONFIG_NET_LLDP_PORT_ID_MAC5.<sp/>If<sp/>not,<sp/>we<sp/>use<sp/>CONFIG_NET_LLDP_PORT_ID.</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>FIXME:<sp/>implement<sp/>a<sp/>similar<sp/>scheme<sp/>for<sp/>subtype<sp/>4<sp/>(network<sp/>address).</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_LLDP_PORT_ID_SUBTYPE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(CONFIG_NET_LLDP_PORT_ID_SUBTYPE<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_PORT_ID_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONFIG_NET_LLDP_PORT_ID_MAC0,<sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONFIG_NET_LLDP_PORT_ID_MAC1,<sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONFIG_NET_LLDP_PORT_ID_MAC2,<sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONFIG_NET_LLDP_PORT_ID_MAC3,<sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONFIG_NET_LLDP_PORT_ID_MAC4,<sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONFIG_NET_LLDP_PORT_ID_MAC5<sp/><sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_PORT_ID_VALUE_LEN<sp/>(6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_PORT_ID_VALUE<sp/>CONFIG_NET_LLDP_PORT_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_PORT_ID_VALUE_LEN<sp/>(sizeof(CONFIG_NET_LLDP_PORT_ID)<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_PORT_ID_VALUE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_PORT_ID_VALUE_LEN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>TLVs<sp/>Length.</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>TLVs<sp/>that<sp/>have<sp/>a<sp/>subtype<sp/>must<sp/>have<sp/>a<sp/>byte<sp/>added<sp/>to<sp/>their<sp/>length.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_CHASSIS_ID_TLV_LEN<sp/>(NET_LLDP_CHASSIS_ID_VALUE_LEN<sp/>+<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_PORT_ID_TLV_LEN<sp/>(NET_LLDP_PORT_ID_VALUE_LEN<sp/>+<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_TTL_TLV_LEN<sp/>(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>Time<sp/>to<sp/>Live<sp/>value.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>Calculate<sp/>based<sp/>on<sp/>section<sp/>9.2.5.22<sp/>from<sp/>LLDP<sp/>spec.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>FIXME:<sp/>when<sp/>the<sp/>network<sp/>interface<sp/>is<sp/>about<sp/>to<sp/>be<sp/>‘disabled’<sp/>TTL<sp/>shall<sp/>be<sp/>set</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>to<sp/>zero<sp/>so<sp/>LLDP<sp/>Rx<sp/>agents<sp/>can<sp/>invalidate<sp/>the<sp/>entry<sp/>related<sp/>to<sp/>this<sp/>node.</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_LLDP_TX_INTERVAL)<sp/>&amp;&amp;<sp/>defined(CONFIG_NET_LLDP_TX_HOLD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_LLDP_TTL<sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIN((CONFIG_NET_LLDP_TX_INTERVAL<sp/>*<sp/>CONFIG_NET_LLDP_TX_HOLD)<sp/>+<sp/>1,<sp/>65535)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__if" kindref="compound">net_if</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="group__lldp_1gadd4273e4fe55757729008ce081771899" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lldp_1gadd4273e4fe55757729008ce081771899" kindref="member">net_lldp_tlv_type</ref><sp/>{</highlight></codeline>
<codeline lineno="122" refid="group__lldp_1ggadd4273e4fe55757729008ce081771899a2b7c2a5f9f23b3bd6361e09d190c859a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lldp_1ggadd4273e4fe55757729008ce081771899a2b7c2a5f9f23b3bd6361e09d190c859a" kindref="member">LLDP_TLV_END_LLDPDU</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="123" refid="group__lldp_1ggadd4273e4fe55757729008ce081771899acd8e886391d4356096db264cba5383e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lldp_1ggadd4273e4fe55757729008ce081771899acd8e886391d4356096db264cba5383e6" kindref="member">LLDP_TLV_CHASSIS_ID</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1,<sp/></highlight></codeline>
<codeline lineno="124" refid="group__lldp_1ggadd4273e4fe55757729008ce081771899a247164e4394c67b5ebe8da8fd71dae45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lldp_1ggadd4273e4fe55757729008ce081771899a247164e4394c67b5ebe8da8fd71dae45" kindref="member">LLDP_TLV_PORT_ID</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2,<sp/></highlight></codeline>
<codeline lineno="125" refid="group__lldp_1ggadd4273e4fe55757729008ce081771899af6c7e7e44b7c0a9b1466c4c124f2c12c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lldp_1ggadd4273e4fe55757729008ce081771899af6c7e7e44b7c0a9b1466c4c124f2c12c" kindref="member">LLDP_TLV_TTL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>3,<sp/></highlight></codeline>
<codeline lineno="126" refid="group__lldp_1ggadd4273e4fe55757729008ce081771899a848167601f7bb7a21ce25bd1a79836c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lldp_1ggadd4273e4fe55757729008ce081771899a848167601f7bb7a21ce25bd1a79836c0" kindref="member">LLDP_TLV_PORT_DESC</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>4,<sp/></highlight></codeline>
<codeline lineno="127" refid="group__lldp_1ggadd4273e4fe55757729008ce081771899abb2ebbce9ab2e6234d443dbaa246b6d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lldp_1ggadd4273e4fe55757729008ce081771899abb2ebbce9ab2e6234d443dbaa246b6d9" kindref="member">LLDP_TLV_SYSTEM_NAME</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>5,<sp/></highlight></codeline>
<codeline lineno="128" refid="group__lldp_1ggadd4273e4fe55757729008ce081771899ab99a55a2b6620c3d77cb0aeedf135782" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lldp_1ggadd4273e4fe55757729008ce081771899ab99a55a2b6620c3d77cb0aeedf135782" kindref="member">LLDP_TLV_SYSTEM_DESC</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>6,<sp/></highlight></codeline>
<codeline lineno="129" refid="group__lldp_1ggadd4273e4fe55757729008ce081771899a9c81c35102ccc8baa15797f69ef95521" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lldp_1ggadd4273e4fe55757729008ce081771899a9c81c35102ccc8baa15797f69ef95521" kindref="member">LLDP_TLV_SYSTEM_CAPABILITIES</ref><sp/>=<sp/>7,<sp/></highlight></codeline>
<codeline lineno="130" refid="group__lldp_1ggadd4273e4fe55757729008ce081771899ab0219acd11fad13967aec8a30054cae5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lldp_1ggadd4273e4fe55757729008ce081771899ab0219acd11fad13967aec8a30054cae5" kindref="member">LLDP_TLV_MANAGEMENT_ADDR</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>8,<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Types<sp/>9<sp/>-<sp/>126<sp/>are<sp/>reserved.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="group__lldp_1ggadd4273e4fe55757729008ce081771899a07dee140b7ee13ec88a271fc292887ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lldp_1ggadd4273e4fe55757729008ce081771899a07dee140b7ee13ec88a271fc292887ad" kindref="member">LLDP_TLV_ORG_SPECIFIC</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>127,<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal">};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="structnet__lldp__chassis__tlv" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__lldp__chassis__tlv" kindref="compound">net_lldp_chassis_tlv</ref><sp/>{</highlight></codeline>
<codeline lineno="138" refid="structnet__lldp__chassis__tlv_1af81d3102ad0ec1f7ef76bb1533dcc7cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structnet__lldp__chassis__tlv_1af81d3102ad0ec1f7ef76bb1533dcc7cd" kindref="member">type_length</ref>;</highlight></codeline>
<codeline lineno="140" refid="structnet__lldp__chassis__tlv_1ad9d415f6a1e9018953728de1b529fd98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structnet__lldp__chassis__tlv_1ad9d415f6a1e9018953728de1b529fd98" kindref="member">subtype</ref>;</highlight></codeline>
<codeline lineno="142" refid="structnet__lldp__chassis__tlv_1a37b7e81a670595d1c6c77a45bf9cfc73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structnet__lldp__chassis__tlv_1a37b7e81a670595d1c6c77a45bf9cfc73" kindref="member">value</ref>[NET_LLDP_CHASSIS_ID_VALUE_LEN];</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}<sp/>__packed;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="structnet__lldp__port__tlv" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__lldp__port__tlv" kindref="compound">net_lldp_port_tlv</ref><sp/>{</highlight></codeline>
<codeline lineno="148" refid="structnet__lldp__port__tlv_1a710beaeda2ddd7933464e07cb87a2bfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structnet__lldp__port__tlv_1a710beaeda2ddd7933464e07cb87a2bfe" kindref="member">type_length</ref>;</highlight></codeline>
<codeline lineno="150" refid="structnet__lldp__port__tlv_1a572a6fd721c68796a572410ac62f2f93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structnet__lldp__port__tlv_1a572a6fd721c68796a572410ac62f2f93" kindref="member">subtype</ref>;</highlight></codeline>
<codeline lineno="152" refid="structnet__lldp__port__tlv_1aecc83eaec39284b33c2e7cf07f0ffa05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structnet__lldp__port__tlv_1aecc83eaec39284b33c2e7cf07f0ffa05" kindref="member">value</ref>[NET_LLDP_PORT_ID_VALUE_LEN];</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}<sp/>__packed;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="structnet__lldp__time__to__live__tlv" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__lldp__time__to__live__tlv" kindref="compound">net_lldp_time_to_live_tlv</ref><sp/>{</highlight></codeline>
<codeline lineno="158" refid="structnet__lldp__time__to__live__tlv_1a78b88d66184a0d25c413baf2fec495ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structnet__lldp__time__to__live__tlv_1a78b88d66184a0d25c413baf2fec495ab" kindref="member">type_length</ref>;</highlight></codeline>
<codeline lineno="160" refid="structnet__lldp__time__to__live__tlv_1ab967792a938a5d67f744e53be8d5f0fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structnet__lldp__time__to__live__tlv_1ab967792a938a5d67f744e53be8d5f0fd" kindref="member">ttl</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}<sp/>__packed;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="structnet__lldpdu" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__lldpdu" kindref="compound">net_lldpdu</ref><sp/>{</highlight></codeline>
<codeline lineno="168" refid="structnet__lldpdu_1a1a1c80fe7462ddbfd84289735013834c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__lldp__chassis__tlv" kindref="compound">net_lldp_chassis_tlv</ref><sp/><ref refid="structnet__lldpdu_1a1a1c80fe7462ddbfd84289735013834c" kindref="member">chassis_id</ref>;<sp/></highlight></codeline>
<codeline lineno="169" refid="structnet__lldpdu_1aa55adafc5528576017c37a28413bdaf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__lldp__port__tlv" kindref="compound">net_lldp_port_tlv</ref><sp/><ref refid="structnet__lldpdu_1aa55adafc5528576017c37a28413bdaf9" kindref="member">port_id</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170" refid="structnet__lldpdu_1afbe0618b6d849b8ee7b225844ac399df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__lldp__time__to__live__tlv" kindref="compound">net_lldp_time_to_live_tlv</ref><sp/><ref refid="structnet__lldpdu_1afbe0618b6d849b8ee7b225844ac399df" kindref="member">ttl</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}<sp/>__packed;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="group__lldp_1ga0efa1813c537dcf02e021db60049c284" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lldp_1ga0efa1813c537dcf02e021db60049c284" kindref="member">net_lldp_config</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__lldpdu" kindref="compound">net_lldpdu</ref><sp/>*lldpdu);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="group__lldp_1ga9702175375a71eaab20f450291cb51ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lldp_1ga9702175375a71eaab20f450291cb51ad" kindref="member">net_lldp_config_optional</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*tlv,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="group__lldp_1ga38f3eff9da2f06e10defddb1776cdb37" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lldp_1ga38f3eff9da2f06e10defddb1776cdb37" kindref="member">net_lldp_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__net__core_1ga8e5393f3bdd85491f221324e637c3896" kindref="member">net_verdict</ref><sp/>(*<ref refid="group__lldp_1ga1e9fb662d7cdfc3c4c68cfd0312987cf" kindref="member">net_lldp_recv_cb_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__pkt" kindref="compound">net_pkt</ref><sp/>*pkt);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="group__lldp_1ga61845c96c65d6df83f422a68e31162cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lldp_1ga61845c96c65d6df83f422a68e31162cf" kindref="member">net_lldp_register_callback</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*<ref refid="structnet__pkt_1a7590eeacf06469206cb7e7949acfa7b2" kindref="member">iface</ref>,<sp/><ref refid="group__lldp_1ga1e9fb662d7cdfc3c4c68cfd0312987cf" kindref="member">net_lldp_recv_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="group__lldp_1gafde82841435942b1ce7cc91083c9a06f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__net__core_1ga8e5393f3bdd85491f221324e637c3896" kindref="member">net_verdict</ref><sp/><ref refid="group__lldp_1gafde82841435942b1ce7cc91083c9a06f" kindref="member">net_lldp_recv</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*<ref refid="structnet__pkt_1a7590eeacf06469206cb7e7949acfa7b2" kindref="member">iface</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__pkt" kindref="compound">net_pkt</ref><sp/>*pkt);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_LLDP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lldp_1ga961bc59567ffa2d5a4d21290d1d78407" kindref="member">net_lldp_set_lldpdu</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*<ref refid="structnet__pkt_1a7590eeacf06469206cb7e7949acfa7b2" kindref="member">iface</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="group__lldp_1ga961bc59567ffa2d5a4d21290d1d78407" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>net_lldp_set_lldpdu(iface)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_LLDP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lldp_1gafdd1b4cea9f560597c31a0e42d5341e0" kindref="member">net_lldp_unset_lldpdu</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*<ref refid="structnet__pkt_1a7590eeacf06469206cb7e7949acfa7b2" kindref="member">iface</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="group__lldp_1gafdd1b4cea9f560597c31a0e42d5341e0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>net_lldp_unset_lldpdu(iface)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_NET_LLDP_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/net/lldp.h"/>
  </compounddef>
</doxygen>
