<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structmedia__proxy__ctrl__cbs" kind="struct" language="C++" prot="public">
    <compoundname>media_proxy_ctrl_cbs</compoundname>
    <includes refid="media__proxy_8h" local="no">media_proxy.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1af2cd0f93aadd451f1b358e2d2d6a0049" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::local_player_instance) (struct media_player *player, int err)</definition>
        <argsstring>)(struct media_player *player, int err)</argsstring>
        <name>local_player_instance</name>
        <briefdescription>
<para>Media Player Instance callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the local Media Player instance is registered or read (TODO). Also called if the local player instance is already registered when the controller is registered. Provides the controller with the pointer to the local player instance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, or errno on negative value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="258" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a89df9f9d320b527a2b7a3f99ec6baeb9" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::discover_player) (struct media_player *player, int err)</definition>
        <argsstring>)(struct media_player *player, int err)</argsstring>
        <name>discover_player</name>
        <briefdescription>
<para>Discover Player Instance callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when a remote player instance has been discovered. The instance has been discovered, and will be accessed, using Bluetooth, via media control client and a remote media control service.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Instance pointer to the remote player </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="271" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a94b5ec6bc20299b722bd0e2cb28aed5e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::player_name_recv) (struct media_player *player, int err, const char *name)</definition>
        <argsstring>)(struct media_player *player, int err, const char *name)</argsstring>
        <name>player_name_recv</name>
        <briefdescription>
<para>Media Player Name receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Media Player Name is read or changed See also media_proxy_ctrl_name_get()</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the media player </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="284" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1aaa7ba216e604be1c447a93231a0857d0" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::icon_id_recv) (struct media_player *player, int err, uint64_t id)</definition>
        <argsstring>)(struct media_player *player, int err, uint64_t id)</argsstring>
        <name>icon_id_recv</name>
        <briefdescription>
<para>Media Player Icon Object ID receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Media Player Icon Object ID is read See also <ref refid="media__proxy_8h_1a5efccb39cdb97eed476e0c0bff461ec1" kindref="member">media_proxy_ctrl_get_icon_id()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the Icon object in the Object Transfer Service (48 bits) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="297" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a53c4809b7a10b9057f565411429d691b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::icon_url_recv) (struct media_player *player, int err, const char *url)</definition>
        <argsstring>)(struct media_player *player, int err, const char *url)</argsstring>
        <name>icon_url_recv</name>
        <briefdescription>
<para>Media Player Icon URL receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Media Player Icon URL is read See also <ref refid="media__proxy_8h_1ab6df6fe71c8273eca855eb3be27290dd" kindref="member">media_proxy_ctrl_get_icon_url()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>The URL of the icon </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="310" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1ade71f132ef66c7bfd13b1b1f3200681d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::track_changed_recv) (struct media_player *player, int err)</definition>
        <argsstring>)(struct media_player *player, int err)</argsstring>
        <name>track_changed_recv</name>
        <briefdescription>
<para>Track changed receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Current Track is changed</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="321" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1ac1afc71ed04faa87e644d095ef14946f" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::track_title_recv) (struct media_player *player, int err, const char *title)</definition>
        <argsstring>)(struct media_player *player, int err, const char *title)</argsstring>
        <name>track_title_recv</name>
        <briefdescription>
<para>Track Title receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Track Title is read or changed See also <ref refid="media__proxy_8h_1abfbb49e79204130cb004f217af771b80" kindref="member">media_proxy_ctrl_get_track_title()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The title of the current track </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="334" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a85c0bfc83bb26c74b11b5cb8182ff1e0" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::track_duration_recv) (struct media_player *player, int err, int32_t duration)</definition>
        <argsstring>)(struct media_player *player, int err, int32_t duration)</argsstring>
        <name>track_duration_recv</name>
        <briefdescription>
<para>Track Duration receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Track Duration is read or changed Seel also <ref refid="media__proxy_8h_1a488441418a8f2d358092019bbfe16788" kindref="member">media_proxy_ctrl_get_track_duration()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>The duration of the current track </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="347" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a6aa029523978e02dc1c8c7ff798e2433" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::track_position_recv) (struct media_player *player, int err, int32_t position)</definition>
        <argsstring>)(struct media_player *player, int err, int32_t position)</argsstring>
        <name>track_position_recv</name>
        <briefdescription>
<para>Track Position receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Track Position is read or changed See also <ref refid="media__proxy_8h_1ae0bb75feb49a68b495150c6fba2f21a7" kindref="member">media_proxy_ctrl_get_track_position()</ref> and <ref refid="media__proxy_8h_1a776bb5f16cf1f4f6cc3842aabd86b781" kindref="member">media_proxy_ctrl_set_track_position()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The player&apos;s position in the track </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="361" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a54f9f50e3b8f99b586a2c522a67da213" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::track_position_write) (struct media_player *player, int err, int32_t position)</definition>
        <argsstring>)(struct media_player *player, int err, int32_t position)</argsstring>
        <name>track_position_write</name>
        <briefdescription>
<para>Track Position write callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Track Position is written See also <ref refid="media__proxy_8h_1a776bb5f16cf1f4f6cc3842aabd86b781" kindref="member">media_proxy_ctrl_set_track_position()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position given attempted to write </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="374" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a5eb1466e8ba100c9d3cb12f097328b9e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::playback_speed_recv) (struct media_player *player, int err, int8_t speed)</definition>
        <argsstring>)(struct media_player *player, int err, int8_t speed)</argsstring>
        <name>playback_speed_recv</name>
        <briefdescription>
<para>Playback Speed receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Playback Speed is read or changed See also <ref refid="media__proxy_8h_1a2d64a23b3f881579a603a04baeb64088" kindref="member">media_proxy_ctrl_get_playback_speed()</ref> and <ref refid="media__proxy_8h_1abafbc857c3e6befe98e339acb58f17fb" kindref="member">media_proxy_ctrl_set_playback_speed()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>The playback speed parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="388" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1ad84d5caca4be208bd5e5d93f5c801ddf" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::playback_speed_write) (struct media_player *player, int err, int8_t speed)</definition>
        <argsstring>)(struct media_player *player, int err, int8_t speed)</argsstring>
        <name>playback_speed_write</name>
        <briefdescription>
<para>Playback Speed write callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Playback Speed is written See also <ref refid="media__proxy_8h_1abafbc857c3e6befe98e339acb58f17fb" kindref="member">media_proxy_ctrl_set_playback_speed()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>The playback speed parameter attempted to write </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="401" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a2ba0e73f7e67c38f5abe555305753d0f" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::seeking_speed_recv) (struct media_player *player, int err, int8_t speed)</definition>
        <argsstring>)(struct media_player *player, int err, int8_t speed)</argsstring>
        <name>seeking_speed_recv</name>
        <briefdescription>
<para>Seeking Speed receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Seeking Speed is read or changed See also <ref refid="media__proxy_8h_1a817ca4ab611e214493fbc918036def0f" kindref="member">media_proxy_ctrl_get_seeking_speed()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>The seeking speed factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="414" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1aa7e7f7724689844491a4885544fc450c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::track_segments_id_recv) (struct media_player *player, int err, uint64_t id)</definition>
        <argsstring>)(struct media_player *player, int err, uint64_t id)</argsstring>
        <name>track_segments_id_recv</name>
        <briefdescription>
<para>Track Segments Object ID receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Track Segments Object ID is read See also <ref refid="media__proxy_8h_1a1afcc097cb36c4f11141b82ce28e8126" kindref="member">media_proxy_ctrl_get_track_segments_id()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the track segments object in Object Transfer Service (48 bits) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="427" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1aa3c2bd1734c6235eb2026915dbebc6c2" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::current_track_id_recv) (struct media_player *player, int err, uint64_t id)</definition>
        <argsstring>)(struct media_player *player, int err, uint64_t id)</argsstring>
        <name>current_track_id_recv</name>
        <briefdescription>
<para>Current Track Object ID receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Current Track Object ID is read or changed See also <ref refid="media__proxy_8h_1aebe7e3683041e28bef40df75cc991dea" kindref="member">media_proxy_ctrl_get_current_track_id()</ref> and <ref refid="media__proxy_8h_1aea6adacedaded10f7c2c0f91b7159f74" kindref="member">media_proxy_ctrl_set_current_track_id()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the current track object in Object Transfer Service (48 bits) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="441" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a66f35a59821f53f4ed9aa7dea0e4d654" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::current_track_id_write) (struct media_player *player, int err, uint64_t id)</definition>
        <argsstring>)(struct media_player *player, int err, uint64_t id)</argsstring>
        <name>current_track_id_write</name>
        <briefdescription>
<para>Current Track Object ID write callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Current Track Object ID is written See also <ref refid="media__proxy_8h_1aea6adacedaded10f7c2c0f91b7159f74" kindref="member">media_proxy_ctrl_set_current_track_id()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID (48 bits) attempted to write </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="454" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a5692c0d142977b8ec7a4ffb765fd0687" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::next_track_id_recv) (struct media_player *player, int err, uint64_t id)</definition>
        <argsstring>)(struct media_player *player, int err, uint64_t id)</argsstring>
        <name>next_track_id_recv</name>
        <briefdescription>
<para>Next Track Object ID receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Next Track Object ID is read or changed See also <ref refid="media__proxy_8h_1ae32da32bd504061801730805729242e1" kindref="member">media_proxy_ctrl_get_next_track_id()</ref> and <ref refid="media__proxy_8h_1a43b797717fb9b36b94a606dfabeb0fa7" kindref="member">media_proxy_ctrl_set_next_track_id()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the next track object in Object Transfer Service (48 bits) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="468" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a08b6fe1079b759de1f5a9f7751a22f21" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::next_track_id_write) (struct media_player *player, int err, uint64_t id)</definition>
        <argsstring>)(struct media_player *player, int err, uint64_t id)</argsstring>
        <name>next_track_id_write</name>
        <briefdescription>
<para>Next Track Object ID write callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Next Track Object ID is written See also <ref refid="media__proxy_8h_1a43b797717fb9b36b94a606dfabeb0fa7" kindref="member">media_proxy_ctrl_set_next_track_id()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID (48 bits) attempted to write </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="481" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a3c2b39bc46f8b2a7155c14dd430add8e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::parent_group_id_recv) (struct media_player *player, int err, uint64_t id)</definition>
        <argsstring>)(struct media_player *player, int err, uint64_t id)</argsstring>
        <name>parent_group_id_recv</name>
        <briefdescription>
<para>Parent Group Object ID receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Parent Group Object ID is read or changed See also <ref refid="media__proxy_8h_1a12dc878be39814660900ba875e13e537" kindref="member">media_proxy_ctrl_get_parent_group_id()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the parent group object in Object Transfer Service (48 bits) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="494" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a858a8854259c8e7a09164b916fae309a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::current_group_id_recv) (struct media_player *player, int err, uint64_t id)</definition>
        <argsstring>)(struct media_player *player, int err, uint64_t id)</argsstring>
        <name>current_group_id_recv</name>
        <briefdescription>
<para>Current Group Object ID receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Current Group Object ID is read or changed See also <ref refid="media__proxy_8h_1a2ae50a1988305b4247ff0af796b6d93e" kindref="member">media_proxy_ctrl_get_current_group_id()</ref> and <ref refid="media__proxy_8h_1ae496885d0124f4e3fc2c0f203fcff118" kindref="member">media_proxy_ctrl_set_current_group_id()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the current group object in Object Transfer Service (48 bits) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="508" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1ad1a65519a958aa27091a2ba41260db04" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::current_group_id_write) (struct media_player *player, int err, uint64_t id)</definition>
        <argsstring>)(struct media_player *player, int err, uint64_t id)</argsstring>
        <name>current_group_id_write</name>
        <briefdescription>
<para>Current Group Object ID write callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Current Group Object ID is written See also <ref refid="media__proxy_8h_1ae496885d0124f4e3fc2c0f203fcff118" kindref="member">media_proxy_ctrl_set_current_group_id()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID (48 bits) attempted to write </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="521" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a92a3b0e3254d6b26e0d18476dce3b01e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::playing_order_recv) (struct media_player *player, int err, uint8_t order)</definition>
        <argsstring>)(struct media_player *player, int err, uint8_t order)</argsstring>
        <name>playing_order_recv</name>
        <briefdescription>
<para>Playing Order receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Playing Order is read or changed See also <ref refid="media__proxy_8h_1a2f93bcde2460c6638880f8e6631eb68e" kindref="member">media_proxy_ctrl_get_playing_order()</ref> and <ref refid="media__proxy_8h_1aa4040e97100f6e70527e6ad201309bbe" kindref="member">media_proxy_ctrl_set_playing_order()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>order</parametername>
</parameternamelist>
<parameterdescription>
<para>The playing order </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="535" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a67cf70c9b72a87b03009f1da0a8980f2" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::playing_order_write) (struct media_player *player, int err, uint8_t order)</definition>
        <argsstring>)(struct media_player *player, int err, uint8_t order)</argsstring>
        <name>playing_order_write</name>
        <briefdescription>
<para>Playing Order write callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Playing Order is written See also <ref refid="media__proxy_8h_1aa4040e97100f6e70527e6ad201309bbe" kindref="member">media_proxy_ctrl_set_playing_order()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>order</parametername>
</parameternamelist>
<parameterdescription>
<para>The playing order attempted to write </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="548" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="548" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a85182342b606c78127f2690ac1beab7d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::playing_orders_supported_recv) (struct media_player *player, int err, uint16_t orders)</definition>
        <argsstring>)(struct media_player *player, int err, uint16_t orders)</argsstring>
        <name>playing_orders_supported_recv</name>
        <briefdescription>
<para>Playing Orders Supported receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Playing Orders Supported is read See also <ref refid="media__proxy_8h_1a030899757b79251f1d5a1055f65fe989" kindref="member">media_proxy_ctrl_get_playing_orders_supported()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orders</parametername>
</parameternamelist>
<parameterdescription>
<para>The playing orders supported </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="561" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="561" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1ad4199644afcf356a565b884129ca0cf3" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::media_state_recv) (struct media_player *player, int err, uint8_t state)</definition>
        <argsstring>)(struct media_player *player, int err, uint8_t state)</argsstring>
        <name>media_state_recv</name>
        <briefdescription>
<para>Media State receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Media State is read or changed See also <ref refid="media__proxy_8h_1a9433aaf24776c30557ea694795e75b3e" kindref="member">media_proxy_ctrl_get_media_state()</ref> and <ref refid="media__proxy_8h_1af255cad5d7c807e267e3f4aee635216b" kindref="member">media_proxy_ctrl_send_command()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The media player state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="576" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a820a13af0b62136f468e14ad19ac7666" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::command_send) (struct media_player *player, int err, struct mpl_cmd cmd)</definition>
        <argsstring>)(struct media_player *player, int err, struct mpl_cmd cmd)</argsstring>
        <name>command_send</name>
        <briefdescription>
<para>Command send callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when a command has been sent See also <ref refid="media__proxy_8h_1af255cad5d7c807e267e3f4aee635216b" kindref="member">media_proxy_ctrl_send_command()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>The command sent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="589" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1ae454688b377b722b23ea67c0bfd1a11c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::command_recv) (struct media_player *player, int err, struct mpl_cmd_ntf result)</definition>
        <argsstring>)(struct media_player *player, int err, struct mpl_cmd_ntf result)</argsstring>
        <name>command_recv</name>
        <briefdescription>
<para>Command result receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when a command result has been received See also <ref refid="media__proxy_8h_1af255cad5d7c807e267e3f4aee635216b" kindref="member">media_proxy_ctrl_send_command()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The result received </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="602" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="602" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a06fadb043fd0a795f872063b7950d414" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::commands_supported_recv) (struct media_player *player, int err, uint32_t opcodes)</definition>
        <argsstring>)(struct media_player *player, int err, uint32_t opcodes)</argsstring>
        <name>commands_supported_recv</name>
        <briefdescription>
<para>Commands supported receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Commands Supported is read or changed See also <ref refid="media__proxy_8h_1a15804287093b20d4a1616380729b33c8" kindref="member">media_proxy_ctrl_get_commands_supported()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opcodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The supported command opcodes (bitmap) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="615" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a89e1beb70a8161cd66701e4897deda80" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::search_send) (struct media_player *player, int err, struct mpl_search search)</definition>
        <argsstring>)(struct media_player *player, int err, struct mpl_search search)</argsstring>
        <name>search_send</name>
        <briefdescription>
<para>Search send callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when a search has been sent See also <ref refid="media__proxy_8h_1a7dcbb29279e25e0910cfcab9a2daa56e" kindref="member">media_proxy_ctrl_send_search()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>search</parametername>
</parameternamelist>
<parameterdescription>
<para>The search sent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="628" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="628" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a0678ad4950c6f526c78d2143e9b7c385" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::search_recv) (struct media_player *player, int err, uint8_t result_code)</definition>
        <argsstring>)(struct media_player *player, int err, uint8_t result_code)</argsstring>
        <name>search_recv</name>
        <briefdescription>
<para>Search result code receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when a search result code has been received See also <ref refid="media__proxy_8h_1a7dcbb29279e25e0910cfcab9a2daa56e" kindref="member">media_proxy_ctrl_send_search()</ref></para>
<para>The search result code tells whether the search was successful or not. For a successful search, the actual results of the search (i.e. what was found as a result of the search)can be accessed using the Search Results Object ID. The Search Results Object ID has a separate callback - <ref refid="structmedia__proxy__ctrl__cbs_1af067e55ef7f676ad3c05f838160ed21e" kindref="member">search_results_id_recv()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result_code</parametername>
</parameternamelist>
<parameterdescription>
<para>Search result code </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="646" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="646" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1af067e55ef7f676ad3c05f838160ed21e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::search_results_id_recv) (struct media_player *player, int err, uint64_t id)</definition>
        <argsstring>)(struct media_player *player, int err, uint64_t id)</argsstring>
        <name>search_results_id_recv</name>
        <briefdescription>
<para>Search Results Object ID receive callback See also <ref refid="media__proxy_8h_1a580a0c9fa47460be59f0571ee11a41b4" kindref="member">media_proxy_ctrl_get_search_results_id()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Search Results Object ID is read or changed</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the search results object in Object Transfer Service (48 bits) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="659" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="659" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmedia__proxy__ctrl__cbs_1a08f3f55a5b56d1ede9141013fe456119" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* media_proxy_ctrl_cbs::content_ctrl_id_recv) (struct media_player *player, int err, uint8_t ccid)</definition>
        <argsstring>)(struct media_player *player, int err, uint8_t ccid)</argsstring>
        <name>content_ctrl_id_recv</name>
        <briefdescription>
<para>Content Control ID receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the Content Control ID is read See also <ref refid="media__proxy_8h_1a23488e77985a04216ec7c7fa785f09fc" kindref="member">media_proxy_ctrl_get_content_ctrl_id()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Media player instance pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ccid</parametername>
</parameternamelist>
<parameterdescription>
<para>The content control ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/media_proxy.h" line="672" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="672" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Callbacks to a controller, from the media proxy. </para>
    </briefdescription>
    <detaileddescription>
<para>Given by a controller when registering </para>
    </detaileddescription>
    <location file="include/bluetooth/audio/media_proxy.h" line="245" column="1" bodyfile="include/bluetooth/audio/media_proxy.h" bodystart="245" bodyend="673"/>
    <listofallmembers>
      <member refid="structmedia__proxy__ctrl__cbs_1ae454688b377b722b23ea67c0bfd1a11c" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>command_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a820a13af0b62136f468e14ad19ac7666" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>command_send</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a06fadb043fd0a795f872063b7950d414" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>commands_supported_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a08f3f55a5b56d1ede9141013fe456119" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>content_ctrl_id_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a858a8854259c8e7a09164b916fae309a" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>current_group_id_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1ad1a65519a958aa27091a2ba41260db04" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>current_group_id_write</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1aa3c2bd1734c6235eb2026915dbebc6c2" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>current_track_id_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a66f35a59821f53f4ed9aa7dea0e4d654" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>current_track_id_write</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a89df9f9d320b527a2b7a3f99ec6baeb9" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>discover_player</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1aaa7ba216e604be1c447a93231a0857d0" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>icon_id_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a53c4809b7a10b9057f565411429d691b" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>icon_url_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1af2cd0f93aadd451f1b358e2d2d6a0049" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>local_player_instance</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1ad4199644afcf356a565b884129ca0cf3" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>media_state_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a5692c0d142977b8ec7a4ffb765fd0687" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>next_track_id_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a08b6fe1079b759de1f5a9f7751a22f21" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>next_track_id_write</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a3c2b39bc46f8b2a7155c14dd430add8e" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>parent_group_id_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a5eb1466e8ba100c9d3cb12f097328b9e" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>playback_speed_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1ad84d5caca4be208bd5e5d93f5c801ddf" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>playback_speed_write</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a94b5ec6bc20299b722bd0e2cb28aed5e" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>player_name_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a92a3b0e3254d6b26e0d18476dce3b01e" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>playing_order_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a67cf70c9b72a87b03009f1da0a8980f2" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>playing_order_write</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a85182342b606c78127f2690ac1beab7d" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>playing_orders_supported_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a0678ad4950c6f526c78d2143e9b7c385" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>search_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1af067e55ef7f676ad3c05f838160ed21e" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>search_results_id_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a89e1beb70a8161cd66701e4897deda80" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>search_send</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a2ba0e73f7e67c38f5abe555305753d0f" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>seeking_speed_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1ade71f132ef66c7bfd13b1b1f3200681d" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>track_changed_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a85c0bfc83bb26c74b11b5cb8182ff1e0" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>track_duration_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a6aa029523978e02dc1c8c7ff798e2433" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>track_position_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1a54f9f50e3b8f99b586a2c522a67da213" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>track_position_write</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1aa7e7f7724689844491a4885544fc450c" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>track_segments_id_recv</name></member>
      <member refid="structmedia__proxy__ctrl__cbs_1ac1afc71ed04faa87e644d095ef14946f" prot="public" virt="non-virtual"><scope>media_proxy_ctrl_cbs</scope><name>track_title_recv</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
