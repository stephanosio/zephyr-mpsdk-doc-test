<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="iso_8h" kind="file" language="C++">
    <compoundname>iso.h</compoundname>
    <includes refid="atomic_8h" local="no">sys/atomic.h</includes>
    <includes refid="bluetooth_2buf_8h" local="no">bluetooth/buf.h</includes>
    <includes refid="conn_8h" local="no">bluetooth/conn.h</includes>
    <includes refid="hci_8h" local="no">bluetooth/hci.h</includes>
    <includedby refid="audio_8h" local="no">include/bluetooth/audio/audio.h</includedby>
    <incdepgraph>
      <node id="18">
        <label>bluetooth/addr.h</label>
        <link refid="addr_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>bluetooth/bluetooth.h</label>
        <link refid="bluetooth_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>bluetooth/buf.h</label>
        <link refid="bluetooth_2buf_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>bluetooth/conn.h</label>
        <link refid="conn_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>bluetooth/crypto.h</label>
        <link refid="crypto_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>bluetooth/direction.h</label>
        <link refid="direction_8h"/>
      </node>
      <node id="25">
        <label>bluetooth/gap.h</label>
        <link refid="gap_8h"/>
      </node>
      <node id="16">
        <label>bluetooth/hci.h</label>
        <link refid="hci_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>bluetooth/hci_err.h</label>
        <link refid="hci__err_8h"/>
      </node>
      <node id="1">
        <label>include/bluetooth/iso.h</label>
        <link refid="iso_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>net/buf.h</label>
        <link refid="net_2buf_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="19">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="8">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="6">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="7">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="17">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="15">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/bluetooth/audio/audio.h</label>
        <link refid="audio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/bluetooth/audio/capabilities.h</label>
        <link refid="capabilities_8h"/>
      </node>
      <node id="1">
        <label>include/bluetooth/iso.h</label>
        <link refid="iso_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structbt__iso__chan" prot="public">bt_iso_chan</innerclass>
    <innerclass refid="structbt__iso__chan__io__qos" prot="public">bt_iso_chan_io_qos</innerclass>
    <innerclass refid="structbt__iso__chan__qos" prot="public">bt_iso_chan_qos</innerclass>
    <innerclass refid="structbt__iso__chan__path" prot="public">bt_iso_chan_path</innerclass>
    <innerclass refid="structbt__iso__recv__info" prot="public">bt_iso_recv_info</innerclass>
    <innerclass refid="structbt__iso__cig__param" prot="public">bt_iso_cig_param</innerclass>
    <innerclass refid="structbt__iso__connect__param" prot="public">bt_iso_connect_param</innerclass>
    <innerclass refid="structbt__iso__big__create__param" prot="public">bt_iso_big_create_param</innerclass>
    <innerclass refid="structbt__iso__big__sync__param" prot="public">bt_iso_big_sync_param</innerclass>
    <innerclass refid="structbt__iso__biginfo" prot="public">bt_iso_biginfo</innerclass>
    <innerclass refid="structbt__iso__chan__ops" prot="public">bt_iso_chan_ops</innerclass>
    <innerclass refid="structbt__iso__accept__info" prot="public">bt_iso_accept_info</innerclass>
    <innerclass refid="structbt__iso__server" prot="public">bt_iso_server</innerclass>
    <innerclass refid="structbt__iso__info" prot="public">bt_iso_info</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__iso_1ga15c9cafd39e89f07eef115e147741098" prot="public" static="no">
        <name>BT_ISO_CHAN_SEND_RESERVE</name>
        <initializer><ref refid="group__bt__buf_1gaa820dee05a7202304e1aaa9a36386ca4" kindref="member">BT_BUF_ISO_SIZE</ref>(0)</initializer>
        <briefdescription>
<para>Headroom needed for outgoing ISO SDUs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="33" column="9" bodyfile="include/bluetooth/iso.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1ga3c0af738d118341da7d370aaa48a89d1" prot="public" static="no">
        <name>BT_ISO_SDU_BUF_SIZE</name>
        <param><defname>mtu</defname></param>
        <initializer><ref refid="group__bt__buf_1gaa820dee05a7202304e1aaa9a36386ca4" kindref="member">BT_BUF_ISO_SIZE</ref>(mtu)</initializer>
        <briefdescription>
<para>Helper to calculate needed buffer size for ISO SDUs. Useful for creating buffer pools. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mtu</parametername>
</parameternamelist>
<parameterdescription>
<para>Required ISO SDU size</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Needed buffer size to match the requested ISO SDU MTU. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="44" column="9" bodyfile="include/bluetooth/iso.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1gadd421c69edccfd695d728ded5feb6862" prot="public" static="no">
        <name>BT_ISO_DATA_PATH_HCI</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Value to set the ISO data path over HCi. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="47" column="9" bodyfile="include/bluetooth/iso.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1ga8b38c8c74e1ff429d7b6388ab55964de" prot="public" static="no">
        <name>BT_ISO_INTERVAL_MIN</name>
        <initializer>0x0000FF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum interval value in microseconds </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="50" column="9" bodyfile="include/bluetooth/iso.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1ga350171f57b0d30bc45fe24328fb57ea2" prot="public" static="no">
        <name>BT_ISO_INTERVAL_MAX</name>
        <initializer>0x0FFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum interval value in microseconds </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="52" column="9" bodyfile="include/bluetooth/iso.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1ga77ae350543eb05617c590c0ad9cb0048" prot="public" static="no">
        <name>BT_ISO_LATENCY_MIN</name>
        <initializer>0x0005</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum latency value in milliseconds </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="54" column="9" bodyfile="include/bluetooth/iso.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1gad5e89d05d8706509d8d9d8dac40e3347" prot="public" static="no">
        <name>BT_ISO_LATENCY_MAX</name>
        <initializer>0x0FA0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum latency value in milliseconds </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="56" column="9" bodyfile="include/bluetooth/iso.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1ga6275e8d805e2366522a78f18ca47ac19" prot="public" static="no">
        <name>BT_ISO_PACKING_SEQUENTIAL</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Packets will be sent sequentially between the channels in the group </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="58" column="9" bodyfile="include/bluetooth/iso.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1ga35b037fcce858857642b4c54bae8dd79" prot="public" static="no">
        <name>BT_ISO_PACKING_INTERLEAVED</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Packets will be sent interleaved between the channels in the group </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="60" column="9" bodyfile="include/bluetooth/iso.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1ga696a81180ae25aa686a53b73e352c9d2" prot="public" static="no">
        <name>BT_ISO_FRAMING_UNFRAMED</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Packets may be framed or unframed </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="62" column="9" bodyfile="include/bluetooth/iso.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1ga8f9aba389529ad2a3667ca378e99de2b" prot="public" static="no">
        <name>BT_ISO_FRAMING_FRAMED</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Packets are always framed </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="64" column="9" bodyfile="include/bluetooth/iso.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1gae9dc30b300e2c309d646e3227e8cc00e" prot="public" static="no">
        <name>BT_ISO_MAX_GROUP_ISO_COUNT</name>
        <initializer>0x1F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum number of isochronous channels in a single group </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="66" column="9" bodyfile="include/bluetooth/iso.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1gaa5d5588e7229db16219b0c44921bbcf7" prot="public" static="no">
        <name>BT_ISO_MAX_SDU</name>
        <initializer>0x0FFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum SDU size </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="68" column="9" bodyfile="include/bluetooth/iso.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1gaa1bd6484a248a6fb5abc31202e5076d4" prot="public" static="no">
        <name>BT_ISO_SYNC_TIMEOUT_MIN</name>
        <initializer>0x000A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum BIG sync timeout value (N * 10 ms) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="70" column="9" bodyfile="include/bluetooth/iso.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1gaeb66806b649bf828afbd83d15c9823eb" prot="public" static="no">
        <name>BT_ISO_SYNC_TIMEOUT_MAX</name>
        <initializer>0x4000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum BIG sync timeout value (N * 10 ms) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="72" column="9" bodyfile="include/bluetooth/iso.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1ga47802144b8523b3d46af9ef97e744bbd" prot="public" static="no">
        <name>BT_ISO_SYNC_MSE_ANY</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Controller controlled maximum subevent count value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="74" column="9" bodyfile="include/bluetooth/iso.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1gafef299e43e0f58ac23e1a1e75ccd0163" prot="public" static="no">
        <name>BT_ISO_SYNC_MSE_MIN</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum BIG sync maximum subevent count value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="76" column="9" bodyfile="include/bluetooth/iso.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1gafd6e7b48394d6f6c8ddd485927b02b4b" prot="public" static="no">
        <name>BT_ISO_SYNC_MSE_MAX</name>
        <initializer>0x1F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum BIG sync maximum subevent count value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="78" column="9" bodyfile="include/bluetooth/iso.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1ga1b52aba83eff5d6ae14169d1d3afa1a7" prot="public" static="no">
        <name>BT_ISO_CONNECTED_RTN_MAX</name>
        <initializer>0xFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum connected ISO retransmission value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="80" column="9" bodyfile="include/bluetooth/iso.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1ga3a579a5d752d4b19dcb668dd7ef27333" prot="public" static="no">
        <name>BT_ISO_BROADCAST_RTN_MAX</name>
        <initializer>0x1E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum broadcast ISO retransmission value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="82" column="9" bodyfile="include/bluetooth/iso.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__iso_1ga5551cab9896764eec39b8e6102e561e5" prot="public" static="no">
        <name>BT_ISO_BROADCAST_CODE_SIZE</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Broadcast code size </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="84" column="9" bodyfile="include/bluetooth/iso.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__bt__iso_1ga1b70d876770ccff427513794d6b0b2a7" prot="public" static="no" strong="no">
        <type></type>
        <name>@78</name>
        <enumvalue id="group__bt__iso_1gga1b70d876770ccff427513794d6b0b2a7ab2721feab3e47c632d938ea842a10821" prot="public">
          <name>BT_ISO_DISCONNECTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel disconnected </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__iso_1gga1b70d876770ccff427513794d6b0b2a7a9fdcd136d385d2228a03ee242ca61f88" prot="public">
          <name>BT_ISO_CONNECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel in connecting state </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__iso_1gga1b70d876770ccff427513794d6b0b2a7abb55d4c8110f9d0db7da6673585bf429" prot="public">
          <name>BT_ISO_CONNECTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel ready for upper layer traffic on it </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__iso_1gga1b70d876770ccff427513794d6b0b2a7ab2fd6e460061c4acb80df538a21f6a3e" prot="public">
          <name>BT_ISO_DISCONNECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel in disconnecting state </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Life-span states of ISO channel. Used only by internal APIs dealing with setting channel to proper state depending on operational context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="90" column="1" bodyfile="include/bluetooth/iso.h" bodystart="90" bodyend="99"/>
      </memberdef>
      <memberdef kind="enum" id="group__bt__iso_1gafcbd720c67c6a6e5f1cae1395e1e06f0" prot="public" static="no" strong="no">
        <type></type>
        <name>bt_iso_chan_type</name>
        <enumvalue id="group__bt__iso_1ggafcbd720c67c6a6e5f1cae1395e1e06f0a58579ee03e3769501536826248758f17" prot="public">
          <name>BT_ISO_CHAN_TYPE_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__iso_1ggafcbd720c67c6a6e5f1cae1395e1e06f0aec07ed1b714b6c042c71ca5e96ff4cce" prot="public">
          <name>BT_ISO_CHAN_TYPE_CONNECTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__iso_1ggafcbd720c67c6a6e5f1cae1395e1e06f0a63fb0b72a274afd24ff6b0d04d28910b" prot="public">
          <name>BT_ISO_CHAN_TYPE_BROADCASTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__iso_1ggafcbd720c67c6a6e5f1cae1395e1e06f0a725ae4b23a26a8569f5abb6a1e8134c2" prot="public">
          <name>BT_ISO_CHAN_TYPE_SYNC_RECEIVER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="102" column="1" bodyfile="include/bluetooth/iso.h" bodystart="102" bodyend="107"/>
      </memberdef>
      <memberdef kind="enum" id="group__bt__iso_1ga70ad55be767ca0a42c9150d24618e4ca" prot="public" static="no" strong="no">
        <type></type>
        <name>@79</name>
        <enumvalue id="group__bt__iso_1gga70ad55be767ca0a42c9150d24618e4caa143de2c153179b3c40aca51c016e6382" prot="public">
          <name>BT_ISO_FLAGS_VALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The ISO packet is valid. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__iso_1gga70ad55be767ca0a42c9150d24618e4caa5f0aa6e3150819821f800dd7376e2218" prot="public">
          <name>BT_ISO_FLAGS_ERROR</name>
          <briefdescription>
<para>The ISO packet may possibly contain errors. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>   May be caused by a failed CRC check or if missing a part of the SDU.
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__iso_1gga70ad55be767ca0a42c9150d24618e4caa5e87d48b6e96275744590194b75396ff" prot="public">
          <name>BT_ISO_FLAGS_LOST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The ISO packet was lost. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ISO packet status flags </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="180" column="1" bodyfile="include/bluetooth/iso.h" bodystart="180" bodyend="190"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__iso_1gaff0e52777b2140519c63b54b9618bca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_iso_server_register</definition>
        <argsstring>(struct bt_iso_server *server)</argsstring>
        <name>bt_iso_server_register</name>
        <param>
          <type>struct <ref refid="structbt__iso__server" kindref="compound">bt_iso_server</ref> *</type>
          <declname>server</declname>
        </param>
        <briefdescription>
<para>Register ISO server. </para>
        </briefdescription>
        <detaileddescription>
<para>Register ISO server, each new connection is authorized using the <ref refid="posix_2sys_2socket_8h_1a33e6ea428ff537ed7a4763ce91b7d9bb" kindref="member">accept()</ref> callback which in case of success shall allocate the channel structure to be used by the new connection.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>Server structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="510" column="5" declfile="include/bluetooth/iso.h" declline="510" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__iso_1gaea03fc251206f18de320506064c1631f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_iso_cig_create</definition>
        <argsstring>(const struct bt_iso_cig_param *param, struct bt_iso_cig **out_cig)</argsstring>
        <name>bt_iso_cig_create</name>
        <param>
          <type>const struct <ref refid="structbt__iso__cig__param" kindref="compound">bt_iso_cig_param</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>struct bt_iso_cig **</type>
          <declname>out_cig</declname>
        </param>
        <briefdescription>
<para>Creates a CIG as a central. </para>
        </briefdescription>
        <detaileddescription>
<para>This can called at any time, even before connecting to a remote device. This must be called before any connected isochronous stream (CIS) channel can be connected.</para>
<para>Once a CIG is created, the channels supplied in the <computeroutput>param</computeroutput> can be connected using bt_iso_chan_connect.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters used to create and enable the CIG. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_cig</parametername>
</parameternamelist>
<parameterdescription>
<para>Connected Isochronous Group object on success.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="526" column="5" declfile="include/bluetooth/iso.h" declline="526" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__iso_1ga98f557c183a82066b81f0265c225bebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_iso_cig_reconfigure</definition>
        <argsstring>(struct bt_iso_cig *cig, const struct bt_iso_cig_param *param)</argsstring>
        <name>bt_iso_cig_reconfigure</name>
        <param>
          <type>struct bt_iso_cig *</type>
          <declname>cig</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__iso__cig__param" kindref="compound">bt_iso_cig_param</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Reconfigure a CIG as a central. </para>
        </briefdescription>
        <detaileddescription>
<para>This function can be used to update a CIG. It will update the group specific parameters, and, if supplied, change the QoS parameters of the individual CIS. If the cis_channels in <computeroutput>param</computeroutput> contains CIS that was not originally in the call to <ref refid="group__bt__iso_1gaea03fc251206f18de320506064c1631f" kindref="member">bt_iso_cig_create()</ref>, these will be added to the group. It is not possible to remove any CIS from the group after creation.</para>
<para>This can be called at any time before connecting an ISO to a remote device. Once any CIS in the group has connected, the group cannot be changed.</para>
<para>Once a CIG is created, the channels supplied in the <computeroutput>param</computeroutput> can be connected using bt_iso_chan_connect.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cig</parametername>
</parameternamelist>
<parameterdescription>
<para>Connected Isochronous Group object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters used to reconfigure the CIG.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="548" column="5" declfile="include/bluetooth/iso.h" declline="548" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__iso_1gad4b6a7286593ff099117113b6ca996f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_iso_cig_terminate</definition>
        <argsstring>(struct bt_iso_cig *cig)</argsstring>
        <name>bt_iso_cig_terminate</name>
        <param>
          <type>struct bt_iso_cig *</type>
          <declname>cig</declname>
        </param>
        <briefdescription>
<para>Terminates a CIG as a central. </para>
        </briefdescription>
        <detaileddescription>
<para>All the CIS in the CIG shall be disconnected first.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cig</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the CIG structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="559" column="5" declfile="include/bluetooth/iso.h" declline="559" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__iso_1ga98953a261f3699b62cd19ab4977e0b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_iso_chan_connect</definition>
        <argsstring>(const struct bt_iso_connect_param *param, size_t count)</argsstring>
        <name>bt_iso_chan_connect</name>
        <param>
          <type>const struct <ref refid="structbt__iso__connect__param" kindref="compound">bt_iso_connect_param</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Connect ISO channels on ACL connections. </para>
        </briefdescription>
        <detaileddescription>
<para>Connect ISO channels. The ISO channels must have been initialized in a CIG first by calling bt_iso_cig_create.</para>
<para>Once the connection is completed the channels&apos; connected() callback will be called. If the connection is rejected disconnected() callback is called instead.</para>
<para>This function will also setup the ISO data path based on the <computeroutput>path</computeroutput> parameter of the <ref refid="structbt__iso__chan__io__qos" kindref="compound">bt_iso_chan_io_qos</ref> for each channel.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a connect parameter array with the ISO and ACL pointers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of connect parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="578" column="5" declfile="include/bluetooth/iso.h" declline="578" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__iso_1ga94c5c788b099284219e5a303b4b8ea69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_iso_chan_disconnect</definition>
        <argsstring>(struct bt_iso_chan *chan)</argsstring>
        <name>bt_iso_chan_disconnect</name>
        <param>
          <type>struct <ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref> *</type>
          <declname>chan</declname>
        </param>
        <briefdescription>
<para>Disconnect ISO channel. </para>
        </briefdescription>
        <detaileddescription>
<para>Disconnect ISO channel, if the connection is pending it will be canceled and as a result the channel disconnected() callback is called. Regarding to input parameter, to get details see reference description to <ref refid="group__bt__iso_1ga98953a261f3699b62cd19ab4977e0b4c" kindref="member">bt_iso_chan_connect()</ref> API above.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="591" column="5" declfile="include/bluetooth/iso.h" declline="591" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__iso_1gae217f48405e02cbced650198ce0fba9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_iso_chan_send</definition>
        <argsstring>(struct bt_iso_chan *chan, struct net_buf *buf)</argsstring>
        <name>bt_iso_chan_send</name>
        <param>
          <type>struct <ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref> *</type>
          <declname>chan</declname>
        </param>
        <param>
          <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Send data to ISO channel. </para>
        </briefdescription>
        <detaileddescription>
<para>Send data from buffer to the channel. If credits are not available, buf will be queued and sent as and when credits are received from peer. Regarding to first input parameter, to get details see reference description to <ref refid="group__bt__iso_1ga98953a261f3699b62cd19ab4977e0b4c" kindref="member">bt_iso_chan_connect()</ref> API above.</para>
<para><simplesect kind="note"><para>Buffer ownership is transferred to the stack in case of success, in case of an error the caller retains the ownership of the buffer.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer containing data to be sent.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bytes sent in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="608" column="5" declfile="include/bluetooth/iso.h" declline="608" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__iso_1ga75e58ed5bfa48f84000f1ce974d649c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_iso_chan_get_info</definition>
        <argsstring>(const struct bt_iso_chan *chan, struct bt_iso_info *info)</argsstring>
        <name>bt_iso_chan_get_info</name>
        <param>
          <type>const struct <ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref> *</type>
          <declname>chan</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__iso__info" kindref="compound">bt_iso_info</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Get ISO channel info. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel info object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success or (negative) error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="623" column="5" declfile="include/bluetooth/iso.h" declline="623" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__iso_1ga729cf386b63fef13a779853a1c0c4d4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="group__bt__iso_1gafcbd720c67c6a6e5f1cae1395e1e06f0" kindref="member">bt_iso_chan_type</ref></type>
        <definition>enum bt_iso_chan_type bt_iso_chan_get_type</definition>
        <argsstring>(const struct bt_iso_chan *chan)</argsstring>
        <name>bt_iso_chan_get_type</name>
        <param>
          <type>const struct <ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref> *</type>
          <declname>chan</declname>
        </param>
        <briefdescription>
<para>Get the type of an ISO channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>enum bt_iso_chan_type The type of the channel. If <computeroutput>is</computeroutput> NULL this will be BT_ISO_CHAN_TYPE_NONE. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="633" column="22" declfile="include/bluetooth/iso.h" declline="633" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__iso_1gac9937316382d257493c7d0359f1341f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_iso_big_create</definition>
        <argsstring>(struct bt_le_ext_adv *padv, struct bt_iso_big_create_param *param, struct bt_iso_big **out_big)</argsstring>
        <name>bt_iso_big_create</name>
        <param>
          <type>struct bt_le_ext_adv *</type>
          <declname>padv</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__iso__big__create__param" kindref="compound">bt_iso_big_create_param</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>struct bt_iso_big **</type>
          <declname>out_big</declname>
        </param>
        <briefdescription>
<para>Creates a BIG as a broadcaster. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">padv</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the periodic advertising object the BIGInfo shall be sent on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters used to create and enable the BIG. The QOS parameters are determined by the QOS field of the first BIS in the BIS list of this parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_big</parametername>
</parameternamelist>
<parameterdescription>
<para>Broadcast Isochronous Group object on success.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="645" column="5" declfile="include/bluetooth/iso.h" declline="645" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__iso_1gab9c06a86bf5cc023f5f9bd16c5d3265b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_iso_big_terminate</definition>
        <argsstring>(struct bt_iso_big *big)</argsstring>
        <name>bt_iso_big_terminate</name>
        <param>
          <type>struct bt_iso_big *</type>
          <declname>big</declname>
        </param>
        <briefdescription>
<para>Terminates a BIG as a broadcaster or receiver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>big</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the BIG structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="654" column="5" declfile="include/bluetooth/iso.h" declline="654" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__iso_1ga790cfeb8516020f317802e019dca4754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_iso_big_sync</definition>
        <argsstring>(struct bt_le_per_adv_sync *sync, struct bt_iso_big_sync_param *param, struct bt_iso_big **out_big)</argsstring>
        <name>bt_iso_big_sync</name>
        <param>
          <type>struct bt_le_per_adv_sync *</type>
          <declname>sync</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__iso__big__sync__param" kindref="compound">bt_iso_big_sync_param</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>struct bt_iso_big **</type>
          <declname>out_big</declname>
        </param>
        <briefdescription>
<para>Creates a BIG as a receiver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sync</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the periodic advertising sync object the BIGInfo was received on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters used to create and enable the BIG sync. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_big</parametername>
</parameternamelist>
<parameterdescription>
<para>Broadcast Isochronous Group object on success.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="664" column="5" declfile="include/bluetooth/iso.h" declline="664" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Bluetooth ISO handling. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_BLUETOOTH_ISO_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_BLUETOOTH_ISO_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="atomic_8h" kindref="compound">sys/atomic.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="bluetooth_2buf_8h" kindref="compound">bluetooth/buf.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="conn_8h" kindref="compound">bluetooth/conn.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="hci_8h" kindref="compound">bluetooth/hci.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="group__bt__iso_1ga15c9cafd39e89f07eef115e147741098" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_CHAN_SEND_RESERVE<sp/>BT_BUF_ISO_SIZE(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="group__bt__iso_1ga3c0af738d118341da7d370aaa48a89d1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_SDU_BUF_SIZE(mtu)<sp/>BT_BUF_ISO_SIZE(mtu)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group__bt__iso_1gadd421c69edccfd695d728ded5feb6862" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_DATA_PATH_HCI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group__bt__iso_1ga8b38c8c74e1ff429d7b6388ab55964de" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_INTERVAL_MIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0000FF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group__bt__iso_1ga350171f57b0d30bc45fe24328fb57ea2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_INTERVAL_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0FFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group__bt__iso_1ga77ae350543eb05617c590c0ad9cb0048" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_LATENCY_MIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="group__bt__iso_1gad5e89d05d8706509d8d9d8dac40e3347" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_LATENCY_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0FA0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group__bt__iso_1ga6275e8d805e2366522a78f18ca47ac19" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_PACKING_SEQUENTIAL<sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="group__bt__iso_1ga35b037fcce858857642b4c54bae8dd79" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_PACKING_INTERLEAVED<sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="group__bt__iso_1ga696a81180ae25aa686a53b73e352c9d2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_FRAMING_UNFRAMED<sp/><sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="group__bt__iso_1ga8f9aba389529ad2a3667ca378e99de2b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_FRAMING_FRAMED<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group__bt__iso_1gae9dc30b300e2c309d646e3227e8cc00e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_MAX_GROUP_ISO_COUNT<sp/><sp/>0x1F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="group__bt__iso_1gaa5d5588e7229db16219b0c44921bbcf7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_MAX_SDU<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0FFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="group__bt__iso_1gaa1bd6484a248a6fb5abc31202e5076d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_SYNC_TIMEOUT_MIN<sp/><sp/><sp/><sp/><sp/>0x000A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="group__bt__iso_1gaeb66806b649bf828afbd83d15c9823eb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_SYNC_TIMEOUT_MAX<sp/><sp/><sp/><sp/><sp/>0x4000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="group__bt__iso_1ga47802144b8523b3d46af9ef97e744bbd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_SYNC_MSE_ANY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="group__bt__iso_1gafef299e43e0f58ac23e1a1e75ccd0163" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_SYNC_MSE_MIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="group__bt__iso_1gafd6e7b48394d6f6c8ddd485927b02b4b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_SYNC_MSE_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="group__bt__iso_1ga1b52aba83eff5d6ae14169d1d3afa1a7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_CONNECTED_RTN_MAX<sp/><sp/><sp/><sp/>0xFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="group__bt__iso_1ga3a579a5d752d4b19dcb668dd7ef27333" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_BROADCAST_RTN_MAX<sp/><sp/><sp/><sp/>0x1E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="group__bt__iso_1ga5551cab9896764eec39b8e6102e561e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_ISO_BROADCAST_CODE_SIZE<sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="92" refid="group__bt__iso_1gga1b70d876770ccff427513794d6b0b2a7ab2721feab3e47c632d938ea842a10821" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__iso_1gga1b70d876770ccff427513794d6b0b2a7ab2721feab3e47c632d938ea842a10821" kindref="member">BT_ISO_DISCONNECTED</ref>,</highlight></codeline>
<codeline lineno="94" refid="group__bt__iso_1gga1b70d876770ccff427513794d6b0b2a7a9fdcd136d385d2228a03ee242ca61f88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__iso_1gga1b70d876770ccff427513794d6b0b2a7a9fdcd136d385d2228a03ee242ca61f88" kindref="member">BT_ISO_CONNECT</ref>,</highlight></codeline>
<codeline lineno="96" refid="group__bt__iso_1gga1b70d876770ccff427513794d6b0b2a7abb55d4c8110f9d0db7da6673585bf429" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__iso_1gga1b70d876770ccff427513794d6b0b2a7abb55d4c8110f9d0db7da6673585bf429" kindref="member">BT_ISO_CONNECTED</ref>,</highlight></codeline>
<codeline lineno="98" refid="group__bt__iso_1gga1b70d876770ccff427513794d6b0b2a7ab2fd6e460061c4acb80df538a21f6a3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__iso_1gga1b70d876770ccff427513794d6b0b2a7ab2fd6e460061c4acb80df538a21f6a3e" kindref="member">BT_ISO_DISCONNECT</ref>,</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="group__bt__iso_1gafcbd720c67c6a6e5f1cae1395e1e06f0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__iso_1gafcbd720c67c6a6e5f1cae1395e1e06f0" kindref="member">bt_iso_chan_type</ref><sp/>{</highlight></codeline>
<codeline lineno="103" refid="group__bt__iso_1ggafcbd720c67c6a6e5f1cae1395e1e06f0a58579ee03e3769501536826248758f17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__iso_1ggafcbd720c67c6a6e5f1cae1395e1e06f0a58579ee03e3769501536826248758f17" kindref="member">BT_ISO_CHAN_TYPE_NONE</ref>,</highlight></codeline>
<codeline lineno="104" refid="group__bt__iso_1ggafcbd720c67c6a6e5f1cae1395e1e06f0aec07ed1b714b6c042c71ca5e96ff4cce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__iso_1ggafcbd720c67c6a6e5f1cae1395e1e06f0aec07ed1b714b6c042c71ca5e96ff4cce" kindref="member">BT_ISO_CHAN_TYPE_CONNECTED</ref>,</highlight></codeline>
<codeline lineno="105" refid="group__bt__iso_1ggafcbd720c67c6a6e5f1cae1395e1e06f0a63fb0b72a274afd24ff6b0d04d28910b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__iso_1ggafcbd720c67c6a6e5f1cae1395e1e06f0a63fb0b72a274afd24ff6b0d04d28910b" kindref="member">BT_ISO_CHAN_TYPE_BROADCASTER</ref>,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__iso_1ggafcbd720c67c6a6e5f1cae1395e1e06f0a725ae4b23a26a8569f5abb6a1e8134c2" kindref="member">BT_ISO_CHAN_TYPE_SYNC_RECEIVER</ref></highlight></codeline>
<codeline lineno="107" refid="group__bt__iso_1ggafcbd720c67c6a6e5f1cae1395e1e06f0a725ae4b23a26a8569f5abb6a1e8134c2" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="structbt__iso__chan" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref><sp/>{</highlight></codeline>
<codeline lineno="112" refid="structbt__iso__chan_1a7fd728385a3aec11be8883bdee8aedea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_conn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structbt__iso__chan_1a7fd728385a3aec11be8883bdee8aedea" kindref="member">iso</ref>;</highlight></codeline>
<codeline lineno="114" refid="structbt__iso__chan_1a214fe133602ac8dcfaaec7f372e12da8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan__ops" kindref="compound">bt_iso_chan_ops</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structbt__iso__chan_1a214fe133602ac8dcfaaec7f372e12da8" kindref="member">ops</ref>;</highlight></codeline>
<codeline lineno="116" refid="structbt__iso__chan_1abe94fca71506bd590d9ef4465258914d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan__qos" kindref="compound">bt_iso_chan_qos</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structbt__iso__chan_1abe94fca71506bd590d9ef4465258914d" kindref="member">qos</ref>;</highlight></codeline>
<codeline lineno="117" refid="structbt__iso__chan_1ade58ebe86a8ef3d920cbdcd837787b99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__iso__chan_1ade58ebe86a8ef3d920cbdcd837787b99" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="118" refid="structbt__iso__chan_1a75347e4f16e715be06298ccf36c8521c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__conn_1gaf0c56cd26c4147f6c9f0faa11fa01783" kindref="member">bt_security_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__iso__chan_1a75347e4f16e715be06298ccf36c8521c" kindref="member">required_sec_level</ref>;</highlight></codeline>
<codeline lineno="120" refid="structbt__iso__chan_1aba7bf6dcad93b121c46daa6ad473a51c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="slist_8h_1a69bf43aad81e3ee2d55250c59b857493" kindref="member">sys_snode_t</ref><sp/><ref refid="structbt__iso__chan_1aba7bf6dcad93b121c46daa6ad473a51c" kindref="member">node</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="structbt__iso__chan__io__qos" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan__io__qos" kindref="compound">bt_iso_chan_io_qos</ref><sp/>{</highlight></codeline>
<codeline lineno="126" refid="structbt__iso__chan__io__qos_1ae52611dc326b6777620ff7aa43f566e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__iso__chan__io__qos_1ae52611dc326b6777620ff7aa43f566e9" kindref="member">sdu</ref>;</highlight></codeline>
<codeline lineno="130" refid="structbt__iso__chan__io__qos_1a2180a4f82e4cdf5288b7f67701a16ad6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__iso__chan__io__qos_1a2180a4f82e4cdf5288b7f67701a16ad6" kindref="member">phy</ref>;</highlight></codeline>
<codeline lineno="132" refid="structbt__iso__chan__io__qos_1a5106bfd09f6be52604e7c7f0e3390684" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__iso__chan__io__qos_1a5106bfd09f6be52604e7c7f0e3390684" kindref="member">rtn</ref>;</highlight></codeline>
<codeline lineno="138" refid="structbt__iso__chan__io__qos_1a725f7578282fbef6671e87bccdf4c85e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan__path" kindref="compound">bt_iso_chan_path</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structbt__iso__chan__io__qos_1a725f7578282fbef6671e87bccdf4c85e" kindref="member">path</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="structbt__iso__chan__qos" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan__qos" kindref="compound">bt_iso_chan_qos</ref><sp/>{</highlight></codeline>
<codeline lineno="150" refid="structbt__iso__chan__qos_1ac231434d1798f431c4fbac5a759784a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan__io__qos" kindref="compound">bt_iso_chan_io_qos</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structbt__iso__chan__qos_1ac231434d1798f431c4fbac5a759784a5" kindref="member">rx</ref>;</highlight></codeline>
<codeline lineno="158" refid="structbt__iso__chan__qos_1a47a99a6ccfa5f1e0c9fb859e66d2e9e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan__io__qos" kindref="compound">bt_iso_chan_io_qos</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structbt__iso__chan__qos_1a47a99a6ccfa5f1e0c9fb859e66d2e9e3" kindref="member">tx</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="structbt__iso__chan__path" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan__path" kindref="compound">bt_iso_chan_path</ref><sp/>{</highlight></codeline>
<codeline lineno="164" refid="structbt__iso__chan__path_1a5e4fb798376489a38a87e4052ff85550" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__iso__chan__path_1a5e4fb798376489a38a87e4052ff85550" kindref="member">pid</ref>;</highlight></codeline>
<codeline lineno="166" refid="structbt__iso__chan__path_1a519c884281207d1165a61ccfb7fbcdf4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__iso__chan__path_1a519c884281207d1165a61ccfb7fbcdf4" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="168" refid="structbt__iso__chan__path_1a95db7917f7b9e90a33f494233c3266eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__iso__chan__path_1a95db7917f7b9e90a33f494233c3266eb" kindref="member">cid</ref>;</highlight></codeline>
<codeline lineno="170" refid="structbt__iso__chan__path_1aebc12293ba0b10a87f1852e2a3e53a23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__iso__chan__path_1aebc12293ba0b10a87f1852e2a3e53a23" kindref="member">vid</ref>;</highlight></codeline>
<codeline lineno="172" refid="structbt__iso__chan__path_1adaed07de7e09263e3e941817eeb44258" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__iso__chan__path_1adaed07de7e09263e3e941817eeb44258" kindref="member">delay</ref>;</highlight></codeline>
<codeline lineno="174" refid="structbt__iso__chan__path_1a0da75c4911a197fed7fd7f17c76dddae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__iso__chan__path_1a0da75c4911a197fed7fd7f17c76dddae" kindref="member">cc_len</ref>;</highlight></codeline>
<codeline lineno="176" refid="structbt__iso__chan__path_1a07f67a18847dce5de9beefdeb28b7529" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__iso__chan__path_1a07f67a18847dce5de9beefdeb28b7529" kindref="member">cc</ref>[0];</highlight></codeline>
<codeline lineno="177"><highlight class="normal">};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="182" refid="group__bt__iso_1gga70ad55be767ca0a42c9150d24618e4caa143de2c153179b3c40aca51c016e6382" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__iso_1gga70ad55be767ca0a42c9150d24618e4caa143de2c153179b3c40aca51c016e6382" kindref="member">BT_ISO_FLAGS_VALID</ref>,</highlight></codeline>
<codeline lineno="187" refid="group__bt__iso_1gga70ad55be767ca0a42c9150d24618e4caa5f0aa6e3150819821f800dd7376e2218" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__iso_1gga70ad55be767ca0a42c9150d24618e4caa5f0aa6e3150819821f800dd7376e2218" kindref="member">BT_ISO_FLAGS_ERROR</ref>,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__iso_1gga70ad55be767ca0a42c9150d24618e4caa5e87d48b6e96275744590194b75396ff" kindref="member">BT_ISO_FLAGS_LOST</ref></highlight></codeline>
<codeline lineno="190" refid="group__bt__iso_1gga70ad55be767ca0a42c9150d24618e4caa5e87d48b6e96275744590194b75396ff" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="structbt__iso__recv__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__recv__info" kindref="compound">bt_iso_recv_info</ref><sp/>{</highlight></codeline>
<codeline lineno="197" refid="structbt__iso__recv__info_1a4bf778ae9be39eb4a740c2eb9670d98a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structbt__iso__recv__info_1a4bf778ae9be39eb4a740c2eb9670d98a" kindref="member">ts</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="structbt__iso__recv__info_1a7f46914c344d7788775d5a0bc27ed1db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structbt__iso__recv__info_1a7f46914c344d7788775d5a0bc27ed1db" kindref="member">sn</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="structbt__iso__recv__info_1a0a7842fcb3251ed89b99fde43ba235a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__iso__recv__info_1a0a7842fcb3251ed89b99fde43ba235a5" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">};</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_iso_cig;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="structbt__iso__cig__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__cig__param" kindref="compound">bt_iso_cig_param</ref><sp/>{</highlight></codeline>
<codeline lineno="212" refid="structbt__iso__cig__param_1a841dee850f3161bd8e904376792c8ad7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref><sp/>**<ref refid="structbt__iso__cig__param_1a841dee850f3161bd8e904376792c8ad7" kindref="member">cis_channels</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="structbt__iso__cig__param_1a69c12b704b9897d88b71bc96bd2d3024" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__iso__cig__param_1a69c12b704b9897d88b71bc96bd2d3024" kindref="member">num_cis</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="structbt__iso__cig__param_1a975b3db1106f6d7ad1b9a150475d0c4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structbt__iso__cig__param_1a975b3db1106f6d7ad1b9a150475d0c4f" kindref="member">interval</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="structbt__iso__cig__param_1a1229d1a4e4c8853187d281e62f144f6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structbt__iso__cig__param_1a1229d1a4e4c8853187d281e62f144f6f" kindref="member">latency</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="structbt__iso__cig__param_1a83fdc5374f341a421e1394b08297cdff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__iso__cig__param_1a83fdc5374f341a421e1394b08297cdff" kindref="member">sca</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="structbt__iso__cig__param_1a3908eadf3080731cb891e803162d321c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__iso__cig__param_1a3908eadf3080731cb891e803162d321c" kindref="member">packing</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="structbt__iso__cig__param_1a4a09f9f6e7a8db17c3037c9f1761b18a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__iso__cig__param_1a4a09f9f6e7a8db17c3037c9f1761b18a" kindref="member">framing</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="structbt__iso__connect__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__connect__param" kindref="compound">bt_iso_connect_param</ref><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>ISO<sp/>channel<sp/>to<sp/>connect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="structbt__iso__connect__param_1ad004956584d2d065d8c0c52959f350d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref><sp/>*<ref refid="structbt__iso__connect__param_1ad004956584d2d065d8c0c52959f350d5" kindref="member">iso_chan</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>ACL<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="structbt__iso__connect__param_1aba2f3838e03a1e31699a4623ba93d372" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_conn<sp/>*<ref refid="structbt__iso__connect__param_1aba2f3838e03a1e31699a4623ba93d372" kindref="member">acl</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">};</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_iso_big;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="structbt__iso__big__create__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__big__create__param" kindref="compound">bt_iso_big_create_param</ref><sp/>{</highlight></codeline>
<codeline lineno="269" refid="structbt__iso__big__create__param_1a7548bbb75f240a70435cb86a48846d0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref><sp/>**<ref refid="structbt__iso__big__create__param_1a7548bbb75f240a70435cb86a48846d0a" kindref="member">bis_channels</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="structbt__iso__big__create__param_1a8ae9c225798e9f5b72fe0b8c3b6f2cf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__iso__big__create__param_1a8ae9c225798e9f5b72fe0b8c3b6f2cf0" kindref="member">num_bis</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="structbt__iso__big__create__param_1a7aaef1f7a78ae1088886a78739fd6849" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structbt__iso__big__create__param_1a7aaef1f7a78ae1088886a78739fd6849" kindref="member">interval</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="structbt__iso__big__create__param_1ab847021da2e604036cecf90483e12132" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structbt__iso__big__create__param_1ab847021da2e604036cecf90483e12132" kindref="member">latency</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="structbt__iso__big__create__param_1ad478d7b36fb34b8e57a25ae0029e4c51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__iso__big__create__param_1ad478d7b36fb34b8e57a25ae0029e4c51" kindref="member">packing</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="structbt__iso__big__create__param_1aab0e9f66cb10643e72d6382718ed4c0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__iso__big__create__param_1aab0e9f66cb10643e72d6382718ed4c0d" kindref="member">framing</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="structbt__iso__big__create__param_1a1288fa2a8f6bb3e2ab26729e245277e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structbt__iso__big__create__param_1a1288fa2a8f6bb3e2ab26729e245277e1" kindref="member">encryption</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="structbt__iso__big__create__param_1aaee9af5a21b2f9812f9635c526f3a923" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__iso__big__create__param_1aaee9af5a21b2f9812f9635c526f3a923" kindref="member">bcode</ref>[<ref refid="group__bt__iso_1ga5551cab9896764eec39b8e6102e561e5" kindref="member">BT_ISO_BROADCAST_CODE_SIZE</ref>];</highlight></codeline>
<codeline lineno="312"><highlight class="normal">};</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="structbt__iso__big__sync__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__big__sync__param" kindref="compound">bt_iso_big_sync_param</ref><sp/>{</highlight></codeline>
<codeline lineno="316" refid="structbt__iso__big__sync__param_1ac56d7206c3434837a52059716355adad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref><sp/>**<ref refid="structbt__iso__big__sync__param_1ac56d7206c3434837a52059716355adad" kindref="member">bis_channels</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="structbt__iso__big__sync__param_1a96cd109e9f5820531635d48e88b4bff8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__iso__big__sync__param_1a96cd109e9f5820531635d48e88b4bff8" kindref="member">num_bis</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="structbt__iso__big__sync__param_1a14b03509daf760edbead86659f733136" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structbt__iso__big__sync__param_1a14b03509daf760edbead86659f733136" kindref="member">bis_bitfield</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="structbt__iso__big__sync__param_1a16b332b4a0f373cb21e5da6e6e383b9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structbt__iso__big__sync__param_1a16b332b4a0f373cb21e5da6e6e383b9e" kindref="member">mse</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="structbt__iso__big__sync__param_1a8e344870fc0e380e6588eb90c7ef72f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structbt__iso__big__sync__param_1a8e344870fc0e380e6588eb90c7ef72f9" kindref="member">sync_timeout</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="structbt__iso__big__sync__param_1a8e5cffe8960477e7f64707d7dd4191f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><ref refid="structbt__iso__big__sync__param_1a8e5cffe8960477e7f64707d7dd4191f6" kindref="member">encryption</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="structbt__iso__big__sync__param_1aaecdeabed10b90e84b618dac1129a9dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__iso__big__sync__param_1aaecdeabed10b90e84b618dac1129a9dc" kindref="member">bcode</ref>[<ref refid="group__bt__iso_1ga5551cab9896764eec39b8e6102e561e5" kindref="member">BT_ISO_BROADCAST_CODE_SIZE</ref>];</highlight></codeline>
<codeline lineno="359"><highlight class="normal">};</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="structbt__iso__biginfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__biginfo" kindref="compound">bt_iso_biginfo</ref><sp/>{</highlight></codeline>
<codeline lineno="363" refid="structbt__iso__biginfo_1aa7dbfd342eecf8ffc2fce9d3fa7209ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbt__addr__le__t" kindref="compound">bt_addr_le_t</ref><sp/>*<ref refid="structbt__iso__biginfo_1aa7dbfd342eecf8ffc2fce9d3fa7209ea" kindref="member">addr</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="structbt__iso__biginfo_1a78e0a53f920980081d7b0702b02cf386" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__iso__biginfo_1a78e0a53f920980081d7b0702b02cf386" kindref="member">sid</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="structbt__iso__biginfo_1a10eb24596a4353da3feb0d30fed35ae7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><ref refid="structbt__iso__biginfo_1a10eb24596a4353da3feb0d30fed35ae7" kindref="member">num_bis</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="structbt__iso__biginfo_1a24eb83f7b54e9f949cc07e9955b4a8b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><ref refid="structbt__iso__biginfo_1a24eb83f7b54e9f949cc07e9955b4a8b8" kindref="member">sub_evt_count</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="structbt__iso__biginfo_1afe96caf570314731f6c543b40d7def9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structbt__iso__biginfo_1afe96caf570314731f6c543b40d7def9a" kindref="member">iso_interval</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="structbt__iso__biginfo_1ad114dd97500d12242da77e8522133953" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><ref refid="structbt__iso__biginfo_1ad114dd97500d12242da77e8522133953" kindref="member">burst_number</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="structbt__iso__biginfo_1a4efb91dc2f249e41c65cd0dcbfe45bad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><ref refid="structbt__iso__biginfo_1a4efb91dc2f249e41c65cd0dcbfe45bad" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="structbt__iso__biginfo_1a8458f6d6ebe936212d928caca61b13bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><ref refid="structbt__iso__biginfo_1a8458f6d6ebe936212d928caca61b13bd" kindref="member">rep_count</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="structbt__iso__biginfo_1af356aa29aa82c8deb63a9f47e54070a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structbt__iso__biginfo_1af356aa29aa82c8deb63a9f47e54070a1" kindref="member">max_pdu</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="structbt__iso__biginfo_1a4a6d6cdea56a69a0b3b3fd021489750d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structbt__iso__biginfo_1a4a6d6cdea56a69a0b3b3fd021489750d" kindref="member">sdu_interval</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="structbt__iso__biginfo_1a9fddcb74f3de7eb857583a0179427f84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structbt__iso__biginfo_1a9fddcb74f3de7eb857583a0179427f84" kindref="member">max_sdu</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="structbt__iso__biginfo_1a2cbaf6a89e8aaf62c7048e04523e57d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><ref refid="structbt__iso__biginfo_1a2cbaf6a89e8aaf62c7048e04523e57d4" kindref="member">phy</ref>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="structbt__iso__biginfo_1a1084c209d122d2d13244b77659ce28dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><ref refid="structbt__iso__biginfo_1a1084c209d122d2d13244b77659ce28dd" kindref="member">framing</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="structbt__iso__biginfo_1a7d54ecb896c0d6bc590311d5d5a3ac7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><ref refid="structbt__iso__biginfo_1a7d54ecb896c0d6bc590311d5d5a3ac7b" kindref="member">encryption</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal">};</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="structbt__iso__chan__ops" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan__ops" kindref="compound">bt_iso_chan_ops</ref><sp/>{</highlight></codeline>
<codeline lineno="418" refid="structbt__iso__chan__ops_1a6b0e51770158da7b728e1084a8e44504" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structbt__iso__chan__ops_1a6b0e51770158da7b728e1084a8e44504" kindref="member">connected</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref><sp/>*chan);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="structbt__iso__chan__ops_1a7bf9fe04f42bacd59f623aa28a3b0665" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structbt__iso__chan__ops_1a2069849352019362e5dc7d68f835f359" kindref="member">disconnected</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref><sp/>*chan,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>reason);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*(*alloc_buf)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref><sp/>*chan);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="structbt__iso__chan__ops_1a6d5d9423fff83f8f337f97b3fc018f39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structbt__iso__chan__ops_1a6d5d9423fff83f8f337f97b3fc018f39" kindref="member">recv</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref><sp/>*chan,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__recv__info" kindref="compound">bt_iso_recv_info</ref><sp/>*info,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*buf);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="structbt__iso__chan__ops_1a048954070628229b8aacd373de1fb236" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structbt__iso__chan__ops_1a048954070628229b8aacd373de1fb236" kindref="member">sent</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref><sp/>*chan);</highlight></codeline>
<codeline lineno="462"><highlight class="normal">};</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="structbt__iso__accept__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__accept__info" kindref="compound">bt_iso_accept_info</ref><sp/>{</highlight></codeline>
<codeline lineno="466" refid="structbt__iso__accept__info_1a4225ccc90f1e17e26ce61fe398f506d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_conn<sp/>*<ref refid="structbt__iso__accept__info_1a4225ccc90f1e17e26ce61fe398f506d1" kindref="member">acl</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="structbt__iso__accept__info_1a88002043a67c89c8d518ebdf92cf8847" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__iso__accept__info_1a88002043a67c89c8d518ebdf92cf8847" kindref="member">cig_id</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="structbt__iso__accept__info_1a688809132997c37a6fe2529498a4ee0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__iso__accept__info_1a688809132997c37a6fe2529498a4ee0e" kindref="member">cis_id</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal">};</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="structbt__iso__server" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__server" kindref="compound">bt_iso_server</ref><sp/>{</highlight></codeline>
<codeline lineno="484" refid="structbt__iso__server_1a43b53fd63d4deaa1c5599499eec29c99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__conn_1gaf0c56cd26c4147f6c9f0faa11fa01783" kindref="member">bt_security_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__iso__server_1a43b53fd63d4deaa1c5599499eec29c99" kindref="member">sec_level</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="structbt__iso__server_1ae67a000ae524cba53b6bda503568ba38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structbt__iso__server_1ae67a000ae524cba53b6bda503568ba38" kindref="member">accept</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__accept__info" kindref="compound">bt_iso_accept_info</ref><sp/>*info,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref><sp/>**chan);</highlight></codeline>
<codeline lineno="498"><highlight class="normal">};</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="group__bt__iso_1gaff0e52777b2140519c63b54b9618bca8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__iso_1gaff0e52777b2140519c63b54b9618bca8" kindref="member">bt_iso_server_register</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__iso__server" kindref="compound">bt_iso_server</ref><sp/>*server);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="group__bt__iso_1gaea03fc251206f18de320506064c1631f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__iso_1gaea03fc251206f18de320506064c1631f" kindref="member">bt_iso_cig_create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__iso__cig__param" kindref="compound">bt_iso_cig_param</ref><sp/>*param,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_iso_cig<sp/>**out_cig);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="group__bt__iso_1ga98f557c183a82066b81f0265c225bebe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__iso_1ga98f557c183a82066b81f0265c225bebe" kindref="member">bt_iso_cig_reconfigure</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_iso_cig<sp/>*cig,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__iso__cig__param" kindref="compound">bt_iso_cig_param</ref><sp/>*param);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="group__bt__iso_1gad4b6a7286593ff099117113b6ca996f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__iso_1gad4b6a7286593ff099117113b6ca996f8" kindref="member">bt_iso_cig_terminate</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_iso_cig<sp/>*cig);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="578" refid="group__bt__iso_1ga98953a261f3699b62cd19ab4977e0b4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__iso_1ga98953a261f3699b62cd19ab4977e0b4c" kindref="member">bt_iso_chan_connect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__iso__connect__param" kindref="compound">bt_iso_connect_param</ref><sp/>*param,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="591" refid="group__bt__iso_1ga94c5c788b099284219e5a303b4b8ea69" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__iso_1ga94c5c788b099284219e5a303b4b8ea69" kindref="member">bt_iso_chan_disconnect</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref><sp/>*chan);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="group__bt__iso_1gae217f48405e02cbced650198ce0fba9c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__iso_1gae217f48405e02cbced650198ce0fba9c" kindref="member">bt_iso_chan_send</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref><sp/>*chan,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*buf);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="structbt__iso__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__info" kindref="compound">bt_iso_info</ref><sp/>{</highlight></codeline>
<codeline lineno="613" refid="structbt__iso__info_1af01766b8eed556ca165222d19ff05838" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__iso_1gafcbd720c67c6a6e5f1cae1395e1e06f0" kindref="member">bt_iso_chan_type</ref><sp/><ref refid="structbt__iso__info_1af01766b8eed556ca165222d19ff05838" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="614"><highlight class="normal">};</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="623" refid="group__bt__iso_1ga75e58ed5bfa48f84000f1ce974d649c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__iso_1ga75e58ed5bfa48f84000f1ce974d649c6" kindref="member">bt_iso_chan_get_info</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref><sp/>*chan,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__iso__info" kindref="compound">bt_iso_info</ref><sp/>*info);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="633" refid="group__bt__iso_1ga729cf386b63fef13a779853a1c0c4d4a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__iso_1gafcbd720c67c6a6e5f1cae1395e1e06f0" kindref="member">bt_iso_chan_type</ref><sp/><ref refid="group__bt__iso_1ga729cf386b63fef13a779853a1c0c4d4a" kindref="member">bt_iso_chan_get_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__iso__chan" kindref="compound">bt_iso_chan</ref><sp/>*chan);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="group__bt__iso_1gac9937316382d257493c7d0359f1341f5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__iso_1gac9937316382d257493c7d0359f1341f5" kindref="member">bt_iso_big_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_le_ext_adv<sp/>*padv,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__iso__big__create__param" kindref="compound">bt_iso_big_create_param</ref><sp/>*param,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_iso_big<sp/>**out_big);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="654" refid="group__bt__iso_1gab9c06a86bf5cc023f5f9bd16c5d3265b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__iso_1gab9c06a86bf5cc023f5f9bd16c5d3265b" kindref="member">bt_iso_big_terminate</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_iso_big<sp/>*big);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="664" refid="group__bt__iso_1ga790cfeb8516020f317802e019dca4754" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__iso_1ga790cfeb8516020f317802e019dca4754" kindref="member">bt_iso_big_sync</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_le_per_adv_sync<sp/>*sync,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__iso__big__sync__param" kindref="compound">bt_iso_big_sync_param</ref><sp/>*param,</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_iso_big<sp/>**out_big);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_BLUETOOTH_ISO_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/bluetooth/iso.h"/>
  </compounddef>
</doxygen>
