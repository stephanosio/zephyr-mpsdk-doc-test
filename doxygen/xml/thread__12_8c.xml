<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="thread__12_8c" kind="file" language="C++">
    <compoundname>thread_12.c</compoundname>
    <includes local="no">tc_util.h</includes>
    <includes local="no">zephyr.h</includes>
    <includes refid="mutex_8h" local="no">sys/mutex.h</includes>
    <incdepgraph>
      <node id="5">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="4">
        <label>sys/mutex.h</label>
        <link refid="mutex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="11">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="9">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="10">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="1">
        <label>tests/kernel/mutex/sys_mutex/src/thread_12.c</label>
        <link refid="thread__12_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stddef.h</label>
      </node>
      <node id="15">
        <label>sys_clock.h</label>
      </node>
      <node id="16">
        <label>syscalls/mutex.h</label>
      </node>
      <node id="2">
        <label>tc_util.h</label>
      </node>
      <node id="3">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="thread__12_8c_1ab663eea0ae24dfa788e21e4c58f35297" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int tc_rc</definition>
        <argsstring></argsstring>
        <name>tc_rc</name>
        <initializer>= TC_PASS</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mutex/sys_mutex/src/thread_12.c" line="22" column="12" bodyfile="tests/kernel/mutex/sys_mutex/src/thread_12.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="thread__12_8c_1a36d5d857c8741bbf780c1b72d944bd1d" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structsys__mutex" kindref="compound">sys_mutex</ref></type>
        <definition>struct sys_mutex private_mutex</definition>
        <argsstring></argsstring>
        <name>private_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mutex/sys_mutex/src/thread_12.c" line="24" column="23" declfile="tests/kernel/mutex/sys_mutex/src/thread_12.c" declline="24" declcolumn="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="thread__12_8c_1aab27549e12ba70fbd0b16cf3e8d4cd03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void thread_12</definition>
        <argsstring>(void)</argsstring>
        <name>thread_12</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>thread_12 - thread that participates in recursive locking tests </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mutex/sys_mutex/src/thread_12.c" line="32" column="6" bodyfile="tests/kernel/mutex/sys_mutex/src/thread_12.c" bodystart="32" bodyend="50"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>thread_12.c<sp/>-<sp/>helper<sp/>file<sp/>for<sp/>testing<sp/>kernel<sp/>mutex<sp/>APIs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Wind<sp/>River<sp/>Systems,<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>@brief<sp/>mutex<sp/>test<sp/>helper</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>This<sp/>module<sp/>defines<sp/>a<sp/>thread<sp/>that<sp/>is<sp/>used<sp/>in<sp/>recursive<sp/>mutex<sp/>locking<sp/>tests.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>It<sp/>helps<sp/>ensure<sp/>that<sp/>a<sp/>private<sp/>mutex<sp/>can<sp/>be<sp/>referenced<sp/>in<sp/>a<sp/>file<sp/>other<sp/>than</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>the<sp/>one<sp/>it<sp/>was<sp/>defined<sp/>in.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tc_util.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="mutex_8h" kindref="compound">sys/mutex.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="thread__12_8c_1ab663eea0ae24dfa788e21e4c58f35297" kindref="member">tc_rc</ref><sp/>=<sp/>TC_PASS;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>case<sp/>return<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__mutex" kindref="compound">sys_mutex</ref><sp/><ref refid="thread__12_8c_1a36d5d857c8741bbf780c1b72d944bd1d" kindref="member">private_mutex</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="thread__12_8c_1aab27549e12ba70fbd0b16cf3e8d4cd03" kindref="member">thread_12</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fatal_2exception_2src_2main_8c_1ae3b62d25a3304d081b4272eeab42de09" kindref="member">rv</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>private<sp/>mutex<sp/>to<sp/>be<sp/>released<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fatal_2exception_2src_2main_8c_1ae3b62d25a3304d081b4272eeab42de09" kindref="member">rv</ref><sp/>=<sp/><ref refid="group__user__mutex__apis_1ga6887005f8223d4f36de5ae5c02ba4b17" kindref="member">sys_mutex_lock</ref>(&amp;<ref refid="thread__12_8c_1a36d5d857c8741bbf780c1b72d944bd1d" kindref="member">private_mutex</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fatal_2exception_2src_2main_8c_1ae3b62d25a3304d081b4272eeab42de09" kindref="member">rv</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="thread__12_8c_1ab663eea0ae24dfa788e21e4c58f35297" kindref="member">tc_rc</ref><sp/>=<sp/>TC_FAIL;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>obtain<sp/>private<sp/>mutex\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>a<sp/>bit,<sp/>then<sp/>release<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(500));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__mutex__apis_1ga7d4babcd161600dab5f1842c58be2a1f" kindref="member">sys_mutex_unlock</ref>(&amp;<ref refid="thread__12_8c_1a36d5d857c8741bbf780c1b72d944bd1d" kindref="member">private_mutex</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/kernel/mutex/sys_mutex/src/thread_12.c"/>
  </compounddef>
</doxygen>
