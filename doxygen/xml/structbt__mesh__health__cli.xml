<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structbt__mesh__health__cli" kind="struct" language="C++" prot="public">
    <compoundname>bt_mesh_health_cli</compoundname>
    <includes refid="health__cli_8h" local="no">health_cli.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structbt__mesh__health__cli_1a25e293dd23de08aa506977a90f299288" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structbt__mesh__model" kindref="compound">bt_mesh_model</ref> *</type>
        <definition>struct bt_mesh_model* bt_mesh_health_cli::model</definition>
        <argsstring></argsstring>
        <name>model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Composition data model entry pointer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/health_cli.h" line="27" column="20" bodyfile="include/bluetooth/mesh/health_cli.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__health__cli_1a395f525d846ef029bf5ff9fdde6e7c61" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* bt_mesh_health_cli::period_status) (struct bt_mesh_health_cli *cli, uint16_t addr, uint8_t divisor)</definition>
        <argsstring>)(struct bt_mesh_health_cli *cli, uint16_t addr, uint8_t divisor)</argsstring>
        <name>period_status</name>
        <briefdescription>
<para>Optional callback for Health Period Status messages. </para>
        </briefdescription>
        <detaileddescription>
<para>Handles received Health Period Status messages from a Health server. The <computeroutput>divisor</computeroutput> param represents the period divisor value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Health client that received the status message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the sender. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>divisor</parametername>
</parameternamelist>
<parameterdescription>
<para>Health Period Divisor value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/health_cli.h" line="38" column="1" bodyfile="include/bluetooth/mesh/health_cli.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__health__cli_1ae8d023ac56beb39c0d73a3b9e75f6c96" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* bt_mesh_health_cli::attention_status) (struct bt_mesh_health_cli *cli, uint16_t addr, uint8_t attention)</definition>
        <argsstring>)(struct bt_mesh_health_cli *cli, uint16_t addr, uint8_t attention)</argsstring>
        <name>attention_status</name>
        <briefdescription>
<para>Optional callback for Health Attention Status messages. </para>
        </briefdescription>
        <detaileddescription>
<para>Handles received Health Attention Status messages from a Health server. The <computeroutput>attention</computeroutput> param represents the current attention value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Health client that received the status message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the sender. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attention</parametername>
</parameternamelist>
<parameterdescription>
<para>Current attention value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/health_cli.h" line="50" column="1" bodyfile="include/bluetooth/mesh/health_cli.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__health__cli_1a4cbf24a2407df9bb80e19c1da1558294" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* bt_mesh_health_cli::fault_status) (struct bt_mesh_health_cli *cli, uint16_t addr, uint8_t test_id, uint16_t cid, uint8_t *faults, size_t fault_count)</definition>
        <argsstring>)(struct bt_mesh_health_cli *cli, uint16_t addr, uint8_t test_id, uint16_t cid, uint8_t *faults, size_t fault_count)</argsstring>
        <name>fault_status</name>
        <briefdescription>
<para>Optional callback for Health Fault Status messages. </para>
        </briefdescription>
        <detaileddescription>
<para>Handles received Health Fault Status messages from a Health server. The <computeroutput>fault</computeroutput> array represents all faults that are currently present in the server&apos;s element.</para>
<para><simplesect kind="see"><para><ref refid="group__bt__mesh__health__faults" kindref="compound">Health faults</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Health client that received the status message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the sender. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>test_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier of a most recently performed test. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Company Identifier of the node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>faults</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of faults. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fault_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of faults in the fault array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/health_cli.h" line="68" column="1" bodyfile="include/bluetooth/mesh/health_cli.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__health__cli_1a6246d36f8110f401f55003661ab15c86" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* bt_mesh_health_cli::current_status) (struct bt_mesh_health_cli *cli, uint16_t addr, uint8_t test_id, uint16_t cid, uint8_t *faults, size_t fault_count)</definition>
        <argsstring>)(struct bt_mesh_health_cli *cli, uint16_t addr, uint8_t test_id, uint16_t cid, uint8_t *faults, size_t fault_count)</argsstring>
        <name>current_status</name>
        <briefdescription>
<para>Optional callback for Health Current Status messages. </para>
        </briefdescription>
        <detaileddescription>
<para>Handles received Health Current Status messages from a Health server. The <computeroutput>fault</computeroutput> array represents all faults that are currently present in the server&apos;s element.</para>
<para><simplesect kind="see"><para><ref refid="group__bt__mesh__health__faults" kindref="compound">Health faults</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Health client that received the status message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the sender. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>test_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier of a most recently performed test. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Company Identifier of the node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>faults</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of faults. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fault_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of faults in the fault array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/health_cli.h" line="87" column="1" bodyfile="include/bluetooth/mesh/health_cli.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__health__cli_1ac2ef6ae4fd8e14ad854a9f2c5c80fc43" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref></type>
        <definition>struct bt_mesh_msg_ack_ctx bt_mesh_health_cli::ack_ctx</definition>
        <argsstring></argsstring>
        <name>ack_ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/health_cli.h" line="92" column="26" bodyfile="include/bluetooth/mesh/health_cli.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Health Client Model Context </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="14">
        <label>__thread_entry</label>
      </node>
      <node id="12">
        <label>_callee_saved</label>
      </node>
      <node id="16">
        <label>_mem_domain_info</label>
      </node>
      <node id="22">
        <label>_slist</label>
      </node>
      <node id="8">
        <label>_snode</label>
      </node>
      <node id="21">
        <label>_thread_arch</label>
      </node>
      <node id="11">
        <label>_thread_base</label>
      </node>
      <node id="15">
        <label>_thread_stack_info</label>
      </node>
      <node id="23">
        <label>_timeout</label>
      </node>
      <node id="13">
        <label>_wait_q_t</label>
      </node>
      <node id="1">
        <label>bt_mesh_health_cli</label>
        <link refid="structbt__mesh__health__cli"/>
        <childnode refid="2" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>ack_ctx</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>bt_mesh_mod_id_vnd</label>
        <link refid="structbt__mesh__mod__id__vnd"/>
      </node>
      <node id="2">
        <label>bt_mesh_model</label>
        <link refid="structbt__mesh__model"/>
        <childnode refid="3" relation="usage">
          <edgelabel>vnd</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>pub</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>op</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>cb</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>bt_mesh_model_cb</label>
        <link refid="structbt__mesh__model__cb"/>
      </node>
      <node id="24">
        <label>bt_mesh_model_op</label>
        <link refid="structbt__mesh__model__op"/>
      </node>
      <node id="4">
        <label>bt_mesh_model_pub</label>
        <link refid="structbt__mesh__model__pub"/>
        <childnode refid="2" relation="usage">
          <edgelabel>mod</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>msg</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>timer</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>bt_mesh_msg_ack_ctx</label>
        <link refid="structbt__mesh__msg__ack__ctx"/>
      </node>
      <node id="18">
        <label>k_heap</label>
        <link refid="structk__heap"/>
        <childnode refid="19" relation="usage">
          <edgelabel>heap</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>k_spinlock</label>
        <link refid="structk__spinlock"/>
      </node>
      <node id="10">
        <label>k_thread</label>
        <link refid="structk__thread"/>
        <childnode refid="11" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>callee_saved</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>join_queue</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>entry</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>next_thread</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>stack_info</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>mem_domain_info</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>stack_obj</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>resource_pool</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>arch</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>k_work</label>
        <link refid="structk__work"/>
        <childnode refid="8" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>handler</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>k_work_delayable</label>
        <link refid="structk__work__delayable"/>
        <childnode refid="7" relation="usage">
          <edgelabel>work</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>timeout</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>k_work_q</label>
        <link refid="structk__work__q"/>
        <childnode refid="10" relation="usage">
          <edgelabel>thread</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>pending</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>drainq</edgelabel>
          <edgelabel>notifyq</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>net_buf_simple</label>
        <link refid="structnet__buf__simple"/>
      </node>
      <node id="19">
        <label>sys_heap</label>
        <link refid="structsys__heap"/>
      </node>
      <node id="17">
        <label>z_thread_stack_element</label>
      </node>
    </collaborationgraph>
    <location file="include/bluetooth/mesh/health_cli.h" line="25" column="1" bodyfile="include/bluetooth/mesh/health_cli.h" bodystart="25" bodyend="93"/>
    <listofallmembers>
      <member refid="structbt__mesh__health__cli_1ac2ef6ae4fd8e14ad854a9f2c5c80fc43" prot="public" virt="non-virtual"><scope>bt_mesh_health_cli</scope><name>ack_ctx</name></member>
      <member refid="structbt__mesh__health__cli_1ae8d023ac56beb39c0d73a3b9e75f6c96" prot="public" virt="non-virtual"><scope>bt_mesh_health_cli</scope><name>attention_status</name></member>
      <member refid="structbt__mesh__health__cli_1a6246d36f8110f401f55003661ab15c86" prot="public" virt="non-virtual"><scope>bt_mesh_health_cli</scope><name>current_status</name></member>
      <member refid="structbt__mesh__health__cli_1a4cbf24a2407df9bb80e19c1da1558294" prot="public" virt="non-virtual"><scope>bt_mesh_health_cli</scope><name>fault_status</name></member>
      <member refid="structbt__mesh__health__cli_1a25e293dd23de08aa506977a90f299288" prot="public" virt="non-virtual"><scope>bt_mesh_health_cli</scope><name>model</name></member>
      <member refid="structbt__mesh__health__cli_1a395f525d846ef029bf5ff9fdde6e7c61" prot="public" virt="non-virtual"><scope>bt_mesh_health_cli</scope><name>period_status</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
