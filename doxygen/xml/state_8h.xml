<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="state_8h" kind="file" language="C++">
    <compoundname>state.h</compoundname>
    <includes refid="util_8h" local="no">sys/util.h</includes>
    <includes refid="devicetree_8h" local="no">devicetree.h</includes>
    <includedby refid="pm_8h" local="no">include/pm/pm.h</includedby>
    <includedby refid="policy_8h" local="no">include/pm/policy.h</includedby>
    <incdepgraph>
      <node id="10">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="17">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="19">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="15">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="13">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="21">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="22">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="18">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="16">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="20">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="1">
        <label>include/pm/state.h</label>
        <link refid="state_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="3">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="9">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="12">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="11">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="8">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>include/arch/x86/arch.h</label>
        <link refid="x86_2arch_8h"/>
      </node>
      <node id="3">
        <label>include/arch/x86/ia32/arch.h</label>
        <link refid="x86_2ia32_2arch_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/pm/pm.h</label>
        <link refid="pm_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/pm/policy.h</label>
        <link refid="policy_8h"/>
      </node>
      <node id="1">
        <label>include/pm/state.h</label>
        <link refid="state_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>tests/kernel/profiling/profiling_api/src/main.c</label>
        <link refid="profiling_2profiling__api_2src_2main_8c"/>
      </node>
      <node id="6">
        <label>tests/kernel/tickless/tickless_concept/src/main.c</label>
        <link refid="tickless_2tickless__concept_2src_2main_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structpm__state__info" prot="public">pm_state_info</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__subsys__pm__states_1ga1e77683479b589093f06cca9b1d142b9" prot="public" static="no">
        <name>PM_STATE_INFO_DT_INIT</name>
        <param><defname>node_id</defname></param>
        <initializer>	{								       \
		.<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref> = <ref refid="group__subsys__pm__states_1gadd0dca42aef0a021fed9ca2d588ce393" kindref="member">PM_STATE_DT_INIT</ref>(node_id),			       \
		.substate_id = <ref refid="group__devicetree-generic-prop_1ga5e5bfc9b1a6627b3f73014329e96340f" kindref="member">DT_PROP_OR</ref>(node_id, substate_id, 0),	       \
		.min_residency_us = <ref refid="group__devicetree-generic-prop_1ga5e5bfc9b1a6627b3f73014329e96340f" kindref="member">DT_PROP_OR</ref>(node_id, min_residency_us, 0),  \
		.exit_latency_us = <ref refid="group__devicetree-generic-prop_1ga5e5bfc9b1a6627b3f73014329e96340f" kindref="member">DT_PROP_OR</ref>(node_id, exit_latency_us, 0),    \
	}</initializer>
        <briefdescription>
<para>Initializer for struct <ref refid="structpm__state__info" kindref="compound">pm_state_info</ref> given a DT node identifier with zephyr,power-state compatible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>A node identifier with compatible zephyr,power-state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/pm/state.h" line="189" column="9" bodyfile="include/pm/state.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__subsys__pm__states_1gadd0dca42aef0a021fed9ca2d588ce393" prot="public" static="no">
        <name>PM_STATE_DT_INIT</name>
        <param><defname>node_id</defname></param>
        <initializer>	<ref refid="group__devicetree-generic-prop_1ga6c1a3b93e30429c1c69a7e2d8fe2d840" kindref="member">DT_ENUM_IDX</ref>(node_id, power_state_name)</initializer>
        <briefdescription>
<para>Initializer for enum pm_state given a DT node identifier with zephyr,power-state compatible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>A node identifier with compatible zephyr,power-state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/pm/state.h" line="203" column="9" bodyfile="include/pm/state.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__subsys__pm__states_1ga70e4a8cbc3b0e9427f4bf67ee31b3edd" prot="public" static="no">
        <name>DT_NUM_CPU_POWER_STATES</name>
        <param><defname>node_id</defname></param>
        <initializer>	<ref refid="group__devicetree-generic-prop_1gabd2d8a9242818c7a9bf981114c912d75" kindref="member">DT_PROP_LEN_OR</ref>(node_id, cpu_power_states, 0)</initializer>
        <briefdescription>
<para>Obtain number of CPU power states supported by the given CPU node identifier. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>A CPU node identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of supported CPU power states. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/pm/state.h" line="213" column="9" bodyfile="include/pm/state.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__subsys__pm__states_1ga2846f402e20570fc61118b8545cdbe12" prot="public" static="no">
        <name>PM_STATE_INFO_LIST_FROM_DT_CPU</name>
        <param><defname>node_id</defname></param>
        <initializer>	{								       \
		<ref refid="group__sys-util_1ga31079a877f7990c552cbfaf10225e37a" kindref="member">UTIL_LISTIFY</ref>(<ref refid="group__subsys__pm__states_1ga70e4a8cbc3b0e9427f4bf67ee31b3edd" kindref="member">DT_NUM_CPU_POWER_STATES</ref>(node_id),		       \
			     Z_PM_STATE_INFO_FROM_DT_CPU, node_id)   \
	}</initializer>
        <briefdescription>
<para>Initialize an array of struct <ref refid="structpm__state__info" kindref="compound">pm_state_info</ref> with information from all the states present in the given CPU node identifier. </para>
        </briefdescription>
        <detaileddescription>
<para>Example devicetree fragment:</para>
<para><programlisting filename=".dts"><codeline><highlight class="normal">cpus<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cpu0:<sp/>cpu@0<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device_type<sp/>=<sp/>&quot;cpu&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpu-power-states<sp/>=<sp/>&lt;&amp;state0<sp/>&amp;state1&gt;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">power-states<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>state0:<sp/>state0<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compatible<sp/>=<sp/>&quot;zephyr,power-state&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power-state-name<sp/>=<sp/>&quot;suspend-to-idle&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min-residency-us<sp/>=<sp/>&lt;10000&gt;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit-latency-us<sp/>=<sp/>&lt;100&gt;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>state1:<sp/>state1<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compatible<sp/>=<sp/>&quot;zephyr,power-state&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power-state-name<sp/>=<sp/>&quot;suspend-to-ram&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min-residency-us<sp/>=<sp/>&lt;50000&gt;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit-latency-us<sp/>=<sp/>&lt;500&gt;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para>
<para>Example usage:</para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpm__state__info" kindref="compound">pm_state_info</ref><sp/>states[]<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="group__subsys__pm__states_1ga2846f402e20570fc61118b8545cdbe12" kindref="member">PM_STATE_INFO_LIST_FROM_DT_CPU</ref>(<ref refid="group__devicetree-generic-id_1gab7d23294a6bf7fd44a98b48ec47d8a79" kindref="member">DT_NODELABEL</ref>(cpu0));</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>A CPU node identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/pm/state.h" line="259" column="9" bodyfile="include/pm/state.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__subsys__pm__states_1ga8248587108fcb76adefb50a360bc5db7" prot="public" static="no">
        <name>PM_STATE_LIST_FROM_DT_CPU</name>
        <param><defname>node_id</defname></param>
        <initializer>	{								       \
		<ref refid="group__sys-util_1ga31079a877f7990c552cbfaf10225e37a" kindref="member">UTIL_LISTIFY</ref>(<ref refid="group__subsys__pm__states_1ga70e4a8cbc3b0e9427f4bf67ee31b3edd" kindref="member">DT_NUM_CPU_POWER_STATES</ref>(node_id),		       \
			     Z_PM_STATE_FROM_DT_CPU, node_id)		       \
	}</initializer>
        <briefdescription>
<para>Initialize an array of struct pm_state with information from all the states present in the given CPU node identifier. </para>
        </briefdescription>
        <detaileddescription>
<para>Example devicetree fragment:</para>
<para><programlisting filename=".dts"><codeline><highlight class="normal">cpus<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cpu0:<sp/>cpu@0<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device_type<sp/>=<sp/>&quot;cpu&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpu-power-states<sp/>=<sp/>&lt;&amp;state0<sp/>&amp;state1&gt;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">power-states<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>state0:<sp/>state0<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compatible<sp/>=<sp/>&quot;zephyr,power-state&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power-state-name<sp/>=<sp/>&quot;suspend-to-idle&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min-residency-us<sp/>=<sp/>&lt;10000&gt;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit-latency-us<sp/>=<sp/>&lt;100&gt;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>state1:<sp/>state1<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compatible<sp/>=<sp/>&quot;zephyr,power-state&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power-state-name<sp/>=<sp/>&quot;suspend-to-ram&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min-residency-us<sp/>=<sp/>&lt;50000&gt;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit-latency-us<sp/>=<sp/>&lt;500&gt;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para>
<para>Example usage:</para>
<para><programlisting filename=".c"><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__subsys__pm__states_1ga20e2f5ea9027a3653e5b9cc5aa1e21d5" kindref="member">pm_state</ref><sp/>states[]<sp/>=<sp/><ref refid="group__subsys__pm__states_1ga8248587108fcb76adefb50a360bc5db7" kindref="member">PM_STATE_LIST_FROM_DT_CPU</ref>(<ref refid="group__devicetree-generic-id_1gab7d23294a6bf7fd44a98b48ec47d8a79" kindref="member">DT_NODELABEL</ref>(cpu0));</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>A CPU node identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/pm/state.h" line="307" column="9" bodyfile="include/pm/state.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__subsys__pm__states_1ga20e2f5ea9027a3653e5b9cc5aa1e21d5" prot="public" static="no" strong="no">
        <type></type>
        <name>pm_state</name>
        <enumvalue id="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a383b8ef562f50d7a3d18914d3c950743" prot="public">
          <name>PM_STATE_ACTIVE</name>
          <briefdescription>
<para>Runtime active state. </para>
          </briefdescription>
          <detaileddescription>
<para>The system is fully powered and active.</para>
<para><simplesect kind="note"><para>This state is correlated with ACPI G0/S0 state </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a73c76572bc04e999d22a3bded9c54b19" prot="public">
          <name>PM_STATE_RUNTIME_IDLE</name>
          <briefdescription>
<para>Runtime idle state. </para>
          </briefdescription>
          <detaileddescription>
<para>Runtime idle is a system sleep state in which all of the cores enter deepest possible idle state and wait for interrupts, no requirements for the devices, leaving them at the states where they are.</para>
<para><simplesect kind="note"><para>This state is correlated with ACPI S0ix state </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a781f940d30738d746eb2523155950fc0" prot="public">
          <name>PM_STATE_SUSPEND_TO_IDLE</name>
          <briefdescription>
<para>Suspend to idle state. </para>
          </briefdescription>
          <detaileddescription>
<para>The system goes through a normal platform suspend where it puts all of the cores in deepest possible idle state and <emphasis>may</emphasis> puts peripherals into low-power states. No operating state is lost (ie. the cpu core does not lose execution context), so the system can go back to where it left off easily enough.</para>
<para><simplesect kind="note"><para>This state is correlated with ACPI S1 state </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a19a09872876d4732d0aebb82e52f2429" prot="public">
          <name>PM_STATE_STANDBY</name>
          <briefdescription>
<para>Standby state. </para>
          </briefdescription>
          <detaileddescription>
<para>In addition to putting peripherals into low-power states all non-boot CPUs are powered off. It should allow more energy to be saved relative to suspend to idle, but the resume latency will generally be greater than for that state. But it should be the same state with suspend to idle state on uniprocesser system.</para>
<para><simplesect kind="note"><para>This state is correlated with ACPI S2 state </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a363669b6a6db4bee5b8196442e9f2a00" prot="public">
          <name>PM_STATE_SUSPEND_TO_RAM</name>
          <briefdescription>
<para>Suspend to ram state. </para>
          </briefdescription>
          <detaileddescription>
<para>This state offers significant energy savings by powering off as much of the system as possible, where memory should be placed into the self-refresh mode to retain its contents. The state of devices and CPUs is saved and held in memory, and it may require some boot- strapping code in ROM to resume the system from it.</para>
<para><simplesect kind="note"><para>This state is correlated with ACPI S3 state </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5acc7f38698db1ae08365115f8407c9695" prot="public">
          <name>PM_STATE_SUSPEND_TO_DISK</name>
          <briefdescription>
<para>Suspend to disk state. </para>
          </briefdescription>
          <detaileddescription>
<para>This state offers significant energy savings by powering off as much of the system as possible, including the memory. The contents of memory are written to disk or other non-volatile storage, and on resume it&apos;s read back into memory with the help of boot-strapping code, restores the system to the same point of execution where it went to suspend to disk.</para>
<para><simplesect kind="note"><para>This state is correlated with ACPI S4 state </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a18d180711616cd9ed59fbe27dd0dbf01" prot="public">
          <name>PM_STATE_SOFT_OFF</name>
          <briefdescription>
<para>Soft off state. </para>
          </briefdescription>
          <detaileddescription>
<para>This state consumes a minimal amount of power and requires a large latency in order to return to runtime active state. The contents of system(CPU and memory) will not be preserved, so the system will be restarted as if from initial power-up and kernel boot.</para>
<para><simplesect kind="note"><para>This state is correlated with ACPI G2/S5 state </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a97c44ed1a8b6873243d6bbd76a382737" prot="public">
          <name>PM_STATE_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Number of power management states (internal use) </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Power management state </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/pm/state.h" line="27" column="1" bodyfile="include/pm/state.h" bodystart="27" bodyend="109"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__subsys__pm__states_1ga682f75eb5324455ce95a5c7d4c2d6242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t pm_state_cpu_get_all</definition>
        <argsstring>(uint8_t cpu, const struct pm_state_info **states)</argsstring>
        <name>pm_state_cpu_get_all</name>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>cpu</declname>
        </param>
        <param>
          <type>const struct <ref refid="structpm__state__info" kindref="compound">pm_state_info</ref> **</type>
          <declname>states</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtain information about all supported states by a CPU.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpu</parametername>
</parameternamelist>
<parameterdescription>
<para>CPU index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>states</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the list of supported states.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of supported states. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/pm/state.h" line="322" column="9" declfile="include/pm/state.h" declline="322" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Intel<sp/>corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_PM_STATE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_PM_STATE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="util_8h" kindref="compound">sys/util.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="devicetree_8h" kindref="compound">devicetree.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="group__subsys__pm__states_1ga20e2f5ea9027a3653e5b9cc5aa1e21d5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__subsys__pm__states_1ga20e2f5ea9027a3653e5b9cc5aa1e21d5" kindref="member">pm_state</ref><sp/>{</highlight></codeline>
<codeline lineno="35" refid="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a383b8ef562f50d7a3d18914d3c950743" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a383b8ef562f50d7a3d18914d3c950743" kindref="member">PM_STATE_ACTIVE</ref>,</highlight></codeline>
<codeline lineno="46" refid="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a73c76572bc04e999d22a3bded9c54b19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a73c76572bc04e999d22a3bded9c54b19" kindref="member">PM_STATE_RUNTIME_IDLE</ref>,</highlight></codeline>
<codeline lineno="58" refid="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a781f940d30738d746eb2523155950fc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a781f940d30738d746eb2523155950fc0" kindref="member">PM_STATE_SUSPEND_TO_IDLE</ref>,</highlight></codeline>
<codeline lineno="70" refid="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a19a09872876d4732d0aebb82e52f2429" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a19a09872876d4732d0aebb82e52f2429" kindref="member">PM_STATE_STANDBY</ref>,</highlight></codeline>
<codeline lineno="82" refid="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a363669b6a6db4bee5b8196442e9f2a00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a363669b6a6db4bee5b8196442e9f2a00" kindref="member">PM_STATE_SUSPEND_TO_RAM</ref>,</highlight></codeline>
<codeline lineno="95" refid="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5acc7f38698db1ae08365115f8407c9695" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5acc7f38698db1ae08365115f8407c9695" kindref="member">PM_STATE_SUSPEND_TO_DISK</ref>,</highlight></codeline>
<codeline lineno="106" refid="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a18d180711616cd9ed59fbe27dd0dbf01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a18d180711616cd9ed59fbe27dd0dbf01" kindref="member">PM_STATE_SOFT_OFF</ref>,</highlight></codeline>
<codeline lineno="108" refid="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a97c44ed1a8b6873243d6bbd76a382737" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__subsys__pm__states_1gga20e2f5ea9027a3653e5b9cc5aa1e21d5a97c44ed1a8b6873243d6bbd76a382737" kindref="member">PM_STATE_COUNT</ref>,</highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="structpm__state__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpm__state__info" kindref="compound">pm_state_info</ref><sp/>{</highlight></codeline>
<codeline lineno="115" refid="structpm__state__info_1aed57fc8a935951aa2687614b954c7225" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__subsys__pm__states_1ga20e2f5ea9027a3653e5b9cc5aa1e21d5" kindref="member">pm_state</ref><sp/><ref refid="structpm__state__info_1aed57fc8a935951aa2687614b954c7225" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="structpm__state__info_1a422bc0c9aedc107dbfa57c3ac8eb2445" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structpm__state__info_1a422bc0c9aedc107dbfa57c3ac8eb2445" kindref="member">substate_id</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="structpm__state__info_1a442654715d3872de1b7b0dcf08bffb8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structpm__state__info_1a442654715d3872de1b7b0dcf08bffb8b" kindref="member">min_residency_us</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="structpm__state__info_1a6fc8e0a78df78c7a28a0bc2a27292818" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structpm__state__info_1a6fc8e0a78df78c7a28a0bc2a27292818" kindref="member">exit_latency_us</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_PM_STATE_INFO_FROM_DT_CPU(i,<sp/>node_id)<sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PM_STATE_INFO_DT_INIT(DT_PHANDLE_BY_IDX(node_id,<sp/>cpu_power_states,<sp/>i)),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_PM_STATE_FROM_DT_CPU(i,<sp/>node_id)<sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PM_STATE_DT_INIT(DT_PHANDLE_BY_IDX(node_id,<sp/>cpu_power_states,<sp/>i)),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="group__subsys__pm__states_1ga1e77683479b589093f06cca9b1d142b9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PM_STATE_INFO_DT_INIT(node_id)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.state<sp/>=<sp/>PM_STATE_DT_INIT(node_id),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.substate_id<sp/>=<sp/>DT_PROP_OR(node_id,<sp/>substate_id,<sp/>0),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.min_residency_us<sp/>=<sp/>DT_PROP_OR(node_id,<sp/>min_residency_us,<sp/>0),<sp/><sp/>\</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.exit_latency_us<sp/>=<sp/>DT_PROP_OR(node_id,<sp/>exit_latency_us,<sp/>0),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="group__subsys__pm__states_1gadd0dca42aef0a021fed9ca2d588ce393" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PM_STATE_DT_INIT(node_id)<sp/>\</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DT_ENUM_IDX(node_id,<sp/>power_state_name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="group__subsys__pm__states_1ga70e4a8cbc3b0e9427f4bf67ee31b3edd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_NUM_CPU_POWER_STATES(node_id)<sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DT_PROP_LEN_OR(node_id,<sp/>cpu_power_states,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="group__subsys__pm__states_1ga2846f402e20570fc61118b8545cdbe12" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PM_STATE_INFO_LIST_FROM_DT_CPU(node_id)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UTIL_LISTIFY(DT_NUM_CPU_POWER_STATES(node_id),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_PM_STATE_INFO_FROM_DT_CPU,<sp/>node_id)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="group__subsys__pm__states_1ga8248587108fcb76adefb50a360bc5db7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PM_STATE_LIST_FROM_DT_CPU(node_id)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UTIL_LISTIFY(DT_NUM_CPU_POWER_STATES(node_id),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_PM_STATE_FROM_DT_CPU,<sp/>node_id)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="group__subsys__pm__states_1ga682f75eb5324455ce95a5c7d4c2d6242" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__subsys__pm__states_1ga682f75eb5324455ce95a5c7d4c2d6242" kindref="member">pm_state_cpu_get_all</ref>(<ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>cpu,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpm__state__info" kindref="compound">pm_state_info</ref><sp/>**states);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/pm/state.h"/>
  </compounddef>
</doxygen>
