<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="events_8h" kind="file" language="C++">
    <compoundname>events.h</compoundname>
    <includes refid="event__channel_8h" local="no">xen/public/event_channel.h</includes>
    <includes local="no">kernel.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/xen/events.h</label>
        <link refid="events_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>xen/public/event_channel.h</label>
        <link refid="event__channel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>xen.h</label>
        <link refid="xen_8h"/>
      </node>
      <node id="4">
        <label>kernel.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structevent__channel__handle" prot="public">event_channel_handle</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="events_8h_1a1e631dcb6d0ab84d2b63cced85f28d47" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* evtchn_cb_t) (void *priv)</definition>
        <argsstring>)(void *priv)</argsstring>
        <name>evtchn_cb_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/xen/events.h" line="13" column="9" bodyfile="include/xen/events.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="events_8h_1a057cac7f834e8352d4b8b48d5ae22fcb" prot="public" static="no">
        <type>struct <ref refid="structevent__channel__handle" kindref="compound">event_channel_handle</ref></type>
        <definition>typedef struct event_channel_handle evtchn_handle_t</definition>
        <argsstring></argsstring>
        <name>evtchn_handle_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/xen/events.h" line="20" column="35" bodyfile="include/xen/events.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="events_8h_1a050856eda5a9c15075b3bc5314658d3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void notify_evtchn</definition>
        <argsstring>(evtchn_port_t port)</argsstring>
        <name>notify_evtchn</name>
        <param>
          <type><ref refid="event__channel_8h_1aaad5124a66f37437561260d1170ab33f" kindref="member">evtchn_port_t</ref></type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/xen/events.h" line="22" column="6" declfile="include/xen/events.h" declline="22" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="events_8h_1a74e60b33dd93a62835e86b251a9cd43c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bind_event_channel</definition>
        <argsstring>(evtchn_port_t port, evtchn_cb_t cb, void *data)</argsstring>
        <name>bind_event_channel</name>
        <param>
          <type><ref refid="event__channel_8h_1aaad5124a66f37437561260d1170ab33f" kindref="member">evtchn_port_t</ref></type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="events_8h_1a1e631dcb6d0ab84d2b63cced85f28d47" kindref="member">evtchn_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/xen/events.h" line="23" column="5" declfile="include/xen/events.h" declline="23" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="events_8h_1abad4417540bf329eca43842bf83549e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int unbind_event_channel</definition>
        <argsstring>(evtchn_port_t port)</argsstring>
        <name>unbind_event_channel</name>
        <param>
          <type><ref refid="event__channel_8h_1aaad5124a66f37437561260d1170ab33f" kindref="member">evtchn_port_t</ref></type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/xen/events.h" line="24" column="5" declfile="include/xen/events.h" declline="24" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="events_8h_1af6542be4472fb2d1dc17deca6c323972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xen_events_init</definition>
        <argsstring>(void)</argsstring>
        <name>xen_events_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/xen/events.h" line="26" column="5" declfile="include/xen/events.h" declline="26" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>EPAM<sp/>Systems</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__XEN_EVENTS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__XEN_EVENTS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="event__channel_8h" kindref="compound">xen/public/event_channel.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="events_8h_1a1e631dcb6d0ab84d2b63cced85f28d47" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="events_8h_1a1e631dcb6d0ab84d2b63cced85f28d47" kindref="member">evtchn_cb_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*priv);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="structevent__channel__handle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__channel__handle" kindref="compound">event_channel_handle</ref><sp/>{</highlight></codeline>
<codeline lineno="16" refid="structevent__channel__handle_1ae9cd87fb197df9586dbf6f59978719a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="events_8h_1a1e631dcb6d0ab84d2b63cced85f28d47" kindref="member">evtchn_cb_t</ref><sp/><ref refid="structevent__channel__handle_1ae9cd87fb197df9586dbf6f59978719a9" kindref="member">cb</ref>;</highlight></codeline>
<codeline lineno="17" refid="structevent__channel__handle_1a251f0bf5106c1b7384418c08b032c6c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structevent__channel__handle_1a251f0bf5106c1b7384418c08b032c6c6" kindref="member">priv</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="events_8h_1a057cac7f834e8352d4b8b48d5ae22fcb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__channel__handle" kindref="compound">event_channel_handle</ref><sp/><ref refid="structevent__channel__handle" kindref="compound">evtchn_handle_t</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="events_8h_1a050856eda5a9c15075b3bc5314658d3a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="events_8h_1a050856eda5a9c15075b3bc5314658d3a" kindref="member">notify_evtchn</ref>(<ref refid="event__channel_8h_1aaad5124a66f37437561260d1170ab33f" kindref="member">evtchn_port_t</ref><sp/>port);</highlight></codeline>
<codeline lineno="23" refid="events_8h_1a74e60b33dd93a62835e86b251a9cd43c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="events_8h_1a74e60b33dd93a62835e86b251a9cd43c" kindref="member">bind_event_channel</ref>(<ref refid="event__channel_8h_1aaad5124a66f37437561260d1170ab33f" kindref="member">evtchn_port_t</ref><sp/>port,<sp/><ref refid="events_8h_1a1e631dcb6d0ab84d2b63cced85f28d47" kindref="member">evtchn_cb_t</ref><sp/><ref refid="structevent__channel__handle_1ae9cd87fb197df9586dbf6f59978719a9" kindref="member">cb</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="24" refid="events_8h_1abad4417540bf329eca43842bf83549e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="events_8h_1abad4417540bf329eca43842bf83549e9" kindref="member">unbind_event_channel</ref>(<ref refid="event__channel_8h_1aaad5124a66f37437561260d1170ab33f" kindref="member">evtchn_port_t</ref><sp/>port);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="events_8h_1af6542be4472fb2d1dc17deca6c323972" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="events_8h_1af6542be4472fb2d1dc17deca6c323972" kindref="member">xen_events_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__XEN_EVENTS_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/xen/events.h"/>
  </compounddef>
</doxygen>
