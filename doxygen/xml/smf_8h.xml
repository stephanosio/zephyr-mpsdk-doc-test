<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="smf_8h" kind="file" language="C++">
    <compoundname>smf.h</compoundname>
    <includes refid="zephyr_8h" local="no">zephyr.h</includes>
    <incdepgraph>
      <node id="51">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="39">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="38">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="48">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="3">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="22">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="11">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/smf.h</label>
        <link refid="smf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="24">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="14">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="9">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="59">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="61">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zephyr.h</label>
        <link refid="zephyr_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="13">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="7">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="37">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="62">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="54">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="26">
        <label>alloca.h</label>
      </node>
      <node id="41">
        <label>arch/cpu.h</label>
      </node>
      <node id="60">
        <label>kernel.h</label>
      </node>
      <node id="20">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="57">
        <label>syscalls/errno_private.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structsmf__state" prot="public">smf_state</innerclass>
    <innerclass refid="structsmf__ctx" prot="public">smf_ctx</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="smf_8h_1a7bcef10d761c099633867066ecef49f6" prot="public" static="no">
        <name>SMF_CREATE_STATE</name>
        <param><defname>_entry</defname></param>
        <param><defname>_run</defname></param>
        <param><defname>_exit</defname></param>
        <initializer>{ \
	.entry = _entry, \
	.run   = _run,   \
	.<ref refid="stdlib_8h_1af929aa40c441bb81bd806d5b44481af1" kindref="member">exit</ref>  = _exit   \
}</initializer>
        <briefdescription>
<para>Macro to create a flat state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_entry</parametername>
</parameternamelist>
<parameterdescription>
<para>State entry function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_run</parametername>
</parameternamelist>
<parameterdescription>
<para>State run function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_exit</parametername>
</parameternamelist>
<parameterdescription>
<para>State exit function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/smf.h" line="38" column="9" bodyfile="include/smf.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="smf_8h_1a0bccd3bf96e0887e8a610c1b06e22237" prot="public" static="no">
        <name>SMF_CTX</name>
        <param><defname>o</defname></param>
        <initializer>((struct <ref refid="structsmf__ctx" kindref="compound">smf_ctx</ref> *)o)</initializer>
        <briefdescription>
<para>Macro to cast user defined object to state machine context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the user defined object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/smf.h" line="53" column="9" bodyfile="include/smf.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="smf_8h_1aff08e9a57d55107fd8d13ffe86295ca6" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* state_execution) (void *obj)</definition>
        <argsstring>)(void *obj)</argsstring>
        <name>state_execution</name>
        <briefdescription>
<para>Function pointer that implements a portion of a state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer user defined object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/smf.h" line="66" column="9" bodyfile="include/smf.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="smf_8h_1a4389086c6aa3167e8c49226323ae208d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void smf_set_initial</definition>
        <argsstring>(struct smf_ctx *ctx, const struct smf_state *init_state)</argsstring>
        <name>smf_set_initial</name>
        <param>
          <type>struct <ref refid="structsmf__ctx" kindref="compound">smf_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsmf__state" kindref="compound">smf_state</ref> *</type>
          <declname>init_state</declname>
        </param>
        <briefdescription>
<para>Initializes the state machine and sets its initial state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>State machine context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>init_state</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial state the state machine starts in. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/smf.h" line="118" column="6" declfile="include/smf.h" declline="118" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="smf_8h_1a3e5ac3e2ad105d1a01b4cf0b1a8a6fcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void smf_set_state</definition>
        <argsstring>(struct smf_ctx *ctx, const struct smf_state *new_state)</argsstring>
        <name>smf_set_state</name>
        <param>
          <type>struct <ref refid="structsmf__ctx" kindref="compound">smf_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsmf__state" kindref="compound">smf_state</ref> *</type>
          <declname>new_state</declname>
        </param>
        <briefdescription>
<para>Changes a state machines state. This handles exiting the previous state and entering the target state. A common parent state will not exited nor be re-entered. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>State machine context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_state</parametername>
</parameternamelist>
<parameterdescription>
<para>State to transition to (NULL is valid and exits all states) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/smf.h" line="128" column="6" declfile="include/smf.h" declline="128" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="smf_8h_1aae28c66f0652c99ba8e843eeaf02aaf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void smf_set_terminate</definition>
        <argsstring>(struct smf_ctx *ctx, int32_t val)</argsstring>
        <name>smf_set_terminate</name>
        <param>
          <type>struct <ref refid="structsmf__ctx" kindref="compound">smf_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Termate a state machine. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>State machine context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-Zero termination value that&apos;s returned by the smf_run_state function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/smf.h" line="137" column="6" declfile="include/smf.h" declline="137" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="smf_8h_1a8399cfa9e793a7f188b4ed4fec9f4f90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
        <definition>int32_t smf_run_state</definition>
        <argsstring>(struct smf_ctx *ctx)</argsstring>
        <name>smf_run_state</name>
        <param>
          <type>struct <ref refid="structsmf__ctx" kindref="compound">smf_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Runs one iteration of a state machine (including any parent states) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>State machine context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A non-zero value should terminate the state machine. This non-zero value could represet a terminal state being reached or the detection of an error that should result in the termination of the state machine. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/smf.h" line="148" column="9" declfile="include/smf.h" declline="148" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2021<sp/>The<sp/>Chromium<sp/>OS<sp/>Authors</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>State<sp/>Machine<sp/>Framework<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_SMF_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_SMF_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_SMF_ANCESTOR_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SMF_CREATE_STATE(_entry,<sp/>_run,<sp/>_exit,<sp/>_parent)<sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.entry<sp/><sp/>=<sp/>_entry,<sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.run<sp/><sp/><sp/><sp/>=<sp/>_run,<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.exit<sp/><sp/><sp/>=<sp/>_exit,<sp/><sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.parent<sp/>=<sp/>_parent<sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="smf_8h_1a7bcef10d761c099633867066ecef49f6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SMF_CREATE_STATE(_entry,<sp/>_run,<sp/>_exit)<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.entry<sp/>=<sp/>_entry,<sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.run<sp/><sp/><sp/>=<sp/>_run,<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.exit<sp/><sp/>=<sp/>_exit<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_SMF_ANCESTOR_SUPPORT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="smf_8h_1a0bccd3bf96e0887e8a610c1b06e22237" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SMF_CTX(o)<sp/>((struct<sp/>smf_ctx<sp/>*)o)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="zephyr_8h" kindref="compound">zephyr.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="smf_8h_1aff08e9a57d55107fd8d13ffe86295ca6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="smf_8h_1aff08e9a57d55107fd8d13ffe86295ca6" kindref="member">state_execution</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="structsmf__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsmf__state" kindref="compound">smf_state</ref><sp/>{</highlight></codeline>
<codeline lineno="71" refid="structsmf__state_1a63ea395c90fa8118cf355e55e60cee26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="smf_8h_1aff08e9a57d55107fd8d13ffe86295ca6" kindref="member">state_execution</ref><sp/><ref refid="structsmf__state_1a63ea395c90fa8118cf355e55e60cee26" kindref="member">entry</ref>;</highlight></codeline>
<codeline lineno="76" refid="structsmf__state_1a94adbcd4e1a8bce8f3b30082874f1911" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="smf_8h_1aff08e9a57d55107fd8d13ffe86295ca6" kindref="member">state_execution</ref><sp/><ref refid="structsmf__state_1a94adbcd4e1a8bce8f3b30082874f1911" kindref="member">run</ref>;</highlight></codeline>
<codeline lineno="78" refid="structsmf__state_1a2df810ca49fbb9438ee78317feaaf09b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="smf_8h_1aff08e9a57d55107fd8d13ffe86295ca6" kindref="member">state_execution</ref><sp/><ref refid="structsmf__state_1a2df810ca49fbb9438ee78317feaaf09b" kindref="member">exit</ref>;</highlight></codeline>
<codeline lineno="89" refid="structsmf__state_1ac4267b2d8279d9c2d4897d97357b8e25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsmf__state" kindref="compound">smf_state</ref><sp/>*<ref refid="structsmf__state_1ac4267b2d8279d9c2d4897d97357b8e25" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="structsmf__ctx" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsmf__ctx" kindref="compound">smf_ctx</ref><sp/>{</highlight></codeline>
<codeline lineno="95" refid="structsmf__ctx_1a48736dbfad38f0b25e4ab2a36d2f482a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsmf__state" kindref="compound">smf_state</ref><sp/>*<ref refid="structsmf__ctx_1a48736dbfad38f0b25e4ab2a36d2f482a" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="97" refid="structsmf__ctx_1a2cebcd02bfc6b36278c20fe8e0f95418" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsmf__state" kindref="compound">smf_state</ref><sp/>*<ref refid="structsmf__ctx_1a2cebcd02bfc6b36278c20fe8e0f95418" kindref="member">previous</ref>;</highlight></codeline>
<codeline lineno="104" refid="structsmf__ctx_1a1018c3dc6d7cc94ac2b64f95e5c053cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="structsmf__ctx_1a1018c3dc6d7cc94ac2b64f95e5c053cd" kindref="member">terminate_val</ref>;</highlight></codeline>
<codeline lineno="109" refid="structsmf__ctx_1afb094c0e87d42ec7ca780a2859be7bf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="smf_8h_1a4389086c6aa3167e8c49226323ae208d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="smf_8h_1a4389086c6aa3167e8c49226323ae208d" kindref="member">smf_set_initial</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsmf__ctx" kindref="compound">smf_ctx</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsmf__state" kindref="compound">smf_state</ref><sp/>*init_state);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="smf_8h_1a3e5ac3e2ad105d1a01b4cf0b1a8a6fcb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="smf_8h_1a3e5ac3e2ad105d1a01b4cf0b1a8a6fcb" kindref="member">smf_set_state</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsmf__ctx" kindref="compound">smf_ctx</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsmf__state" kindref="compound">smf_state</ref><sp/>*new_state);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="smf_8h_1aae28c66f0652c99ba8e843eeaf02aaf7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="smf_8h_1aae28c66f0652c99ba8e843eeaf02aaf7" kindref="member">smf_set_terminate</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsmf__ctx" kindref="compound">smf_ctx</ref><sp/>*ctx,<sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>val);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="smf_8h_1a8399cfa9e793a7f188b4ed4fec9f4f90" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="smf_8h_1a8399cfa9e793a7f188b4ed4fec9f4f90" kindref="member">smf_run_state</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsmf__ctx" kindref="compound">smf_ctx</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_SMF_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/smf.h"/>
  </compounddef>
</doxygen>
