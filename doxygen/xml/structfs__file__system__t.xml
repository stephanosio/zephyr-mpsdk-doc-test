<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structfs__file__system__t" kind="struct" language="C++" prot="public">
    <compoundname>fs_file_system_t</compoundname>
    <includes refid="fs__sys_8h" local="no">fs_sys.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfs__file__system__t_1a40b11c282d3b8c30fe1e2d9cc98edd69" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fs_file_system_t::open) (struct fs_file_t *filp, const char *fs_path, fs_mode_t flags)</definition>
        <argsstring>)(struct fs_file_t *filp, const char *fs_path, fs_mode_t flags)</argsstring>
        <name>open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="44" column="1" bodyfile="include/fs/fs_sys.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1a8efb04845dbec830f12435a6472b7015" prot="public" static="no" mutable="no">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref>(*</type>
        <definition>ssize_t(* fs_file_system_t::read) (struct fs_file_t *filp, void *dest, size_t nbytes)</definition>
        <argsstring>)(struct fs_file_t *filp, void *dest, size_t nbytes)</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="46" column="1" bodyfile="include/fs/fs_sys.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1a1039b25b44bc8be1daea19c0d489c0db" prot="public" static="no" mutable="no">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref>(*</type>
        <definition>ssize_t(* fs_file_system_t::write) (struct fs_file_t *filp, const void *src, size_t nbytes)</definition>
        <argsstring>)(struct fs_file_t *filp, const void *src, size_t nbytes)</argsstring>
        <name>write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="47" column="1" bodyfile="include/fs/fs_sys.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1a05b03f33ec51a2444a3a3f05ace8ba68" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fs_file_system_t::lseek) (struct fs_file_t *filp, off_t off, int whence)</definition>
        <argsstring>)(struct fs_file_t *filp, off_t off, int whence)</argsstring>
        <name>lseek</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="49" column="1" bodyfile="include/fs/fs_sys.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1a3bcb76b13290f7fba54d6d7578e66f9c" prot="public" static="no" mutable="no">
        <type>off_t(*</type>
        <definition>off_t(* fs_file_system_t::tell) (struct fs_file_t *filp)</definition>
        <argsstring>)(struct fs_file_t *filp)</argsstring>
        <name>tell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="50" column="1" bodyfile="include/fs/fs_sys.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1a604aa1045d24ad65e09e524a6adf8809" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fs_file_system_t::truncate) (struct fs_file_t *filp, off_t length)</definition>
        <argsstring>)(struct fs_file_t *filp, off_t length)</argsstring>
        <name>truncate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="51" column="1" bodyfile="include/fs/fs_sys.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1ad1a427421f3c122885bed8ef1faa56ea" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fs_file_system_t::sync) (struct fs_file_t *filp)</definition>
        <argsstring>)(struct fs_file_t *filp)</argsstring>
        <name>sync</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="52" column="1" bodyfile="include/fs/fs_sys.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1ae1c84b7c651a161e286cfb25aa1bc2fb" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fs_file_system_t::close) (struct fs_file_t *filp)</definition>
        <argsstring>)(struct fs_file_t *filp)</argsstring>
        <name>close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="53" column="1" bodyfile="include/fs/fs_sys.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1a3c0e0a91fffdde30802fb5a1cdc22b60" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fs_file_system_t::opendir) (struct fs_dir_t *dirp, const char *fs_path)</definition>
        <argsstring>)(struct fs_dir_t *dirp, const char *fs_path)</argsstring>
        <name>opendir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="55" column="1" bodyfile="include/fs/fs_sys.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1ace0bf6d96ddcb61e42bb54eb4388c3dc" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fs_file_system_t::readdir) (struct fs_dir_t *dirp, struct fs_dirent *entry)</definition>
        <argsstring>)(struct fs_dir_t *dirp, struct fs_dirent *entry)</argsstring>
        <name>readdir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="56" column="1" bodyfile="include/fs/fs_sys.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1ad11c51566b0703f0fd426e37200d7a8e" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fs_file_system_t::closedir) (struct fs_dir_t *dirp)</definition>
        <argsstring>)(struct fs_dir_t *dirp)</argsstring>
        <name>closedir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="57" column="1" bodyfile="include/fs/fs_sys.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1a086f2d11ff432e3d24887b5b3da2afca" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fs_file_system_t::mount) (struct fs_mount_t *mountp)</definition>
        <argsstring>)(struct fs_mount_t *mountp)</argsstring>
        <name>mount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="59" column="1" bodyfile="include/fs/fs_sys.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1a04659fbb0096ca2cc5e733d483494ae4" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fs_file_system_t::unmount) (struct fs_mount_t *mountp)</definition>
        <argsstring>)(struct fs_mount_t *mountp)</argsstring>
        <name>unmount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="60" column="1" bodyfile="include/fs/fs_sys.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1a3486815c6b1dcf0aef0be7a71a31ffea" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fs_file_system_t::unlink) (struct fs_mount_t *mountp, const char *name)</definition>
        <argsstring>)(struct fs_mount_t *mountp, const char *name)</argsstring>
        <name>unlink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="61" column="1" bodyfile="include/fs/fs_sys.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1affc26f28e560d5e5bdaa1868fe81332e" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fs_file_system_t::rename) (struct fs_mount_t *mountp, const char *from, const char *to)</definition>
        <argsstring>)(struct fs_mount_t *mountp, const char *from, const char *to)</argsstring>
        <name>rename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="62" column="1" bodyfile="include/fs/fs_sys.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1aa31880d03633ed35d060ce2e0ee75d15" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fs_file_system_t::mkdir) (struct fs_mount_t *mountp, const char *name)</definition>
        <argsstring>)(struct fs_mount_t *mountp, const char *name)</argsstring>
        <name>mkdir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="64" column="1" bodyfile="include/fs/fs_sys.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1a5865d7d64e0ad22a30f1822263f134da" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fs_file_system_t::stat) (struct fs_mount_t *mountp, const char *path, struct fs_dirent *entry)</definition>
        <argsstring>)(struct fs_mount_t *mountp, const char *path, struct fs_dirent *entry)</argsstring>
        <name>stat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="65" column="1" bodyfile="include/fs/fs_sys.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfs__file__system__t_1a3bac973eb97ecaa51a567b7d69a35142" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fs_file_system_t::statvfs) (struct fs_mount_t *mountp, const char *path, struct fs_statvfs *stat)</definition>
        <argsstring>)(struct fs_mount_t *mountp, const char *path, struct fs_statvfs *stat)</argsstring>
        <name>statvfs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/fs_sys.h" line="67" column="1" bodyfile="include/fs/fs_sys.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>File System interface structure. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>open</parametername>
</parameternamelist>
<parameterdescription>
<para>Opens or creates a file, depending on flags given </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>read</parametername>
</parameternamelist>
<parameterdescription>
<para>Reads nbytes number of bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write</parametername>
</parameternamelist>
<parameterdescription>
<para>Writes nbytes number of bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lseek</parametername>
</parameternamelist>
<parameterdescription>
<para>Moves the file position to a new location in the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tell</parametername>
</parameternamelist>
<parameterdescription>
<para>Retrieves the current position in the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>truncate</parametername>
</parameternamelist>
<parameterdescription>
<para>Truncates/expands the file to the new length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sync</parametername>
</parameternamelist>
<parameterdescription>
<para>Flushes the cache of an open file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>close</parametername>
</parameternamelist>
<parameterdescription>
<para>Flushes the associated stream and closes the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opendir</parametername>
</parameternamelist>
<parameterdescription>
<para>Opens an existing directory specified by the path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>readdir</parametername>
</parameternamelist>
<parameterdescription>
<para>Reads directory entries of an open directory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>closedir</parametername>
</parameternamelist>
<parameterdescription>
<para>Closes an open directory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mount</parametername>
</parameternamelist>
<parameterdescription>
<para>Mounts a file system </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unmount</parametername>
</parameternamelist>
<parameterdescription>
<para>Unmounts a file system </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unlink</parametername>
</parameternamelist>
<parameterdescription>
<para>Deletes the specified file or directory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rename</parametername>
</parameternamelist>
<parameterdescription>
<para>Renames a file or directory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mkdir</parametername>
</parameternamelist>
<parameterdescription>
<para>Creates a new directory using specified path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stat</parametername>
</parameternamelist>
<parameterdescription>
<para>Checks the status of a file or directory specified by the path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>statvfs</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the total and available space on the file system volume </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="include/fs/fs_sys.h" line="42" column="1" bodyfile="include/fs/fs_sys.h" bodystart="42" bodyend="69"/>
    <listofallmembers>
      <member refid="structfs__file__system__t_1ae1c84b7c651a161e286cfb25aa1bc2fb" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>close</name></member>
      <member refid="structfs__file__system__t_1ad11c51566b0703f0fd426e37200d7a8e" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>closedir</name></member>
      <member refid="structfs__file__system__t_1a05b03f33ec51a2444a3a3f05ace8ba68" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>lseek</name></member>
      <member refid="structfs__file__system__t_1aa31880d03633ed35d060ce2e0ee75d15" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>mkdir</name></member>
      <member refid="structfs__file__system__t_1a086f2d11ff432e3d24887b5b3da2afca" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>mount</name></member>
      <member refid="structfs__file__system__t_1a40b11c282d3b8c30fe1e2d9cc98edd69" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>open</name></member>
      <member refid="structfs__file__system__t_1a3c0e0a91fffdde30802fb5a1cdc22b60" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>opendir</name></member>
      <member refid="structfs__file__system__t_1a8efb04845dbec830f12435a6472b7015" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>read</name></member>
      <member refid="structfs__file__system__t_1ace0bf6d96ddcb61e42bb54eb4388c3dc" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>readdir</name></member>
      <member refid="structfs__file__system__t_1affc26f28e560d5e5bdaa1868fe81332e" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>rename</name></member>
      <member refid="structfs__file__system__t_1a5865d7d64e0ad22a30f1822263f134da" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>stat</name></member>
      <member refid="structfs__file__system__t_1a3bac973eb97ecaa51a567b7d69a35142" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>statvfs</name></member>
      <member refid="structfs__file__system__t_1ad1a427421f3c122885bed8ef1faa56ea" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>sync</name></member>
      <member refid="structfs__file__system__t_1a3bcb76b13290f7fba54d6d7578e66f9c" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>tell</name></member>
      <member refid="structfs__file__system__t_1a604aa1045d24ad65e09e524a6adf8809" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>truncate</name></member>
      <member refid="structfs__file__system__t_1a3486815c6b1dcf0aef0be7a71a31ffea" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>unlink</name></member>
      <member refid="structfs__file__system__t_1a04659fbb0096ca2cc5e733d483494ae4" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>unmount</name></member>
      <member refid="structfs__file__system__t_1a1039b25b44bc8be1daea19c0d489c0db" prot="public" virt="non-virtual"><scope>fs_file_system_t</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
