<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="net__context_8h" kind="file" language="C++">
    <compoundname>net_context.h</compoundname>
    <includes local="no">kernel.h</includes>
    <includes refid="atomic_8h" local="no">sys/atomic.h</includes>
    <includes refid="net__ip_8h" local="no">net/net_ip.h</includes>
    <includes refid="net__if_8h" local="no">net/net_if.h</includes>
    <includes refid="net__stats_8h" local="no">net/net_stats.h</includes>
    <includedby refid="dns__resolve_8h" local="no">include/net/dns_resolve.h</includedby>
    <includedby refid="net__offload_8h" local="no">include/net/net_offload.h</includedby>
    <includedby refid="net__pkt_8h" local="no">include/net/net_pkt.h</includedby>
    <incdepgraph>
      <node id="31">
        <label>logging/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>logging/log_core.h</label>
        <link refid="include_2logging_2log__core_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>logging/log_instance.h</label>
        <link refid="log__instance_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>logging/log_msg.h</label>
        <link refid="log__msg_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>logging/log_msg2.h</label>
        <link refid="include_2logging_2log__msg2_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>net/buf.h</label>
        <link refid="net_2buf_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>net/capture.h</label>
        <link refid="capture_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>net/hostname.h</label>
        <link refid="hostname_8h"/>
      </node>
      <node id="1">
        <label>include/net/net_context.h</label>
        <link refid="net__context_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>net/net_core.h</label>
        <link refid="net__core_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>net/net_event.h</label>
        <link refid="net__event_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>net/net_if.h</label>
        <link refid="net__if_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>net/net_ip.h</label>
        <link refid="net__ip_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>net/net_l2.h</label>
        <link refid="net__l2_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>net/net_linkaddr.h</label>
        <link refid="net__linkaddr_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>net/net_mgmt.h</label>
        <link refid="net__mgmt_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>net/net_stats.h</label>
        <link refid="net__stats_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>net/net_timeout.h</label>
        <link refid="net__timeout_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="16">
        <label>sys/byteorder.h</label>
        <link refid="byteorder_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>sys/cbprintf.h</label>
        <link refid="cbprintf_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>sys/cbprintf_cxx.h</label>
        <link refid="cbprintf__cxx_8h"/>
      </node>
      <node id="39">
        <label>sys/cbprintf_internal.h</label>
        <link refid="cbprintf__internal_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>sys/mpsc_packet.h</label>
        <link refid="mpsc__packet_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="9">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="7">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="4">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="8">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="38">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>syscalls/log_core.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__core_8h"/>
      </node>
      <node id="42">
        <label>syscalls/log_msg2.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__msg2_8h"/>
      </node>
      <node id="41">
        <label>alloca.h</label>
      </node>
      <node id="27">
        <label>device.h</label>
      </node>
      <node id="2">
        <label>kernel.h</label>
      </node>
      <node id="19">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="43">
        <label>syscall.h</label>
      </node>
      <node id="24">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="55">
        <label>syscalls/net_if.h</label>
      </node>
      <node id="25">
        <label>syscalls/net_ip.h</label>
      </node>
      <node id="50">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/net/dns_resolve.h</label>
        <link refid="dns__resolve_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>include/net/dummy.h</label>
        <link refid="dummy_8h"/>
      </node>
      <node id="18">
        <label>include/net/ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>include/net/ethernet_mgmt.h</label>
        <link refid="ethernet__mgmt_8h"/>
      </node>
      <node id="21">
        <label>include/net/ieee802154_radio.h</label>
        <link refid="ieee802154__radio_8h"/>
      </node>
      <node id="1">
        <label>include/net/net_context.h</label>
        <link refid="net__context_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>include/net/net_offload.h</label>
        <link refid="net__offload_8h"/>
      </node>
      <node id="16">
        <label>include/net/net_pkt.h</label>
        <link refid="net__pkt_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>include/net/net_pkt_filter.h</label>
        <link refid="net__pkt__filter_8h"/>
      </node>
      <node id="22">
        <label>include/net/ppp.h</label>
        <link refid="ppp_8h"/>
      </node>
      <node id="23">
        <label>include/net/promiscuous.h</label>
        <link refid="promiscuous_8h"/>
      </node>
      <node id="13">
        <label>include/net/sntp.h</label>
        <link refid="sntp_8h"/>
      </node>
      <node id="3">
        <label>include/net/socket.h</label>
        <link refid="net_2socket_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/net/socket_offload.h</label>
        <link refid="socket__offload_8h"/>
      </node>
      <node id="9">
        <label>include/net/socketutils.h</label>
        <link refid="socketutils_8h"/>
      </node>
      <node id="5">
        <label>include/net/tftp.h</label>
        <link refid="tftp_8h"/>
      </node>
      <node id="24">
        <label>include/net/udp.h</label>
        <link refid="udp_8h"/>
      </node>
      <node id="25">
        <label>include/net/virtual.h</label>
        <link refid="virtual_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>include/net/virtual_mgmt.h</label>
        <link refid="virtual__mgmt_8h"/>
      </node>
      <node id="6">
        <label>include/posix/arpa/inet.h</label>
        <link refid="inet_8h"/>
      </node>
      <node id="7">
        <label>include/posix/net/if.h</label>
        <link refid="if_8h"/>
      </node>
      <node id="8">
        <label>include/posix/netdb.h</label>
        <link refid="netdb_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>include/posix/netinet/in.h</label>
        <link refid="in_8h"/>
      </node>
      <node id="11">
        <label>include/posix/netinet/tcp.h</label>
        <link refid="tcp_8h"/>
      </node>
      <node id="12">
        <label>include/posix/poll.h</label>
        <link refid="poll_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>include/posix/sys/socket.h</label>
        <link refid="posix_2sys_2socket_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structnet__context" prot="public">net_context</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__net__context_1ga5e2f5fcc08863a4090bc04040ee88d29" prot="public" static="no">
        <name>NET_CONTEXT_IN_USE</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is this context used or not </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="36" column="9" bodyfile="include/net/net_context.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__net__context_1gac8f6e3a16d52e8e376c38eec0ed8a940" prot="public" static="no">
        <name>NET_CONTEXT_FAMILY</name>
        <initializer>(<ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(3) | <ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(4) | <ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(5))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address family, connection type and IP protocol are stored into a bit field to save space. Protocol family of this connection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="54" column="9" bodyfile="include/net/net_context.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__net__context_1gac9b4cf9beecaac5bf05db3111c803678" prot="public" static="no">
        <name>NET_CONTEXT_TYPE</name>
        <initializer>(<ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(6) | <ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(7))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type of the connection (datagram / stream / raw) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="57" column="9" bodyfile="include/net/net_context.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__net__context_1ga84206421e8f2e1eb114d393f0c81428b" prot="public" static="no">
        <name>NET_CONTEXT_REMOTE_ADDR_SET</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remote address set </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="60" column="9" bodyfile="include/net/net_context.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__net__context_1gae4bfc7d561f99a5c50fa725496dfd69e" prot="public" static="no">
        <name>NET_CONTEXT_ACCEPTING_SOCK</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(9)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is the socket accepting connections </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="63" column="9" bodyfile="include/net/net_context.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__net__context_1ga90385e51999494c0d530c97b57a01865" prot="public" static="no">
        <name>NET_CONTEXT_CLOSING_SOCK</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is the socket closing / closed </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="66" column="9" bodyfile="include/net/net_context.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__net__context_1gaa337bccec2c1df42540f236bb33a70e1" prot="public" static="no">
        <name>NET_CONTEXT_BOUND_TO_IFACE</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(11)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="69" column="9" bodyfile="include/net/net_context.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__net__context_1gacd1592ed32c7de5ecdeb69f569cb701f" prot="public" static="no">
        <name>NET_CONTEXT_STATE_SHIFT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="417" column="9" bodyfile="include/net/net_context.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__net__context_1gac63c02e444e17b268c230ba15c7c4339" prot="public" static="no">
        <name>NET_CONTEXT_STATE_MASK</name>
        <initializer>0x03</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="418" column="9" bodyfile="include/net/net_context.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__net__context_1gadde93ce383a4c5b0f450db1eaa0dfd4d" prot="public" static="no">
        <name>net_context_setup_pools</name>
        <param><defname>context</defname></param>
        <param><defname>tx_pool</defname></param>
        <param><defname>data_pool</defname></param>
        <briefdescription>
<para>Set custom network buffer pools for context send operations. </para>
        </briefdescription>
        <detaileddescription>
<para>Set custom network buffer pools used by the IP stack to allocate network buffers used by the context when sending data to the network. Using dedicated buffers may help make send operations on a given context more reliable, e.g. not be subject to buffer starvation due to operations on other network contexts. Buffer pools are set per context, but several contexts may share the same buffers. Note that there&apos;s no support for per-context custom receive packet pools.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context that will use the given <ref refid="structnet__buf" kindref="compound">net_buf</ref> pools. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tx_pool</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the function that will return TX pool to the caller. The TX pool is used when sending data to network. There is one TX <ref refid="structnet__pkt" kindref="compound">net_pkt</ref> for each network packet that is sent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_pool</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the function that will return DATA pool to the caller. The DATA pool is used to store data that is sent to the network. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="1142" column="10" bodyfile="include/net/net_context.h" bodystart="1142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__net__context_1ga62753cf9e6218d37e65f8b461bf8c8dd" prot="public" static="no" strong="no">
        <type></type>
        <name>net_context_state</name>
        <enumvalue id="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8dda1997d732e8a49fd42895917afe160de2" prot="public">
          <name>NET_CONTEXT_IDLE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8dda8d946fd7f7895cce804bf617313a2c40" prot="public">
          <name>NET_CONTEXT_UNCONNECTED</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8ddaaa50d60ab4b2aa7db248402c522fd3f6" prot="public">
          <name>NET_CONTEXT_CONFIGURING</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8dda26bdeef9794c4051446339bb38a6999e" prot="public">
          <name>NET_CONTEXT_CONNECTING</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8dda69163a1ec7757a0307b326bdc3e2697b" prot="public">
          <name>NET_CONTEXT_READY</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8dda18b286eb1d9a61595b70f76eead211e7" prot="public">
          <name>NET_CONTEXT_CONNECTED</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8ddab77dbc57d8c05b742bc28f01793179a9" prot="public">
          <name>NET_CONTEXT_LISTENING</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>State of the context (bits 1 &amp; 2 in the flags) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="39" column="1" bodyfile="include/net/net_context.h" bodystart="39" bodyend="47"/>
      </memberdef>
      <memberdef kind="enum" id="group__net__context_1gab03a354899ff68f6b9d127bc3bb5e17d" prot="public" static="no" strong="no">
        <type></type>
        <name>net_context_option</name>
        <enumvalue id="group__net__context_1ggab03a354899ff68f6b9d127bc3bb5e17da5aa24385cbf7da64f7187e03273acb6c" prot="public">
          <name>NET_OPT_PRIORITY</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__net__context_1ggab03a354899ff68f6b9d127bc3bb5e17da6d0b17e0b623eaefeb0ef9b35f8ec184" prot="public">
          <name>NET_OPT_TXTIME</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__net__context_1ggab03a354899ff68f6b9d127bc3bb5e17daa0b8e154dcb188b840f37db1c6af505c" prot="public">
          <name>NET_OPT_SOCKS5</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__net__context_1ggab03a354899ff68f6b9d127bc3bb5e17da629f8f361f17083b3629de8f94020076" prot="public">
          <name>NET_OPT_RCVTIMEO</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__net__context_1ggab03a354899ff68f6b9d127bc3bb5e17da7a8d12a1a628d785e07c811e9132d668" prot="public">
          <name>NET_OPT_SNDTIMEO</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="1057" column="1" bodyfile="include/net/net_context.h" bodystart="1057" bodyend="1063"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__net__context_1ga05b4ae7d57bb4e472c637aea912b08cd" prot="public" static="no">
        <type>void(*</type>
        <definition>net_context_recv_cb_t</definition>
        <argsstring>)(struct net_context *context, struct net_pkt *pkt, union net_ip_header *ip_hdr, union net_proto_header *proto_hdr, int status, void *user_data)</argsstring>
        <name>net_context_recv_cb_t</name>
        <briefdescription>
<para>Network data receive callback. </para>
        </briefdescription>
        <detaileddescription>
<para>The recv callback is called after a network data packet is received. This callback is called by RX thread so its stack and execution context is used here. Keep processing in the callback minimal to reduce the time spent blocked while handling packets.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The context to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Network buffer that is received. If the pkt is not NULL, then the callback will own the buffer and it needs to to unref the pkt as soon as it has finished working with it. On EOF, pkt will be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ip_hdr</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to relevant IP (v4 or v6) header. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proto_hdr</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to relevant protocol (udp or tcp) header. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Value is set to 0 if some data or the connection is at EOF, &lt;0 if there was an error receiving data, in this case the pkt parameter is set to NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>The user data given in net_recv() call. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="93" column="9" bodyfile="include/net/net_context.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__net__context_1ga52a4a30637d02d7fb2fe058e8314d309" prot="public" static="no">
        <type>void(*</type>
        <definition>net_context_send_cb_t</definition>
        <argsstring>)(struct net_context *context, int status, void *user_data)</argsstring>
        <name>net_context_send_cb_t</name>
        <briefdescription>
<para>Network data send callback. </para>
        </briefdescription>
        <detaileddescription>
<para>The send callback is called after a network data packet is sent. This callback is called by TX thread so its stack and execution context is used here. Keep processing in the callback minimal to reduce the time spent blocked while handling packets.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The context to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Value is set to &gt;= 0: amount of data that was sent, &lt; 0 there was an error sending data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>The user data given in net_send() call. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="114" column="9" bodyfile="include/net/net_context.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__net__context_1ga344a062c4a75edb9bf69cbf5e93df1fa" prot="public" static="no">
        <type>void(*</type>
        <definition>net_tcp_accept_cb_t</definition>
        <argsstring>)(struct net_context *new_context, struct sockaddr *addr, socklen_t addrlen, int status, void *user_data)</argsstring>
        <name>net_tcp_accept_cb_t</name>
        <briefdescription>
<para>Accept callback. </para>
        </briefdescription>
        <detaileddescription>
<para>The accept callback is called after a successful connection was established or if there was an error while we were waiting for a connection attempt. This callback is called by RX thread so its stack and execution context is used here. Keep processing in the callback minimal to reduce the time spent blocked while handling packets.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_context</parametername>
</parameternamelist>
<parameterdescription>
<para>The context to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>The peer address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addrlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the peer address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>The status code, 0 on success, &lt; 0 otherwise </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>The user data given in <ref refid="group__net__context_1ga1b056999d9ab8f2d3b3c0f4788f36cdd" kindref="member">net_context_accept()</ref> call. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="134" column="9" bodyfile="include/net/net_context.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__net__context_1gaaa12e95831b1de08379fd907e47c550a" prot="public" static="no">
        <type>void(*</type>
        <definition>net_context_connect_cb_t</definition>
        <argsstring>)(struct net_context *context, int status, void *user_data)</argsstring>
        <name>net_context_connect_cb_t</name>
        <briefdescription>
<para>Connection callback. </para>
        </briefdescription>
        <detaileddescription>
<para>The connect callback is called after a connection is being established. For TCP connections, this callback is called by RX thread so its stack and execution context is used here. The callback is called after the TCP connection was established or if the connection failed. Keep processing in the callback minimal to reduce the time spent blocked while handling packets. For UDP connections, this callback is called immediately by <ref refid="group__net__context_1ga56b2c5fc3f6a97664944cae1c1eb5dad" kindref="member">net_context_connect()</ref> function. UDP is a connectionless protocol so the connection can be thought of being established immediately.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The context to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Status of the connection establishment. This is 0 if the connection was established successfully, &lt;0 if there was an error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>The user data given in <ref refid="group__net__context_1ga56b2c5fc3f6a97664944cae1c1eb5dad" kindref="member">net_context_connect()</ref> call. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="161" column="9" bodyfile="include/net/net_context.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__net__context_1ga4b416b76a61cde0b89c14d98a213110e" prot="public" static="no">
        <type>struct k_mem_slab *(*</type>
        <definition>net_pkt_get_slab_func_t</definition>
        <argsstring>)(void)</argsstring>
        <name>net_pkt_get_slab_func_t</name>
        <briefdescription>
<para>Function that is called to get the slab that is used for <ref refid="structnet__pkt" kindref="compound">net_pkt</ref> allocations. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to valid struct k_mem_slab instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="161" column="9" bodyfile="include/net/net_context.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__net__context_1ga5444bb49ec9cfbee2ca3f85186b7551d" prot="public" static="no">
        <type>struct <ref refid="structnet__buf__pool" kindref="compound">net_buf_pool</ref> *(*</type>
        <definition>net_pkt_get_pool_func_t</definition>
        <argsstring>)(void)</argsstring>
        <name>net_pkt_get_pool_func_t</name>
        <briefdescription>
<para>Function that is called to get the pool that is used for <ref refid="structnet__buf" kindref="compound">net_buf</ref> allocations. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to valid struct <ref refid="structnet__buf__pool" kindref="compound">net_buf_pool</ref> instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="161" column="9" bodyfile="include/net/net_context.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__net__context_1ga01db89fc7d7bf125fb4958e956dba4ec" prot="public" static="no">
        <type>void(*</type>
        <definition>net_context_cb_t</definition>
        <argsstring>)(struct net_context *context, void *user_data)</argsstring>
        <name>net_context_cb_t</name>
        <briefdescription>
<para>Callback used while iterating over network contexts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid pointer on current network context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid pointer on some user data or NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="1100" column="9" bodyfile="include/net/net_context.h" bodystart="1100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__net__context_1ga423103d5c386b602737e23ee81f2a961" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool net_context_is_used</definition>
        <argsstring>(struct net_context *context)</argsstring>
        <name>net_context_is_used</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="339" column="20" bodyfile="include/net/net_context.h" bodystart="339" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga2f6d614158c999fa68e518393c0a9c35" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool net_context_is_bound_to_iface</definition>
        <argsstring>(struct net_context *context)</argsstring>
        <name>net_context_is_bound_to_iface</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="346" column="20" bodyfile="include/net/net_context.h" bodystart="346" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga26aa811e18a6808b6255713ac89c5773" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool net_context_is_accepting</definition>
        <argsstring>(struct net_context *context)</argsstring>
        <name>net_context_is_accepting</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Is this context is accepting data now. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the context is accepting connections, False otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="360" column="20" bodyfile="include/net/net_context.h" bodystart="360" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga5fac6b26abfff86f29c087f6cddcceed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void net_context_set_accepting</definition>
        <argsstring>(struct net_context *context, bool accepting)</argsstring>
        <name>net_context_set_accepting</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>accepting</declname>
        </param>
        <briefdescription>
<para>Set this context to accept data now. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>accepting</parametername>
</parameternamelist>
<parameterdescription>
<para>True if accepting, False if not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="373" column="20" bodyfile="include/net/net_context.h" bodystart="373" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1gac8acf87f9b405df923a258c9f163e38b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool net_context_is_closing</definition>
        <argsstring>(struct net_context *context)</argsstring>
        <name>net_context_is_closing</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Is this context closing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the context is closing, False otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="392" column="20" bodyfile="include/net/net_context.h" bodystart="392" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga9941aa201206448b6b34789d252f6385" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void net_context_set_closing</definition>
        <argsstring>(struct net_context *context, bool closing)</argsstring>
        <name>net_context_set_closing</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>closing</declname>
        </param>
        <briefdescription>
<para>Set this context to closing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>closing</parametername>
</parameternamelist>
<parameterdescription>
<para>True if closing, False if not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="405" column="20" bodyfile="include/net/net_context.h" bodystart="405" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga53bd5f35a142f1d43f90d3bde99778e0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>enum <ref refid="group__net__context_1ga62753cf9e6218d37e65f8b461bf8c8dd" kindref="member">net_context_state</ref></type>
        <definition>static enum net_context_state net_context_get_state</definition>
        <argsstring>(struct net_context *context)</argsstring>
        <name>net_context_get_state</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Get state for this network context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the state of the context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Network state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="430" column="23" bodyfile="include/net/net_context.h" bodystart="430" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1gaac934209341db606a4d563b3c48cce45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void net_context_set_state</definition>
        <argsstring>(struct net_context *context, enum net_context_state state)</argsstring>
        <name>net_context_set_state</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>enum <ref refid="group__net__context_1ga62753cf9e6218d37e65f8b461bf8c8dd" kindref="member">net_context_state</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Set state for this network context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the state of the context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>New network context state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="447" column="20" bodyfile="include/net/net_context.h" bodystart="447" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga2c55e45a4ff4d4898766d7c391f63f3c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__ip__4__6_1ga2d9e094abb99ebd0874373edf1c45eda" kindref="member">sa_family_t</ref></type>
        <definition>static sa_family_t net_context_get_family</definition>
        <argsstring>(struct net_context *context)</argsstring>
        <name>net_context_get_family</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Get address family for this network context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the address family (IPv4 or IPv6) of the context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Network state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="467" column="27" bodyfile="include/net/net_context.h" bodystart="467" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga6ef48a4b15c086167d44a8ed6a82478f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void net_context_set_family</definition>
        <argsstring>(struct net_context *context, sa_family_t family)</argsstring>
        <name>net_context_set_family</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1ga2d9e094abb99ebd0874373edf1c45eda" kindref="member">sa_family_t</ref></type>
          <declname>family</declname>
        </param>
        <briefdescription>
<para>Set address family for this network context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the address family (IPv4, IPv6 or AF_PACKET) of the context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>family</parametername>
</parameternamelist>
<parameterdescription>
<para>Address family (AF_INET, AF_INET6, AF_PACKET, AF_CAN) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="483" column="20" bodyfile="include/net/net_context.h" bodystart="483" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga24b4d99dddc4fabf383f5d8079650337" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>enum <ref refid="group__ip__4__6_1gaaab4268707dbe08348b98fb028e7aa5c" kindref="member">net_sock_type</ref></type>
        <definition>static enum net_sock_type net_context_get_type</definition>
        <argsstring>(struct net_context *context)</argsstring>
        <name>net_context_get_type</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Get context type for this network context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the context type (stream, datagram or raw) of the context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Network context type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="510" column="19" bodyfile="include/net/net_context.h" bodystart="510" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga01c11c1dfce101df046df9ade00ed277" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void net_context_set_type</definition>
        <argsstring>(struct net_context *context, enum net_sock_type type)</argsstring>
        <name>net_context_set_type</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>enum <ref refid="group__ip__4__6_1gaaab4268707dbe08348b98fb028e7aa5c" kindref="member">net_sock_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Set context type for this network context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the context type (stream or datagram) of the context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Context type (SOCK_STREAM or SOCK_DGRAM) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="526" column="20" bodyfile="include/net/net_context.h" bodystart="526" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga33fafb1c4ace299e274c8c9be0ae4ae0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void net_context_set_filter_id</definition>
        <argsstring>(struct net_context *context, int filter_id)</argsstring>
        <name>net_context_set_filter_id</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>filter_id</declname>
        </param>
        <briefdescription>
<para>Set CAN filter id for this network context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the CAN filter id of the context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter_id</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN filter id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="558" column="20" bodyfile="include/net/net_context.h" bodystart="558" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga7b314980ba02e85cca34b8929e830b06" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int net_context_get_filter_id</definition>
        <argsstring>(struct net_context *context)</argsstring>
        <name>net_context_get_filter_id</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Get CAN filter id for this network context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function gets the CAN filter id of the context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Filter id of this network context </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="583" column="19" bodyfile="include/net/net_context.h" bodystart="583" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga5249f793b1db0c80d1c8c63827678540" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>static uint16_t net_context_get_ip_proto</definition>
        <argsstring>(struct net_context *context)</argsstring>
        <name>net_context_get_ip_proto</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Get context IP protocol for this network context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the IP protocol (UDP / TCP / IEEE 802.3 protocol value) of the context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Network context IP protocol. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="601" column="24" bodyfile="include/net/net_context.h" bodystart="601" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga37f64596d61e4e98e3df2ac784de447d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void net_context_set_ip_proto</definition>
        <argsstring>(struct net_context *context, uint16_t proto)</argsstring>
        <name>net_context_set_ip_proto</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>proto</declname>
        </param>
        <briefdescription>
<para>Set context IP protocol for this network context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the context IP protocol (UDP / TCP) of the context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proto</parametername>
</parameternamelist>
<parameterdescription>
<para>Context IP protocol (IPPROTO_UDP, IPPROTO_TCP or IEEE 802.3 protocol value) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="616" column="20" bodyfile="include/net/net_context.h" bodystart="616" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1gafe6b8c9af4464cd471285817d6d61087" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
        <definition>static struct net_if * net_context_get_iface</definition>
        <argsstring>(struct net_context *context)</argsstring>
        <name>net_context_get_iface</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Get network interface for this context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the used network interface.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Context network interface if context is bind to interface, NULL otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="633" column="13" bodyfile="include/net/net_context.h" bodystart="633" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga10399e3f3d159de9325ac7632ce25c51" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void net_context_set_iface</definition>
        <argsstring>(struct net_context *context, struct net_if *iface)</argsstring>
        <name>net_context_set_iface</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Set network interface for this context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function binds network interface to this context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>Network interface. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="648" column="20" bodyfile="include/net/net_context.h" bodystart="648" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga9cdb3e5849a5b2663e0a38ac2a39a427" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>static uint8_t net_context_get_ipv4_ttl</definition>
        <argsstring>(struct net_context *context)</argsstring>
        <name>net_context_get_ipv4_ttl</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="656" column="23" bodyfile="include/net/net_context.h" bodystart="656" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga11672ca3ebdae63b0013ad76959304d5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void net_context_set_ipv4_ttl</definition>
        <argsstring>(struct net_context *context, uint8_t ttl)</argsstring>
        <name>net_context_set_ipv4_ttl</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>ttl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="661" column="20" bodyfile="include/net/net_context.h" bodystart="661" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga977b08a77586e0e4752bff725139427c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>static uint8_t net_context_get_ipv6_hop_limit</definition>
        <argsstring>(struct net_context *context)</argsstring>
        <name>net_context_get_ipv6_hop_limit</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="667" column="23" bodyfile="include/net/net_context.h" bodystart="667" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga0cbf8377e7757881033aab3e718b1a61" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void net_context_set_ipv6_hop_limit</definition>
        <argsstring>(struct net_context *context, uint8_t hop_limit)</argsstring>
        <name>net_context_set_ipv6_hop_limit</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>hop_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="672" column="20" bodyfile="include/net/net_context.h" bodystart="672" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga9bd6b5e9429b6e845d41f6cbf242c092" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void net_context_set_proxy_enabled</definition>
        <argsstring>(struct net_context *context, bool enable)</argsstring>
        <name>net_context_set_proxy_enabled</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="690" column="20" bodyfile="include/net/net_context.h" bodystart="690" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga5c3a841ff54ddb53cedcccefde5a7d7a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool net_context_is_proxy_enabled</definition>
        <argsstring>(struct net_context *context)</argsstring>
        <name>net_context_is_proxy_enabled</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="697" column="20" bodyfile="include/net/net_context.h" bodystart="697" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1gae21d27ce120ab72b58b1c20ec1d7ceff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_context_get</definition>
        <argsstring>(sa_family_t family, enum net_sock_type type, uint16_t ip_proto, struct net_context **context)</argsstring>
        <name>net_context_get</name>
        <param>
          <type><ref refid="group__ip__4__6_1ga2d9e094abb99ebd0874373edf1c45eda" kindref="member">sa_family_t</ref></type>
          <declname>family</declname>
        </param>
        <param>
          <type>enum <ref refid="group__ip__4__6_1gaaab4268707dbe08348b98fb028e7aa5c" kindref="member">net_sock_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>ip_proto</declname>
        </param>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> **</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Get network context. </para>
        </briefdescription>
        <detaileddescription>
<para>Network context is used to define the connection 5-tuple (protocol, remote address, remote port, source address and source port). Random free port number will be assigned to source port when context is created. This is similar as BSD <ref refid="posix_2sys_2socket_8h_1a00c0ed5f8528aac995d803af4b827a9c" kindref="member">socket()</ref> function. The context will be created with a reference count of 1.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>family</parametername>
</parameternamelist>
<parameterdescription>
<para>IP address family (AF_INET or AF_INET6) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the socket, SOCK_STREAM or SOCK_DGRAM </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ip_proto</parametername>
</parameternamelist>
<parameterdescription>
<para>IP protocol, IPPROTO_UDP or IPPROTO_TCP. For raw socket access, the value is the L2 protocol value from IEEE 802.3 (see <ref refid="ethernet_8h" kindref="compound">ethernet.h</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The allocated context is returned to the caller.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt; 0 if error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="720" column="5" declfile="include/net/net_context.h" declline="720" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga1d6b64e302c546db589c661f4b6bda98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_context_put</definition>
        <argsstring>(struct net_context *context)</argsstring>
        <name>net_context_put</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Close and unref a network context. </para>
        </briefdescription>
        <detaileddescription>
<para>This releases the context. It is not possible to send or receive data via this context after this call. This is similar as BSD <ref refid="posix_2sys_2socket_8h_1afe31a414f8777d15266fe84df7b66cbf" kindref="member">shutdown()</ref> function. For legacy compatibility, this function will implicitly decrement the reference count and possibly destroy the context either now or when it reaches a final state.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The context to be closed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt; 0 if error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="738" column="5" declfile="include/net/net_context.h" declline="738" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga4c0ef9540a0d7e800c4529274f5c22f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_context_ref</definition>
        <argsstring>(struct net_context *context)</argsstring>
        <name>net_context_ref</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Take a reference count to a <ref refid="structnet__context" kindref="compound">net_context</ref>, preventing destruction. </para>
        </briefdescription>
        <detaileddescription>
<para>Network contexts are not recycled until their reference count reaches zero. Note that this does not prevent any &quot;close&quot; behavior that results from errors or net_context_put. It simply prevents the context from being recycled for further use.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The context on which to increment the reference count</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new reference count </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="752" column="5" declfile="include/net/net_context.h" declline="752" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga0d391690d9d6972ce6f4baedeab64b11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_context_unref</definition>
        <argsstring>(struct net_context *context)</argsstring>
        <name>net_context_unref</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Decrement the reference count to a network context. </para>
        </briefdescription>
        <detaileddescription>
<para>Decrements the refcount. If it reaches zero, the context will be recycled. Note that this does not cause any network-visible &quot;close&quot; behavior (i.e. future packets to this connection may see TCP RST or ICMP port unreachable responses). See <ref refid="group__net__context_1ga1d6b64e302c546db589c661f4b6bda98" kindref="member">net_context_put()</ref> for that.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The context on which to decrement the reference count</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new reference count, zero if the context was destroyed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="767" column="5" declfile="include/net/net_context.h" declline="767" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga742a09074bf286ac016f17bcbeb4ef68" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int net_context_create_ipv4_new</definition>
        <argsstring>(struct net_context *context, struct net_pkt *pkt, const struct in_addr *src, const struct in_addr *dst)</argsstring>
        <name>net_context_create_ipv4_new</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>struct <ref refid="structnet__pkt" kindref="compound">net_pkt</ref> *</type>
          <declname>pkt</declname>
        </param>
        <param>
          <type>const struct <ref refid="structin__addr" kindref="compound">in_addr</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const struct <ref refid="structin__addr" kindref="compound">in_addr</ref> *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Create IPv4 packet in provided <ref refid="structnet__pkt" kindref="compound">net_pkt</ref> from context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context for a connection </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Network packet </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Source address, or NULL to choose a default </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination IPv4 address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return 0 on success, negative errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="785" column="19" bodyfile="include/net/net_context.h" bodystart="785" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga71263ea6e2788d67fa2ac77e309aba2a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int net_context_create_ipv6_new</definition>
        <argsstring>(struct net_context *context, struct net_pkt *pkt, const struct in6_addr *src, const struct in6_addr *dst)</argsstring>
        <name>net_context_create_ipv6_new</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>struct <ref refid="structnet__pkt" kindref="compound">net_pkt</ref> *</type>
          <declname>pkt</declname>
        </param>
        <param>
          <type>const struct <ref refid="structin6__addr" kindref="compound">in6_addr</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const struct <ref refid="structin6__addr" kindref="compound">in6_addr</ref> *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Create IPv6 packet in provided <ref refid="structnet__pkt" kindref="compound">net_pkt</ref> from context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Network context for a connection </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Network packet </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Source address, or NULL to choose a default from context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination IPv6 address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return 0 on success, negative errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="810" column="19" bodyfile="include/net/net_context.h" bodystart="810" bodyend="816"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga0fb749331a4f21148ca5a7f364f241b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_context_bind</definition>
        <argsstring>(struct net_context *context, const struct sockaddr *addr, socklen_t addrlen)</argsstring>
        <name>net_context_bind</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref></type>
          <declname>addrlen</declname>
        </param>
        <briefdescription>
<para>Assign a socket a local address. </para>
        </briefdescription>
        <detaileddescription>
<para>This is similar as BSD <ref refid="posix_2sys_2socket_8h_1a0de5e0b54a93dc6462078539b0a4a0b9" kindref="member">bind()</ref> function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The context to be assigned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address to assigned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addrlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the address.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt; 0 if error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="830" column="5" declfile="include/net/net_context.h" declline="830" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga3803c0d738fbb9d786f401aacc10a4d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_context_listen</definition>
        <argsstring>(struct net_context *context, int backlog)</argsstring>
        <name>net_context_listen</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>backlog</declname>
        </param>
        <briefdescription>
<para>Mark the context as a listening one. </para>
        </briefdescription>
        <detaileddescription>
<para>This is similar as BSD <ref refid="posix_2sys_2socket_8h_1a36f501240a9428fe2ae63a9540c97adb" kindref="member">listen()</ref> function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The context to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backlog</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the pending connections backlog.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt; 0 if error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="844" column="5" declfile="include/net/net_context.h" declline="844" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga56b2c5fc3f6a97664944cae1c1eb5dad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_context_connect</definition>
        <argsstring>(struct net_context *context, const struct sockaddr *addr, socklen_t addrlen, net_context_connect_cb_t cb, k_timeout_t timeout, void *user_data)</argsstring>
        <name>net_context_connect</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref></type>
          <declname>addrlen</declname>
        </param>
        <param>
          <type><ref refid="group__net__context_1gaaa12e95831b1de08379fd907e47c550a" kindref="member">net_context_connect_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Create a network connection. </para>
        </briefdescription>
        <detaileddescription>
<para>The net_context_connect function creates a network connection to the host specified by addr. After the connection is established, the user-supplied callback (cb) is executed. cb is called even if the timeout was set to K_FOREVER. cb is not called if the timeout expires. For datagram sockets (SOCK_DGRAM), this function only sets the peer address. This function is similar to the BSD <ref refid="posix_2sys_2socket_8h_1adfa930dd3c38f6c287d64e1680dbf386" kindref="member">connect()</ref> function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The network context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>The peer address to connect to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addrlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Peer address length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function. Set to NULL if not required. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The timeout value for the connection. Possible values:<itemizedlist>
<listitem><para>K_NO_WAIT: this function will return immediately,</para>
</listitem><listitem><para>K_FOREVER: this function will block until the connection is established,</para>
</listitem><listitem><para>&gt;0: this function will wait the specified ms. </para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data passed to the callback function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success. </para>
</simplesect>
<simplesect kind="return"><para>-EINVAL if an invalid parameter is passed as an argument. </para>
</simplesect>
<simplesect kind="return"><para>-ENOTSUP if the operation is not supported or implemented. </para>
</simplesect>
<simplesect kind="return"><para>-ETIMEDOUT if the connect operation times out. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="875" column="5" declfile="include/net/net_context.h" declline="875" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga1b056999d9ab8f2d3b3c0f4788f36cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_context_accept</definition>
        <argsstring>(struct net_context *context, net_tcp_accept_cb_t cb, k_timeout_t timeout, void *user_data)</argsstring>
        <name>net_context_accept</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="group__net__context_1ga344a062c4a75edb9bf69cbf5e93df1fa" kindref="member">net_tcp_accept_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Accept a network connection attempt. </para>
        </briefdescription>
        <detaileddescription>
<para>Accept a connection being established. This function will return immediately if the timeout is set to K_NO_WAIT. In this case the context will call the supplied callback when ever there is a connection established to this context. This is &quot;a register
handler and forget&quot; type of call (async). If the timeout is set to K_FOREVER, the function will wait until the connection is established. Timeout value &gt; 0, will wait as many ms. After the connection is established a caller-supplied callback is called. The callback is called even if timeout was set to K_FOREVER, the callback is called before this function will return in this case. The callback is not called if the timeout expires. This is similar as BSD <ref refid="posix_2sys_2socket_8h_1a33e6ea428ff537ed7a4763ce91b7d9bb" kindref="member">accept()</ref> function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The context to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller-supplied callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout for the connection. Possible values are K_FOREVER, K_NO_WAIT, &gt;0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller-supplied user data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt; 0 if error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="907" column="5" declfile="include/net/net_context.h" declline="907" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1gac793e1def18200416e3f679067c56ab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_context_send</definition>
        <argsstring>(struct net_context *context, const void *buf, size_t len, net_context_send_cb_t cb, k_timeout_t timeout, void *user_data)</argsstring>
        <name>net_context_send</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="group__net__context_1ga52a4a30637d02d7fb2fe058e8314d309" kindref="member">net_context_send_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Send data to a peer. </para>
        </briefdescription>
        <detaileddescription>
<para>This function can be used to send network data to a peer connection. After the network buffer is sent, a caller-supplied callback is called. Note that the callback might be called after this function has returned. For context of type SOCK_DGRAM, the destination address must have been set by the call to <ref refid="group__net__context_1ga56b2c5fc3f6a97664944cae1c1eb5dad" kindref="member">net_context_connect()</ref>. This is similar as BSD <ref refid="posix_2sys_2socket_8h_1ad32c12370c1d09a96775091bbbf3c44d" kindref="member">send()</ref> function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The network context to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>The data buffer to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller-supplied callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Currently this value is not used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller-supplied user data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt; 0 if error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="931" column="5" declfile="include/net/net_context.h" declline="931" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1gafb0230083b9bdc85c21752d9efb6fb10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_context_sendto</definition>
        <argsstring>(struct net_context *context, const void *buf, size_t len, const struct sockaddr *dst_addr, socklen_t addrlen, net_context_send_cb_t cb, k_timeout_t timeout, void *user_data)</argsstring>
        <name>net_context_sendto</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>dst_addr</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref></type>
          <declname>addrlen</declname>
        </param>
        <param>
          <type><ref refid="group__net__context_1ga52a4a30637d02d7fb2fe058e8314d309" kindref="member">net_context_send_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Send data to a peer specified by address. </para>
        </briefdescription>
        <detaileddescription>
<para>This function can be used to send network data to a peer specified by address. This variant can only be used for datagram connections of type SOCK_DGRAM. After the network buffer is sent, a caller-supplied callback is called. Note that the callback might be called after this function has returned. This is similar as BSD <ref refid="posix_2sys_2socket_8h_1acdc42cdbe2f9480ed58a2bdc2af57035" kindref="member">sendto()</ref> function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The network context to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>The data buffer to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addrlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller-supplied callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Currently this value is not used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller-supplied user data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>numbers of bytes sent on success, a negative errno otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="959" column="5" declfile="include/net/net_context.h" declline="959" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga437f04b1629542d2fcf43a15003dcac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_context_sendmsg</definition>
        <argsstring>(struct net_context *context, const struct msghdr *msghdr, int flags, net_context_send_cb_t cb, k_timeout_t timeout, void *user_data)</argsstring>
        <name>net_context_sendmsg</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const struct <ref refid="structmsghdr" kindref="compound">msghdr</ref> *</type>
          <declname>msghdr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="group__net__context_1ga52a4a30637d02d7fb2fe058e8314d309" kindref="member">net_context_send_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Send data in iovec to a peer specified in msghdr struct. </para>
        </briefdescription>
        <detaileddescription>
<para>This function has similar semantics as Posix <ref refid="posix_2sys_2socket_8h_1a1d7ee25c28352b2e7af55f75d721c4b8" kindref="member">sendmsg()</ref> call. For unconnected socket, the msg_name field in msghdr must be set. For connected socket the msg_name should be set to NULL, and msg_namelen to 0. After the network buffer is sent, a caller-supplied callback is called. Note that the callback might be called after this function has returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The network context to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msghdr</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags for the sending. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller-supplied callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Currently this value is not used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller-supplied user data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>numbers of bytes sent on success, a negative errno otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="986" column="5" declfile="include/net/net_context.h" declline="986" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga74f919185f8af074c2d90aa04733dd2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_context_recv</definition>
        <argsstring>(struct net_context *context, net_context_recv_cb_t cb, k_timeout_t timeout, void *user_data)</argsstring>
        <name>net_context_recv</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="group__net__context_1ga05b4ae7d57bb4e472c637aea912b08cd" kindref="member">net_context_recv_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Receive network data from a peer specified by context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function can be used to register a callback function that is called by the network stack when network data has been received for this context. As this function registers a callback, then there is no need to call this function multiple times if timeout is set to K_NO_WAIT. If callback function or user data changes, then the function can be called multiple times to register new values. This function will return immediately if the timeout is set to K_NO_WAIT. If the timeout is set to K_FOREVER, the function will wait until the network buffer is received. Timeout value &gt; 0 will wait as many ms. After the network buffer is received, a caller-supplied callback is called. The callback is called even if timeout was set to K_FOREVER, the callback is called before this function will return in this case. The callback is not called if the timeout expires. The timeout functionality can be compiled out if synchronous behavior is not needed. The sync call logic requires some memory that can be saved if only async way of call is used. If CONFIG_NET_CONTEXT_SYNC_RECV is not set, then the timeout parameter value is ignored. This is similar as BSD <ref refid="posix_2sys_2socket_8h_1ae11da452beee536eac85d5f26e5cdd40" kindref="member">recv()</ref> function. Note that <ref refid="group__net__context_1ga0fb749331a4f21148ca5a7f364f241b9" kindref="member">net_context_bind()</ref> should be called before <ref refid="group__net__context_1ga74f919185f8af074c2d90aa04733dd2a" kindref="member">net_context_recv()</ref>. Default random port number is assigned to local port. Only <ref refid="posix_2sys_2socket_8h_1a0de5e0b54a93dc6462078539b0a4a0b9" kindref="member">bind()</ref> will update connection information from context. If <ref refid="posix_2sys_2socket_8h_1ae11da452beee536eac85d5f26e5cdd40" kindref="member">recv()</ref> is called before <ref refid="posix_2sys_2socket_8h_1a0de5e0b54a93dc6462078539b0a4a0b9" kindref="member">bind()</ref> call, it may refuse to bind to a context which already has a connection associated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The network context to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller-supplied callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller-supplied timeout. Possible values are K_FOREVER, K_NO_WAIT, &gt;0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller-supplied user data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt; 0 if error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="1029" column="5" declfile="include/net/net_context.h" declline="1029" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1gab3cc2a13e24f9c263bc40cc87d752a9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_context_update_recv_wnd</definition>
        <argsstring>(struct net_context *context, int32_t delta)</argsstring>
        <name>net_context_update_recv_wnd</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>delta</declname>
        </param>
        <briefdescription>
<para>Update TCP receive window for context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function should be used by an application which doesn&apos;t fully process incoming data in its receive callback, but for example, queues it. In this case, receive callback should decrease the window (call this function with a negative value) by the size of queued data, and function(s) which dequeue data - with positive value corresponding to the dequeued size. For example, if receive callback gets a packet with the data size of 256 and queues it, it should call this function with delta of -256. If a function extracts 10 bytes of the queued data, it should call it with delta of 10.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The TCP network context to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delta</parametername>
</parameternamelist>
<parameterdescription>
<para>Size, in bytes, by which to increase TCP receive window (negative value to decrease).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt; 0 if error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="1054" column="5" declfile="include/net/net_context.h" declline="1054" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1gabd932d5ded649f9a8c8bab40810e9eae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_context_set_option</definition>
        <argsstring>(struct net_context *context, enum net_context_option option, const void *value, size_t len)</argsstring>
        <name>net_context_set_option</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>enum <ref refid="group__net__context_1gab03a354899ff68f6b9d127bc3bb5e17d" kindref="member">net_context_option</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Set an connection option for this context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The network context to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>Option to set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Option value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Option length</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt;0 if error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="1075" column="5" declfile="include/net/net_context.h" declline="1075" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1gaeec55aee0a2029f8877a953ea137f39c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_context_get_option</definition>
        <argsstring>(struct net_context *context, enum net_context_option option, void *value, size_t *len)</argsstring>
        <name>net_context_get_option</name>
        <param>
          <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>enum <ref refid="group__net__context_1gab03a354899ff68f6b9d127bc3bb5e17d" kindref="member">net_context_option</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Get connection option value for this context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The network context to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>Option to set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Option value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Option length (returned to caller)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt;0 if error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="1089" column="5" declfile="include/net/net_context.h" declline="1089" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1gabb751f7d213d00f8eec72a67f4ce3491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void net_context_foreach</definition>
        <argsstring>(net_context_cb_t cb, void *user_data)</argsstring>
        <name>net_context_foreach</name>
        <param>
          <type><ref refid="group__net__context_1ga01db89fc7d7bf125fb4958e956dba4ec" kindref="member">net_context_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Go through all the network connections and call callback for each network context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>User-supplied callback function to call. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>User specified data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="1109" column="6" declfile="include/net/net_context.h" declline="1109" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__net__context_1ga64c7442eeaa3ed82e54f50d2b30d67a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool net_context_port_in_use</definition>
        <argsstring>(enum net_ip_protocol ip_proto, uint16_t local_port, const struct sockaddr *local_addr)</argsstring>
        <name>net_context_port_in_use</name>
        <param>
          <type>enum <ref refid="group__ip__4__6_1gaf06819bf427cc58be1229b27b373ca31" kindref="member">net_ip_protocol</ref></type>
          <declname>ip_proto</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>local_port</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>local_addr</declname>
        </param>
        <briefdescription>
<para>Check if a port is in use (bound) </para>
        </briefdescription>
        <detaileddescription>
<para>This function checks if a port is bound with respect to the specified <computeroutput>ip_proto</computeroutput> and <computeroutput>local_addr</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ip_proto</parametername>
</parameternamelist>
<parameterdescription>
<para>the IP protocol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local_port</parametername>
</parameternamelist>
<parameterdescription>
<para>the port to check </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>the network address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the port is bound </para>
</simplesect>
<simplesect kind="return"><para>false if the port is not bound </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="1158" column="6" declfile="include/net/net_context.h" declline="1158" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Network context definitions. </para>
    </briefdescription>
    <detaileddescription>
<para>An API for applications to define a network connection. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Nordic<sp/>Semiconductor</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_NET_NET_CONTEXT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_NET_NET_CONTEXT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="atomic_8h" kindref="compound">sys/atomic.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net__ip_8h" kindref="compound">net/net_ip.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net__if_8h" kindref="compound">net/net_if.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net__stats_8h" kindref="compound">net/net_stats.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="group__net__context_1ga5e2f5fcc08863a4090bc04040ee88d29" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_CONTEXT_IN_USE<sp/>BIT(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="group__net__context_1ga62753cf9e6218d37e65f8b461bf8c8dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga62753cf9e6218d37e65f8b461bf8c8dd" kindref="member">net_context_state</ref><sp/>{</highlight></codeline>
<codeline lineno="40" refid="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8dda1997d732e8a49fd42895917afe160de2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8dda1997d732e8a49fd42895917afe160de2" kindref="member">NET_CONTEXT_IDLE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="41" refid="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8dda8d946fd7f7895cce804bf617313a2c40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8dda8d946fd7f7895cce804bf617313a2c40" kindref="member">NET_CONTEXT_UNCONNECTED</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="42" refid="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8ddaaa50d60ab4b2aa7db248402c522fd3f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8ddaaa50d60ab4b2aa7db248402c522fd3f6" kindref="member">NET_CONTEXT_CONFIGURING</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="43" refid="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8dda26bdeef9794c4051446339bb38a6999e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8dda26bdeef9794c4051446339bb38a6999e" kindref="member">NET_CONTEXT_CONNECTING</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="44" refid="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8dda69163a1ec7757a0307b326bdc3e2697b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8dda69163a1ec7757a0307b326bdc3e2697b" kindref="member">NET_CONTEXT_READY</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="45" refid="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8dda18b286eb1d9a61595b70f76eead211e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8dda18b286eb1d9a61595b70f76eead211e7" kindref="member">NET_CONTEXT_CONNECTED</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="46" refid="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8ddab77dbc57d8c05b742bc28f01793179a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1gga62753cf9e6218d37e65f8b461bf8c8ddab77dbc57d8c05b742bc28f01793179a9" kindref="member">NET_CONTEXT_LISTENING</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group__net__context_1gac8f6e3a16d52e8e376c38eec0ed8a940" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_CONTEXT_FAMILY<sp/>(BIT(3)<sp/>|<sp/>BIT(4)<sp/>|<sp/>BIT(5))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="group__net__context_1gac9b4cf9beecaac5bf05db3111c803678" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_CONTEXT_TYPE<sp/><sp/><sp/>(BIT(6)<sp/>|<sp/>BIT(7))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="group__net__context_1ga84206421e8f2e1eb114d393f0c81428b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_CONTEXT_REMOTE_ADDR_SET<sp/><sp/>BIT(8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group__net__context_1gae4bfc7d561f99a5c50fa725496dfd69e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_CONTEXT_ACCEPTING_SOCK<sp/><sp/>BIT(9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group__net__context_1ga90385e51999494c0d530c97b57a01865" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_CONTEXT_CLOSING_SOCK<sp/><sp/>BIT(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Context<sp/>is<sp/>bound<sp/>to<sp/>a<sp/>specific<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="group__net__context_1gaa337bccec2c1df42540f236bb33a70e1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_CONTEXT_BOUND_TO_IFACE<sp/>BIT(11)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__context" kindref="compound">net_context</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="group__net__context_1ga05b4ae7d57bb4e472c637aea912b08cd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__net__context_1ga05b4ae7d57bb4e472c637aea912b08cd" kindref="member">net_context_recv_cb_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__pkt" kindref="compound">net_pkt</ref><sp/>*pkt,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">net_ip_header<sp/>*ip_hdr,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">net_proto_header<sp/>*proto_hdr,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="group__net__context_1ga52a4a30637d02d7fb2fe058e8314d309" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__net__context_1ga52a4a30637d02d7fb2fe058e8314d309" kindref="member">net_context_send_cb_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="group__net__context_1ga344a062c4a75edb9bf69cbf5e93df1fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__net__context_1ga344a062c4a75edb9bf69cbf5e93df1fa" kindref="member">net_tcp_accept_cb_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*new_context,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addrlen,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="group__net__context_1gaaa12e95831b1de08379fd907e47c550a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__net__context_1gaaa12e95831b1de08379fd907e47c550a" kindref="member">net_context_connect_cb_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>net_pkt_get_slab_func_t<sp/>is<sp/>here<sp/>in<sp/>order<sp/>to<sp/>avoid<sp/>circular</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>dependency<sp/>between<sp/>net_pkt.h<sp/>and<sp/>net_context.h</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_mem_slab<sp/>*(*net_pkt_get_slab_func_t)(void);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>net_pkt_get_pool_func_t<sp/>is<sp/>here<sp/>in<sp/>order<sp/>to<sp/>avoid<sp/>circular</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>dependency<sp/>between<sp/>net_pkt.h<sp/>and<sp/>net_context.h</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__buf__pool" kindref="compound">net_buf_pool</ref><sp/>*(*net_pkt_get_pool_func_t)(void);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">net_tcp;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">net_conn_handle;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="structnet__context" refkind="compound"><highlight class="normal">__net_socket<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>{</highlight></codeline>
<codeline lineno="207" refid="structnet__context_1a1679e131dd6626bc210f23938df3fbcb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structnet__context_1a1679e131dd6626bc210f23938df3fbcb" kindref="member">user_data</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="structnet__context_1a0ae23462dcc7f84c95e0cc69dfeb6d5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/><ref refid="structnet__context_1a0ae23462dcc7f84c95e0cc69dfeb6d5a" kindref="member">refcount</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="structnet__context_1a730e72866e94ed1695010b50c618a281" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__mutex" kindref="compound">k_mutex</ref><sp/><ref refid="structnet__context_1a730e72866e94ed1695010b50c618a281" kindref="member">lock</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="structnet__context_1a7ed765f4d8b9cdc0fbd080287215f955" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_ptr<sp/><ref refid="structnet__context_1a7ed765f4d8b9cdc0fbd080287215f955" kindref="member">local</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="structnet__context_1a4a58fc21990e3c3ddb5ebf77c8212b9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/><ref refid="structnet__context_1a4a58fc21990e3c3ddb5ebf77c8212b9c" kindref="member">remote</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="structnet__context_1abd8ff1b4826535df911d2af14b46e312" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">net_conn_handle<sp/>*<ref refid="structnet__context_1abd8ff1b4826535df911d2af14b46e312" kindref="member">conn_handler</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="structnet__context_1af551b252faf29ee6018d4bd783c5f2b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1ga05b4ae7d57bb4e472c637aea912b08cd" kindref="member">net_context_recv_cb_t</ref><sp/><ref refid="structnet__context_1af551b252faf29ee6018d4bd783c5f2b4" kindref="member">recv_cb</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="structnet__context_1a38c83746c8b2fcddf187a20299d6eb3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1ga52a4a30637d02d7fb2fe058e8314d309" kindref="member">net_context_send_cb_t</ref><sp/><ref refid="structnet__context_1a38c83746c8b2fcddf187a20299d6eb3c" kindref="member">send_cb</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="structnet__context_1abc30f85e6016901b1d6fbb771b07370d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1gaaa12e95831b1de08379fd907e47c550a" kindref="member">net_context_connect_cb_t</ref><sp/><ref refid="structnet__context_1abc30f85e6016901b1d6fbb771b07370d" kindref="member">connect_cb</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_CONTEXT_NET_PKT_POOL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1ga4b416b76a61cde0b89c14d98a213110e" kindref="member">net_pkt_get_slab_func_t</ref><sp/>tx_slab;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1ga5444bb49ec9cfbee2ca3f85186b7551d" kindref="member">net_pkt_get_pool_func_t</ref><sp/>data_pool;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_NET_CONTEXT_NET_PKT_POOL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_TCP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="structnet__context_1adee6e668bfae2749df9b986d0049f10b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structnet__context_1adee6e668bfae2749df9b986d0049f10b" kindref="member">tcp</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_NET_TCP<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_CONTEXT_SYNC_RECV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/>recv_data_wait;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_NET_CONTEXT_SYNC_RECV<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_SOCKETS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*socket_data;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__fifo" kindref="compound">k_fifo</ref><sp/>recv_q;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__fifo" kindref="compound">k_fifo</ref><sp/>accept_q;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__condvar" kindref="compound">k_condvar</ref><sp/><ref refid="posix_2sys_2socket_8h_1ae11da452beee536eac85d5f26e5cdd40" kindref="member">recv</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__mutex" kindref="compound">k_mutex</ref><sp/>*<ref refid="structnet__context_1a730e72866e94ed1695010b50c618a281" kindref="member">lock</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>cond;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_NET_SOCKETS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_OFFLOAD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*offload_context;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_NET_OFFLOAD<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_SOCKETS_CAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>can_filter_id;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_NET_SOCKETS_CAN<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_CONTEXT_PRIORITY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>priority;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_CONTEXT_TXTIME)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>txtime;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_SOCKS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>addr;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addrlen;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>proxy;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_CONTEXT_RCVTIMEO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/>rcvtimeo;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_CONTEXT_SNDTIMEO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/>sndtimeo;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="structnet__context_1a6c5f9bacfbd1ae97f9a9ab39b891c5d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structnet__context_1a6c5f9bacfbd1ae97f9a9ab39b891c5d3" kindref="member">options</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="structnet__context_1abfb04fc163636498f72b29aa12087e19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structnet__context_1abfb04fc163636498f72b29aa12087e19" kindref="member">proto</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="structnet__context_1ad71d151e1e9e35b934949482066f1947" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref><sp/><ref refid="structnet__context_1ad71d151e1e9e35b934949482066f1947" kindref="member">iface</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="329" refid="structnet__context_1af9801980b3f2bb16f5ea2126a6e18cb4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structnet__context_1af9801980b3f2bb16f5ea2126a6e18cb4" kindref="member">ipv6_hop_limit</ref>;</highlight></codeline>
<codeline lineno="330" refid="structnet__context_1a9a9116844b52dc0366f770f3e6c572eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structnet__context_1a9a9116844b52dc0366f770f3e6c572eb" kindref="member">ipv4_ttl</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_SOCKS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>proxy_enabled;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal">};</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="group__net__context_1ga423103d5c386b602737e23ee81f2a961" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga423103d5c386b602737e23ee81f2a961" kindref="member">net_context_is_used</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(context);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;<ref refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="group__net__context_1ga5e2f5fcc08863a4090bc04040ee88d29" kindref="member">NET_CONTEXT_IN_USE</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="group__net__context_1ga2f6d614158c999fa68e518393c0a9c35" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga2f6d614158c999fa68e518393c0a9c35" kindref="member">net_context_is_bound_to_iface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(context);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;<ref refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="group__net__context_1gaa337bccec2c1df42540f236bb33a70e1" kindref="member">NET_CONTEXT_BOUND_TO_IFACE</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="group__net__context_1ga26aa811e18a6808b6255713ac89c5773" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga26aa811e18a6808b6255713ac89c5773" kindref="member">net_context_is_accepting</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context)</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(context);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;<ref refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="group__net__context_1gae4bfc7d561f99a5c50fa725496dfd69e" kindref="member">NET_CONTEXT_ACCEPTING_SOCK</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="group__net__context_1ga5fac6b26abfff86f29c087f6cddcceed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga5fac6b26abfff86f29c087f6cddcceed" kindref="member">net_context_set_accepting</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>accepting)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(context);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accepting)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" kindref="member">flags</ref><sp/>|=<sp/><ref refid="group__net__context_1gae4bfc7d561f99a5c50fa725496dfd69e" kindref="member">NET_CONTEXT_ACCEPTING_SOCK</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" kindref="member">flags</ref><sp/>&amp;=<sp/>~NET_CONTEXT_ACCEPTING_SOCK;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="group__net__context_1gac8acf87f9b405df923a258c9f163e38b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1gac8acf87f9b405df923a258c9f163e38b" kindref="member">net_context_is_closing</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(context);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;<ref refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="group__net__context_1ga90385e51999494c0d530c97b57a01865" kindref="member">NET_CONTEXT_CLOSING_SOCK</ref>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="group__net__context_1ga9941aa201206448b6b34789d252f6385" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga9941aa201206448b6b34789d252f6385" kindref="member">net_context_set_closing</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>closing)</highlight></codeline>
<codeline lineno="407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(context);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(closing)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" kindref="member">flags</ref><sp/>|=<sp/><ref refid="group__net__context_1ga90385e51999494c0d530c97b57a01865" kindref="member">NET_CONTEXT_CLOSING_SOCK</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" kindref="member">flags</ref><sp/>&amp;=<sp/>~NET_CONTEXT_CLOSING_SOCK;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="group__net__context_1gacd1592ed32c7de5ecdeb69f569cb701f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_CONTEXT_STATE_SHIFT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="group__net__context_1gac63c02e444e17b268c230ba15c7c4339" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_CONTEXT_STATE_MASK<sp/>0x03</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="group__net__context_1ga53bd5f35a142f1d43f90d3bde99778e0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga62753cf9e6218d37e65f8b461bf8c8dd" kindref="member">net_context_state</ref><sp/><ref refid="group__net__context_1ga53bd5f35a142f1d43f90d3bde99778e0" kindref="member">net_context_get_state</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context)</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(context);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga62753cf9e6218d37e65f8b461bf8c8dd" kindref="member">net_context_state</ref>)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((context-&gt;<ref refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" kindref="member">flags</ref><sp/>&gt;&gt;<sp/><ref refid="group__net__context_1gacd1592ed32c7de5ecdeb69f569cb701f" kindref="member">NET_CONTEXT_STATE_SHIFT</ref>)<sp/>&amp;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1gac63c02e444e17b268c230ba15c7c4339" kindref="member">NET_CONTEXT_STATE_MASK</ref>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="group__net__context_1gaac934209341db606a4d563b3c48cce45" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1gaac934209341db606a4d563b3c48cce45" kindref="member">net_context_set_state</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga62753cf9e6218d37e65f8b461bf8c8dd" kindref="member">net_context_state</ref><sp/><ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(context);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" kindref="member">flags</ref><sp/>&amp;=<sp/>~(<ref refid="group__net__context_1gac63c02e444e17b268c230ba15c7c4339" kindref="member">NET_CONTEXT_STATE_MASK</ref><sp/>&lt;&lt;<sp/><ref refid="group__net__context_1gacd1592ed32c7de5ecdeb69f569cb701f" kindref="member">NET_CONTEXT_STATE_SHIFT</ref>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" kindref="member">flags</ref><sp/>|=<sp/>((<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref><sp/>&amp;<sp/><ref refid="group__net__context_1gac63c02e444e17b268c230ba15c7c4339" kindref="member">NET_CONTEXT_STATE_MASK</ref>)<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1gacd1592ed32c7de5ecdeb69f569cb701f" kindref="member">NET_CONTEXT_STATE_SHIFT</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="group__net__context_1ga2c55e45a4ff4d4898766d7c391f63f3c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__ip__4__6_1ga2d9e094abb99ebd0874373edf1c45eda" kindref="member">sa_family_t</ref><sp/><ref refid="group__net__context_1ga2c55e45a4ff4d4898766d7c391f63f3c" kindref="member">net_context_get_family</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context)</highlight></codeline>
<codeline lineno="468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(context);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((context-&gt;<ref refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="group__net__context_1gac8f6e3a16d52e8e376c38eec0ed8a940" kindref="member">NET_CONTEXT_FAMILY</ref>)<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="group__net__context_1ga6ef48a4b15c086167d44a8ed6a82478f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga6ef48a4b15c086167d44a8ed6a82478f" kindref="member">net_context_set_family</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1ga2d9e094abb99ebd0874373edf1c45eda" kindref="member">sa_family_t</ref><sp/>family)</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="thread__competition_8c_1a9f266685e63dd18f7693940ba5660e9f" kindref="member">flag</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(context);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(family<sp/>==<sp/><ref refid="group__ip__4__6_1gae77ae24b14b7b7f294f3e04121173f12" kindref="member">AF_UNSPEC</ref><sp/>||<sp/>family<sp/>==<sp/><ref refid="group__ip__4__6_1ga9930604d0e32588eae76f43ca38e7826" kindref="member">AF_INET</ref><sp/>||<sp/>family<sp/>==<sp/><ref refid="group__ip__4__6_1gaa03706b2738b9a58d4985dfbe99e1bac" kindref="member">AF_INET6</ref><sp/>||</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>family<sp/>==<sp/><ref refid="group__ip__4__6_1gaa89aa4cd481fe17260c3f5d493cc23f5" kindref="member">AF_PACKET</ref><sp/>||<sp/>family<sp/>==<sp/><ref refid="group__ip__4__6_1ga546620c7e758f003b24b7fdae4f97bd4" kindref="member">AF_CAN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Family<sp/>is<sp/>in<sp/>BIT(4),<sp/>BIT(5)<sp/>and<sp/>BIT(6)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="thread__competition_8c_1a9f266685e63dd18f7693940ba5660e9f" kindref="member">flag</ref><sp/>=<sp/>family<sp/>&lt;&lt;<sp/>3;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" kindref="member">flags</ref><sp/>|=<sp/><ref refid="thread__competition_8c_1a9f266685e63dd18f7693940ba5660e9f" kindref="member">flag</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="group__net__context_1ga24b4d99dddc4fabf383f5d8079650337" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__ip__4__6_1gaaab4268707dbe08348b98fb028e7aa5c" kindref="member">net_sock_type</ref><sp/><ref refid="group__net__context_1ga24b4d99dddc4fabf383f5d8079650337" kindref="member">net_context_get_type</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context)</highlight></codeline>
<codeline lineno="511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(context);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__ip__4__6_1gaaab4268707dbe08348b98fb028e7aa5c" kindref="member">net_sock_type</ref>)((context-&gt;<ref refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="group__net__context_1gac9b4cf9beecaac5bf05db3111c803678" kindref="member">NET_CONTEXT_TYPE</ref>)<sp/>&gt;&gt;<sp/>6);</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="group__net__context_1ga01c11c1dfce101df046df9ade00ed277" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga01c11c1dfce101df046df9ade00ed277" kindref="member">net_context_set_type</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__ip__4__6_1gaaab4268707dbe08348b98fb028e7aa5c" kindref="member">net_sock_type</ref><sp/>type)</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="thread__competition_8c_1a9f266685e63dd18f7693940ba5660e9f" kindref="member">flag</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(context);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="group__ip__4__6_1ggaaab4268707dbe08348b98fb028e7aa5ca006b373a518eeeb717573f91e70d7fcc" kindref="member">SOCK_DGRAM</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="group__ip__4__6_1ggaaab4268707dbe08348b98fb028e7aa5cae3b7fb9487113a31d403b23aaeaad424" kindref="member">SOCK_STREAM</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="group__ip__4__6_1ggaaab4268707dbe08348b98fb028e7aa5cad78d54561daf9c4a7cda0ce115e3f231" kindref="member">SOCK_RAW</ref>)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Type<sp/>is<sp/>in<sp/>BIT(6)<sp/>and<sp/>BIT(7)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="thread__competition_8c_1a9f266685e63dd18f7693940ba5660e9f" kindref="member">flag</ref><sp/>=<sp/>type<sp/>&lt;&lt;<sp/>6;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" kindref="member">flags</ref><sp/>|=<sp/><ref refid="thread__competition_8c_1a9f266685e63dd18f7693940ba5660e9f" kindref="member">flag</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_SOCKETS_CAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga33fafb1c4ace299e274c8c9be0ae4ae0" kindref="member">net_context_set_filter_id</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>filter_id)</highlight></codeline>
<codeline lineno="552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(context);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;can_filter_id<sp/>=<sp/>filter_id;</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558" refid="group__net__context_1ga33fafb1c4ace299e274c8c9be0ae4ae0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga33fafb1c4ace299e274c8c9be0ae4ae0" kindref="member">net_context_set_filter_id</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>filter_id)</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(context);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(filter_id);</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_SOCKETS_CAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga7b314980ba02e85cca34b8929e830b06" kindref="member">net_context_get_filter_id</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context)</highlight></codeline>
<codeline lineno="577"><highlight class="normal">{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(context);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;can_filter_id;</highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583" refid="group__net__context_1ga7b314980ba02e85cca34b8929e830b06" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga7b314980ba02e85cca34b8929e830b06" kindref="member">net_context_get_filter_id</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context)</highlight></codeline>
<codeline lineno="584"><highlight class="normal">{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(context);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="601" refid="group__net__context_1ga5249f793b1db0c80d1c8c63827678540" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="group__net__context_1ga5249f793b1db0c80d1c8c63827678540" kindref="member">net_context_get_ip_proto</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context)</highlight></codeline>
<codeline lineno="602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;<ref refid="structnet__context_1abfb04fc163636498f72b29aa12087e19" kindref="member">proto</ref>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="616" refid="group__net__context_1ga37f64596d61e4e98e3df2ac784de447d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga37f64596d61e4e98e3df2ac784de447d" kindref="member">net_context_set_ip_proto</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>proto)</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structnet__context_1abfb04fc163636498f72b29aa12087e19" kindref="member">proto</ref><sp/>=<sp/>proto;</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633" refid="group__net__context_1gafe6b8c9af4464cd471285817d6d61087" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*<ref refid="group__net__context_1gafe6b8c9af4464cd471285817d6d61087" kindref="member">net_context_get_iface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context)</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(context);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__net__if_1ga72708cdb7f133fe5d7edf819756c3516" kindref="member">net_if_get_by_index</ref>(context-&gt;<ref refid="structnet__context_1ad71d151e1e9e35b934949482066f1947" kindref="member">iface</ref>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="648" refid="group__net__context_1ga10399e3f3d159de9325ac7632ce25c51" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga10399e3f3d159de9325ac7632ce25c51" kindref="member">net_context_set_iface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface)</highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(iface);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structnet__context_1ad71d151e1e9e35b934949482066f1947" kindref="member">iface</ref><sp/>=<sp/><ref refid="group__net__if_1ga02445f6c61f0d29f56ac0ef59e025630" kindref="member">net_if_get_by_iface</ref>(iface);</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656" refid="group__net__context_1ga9cdb3e5849a5b2663e0a38ac2a39a427" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__net__context_1ga9cdb3e5849a5b2663e0a38ac2a39a427" kindref="member">net_context_get_ipv4_ttl</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context)</highlight></codeline>
<codeline lineno="657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;<ref refid="structnet__context_1a9a9116844b52dc0366f770f3e6c572eb" kindref="member">ipv4_ttl</ref>;</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661" refid="group__net__context_1ga11672ca3ebdae63b0013ad76959304d5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga11672ca3ebdae63b0013ad76959304d5" kindref="member">net_context_set_ipv4_ttl</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>ttl)</highlight></codeline>
<codeline lineno="663"><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structnet__context_1a9a9116844b52dc0366f770f3e6c572eb" kindref="member">ipv4_ttl</ref><sp/>=<sp/>ttl;</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667" refid="group__net__context_1ga977b08a77586e0e4752bff725139427c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__net__context_1ga977b08a77586e0e4752bff725139427c" kindref="member">net_context_get_ipv6_hop_limit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context)</highlight></codeline>
<codeline lineno="668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;<ref refid="structnet__context_1af9801980b3f2bb16f5ea2126a6e18cb4" kindref="member">ipv6_hop_limit</ref>;</highlight></codeline>
<codeline lineno="670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="group__net__context_1ga0cbf8377e7757881033aab3e718b1a61" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga0cbf8377e7757881033aab3e718b1a61" kindref="member">net_context_set_ipv6_hop_limit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>hop_limit)</highlight></codeline>
<codeline lineno="674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structnet__context_1af9801980b3f2bb16f5ea2126a6e18cb4" kindref="member">ipv6_hop_limit</ref><sp/>=<sp/>hop_limit;</highlight></codeline>
<codeline lineno="676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_SOCKS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga9bd6b5e9429b6e845d41f6cbf242c092" kindref="member">net_context_set_proxy_enabled</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;proxy_enabled<sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga5c3a841ff54ddb53cedcccefde5a7d7a" kindref="member">net_context_is_proxy_enabled</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context)</highlight></codeline>
<codeline lineno="686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;proxy_enabled;</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690" refid="group__net__context_1ga9bd6b5e9429b6e845d41f6cbf242c092" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga9bd6b5e9429b6e845d41f6cbf242c092" kindref="member">net_context_set_proxy_enabled</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(context);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(enable);</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697" refid="group__net__context_1ga5c3a841ff54ddb53cedcccefde5a7d7a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga5c3a841ff54ddb53cedcccefde5a7d7a" kindref="member">net_context_is_proxy_enabled</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context)</highlight></codeline>
<codeline lineno="698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="group__net__context_1gae21d27ce120ab72b58b1c20ec1d7ceff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1gae21d27ce120ab72b58b1c20ec1d7ceff" kindref="member">net_context_get</ref>(<ref refid="group__ip__4__6_1ga2d9e094abb99ebd0874373edf1c45eda" kindref="member">sa_family_t</ref><sp/>family,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__ip__4__6_1gaaab4268707dbe08348b98fb028e7aa5c" kindref="member">net_sock_type</ref><sp/>type,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>ip_proto,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>**context);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="738" refid="group__net__context_1ga1d6b64e302c546db589c661f4b6bda98" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga1d6b64e302c546db589c661f4b6bda98" kindref="member">net_context_put</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="752" refid="group__net__context_1ga4c0ef9540a0d7e800c4529274f5c22f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga4c0ef9540a0d7e800c4529274f5c22f4" kindref="member">net_context_ref</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="767" refid="group__net__context_1ga0d391690d9d6972ce6f4baedeab64b11" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga0d391690d9d6972ce6f4baedeab64b11" kindref="member">net_context_unref</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_IPV4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga742a09074bf286ac016f17bcbeb4ef68" kindref="member">net_context_create_ipv4_new</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__pkt" kindref="compound">net_pkt</ref><sp/>*pkt,</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structin__addr" kindref="compound">in_addr</ref><sp/>*src,</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structin__addr" kindref="compound">in_addr</ref><sp/>*dst);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785" refid="group__net__context_1ga742a09074bf286ac016f17bcbeb4ef68" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga742a09074bf286ac016f17bcbeb4ef68" kindref="member">net_context_create_ipv4_new</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__pkt" kindref="compound">net_pkt</ref><sp/>*pkt,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structin__addr" kindref="compound">in_addr</ref><sp/>*src,</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structin__addr" kindref="compound">in_addr</ref><sp/>*dst)</highlight></codeline>
<codeline lineno="789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_NET_IPV4<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_IPV6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga71263ea6e2788d67fa2ac77e309aba2a" kindref="member">net_context_create_ipv6_new</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__pkt" kindref="compound">net_pkt</ref><sp/>*pkt,</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structin6__addr" kindref="compound">in6_addr</ref><sp/>*src,</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structin6__addr" kindref="compound">in6_addr</ref><sp/>*dst);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810" refid="group__net__context_1ga71263ea6e2788d67fa2ac77e309aba2a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga71263ea6e2788d67fa2ac77e309aba2a" kindref="member">net_context_create_ipv6_new</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__pkt" kindref="compound">net_pkt</ref><sp/>*pkt,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structin6__addr" kindref="compound">in6_addr</ref><sp/>*src,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structin6__addr" kindref="compound">in6_addr</ref><sp/>*dst)</highlight></codeline>
<codeline lineno="814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_NET_IPV6<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="830" refid="group__net__context_1ga0fb749331a4f21148ca5a7f364f241b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga0fb749331a4f21148ca5a7f364f241b9" kindref="member">net_context_bind</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addrlen);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="844" refid="group__net__context_1ga3803c0d738fbb9d786f401aacc10a4d3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga3803c0d738fbb9d786f401aacc10a4d3" kindref="member">net_context_listen</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>backlog);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="875" refid="group__net__context_1ga56b2c5fc3f6a97664944cae1c1eb5dad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga56b2c5fc3f6a97664944cae1c1eb5dad" kindref="member">net_context_connect</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addrlen,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1gaaa12e95831b1de08379fd907e47c550a" kindref="member">net_context_connect_cb_t</ref><sp/>cb,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="907" refid="group__net__context_1ga1b056999d9ab8f2d3b3c0f4788f36cdd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga1b056999d9ab8f2d3b3c0f4788f36cdd" kindref="member">net_context_accept</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1ga344a062c4a75edb9bf69cbf5e93df1fa" kindref="member">net_tcp_accept_cb_t</ref><sp/>cb,</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="931" refid="group__net__context_1gac793e1def18200416e3f679067c56ab3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1gac793e1def18200416e3f679067c56ab3" kindref="member">net_context_send</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1ga52a4a30637d02d7fb2fe058e8314d309" kindref="member">net_context_send_cb_t</ref><sp/>cb,</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="959" refid="group__net__context_1gafb0230083b9bdc85c21752d9efb6fb10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1gafb0230083b9bdc85c21752d9efb6fb10" kindref="member">net_context_sendto</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*dst_addr,</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addrlen,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1ga52a4a30637d02d7fb2fe058e8314d309" kindref="member">net_context_send_cb_t</ref><sp/>cb,</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="986" refid="group__net__context_1ga437f04b1629542d2fcf43a15003dcac0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga437f04b1629542d2fcf43a15003dcac0" kindref="member">net_context_sendmsg</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmsghdr" kindref="compound">msghdr</ref><sp/>*<ref refid="structmsghdr" kindref="compound">msghdr</ref>,</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>,</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1ga52a4a30637d02d7fb2fe058e8314d309" kindref="member">net_context_send_cb_t</ref><sp/>cb,</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029" refid="group__net__context_1ga74f919185f8af074c2d90aa04733dd2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga74f919185f8af074c2d90aa04733dd2a" kindref="member">net_context_recv</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1ga05b4ae7d57bb4e472c637aea912b08cd" kindref="member">net_context_recv_cb_t</ref><sp/>cb,</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054" refid="group__net__context_1gab3cc2a13e24f9c263bc40cc87d752a9f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1gab3cc2a13e24f9c263bc40cc87d752a9f" kindref="member">net_context_update_recv_wnd</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>delta);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057" refid="group__net__context_1gab03a354899ff68f6b9d127bc3bb5e17d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1gab03a354899ff68f6b9d127bc3bb5e17d" kindref="member">net_context_option</ref><sp/>{</highlight></codeline>
<codeline lineno="1058" refid="group__net__context_1ggab03a354899ff68f6b9d127bc3bb5e17da5aa24385cbf7da64f7187e03273acb6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1ggab03a354899ff68f6b9d127bc3bb5e17da5aa24385cbf7da64f7187e03273acb6c" kindref="member">NET_OPT_PRIORITY</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="1059" refid="group__net__context_1ggab03a354899ff68f6b9d127bc3bb5e17da6d0b17e0b623eaefeb0ef9b35f8ec184" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1ggab03a354899ff68f6b9d127bc3bb5e17da6d0b17e0b623eaefeb0ef9b35f8ec184" kindref="member">NET_OPT_TXTIME</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="1060" refid="group__net__context_1ggab03a354899ff68f6b9d127bc3bb5e17daa0b8e154dcb188b840f37db1c6af505c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1ggab03a354899ff68f6b9d127bc3bb5e17daa0b8e154dcb188b840f37db1c6af505c" kindref="member">NET_OPT_SOCKS5</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="1061" refid="group__net__context_1ggab03a354899ff68f6b9d127bc3bb5e17da629f8f361f17083b3629de8f94020076" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1ggab03a354899ff68f6b9d127bc3bb5e17da629f8f361f17083b3629de8f94020076" kindref="member">NET_OPT_RCVTIMEO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="1062" refid="group__net__context_1ggab03a354899ff68f6b9d127bc3bb5e17da7a8d12a1a628d785e07c811e9132d668" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1ggab03a354899ff68f6b9d127bc3bb5e17da7a8d12a1a628d785e07c811e9132d668" kindref="member">NET_OPT_SNDTIMEO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075" refid="group__net__context_1gabd932d5ded649f9a8c8bab40810e9eae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1gabd932d5ded649f9a8c8bab40810e9eae" kindref="member">net_context_set_option</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1gab03a354899ff68f6b9d127bc3bb5e17d" kindref="member">net_context_option</ref><sp/>option,</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089" refid="group__net__context_1gaeec55aee0a2029f8877a953ea137f39c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1gaeec55aee0a2029f8877a953ea137f39c" kindref="member">net_context_get_option</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1gab03a354899ff68f6b9d127bc3bb5e17d" kindref="member">net_context_option</ref><sp/>option,</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100" refid="group__net__context_1ga01db89fc7d7bf125fb4958e956dba4ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__net__context_1ga01db89fc7d7bf125fb4958e956dba4ec" kindref="member">net_context_cb_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109" refid="group__net__context_1gabb751f7d213d00f8eec72a67f4ce3491" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1gabb751f7d213d00f8eec72a67f4ce3491" kindref="member">net_context_foreach</ref>(<ref refid="group__net__context_1ga01db89fc7d7bf125fb4958e956dba4ec" kindref="member">net_context_cb_t</ref><sp/>cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_CONTEXT_NET_PKT_POOL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1gadde93ce383a4c5b0f450db1eaa0dfd4d" kindref="member">net_context_setup_pools</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__context" kindref="compound">net_context</ref><sp/>*context,</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1ga4b416b76a61cde0b89c14d98a213110e" kindref="member">net_pkt_get_slab_func_t</ref><sp/>tx_slab,</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__context_1ga5444bb49ec9cfbee2ca3f85186b7551d" kindref="member">net_pkt_get_pool_func_t</ref><sp/>data_pool)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(context);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;tx_slab<sp/>=<sp/>tx_slab;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;data_pool<sp/>=<sp/>data_pool;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142" refid="group__net__context_1gadde93ce383a4c5b0f450db1eaa0dfd4d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>net_context_setup_pools(context,<sp/>tx_pool,<sp/>data_pool)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158" refid="group__net__context_1ga64c7442eeaa3ed82e54f50d2b30d67a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__net__context_1ga64c7442eeaa3ed82e54f50d2b30d67a0" kindref="member">net_context_port_in_use</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__ip__4__6_1gaf06819bf427cc58be1229b27b373ca31" kindref="member">net_ip_protocol</ref><sp/>ip_proto,</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>local_port,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*local_addr);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_NET_NET_CONTEXT_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/net/net_context.h"/>
  </compounddef>
</doxygen>
