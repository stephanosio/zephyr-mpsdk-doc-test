<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="socket__select_8h" kind="file" language="C++">
    <compoundname>socket_select.h</compoundname>
    <includes refid="toolchain_8h" local="no">toolchain.h</includes>
    <includes refid="socket__types_8h" local="no">net/socket_types.h</includes>
    <includes local="no">syscalls/socket_select.h</includes>
    <includedby refid="net_2socket_8h" local="no">include/net/socket.h</includedby>
    <includedby refid="select_8h" local="no">include/posix/sys/select.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/net/socket_select.h</label>
        <link refid="socket__select_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>net/socket_types.h</label>
        <link refid="socket__types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="4">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="7">
        <label>sys/_timeval.h</label>
        <link refid="__timeval_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>sys/_types.h</label>
        <link refid="__types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>syscalls/socket_select.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="12">
        <label>include/net/sntp.h</label>
        <link refid="sntp_8h"/>
      </node>
      <node id="2">
        <label>include/net/socket.h</label>
        <link refid="net_2socket_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/net/socket_offload.h</label>
        <link refid="socket__offload_8h"/>
      </node>
      <node id="1">
        <label>include/net/socket_select.h</label>
        <link refid="socket__select_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>include/net/socketutils.h</label>
        <link refid="socketutils_8h"/>
      </node>
      <node id="4">
        <label>include/net/tftp.h</label>
        <link refid="tftp_8h"/>
      </node>
      <node id="5">
        <label>include/posix/arpa/inet.h</label>
        <link refid="inet_8h"/>
      </node>
      <node id="6">
        <label>include/posix/net/if.h</label>
        <link refid="if_8h"/>
      </node>
      <node id="7">
        <label>include/posix/netdb.h</label>
        <link refid="netdb_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>include/posix/netinet/in.h</label>
        <link refid="in_8h"/>
      </node>
      <node id="10">
        <label>include/posix/netinet/tcp.h</label>
        <link refid="tcp_8h"/>
      </node>
      <node id="11">
        <label>include/posix/poll.h</label>
        <link refid="poll_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>include/posix/sys/select.h</label>
        <link refid="select_8h"/>
      </node>
      <node id="13">
        <label>include/posix/sys/socket.h</label>
        <link refid="posix_2sys_2socket_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structzsock__fd__set" prot="public">zsock_fd_set</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bsd__sockets_1ga5c88da69b8d9401d3ae02495056f7e23" prot="public" static="no">
        <name>ZSOCK_FD_SETSIZE</name>
        <initializer>(sizeof(((<ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref> *)0)-&gt;bitset) * 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of file descriptors which can be added to <ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket_select.h" line="51" column="9" bodyfile="include/net/socket_select.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__bsd__sockets_1ga1fcb157f9f7dece784f5d2c0cb2efb77" prot="public" static="no">
        <type>struct <ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref></type>
        <definition>typedef struct zsock_fd_set zsock_fd_set</definition>
        <argsstring></argsstring>
        <name>zsock_fd_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket_select.h" line="26" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bsd__sockets_1ga265b8fc197a7a79102bdce4875bbb045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_select</definition>
        <argsstring>(int nfds, zsock_fd_set *readfds, zsock_fd_set *writefds, zsock_fd_set *exceptfds, struct zsock_timeval *timeout)</argsstring>
        <name>zsock_select</name>
        <param>
          <type>int</type>
          <declname>nfds</declname>
        </param>
        <param>
          <type><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref> *</type>
          <declname>readfds</declname>
        </param>
        <param>
          <type><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref> *</type>
          <declname>writefds</declname>
        </param>
        <param>
          <type><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref> *</type>
          <declname>exceptfds</declname>
        </param>
        <param>
          <type>struct <ref refid="group__bsd__sockets_1ga0fa9dd4796261813b164fed42303e4ee" kindref="member">zsock_timeval</ref> *</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Legacy function to poll multiple sockets for events. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/select.html&gt;`__
* for normative description. This function is provided to ease porting of
* existing code and not recommended for usage due to its inefficiency,
* use :c:func:`zsock_poll()` instead. In Zephyr this function works only with
* sockets, not arbitrary file descriptors.
* This function is also exposed as ``select()``
* if :kconfig:option:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined (in which case
* it may conflict with generic POSIX ``select()`` function).
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket_select.h" line="45" column="6" declfile="include/net/socket_select.h" declline="45" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1gae9c3555c2fc74b8a88ea5909a2d02afb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ZSOCK_FD_ZERO</definition>
        <argsstring>(zsock_fd_set *set)</argsstring>
        <name>ZSOCK_FD_ZERO</name>
        <param>
          <type><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Initialize (clear) fd_set. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/select.html&gt;`__
* for normative description.
* This function is also exposed as ``FD_ZERO()``
* if :kconfig:option:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket_select.h" line="65" column="6" declfile="include/net/socket_select.h" declline="65" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1ga24808b7adec4970eb0981b24e9313aab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZSOCK_FD_ISSET</definition>
        <argsstring>(int fd, zsock_fd_set *set)</argsstring>
        <name>ZSOCK_FD_ISSET</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Check whether socket is a member of fd_set. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/select.html&gt;`__
* for normative description.
* This function is also exposed as ``FD_ISSET()``
* if :kconfig:option:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket_select.h" line="79" column="5" declfile="include/net/socket_select.h" declline="79" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1gadcc17ac3947722e684a543e055b8c1e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ZSOCK_FD_CLR</definition>
        <argsstring>(int fd, zsock_fd_set *set)</argsstring>
        <name>ZSOCK_FD_CLR</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Remove socket from fd_set. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/select.html&gt;`__
* for normative description.
* This function is also exposed as ``FD_CLR()``
* if :kconfig:option:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket_select.h" line="93" column="6" declfile="include/net/socket_select.h" declline="93" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1ga9a6044b408c0ef80336e957cd47d5f25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ZSOCK_FD_SET</definition>
        <argsstring>(int fd, zsock_fd_set *set)</argsstring>
        <name>ZSOCK_FD_SET</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Add socket to fd_set. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/select.html&gt;`__
* for normative description.
* This function is also exposed as ``FD_SET()``
* if :kconfig:option:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket_select.h" line="107" column="6" declfile="include/net/socket_select.h" declline="107" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Linaro<sp/>Limited</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_NET_SOCKET_SELECT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_NET_SOCKET_SELECT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="toolchain_8h" kindref="compound">toolchain.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="socket__types_8h" kindref="compound">net/socket_types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structzsock__fd__set" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref><sp/>{</highlight></codeline>
<codeline lineno="25" refid="structzsock__fd__set_1ac1789d5f7e913c904c2f0bd32fbe45fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structzsock__fd__set_1ac1789d5f7e913c904c2f0bd32fbe45fb" kindref="member">bitset</ref>[(CONFIG_POSIX_MAX_FDS<sp/>+<sp/>31)<sp/>/<sp/>32];</highlight></codeline>
<codeline lineno="26" refid="group__bsd__sockets_1ga1fcb157f9f7dece784f5d2c0cb2efb77" refkind="member"><highlight class="normal">}<sp/><ref refid="group__bsd__sockets_1ga1fcb157f9f7dece784f5d2c0cb2efb77" kindref="member">zsock_fd_set</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="group__bsd__sockets_1ga265b8fc197a7a79102bdce4875bbb045" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga265b8fc197a7a79102bdce4875bbb045" kindref="member">zsock_select</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfds,<sp/><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref><sp/>*readfds,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref><sp/>*writefds,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref><sp/>*exceptfds,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga0fa9dd4796261813b164fed42303e4ee" kindref="member">zsock_timeval</ref><sp/>*<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="group__bsd__sockets_1ga5c88da69b8d9401d3ae02495056f7e23" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZSOCK_FD_SETSIZE<sp/>(sizeof(((zsock_fd_set<sp/>*)0)-&gt;bitset)<sp/>*<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group__bsd__sockets_1gae9c3555c2fc74b8a88ea5909a2d02afb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gae9c3555c2fc74b8a88ea5909a2d02afb" kindref="member">ZSOCK_FD_ZERO</ref>(<ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref><sp/>*set);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="group__bsd__sockets_1ga24808b7adec4970eb0981b24e9313aab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga24808b7adec4970eb0981b24e9313aab" kindref="member">ZSOCK_FD_ISSET</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref><sp/>*set);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="group__bsd__sockets_1gadcc17ac3947722e684a543e055b8c1e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gadcc17ac3947722e684a543e055b8c1e5" kindref="member">ZSOCK_FD_CLR</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref><sp/>*set);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="group__bsd__sockets_1ga9a6044b408c0ef80336e957cd47d5f25" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga9a6044b408c0ef80336e957cd47d5f25" kindref="member">ZSOCK_FD_SET</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref><sp/>*set);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_NET_SOCKETS_POSIX_NAMES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fd_set<sp/>zsock_fd_set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FD_SETSIZE<sp/>ZSOCK_FD_SETSIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="select_8h_1aeaf2734d19e74439d9db54896b399c87" kindref="member">select</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfds,<sp/><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref><sp/>*readfds,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref><sp/>*writefds,<sp/><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref><sp/>*exceptfds,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtimeval" kindref="compound">timeval</ref><sp/>*<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga265b8fc197a7a79102bdce4875bbb045" kindref="member">zsock_select</ref>(nfds,<sp/>readfds,<sp/>writefds,<sp/>exceptfds,<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="select_8h_1aaf62b9bedda0be6bd5a878a9146883fe" kindref="member">FD_ZERO</ref>(<ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref><sp/>*set)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bsd__sockets_1gae9c3555c2fc74b8a88ea5909a2d02afb" kindref="member">ZSOCK_FD_ZERO</ref>(set);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="select_8h_1ad23e70ae9e622bb3aa740c623d276d6f" kindref="member">FD_ISSET</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref><sp/>*set)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga24808b7adec4970eb0981b24e9313aab" kindref="member">ZSOCK_FD_ISSET</ref>(fd,<sp/>set);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="select_8h_1a3246fcda97abc25e2187633c7800df66" kindref="member">FD_CLR</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref><sp/>*set)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bsd__sockets_1gadcc17ac3947722e684a543e055b8c1e5" kindref="member">ZSOCK_FD_CLR</ref>(fd,<sp/>set);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="select_8h_1a279931aa1d0b7974e7a5a7cbaab4244f" kindref="member">FD_SET</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/><ref refid="structzsock__fd__set" kindref="compound">zsock_fd_set</ref><sp/>*set)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bsd__sockets_1ga9a6044b408c0ef80336e957cd47d5f25" kindref="member">ZSOCK_FD_SET</ref>(fd,<sp/>set);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_NET_SOCKETS_POSIX_NAMES<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;syscalls/socket_select.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_NET_SOCKET_SELECT_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/net/socket_select.h"/>
  </compounddef>
</doxygen>
