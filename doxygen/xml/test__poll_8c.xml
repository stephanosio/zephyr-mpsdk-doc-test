<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="test__poll_8c" kind="file" language="C++">
    <compoundname>test_poll.c</compoundname>
    <includes refid="ztest_8h" local="no">ztest.h</includes>
    <includes local="no">kernel.h</includes>
    <incdepgraph>
      <node id="17">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="66">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="65">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="29">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="36">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="38">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="34">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="32">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="40">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="41">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="37">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="35">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="39">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="75">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="45">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="51">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="28">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="42">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="23">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="4">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="19">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="86">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="87">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="13">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="8">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="11">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="64">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="88">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="81">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="2">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="15">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/poll/src/test_poll.c</label>
        <link refid="test__poll_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>alloca.h</label>
      </node>
      <node id="68">
        <label>arch/cpu.h</label>
      </node>
      <node id="31">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="30">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="43">
        <label>kernel.h</label>
      </node>
      <node id="6">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="84">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="89">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="90">
        <label>tc_util.h</label>
      </node>
      <node id="9">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structfifo__msg" prot="public">fifo_msg</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="test__poll_8c_1afec8fd6f8245ab8c1335460878710671" prot="public" static="no">
        <name>SIGNAL_RESULT</name>
        <initializer>0x1ee7d00d</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="16" column="9" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__poll_8c_1a12b512bcade0fce470007cd5439c60d9" prot="public" static="no">
        <name>FIFO_MSG_VALUE</name>
        <initializer>0xdeadbeef</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="17" column="9" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__poll_8c_1a14032047bfca58f8d5d487315fe6d43e" prot="public" static="no">
        <name>MSGQ_MSG_SIZE</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="18" column="9" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__poll_8c_1ae99edb3c56e3729d1917a437e9874421" prot="public" static="no">
        <name>MSGQ_MAX_MSGS</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="19" column="9" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__poll_8c_1a09a10786f7842127b4f363ab6328f578" prot="public" static="no">
        <name>MSGQ_MSG_VALUE</name>
        <initializer>{&apos;a&apos;, &apos;b&apos;, &apos;<ref refid="kobject_8c_1aa52df6052d1a8a5319a5c99bbc852281" kindref="member">c</ref>&apos;, &apos;<ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>&apos;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="20" column="9" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__poll_8c_1a6423a880df59733d2d9b509c7718d3a9" prot="public" static="no">
        <name>STACK_SIZE</name>
        <initializer>(1024 + CONFIG_TEST_EXTRA_STACKSIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="21" column="9" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__poll_8c_1a68b74e45a6f278679c7e249314ff8bf8" prot="public" static="no">
        <name>TAG_0</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="188" column="9" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__poll_8c_1acbc1ebd142227eadaa10b5f5113b2d5e" prot="public" static="no">
        <name>TAG_1</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="189" column="9" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__poll_8c_1a4b62f323236a877c88a85412ecefe52b" prot="public" static="no">
        <name>TAG_2</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="190" column="9" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__poll_8c_1a8d92a24fb50644cbd60b6fda2ff1d318" prot="public" static="no">
        <name>TAG_3</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="191" column="9" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__poll_8c_1a185efaf6525a4c9d1c39e34da80bfedd" prot="public" static="no">
        <name>USE_FIFO</name>
        <initializer>(1 &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="211" column="9" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__poll_8c_1a1d08e608e0e2abfc3483e353a8abc6ac" prot="public" static="no">
        <name>USE_MSGQ</name>
        <initializer>(1 &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="212" column="9" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="212" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="test__poll_8c_1af208f7a69c889740d0dee0316126c9f9" prot="public" static="yes" mutable="no">
        <type>struct k_sem</type>
        <definition>struct k_sem no_wait_sem</definition>
        <argsstring></argsstring>
        <name>no_wait_sem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="24" column="19" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__poll_8c_1a20757139c7b4a23f6695611bc5847fca" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__fifo" kindref="compound">k_fifo</ref></type>
        <definition>struct k_fifo no_wait_fifo</definition>
        <argsstring></argsstring>
        <name>no_wait_fifo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="25" column="20" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__poll_8c_1a33b1af9c38fecb707eae97f8ec84c90f" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref></type>
        <definition>struct k_poll_signal no_wait_signal</definition>
        <argsstring></argsstring>
        <name>no_wait_signal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="26" column="27" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__poll_8c_1a96ee586111ba36c20a57d5cd9cdb80df" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref></type>
        <definition>struct k_poll_signal test_signal</definition>
        <argsstring></argsstring>
        <name>test_signal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="27" column="27" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__poll_8c_1ae3cc683d2a8901cebcdb71d2109c62de" prot="public" static="yes" mutable="no">
        <type>struct k_sem</type>
        <definition>struct k_sem zero_events_sem</definition>
        <argsstring></argsstring>
        <name>zero_events_sem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="31" column="19" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__poll_8c_1aaf99baf6b57ceed1a2949db9e149af47" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread test_thread</definition>
        <argsstring></argsstring>
        <name>test_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="32" column="22" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__poll_8c_1ac539ccb3716bf1fe16ce4087fc3267d8" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread test_loprio_thread</definition>
        <argsstring></argsstring>
        <name>test_loprio_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="33" column="22" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__poll_8c_1aaf49eed78dade02d076c2f7c6253bb3a" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__msgq" kindref="compound">k_msgq</ref></type>
        <definition>struct k_msgq wait_msgq</definition>
        <argsstring></argsstring>
        <name>wait_msgq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="178" column="20" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__poll_8c_1aa5ecee40df830fd69fb502a828737f80" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__msgq" kindref="compound">k_msgq</ref> *</type>
        <definition>struct k_msgq* wait_msgq_ptr</definition>
        <argsstring></argsstring>
        <name>wait_msgq_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="179" column="20" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__poll_8c_1a3e3171f30c35307c82a7dd6855a27e24" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref></type>
        <definition>struct k_poll_signal wait_signal</definition>
        <argsstring></argsstring>
        <name>wait_signal</name>
        <initializer>=
	<ref refid="group__poll__apis_1ga6d6321e189afca73a276cd671ec531ae" kindref="member">K_POLL_SIGNAL_INITIALIZER</ref>(wait_signal)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="183" column="27" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__poll_8c_1ae81965a47ad9b2bb45e35d591e610c6e" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfifo__msg" kindref="compound">fifo_msg</ref></type>
        <definition>struct fifo_msg wait_msg</definition>
        <argsstring></argsstring>
        <name>wait_msg</name>
        <initializer>= { NULL,  0xdeadbeef  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="186" column="15" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__poll__event" kindref="compound">k_poll_event</ref></type>
        <definition>struct k_poll_event wait_events[]</definition>
        <argsstring>[]</argsstring>
        <name>wait_events</name>
        <initializer>= {
	<ref refid="group__poll__apis_1gada2366896d913dc916b3c28642648b63" kindref="member">K_POLL_EVENT_STATIC_INITIALIZER</ref>(<ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>,
					<ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,
					&amp;wait_sem,  10 ),
	<ref refid="group__poll__apis_1gada2366896d913dc916b3c28642648b63" kindref="member">K_POLL_EVENT_STATIC_INITIALIZER</ref>(<ref refid="group__poll__apis_1ga71734fee18c523cf70276260118afb91" kindref="member">K_POLL_TYPE_FIFO_DATA_AVAILABLE</ref>,
					<ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,
					&amp;wait_fifo,  11 ),
	<ref refid="group__poll__apis_1gada2366896d913dc916b3c28642648b63" kindref="member">K_POLL_EVENT_STATIC_INITIALIZER</ref>(<ref refid="group__poll__apis_1ga144d8eb34d85f6053e454410a10bf56a" kindref="member">K_POLL_TYPE_SIGNAL</ref>,
					<ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,
					&amp;<ref refid="test__poll_8c_1a3e3171f30c35307c82a7dd6855a27e24" kindref="member">wait_signal</ref>,  12 ),
	<ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER</ref>(<ref refid="group__poll__apis_1gafd5d801eb9e9cf6097b2c08b4933998e" kindref="member">K_POLL_TYPE_IGNORE</ref>,
					<ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,
					NULL),
	<ref refid="group__poll__apis_1gada2366896d913dc916b3c28642648b63" kindref="member">K_POLL_EVENT_STATIC_INITIALIZER</ref>(<ref refid="group__poll__apis_1gaa83509b54175fb6c98324422a928d5e1" kindref="member">K_POLL_TYPE_MSGQ_DATA_AVAILABLE</ref>,
					<ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,
					&amp;<ref refid="test__poll_8c_1aaf49eed78dade02d076c2f7c6253bb3a" kindref="member">wait_msgq</ref>,  13 ),
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="193" column="19" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__poll_8c_1a434990863a810dbb3481e22b6306470d" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__fifo" kindref="compound">k_fifo</ref></type>
        <definition>struct k_fifo cancel_fifo</definition>
        <argsstring></argsstring>
        <name>cancel_fifo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="504" column="20" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__poll_8c_1a2f88cf1fba50ced58b54f34626d9cd02" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__fifo" kindref="compound">k_fifo</ref></type>
        <definition>struct k_fifo non_cancel_fifo</definition>
        <argsstring></argsstring>
        <name>non_cancel_fifo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="505" column="20" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref></type>
        <definition>struct k_poll_signal signal</definition>
        <argsstring></argsstring>
        <name>signal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="696" column="27" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="696" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__poll_8c_1a12823837c447fbfb351e58800f69e6cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_DEFINE</definition>
        <argsstring>(test_stack,(1024+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>test_stack</type>
        </param>
        <param>
          <type>(1024+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="34" column="1" declfile="tests/kernel/poll/src/test_poll.c" declline="34" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1a0cfc3a87eb18246846f793b7acea834b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_DEFINE</definition>
        <argsstring>(test_loprio_stack,(1024+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>test_loprio_stack</type>
        </param>
        <param>
          <type>(1024+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="35" column="1" declfile="tests/kernel/poll/src/test_poll.c" declline="35" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__poll__tests_1ga87369fd2be512baee38bae7810089817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_poll_no_wait</definition>
        <argsstring>(void)</argsstring>
        <name>test_poll_no_wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test poll events with no wait. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER()</ref>, <ref refid="group__poll__apis_1gaee3090c2a912b93b6a5855e3018c3551" kindref="member">k_poll_signal_init()</ref>, <ref refid="group__poll__apis_1gad0bf3825f828ec3ca37481bf3cbd6723" kindref="member">k_poll_signal_raise()</ref>, <ref refid="group__poll__apis_1ga69dae11c7cb2c669caa411c3e7001311" kindref="member">k_poll_signal_check()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="56" column="6" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="56" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1a874d3771cb9715b941eb466037d2590b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_SEM_DEFINE</definition>
        <argsstring>(wait_sem, 0, 1)</argsstring>
        <name>K_SEM_DEFINE</name>
        <param>
          <type>wait_sem</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="181" column="8" declfile="tests/kernel/poll/src/test_poll.c" declline="181" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1a2c1e1dbae9a491c979f3bc7f23195e27" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_FIFO_DEFINE</definition>
        <argsstring>(wait_fifo)</argsstring>
        <name>K_FIFO_DEFINE</name>
        <param>
          <type>wait_fifo</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="182" column="8" declfile="tests/kernel/poll/src/test_poll.c" declline="182" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1a419882814707fc0a59010df3f7fe8673" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void poll_wait_helper</definition>
        <argsstring>(void *use_queuelike, void *msgq, void *p3)</argsstring>
        <name>poll_wait_helper</name>
        <param>
          <type>void *</type>
          <declname>use_queuelike</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>msgq</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="214" column="13" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="214" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_results</definition>
        <argsstring>(struct k_poll_event *events, uint32_t event_type, bool is_available)</argsstring>
        <name>check_results</name>
        <param>
          <type>struct <ref refid="structk__poll__event" kindref="compound">k_poll_event</ref> *</type>
          <declname>events</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>event_type</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>is_available</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="238" column="6" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="238" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__poll__tests_1gad4944fb360bccc21ee9bac617ad7630b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_poll_wait</definition>
        <argsstring>(void)</argsstring>
        <name>test_poll_wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test polling with wait. </para>
        </briefdescription>
        <detaileddescription>
<para>Test Objective:<itemizedlist>
<listitem><para>Test the poll operation which enables waiting concurrently for one/two/all conditions to be fulfilled.</para>
</listitem><listitem><para>set a single timeout argument indicating the maximum amount of time a thread shall wait.</para>
</listitem></itemizedlist>
</para>
<para>Testing techniques:<itemizedlist>
<listitem><para>function and block box testing.</para>
</listitem><listitem><para>Interface testing.</para>
</listitem><listitem><para>Dynamic analysis and testing.</para>
</listitem></itemizedlist>
</para>
<para>Prerequisite Conditions:<itemizedlist>
<listitem><para>CONFIG_TEST_USERSPACE</para>
</listitem><listitem><para>CONFIG_DYNAMIC_OBJECTS</para>
</listitem><listitem><para>CONFIG_POLL</para>
</listitem></itemizedlist>
</para>
<para>Input Specifications:<itemizedlist>
<listitem><para>N/A</para>
</listitem></itemizedlist>
</para>
<para>Test Procedure:<orderedlist>
<listitem><para>Use FIFO/semaphore/signal/message queue object to define poll event.</para>
</listitem><listitem><para>Initialize the FIFO/semaphore/signal/message queue object.</para>
</listitem><listitem><para>Create a thread to put FIFO, give semaphore, raise signal, and put message queue.</para>
</listitem><listitem><para>Check the result when signal is raised, semaphore is given, fifo is filled, and message is received.</para>
</listitem><listitem><para>Check the result when no event is satisfied.</para>
</listitem><listitem><para>Check the result when only semaphore is given.</para>
</listitem><listitem><para>Check the result when only FIFO is filled.</para>
</listitem><listitem><para>Check the result when only signal is raised.</para>
</listitem><listitem><para>Check the result when only message is received.</para>
</listitem></orderedlist>
</para>
<para>Expected Test Result:<itemizedlist>
<listitem><para>FIFO/semaphore/signal/message queue events available/waitable in poll.</para>
</listitem></itemizedlist>
</para>
<para>Pass/Fail Criteria:<itemizedlist>
<listitem><para>Successful if check points in test procedure are all passed, otherwise failure.</para>
</listitem></itemizedlist>
</para>
<para>Assumptions and Constraints:<itemizedlist>
<listitem><para>N/A</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__poll__apis_1gaee3090c2a912b93b6a5855e3018c3551" kindref="member">k_poll_signal_init()</ref>, <ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="369" column="6" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="369" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1aeea5233ef8297587c3587633e9fb477a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void poll_cancel_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>poll_cancel_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="507" column="13" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="507" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__poll__tests_1gadbb4d21421419dcfe55a768d28cdd54e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_poll_cancel</definition>
        <argsstring>(bool is_main_low_prio)</argsstring>
        <name>test_poll_cancel</name>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>is_main_low_prio</declname>
        </param>
        <briefdescription>
<para>Test polling of cancelled fifo. </para>
        </briefdescription>
        <detaileddescription>
<para>Test the FIFO(queue) data available/cancelable events as events in poll.</para>
<para><simplesect kind="see"><para><ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll()</ref>, <ref refid="group__fifo__apis_1gab744080af449e093df8dd4982e013e16" kindref="member">k_fifo_cancel_wait()</ref>, <ref refid="group__fifo__apis_1gab1c5212040d12cbb92cede5cf54928ba" kindref="member">k_fifo_alloc_put</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="530" column="6" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="530" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1af910a264854f0fc652ae277d17f21d03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_poll_cancel_main_low_prio</definition>
        <argsstring>(void)</argsstring>
        <name>test_poll_cancel_main_low_prio</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="586" column="6" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="586" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1aaa52635d7eecee071afb2a8188c3f505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_poll_cancel_main_high_prio</definition>
        <argsstring>(void)</argsstring>
        <name>test_poll_cancel_main_high_prio</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="591" column="6" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="591" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1a072e57c5cea52432c8d620c924e44a4d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_SEM_DEFINE</definition>
        <argsstring>(multi_sem, 0, 1)</argsstring>
        <name>K_SEM_DEFINE</name>
        <param>
          <type>multi_sem</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="597" column="8" declfile="tests/kernel/poll/src/test_poll.c" declline="597" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1aebe89df60d8ba3aae9f1e0725704f6a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void multi_lowprio</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>multi_lowprio</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="599" column="13" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="599" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1a56b6ce80c59059d39959764d227a2253" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_SEM_DEFINE</definition>
        <argsstring>(multi_reply, 0, 1)</argsstring>
        <name>K_SEM_DEFINE</name>
        <param>
          <type>multi_reply</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="614" column="8" declfile="tests/kernel/poll/src/test_poll.c" declline="614" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1a60af8d9c7fac601aede51d129079d737" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void multi</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>multi</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="616" column="13" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="616" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1a4a3342eb397b40eb1de7e1d759893014" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_SEM_DEFINE</definition>
        <argsstring>(multi_ready_sem, 1, 1)</argsstring>
        <name>K_SEM_DEFINE</name>
        <param>
          <type>multi_ready_sem</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="630" column="8" declfile="tests/kernel/poll/src/test_poll.c" declline="630" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__poll__tests_1gacac2de9e9acb1eca7269763a72194093" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_poll_multi</definition>
        <argsstring>(void)</argsstring>
        <name>test_poll_multi</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test polling of multiple events. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Test the multiple semaphore events as waitable events in poll.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER()</ref>, <ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll()</ref>, <ref refid="group__poll__apis_1gaa06bddd93a024fc5326d93187d80eb03" kindref="member">k_poll_event_init()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="642" column="6" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="642" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1a624fd6f03039700d80d7e4d463c3f3ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void threadstate</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>threadstate</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="698" column="13" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="698" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__poll__tests_1gad653d0ff23c0b3f0792998f1f368d690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_poll_threadstate</definition>
        <argsstring>(void)</argsstring>
        <name>test_poll_threadstate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test polling of events by manipulating polling thread state. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>manipulating thread state to consider case where no polling thread is available during event signalling.</para>
</listitem><listitem><para>defined a signal poll as waitable events in poll and verify the result after siganl raised</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER()</ref>, <ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll()</ref>, <ref refid="group__poll__apis_1gaee3090c2a912b93b6a5855e3018c3551" kindref="member">k_poll_signal_init()</ref>, <ref refid="group__poll__apis_1ga69dae11c7cb2c669caa411c3e7001311" kindref="member">k_poll_signal_check()</ref>, <ref refid="group__poll__apis_1gad0bf3825f828ec3ca37481bf3cbd6723" kindref="member">k_poll_signal_raise()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="724" column="6" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="724" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1af11966ea57bb89b7e82fe598bd5e9731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_poll_grant_access</definition>
        <argsstring>(void)</argsstring>
        <name>test_poll_grant_access</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="760" column="6" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="760" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1a410fcc6b5ea0f0d90b30eff180898672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_poll_zero_events</definition>
        <argsstring>(void)</argsstring>
        <name>test_poll_zero_events</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="769" column="6" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="769" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="test__poll_8c_1a859b56011f6fb73ea6324c45ec7a402f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void polling_event</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>polling_event</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="782" column="6" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="782" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__poll__tests_1ga57eb6965a015e5ec3139d8d07709f409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_detect_is_polling</definition>
        <argsstring>(void)</argsstring>
        <name>test_detect_is_polling</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Detect is_polling is false in signal_poll_event() </para>
        </briefdescription>
        <detaileddescription>
<para>Define and initialize a signal event, and spawn a thread to poll event, and set dticks as invalid, check if the value of is_polling in function signal_poll_event(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/poll/src/test_poll.c" line="797" column="6" bodyfile="tests/kernel/poll/src/test_poll.c" bodystart="797" bodyend="826"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017<sp/>Wind<sp/>River<sp/>Systems,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztest_8h" kindref="compound">ztest.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>global<sp/>values<sp/>and<sp/>data<sp/>structures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="structfifo__msg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfifo__msg" kindref="compound">fifo_msg</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">private</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structfifo__msg_1aa1713c1b40de03b2c097ab843ed5fe3a" kindref="member">msg</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIGNAL_RESULT<sp/>0x1ee7d00d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_MSG_VALUE<sp/>0xdeadbeef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSGQ_MSG_SIZE<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSGQ_MAX_MSGS<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSGQ_MSG_VALUE<sp/>{&apos;a&apos;,<sp/>&apos;b&apos;,<sp/>&apos;c&apos;,<sp/>&apos;d&apos;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STACK_SIZE<sp/>(1024<sp/>+<sp/>CONFIG_TEST_EXTRA_STACKSIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>verify<sp/>k_poll()<sp/>without<sp/>waiting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/><ref refid="test__poll_8c_1af208f7a69c889740d0dee0316126c9f9" kindref="member">no_wait_sem</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__fifo" kindref="compound">k_fifo</ref><sp/><ref refid="test__poll_8c_1a20757139c7b4a23f6695611bc5847fca" kindref="member">no_wait_fifo</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref><sp/><ref refid="test__poll_8c_1a33b1af9c38fecb707eae97f8ec84c90f" kindref="member">no_wait_signal</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref><sp/><ref refid="test__poll_8c_1a96ee586111ba36c20a57d5cd9cdb80df" kindref="member">test_signal</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/>no_wait_msgq;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/><ref refid="test__poll_8c_1ae3cc683d2a8901cebcdb71d2109c62de" kindref="member">zero_events_sem</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="test__poll_8c_1aaf99baf6b57ceed1a2949db9e149af47" kindref="member">test_thread</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="test__poll_8c_1ac539ccb3716bf1fe16ce4087fc3267d8" kindref="member">test_loprio_thread</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="test__poll_8c_1a12823837c447fbfb351e58800f69e6cb" kindref="member">K_THREAD_STACK_DEFINE</ref>(test_stack,<sp/><ref refid="test__poll_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="test__poll_8c_1a12823837c447fbfb351e58800f69e6cb" kindref="member">K_THREAD_STACK_DEFINE</ref>(test_loprio_stack,<sp/><ref refid="test__poll_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__poll__tests_1ga87369fd2be512baee38bae7810089817" kindref="member">test_poll_no_wait</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfifo__msg" kindref="compound">fifo_msg</ref><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref><sp/>=<sp/>{<sp/>NULL,<sp/><ref refid="test__poll_8c_1a12b512bcade0fce470007cd5439c60d9" kindref="member">FIFO_MSG_VALUE</ref><sp/>},<sp/>*msg_ptr;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signaled;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msgq_recv_buf[<ref refid="test__poll_8c_1a14032047bfca58f8d5d487315fe6d43e" kindref="member">MSGQ_MSG_SIZE</ref>]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msgq_msg[<ref refid="test__poll_8c_1a14032047bfca58f8d5d487315fe6d43e" kindref="member">MSGQ_MSG_SIZE</ref>]<sp/>=<sp/><ref refid="test__poll_8c_1a09a10786f7842127b4f363ab6328f578" kindref="member">MSGQ_MSG_VALUE</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="errno_8c_1a1bd85a6c09e3fbc49f7e810787317c5f" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/>*<ref refid="kobject_8c_1ab19b87dd9b6d0089cebb18b5a9686086" kindref="member">mq</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="kobject_8c_1ab19b87dd9b6d0089cebb18b5a9686086" kindref="member">mq</ref><sp/>=<sp/>k_object_alloc(K_OBJ_MSGQ);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gad78332e6bd37812e56ccc4af601542e4" kindref="member">zassert_not_null</ref>(<ref refid="kobject_8c_1ab19b87dd9b6d0089cebb18b5a9686086" kindref="member">mq</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="kobject_8c_1ab19b87dd9b6d0089cebb18b5a9686086" kindref="member">mq</ref><sp/>=<sp/>&amp;no_wait_msgq;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="test__poll_8c_1af208f7a69c889740d0dee0316126c9f9" kindref="member">no_wait_sem</ref>,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fifo__apis_1gaeebf6ef54d4be61e19408f44a734a159" kindref="member">k_fifo_init</ref>(&amp;<ref refid="test__poll_8c_1a20757139c7b4a23f6695611bc5847fca" kindref="member">no_wait_fifo</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gaee3090c2a912b93b6a5855e3018c3551" kindref="member">k_poll_signal_init</ref>(&amp;<ref refid="test__poll_8c_1a33b1af9c38fecb707eae97f8ec84c90f" kindref="member">no_wait_signal</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__msgq__apis_1gabe7305b8f442ebdc147dbbc6e8cf92fc" kindref="member">k_msgq_alloc_init</ref>(<ref refid="kobject_8c_1ab19b87dd9b6d0089cebb18b5a9686086" kindref="member">mq</ref>,<sp/><ref refid="test__poll_8c_1a14032047bfca58f8d5d487315fe6d43e" kindref="member">MSGQ_MSG_SIZE</ref>,<sp/><ref refid="test__poll_8c_1ae99edb3c56e3729d1917a437e9874421" kindref="member">MSGQ_MAX_MSGS</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__event" kindref="compound">k_poll_event</ref><sp/>events[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER</ref>(<ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__poll_8c_1af208f7a69c889740d0dee0316126c9f9" kindref="member">no_wait_sem</ref>),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER</ref>(<ref refid="group__poll__apis_1ga71734fee18c523cf70276260118afb91" kindref="member">K_POLL_TYPE_FIFO_DATA_AVAILABLE</ref>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__poll_8c_1a20757139c7b4a23f6695611bc5847fca" kindref="member">no_wait_fifo</ref>),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER</ref>(<ref refid="group__poll__apis_1ga144d8eb34d85f6053e454410a10bf56a" kindref="member">K_POLL_TYPE_SIGNAL</ref>,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__poll_8c_1a33b1af9c38fecb707eae97f8ec84c90f" kindref="member">no_wait_signal</ref>),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER</ref>(<ref refid="group__poll__apis_1gafd5d801eb9e9cf6097b2c08b4933998e" kindref="member">K_POLL_TYPE_IGNORE</ref>,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER</ref>(<ref refid="group__poll__apis_1gaa83509b54175fb6c98324422a928d5e1" kindref="member">K_POLL_TYPE_MSGQ_DATA_AVAILABLE</ref>,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="kobject_8c_1ab19b87dd9b6d0089cebb18b5a9686086" kindref="member">mq</ref>),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>that<sp/>k_poll()<sp/>syscall<sp/>handler<sp/>safely<sp/>handles<sp/>being</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>fed<sp/>garbage</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>TODO:<sp/>Where<sp/>possible<sp/>migrate<sp/>these<sp/>to<sp/>the<sp/>main<sp/>k_poll()</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>implementation</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(events,<sp/><ref refid="limits_8h_1a9ec306f36d50c7375e74f0d1c55a3a67" kindref="member">INT_MAX</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(events,<sp/>4096,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/>-<ref refid="group__system__errno_1ga6a05c923dad0c1208043e9c20a58c8e5" kindref="member">ENOMEM</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allow<sp/>zero<sp/>events<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(events,<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__event" kindref="compound">k_poll_event</ref><sp/>bad_events[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER</ref>(<ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda71e08944b3e944c28056f9a5fbfb018c" kindref="member">K_POLL_NUM_MODES</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__poll_8c_1af208f7a69c889740d0dee0316126c9f9" kindref="member">no_wait_sem</ref>),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(bad_events,<sp/><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(bad_events),<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__event" kindref="compound">k_poll_event</ref><sp/>bad_events2[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER</ref>(0xFU,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__poll_8c_1af208f7a69c889740d0dee0316126c9f9" kindref="member">no_wait_sem</ref>),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(bad_events2,<sp/><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(bad_events),<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_USERSPACE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>polling<sp/>events<sp/>that<sp/>are<sp/>already<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__fifo__apis_1gab1c5212040d12cbb92cede5cf54928ba" kindref="member">k_fifo_alloc_put</ref>(&amp;<ref refid="test__poll_8c_1a20757139c7b4a23f6695611bc5847fca" kindref="member">no_wait_fifo</ref>,<sp/>&amp;<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gad0bf3825f828ec3ca37481bf3cbd6723" kindref="member">k_poll_signal_raise</ref>(&amp;<ref refid="test__poll_8c_1a33b1af9c38fecb707eae97f8ec84c90f" kindref="member">no_wait_signal</ref>,<sp/><ref refid="test__poll_8c_1afec8fd6f8245ab8c1335460878710671" kindref="member">SIGNAL_RESULT</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put</ref>(<ref refid="kobject_8c_1ab19b87dd9b6d0089cebb18b5a9686086" kindref="member">mq</ref>,<sp/>msgq_msg,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(events,<sp/><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(events),<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events[0].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1gae9e3eefd5a29a538d22f53592578bb37" kindref="member">K_POLL_STATE_SEM_AVAILABLE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="test__poll_8c_1af208f7a69c889740d0dee0316126c9f9" kindref="member">no_wait_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events[1].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1gabd5ac3341698534f39ded718079d6168" kindref="member">K_POLL_STATE_FIFO_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_ptr<sp/>=<sp/><ref refid="group__fifo__apis_1ga1e2c480e2124116af97e94e7b4435de6" kindref="member">k_fifo_get</ref>(&amp;<ref refid="test__poll_8c_1a20757139c7b4a23f6695611bc5847fca" kindref="member">no_wait_fifo</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gad78332e6bd37812e56ccc4af601542e4" kindref="member">zassert_not_null</ref>(msg_ptr,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(msg_ptr,<sp/>&amp;<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(msg_ptr-&gt;msg,<sp/><ref refid="test__poll_8c_1a12b512bcade0fce470007cd5439c60d9" kindref="member">FIFO_MSG_VALUE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events[2].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1ga478aae7fe4fb5c7b7c76ed216c22a7f1" kindref="member">K_POLL_STATE_SIGNALED</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga69dae11c7cb2c669caa411c3e7001311" kindref="member">k_poll_signal_check</ref>(&amp;<ref refid="test__poll_8c_1a33b1af9c38fecb707eae97f8ec84c90f" kindref="member">no_wait_signal</ref>,<sp/>&amp;signaled,<sp/>&amp;<ref refid="structresult" kindref="compound">result</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(signaled,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="structresult" kindref="compound">result</ref>,<sp/><ref refid="test__poll_8c_1afec8fd6f8245ab8c1335460878710671" kindref="member">SIGNAL_RESULT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events[3].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events[4].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1gac236074cd43f59f28b803fe2c4a4f6f7" kindref="member">K_POLL_STATE_MSGQ_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get</ref>(<ref refid="kobject_8c_1ab19b87dd9b6d0089cebb18b5a9686086" kindref="member">mq</ref>,<sp/>msgq_recv_buf,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="string_8h_1ad8bfbfa1e4ad284ded921dd775735521" kindref="member">memcmp</ref>(msgq_msg,<sp/>msgq_recv_buf,<sp/><ref refid="test__poll_8c_1a14032047bfca58f8d5d487315fe6d43e" kindref="member">MSGQ_MSG_SIZE</ref>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>verify<sp/>events<sp/>are<sp/>not<sp/>ready<sp/>anymore<sp/>(user<sp/>has<sp/>to<sp/>clear<sp/>them<sp/>first)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events[0].<ref refid="structk__poll__event_1aaf4f32852d799a406bfeea4e57891129" kindref="member">state</ref><sp/>=<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events[1].<ref refid="structk__poll__event_1aaf4f32852d799a406bfeea4e57891129" kindref="member">state</ref><sp/>=<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events[2].<ref refid="structk__poll__event_1aaf4f32852d799a406bfeea4e57891129" kindref="member">state</ref><sp/>=<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events[3].<ref refid="structk__poll__event_1aaf4f32852d799a406bfeea4e57891129" kindref="member">state</ref><sp/>=<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events[4].<ref refid="structk__poll__event_1aaf4f32852d799a406bfeea4e57891129" kindref="member">state</ref><sp/>=<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga02d899d1455ae1f3f55ffe8f1ebd6994" kindref="member">k_poll_signal_reset</ref>(&amp;<ref refid="test__poll_8c_1a33b1af9c38fecb707eae97f8ec84c90f" kindref="member">no_wait_signal</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(events,<sp/><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(events),<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events[0].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events[1].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events[2].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events[3].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events[4].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="test__poll_8c_1af208f7a69c889740d0dee0316126c9f9" kindref="member">no_wait_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga0380ea00fa3775f9a8a05faaf4de71b7" kindref="member">zassert_is_null</ref>(<ref refid="group__fifo__apis_1ga1e2c480e2124116af97e94e7b4435de6" kindref="member">k_fifo_get</ref>(&amp;<ref refid="test__poll_8c_1a20757139c7b4a23f6695611bc5847fca" kindref="member">no_wait_fifo</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get</ref>(<ref refid="kobject_8c_1ab19b87dd9b6d0089cebb18b5a9686086" kindref="member">mq</ref>,<sp/>msgq_recv_buf,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/>0,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>verify<sp/>k_poll()<sp/>that<sp/>has<sp/>to<sp/>wait<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/><ref refid="test__poll_8c_1aaf49eed78dade02d076c2f7c6253bb3a" kindref="member">wait_msgq</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/>*<ref refid="test__poll_8c_1aa5ecee40df830fd69fb502a828737f80" kindref="member">wait_msgq_ptr</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="test__poll_8c_1a874d3771cb9715b941eb466037d2590b" kindref="member">K_SEM_DEFINE</ref>(wait_sem,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="test__poll_8c_1a2c1e1dbae9a491c979f3bc7f23195e27" kindref="member">K_FIFO_DEFINE</ref>(wait_fifo);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref><sp/><ref refid="test__poll_8c_1a3e3171f30c35307c82a7dd6855a27e24" kindref="member">wait_signal</ref><sp/>=</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga6d6321e189afca73a276cd671ec531ae" kindref="member">K_POLL_SIGNAL_INITIALIZER</ref>(<ref refid="test__poll_8c_1a3e3171f30c35307c82a7dd6855a27e24" kindref="member">wait_signal</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfifo__msg" kindref="compound">fifo_msg</ref><sp/><ref refid="test__poll_8c_1ae81965a47ad9b2bb45e35d591e610c6e" kindref="member">wait_msg</ref><sp/>=<sp/>{<sp/>NULL,<sp/><ref refid="test__poll_8c_1a12b512bcade0fce470007cd5439c60d9" kindref="member">FIFO_MSG_VALUE</ref><sp/>};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAG_0<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAG_1<sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAG_2<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAG_3<sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__event" kindref="compound">k_poll_event</ref><sp/><ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gada2366896d913dc916b3c28642648b63" kindref="member">K_POLL_EVENT_STATIC_INITIALIZER</ref>(<ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;wait_sem,<sp/><ref refid="test__poll_8c_1a68b74e45a6f278679c7e249314ff8bf8" kindref="member">TAG_0</ref>),</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gada2366896d913dc916b3c28642648b63" kindref="member">K_POLL_EVENT_STATIC_INITIALIZER</ref>(<ref refid="group__poll__apis_1ga71734fee18c523cf70276260118afb91" kindref="member">K_POLL_TYPE_FIFO_DATA_AVAILABLE</ref>,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;wait_fifo,<sp/><ref refid="test__poll_8c_1acbc1ebd142227eadaa10b5f5113b2d5e" kindref="member">TAG_1</ref>),</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gada2366896d913dc916b3c28642648b63" kindref="member">K_POLL_EVENT_STATIC_INITIALIZER</ref>(<ref refid="group__poll__apis_1ga144d8eb34d85f6053e454410a10bf56a" kindref="member">K_POLL_TYPE_SIGNAL</ref>,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__poll_8c_1a3e3171f30c35307c82a7dd6855a27e24" kindref="member">wait_signal</ref>,<sp/><ref refid="test__poll_8c_1a4b62f323236a877c88a85412ecefe52b" kindref="member">TAG_2</ref>),</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER</ref>(<ref refid="group__poll__apis_1gafd5d801eb9e9cf6097b2c08b4933998e" kindref="member">K_POLL_TYPE_IGNORE</ref>,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL),</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gada2366896d913dc916b3c28642648b63" kindref="member">K_POLL_EVENT_STATIC_INITIALIZER</ref>(<ref refid="group__poll__apis_1gaa83509b54175fb6c98324422a928d5e1" kindref="member">K_POLL_TYPE_MSGQ_DATA_AVAILABLE</ref>,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__poll_8c_1aaf49eed78dade02d076c2f7c6253bb3a" kindref="member">wait_msgq</ref>,<sp/><ref refid="test__poll_8c_1a8d92a24fb50644cbd60b6fda2ff1d318" kindref="member">TAG_3</ref>),</highlight></codeline>
<codeline lineno="209"><highlight class="normal">};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_FIFO<sp/>(1<sp/>&lt;&lt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_MSGQ<sp/>(1<sp/>&lt;&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__poll_8c_1a419882814707fc0a59010df3f7fe8673" kindref="member">poll_wait_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*use_queuelike,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="msgq_2msgq__api_2src_2main_8c_1a5c4ebc803e1cc8bb3827444dc64e2c47" kindref="member">msgq</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)p3;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(250));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;wait_sem);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref><sp/>=<sp/>(<ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref>)use_queuelike;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="test__poll_8c_1a185efaf6525a4c9d1c39e34da80bfedd" kindref="member">USE_FIFO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fifo__apis_1gab1c5212040d12cbb92cede5cf54928ba" kindref="member">k_fifo_alloc_put</ref>(&amp;wait_fifo,<sp/>&amp;<ref refid="test__poll_8c_1ae81965a47ad9b2bb45e35d591e610c6e" kindref="member">wait_msg</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gad0bf3825f828ec3ca37481bf3cbd6723" kindref="member">k_poll_signal_raise</ref>(&amp;<ref refid="test__poll_8c_1a3e3171f30c35307c82a7dd6855a27e24" kindref="member">wait_signal</ref>,<sp/><ref refid="test__poll_8c_1afec8fd6f8245ab8c1335460878710671" kindref="member">SIGNAL_RESULT</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="test__poll_8c_1a1d08e608e0e2abfc3483e353a8abc6ac" kindref="member">USE_MSGQ</ref>)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>m[]<sp/>=<sp/><ref refid="test__poll_8c_1a09a10786f7842127b4f363ab6328f578" kindref="member">MSGQ_MSG_VALUE</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put</ref>(<ref refid="msgq_2msgq__api_2src_2main_8c_1a5c4ebc803e1cc8bb3827444dc64e2c47" kindref="member">msgq</ref>,<sp/>&amp;m[0],<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>check<sp/>results<sp/>for<sp/>multiple<sp/>events<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__poll__event" kindref="compound">k_poll_event</ref><sp/>*events,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>event_type,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_available)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfifo__msg" kindref="compound">fifo_msg</ref><sp/>*msg_ptr;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msgq_recv_buf[<ref refid="test__poll_8c_1a14032047bfca58f8d5d487315fe6d43e" kindref="member">MSGQ_MSG_SIZE</ref>]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>[]<sp/>=<sp/><ref refid="test__poll_8c_1a09a10786f7842127b4f363ab6328f578" kindref="member">MSGQ_MSG_VALUE</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(event_type)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_available)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events-&gt;<ref refid="structk__poll__event_1aaf4f32852d799a406bfeea4e57891129" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1gae9e3eefd5a29a538d22f53592578bb37" kindref="member">K_POLL_STATE_SEM_AVAILABLE</ref>,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;wait_sem,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events-&gt;<ref refid="structk__poll__event_1a37c5f45deaa046b356d95af569220c70" kindref="member">tag</ref>,<sp/><ref refid="test__poll_8c_1a68b74e45a6f278679c7e249314ff8bf8" kindref="member">TAG_0</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>to<sp/>not<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events-&gt;<ref refid="structk__poll__event_1aaf4f32852d799a406bfeea4e57891129" kindref="member">state</ref><sp/>=<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events-&gt;<ref refid="structk__poll__event_1aaf4f32852d799a406bfeea4e57891129" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;wait_sem,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/>-<ref refid="group__system__errno_1ga8368025077a0385849d6817b2007c095" kindref="member">EBUSY</ref>,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events-&gt;<ref refid="structk__poll__event_1a37c5f45deaa046b356d95af569220c70" kindref="member">tag</ref>,<sp/><ref refid="test__poll_8c_1a68b74e45a6f278679c7e249314ff8bf8" kindref="member">TAG_0</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__poll__apis_1ga58d656f73f031a39b8a936133fe5504f" kindref="member">K_POLL_TYPE_DATA_AVAILABLE</ref>:</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_available)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events-&gt;<ref refid="structk__poll__event_1aaf4f32852d799a406bfeea4e57891129" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gabd5ac3341698534f39ded718079d6168" kindref="member">K_POLL_STATE_FIFO_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_ptr<sp/>=<sp/><ref refid="group__fifo__apis_1ga1e2c480e2124116af97e94e7b4435de6" kindref="member">k_fifo_get</ref>(&amp;wait_fifo,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gad78332e6bd37812e56ccc4af601542e4" kindref="member">zassert_not_null</ref>(msg_ptr,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(msg_ptr,<sp/>&amp;<ref refid="test__poll_8c_1ae81965a47ad9b2bb45e35d591e610c6e" kindref="member">wait_msg</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(msg_ptr-&gt;<ref refid="structfifo__msg_1aa1713c1b40de03b2c097ab843ed5fe3a" kindref="member">msg</ref>,<sp/><ref refid="test__poll_8c_1a12b512bcade0fce470007cd5439c60d9" kindref="member">FIFO_MSG_VALUE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events-&gt;<ref refid="structk__poll__event_1a37c5f45deaa046b356d95af569220c70" kindref="member">tag</ref>,<sp/><ref refid="test__poll_8c_1acbc1ebd142227eadaa10b5f5113b2d5e" kindref="member">TAG_1</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>to<sp/>not<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events-&gt;<ref refid="structk__poll__event_1aaf4f32852d799a406bfeea4e57891129" kindref="member">state</ref><sp/>=<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events-&gt;<ref refid="structk__poll__event_1aaf4f32852d799a406bfeea4e57891129" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__poll__apis_1ga144d8eb34d85f6053e454410a10bf56a" kindref="member">K_POLL_TYPE_SIGNAL</ref>:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_available)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[2].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga478aae7fe4fb5c7b7c76ed216c22a7f1" kindref="member">K_POLL_STATE_SIGNALED</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="test__poll_8c_1a3e3171f30c35307c82a7dd6855a27e24" kindref="member">wait_signal</ref>.<ref refid="structk__poll__signal_1ae9fe6751d75f7d2b2800cb723603c0fe" kindref="member">signaled</ref>,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="test__poll_8c_1a3e3171f30c35307c82a7dd6855a27e24" kindref="member">wait_signal</ref>.<ref refid="structk__poll__signal_1ab438c1e36cecda66fe2c4642518a1db1" kindref="member">result</ref>,<sp/><ref refid="test__poll_8c_1afec8fd6f8245ab8c1335460878710671" kindref="member">SIGNAL_RESULT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[2].<ref refid="timer_2starve_2src_2main_8c_1aa7eccd3911dd697c8b39d08273f3e64e" kindref="member">tag</ref>,<sp/><ref refid="test__poll_8c_1a4b62f323236a877c88a85412ecefe52b" kindref="member">TAG_2</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>to<sp/>not<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events-&gt;<ref refid="structk__poll__event_1aaf4f32852d799a406bfeea4e57891129" kindref="member">state</ref><sp/>=<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1a3e3171f30c35307c82a7dd6855a27e24" kindref="member">wait_signal</ref>.<ref refid="structk__poll__signal_1ae9fe6751d75f7d2b2800cb723603c0fe" kindref="member">signaled</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events-&gt;<ref refid="structk__poll__event_1aaf4f32852d799a406bfeea4e57891129" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__poll__apis_1gafd5d801eb9e9cf6097b2c08b4933998e" kindref="member">K_POLL_TYPE_IGNORE</ref>:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[3].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__poll__apis_1gaa83509b54175fb6c98324422a928d5e1" kindref="member">K_POLL_TYPE_MSGQ_DATA_AVAILABLE</ref>:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_available)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events-&gt;<ref refid="structk__poll__event_1aaf4f32852d799a406bfeea4e57891129" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gac236074cd43f59f28b803fe2c4a4f6f7" kindref="member">K_POLL_STATE_MSGQ_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get</ref>(<ref refid="test__poll_8c_1aa5ecee40df830fd69fb502a828737f80" kindref="member">wait_msgq_ptr</ref>,<sp/>msgq_recv_buf,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="string_8h_1ad8bfbfa1e4ad284ded921dd775735521" kindref="member">memcmp</ref>(<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>,<sp/>msgq_recv_buf,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1a14032047bfca58f8d5d487315fe6d43e" kindref="member">MSGQ_MSG_SIZE</ref>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events-&gt;<ref refid="structk__poll__event_1a37c5f45deaa046b356d95af569220c70" kindref="member">tag</ref>,<sp/><ref refid="test__poll_8c_1a8d92a24fb50644cbd60b6fda2ff1d318" kindref="member">TAG_3</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>to<sp/>not<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events-&gt;<ref refid="structk__poll__event_1aaf4f32852d799a406bfeea4e57891129" kindref="member">state</ref><sp/>=<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events-&gt;<ref refid="structk__poll__event_1aaf4f32852d799a406bfeea4e57891129" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>event<sp/>type<sp/>(0x%x)\n&quot;</highlight><highlight class="normal">,<sp/>event_type);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__poll__tests_1gad4944fb360bccc21ee9bac617ad7630b" kindref="member">test_poll_wait</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main_low_prio<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1aa5ecee40df830fd69fb502a828737f80" kindref="member">wait_msgq_ptr</ref><sp/>=<sp/>k_object_alloc(K_OBJ_MSGQ);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__msgq__apis_1gabe7305b8f442ebdc147dbbc6e8cf92fc" kindref="member">k_msgq_alloc_init</ref>(<ref refid="test__poll_8c_1aa5ecee40df830fd69fb502a828737f80" kindref="member">wait_msgq_ptr</ref>,<sp/><ref refid="test__poll_8c_1a14032047bfca58f8d5d487315fe6d43e" kindref="member">MSGQ_MSG_SIZE</ref>,<sp/><ref refid="test__poll_8c_1ae99edb3c56e3729d1917a437e9874421" kindref="member">MSGQ_MAX_MSGS</ref>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gaa06bddd93a024fc5326d93187d80eb03" kindref="member">k_poll_event_init</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[4],</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gaa83509b54175fb6c98324422a928d5e1" kindref="member">K_POLL_TYPE_MSGQ_DATA_AVAILABLE</ref>,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1aa5ecee40df830fd69fb502a828737f80" kindref="member">wait_msgq_ptr</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[4].<ref refid="structk__poll__event_1a37c5f45deaa046b356d95af569220c70" kindref="member">tag</ref><sp/>=<sp/><ref refid="test__poll_8c_1a8d92a24fb50644cbd60b6fda2ff1d318" kindref="member">TAG_3</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1aa5ecee40df830fd69fb502a828737f80" kindref="member">wait_msgq_ptr</ref><sp/>=<sp/>&amp;<ref refid="test__poll_8c_1aaf49eed78dade02d076c2f7c6253bb3a" kindref="member">wait_msgq</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__msgq__apis_1gabe7305b8f442ebdc147dbbc6e8cf92fc" kindref="member">k_msgq_alloc_init</ref>(<ref refid="test__poll_8c_1aa5ecee40df830fd69fb502a828737f80" kindref="member">wait_msgq_ptr</ref>,<sp/><ref refid="test__poll_8c_1a14032047bfca58f8d5d487315fe6d43e" kindref="member">MSGQ_MSG_SIZE</ref>,<sp/><ref refid="test__poll_8c_1ae99edb3c56e3729d1917a437e9874421" kindref="member">MSGQ_MAX_MSGS</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a53a6460ab46277db22e6847e69c6a8a6" kindref="member">old_prio</ref><sp/>=<sp/><ref refid="group__thread__apis_1ga3a46ed8ad2c3b12416fafe11325f82b3" kindref="member">k_thread_priority_get</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>());</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gaee3090c2a912b93b6a5855e3018c3551" kindref="member">k_poll_signal_init</ref>(&amp;<ref refid="test__poll_8c_1a3e3171f30c35307c82a7dd6855a27e24" kindref="member">wait_signal</ref>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Wait<sp/>for<sp/>4<sp/>non-ready<sp/>events<sp/>to<sp/>become<sp/>ready<sp/>from<sp/>a<sp/>higher<sp/>priority</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>thread.</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>main_low_prio);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__poll_8c_1aaf99baf6b57ceed1a2949db9e149af47" kindref="member">test_thread</ref>,<sp/>test_stack,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" kindref="member">K_THREAD_STACK_SIZEOF</ref>(test_stack),</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1a419882814707fc0a59010df3f7fe8673" kindref="member">poll_wait_helper</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(<ref refid="test__poll_8c_1a185efaf6525a4c9d1c39e34da80bfedd" kindref="member">USE_FIFO</ref><sp/>|<sp/><ref refid="test__poll_8c_1a1d08e608e0e2abfc3483e353a8abc6ac" kindref="member">USE_MSGQ</ref>),<sp/><ref refid="test__poll_8c_1aa5ecee40df830fd69fb502a828737f80" kindref="member">wait_msgq_ptr</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>main_low_prio<sp/>-<sp/>1,<sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>,<sp/><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>),<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>,<sp/></highlight><highlight class="stringliteral">&quot;should<sp/>return<sp/>EAGAIN<sp/>with<sp/>K_NO_WAIT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>,<sp/><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>),<sp/><ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(1));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a53a6460ab46277db22e6847e69c6a8a6" kindref="member">old_prio</ref>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>all<sp/>events<sp/>should<sp/>be<sp/>available.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[0],<sp/><ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[1],<sp/><ref refid="group__poll__apis_1ga58d656f73f031a39b8a936133fe5504f" kindref="member">K_POLL_TYPE_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[2],<sp/><ref refid="group__poll__apis_1ga144d8eb34d85f6053e454410a10bf56a" kindref="member">K_POLL_TYPE_SIGNAL</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[3],<sp/><ref refid="group__poll__apis_1gafd5d801eb9e9cf6097b2c08b4933998e" kindref="member">K_POLL_TYPE_IGNORE</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[4],<sp/><ref refid="group__poll__apis_1gaa83509b54175fb6c98324422a928d5e1" kindref="member">K_POLL_TYPE_MSGQ_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>verify<sp/>events<sp/>are<sp/>not<sp/>ready<sp/>anymore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>,<sp/><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>),</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(1)),<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>all<sp/>events<sp/>should<sp/>not<sp/>be<sp/>available.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[0],<sp/><ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[1],<sp/><ref refid="group__poll__apis_1ga58d656f73f031a39b8a936133fe5504f" kindref="member">K_POLL_TYPE_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[2],<sp/><ref refid="group__poll__apis_1ga144d8eb34d85f6053e454410a10bf56a" kindref="member">K_POLL_TYPE_SIGNAL</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[3],<sp/><ref refid="group__poll__apis_1gafd5d801eb9e9cf6097b2c08b4933998e" kindref="member">K_POLL_TYPE_IGNORE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[4],<sp/><ref refid="group__poll__apis_1gaa83509b54175fb6c98324422a928d5e1" kindref="member">K_POLL_TYPE_MSGQ_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Wait<sp/>for<sp/>2<sp/>out<sp/>of<sp/>4<sp/>non-ready<sp/>events<sp/>to<sp/>become<sp/>ready<sp/>from<sp/>a<sp/>higher</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>priority<sp/>thread.</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>main_low_prio);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__poll_8c_1aaf99baf6b57ceed1a2949db9e149af47" kindref="member">test_thread</ref>,<sp/>test_stack,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" kindref="member">K_THREAD_STACK_SIZEOF</ref>(test_stack),</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1a419882814707fc0a59010df3f7fe8673" kindref="member">poll_wait_helper</ref>,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>main_low_prio<sp/>-<sp/>1,<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>,<sp/><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>),<sp/><ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(1));</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a53a6460ab46277db22e6847e69c6a8a6" kindref="member">old_prio</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[0],<sp/><ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[1],<sp/><ref refid="group__poll__apis_1ga58d656f73f031a39b8a936133fe5504f" kindref="member">K_POLL_TYPE_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[2],<sp/><ref refid="group__poll__apis_1ga144d8eb34d85f6053e454410a10bf56a" kindref="member">K_POLL_TYPE_SIGNAL</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[4],<sp/><ref refid="group__poll__apis_1gaa83509b54175fb6c98324422a928d5e1" kindref="member">K_POLL_TYPE_MSGQ_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Wait<sp/>for<sp/>each<sp/>event<sp/>to<sp/>be<sp/>ready<sp/>from<sp/>a<sp/>lower<sp/>priority<sp/>thread,<sp/>one<sp/>at</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>time.</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__poll_8c_1aaf99baf6b57ceed1a2949db9e149af47" kindref="member">test_thread</ref>,<sp/>test_stack,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" kindref="member">K_THREAD_STACK_SIZEOF</ref>(test_stack),</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1a419882814707fc0a59010df3f7fe8673" kindref="member">poll_wait_helper</ref>,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(<ref refid="test__poll_8c_1a185efaf6525a4c9d1c39e34da80bfedd" kindref="member">USE_FIFO</ref><sp/>|<sp/><ref refid="test__poll_8c_1a1d08e608e0e2abfc3483e353a8abc6ac" kindref="member">USE_MSGQ</ref>),<sp/><ref refid="test__poll_8c_1aa5ecee40df830fd69fb502a828737f80" kindref="member">wait_msgq_ptr</ref>,<sp/>0,<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a53a6460ab46277db22e6847e69c6a8a6" kindref="member">old_prio</ref><sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>semaphore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>,<sp/><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>),<sp/><ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(1));</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[0],<sp/><ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[1],<sp/><ref refid="group__poll__apis_1ga58d656f73f031a39b8a936133fe5504f" kindref="member">K_POLL_TYPE_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[2],<sp/><ref refid="group__poll__apis_1ga144d8eb34d85f6053e454410a10bf56a" kindref="member">K_POLL_TYPE_SIGNAL</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[4],<sp/><ref refid="group__poll__apis_1gaa83509b54175fb6c98324422a928d5e1" kindref="member">K_POLL_TYPE_MSGQ_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fifo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>,<sp/><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>),<sp/><ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(1));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[0],<sp/><ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[1],<sp/><ref refid="group__poll__apis_1ga58d656f73f031a39b8a936133fe5504f" kindref="member">K_POLL_TYPE_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[2],<sp/><ref refid="group__poll__apis_1ga144d8eb34d85f6053e454410a10bf56a" kindref="member">K_POLL_TYPE_SIGNAL</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[4],<sp/><ref refid="group__poll__apis_1gaa83509b54175fb6c98324422a928d5e1" kindref="member">K_POLL_TYPE_MSGQ_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>poll<sp/>signal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>,<sp/><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>),<sp/><ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(1));</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[0],<sp/><ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[1],<sp/><ref refid="group__poll__apis_1ga58d656f73f031a39b8a936133fe5504f" kindref="member">K_POLL_TYPE_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[2],<sp/><ref refid="group__poll__apis_1ga144d8eb34d85f6053e454410a10bf56a" kindref="member">K_POLL_TYPE_SIGNAL</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[4],<sp/><ref refid="group__poll__apis_1gaa83509b54175fb6c98324422a928d5e1" kindref="member">K_POLL_TYPE_MSGQ_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>message<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>,<sp/><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>),<sp/><ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(1));</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[0],<sp/><ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[1],<sp/><ref refid="group__poll__apis_1ga58d656f73f031a39b8a936133fe5504f" kindref="member">K_POLL_TYPE_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[2],<sp/><ref refid="group__poll__apis_1ga144d8eb34d85f6053e454410a10bf56a" kindref="member">K_POLL_TYPE_SIGNAL</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1ae12aad30c63d1f748c6c9fc6ef60b12f" kindref="member">check_results</ref>(&amp;<ref refid="test__poll_8c_1a555cf591fe5b513435ffdd71f22ea237" kindref="member">wait_events</ref>[4],<sp/><ref refid="group__poll__apis_1gaa83509b54175fb6c98324422a928d5e1" kindref="member">K_POLL_TYPE_MSGQ_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>verify<sp/>k_poll()<sp/>that<sp/>waits<sp/>on<sp/>object<sp/>which<sp/>gets<sp/>cancellation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__fifo" kindref="compound">k_fifo</ref><sp/><ref refid="test__poll_8c_1a434990863a810dbb3481e22b6306470d" kindref="member">cancel_fifo</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__fifo" kindref="compound">k_fifo</ref><sp/><ref refid="test__poll_8c_1a2f88cf1fba50ced58b54f34626d9cd02" kindref="member">non_cancel_fifo</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__poll_8c_1aeea5233ef8297587c3587633e9fb477a" kindref="member">poll_cancel_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)p1;<sp/>(void)p2;<sp/>(void)p3;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfifo__msg" kindref="compound">fifo_msg</ref><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(100));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fifo__apis_1gab744080af449e093df8dd4982e013e16" kindref="member">k_fifo_cancel_wait</ref>(&amp;<ref refid="test__poll_8c_1a434990863a810dbb3481e22b6306470d" kindref="member">cancel_fifo</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fifo__apis_1gab1c5212040d12cbb92cede5cf54928ba" kindref="member">k_fifo_alloc_put</ref>(&amp;<ref refid="test__poll_8c_1a2f88cf1fba50ced58b54f34626d9cd02" kindref="member">non_cancel_fifo</ref>,<sp/>&amp;<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>);</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__poll__tests_1gadbb4d21421419dcfe55a768d28cdd54e" kindref="member">test_poll_cancel</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_main_low_prio)</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main_low_prio<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a53a6460ab46277db22e6847e69c6a8a6" kindref="member">old_prio</ref><sp/>=<sp/><ref refid="group__thread__apis_1ga3a46ed8ad2c3b12416fafe11325f82b3" kindref="member">k_thread_priority_get</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>());</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__event" kindref="compound">k_poll_event</ref><sp/>cancel_events[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER</ref>(<ref refid="group__poll__apis_1ga71734fee18c523cf70276260118afb91" kindref="member">K_POLL_TYPE_FIFO_DATA_AVAILABLE</ref>,</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__poll_8c_1a434990863a810dbb3481e22b6306470d" kindref="member">cancel_fifo</ref>),</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER</ref>(<ref refid="group__poll__apis_1ga71734fee18c523cf70276260118afb91" kindref="member">K_POLL_TYPE_FIFO_DATA_AVAILABLE</ref>,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__poll_8c_1a2f88cf1fba50ced58b54f34626d9cd02" kindref="member">non_cancel_fifo</ref>),</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER</ref>(<ref refid="group__poll__apis_1gafd5d801eb9e9cf6097b2c08b4933998e" kindref="member">K_POLL_TYPE_IGNORE</ref>,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL),</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fifo__apis_1gaeebf6ef54d4be61e19408f44a734a159" kindref="member">k_fifo_init</ref>(&amp;<ref refid="test__poll_8c_1a434990863a810dbb3481e22b6306470d" kindref="member">cancel_fifo</ref>);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fifo__apis_1gaeebf6ef54d4be61e19408f44a734a159" kindref="member">k_fifo_init</ref>(&amp;<ref refid="test__poll_8c_1a2f88cf1fba50ced58b54f34626d9cd02" kindref="member">non_cancel_fifo</ref>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_main_low_prio)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>main_low_prio);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__poll_8c_1aaf99baf6b57ceed1a2949db9e149af47" kindref="member">test_thread</ref>,<sp/>test_stack,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" kindref="member">K_THREAD_STACK_SIZEOF</ref>(test_stack),</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1aeea5233ef8297587c3587633e9fb477a" kindref="member">poll_cancel_helper</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)1,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>main_low_prio<sp/>-<sp/>1,<sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(cancel_events,<sp/><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(cancel_events),<sp/><ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(1));</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a53a6460ab46277db22e6847e69c6a8a6" kindref="member">old_prio</ref>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>-<ref refid="group__system__errno_1ga46b83d9f6c23b1b65a8cecfd775ddaed" kindref="member">EINTR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(cancel_events[0].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gadaf4b4c8e13afb54114af72d133e1fdb" kindref="member">K_POLL_STATE_CANCELLED</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_main_low_prio)<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>poller<sp/>thread<sp/>is<sp/>lower<sp/>priority<sp/>than<sp/>threads<sp/>which</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>generate<sp/>poll<sp/>events,<sp/>it<sp/>may<sp/>get<sp/>multiple<sp/>poll<sp/>events</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>at<sp/>once.</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(cancel_events[1].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gabd5ac3341698534f39ded718079d6168" kindref="member">K_POLL_STATE_FIFO_DATA_AVAILABLE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise,<sp/>poller<sp/>thread<sp/>will<sp/>be<sp/>woken<sp/>up<sp/>on<sp/>first</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>event<sp/>triggered.</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(cancel_events[1].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__poll_8c_1af910a264854f0fc652ae277d17f21d03" kindref="member">test_poll_cancel_main_low_prio</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__poll__tests_1gadbb4d21421419dcfe55a768d28cdd54e" kindref="member">test_poll_cancel</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__poll_8c_1aaa52635d7eecee071afb2a8188c3f505" kindref="member">test_poll_cancel_main_high_prio</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__poll__tests_1gadbb4d21421419dcfe55a768d28cdd54e" kindref="member">test_poll_cancel</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>verify<sp/>multiple<sp/>pollers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="test__poll_8c_1a874d3771cb9715b941eb466037d2590b" kindref="member">K_SEM_DEFINE</ref>(multi_sem,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__poll_8c_1aebe89df60d8ba3aae9f1e0725704f6a2" kindref="member">multi_lowprio</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)p1;<sp/>(void)p2;<sp/>(void)p3;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__event" kindref="compound">k_poll_event</ref><sp/>event;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gaa06bddd93a024fc5326d93187d80eb03" kindref="member">k_poll_event_init</ref>(&amp;event,<sp/><ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,<sp/>&amp;multi_sem);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(&amp;event,<sp/>1,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;multi_sem,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="test__poll_8c_1a874d3771cb9715b941eb466037d2590b" kindref="member">K_SEM_DEFINE</ref>(multi_reply,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__poll_8c_1a60af8d9c7fac601aede51d129079d737" kindref="member">multi</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="617"><highlight class="normal">{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)p1;<sp/>(void)p2;<sp/>(void)p3;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__event" kindref="compound">k_poll_event</ref><sp/>event;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gaa06bddd93a024fc5326d93187d80eb03" kindref="member">k_poll_event_init</ref>(&amp;event,<sp/><ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>,</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,<sp/>&amp;multi_sem);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(&amp;event,<sp/>1,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;multi_sem,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;multi_reply);</highlight></codeline>
<codeline lineno="628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="test__poll_8c_1a874d3771cb9715b941eb466037d2590b" kindref="member">K_SEM_DEFINE</ref>(multi_ready_sem,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__poll__tests_1gacac2de9e9acb1eca7269763a72194093" kindref="member">test_poll_multi</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a53a6460ab46277db22e6847e69c6a8a6" kindref="member">old_prio</ref><sp/>=<sp/><ref refid="group__thread__apis_1ga3a46ed8ad2c3b12416fafe11325f82b3" kindref="member">k_thread_priority_get</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>());</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main_low_prio<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__event" kindref="compound">k_poll_event</ref><sp/>events[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER</ref>(<ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;multi_sem),</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER</ref>(<ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;multi_ready_sem),</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>main_low_prio);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__poll_8c_1aaf99baf6b57ceed1a2949db9e149af47" kindref="member">test_thread</ref>,<sp/>test_stack,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" kindref="member">K_THREAD_STACK_SIZEOF</ref>(test_stack),</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1a60af8d9c7fac601aede51d129079d737" kindref="member">multi</ref>,<sp/>0,<sp/>0,<sp/>0,<sp/>main_low_prio<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>create<sp/>additional<sp/>thread<sp/>to<sp/>add<sp/>multiple(more<sp/>than<sp/>one)</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>pending<sp/>threads<sp/>in<sp/>events<sp/>list<sp/>to<sp/>improve<sp/>code<sp/>coverage.</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__poll_8c_1ac539ccb3716bf1fe16ce4087fc3267d8" kindref="member">test_loprio_thread</ref>,<sp/>test_loprio_stack,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" kindref="member">K_THREAD_STACK_SIZEOF</ref>(test_loprio_stack),</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__poll_8c_1aebe89df60d8ba3aae9f1e0725704f6a2" kindref="member">multi_lowprio</ref>,<sp/>0,<sp/>0,<sp/>0,<sp/>main_low_prio<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allow<sp/>lower<sp/>priority<sp/>thread<sp/>to<sp/>add<sp/>poll<sp/>event<sp/>in<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(250));</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(events,<sp/><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(events),<sp/><ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(1));</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events[0].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(events[1].<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,<sp/><ref refid="group__poll__apis_1gae9e3eefd5a29a538d22f53592578bb37" kindref="member">K_POLL_STATE_SEM_AVAILABLE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="682"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>free<sp/>polling<sp/>threads,<sp/>ensuring<sp/>it<sp/>awoken<sp/>from<sp/>k_poll()</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>got<sp/>the<sp/>sem</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;multi_sem);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;multi_sem);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;multi_reply,<sp/><ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(1));</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wait<sp/>for<sp/>polling<sp/>threads<sp/>to<sp/>complete<sp/>execution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a53a6460ab46277db22e6847e69c6a8a6" kindref="member">old_prio</ref>);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(250));</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref><sp/><ref refid="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" kindref="member">signal</ref>;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__poll_8c_1a624fd6f03039700d80d7e4d463c3f3ab" kindref="member">threadstate</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="699"><highlight class="normal">{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)p2;<sp/>(void)p3;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(250));</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>polling<sp/>thread<sp/>state<sp/>explicitly<sp/>to<sp/>improve<sp/>code<sp/>coverage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga66cf8682fb65870eceb5e57d667a8d4e" kindref="member">k_thread_suspend</ref>(p1);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>polling<sp/>thread<sp/>by<sp/>signalling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gad0bf3825f828ec3ca37481bf3cbd6723" kindref="member">k_poll_signal_raise</ref>(&amp;<ref refid="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" kindref="member">signal</ref>,<sp/><ref refid="test__poll_8c_1afec8fd6f8245ab8c1335460878710671" kindref="member">SIGNAL_RESULT</ref>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga117b26f8569ec3045ead1fad1851663d" kindref="member">k_thread_resume</ref>(p1);</highlight></codeline>
<codeline lineno="708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__poll__tests_1gad653d0ff23c0b3f0792998f1f368d690" kindref="member">test_poll_threadstate</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="725"><highlight class="normal">{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structk__poll__signal_1ae9fe6751d75f7d2b2800cb723603c0fe" kindref="member">signaled</ref>;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main_low_prio<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="errno_8c_1a1bd85a6c09e3fbc49f7e810787317c5f" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gaee3090c2a912b93b6a5855e3018c3551" kindref="member">k_poll_signal_init</ref>(&amp;<ref refid="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" kindref="member">signal</ref>);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__event" kindref="compound">k_poll_event</ref><sp/>event;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gaa06bddd93a024fc5326d93187d80eb03" kindref="member">k_poll_event_init</ref>(&amp;event,<sp/><ref refid="group__poll__apis_1ga144d8eb34d85f6053e454410a10bf56a" kindref="member">K_POLL_TYPE_SIGNAL</ref>,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,<sp/>&amp;<ref refid="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" kindref="member">signal</ref>);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a53a6460ab46277db22e6847e69c6a8a6" kindref="member">old_prio</ref><sp/>=<sp/><ref refid="group__thread__apis_1ga3a46ed8ad2c3b12416fafe11325f82b3" kindref="member">k_thread_priority_get</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>());</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>main_low_prio);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/>ztest_tid<sp/>=<sp/><ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>();</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__poll_8c_1aaf99baf6b57ceed1a2949db9e149af47" kindref="member">test_thread</ref>,<sp/>test_stack,</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" kindref="member">K_THREAD_STACK_SIZEOF</ref>(test_stack),<sp/><ref refid="test__poll_8c_1a624fd6f03039700d80d7e4d463c3f3ab" kindref="member">threadstate</ref>,</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ztest_tid,<sp/>0,<sp/>0,<sp/>main_low_prio<sp/>-<sp/>1,<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wait<sp/>for<sp/>spawn<sp/>thread<sp/>to<sp/>take<sp/>action<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(&amp;event,<sp/>1,<sp/><ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(1)),<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(event.state,<sp/><ref refid="group__poll__apis_1ga478aae7fe4fb5c7b7c76ed216c22a7f1" kindref="member">K_POLL_STATE_SIGNALED</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga69dae11c7cb2c669caa411c3e7001311" kindref="member">k_poll_signal_check</ref>(&amp;<ref refid="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" kindref="member">signal</ref>,<sp/>&amp;signaled,<sp/>&amp;<ref refid="structresult" kindref="compound">result</ref>);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(signaled,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="structresult" kindref="compound">result</ref>,<sp/><ref refid="test__poll_8c_1afec8fd6f8245ab8c1335460878710671" kindref="member">SIGNAL_RESULT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.state<sp/>=<sp/><ref refid="group__poll__apis_1ga522822c5e06a89b22ce4dcefd10c66aa" kindref="member">K_POLL_STATE_NOT_READY</ref>;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga02d899d1455ae1f3f55ffe8f1ebd6994" kindref="member">k_poll_signal_reset</ref>(&amp;<ref refid="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" kindref="member">signal</ref>);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>teardown<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a53a6460ab46277db22e6847e69c6a8a6" kindref="member">old_prio</ref>);</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__poll_8c_1af11966ea57bb89b7e82fe598bd5e9731" kindref="member">test_poll_grant_access</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gafec540511e6d2e0a074a5bfb515c53b0" kindref="member">k_thread_access_grant</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>&amp;<ref refid="test__poll_8c_1af208f7a69c889740d0dee0316126c9f9" kindref="member">no_wait_sem</ref>,<sp/>&amp;<ref refid="test__poll_8c_1a20757139c7b4a23f6695611bc5847fca" kindref="member">no_wait_fifo</ref>,</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__poll_8c_1a33b1af9c38fecb707eae97f8ec84c90f" kindref="member">no_wait_signal</ref>,<sp/>&amp;wait_sem,<sp/>&amp;wait_fifo,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__poll_8c_1a434990863a810dbb3481e22b6306470d" kindref="member">cancel_fifo</ref>,<sp/>&amp;<ref refid="test__poll_8c_1a2f88cf1fba50ced58b54f34626d9cd02" kindref="member">non_cancel_fifo</ref>,</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__poll_8c_1a3e3171f30c35307c82a7dd6855a27e24" kindref="member">wait_signal</ref>,<sp/>&amp;<ref refid="test__poll_8c_1aaf99baf6b57ceed1a2949db9e149af47" kindref="member">test_thread</ref>,<sp/>&amp;<ref refid="test__poll_8c_1a96ee586111ba36c20a57d5cd9cdb80df" kindref="member">test_signal</ref>,</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;test_stack,<sp/>&amp;multi_sem,<sp/>&amp;multi_reply);</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__poll_8c_1a410fcc6b5ea0f0d90b30eff180898672" kindref="member">test_poll_zero_events</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="770"><highlight class="normal">{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__event" kindref="compound">k_poll_event</ref><sp/>event;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="test__poll_8c_1ae3cc683d2a8901cebcdb71d2109c62de" kindref="member">zero_events_sem</ref>,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gaa06bddd93a024fc5326d93187d80eb03" kindref="member">k_poll_event_init</ref>(&amp;event,<sp/><ref refid="group__poll__apis_1ga0fd7605bdffd43dff7480a90a603ffde" kindref="member">K_POLL_TYPE_SEM_AVAILABLE</ref>,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,<sp/>&amp;<ref refid="test__poll_8c_1ae3cc683d2a8901cebcdb71d2109c62de" kindref="member">zero_events_sem</ref>);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(&amp;event,<sp/>0,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(50)),<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>subthread<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__poll_8c_1a859b56011f6fb73ea6324c45ec7a402f" kindref="member">polling_event</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="783"><highlight class="normal">{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gac550dc93662ce164fb22a5a91d6830db" kindref="member">k_poll</ref>(p1,<sp/>1,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__poll__tests_1ga57eb6965a015e5ec3139d8d07709f409" kindref="member">test_detect_is_polling</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="798"><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gaee3090c2a912b93b6a5855e3018c3551" kindref="member">k_poll_signal_init</ref>(&amp;<ref refid="test__poll_8c_1a96ee586111ba36c20a57d5cd9cdb80df" kindref="member">test_signal</ref>);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/>*<ref refid="kobject_8c_1a5bf2789125fcfa98cff775cb82fbd3c9" kindref="member">p</ref><sp/>=<sp/>&amp;<ref refid="test__poll_8c_1aaf99baf6b57ceed1a2949db9e149af47" kindref="member">test_thread</ref>;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__event" kindref="compound">k_poll_event</ref><sp/>events[1]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga8e3889f2bac281a6e65e31068e58047e" kindref="member">K_POLL_EVENT_INITIALIZER</ref>(<ref refid="group__poll__apis_1ga144d8eb34d85f6053e454410a10bf56a" kindref="member">K_POLL_TYPE_SIGNAL</ref>,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__poll_8c_1a96ee586111ba36c20a57d5cd9cdb80df" kindref="member">test_signal</ref>),</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__poll_8c_1aaf99baf6b57ceed1a2949db9e149af47" kindref="member">test_thread</ref>,<sp/>test_stack,</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" kindref="member">K_THREAD_STACK_SIZEOF</ref>(test_stack),<sp/><ref refid="test__poll_8c_1a859b56011f6fb73ea6324c45ec7a402f" kindref="member">polling_event</ref>,</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events,<sp/>NULL,<sp/>NULL,<sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(0),</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>the<sp/>thread<sp/>timeout<sp/>value<sp/>to<sp/>check<sp/>if</highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>what<sp/>happened<sp/>if<sp/>dticks<sp/>is<sp/>invalid.</highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="kobject_8c_1a5bf2789125fcfa98cff775cb82fbd3c9" kindref="member">p</ref>-&gt;base.timeout.dticks<sp/>=<sp/>_EXPIRED;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>register<sp/>event<sp/>successfully<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(50));</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Raise<sp/>a<sp/>signal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__poll__apis_1gad0bf3825f828ec3ca37481bf3cbd6723" kindref="member">k_poll_signal_raise</ref>(&amp;<ref refid="test__poll_8c_1a96ee586111ba36c20a57d5cd9cdb80df" kindref="member">test_signal</ref>,<sp/>0x1337);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>==<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>,<sp/></highlight><highlight class="stringliteral">&quot;thread<sp/>expired<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(events[0].<ref refid="structk__poll__event_1ad030c37b97f33e1bbb3361057180fa4f" kindref="member">poller</ref>-&gt;is_polling<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>value<sp/>of<sp/>is_polling<sp/>is<sp/>invalid\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/kernel/poll/src/test_poll.c"/>
  </compounddef>
</doxygen>
