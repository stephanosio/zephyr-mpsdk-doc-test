<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__mem-demand-paging-eviction" kind="group">
    <compoundname>mem-demand-paging-eviction</compoundname>
    <title>Eviction Algorithm APIs</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__mem-demand-paging-eviction_1ga12641d53942529c7d7364c08473a6eca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct z_page_frame *</type>
        <definition>struct z_page_frame * k_mem_paging_eviction_select</definition>
        <argsstring>(bool *dirty)</argsstring>
        <name>k_mem_paging_eviction_select</name>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref> *</type>
          <declname>dirty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select a page frame for eviction</para>
<para>The kernel will invoke this to choose a page frame to evict if there are no free page frames.</para>
<para>This function will never be called before the initial <ref refid="group__mem-demand-paging-eviction_1ga68dcfc0e5374de2c8ad7b9fe4e65c4f4" kindref="member">k_mem_paging_eviction_init()</ref>.</para>
<para>This function is invoked with interrupts locked.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">dirty</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the page to evict is dirty </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The page frame to evict </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/mem_manage.h" line="527" column="19" declfile="include/sys/mem_manage.h" declline="527" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__mem-demand-paging-eviction_1ga68dcfc0e5374de2c8ad7b9fe4e65c4f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_mem_paging_eviction_init</definition>
        <argsstring>(void)</argsstring>
        <name>k_mem_paging_eviction_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialization function</para>
<para>Called at POST_KERNEL to perform any necessary initialization tasks for the eviction algorithm. <ref refid="group__mem-demand-paging-eviction_1ga12641d53942529c7d7364c08473a6eca" kindref="member">k_mem_paging_eviction_select()</ref> is guaranteed to never be called until this has returned, and this will only be called once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/mem_manage.h" line="536" column="6" declfile="include/sys/mem_manage.h" declline="536" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Eviction algorithm APIs </para>
    </detaileddescription>
  </compounddef>
</doxygen>
