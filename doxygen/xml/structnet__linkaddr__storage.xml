<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structnet__linkaddr__storage" kind="struct" language="C++" prot="public">
    <compoundname>net_linkaddr_storage</compoundname>
    <includes refid="net__linkaddr_8h" local="no">net_linkaddr.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnet__linkaddr__storage_1a00ae00d99b6022663e0f5a3894704ca8" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t net_linkaddr_storage::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>What kind of address is this for </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_linkaddr.h" line="92" column="9" bodyfile="include/net/net_linkaddr.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__linkaddr__storage_1ab1d9024ef8574f6e7daaa19ee5266a11" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t net_linkaddr_storage::len</definition>
        <argsstring></argsstring>
        <name>len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The real length of the ll address. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_linkaddr.h" line="95" column="9" bodyfile="include/net/net_linkaddr.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__linkaddr__storage_1ae37b0b74f3d2b7ec09e2c2022e86c0bb" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t net_linkaddr_storage::addr[6]</definition>
        <argsstring>[6]</argsstring>
        <name>addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The array of bytes representing the address </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_linkaddr.h" line="98" column="9" bodyfile="include/net/net_linkaddr.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware link address structure. </para>
    </briefdescription>
    <detaileddescription>
<para>Used to hold the link address information. This variant is needed when we have to store the link layer address.</para>
<para>Note that you cannot cast this to <ref refid="structnet__linkaddr" kindref="compound">net_linkaddr</ref> as uint8_t * is handled differently than uint8_t addr[] and the fields are purposely in different order. </para>
    </detaileddescription>
    <location file="include/net/net_linkaddr.h" line="90" column="1" bodyfile="include/net/net_linkaddr.h" bodystart="90" bodyend="99"/>
    <listofallmembers>
      <member refid="structnet__linkaddr__storage_1ae37b0b74f3d2b7ec09e2c2022e86c0bb" prot="public" virt="non-virtual"><scope>net_linkaddr_storage</scope><name>addr</name></member>
      <member refid="structnet__linkaddr__storage_1ab1d9024ef8574f6e7daaa19ee5266a11" prot="public" virt="non-virtual"><scope>net_linkaddr_storage</scope><name>len</name></member>
      <member refid="structnet__linkaddr__storage_1a00ae00d99b6022663e0f5a3894704ca8" prot="public" virt="non-virtual"><scope>net_linkaddr_storage</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
