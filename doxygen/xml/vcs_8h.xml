<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="vcs_8h" kind="file" language="C++">
    <compoundname>vcs.h</compoundname>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includes refid="aics_8h" local="no">bluetooth/audio/aics.h</includes>
    <includes refid="vocs_8h" local="no">bluetooth/audio/vocs.h</includes>
    <incdepgraph>
      <node id="17">
        <label>bluetooth/addr.h</label>
        <link refid="addr_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>bluetooth/audio/aics.h</label>
        <link refid="aics_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/bluetooth/audio/vcs.h</label>
        <link refid="vcs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>bluetooth/audio/vocs.h</label>
        <link refid="vocs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>bluetooth/bluetooth.h</label>
        <link refid="bluetooth_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>bluetooth/crypto.h</label>
        <link refid="bluetooth_2crypto_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>bluetooth/gap.h</label>
        <link refid="gap_8h"/>
      </node>
      <node id="14">
        <label>net/buf.h</label>
        <link refid="net_2buf_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="11">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="2">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="4">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="8">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>stdarg.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="15">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structbt__vcs__register__param" prot="public">bt_vcs_register_param</innerclass>
    <innerclass refid="structbt__vcs__included" prot="public">bt_vcs_included</innerclass>
    <innerclass refid="structbt__vcs__cb" prot="public">bt_vcs_cb</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__gatt__vcs_1gaf0dfc9bfcb427835a18ae881a66c8c60" prot="public" static="no">
        <name>BT_VCS_VOCS_CNT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="34" column="10" bodyfile="include/bluetooth/audio/vcs.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__vcs_1gafbe659707a53a6bd3bdc89d1c621dcdb" prot="public" static="no">
        <name>BT_VCS_AICS_CNT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="35" column="9" bodyfile="include/bluetooth/audio/vcs.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__vcs_1ga3b20f43cdccf4ea513281a30533aa2d5" prot="public" static="no">
        <name>BT_VCS_ERR_INVALID_COUNTER</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Volume Control Service Error codes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="39" column="9" bodyfile="include/bluetooth/audio/vcs.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__vcs_1ga2489e6e95957b44068a0f96efc48192d" prot="public" static="no">
        <name>BT_VCS_ERR_OP_NOT_SUPPORTED</name>
        <initializer>0x81</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="40" column="9" bodyfile="include/bluetooth/audio/vcs.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__vcs_1ga9caf89733aee3271bf82b8088aa150fc" prot="public" static="no">
        <name>BT_VCS_STATE_UNMUTED</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Volume Control Service Mute Values </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="43" column="9" bodyfile="include/bluetooth/audio/vcs.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__vcs_1ga13a856eb5d25ea85c3c3023e3cdd4a24" prot="public" static="no">
        <name>BT_VCS_STATE_MUTED</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="44" column="9" bodyfile="include/bluetooth/audio/vcs.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__bt__gatt__vcs_1ga18df0c87d86afc3228396b8b704c6904" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_vcs_discover_cb) (struct bt_vcs *vcs, int err, uint8_t vocs_count, uint8_t aics_count)</definition>
        <argsstring>)(struct bt_vcs *vcs, int err, uint8_t vocs_count, uint8_t aics_count)</argsstring>
        <name>bt_vcs_discover_cb</name>
        <briefdescription>
<para>Callback function for bt_vcs_discover. </para>
        </briefdescription>
        <detaileddescription>
<para>This callback is only used for the client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vocs_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of Volume Offset Control Service instances on peer device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aics_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of Audio Input Control Service instances on peer device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="144" column="9" bodyfile="include/bluetooth/audio/vcs.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__vcs_1ga53b3c22be0429629abccc01303541fc7" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_vcs_state_cb) (struct bt_vcs *vcs, int err, uint8_t volume, uint8_t mute)</definition>
        <argsstring>)(struct bt_vcs *vcs, int err, uint8_t volume, uint8_t mute)</argsstring>
        <name>bt_vcs_state_cb</name>
        <briefdescription>
<para>Callback function for Volume Control Service volume state. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the value is locally read as the server. Called when the value is remotely read as the client. Called if the value is changed by either the server or client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>The volume of the Volume Control Service server. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mute</parametername>
</parameternamelist>
<parameterdescription>
<para>The mute setting of the Volume Control Service server. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="160" column="9" bodyfile="include/bluetooth/audio/vcs.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__vcs_1gafff0371ce0499bb215acfa09ef8fbc70" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_vcs_flags_cb) (struct bt_vcs *vcs, int err, uint8_t flags)</definition>
        <argsstring>)(struct bt_vcs *vcs, int err, uint8_t flags)</argsstring>
        <name>bt_vcs_flags_cb</name>
        <briefdescription>
<para>Callback function for Volume Control Service flags. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the value is locally read as the server. Called when the value is remotely read as the client. Called if the value is changed by either the server or client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The flags of the Volume Control Service server. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="175" column="9" bodyfile="include/bluetooth/audio/vcs.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__vcs_1gac440ff05efc419a16ed77821f09ab114" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_vcs_write_cb) (struct bt_vcs *vcs, int err)</definition>
        <argsstring>)(struct bt_vcs *vcs, int err)</argsstring>
        <name>bt_vcs_write_cb</name>
        <briefdescription>
<para>Callback function for writes. </para>
        </briefdescription>
        <detaileddescription>
<para>This callback is only used for the client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on fail. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="185" column="9" bodyfile="include/bluetooth/audio/vcs.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga34db57b965f7134598630b7176ae5ce5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_register</definition>
        <argsstring>(struct bt_vcs_register_param *param, struct bt_vcs **vcs)</argsstring>
        <name>bt_vcs_register</name>
        <param>
          <type>struct <ref refid="structbt__vcs__register__param" kindref="compound">bt_vcs_register_param</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>struct bt_vcs **</type>
          <declname>vcs</declname>
        </param>
        <briefdescription>
<para>Register the Volume Control Service. </para>
        </briefdescription>
        <detaileddescription>
<para>This will register and enable the service and make it discoverable by clients.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service register parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the registered Volume Control Service. This will still be valid if the return value is -EALREADY.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="101" column="5" declfile="include/bluetooth/audio/vcs.h" declline="101" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga4978c7ca59bb0a7605e0ab65d2de6826" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_included_get</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_vcs_included *included)</argsstring>
        <name>bt_vcs_included_get</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__vcs__included" kindref="compound">bt_vcs_included</ref> *</type>
          <declname>included</declname>
        </param>
        <briefdescription>
<para>Get Volume Control Service included services. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a pointer to a struct that contains information about the Volume Control Service included service instances, such as pointers to the Volume Offset Control Service (Volume Offset Control Service) or Audio Input Control Service (AICS) instances.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">included</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the result in.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="116" column="5" declfile="include/bluetooth/audio/vcs.h" declline="116" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gafc4005936796891f4a7e573cf89f14d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_client_conn_get</definition>
        <argsstring>(const struct bt_vcs *vcs, struct bt_conn **conn)</argsstring>
        <name>bt_vcs_client_conn_get</name>
        <param>
          <type>const struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_conn **</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Get the connection pointer of a client instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the Bluetooth connection pointer of a Volume Control Service client instance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service client instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="129" column="5" declfile="include/bluetooth/audio/vcs.h" declline="129" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga6bead6f3ee5b372ea5182b4fc7d82710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_discover</definition>
        <argsstring>(struct bt_conn *conn, struct bt_vcs **vcs)</argsstring>
        <name>bt_vcs_discover</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct bt_vcs **</type>
          <declname>vcs</declname>
        </param>
        <briefdescription>
<para>Discover Volume Control Service and included services. </para>
        </briefdescription>
        <detaileddescription>
<para>This will start a GATT discovery and setup handles and subscriptions. This shall be called once before any other actions can be executed for the peer device, and the <ref refid="group__bt__gatt__vcs_1ga18df0c87d86afc3228396b8b704c6904" kindref="member">bt_vcs_discover_cb</ref> callback will notify when it is possible to start remote operations.</para>
<para>This shall only be done as the client,</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection to discover Volume Control Service for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Valid remote instance object on success.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="224" column="5" declfile="include/bluetooth/audio/vcs.h" declline="224" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gaa0553de76350a08095b6e9df16c0286b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_vol_step_set</definition>
        <argsstring>(uint8_t volume_step)</argsstring>
        <name>bt_vcs_vol_step_set</name>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>volume_step</declname>
        </param>
        <briefdescription>
<para>Set the Volume Control Service volume step size. </para>
        </briefdescription>
        <detaileddescription>
<para>Set the value that the volume changes, when changed relatively with e.g. <ref refid="group__bt__gatt__vcs_1ga889e8e74e19a9f56c2bb3ea00bb3091b" kindref="member">bt_vcs_vol_down</ref> or <ref refid="group__bt__gatt__vcs_1ga19c6073c2068d50ea1f5992b81999e3d" kindref="member">bt_vcs_vol_up</ref>.</para>
<para>This can only be done as the server.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>volume_step</parametername>
</parameternamelist>
<parameterdescription>
<para>The volume step size (1-255).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="238" column="5" declfile="include/bluetooth/audio/vcs.h" declline="238" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gad17753ff531445cd032ecca6fad64aff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_vol_get</definition>
        <argsstring>(struct bt_vcs *vcs)</argsstring>
        <name>bt_vcs_vol_get</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <briefdescription>
<para>Read the Volume Control Service volume state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="247" column="5" declfile="include/bluetooth/audio/vcs.h" declline="247" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga9cb12441223ff465d3f6af0e59ac5700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_flags_get</definition>
        <argsstring>(struct bt_vcs *vcs)</argsstring>
        <name>bt_vcs_flags_get</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <briefdescription>
<para>Read the Volume Control Service flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="256" column="5" declfile="include/bluetooth/audio/vcs.h" declline="256" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga889e8e74e19a9f56c2bb3ea00bb3091b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_vol_down</definition>
        <argsstring>(struct bt_vcs *vcs)</argsstring>
        <name>bt_vcs_vol_down</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <briefdescription>
<para>Turn the volume down by one step on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="265" column="5" declfile="include/bluetooth/audio/vcs.h" declline="265" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga19c6073c2068d50ea1f5992b81999e3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_vol_up</definition>
        <argsstring>(struct bt_vcs *vcs)</argsstring>
        <name>bt_vcs_vol_up</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <briefdescription>
<para>Turn the volume up by one step on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="274" column="5" declfile="include/bluetooth/audio/vcs.h" declline="274" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga8cbdf8e0c8c50a26e5dc0bce561ab0e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_unmute_vol_down</definition>
        <argsstring>(struct bt_vcs *vcs)</argsstring>
        <name>bt_vcs_unmute_vol_down</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <briefdescription>
<para>Turn the volume down and unmute the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="283" column="5" declfile="include/bluetooth/audio/vcs.h" declline="283" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gaa048d78e127586b3a13be74944dc6f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_unmute_vol_up</definition>
        <argsstring>(struct bt_vcs *vcs)</argsstring>
        <name>bt_vcs_unmute_vol_up</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <briefdescription>
<para>Turn the volume up and unmute the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="292" column="5" declfile="include/bluetooth/audio/vcs.h" declline="292" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gaee41adaa10054180b4932fbaca9ab369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_vol_set</definition>
        <argsstring>(struct bt_vcs *vcs, uint8_t volume)</argsstring>
        <name>bt_vcs_vol_set</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>volume</declname>
        </param>
        <briefdescription>
<para>Set the volume on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>The absolute volume to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="302" column="5" declfile="include/bluetooth/audio/vcs.h" declline="302" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga5eba1a8accdec624ed9b6f0ece77a74a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_unmute</definition>
        <argsstring>(struct bt_vcs *vcs)</argsstring>
        <name>bt_vcs_unmute</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <briefdescription>
<para>Unmute the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="311" column="5" declfile="include/bluetooth/audio/vcs.h" declline="311" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga5441c9ccd9f3eea1afdada5d820b7b74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_mute</definition>
        <argsstring>(struct bt_vcs *vcs)</argsstring>
        <name>bt_vcs_mute</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <briefdescription>
<para>Mute the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="320" column="5" declfile="include/bluetooth/audio/vcs.h" declline="320" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gaa4b114f2a839cee2e429a0c0b1e83e90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_vocs_state_get</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_vocs *inst)</argsstring>
        <name>bt_vcs_vocs_state_get</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_vocs *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Volume Offset Control Service offset state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Volume Offset Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="330" column="5" declfile="include/bluetooth/audio/vcs.h" declline="330" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga983272d4c4c9daf228340815cb97e955" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_vocs_location_get</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_vocs *inst)</argsstring>
        <name>bt_vcs_vocs_location_get</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_vocs *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Volume Offset Control Service location. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Volume Offset Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="340" column="5" declfile="include/bluetooth/audio/vcs.h" declline="340" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gab2db58af4372a951963fcd6608737740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_vocs_location_set</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_vocs *inst, uint8_t location)</argsstring>
        <name>bt_vcs_vocs_location_set</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_vocs *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>location</declname>
        </param>
        <briefdescription>
<para>Set the Volume Offset Control Service location. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Volume Offset Control Service instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>The location to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="351" column="5" declfile="include/bluetooth/audio/vcs.h" declline="351" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga513f2cb1309887ce2a23169d6d0c7286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_vocs_state_set</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_vocs *inst, int16_t offset)</argsstring>
        <name>bt_vcs_vocs_state_set</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_vocs *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1afe270aee8d96ad7f279a4020b9d58bdf" kindref="member">int16_t</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Set the Volume Offset Control Service offset state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Volume Offset Control Service instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset to set (-255 to 255).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="363" column="5" declfile="include/bluetooth/audio/vcs.h" declline="363" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gafd9734e2e2b563be150accc310d8d4b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_vocs_description_get</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_vocs *inst)</argsstring>
        <name>bt_vcs_vocs_description_get</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_vocs *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Volume Offset Control Service output description. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Volume Offset Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="374" column="5" declfile="include/bluetooth/audio/vcs.h" declline="374" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gaf7b6e1b591ee19c5209b7a63c35cf5ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_vocs_description_set</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_vocs *inst, const char *description)</argsstring>
        <name>bt_vcs_vocs_description_set</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_vocs *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>description</declname>
        </param>
        <briefdescription>
<para>Set the Volume Offset Control Service description. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Volume Offset Control Service instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>The description to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="385" column="5" declfile="include/bluetooth/audio/vcs.h" declline="385" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga3ca24d092971116925f2b089747f1f70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_aics_deactivate</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_aics *inst)</argsstring>
        <name>bt_vcs_aics_deactivate</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Deactivates an Audio Input Control Service instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Audio Input Control Services are activated by default, but this will allow the server to deactivate an Audio Input Control Service.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="399" column="5" declfile="include/bluetooth/audio/vcs.h" declline="399" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gaafa987e109c9ebc40c6ba93626b32a4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_aics_activate</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_aics *inst)</argsstring>
        <name>bt_vcs_aics_activate</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Activates an Audio Input Control Service instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Audio Input Control Services are activated by default, but this will allow the server to reactivate an Audio Input Control Service instance after it has been deactivated with <ref refid="group__bt__gatt__vcs_1ga3ca24d092971116925f2b089747f1f70" kindref="member">bt_vcs_aics_deactivate</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="413" column="5" declfile="include/bluetooth/audio/vcs.h" declline="413" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gafe1657b863b3046452263273fbac150d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_aics_state_get</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_aics *inst)</argsstring>
        <name>bt_vcs_aics_state_get</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Audio Input Control Service input state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="423" column="5" declfile="include/bluetooth/audio/vcs.h" declline="423" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga3a8e16672e742cec127515edd23d7adc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_aics_gain_setting_get</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_aics *inst)</argsstring>
        <name>bt_vcs_aics_gain_setting_get</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Audio Input Control Service gain settings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="433" column="5" declfile="include/bluetooth/audio/vcs.h" declline="433" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga23bf61d551b5197a201468cd1673c46d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_aics_type_get</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_aics *inst)</argsstring>
        <name>bt_vcs_aics_type_get</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Audio Input Control Service input type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="443" column="5" declfile="include/bluetooth/audio/vcs.h" declline="443" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gaa4cc4afa8db9fab1832584f362324961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_aics_status_get</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_aics *inst)</argsstring>
        <name>bt_vcs_aics_status_get</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Audio Input Control Service input status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="453" column="5" declfile="include/bluetooth/audio/vcs.h" declline="453" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gaf0afc5167ad4ba12d2e19f413ba3350c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_aics_mute</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_aics *inst)</argsstring>
        <name>bt_vcs_aics_mute</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Mute the Audio Input Control Service input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="463" column="5" declfile="include/bluetooth/audio/vcs.h" declline="463" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga184430ce198b53d87f16c6d7f1c78daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_aics_unmute</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_aics *inst)</argsstring>
        <name>bt_vcs_aics_unmute</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Unmute the Audio Input Control Service input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="473" column="5" declfile="include/bluetooth/audio/vcs.h" declline="473" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga1cee8ed0ef8915fef3e60d1ab589cd7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_aics_manual_gain_set</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_aics *inst)</argsstring>
        <name>bt_vcs_aics_manual_gain_set</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Set input gain to manual. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="483" column="5" declfile="include/bluetooth/audio/vcs.h" declline="483" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gaa5ac86708587635e03db65994be2db4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_aics_automatic_gain_set</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_aics *inst)</argsstring>
        <name>bt_vcs_aics_automatic_gain_set</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Set the input gain to automatic. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="493" column="5" declfile="include/bluetooth/audio/vcs.h" declline="493" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gafee17d903e26e44dffeefae6c1a64577" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_aics_gain_set</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_aics *inst, int8_t gain)</argsstring>
        <name>bt_vcs_aics_gain_set</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref></type>
          <declname>gain</declname>
        </param>
        <briefdescription>
<para>Set the input gain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gain</parametername>
</parameternamelist>
<parameterdescription>
<para>The gain in dB to set (-128 to 127).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="504" column="5" declfile="include/bluetooth/audio/vcs.h" declline="504" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1ga04c6f9d12804a004c4251906f13f3d10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_aics_description_get</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_aics *inst)</argsstring>
        <name>bt_vcs_aics_description_get</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Audio Input Control Service description. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="515" column="5" declfile="include/bluetooth/audio/vcs.h" declline="515" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gaafbfcb9069c482a23677c8c0c882084e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_aics_description_set</definition>
        <argsstring>(struct bt_vcs *vcs, struct bt_aics *inst, const char *description)</argsstring>
        <name>bt_vcs_aics_description_set</name>
        <param>
          <type>struct bt_vcs *</type>
          <declname>vcs</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>description</declname>
        </param>
        <briefdescription>
<para>Set the Audio Input Control Service description. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>The description to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="526" column="5" declfile="include/bluetooth/audio/vcs.h" declline="526" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vcs_1gac903056ad26852989782cdc77252e354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vcs_client_cb_register</definition>
        <argsstring>(struct bt_vcs_cb *cb)</argsstring>
        <name>bt_vcs_client_cb_register</name>
        <param>
          <type>struct <ref refid="structbt__vcs__cb" kindref="compound">bt_vcs_cb</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Registers the callbacks used by the Volume Control Service client. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vcs.h" line="536" column="5" declfile="include/bluetooth/audio/vcs.h" declline="536" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020-2021<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_BLUETOOTH_SERVICES_VCS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_BLUETOOTH_SERVICES_VCS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="aics_8h" kindref="compound">bluetooth/audio/aics.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="vocs_8h" kindref="compound">bluetooth/audio/vocs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_BT_VCS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_VCS_VOCS_CNT<sp/>CONFIG_BT_VCS_VOCS_INSTANCE_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_VCS_AICS_CNT<sp/>CONFIG_BT_VCS_AICS_INSTANCE_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="group__bt__gatt__vcs_1gaf0dfc9bfcb427835a18ae881a66c8c60" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_VCS_VOCS_CNT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="group__bt__gatt__vcs_1gafbe659707a53a6bd3bdc89d1c621dcdb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_VCS_AICS_CNT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_BT_VCS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="group__bt__gatt__vcs_1ga3b20f43cdccf4ea513281a30533aa2d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_VCS_ERR_INVALID_COUNTER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="group__bt__gatt__vcs_1ga2489e6e95957b44068a0f96efc48192d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_VCS_ERR_OP_NOT_SUPPORTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x81</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="group__bt__gatt__vcs_1ga9caf89733aee3271bf82b8088aa150fc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_VCS_STATE_UNMUTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="group__bt__gatt__vcs_1ga13a856eb5d25ea85c3c3023e3cdd4a24" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_VCS_STATE_MUTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_vcs;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structbt__vcs__register__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__vcs__register__param" kindref="compound">bt_vcs_register_param</ref><sp/>{</highlight></codeline>
<codeline lineno="52" refid="structbt__vcs__register__param_1aad562127bfbe958da5c4ebe8e024c294" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__vcs__register__param_1aad562127bfbe958da5c4ebe8e024c294" kindref="member">step</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structbt__vcs__register__param_1a2de34cc7ef9d08255fbcaf82899d6c60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__vcs__register__param_1a2de34cc7ef9d08255fbcaf82899d6c60" kindref="member">mute</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structbt__vcs__register__param_1aefcca8775edb5ac6a34daa10fb972d03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__vcs__register__param_1aefcca8775edb5ac6a34daa10fb972d03" kindref="member">volume</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structbt__vcs__register__param_1ae76aa62a5d62a6539d7b6fa7f7dedf1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__vocs__register__param" kindref="compound">bt_vocs_register_param</ref><sp/><ref refid="structbt__vcs__register__param_1ae76aa62a5d62a6539d7b6fa7f7dedf1c" kindref="member">vocs_param</ref>[<ref refid="group__bt__gatt__vcs_1gaf0dfc9bfcb427835a18ae881a66c8c60" kindref="member">BT_VCS_VOCS_CNT</ref>];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="structbt__vcs__register__param_1a8ac2c202202f670d785d9d0effcb0f14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__aics__register__param" kindref="compound">bt_aics_register_param</ref><sp/><ref refid="structbt__vcs__register__param_1a8ac2c202202f670d785d9d0effcb0f14" kindref="member">aics_param</ref>[<ref refid="group__bt__gatt__vcs_1gafbe659707a53a6bd3bdc89d1c621dcdb" kindref="member">BT_VCS_AICS_CNT</ref>];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structbt__vcs__register__param_1ab6b00418afbecb8ae97921a4286421da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__vcs__cb" kindref="compound">bt_vcs_cb</ref><sp/>*<ref refid="structbt__vcs__register__param_1ab6b00418afbecb8ae97921a4286421da" kindref="member">cb</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structbt__vcs__included" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__vcs__included" kindref="compound">bt_vcs_included</ref><sp/>{</highlight></codeline>
<codeline lineno="79" refid="structbt__vcs__included_1a72fce81b792cb5ff4e362a79051af3f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__vcs__included_1a72fce81b792cb5ff4e362a79051af3f8" kindref="member">vocs_cnt</ref>;</highlight></codeline>
<codeline lineno="81" refid="structbt__vcs__included_1a9e5f5362a28d966bd3138e9c57f59758" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_vocs<sp/>**<ref refid="structbt__vcs__included_1a9e5f5362a28d966bd3138e9c57f59758" kindref="member">vocs</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="structbt__vcs__included_1a88386e40616916aa3845214d26efb47d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__vcs__included_1a88386e40616916aa3845214d26efb47d" kindref="member">aics_cnt</ref>;</highlight></codeline>
<codeline lineno="86" refid="structbt__vcs__included_1aa1dcba3524b3755ba5a4603735a45a4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_aics<sp/>**<ref refid="structbt__vcs__included_1aa1dcba3524b3755ba5a4603735a45a4c" kindref="member">aics</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="group__bt__gatt__vcs_1ga34db57b965f7134598630b7176ae5ce5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga34db57b965f7134598630b7176ae5ce5" kindref="member">bt_vcs_register</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__vcs__register__param" kindref="compound">bt_vcs_register_param</ref><sp/>*param,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>**vcs);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="group__bt__gatt__vcs_1ga4978c7ca59bb0a7605e0ab65d2de6826" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga4978c7ca59bb0a7605e0ab65d2de6826" kindref="member">bt_vcs_included_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__vcs__included" kindref="compound">bt_vcs_included</ref><sp/>*included);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="group__bt__gatt__vcs_1gafc4005936796891f4a7e573cf89f14d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gafc4005936796891f4a7e573cf89f14d8" kindref="member">bt_vcs_client_conn_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_conn<sp/>**conn);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="group__bt__gatt__vcs_1ga18df0c87d86afc3228396b8b704c6904" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__gatt__vcs_1ga18df0c87d86afc3228396b8b704c6904" kindref="member">bt_vcs_discover_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>vocs_count,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>aics_count);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="group__bt__gatt__vcs_1ga53b3c22be0429629abccc01303541fc7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__gatt__vcs_1ga53b3c22be0429629abccc01303541fc7" kindref="member">bt_vcs_state_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>volume,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>mute);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="group__bt__gatt__vcs_1gafff0371ce0499bb215acfa09ef8fbc70" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__gatt__vcs_1gafff0371ce0499bb215acfa09ef8fbc70" kindref="member">bt_vcs_flags_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="group__bt__gatt__vcs_1gac440ff05efc419a16ed77821f09ab114" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__gatt__vcs_1gac440ff05efc419a16ed77821f09ab114" kindref="member">bt_vcs_write_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="structbt__vcs__cb" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__vcs__cb" kindref="compound">bt_vcs_cb</ref><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Volume<sp/>Control<sp/>Service<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="structbt__vcs__cb_1a70eb1734eb43759f70d5af0199a0f80f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__vcs_1ga53b3c22be0429629abccc01303541fc7" kindref="member">bt_vcs_state_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__vcs__cb_1a70eb1734eb43759f70d5af0199a0f80f" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="190" refid="structbt__vcs__cb_1ae63d2fd51d6840c133fce214ef60e707" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__vcs_1gafff0371ce0499bb215acfa09ef8fbc70" kindref="member">bt_vcs_flags_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__vcs__cb_1ae63d2fd51d6840c133fce214ef60e707" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_BT_VCS_CLIENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__vcs_1ga18df0c87d86afc3228396b8b704c6904" kindref="member">bt_vcs_discover_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discover;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__vcs_1gac440ff05efc419a16ed77821f09ab114" kindref="member">bt_vcs_write_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vol_down;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__vcs_1gac440ff05efc419a16ed77821f09ab114" kindref="member">bt_vcs_write_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vol_up;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__vcs_1gac440ff05efc419a16ed77821f09ab114" kindref="member">bt_vcs_write_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mute;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__vcs_1gac440ff05efc419a16ed77821f09ab114" kindref="member">bt_vcs_write_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unmute;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__vcs_1gac440ff05efc419a16ed77821f09ab114" kindref="member">bt_vcs_write_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vol_down_unmute;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__vcs_1gac440ff05efc419a16ed77821f09ab114" kindref="member">bt_vcs_write_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vol_up_unmute;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__vcs_1gac440ff05efc419a16ed77821f09ab114" kindref="member">bt_vcs_write_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vol_set;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Volume<sp/>Offset<sp/>Control<sp/>Service<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__vocs__cb" kindref="compound">bt_vocs_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vocs_cb;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Audio<sp/>Input<sp/>Control<sp/>Service<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__aics__cb" kindref="compound">bt_aics_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aics_cb;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_BT_VCS_CLIENT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="group__bt__gatt__vcs_1ga6bead6f3ee5b372ea5182b4fc7d82710" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga6bead6f3ee5b372ea5182b4fc7d82710" kindref="member">bt_vcs_discover</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_conn<sp/>*conn,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>**vcs);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="group__bt__gatt__vcs_1gaa0553de76350a08095b6e9df16c0286b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gaa0553de76350a08095b6e9df16c0286b" kindref="member">bt_vcs_vol_step_set</ref>(<ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>volume_step);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="group__bt__gatt__vcs_1gad17753ff531445cd032ecca6fad64aff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gad17753ff531445cd032ecca6fad64aff" kindref="member">bt_vcs_vol_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="group__bt__gatt__vcs_1ga9cb12441223ff465d3f6af0e59ac5700" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga9cb12441223ff465d3f6af0e59ac5700" kindref="member">bt_vcs_flags_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="group__bt__gatt__vcs_1ga889e8e74e19a9f56c2bb3ea00bb3091b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga889e8e74e19a9f56c2bb3ea00bb3091b" kindref="member">bt_vcs_vol_down</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="group__bt__gatt__vcs_1ga19c6073c2068d50ea1f5992b81999e3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga19c6073c2068d50ea1f5992b81999e3d" kindref="member">bt_vcs_vol_up</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="group__bt__gatt__vcs_1ga8cbdf8e0c8c50a26e5dc0bce561ab0e3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga8cbdf8e0c8c50a26e5dc0bce561ab0e3" kindref="member">bt_vcs_unmute_vol_down</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="group__bt__gatt__vcs_1gaa048d78e127586b3a13be74944dc6f52" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gaa048d78e127586b3a13be74944dc6f52" kindref="member">bt_vcs_unmute_vol_up</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="group__bt__gatt__vcs_1gaee41adaa10054180b4932fbaca9ab369" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gaee41adaa10054180b4932fbaca9ab369" kindref="member">bt_vcs_vol_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>volume);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="group__bt__gatt__vcs_1ga5eba1a8accdec624ed9b6f0ece77a74a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga5eba1a8accdec624ed9b6f0ece77a74a" kindref="member">bt_vcs_unmute</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="group__bt__gatt__vcs_1ga5441c9ccd9f3eea1afdada5d820b7b74" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga5441c9ccd9f3eea1afdada5d820b7b74" kindref="member">bt_vcs_mute</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="group__bt__gatt__vcs_1gaa4b114f2a839cee2e429a0c0b1e83e90" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gaa4b114f2a839cee2e429a0c0b1e83e90" kindref="member">bt_vcs_vocs_state_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*inst);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="group__bt__gatt__vcs_1ga983272d4c4c9daf228340815cb97e955" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga983272d4c4c9daf228340815cb97e955" kindref="member">bt_vcs_vocs_location_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*inst);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="group__bt__gatt__vcs_1gab2db58af4372a951963fcd6608737740" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gab2db58af4372a951963fcd6608737740" kindref="member">bt_vcs_vocs_location_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*inst,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>location);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="group__bt__gatt__vcs_1ga513f2cb1309887ce2a23169d6d0c7286" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga513f2cb1309887ce2a23169d6d0c7286" kindref="member">bt_vcs_vocs_state_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*inst,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1afe270aee8d96ad7f279a4020b9d58bdf" kindref="member">int16_t</ref><sp/>offset);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="group__bt__gatt__vcs_1gafd9734e2e2b563be150accc310d8d4b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gafd9734e2e2b563be150accc310d8d4b0" kindref="member">bt_vcs_vocs_description_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*inst);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="group__bt__gatt__vcs_1gaf7b6e1b591ee19c5209b7a63c35cf5ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gaf7b6e1b591ee19c5209b7a63c35cf5ef" kindref="member">bt_vcs_vocs_description_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*inst,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbt__aics__cb_1ad37ae465600fa2e3c1868f0da07fd31a" kindref="member">description</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="group__bt__gatt__vcs_1ga3ca24d092971116925f2b089747f1f70" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga3ca24d092971116925f2b089747f1f70" kindref="member">bt_vcs_aics_deactivate</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="group__bt__gatt__vcs_1gaafa987e109c9ebc40c6ba93626b32a4a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gaafa987e109c9ebc40c6ba93626b32a4a" kindref="member">bt_vcs_aics_activate</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="group__bt__gatt__vcs_1gafe1657b863b3046452263273fbac150d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gafe1657b863b3046452263273fbac150d" kindref="member">bt_vcs_aics_state_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="group__bt__gatt__vcs_1ga3a8e16672e742cec127515edd23d7adc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga3a8e16672e742cec127515edd23d7adc" kindref="member">bt_vcs_aics_gain_setting_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="group__bt__gatt__vcs_1ga23bf61d551b5197a201468cd1673c46d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga23bf61d551b5197a201468cd1673c46d" kindref="member">bt_vcs_aics_type_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="group__bt__gatt__vcs_1gaa4cc4afa8db9fab1832584f362324961" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gaa4cc4afa8db9fab1832584f362324961" kindref="member">bt_vcs_aics_status_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="group__bt__gatt__vcs_1gaf0afc5167ad4ba12d2e19f413ba3350c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gaf0afc5167ad4ba12d2e19f413ba3350c" kindref="member">bt_vcs_aics_mute</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="group__bt__gatt__vcs_1ga184430ce198b53d87f16c6d7f1c78daf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga184430ce198b53d87f16c6d7f1c78daf" kindref="member">bt_vcs_aics_unmute</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="group__bt__gatt__vcs_1ga1cee8ed0ef8915fef3e60d1ab589cd7f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga1cee8ed0ef8915fef3e60d1ab589cd7f" kindref="member">bt_vcs_aics_manual_gain_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="group__bt__gatt__vcs_1gaa5ac86708587635e03db65994be2db4a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gaa5ac86708587635e03db65994be2db4a" kindref="member">bt_vcs_aics_automatic_gain_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="group__bt__gatt__vcs_1gafee17d903e26e44dffeefae6c1a64577" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gafee17d903e26e44dffeefae6c1a64577" kindref="member">bt_vcs_aics_gain_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref><sp/>gain);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="515" refid="group__bt__gatt__vcs_1ga04c6f9d12804a004c4251906f13f3d10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1ga04c6f9d12804a004c4251906f13f3d10" kindref="member">bt_vcs_aics_description_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="group__bt__gatt__vcs_1gaafbfcb9069c482a23677c8c0c882084e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gaafbfcb9069c482a23677c8c0c882084e" kindref="member">bt_vcs_aics_description_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vcs<sp/>*vcs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbt__aics__cb_1ad37ae465600fa2e3c1868f0da07fd31a" kindref="member">description</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="group__bt__gatt__vcs_1gac903056ad26852989782cdc77252e354" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vcs_1gac903056ad26852989782cdc77252e354" kindref="member">bt_vcs_client_cb_register</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__vcs__cb" kindref="compound">bt_vcs_cb</ref><sp/>*cb);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_BLUETOOTH_SERVICES_VCS_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/bluetooth/audio/vcs.h"/>
  </compounddef>
</doxygen>
