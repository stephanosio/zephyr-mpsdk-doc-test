<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="threads_2no-multithreading_2src_2main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes local="no">zephyr.h</includes>
    <includes local="no">device.h</includes>
    <includes refid="ztest_8h" local="no">ztest.h</includes>
    <incdepgraph>
      <node id="18">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="67">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="66">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="30">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="37">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="39">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="35">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="33">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="41">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="42">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="38">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="36">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="40">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="76">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="46">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="52">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="29">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="43">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="24">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="6">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="20">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="87">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="88">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="14">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="10">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="12">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="65">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="89">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="82">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="4">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="16">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/threads/no-multithreading/src/main.c</label>
        <link refid="threads_2no-multithreading_2src_2main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>alloca.h</label>
      </node>
      <node id="69">
        <label>arch/cpu.h</label>
      </node>
      <node id="3">
        <label>device.h</label>
      </node>
      <node id="32">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="31">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="44">
        <label>kernel.h</label>
      </node>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="85">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="90">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="91">
        <label>tc_util.h</label>
      </node>
      <node id="2">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="threads_2no-multithreading_2src_2main_8c_1a6ec36e2e7b825b6418b822c9d0374c92" prot="public" static="no">
        <name>SYS_INIT_CREATE</name>
        <param><defname>level</defname></param>
        <initializer>	static int pre_kernel_##level##_init_func(const struct <ref refid="structdevice" kindref="compound">device</ref> *dev) \
	{ \
		ARG_UNUSED(dev); \
		if (<ref refid="threads_2no-multithreading_2src_2main_8c_1a6ab65ccee1cbe8b9982633edb0ed2743" kindref="member">init_order</ref> != _SYS_INIT_LEVEL_##level &amp;&amp; <ref refid="threads_2no-multithreading_2src_2main_8c_1aec9f3db706da2c72c705c35fa82c364c" kindref="member">sys_init_result</ref> == 0) { \
			<ref refid="threads_2no-multithreading_2src_2main_8c_1aec9f3db706da2c72c705c35fa82c364c" kindref="member">sys_init_result</ref> = -1; \
			return -<ref refid="group__system__errno_1ga70979f50f9c83e5aebab3d6a1bd4cf35" kindref="member">EIO</ref>; \
		} \
		<ref refid="threads_2no-multithreading_2src_2main_8c_1a6ab65ccee1cbe8b9982633edb0ed2743" kindref="member">init_order</ref>++; \
		return 0;\
	} \
	<ref refid="early__sleep_2src_2main_8c_1a080adab9e7b88edfe90c6d2115d9d06e" kindref="member">SYS_INIT</ref>(pre_kernel_##level##_init_func, level, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/threads/no-multithreading/src/main.c" line="78" column="9" bodyfile="tests/kernel/threads/no-multithreading/src/main.c" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="threads_2no-multithreading_2src_2main_8c_1a6ab65ccee1cbe8b9982633edb0ed2743" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int init_order</definition>
        <argsstring></argsstring>
        <name>init_order</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/threads/no-multithreading/src/main.c" line="91" column="12" bodyfile="tests/kernel/threads/no-multithreading/src/main.c" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="threads_2no-multithreading_2src_2main_8c_1aec9f3db706da2c72c705c35fa82c364c" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int sys_init_result</definition>
        <argsstring></argsstring>
        <name>sys_init_result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/threads/no-multithreading/src/main.c" line="92" column="12" bodyfile="tests/kernel/threads/no-multithreading/src/main.c" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="threads_2no-multithreading_2src_2main_8c_1a6ec12c0c67a6d150a73f3a9c92331b13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_k_busy_wait</definition>
        <argsstring>(void)</argsstring>
        <name>test_k_busy_wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/threads/no-multithreading/src/main.c" line="11" column="6" bodyfile="tests/kernel/threads/no-multithreading/src/main.c" bodystart="11" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="threads_2no-multithreading_2src_2main_8c_1a8adf7c429e15c013df86031bec51d986" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void timeout_handler</definition>
        <argsstring>(struct k_timer *timer)</argsstring>
        <name>timeout_handler</name>
        <param>
          <type>struct k_timer *</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/threads/no-multithreading/src/main.c" line="33" column="13" bodyfile="tests/kernel/threads/no-multithreading/src/main.c" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="threads_2no-multithreading_2src_2main_8c_1a597040f31ccadee135fddcd570915d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_TIMER_DEFINE</definition>
        <argsstring>(timer, timeout_handler, NULL)</argsstring>
        <name>K_TIMER_DEFINE</name>
        <param>
          <type><ref refid="test__sched__timeslice__and__lock_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref></type>
        </param>
        <param>
          <type><ref refid="threads_2no-multithreading_2src_2main_8c_1a8adf7c429e15c013df86031bec51d986" kindref="member">timeout_handler</ref></type>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/threads/no-multithreading/src/main.c" line="40" column="1" declfile="tests/kernel/threads/no-multithreading/src/main.c" declline="40" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="threads_2no-multithreading_2src_2main_8c_1a7864aa8cd88428bfb242c9bf6c25ab95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_irq_locking</definition>
        <argsstring>(void)</argsstring>
        <name>test_irq_locking</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/threads/no-multithreading/src/main.c" line="42" column="6" bodyfile="tests/kernel/threads/no-multithreading/src/main.c" bodystart="42" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="threads_2no-multithreading_2src_2main_8c_1af62ec92379ceea524cd56e09b5c5c095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_cpu_idle</definition>
        <argsstring>(void)</argsstring>
        <name>test_cpu_idle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/threads/no-multithreading/src/main.c" line="59" column="6" bodyfile="tests/kernel/threads/no-multithreading/src/main.c" bodystart="59" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="threads_2no-multithreading_2src_2main_8c_1af2de6cd2b60b623046744e6314a5efb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FOR_EACH</definition>
        <argsstring>(SYS_INIT_CREATE,(;), PRE_KERNEL_1, PRE_KERNEL_2, POST_KERNEL)</argsstring>
        <name>FOR_EACH</name>
        <param>
          <type><ref refid="threads_2no-multithreading_2src_2main_8c_1a6ec36e2e7b825b6418b822c9d0374c92" kindref="member">SYS_INIT_CREATE</ref></type>
        </param>
        <param>
          <type>(;)</type>
        </param>
        <param>
          <type>PRE_KERNEL_1</type>
        </param>
        <param>
          <type>PRE_KERNEL_2</type>
        </param>
        <param>
          <type>POST_KERNEL</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/threads/no-multithreading/src/main.c" line="94" column="1" declfile="tests/kernel/threads/no-multithreading/src/main.c" declline="94" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="threads_2no-multithreading_2src_2main_8c_1a4b032702d1c7d75ee05a6ef8c0ede79f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sys_init</definition>
        <argsstring>(void)</argsstring>
        <name>test_sys_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/threads/no-multithreading/src/main.c" line="96" column="6" bodyfile="tests/kernel/threads/no-multithreading/src/main.c" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="threads_2no-multithreading_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_main</definition>
        <argsstring>(void)</argsstring>
        <name>test_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>test case main entry </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/threads/no-multithreading/src/main.c" line="101" column="6" bodyfile="tests/kernel/threads/no-multithreading/src/main.c" bodystart="101" bodyend="111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;device.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztest_8h" kindref="compound">ztest.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="threads_2no-multithreading_2src_2main_8c_1a6ec12c0c67a6d150a73f3a9c92331b13" kindref="member">test_k_busy_wait</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref><sp/><ref refid="timer_2starve_2src_2main_8c_1ad2a5acb9b13b943cac9ef0b8c8370100" kindref="member">now</ref><sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>watchdog<sp/>=<sp/><ref refid="ztest_8h_1a7a83d391980eb6458676ae2c6c553e91" kindref="member">CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>()<sp/>!=<sp/><ref refid="timer_2starve_2src_2main_8c_1ad2a5acb9b13b943cac9ef0b8c8370100" kindref="member">now</ref>)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>until<sp/>uptime<sp/>progresses<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>watchdog--;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(watchdog<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>progress<sp/>in<sp/>uptime&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2starve_2src_2main_8c_1ad2a5acb9b13b943cac9ef0b8c8370100" kindref="member">now</ref><sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>k_busy_wait<sp/>is<sp/>working<sp/>as<sp/>expected.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait</ref>(10000);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref><sp/>diff<sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>()<sp/>-<sp/><ref refid="timer_2starve_2src_2main_8c_1ad2a5acb9b13b943cac9ef0b8c8370100" kindref="member">now</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga50ebeb6649212f47ca2092186c32fddd" kindref="member">zassert_within</ref>(diff,<sp/>10,<sp/>2,<sp/>NULL);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="threads_2no-multithreading_2src_2main_8c_1a8adf7c429e15c013df86031bec51d986" kindref="member">timeout_handler</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_timer<sp/>*<ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*<ref refid="semaphore_2sys__sem_2src_2main_8c_1a194186a621980a6095d787bf06099591" kindref="member">flag</ref><sp/>=<sp/><ref refid="group__timer__apis_1ga19a7d99a01a83828efd7f0d3bf2dd358" kindref="member">k_timer_user_data_get</ref>(<ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="semaphore_2sys__sem_2src_2main_8c_1a194186a621980a6095d787bf06099591" kindref="member">flag</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="obj__tracking_2src_2main_8c_1ad8c286584d1c6cae5e5866e4af529b6b" kindref="member">K_TIMER_DEFINE</ref>(<ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>,<sp/><ref refid="threads_2no-multithreading_2src_2main_8c_1a8adf7c429e15c013df86031bec51d986" kindref="member">timeout_handler</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="threads_2no-multithreading_2src_2main_8c_1a7864aa8cd88428bfb242c9bf6c25ab95" kindref="member">test_irq_locking</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>timeout_run<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1gadba1884961e790dd9c5d567de91cc7e2" kindref="member">k_timer_user_data_set</ref>(&amp;<ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;timeout_run);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga3ba70e9f059ff52fd2057ab89ea7f2ee" kindref="member">k_timer_start</ref>(&amp;<ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(10),<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref><sp/>=<sp/><ref refid="group__isr__apis_1ga19fdde73c3b02fcca6cf1d1e67631228" kindref="member">irq_lock</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait</ref>(15000);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(timeout_run,<sp/></highlight><highlight class="stringliteral">&quot;Timeout<sp/>should<sp/>not<sp/>expire<sp/>because<sp/>irq<sp/>is<sp/>locked&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1ga646045943b3b2a130738bcc48867bf57" kindref="member">irq_unlock</ref>(<ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(timeout_run,<sp/></highlight><highlight class="stringliteral">&quot;Timeout<sp/>should<sp/>expire<sp/>because<sp/>irq<sp/>got<sp/>unlocked&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="threads_2no-multithreading_2src_2main_8c_1af62ec92379ceea524cd56e09b5c5c095" kindref="member">test_cpu_idle</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>timeout_run<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref><sp/><ref refid="timer_2starve_2src_2main_8c_1ad2a5acb9b13b943cac9ef0b8c8370100" kindref="member">now</ref>,<sp/>diff;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1gadba1884961e790dd9c5d567de91cc7e2" kindref="member">k_timer_user_data_set</ref>(&amp;<ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;timeout_run);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2starve_2src_2main_8c_1ad2a5acb9b13b943cac9ef0b8c8370100" kindref="member">now</ref><sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>timer<sp/>and<sp/>go<sp/>to<sp/>idle,<sp/>cpu<sp/>should<sp/>sleep<sp/>until<sp/>it<sp/>is<sp/>waken<sp/>up</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>by<sp/>sys<sp/>clock<sp/>interrupt.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga3ba70e9f059ff52fd2057ab89ea7f2ee" kindref="member">k_timer_start</ref>(&amp;<ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(10),<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__cpu__idle__apis_1ga7b25e1bed511a813b32fbd0f91b09356" kindref="member">k_cpu_idle</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>()<sp/>-<sp/><ref refid="timer_2starve_2src_2main_8c_1ad2a5acb9b13b943cac9ef0b8c8370100" kindref="member">now</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(timeout_run,<sp/></highlight><highlight class="stringliteral">&quot;Timeout<sp/>should<sp/>expire&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga50ebeb6649212f47ca2092186c32fddd" kindref="member">zassert_within</ref>(diff,<sp/>10,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>time<sp/>passed:<sp/>%d<sp/>ms&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)diff);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_INIT_CREATE(level)<sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>int<sp/>pre_kernel_##level##_init_func(const<sp/>struct<sp/>device<sp/>*dev)<sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(dev);<sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(init_order<sp/>!=<sp/>_SYS_INIT_LEVEL_##level<sp/>&amp;&amp;<sp/>sys_init_result<sp/>==<sp/>0)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys_init_result<sp/>=<sp/>-1;<sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>-EIO;<sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_order++;<sp/>\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SYS_INIT(pre_kernel_##level##_init_func,<sp/>level,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="threads_2no-multithreading_2src_2main_8c_1a6ab65ccee1cbe8b9982633edb0ed2743" kindref="member">init_order</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="threads_2no-multithreading_2src_2main_8c_1aec9f3db706da2c72c705c35fa82c364c" kindref="member">sys_init_result</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><ref refid="threads_2no-multithreading_2src_2main_8c_1af2de6cd2b60b623046744e6314a5efb6" kindref="member">FOR_EACH</ref>(<ref refid="threads_2no-multithreading_2src_2main_8c_1a6ec36e2e7b825b6418b822c9d0374c92" kindref="member">SYS_INIT_CREATE</ref>,<sp/>(;),<sp/>PRE_KERNEL_1,<sp/>PRE_KERNEL_2,<sp/>POST_KERNEL);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="threads_2no-multithreading_2src_2main_8c_1a4b032702d1c7d75ee05a6ef8c0ede79f" kindref="member">test_sys_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="threads_2no-multithreading_2src_2main_8c_1a6ab65ccee1cbe8b9982633edb0ed2743" kindref="member">init_order</ref>,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;SYS_INIT<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="common_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" kindref="member">test_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" kindref="member">ztest_test_suite</ref>(no_multithreading,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="threads_2no-multithreading_2src_2main_8c_1a6ec12c0c67a6d150a73f3a9c92331b13" kindref="member">test_k_busy_wait</ref>),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="threads_2no-multithreading_2src_2main_8c_1a7864aa8cd88428bfb242c9bf6c25ab95" kindref="member">test_irq_locking</ref>),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="threads_2no-multithreading_2src_2main_8c_1af62ec92379ceea524cd56e09b5c5c095" kindref="member">test_cpu_idle</ref>),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="threads_2no-multithreading_2src_2main_8c_1a4b032702d1c7d75ee05a6ef8c0ede79f" kindref="member">test_sys_init</ref>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" kindref="member">ztest_run_test_suite</ref>(no_multithreading);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/kernel/threads/no-multithreading/src/main.c"/>
  </compounddef>
</doxygen>
