<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structhash__pkt" kind="struct" language="C++" prot="public">
    <compoundname>hash_pkt</compoundname>
    <includes refid="hash_8h" local="no">hash.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structhash__pkt_1a80d73d3c64718a62213a7fb857e3c5ce" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
        <definition>uint8_t* hash_pkt::in_buf</definition>
        <argsstring></argsstring>
        <name>in_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start address of input buffer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/hash.h" line="91" column="9" bodyfile="include/crypto/hash.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhash__pkt_1a06c516ec59f233a2090fb37eb0476652" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t hash_pkt::in_len</definition>
        <argsstring></argsstring>
        <name>in_len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bytes to be operated upon </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/hash.h" line="94" column="9" bodyfile="include/crypto/hash.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhash__pkt_1ac86c2221c6ebe7c3e568c6d72b91ff43" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
        <definition>uint8_t* hash_pkt::out_buf</definition>
        <argsstring></argsstring>
        <name>out_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start of the output buffer, to be allocated by the application. Can be NULL for in-place ops. To be populated with contents by the driver on return from op / async callback. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/hash.h" line="101" column="9" bodyfile="include/crypto/hash.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhash__pkt_1ab5b3ffd87a11ce3838178b2e652d49b9" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structhash__ctx" kindref="compound">hash_ctx</ref> *</type>
        <definition>struct hash_ctx* hash_pkt::ctx</definition>
        <argsstring></argsstring>
        <name>ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Context this packet relates to. This can be useful to get the session details, especially for async ops. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/hash.h" line="107" column="15" bodyfile="include/crypto/hash.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Structure encoding IO parameters of a hash operation.</para>
<para>The fields which has not been explicitly called out has to be filled up by the app before calling <ref refid="group__crypto__hash_1ga761e5d0bda9937d7fa4550c876a1c387" kindref="member">hash_compute()</ref>. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>device</label>
        <link refid="structdevice"/>
        <childnode refid="4" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>device_state</label>
        <link refid="structdevice__state"/>
      </node>
      <node id="2">
        <label>hash_ctx</label>
        <link refid="structhash__ctx"/>
        <childnode refid="3" relation="usage">
          <edgelabel>device</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>hash_hndlr</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>hash_pkt</label>
        <link refid="structhash__pkt"/>
        <childnode refid="2" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/crypto/hash.h" line="88" column="1" bodyfile="include/crypto/hash.h" bodystart="88" bodyend="108"/>
    <listofallmembers>
      <member refid="structhash__pkt_1ab5b3ffd87a11ce3838178b2e652d49b9" prot="public" virt="non-virtual"><scope>hash_pkt</scope><name>ctx</name></member>
      <member refid="structhash__pkt_1a80d73d3c64718a62213a7fb857e3c5ce" prot="public" virt="non-virtual"><scope>hash_pkt</scope><name>in_buf</name></member>
      <member refid="structhash__pkt_1a06c516ec59f233a2090fb37eb0476652" prot="public" virt="non-virtual"><scope>hash_pkt</scope><name>in_len</name></member>
      <member refid="structhash__pkt_1ac86c2221c6ebe7c3e568c6d72b91ff43" prot="public" virt="non-virtual"><scope>hash_pkt</scope><name>out_buf</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
