<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__subsys__tracing__format__apis" kind="group">
    <compoundname>subsys_tracing_format_apis</compoundname>
    <title>Tracing format APIs</title>
    <innerclass refid="structtracing__data" prot="public">tracing_data</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__subsys__tracing__format__apis_1ga1a947f2e998d283b58a5e056f7edbb24" prot="public" static="no">
        <type>struct <ref refid="structtracing__data" kindref="compound">tracing_data</ref></type>
        <definition>typedef struct tracing_data tracing_data_t</definition>
        <argsstring></argsstring>
        <name>tracing_data_t</name>
        <briefdescription>
<para>A structure to represent tracing data format. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tracing/tracing_format.h" line="27" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__subsys__tracing__format__apis_1gaf372e7223a7be6f938cd6a0263815d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tracing_format_string</definition>
        <argsstring>(const char *str,...)</argsstring>
        <name>tracing_format_string</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Tracing a message in string format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String to format. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable length arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tracing/tracing_format.h" line="67" column="6" declfile="include/tracing/tracing_format.h" declline="67" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__subsys__tracing__format__apis_1gadb864c39916bc50bad341964fead14f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tracing_format_raw_data</definition>
        <argsstring>(uint8_t *data, uint32_t length)</argsstring>
        <name>tracing_format_raw_data</name>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Tracing a message in raw data format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw data to be traced. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw data length. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tracing/tracing_format.h" line="75" column="6" declfile="include/tracing/tracing_format.h" declline="75" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__subsys__tracing__format__apis_1ga4072def87e770f60de40062617e96256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tracing_format_data</definition>
        <argsstring>(tracing_data_t *tracing_data_array, uint32_t count)</argsstring>
        <name>tracing_format_data</name>
        <param>
          <type><ref refid="group__subsys__tracing__format__apis_1ga1a947f2e998d283b58a5e056f7edbb24" kindref="member">tracing_data_t</ref> *</type>
          <declname>tracing_data_array</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Tracing a message in tracing data format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tracing_data_array</parametername>
</parameternamelist>
<parameterdescription>
<para>Tracing_data format data array to be traced. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Tracing_data array data count. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tracing/tracing_format.h" line="83" column="6" declfile="include/tracing/tracing_format.h" declline="83" declcolumn="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__subsys__tracing__format__apis_1gac6aa3236d7aeb8c4a3f0c421899f74e6" prot="public" static="no">
        <name>TRACING_STRING</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>	do {								       \
		<ref refid="group__subsys__tracing__format__apis_1gaf372e7223a7be6f938cd6a0263815d44" kindref="member">tracing_format_string</ref>(fmt, ##__VA_ARGS__);		       \
	} while (<ref refid="stdbool_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>)</initializer>
        <briefdescription>
<para>Macro to trace a message in string format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>The format string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>The format arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tracing/tracing_format.h" line="35" column="9" bodyfile="include/tracing/tracing_format.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__subsys__tracing__format__apis_1ga5cf7507b0040325a4c04600fcdeb3b21" prot="public" static="no">
        <name>TRACING_FORMAT_DATA</name>
        <param><defname>x</defname></param>
        <initializer>	((struct <ref refid="structtracing__data" kindref="compound">tracing_data</ref>){.<ref refid="test__stack__fail_8c_1a4bb6fa6c719fd9021449009ab8befc04" kindref="member">data</ref> = (<ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *)&amp;(x), .length = sizeof((x))})</initializer>
        <briefdescription>
<para>Macro to format data to tracing data format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Data field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tracing/tracing_format.h" line="45" column="9" bodyfile="include/tracing/tracing_format.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__subsys__tracing__format__apis_1ga1b9265a15c577024edd687edc368ca82" prot="public" static="no">
        <name>TRACING_DATA</name>
        <param><defname>...</defname></param>
        <initializer>	do {								       \
		struct <ref refid="structtracing__data" kindref="compound">tracing_data</ref> arg[] = {__VA_ARGS__};		       \
									       \
		<ref refid="group__subsys__tracing__format__apis_1ga4072def87e770f60de40062617e96256" kindref="member">tracing_format_data</ref>(arg, sizeof(arg) /			       \
				    sizeof(struct <ref refid="structtracing__data" kindref="compound">tracing_data</ref>));	       \
	} while (<ref refid="stdbool_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>)</initializer>
        <briefdescription>
<para>Macro to trace a message in tracing data format. </para>
        </briefdescription>
        <detaileddescription>
<para>All the parameters should be struct <ref refid="structtracing__data" kindref="compound">tracing_data</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tracing/tracing_format.h" line="53" column="9" bodyfile="include/tracing/tracing_format.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Tracing format APIs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
