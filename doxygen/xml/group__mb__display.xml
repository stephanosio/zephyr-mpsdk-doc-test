<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__mb__display" kind="group">
    <compoundname>mb_display</compoundname>
    <title>BBC micro:bit display APIs</title>
    <innerclass refid="structmb__image" prot="public">mb_image</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__mb__display_1ga750a177cffbb90ab38392d9ebad9a8eb" prot="public" static="no" strong="no">
        <type></type>
        <name>mb_display_mode</name>
        <enumvalue id="group__mb__display_1gga750a177cffbb90ab38392d9ebad9a8eba804d6d635a1525c85fd4bd349a56fff5" prot="public">
          <name>MB_DISPLAY_MODE_DEFAULT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Default mode (&quot;single&quot; for images, &quot;scroll&quot; for text). </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mb__display_1gga750a177cffbb90ab38392d9ebad9a8eba4cc5223f0f4d28c9bb7c8be5ee6a744a" prot="public">
          <name>MB_DISPLAY_MODE_SINGLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Display images sequentially, one at a time. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mb__display_1gga750a177cffbb90ab38392d9ebad9a8ebaa9e5d94518766711673e3c1e7b513e69" prot="public">
          <name>MB_DISPLAY_MODE_SCROLL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Display images by scrolling. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mb__display_1gga750a177cffbb90ab38392d9ebad9a8ebac96bf2e5073ffa9ec8521b67c8d581cc" prot="public">
          <name>MB_DISPLAY_FLAG_LOOP</name>
          <initializer>= BIT(16)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Loop back to the beginning when reaching the last image. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Display mode. </para>
        </briefdescription>
        <detaileddescription>
<para>First 16 bits are reserved for modes, last 16 for flags. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/mb_display.h" line="55" column="1" bodyfile="include/display/mb_display.h" bodystart="55" bodyend="69"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__mb__display_1ga94e3eadd1cf386b8d9494ccfa8afaa40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct mb_display *</type>
        <definition>struct mb_display * mb_display_get</definition>
        <argsstring>(void)</argsstring>
        <name>mb_display_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get a pointer to the BBC micro:bit display object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to display object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/mb_display.h" line="114" column="17" declfile="include/display/mb_display.h" declline="114" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__mb__display_1ga2a6e20d57d0d65033281dd7c3ea19126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mb_display_image</definition>
        <argsstring>(struct mb_display *disp, uint32_t mode, int32_t duration, const struct mb_image *img, uint8_t img_count)</argsstring>
        <name>mb_display_image</name>
        <param>
          <type>struct mb_display *</type>
          <declname>disp</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>duration</declname>
        </param>
        <param>
          <type>const struct <ref refid="structmb__image" kindref="compound">mb_image</ref> *</type>
          <declname>img</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>img_count</declname>
        </param>
        <briefdescription>
<para>Display one or more images on the BBC micro:bit LED display. </para>
        </briefdescription>
        <detaileddescription>
<para>This function takes an array of one or more images and renders them sequentially on the micro:bit display. The call is asynchronous, i.e. the processing of the display happens in the background. If there is another image being displayed it will be canceled and the new one takes over.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>disp</parametername>
</parameternamelist>
<parameterdescription>
<para>Display object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>One of the MB_DISPLAY_MODE_* options. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>Duration how long to show each image (in milliseconds), or <ref refid="time__units_8h_1a9f9c4c41f62c7578a30209475201efed" kindref="member">SYS_FOREVER_MS</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of image bitmaps (struct <ref refid="structmb__image" kindref="compound">mb_image</ref> objects). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of images in &apos;img&apos; array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/mb_display.h" line="132" column="6" declfile="include/display/mb_display.h" declline="132" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__mb__display_1ga993a6a0225206f53170d25d9177c1225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mb_display_print</definition>
        <argsstring>(struct mb_display *disp, uint32_t mode, int32_t duration, const char *fmt,...)</argsstring>
        <name>mb_display_print</name>
        <param>
          <type>struct mb_display *</type>
          <declname>disp</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>duration</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Print a string of characters on the BBC micro:bit LED display. </para>
        </briefdescription>
        <detaileddescription>
<para>This function takes a printf-style format string and outputs it in a scrolling fashion to the display.</para>
<para>The call is asynchronous, i.e. the processing of the display happens in the background. If there is another image or string being displayed it will be canceled and the new one takes over.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>disp</parametername>
</parameternamelist>
<parameterdescription>
<para>Display object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>One of the MB_DISPLAY_MODE_* options. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>Duration how long to show each character (in milliseconds), or <ref refid="time__units_8h_1a9f9c4c41f62c7578a30209475201efed" kindref="member">SYS_FOREVER_MS</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>printf-style format string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional list of format arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/mb_display.h" line="152" column="7" declfile="include/display/mb_display.h" declline="152" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__mb__display_1gad15b3635993007d8aad9364cbe29311b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mb_display_stop</definition>
        <argsstring>(struct mb_display *disp)</argsstring>
        <name>mb_display_stop</name>
        <param>
          <type>struct mb_display *</type>
          <declname>disp</declname>
        </param>
        <briefdescription>
<para>Stop the ongoing display of an image. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>disp</parametername>
</parameternamelist>
<parameterdescription>
<para>Display object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/mb_display.h" line="161" column="6" declfile="include/display/mb_display.h" declline="161" declcolumn="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__mb__display_1ga529a5650acaf699b23b4b4234127cf2c" prot="public" static="no">
        <name>MB_IMAGE</name>
        <param><defname>_rows...</defname></param>
        <initializer>{ .<ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref> = { _rows } }</initializer>
        <briefdescription>
<para>Generate an image object from a given array rows/columns. </para>
        </briefdescription>
        <detaileddescription>
<para>This helper takes an array of 5 rows, each consisting of 5 0/1 values which correspond to the columns of that row. The value 0 means the pixel is disabled whereas a 1 means the pixel is enabled.</para>
<para>The pixels go from left to right and top to bottom, i.e. top-left corner is the first row&apos;s first value, top-right is the first rows last value, and bottom-right corner is the last value of the last (5th) row. As an example, the following would create a smiley face image:</para>
<para><preformatted>
static const struct <ref refid="structmb__image" kindref="compound">mb_image</ref> smiley = MB_IMAGE({ 0, 1, 0, 1, 0 },
                                          { 0, 1, 0, 1, 0 },
                                          { 0, 0, 0, 0, 0 },
                                          { 1, 0, 0, 0, 1 },
                                          { 0, 1, 1, 1, 0 });
</preformatted></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Each of the 5 rows represented as a 5-value column array.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Image bitmap that can be passed e.g. to <ref refid="group__mb__display_1ga2a6e20d57d0d65033281dd7c3ea19126" kindref="member">mb_display_image()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/mb_display.h" line="96" column="9" bodyfile="include/display/mb_display.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>BBC micro:bit display APIs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
