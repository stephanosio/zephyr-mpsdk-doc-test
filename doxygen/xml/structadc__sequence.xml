<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structadc__sequence" kind="struct" language="C++" prot="public">
    <compoundname>adc_sequence</compoundname>
    <includes refid="drivers_2adc_8h" local="no">adc.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structadc__sequence_1a379c6f92153dfa97439d39cbef222451" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structadc__sequence__options" kindref="compound">adc_sequence_options</ref> *</type>
        <definition>const struct adc_sequence_options* adc_sequence::options</definition>
        <argsstring></argsstring>
        <name>options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to a structure defining additional options for the sequence. If NULL, the sequence consists of a single sampling. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/adc.h" line="270" column="33" bodyfile="include/drivers/adc.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structadc__sequence_1a5c497c4a5de20e8591063ca8661f79c1" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t adc_sequence::channels</definition>
        <argsstring></argsstring>
        <name>channels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bit-mask indicating the channels to be included in each sampling of this sequence. All selected channels must be configured with <ref refid="group__adc__interface_1ga7bc0488b2d08ae2ee4996c0eed11f0bf" kindref="member">adc_channel_setup()</ref> before they are used in a sequence. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/adc.h" line="278" column="10" bodyfile="include/drivers/adc.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structadc__sequence_1a5df0ee0e6d3215aa052f108476bd57ec" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* adc_sequence::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to a buffer where the samples are to be written. Samples from subsequent samplings are written sequentially in the buffer. The number of samples written for each sampling is determined by the number of channels selected in the &quot;channels&quot; field. The buffer must be of an appropriate size, taking into account the number of selected channels and the ADC resolution used, as well as the number of samplings contained in the sequence. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/adc.h" line="289" column="6" bodyfile="include/drivers/adc.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structadc__sequence_1a8e1bc9a4361e274bbdaedeb3151b71e5" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t adc_sequence::buffer_size</definition>
        <argsstring></argsstring>
        <name>buffer_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies the actual size of the buffer pointed by the &quot;buffer&quot; field (in bytes). The driver must ensure that samples are not written beyond the limit and it must return an error if the buffer turns out to be not large enough to hold all the requested samples. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/adc.h" line="297" column="8" bodyfile="include/drivers/adc.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structadc__sequence_1ad5480691be25ed9ee81130b775743125" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t adc_sequence::resolution</definition>
        <argsstring></argsstring>
        <name>resolution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ADC resolution. For single-ended channels the sample values are from range: 0 .. 2^resolution - 1, for differential ones:<itemizedlist>
<listitem><para>2^(resolution-1) .. 2^(resolution-1) - 1. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/adc.h" line="306" column="9" bodyfile="include/drivers/adc.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structadc__sequence_1a233e8b20b57bb2fdbebf2c85f076c802" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t adc_sequence::oversampling</definition>
        <argsstring></argsstring>
        <name>oversampling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Oversampling setting. Each sample is averaged from 2^oversampling conversion results. This feature may be unsupported by a given ADC hardware, or in a specific mode (e.g. when sampling multiple channels). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/adc.h" line="314" column="9" bodyfile="include/drivers/adc.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structadc__sequence_1a6023e3bec29deaa11b44c4df40eb7b04" prot="public" static="no" mutable="no">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool adc_sequence::calibrate</definition>
        <argsstring></argsstring>
        <name>calibrate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform calibration before the reading is taken if requested.</para>
<para>The impact of channel configuration on the calibration process is specific to the underlying hardware. ADC implementations that do not support calibration should ignore this flag. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/adc.h" line="324" column="6" bodyfile="include/drivers/adc.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Structure defining an ADC sampling sequence. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>adc_sequence</label>
        <link refid="structadc__sequence"/>
        <childnode refid="2" relation="usage">
          <edgelabel>options</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>adc_sequence_options</label>
        <link refid="structadc__sequence__options"/>
        <childnode refid="3" relation="usage">
          <edgelabel>callback</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>device</label>
        <link refid="structdevice"/>
        <childnode refid="4" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>device_state</label>
        <link refid="structdevice__state"/>
      </node>
    </collaborationgraph>
    <location file="include/drivers/adc.h" line="265" column="1" bodyfile="include/drivers/adc.h" bodystart="265" bodyend="325"/>
    <listofallmembers>
      <member refid="structadc__sequence_1a5df0ee0e6d3215aa052f108476bd57ec" prot="public" virt="non-virtual"><scope>adc_sequence</scope><name>buffer</name></member>
      <member refid="structadc__sequence_1a8e1bc9a4361e274bbdaedeb3151b71e5" prot="public" virt="non-virtual"><scope>adc_sequence</scope><name>buffer_size</name></member>
      <member refid="structadc__sequence_1a6023e3bec29deaa11b44c4df40eb7b04" prot="public" virt="non-virtual"><scope>adc_sequence</scope><name>calibrate</name></member>
      <member refid="structadc__sequence_1a5c497c4a5de20e8591063ca8661f79c1" prot="public" virt="non-virtual"><scope>adc_sequence</scope><name>channels</name></member>
      <member refid="structadc__sequence_1a379c6f92153dfa97439d39cbef222451" prot="public" virt="non-virtual"><scope>adc_sequence</scope><name>options</name></member>
      <member refid="structadc__sequence_1a233e8b20b57bb2fdbebf2c85f076c802" prot="public" virt="non-virtual"><scope>adc_sequence</scope><name>oversampling</name></member>
      <member refid="structadc__sequence_1ad5480691be25ed9ee81130b775743125" prot="public" virt="non-virtual"><scope>adc_sequence</scope><name>resolution</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
