<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="arm_2aarch32_2error_8h" kind="file" language="C++">
    <compoundname>error.h</compoundname>
    <includes refid="arch_2arm_2aarch32_2syscall_8h" local="no">arch/arm/aarch32/syscall.h</includes>
    <includes refid="arm_2aarch32_2exc_8h" local="no">arch/arm/aarch32/exc.h</includes>
    <includes refid="stdbool_8h" local="no">stdbool.h</includes>
    <includedby refid="arm_2aarch32_2arch_8h" local="no">include/arch/arm/aarch32/arch.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/arch/arm/aarch32/error.h</label>
        <link refid="arm_2aarch32_2error_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>arch/arm/aarch32/exc.h</label>
        <link refid="arm_2aarch32_2exc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>arch/arm/aarch32/misc.h</label>
        <link refid="arm_2aarch32_2misc_8h"/>
      </node>
      <node id="2">
        <label>arch/arm/aarch32/syscall.h</label>
        <link refid="arch_2arm_2aarch32_2syscall_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="5">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/arch/arm/aarch32/arch.h</label>
        <link refid="arm_2aarch32_2arch_8h"/>
      </node>
      <node id="1">
        <label>include/arch/arm/aarch32/error.h</label>
        <link refid="arm_2aarch32_2error_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
<para>ARM AArch32 public error handling. </para>
    </briefdescription>
    <detaileddescription>
<para>ARM AArch32-specific kernel error handling interface. Included by arm/arch.h. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2013-2014<sp/>Wind<sp/>River<sp/>Systems,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_ARCH_ARM_AARCH32_ERROR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_ARCH_ARM_AARCH32_ERROR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="arch_2arm_2aarch32_2syscall_8h" kindref="compound">arch/arm/aarch32/syscall.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="arm_2aarch32_2exc_8h" kindref="compound">arch/arm/aarch32/exc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdbool_8h" kindref="compound">stdbool.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_ARMV6_M_ARMV8_M_BASELINE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ARMv6<sp/>will<sp/>hard-fault<sp/>if<sp/>SVC<sp/>is<sp/>called<sp/>with<sp/>interrupts<sp/>locked.<sp/>Just</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>force<sp/>them<sp/>unlocked,<sp/>the<sp/>thread<sp/>is<sp/>in<sp/>an<sp/>undefined<sp/>state<sp/>anyway</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>On<sp/>ARMv7m<sp/>we<sp/>won&apos;t<sp/>get<sp/>a<sp/>HardFault,<sp/>but<sp/>if<sp/>interrupts<sp/>were<sp/>locked<sp/>the</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>thread<sp/>will<sp/>continue<sp/>executing<sp/>after<sp/>the<sp/>exception<sp/>and<sp/>forbid<sp/>PendSV<sp/>to</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>schedule<sp/>a<sp/>new<sp/>thread<sp/>until<sp/>they<sp/>are<sp/>unlocked<sp/>which<sp/>is<sp/>not<sp/>what<sp/>we<sp/>want.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>Force<sp/>them<sp/>unlocked<sp/>as<sp/>well.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_EXCEPT(reason_p)<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor">register<sp/>uint32_t<sp/>r0<sp/>__asm__(&quot;r0&quot;</highlight><highlight class="normal">)<sp/>=<sp/>reason_p;<sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="normal">do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>volatile<sp/>(<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;cpsie<sp/>i\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;svc<sp/>%[id]\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;r&quot;<sp/>(r0),<sp/>[id]<sp/>&quot;i&quot;<sp/>(_SVC_CALL_RUNTIME_EXCEPT)<sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;memory&quot;);<sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}<sp/>while<sp/>(false)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ARMV7_M_ARMV8_M_MAINLINE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_EXCEPT(reason_p)<sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>volatile<sp/>(<sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;eors.n<sp/>r0,<sp/>r0\n\t&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;msr<sp/>BASEPRI,<sp/>r0\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;mov<sp/>r0,<sp/>%[reason]\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;svc<sp/>%[id]\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>[reason]<sp/>&quot;i&quot;<sp/>(reason_p),<sp/>[id]<sp/>&quot;i&quot;<sp/>(_SVC_CALL_RUNTIME_EXCEPT)<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;memory&quot;);<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/>while<sp/>(false)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ARMV7_R)<sp/>||<sp/>defined(CONFIG_ARMV7_A)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>In<sp/>order<sp/>to<sp/>support<sp/>using<sp/>svc<sp/>for<sp/>an<sp/>exception<sp/>while<sp/>running<sp/>in<sp/>an</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>isr,<sp/>stack<sp/>$lr_svc<sp/>before<sp/>calling<sp/>svc.<sp/><sp/>While<sp/>exiting<sp/>the<sp/>isr,</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>z_check_stack_sentinel<sp/>is<sp/>called.<sp/><sp/>$lr_svc<sp/>contains<sp/>the<sp/>return<sp/>address.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>If<sp/>the<sp/>sentinel<sp/>is<sp/>wrong,<sp/>it<sp/>calls<sp/>svc<sp/>to<sp/>cause<sp/>an<sp/>oops.<sp/><sp/>This<sp/>svc</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>call<sp/>will<sp/>overwrite<sp/>$lr_svc,<sp/>losing<sp/>the<sp/>return<sp/>address<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>z_check_stack_sentinel<sp/>call<sp/>if<sp/>it<sp/>is<sp/>not<sp/>stacked<sp/>before<sp/>the<sp/>svc.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_EXCEPT(reason_p)<sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor">register<sp/>uint32_t<sp/>r0<sp/>__asm__(&quot;r0&quot;</highlight><highlight class="normal">)<sp/>=<sp/>reason_p;<sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="normal">do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>volatile<sp/>(<sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;push<sp/>{lr}\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;cpsie<sp/>i\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;svc<sp/>%[id]\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;pop<sp/>{lr}\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;r&quot;<sp/>(r0),<sp/>[id]<sp/>&quot;i&quot;<sp/>(_SVC_CALL_RUNTIME_EXCEPT)<sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;memory&quot;);<sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}<sp/>while<sp/>(false)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>Unknown<sp/>ARM<sp/>architecture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_ARMV6_M_ARMV8_M_BASELINE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_ARCH_ARM_AARCH32_ERROR_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/arch/arm/aarch32/error.h"/>
  </compounddef>
</doxygen>
