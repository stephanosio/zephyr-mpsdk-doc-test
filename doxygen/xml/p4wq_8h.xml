<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="p4wq_8h" kind="file" language="C++">
    <compoundname>p4wq.h</compoundname>
    <includes local="no">kernel.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/sys/p4wq.h</label>
        <link refid="p4wq_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structk__p4wq__work" prot="public">k_p4wq_work</innerclass>
    <innerclass refid="structk__p4wq" prot="public">k_p4wq</innerclass>
    <innerclass refid="structk__p4wq__initparam" prot="public">k_p4wq_initparam</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="p4wq_8h_1a8a2691219e517a0ac987aeb275b67487" prot="public" static="no">
        <name>K_P4WQ_QUEUE_PER_THREAD</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/p4wq.h" line="45" column="9" bodyfile="include/sys/p4wq.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="p4wq_8h_1a8e0b60ac0b95772b5f5875669b8d6d01" prot="public" static="no">
        <name>K_P4WQ_DELAYED_START</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/p4wq.h" line="46" column="9" bodyfile="include/sys/p4wq.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="p4wq_8h_1a9e6b81f7c3ae916bde3048575cf9708d" prot="public" static="no">
        <name>K_P4WQ_USER_CPU_MASK</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/p4wq.h" line="47" column="9" bodyfile="include/sys/p4wq.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="p4wq_8h_1af37c37fe046571f9ed99e14325d7a321" prot="public" static="no">
        <name>K_P4WQ_DEFINE</name>
        <param><defname>name</defname></param>
        <param><defname>n_threads</defname></param>
        <param><defname>stack_sz</defname></param>
        <initializer>	static <ref refid="tickless_2tickless__concept_2src_2main_8c_1a8b49fec2a8d9b46c26588f772665bafa" kindref="member">K_THREAD_STACK_ARRAY_DEFINE</ref>(_p4stacks_##name,		\
					   n_threads, stack_sz);	\
	static struct <ref refid="structk__thread" kindref="compound">k_thread</ref> _p4threads_##name[n_threads];		\
	static struct <ref refid="structk__p4wq" kindref="compound">k_p4wq</ref> name;					\
	static const <ref refid="group__iterable__section__apis_1gabed6642b8cc06863ce97dd536698004d" kindref="member">STRUCT_SECTION_ITERABLE</ref>(<ref refid="structk__p4wq__initparam" kindref="compound">k_p4wq_initparam</ref>,		\
					     _init_##name) = {		\
		.num = n_threads,					\
		.stack_size = stack_sz,					\
		.<ref refid="timeout__order_8c_1a02dfe6308827e5313b77ad77ea9dce06" kindref="member">threads</ref> = _p4threads_##name,				\
		.stacks = &amp;(_p4stacks_##name[0][0]),			\
		.<ref refid="test__queue__loop_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref> = &amp;name,						\
		.<ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref> = 0,						\
	}</initializer>
        <briefdescription>
<para>Statically initialize a P4 Work Queue. </para>
        </briefdescription>
        <detaileddescription>
<para>Statically defines a struct <ref refid="structk__p4wq" kindref="compound">k_p4wq</ref> object with the specified number of threads which will be initialized at boot and ready for use on entry to <ref refid="fatal_2message__capture_2src_2main_8c_1a6288eba0f8e8ad3ab1544ad731eb7667" kindref="member">main()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Symbol name of the struct <ref refid="structk__p4wq" kindref="compound">k_p4wq</ref> that will be defined </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_threads</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of threads in the work queue pool </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stack_sz</parametername>
</parameternamelist>
<parameterdescription>
<para>Requested stack size of each thread, in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/p4wq.h" line="98" column="9" bodyfile="include/sys/p4wq.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="p4wq_8h_1af4511892a31c6bb3c315ddacd869eb31" prot="public" static="no">
        <name>K_P4WQ_ARRAY_DEFINE</name>
        <param><defname>name</defname></param>
        <param><defname>n_threads</defname></param>
        <param><defname>stack_sz</defname></param>
        <param><defname>flg</defname></param>
        <initializer>	static <ref refid="tickless_2tickless__concept_2src_2main_8c_1a8b49fec2a8d9b46c26588f772665bafa" kindref="member">K_THREAD_STACK_ARRAY_DEFINE</ref>(_p4stacks_##name,		\
					   n_threads, stack_sz);	\
	static struct <ref refid="structk__thread" kindref="compound">k_thread</ref> _p4threads_##name[n_threads];		\
	static struct <ref refid="structk__p4wq" kindref="compound">k_p4wq</ref> name[n_threads];				\
	static const <ref refid="group__iterable__section__apis_1gabed6642b8cc06863ce97dd536698004d" kindref="member">STRUCT_SECTION_ITERABLE</ref>(<ref refid="structk__p4wq__initparam" kindref="compound">k_p4wq_initparam</ref>,		\
					     _init_##name) = {		\
		.num = n_threads,					\
		.stack_size = stack_sz,					\
		.<ref refid="timeout__order_8c_1a02dfe6308827e5313b77ad77ea9dce06" kindref="member">threads</ref> = _p4threads_##name,				\
		.stacks = &amp;(_p4stacks_##name[0][0]),			\
		.<ref refid="test__queue__loop_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref> = name,						\
		.<ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref> = <ref refid="p4wq_8h_1a8a2691219e517a0ac987aeb275b67487" kindref="member">K_P4WQ_QUEUE_PER_THREAD</ref> | flg,			\
	}</initializer>
        <briefdescription>
<para>Statically initialize an array of P4 Work Queues. </para>
        </briefdescription>
        <detaileddescription>
<para>Statically defines an array of struct <ref refid="structk__p4wq" kindref="compound">k_p4wq</ref> objects with the specified number of threads which will be initialized at boot and ready for use on entry to <ref refid="fatal_2message__capture_2src_2main_8c_1a6288eba0f8e8ad3ab1544ad731eb7667" kindref="member">main()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Symbol name of the struct <ref refid="structk__p4wq" kindref="compound">k_p4wq</ref> array that will be defined </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_threads</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of threads and work queues </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stack_sz</parametername>
</parameternamelist>
<parameterdescription>
<para>Requested stack size of each thread, in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flg</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/p4wq.h" line="125" column="9" bodyfile="include/sys/p4wq.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="p4wq_8h_1aa164250d00319b0d71670e95201e45b0" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* k_p4wq_handler_t) (struct k_p4wq_work *work)</definition>
        <argsstring>)(struct k_p4wq_work *work)</argsstring>
        <name>k_p4wq_handler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>P4 Queue handler callback </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/p4wq.h" line="18" column="9" bodyfile="include/sys/p4wq.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="p4wq_8h_1aa67be80b892cbe9bf9eab475ac5c2eff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_p4wq_init</definition>
        <argsstring>(struct k_p4wq *queue)</argsstring>
        <name>k_p4wq_init</name>
        <param>
          <type>struct <ref refid="structk__p4wq" kindref="compound">k_p4wq</ref> *</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
<para>Initialize P4 Queue. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes a P4 Queue object. These objects must be initialized via this function (or statically using K_P4WQ_DEFINE) before any other API calls are made on it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>P4 Queue to initialize </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/p4wq.h" line="149" column="6" declfile="include/sys/p4wq.h" declline="149" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="p4wq_8h_1a73397b7f22a3b1f0f7660081f9824527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_p4wq_add_thread</definition>
        <argsstring>(struct k_p4wq *queue, struct k_thread *thread, k_thread_stack_t *stack, size_t stack_size)</argsstring>
        <name>k_p4wq_add_thread</name>
        <param>
          <type>struct <ref refid="structk__p4wq" kindref="compound">k_p4wq</ref> *</type>
          <declname>queue</declname>
        </param>
        <param>
          <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref> *</type>
          <declname>thread</declname>
        </param>
        <param>
          <type><ref refid="arch__interface_8h_1a3e4bde3075edb41069b258d999333b0e" kindref="member">k_thread_stack_t</ref> *</type>
          <declname>stack</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>stack_size</declname>
        </param>
        <briefdescription>
<para>Dynamically add a thread object to a P4 Queue pool. </para>
        </briefdescription>
        <detaileddescription>
<para>Adds a thread to the pool managed by a P4 queue. The thread object must not be in use. If <ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create()</ref> has previously been called on it, it must be aborted before being given to the queue.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>P4 Queue to which to add the thread </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thread</parametername>
</parameternamelist>
<parameterdescription>
<para>Uninitialized/aborted thread object to add </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread stack memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stack_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread stack size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/p4wq.h" line="163" column="6" declfile="include/sys/p4wq.h" declline="163" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="p4wq_8h_1a40e7660d999b94c517712d8b499dd157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_p4wq_submit</definition>
        <argsstring>(struct k_p4wq *queue, struct k_p4wq_work *item)</argsstring>
        <name>k_p4wq_submit</name>
        <param>
          <type>struct <ref refid="structk__p4wq" kindref="compound">k_p4wq</ref> *</type>
          <declname>queue</declname>
        </param>
        <param>
          <type>struct <ref refid="structk__p4wq__work" kindref="compound">k_p4wq_work</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Submit work item to a P4 queue. </para>
        </briefdescription>
        <detaileddescription>
<para>Submits the specified work item to the queue. The caller must have already initialized the relevant fields of the struct. The queue will execute the handler when CPU time is available and when no higher-priority work items are available. The handler may be invoked on any CPU.</para>
<para>The caller must not mutate the struct while it is stored in the queue. The memory should remain unchanged until <ref refid="p4wq_8h_1aede724dfe684f0a4e93845dee342f830" kindref="member">k_p4wq_cancel()</ref> is called or until the entry to the handler function.</para>
<para><simplesect kind="note"><para>This call is a scheduling point, so if the submitted item (or any other ready thread) has a higher priority than the current thread and the current thread has a preemptible priority then the caller will yield.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>P4 Queue to which to submit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>P4 work item to be submitted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/p4wq.h" line="188" column="6" declfile="include/sys/p4wq.h" declline="188" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="p4wq_8h_1aede724dfe684f0a4e93845dee342f830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool k_p4wq_cancel</definition>
        <argsstring>(struct k_p4wq *queue, struct k_p4wq_work *item)</argsstring>
        <name>k_p4wq_cancel</name>
        <param>
          <type>struct <ref refid="structk__p4wq" kindref="compound">k_p4wq</ref> *</type>
          <declname>queue</declname>
        </param>
        <param>
          <type>struct <ref refid="structk__p4wq__work" kindref="compound">k_p4wq_work</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Cancel submitted P4 work item. </para>
        </briefdescription>
        <detaileddescription>
<para>Cancels a previously-submitted work item and removes it from the queue. Returns true if the item was found in the queue and removed. If the function returns false, either the item was never submitted, has already been executed, or is still running.</para>
<para><simplesect kind="return"><para>true if the item was successfully removed, otherwise false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/p4wq.h" line="200" column="6" declfile="include/sys/p4wq.h" declline="200" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="p4wq_8h_1a421ad1ac947495483b414ab89eb6996d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_p4wq_wait</definition>
        <argsstring>(struct k_p4wq_work *work, k_timeout_t timeout)</argsstring>
        <name>k_p4wq_wait</name>
        <param>
          <type>struct <ref refid="structk__p4wq__work" kindref="compound">k_p4wq_work</ref> *</type>
          <declname>work</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Regain ownership of the work item, wait for completion if it&apos;s synchronous. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/p4wq.h" line="205" column="5" declfile="include/sys/p4wq.h" declline="205" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="p4wq_8h_1a6d22a84d473caff84684047e96ed70ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_p4wq_enable_static_thread</definition>
        <argsstring>(struct k_p4wq *queue, struct k_thread *thread, uint32_t cpu_mask)</argsstring>
        <name>k_p4wq_enable_static_thread</name>
        <param>
          <type>struct <ref refid="structk__p4wq" kindref="compound">k_p4wq</ref> *</type>
          <declname>queue</declname>
        </param>
        <param>
          <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref> *</type>
          <declname>thread</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>cpu_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/p4wq.h" line="207" column="6" declfile="include/sys/p4wq.h" declline="207" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_SYS_P4WQ_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_SYS_P4WQ_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Zephyr<sp/>Pooled<sp/>Parallel<sp/>Preemptible<sp/>Priority-based<sp/>Work<sp/>Queues<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__p4wq__work" kindref="compound">k_p4wq_work</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="p4wq_8h_1aa164250d00319b0d71670e95201e45b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="p4wq_8h_1aa164250d00319b0d71670e95201e45b0" kindref="member">k_p4wq_handler_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__p4wq__work" kindref="compound">k_p4wq_work</ref><sp/>*<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structk__p4wq__work" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__p4wq__work" kindref="compound">k_p4wq_work</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Filled<sp/>out<sp/>by<sp/>submitting<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structk__p4wq__work_1ac0420f86fea6302c6867d20705cda454" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="structk__p4wq__work_1ac0420f86fea6302c6867d20705cda454" kindref="member">priority</ref>;</highlight></codeline>
<codeline lineno="31" refid="structk__p4wq__work_1a7d841cb4cd18d0a61c0eac7dd448f61c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="structk__p4wq__work_1a7d841cb4cd18d0a61c0eac7dd448f61c" kindref="member">deadline</ref>;</highlight></codeline>
<codeline lineno="32" refid="structk__p4wq__work_1ac1cc19646f95589ecfe8892c5666c5ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p4wq_8h_1aa164250d00319b0d71670e95201e45b0" kindref="member">k_p4wq_handler_t</ref><sp/><ref refid="structk__p4wq__work_1ac1cc19646f95589ecfe8892c5666c5ef" kindref="member">handler</ref>;</highlight></codeline>
<codeline lineno="33" refid="structk__p4wq__work_1a11eaae7aa6447baf732cf9060fbf70a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structk__p4wq__work_1a11eaae7aa6447baf732cf9060fbf70a4" kindref="member">sync</ref>;</highlight></codeline>
<codeline lineno="34" refid="structk__p4wq__work_1a8dec82b6c03fab9316b7a96c99466920" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/><ref refid="structk__p4wq__work_1a8dec82b6c03fab9316b7a96c99466920" kindref="member">done_sem</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reserved<sp/>for<sp/>implementation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38" refid="structk__p4wq__work_1a6f02066d7035d0ffbd570395a65411e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrbnode" kindref="compound">rbnode</ref><sp/><ref refid="structrbnode" kindref="compound">rbnode</ref>;</highlight></codeline>
<codeline lineno="39" refid="structk__p4wq__work_1aadfa029b6833630ac9d4a3507452d278" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/><ref refid="structk__p4wq__work_1aadfa029b6833630ac9d4a3507452d278" kindref="member">dlnode</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="41" refid="structk__p4wq__work_1aa767524655c69e35ef284b6de9af1f46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/>*<ref refid="structk__p4wq__work_1aa767524655c69e35ef284b6de9af1f46" kindref="member">thread</ref>;</highlight></codeline>
<codeline lineno="42" refid="structk__p4wq__work_1ac1ceadaf2e64eb13b1c89f7fb47efc38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__p4wq" kindref="compound">k_p4wq</ref><sp/>*<ref refid="structk__p4wq__work_1ac1ceadaf2e64eb13b1c89f7fb47efc38" kindref="member">queue</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="p4wq_8h_1a8a2691219e517a0ac987aeb275b67487" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_P4WQ_QUEUE_PER_THREAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="p4wq_8h_1a8e0b60ac0b95772b5f5875669b8d6d01" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_P4WQ_DELAYED_START<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="p4wq_8h_1a9e6b81f7c3ae916bde3048575cf9708d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_P4WQ_USER_CPU_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structk__p4wq" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__p4wq" kindref="compound">k_p4wq</ref><sp/>{</highlight></codeline>
<codeline lineno="55" refid="structk__p4wq_1abb4af1223997eb31ae7a17f3a933fb19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__spinlock" kindref="compound">k_spinlock</ref><sp/><ref refid="structk__p4wq_1abb4af1223997eb31ae7a17f3a933fb19" kindref="member">lock</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pending<sp/>threads<sp/>waiting<sp/>for<sp/>work<sp/>items</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>FIXME:<sp/>a<sp/>waitq<sp/>isn&apos;t<sp/>really<sp/>the<sp/>right<sp/>data<sp/>structure<sp/>here.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Wait<sp/>queues<sp/>are<sp/>priority-sorted,<sp/>but<sp/>we<sp/>don&apos;t<sp/>want<sp/>that</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>sorting<sp/>overhead<sp/>since<sp/>we&apos;re<sp/>effectively<sp/>doing<sp/>it<sp/>ourselves</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>by<sp/>directly<sp/>mutating<sp/>the<sp/>priority<sp/>when<sp/>a<sp/>thread<sp/>is</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>unpended.<sp/><sp/>We<sp/>just<sp/>want<sp/>&quot;blocked<sp/>threads<sp/>on<sp/>a<sp/>list&quot;,<sp/>but</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>there&apos;s<sp/>no<sp/>clean<sp/>scheduler<sp/>API<sp/>for<sp/>that.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="structk__p4wq_1a8cac5e806d2e432f50051db5a7d08c99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_wait_q_t<sp/><ref refid="structk__p4wq_1a8cac5e806d2e432f50051db5a7d08c99" kindref="member">waitq</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Work<sp/>items<sp/>waiting<sp/>for<sp/>processing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="structk__p4wq_1aa36eb7d19dd3da5be7668aee5231edf6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrbtree" kindref="compound">rbtree</ref><sp/><ref refid="structk__p4wq_1aa36eb7d19dd3da5be7668aee5231edf6" kindref="member">queue</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Work<sp/>items<sp/>in<sp/>progress<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="structk__p4wq_1afc1544bdca24633b3b30673686b93e9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/><ref refid="structk__p4wq_1afc1544bdca24633b3b30673686b93e9b" kindref="member">active</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>K_P4WQ_*<sp/>flags<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structk__p4wq_1a2f5cc7f74e4e46642ce3c5ef61555f94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structk__p4wq_1a2f5cc7f74e4e46642ce3c5ef61555f94" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="structk__p4wq__initparam" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__p4wq__initparam" kindref="compound">k_p4wq_initparam</ref><sp/>{</highlight></codeline>
<codeline lineno="79" refid="structk__p4wq__initparam_1a399e8da451f26b06d2abf6a7a76b66b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structk__p4wq__initparam_1a399e8da451f26b06d2abf6a7a76b66b4" kindref="member">num</ref>;</highlight></codeline>
<codeline lineno="80" refid="structk__p4wq__initparam_1af317fe946a9a03e02608d521c46763ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref><sp/><ref refid="structk__p4wq__initparam_1af317fe946a9a03e02608d521c46763ff" kindref="member">stack_size</ref>;</highlight></codeline>
<codeline lineno="81" refid="structk__p4wq__initparam_1ac4c282b6fb6e343823d3ae68398df35a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__p4wq" kindref="compound">k_p4wq</ref><sp/>*<ref refid="structk__p4wq__initparam_1ac4c282b6fb6e343823d3ae68398df35a" kindref="member">queue</ref>;</highlight></codeline>
<codeline lineno="82" refid="structk__p4wq__initparam_1a8dd0451e7bcc9819d4940db3cc7c0beb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/>*<ref refid="structk__p4wq__initparam_1a8dd0451e7bcc9819d4940db3cc7c0beb" kindref="member">threads</ref>;</highlight></codeline>
<codeline lineno="83" refid="structk__p4wq__initparam_1a50f2337a6597bfb9f2d74e5b49718217" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">z_thread_stack_element<sp/>*<ref refid="structk__p4wq__initparam_1a50f2337a6597bfb9f2d74e5b49718217" kindref="member">stacks</ref>;</highlight></codeline>
<codeline lineno="84" refid="structk__p4wq__initparam_1a5962a73928834e1548ea8045945274c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structk__p4wq__initparam_1a5962a73928834e1548ea8045945274c2" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="p4wq_8h_1af37c37fe046571f9ed99e14325d7a321" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_P4WQ_DEFINE(name,<sp/>n_threads,<sp/>stack_sz)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>K_THREAD_STACK_ARRAY_DEFINE(_p4stacks_##name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_threads,<sp/>stack_sz);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>struct<sp/>k_thread<sp/>_p4threads_##name[n_threads];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>struct<sp/>k_p4wq<sp/>name;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>STRUCT_SECTION_ITERABLE(k_p4wq_initparam,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_init_##name)<sp/>=<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.num<sp/>=<sp/>n_threads,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.stack_size<sp/>=<sp/>stack_sz,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.threads<sp/>=<sp/>_p4threads_##name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.stacks<sp/>=<sp/>&amp;(_p4stacks_##name[0][0]),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.queue<sp/>=<sp/>&amp;name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.flags<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="p4wq_8h_1af4511892a31c6bb3c315ddacd869eb31" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_P4WQ_ARRAY_DEFINE(name,<sp/>n_threads,<sp/>stack_sz,<sp/>flg)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>K_THREAD_STACK_ARRAY_DEFINE(_p4stacks_##name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_threads,<sp/>stack_sz);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>struct<sp/>k_thread<sp/>_p4threads_##name[n_threads];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>struct<sp/>k_p4wq<sp/>name[n_threads];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>STRUCT_SECTION_ITERABLE(k_p4wq_initparam,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_init_##name)<sp/>=<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.num<sp/>=<sp/>n_threads,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.stack_size<sp/>=<sp/>stack_sz,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.threads<sp/>=<sp/>_p4threads_##name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.stacks<sp/>=<sp/>&amp;(_p4stacks_##name[0][0]),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.queue<sp/>=<sp/>name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.flags<sp/>=<sp/>K_P4WQ_QUEUE_PER_THREAD<sp/>|<sp/>flg,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="p4wq_8h_1aa67be80b892cbe9bf9eab475ac5c2eff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p4wq_8h_1aa67be80b892cbe9bf9eab475ac5c2eff" kindref="member">k_p4wq_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__p4wq" kindref="compound">k_p4wq</ref><sp/>*<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="p4wq_8h_1a73397b7f22a3b1f0f7660081f9824527" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p4wq_8h_1a73397b7f22a3b1f0f7660081f9824527" kindref="member">k_p4wq_add_thread</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__p4wq" kindref="compound">k_p4wq</ref><sp/>*<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/>*<ref refid="atomic_8c_1ae3e7b70821cb2fc4b41ff1189e70bc92" kindref="member">thread</ref>,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arch__interface_8h_1a3e4bde3075edb41069b258d999333b0e" kindref="member">k_thread_stack_t</ref><sp/>*<ref refid="smp__boot__delay_2src_2main_8c_1a96786824adbf96016a9dbf6eded02b94" kindref="member">stack</ref>,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stack_size);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="p4wq_8h_1a40e7660d999b94c517712d8b499dd157" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p4wq_8h_1a40e7660d999b94c517712d8b499dd157" kindref="member">k_p4wq_submit</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__p4wq" kindref="compound">k_p4wq</ref><sp/>*<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__p4wq__work" kindref="compound">k_p4wq_work</ref><sp/>*item);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="p4wq_8h_1aede724dfe684f0a4e93845dee342f830" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="p4wq_8h_1aede724dfe684f0a4e93845dee342f830" kindref="member">k_p4wq_cancel</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__p4wq" kindref="compound">k_p4wq</ref><sp/>*<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__p4wq__work" kindref="compound">k_p4wq_work</ref><sp/>*item);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="p4wq_8h_1a421ad1ac947495483b414ab89eb6996d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="p4wq_8h_1a421ad1ac947495483b414ab89eb6996d" kindref="member">k_p4wq_wait</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__p4wq__work" kindref="compound">k_p4wq_work</ref><sp/>*<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="p4wq_8h_1a6d22a84d473caff84684047e96ed70ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p4wq_8h_1a6d22a84d473caff84684047e96ed70ac" kindref="member">k_p4wq_enable_static_thread</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__p4wq" kindref="compound">k_p4wq</ref><sp/>*<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/>*<ref refid="atomic_8c_1ae3e7b70821cb2fc4b41ff1189e70bc92" kindref="member">thread</ref>,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>cpu_mask);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_SYS_P4WQ_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/sys/p4wq.h"/>
  </compounddef>
</doxygen>
