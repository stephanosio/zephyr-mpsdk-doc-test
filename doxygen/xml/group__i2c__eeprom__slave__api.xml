<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__i2c__eeprom__slave__api" kind="group">
    <compoundname>i2c_eeprom_slave_api</compoundname>
    <title>I2C EEPROM Slave Driver API</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__i2c__eeprom__slave__api_1ga91772e88c3630efaaad08e465c6bd0c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eeprom_slave_program</definition>
        <argsstring>(const struct device *dev, const uint8_t *eeprom_data, unsigned int length)</argsstring>
        <name>eeprom_slave_program</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>eeprom_data</declname>
        </param>
        <param>
          <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Program memory of the virtual EEPROM. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eeprom_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer of data to program into the virtual eeprom memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data to program into the virtual eeprom memory</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid data size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/i2c/slave/eeprom.h" line="32" column="5" declfile="include/drivers/i2c/slave/eeprom.h" declline="32" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__i2c__eeprom__slave__api_1ga0c6e3828da2a33c5ece0023b31ea17b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eeprom_slave_read</definition>
        <argsstring>(const struct device *dev, uint8_t *eeprom_data, unsigned int offset)</argsstring>
        <name>eeprom_slave_read</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>eeprom_data</declname>
        </param>
        <param>
          <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Read single byte of virtual EEPROM memory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eeprom_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer of byte where to store the virtual eeprom memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset into EEPROM memory where to read the byte</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid data pointer or offset </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/i2c/slave/eeprom.h" line="45" column="5" declfile="include/drivers/i2c/slave/eeprom.h" declline="45" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>I2C EEPROM Slave Driver API. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
