<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="sensor_8h" kind="file" language="C++">
    <compoundname>sensor.h</compoundname>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includes local="no">device.h</includes>
    <includes refid="errno_8h" local="no">errno.h</includes>
    <includes local="no">syscalls/sensor.h</includes>
    <includedby refid="ccs811_8h" local="no">include/drivers/sensor/ccs811.h</includedby>
    <includedby refid="fdc2x1x_8h" local="no">include/drivers/sensor/fdc2x1x.h</includedby>
    <includedby refid="mcux__acmp_8h" local="no">include/drivers/sensor/mcux_acmp.h</includedby>
    <includedby refid="mhz19b_8h" local="no">include/drivers/sensor/mhz19b.h</includedby>
    <includedby refid="sht4x_8h" local="no">include/drivers/sensor/sht4x.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/drivers/sensor.h</label>
        <link refid="sensor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="2">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="5">
        <label>device.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="10">
        <label>syscalls/sensor.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/drivers/sensor.h</label>
        <link refid="sensor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/drivers/sensor/ccs811.h</label>
        <link refid="ccs811_8h"/>
      </node>
      <node id="3">
        <label>include/drivers/sensor/fdc2x1x.h</label>
        <link refid="fdc2x1x_8h"/>
      </node>
      <node id="4">
        <label>include/drivers/sensor/mcux_acmp.h</label>
        <link refid="mcux__acmp_8h"/>
      </node>
      <node id="5">
        <label>include/drivers/sensor/mhz19b.h</label>
        <link refid="mhz19b_8h"/>
      </node>
      <node id="6">
        <label>include/drivers/sensor/sht4x.h</label>
        <link refid="sht4x_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structsensor__value" prot="public">sensor_value</innerclass>
    <innerclass refid="structsensor__trigger" prot="public">sensor_trigger</innerclass>
    <innerclass refid="structsensor__driver__api" prot="public">sensor_driver_api</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__sensor__interface_1ga0066e049c4f084305ca2b978e5c7454d" prot="public" static="no">
        <name>SENSOR_G</name>
        <initializer>9806650LL</initializer>
        <briefdescription>
<para>The value of gravitational constant in micro m/s^2. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="585" column="9" bodyfile="include/drivers/sensor.h" bodystart="585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sensor__interface_1ga6ebdc2f6942334de3cc248a53db7df33" prot="public" static="no">
        <name>SENSOR_PI</name>
        <initializer>3141592LL</initializer>
        <briefdescription>
<para>The value of constant PI in micros. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="590" column="9" bodyfile="include/drivers/sensor.h" bodystart="590" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" prot="public" static="no" strong="no">
        <type></type>
        <name>sensor_channel</name>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934afa9238082f000350530ca77b2f513d4c" prot="public">
          <name>SENSOR_CHAN_ACCEL_X</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acceleration on the X axis, in m/s^2. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a61c145468f01916c1a547fb38a1be9a8" prot="public">
          <name>SENSOR_CHAN_ACCEL_Y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acceleration on the Y axis, in m/s^2. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a78e06bb48cfe06e42829816ad4cb5a0f" prot="public">
          <name>SENSOR_CHAN_ACCEL_Z</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acceleration on the Z axis, in m/s^2. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a16c05784ae15a4952ea708c2f11a2ae9" prot="public">
          <name>SENSOR_CHAN_ACCEL_XYZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acceleration on the X, Y and Z axes. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ac5709b77f0eb69972ccc055f927e5015" prot="public">
          <name>SENSOR_CHAN_GYRO_X</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Angular velocity around the X axis, in radians/s. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a4a9533172105fd2e55d96e0122a48847" prot="public">
          <name>SENSOR_CHAN_GYRO_Y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Angular velocity around the Y axis, in radians/s. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a9b6b9d13cd8d82449823d65779a87a39" prot="public">
          <name>SENSOR_CHAN_GYRO_Z</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Angular velocity around the Z axis, in radians/s. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a1d36b89ab3761e9bc86effc839f8db0e" prot="public">
          <name>SENSOR_CHAN_GYRO_XYZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Angular velocity around the X, Y and Z axes. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a171f37ba152d34f75ff745cb848b3240" prot="public">
          <name>SENSOR_CHAN_MAGN_X</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Magnetic field on the X axis, in Gauss. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a2b4f1764f47428c528447347d7730942" prot="public">
          <name>SENSOR_CHAN_MAGN_Y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Magnetic field on the Y axis, in Gauss. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a2a2115051ded019a57ece5a00f86ea61" prot="public">
          <name>SENSOR_CHAN_MAGN_Z</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Magnetic field on the Z axis, in Gauss. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a5d1f48466f6f600503af18427fa3da32" prot="public">
          <name>SENSOR_CHAN_MAGN_XYZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Magnetic field on the X, Y and Z axes. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a0a8828f51fe15335ad857d136f197ee1" prot="public">
          <name>SENSOR_CHAN_DIE_TEMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Device die temperature in degrees Celsius. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a5bf9c4a677405c4a4df3bc3acd116c7c" prot="public">
          <name>SENSOR_CHAN_AMBIENT_TEMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Ambient temperature in degrees Celsius. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a14cd68844542e23d1b641a2bc54132a9" prot="public">
          <name>SENSOR_CHAN_PRESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Pressure in kilopascal. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934abaec2c1347ef0035221dd4d9c34a4774" prot="public">
          <name>SENSOR_CHAN_PROX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Proximity. Adimensional. A value of 1 indicates that an object is close. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ad08ddb6c9cd71c853a121f426fcea042" prot="public">
          <name>SENSOR_CHAN_HUMIDITY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Humidity, in percent. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a6e91196c11d080c3f5df55fda190e19d" prot="public">
          <name>SENSOR_CHAN_LIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Illuminance in visible spectrum, in lux. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ad725fe5778f000a17f93f83dab31132c" prot="public">
          <name>SENSOR_CHAN_IR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Illuminance in infra-red spectrum, in lux. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934af22c8ef66f4871efe5a22863d7f434aa" prot="public">
          <name>SENSOR_CHAN_RED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Illuminance in red spectrum, in lux. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a216a3b2b77d7a92f94547aeb889ae378" prot="public">
          <name>SENSOR_CHAN_GREEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Illuminance in green spectrum, in lux. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a6e66f95d73d05c2b3511e2db506844f5" prot="public">
          <name>SENSOR_CHAN_BLUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Illuminance in blue spectrum, in lux. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934af5ba63bfef1c64c8a96ae7fba4f35512" prot="public">
          <name>SENSOR_CHAN_ALTITUDE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Altitude, in meters </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a08f0c21c33008292b0b58defe5c06815" prot="public">
          <name>SENSOR_CHAN_PM_1_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>1.0 micro-meters Particulate Matter, in ug/m^3 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a3398fdc51964aa06c9a01096d2fac945" prot="public">
          <name>SENSOR_CHAN_PM_2_5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>2.5 micro-meters Particulate Matter, in ug/m^3 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aa450541bde278aefcc9b53bd0826e225" prot="public">
          <name>SENSOR_CHAN_PM_10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>10 micro-meters Particulate Matter, in ug/m^3 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ad46d1495990a86fa7e2ab5bbe5338e08" prot="public">
          <name>SENSOR_CHAN_DISTANCE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Distance. From sensor to target, in meters </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a7a23e3e869c5e9a39f6a7bfa28737133" prot="public">
          <name>SENSOR_CHAN_CO2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CO2 level, in parts per million (ppm) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934affee34c60c95398b67ec59644d647f8e" prot="public">
          <name>SENSOR_CHAN_VOC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VOC level, in parts per billion (ppb) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934acf250a87d2d175f99179a5b54cb7ba01" prot="public">
          <name>SENSOR_CHAN_GAS_RES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Gas sensor resistance in ohms. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a69dd8a737a0cb6f03fa5f60c92840e6d" prot="public">
          <name>SENSOR_CHAN_VOLTAGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Voltage, in volts </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a1a001ba3ca5ad37308fb7be81f11c950" prot="public">
          <name>SENSOR_CHAN_CURRENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Current, in amps </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a33607371060fca93c3555e8e10d5b177" prot="public">
          <name>SENSOR_CHAN_POWER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Power in watts </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a34ba555026ff976881142512cc8a616b" prot="public">
          <name>SENSOR_CHAN_RESISTANCE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Resistance , in Ohm </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a551ffe08a9b1206e3c051f207b92aabf" prot="public">
          <name>SENSOR_CHAN_ROTATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Angular rotation, in degrees </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aa00b7a857e33c925c910661a91389517" prot="public">
          <name>SENSOR_CHAN_POS_DX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Position change on the X axis, in points. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a974327ca88ea6d22731cd03afeacef76" prot="public">
          <name>SENSOR_CHAN_POS_DY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Position change on the Y axis, in points. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aeaf49aa075947a160f21ae19cf8c39b9" prot="public">
          <name>SENSOR_CHAN_POS_DZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Position change on the Z axis, in points. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a655a576a72cbd6641abc698a3f4304d1" prot="public">
          <name>SENSOR_CHAN_RPM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Revolutions per minute, in RPM. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ab942649ce1507fb081a77b4bcfc1a57d" prot="public">
          <name>SENSOR_CHAN_GAUGE_VOLTAGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Voltage, in volts </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a4272c1256cde47006d424c5523d26bf8" prot="public">
          <name>SENSOR_CHAN_GAUGE_AVG_CURRENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Average current, in amps </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a5e6b87cacfe3e4703b963a2177d35cc8" prot="public">
          <name>SENSOR_CHAN_GAUGE_STDBY_CURRENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Standy current, in amps </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a603335f6a91846c5089a2a541d9053cf" prot="public">
          <name>SENSOR_CHAN_GAUGE_MAX_LOAD_CURRENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Max load current, in amps </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a8cac65c812b3a1fcb55a53f18d827214" prot="public">
          <name>SENSOR_CHAN_GAUGE_TEMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Gauge temperature <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a7d67d6842ee787fcc8a4d9ee2cbea139" prot="public">
          <name>SENSOR_CHAN_GAUGE_STATE_OF_CHARGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>State of charge measurement in % </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a54a6be68e09b9f8ca4d349e3d1445649" prot="public">
          <name>SENSOR_CHAN_GAUGE_FULL_CHARGE_CAPACITY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Full Charge Capacity in mAh </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aaaea6433c82f7b563f86fa53c95ad0ad" prot="public">
          <name>SENSOR_CHAN_GAUGE_REMAINING_CHARGE_CAPACITY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Remaining Charge Capacity in mAh </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934af9b0ac69fd87a68e7e8d97e52b41304a" prot="public">
          <name>SENSOR_CHAN_GAUGE_NOM_AVAIL_CAPACITY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Nominal Available Capacity in mAh </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a688287fa1587944424a2eda13b8d98e8" prot="public">
          <name>SENSOR_CHAN_GAUGE_FULL_AVAIL_CAPACITY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Full Available Capacity in mAh </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aa24f9e12f20a716dd152cf889cb51228" prot="public">
          <name>SENSOR_CHAN_GAUGE_AVG_POWER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Average power in mW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a0613c39397f06d11f4350f8cbcc24cf6" prot="public">
          <name>SENSOR_CHAN_GAUGE_STATE_OF_HEALTH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>State of health measurement in % </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aa3755e9fcd8c90fef5185082edb29b65" prot="public">
          <name>SENSOR_CHAN_GAUGE_TIME_TO_EMPTY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Time to empty in minutes </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a14d4c802805e1e07c9b4e47ccaff0eeb" prot="public">
          <name>SENSOR_CHAN_GAUGE_TIME_TO_FULL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Time to full in minutes </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a8834978858c2b62b5e923d06cfcb1a46" prot="public">
          <name>SENSOR_CHAN_GAUGE_CYCLE_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Cycle count (total number of charge/discharge cycles) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a6f96ba4db6cf812b223f9a09f2a287d0" prot="public">
          <name>SENSOR_CHAN_GAUGE_DESIGN_VOLTAGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Design voltage of cell in V (max voltage) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a2c33a7f11d5b3996e95167698a2056cf" prot="public">
          <name>SENSOR_CHAN_GAUGE_DESIRED_VOLTAGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Desired voltage of cell in V (nominal voltage) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a4aa8bba1b260e1994542383d8e2e908f" prot="public">
          <name>SENSOR_CHAN_GAUGE_DESIRED_CHARGING_CURRENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Desired charging current in mA </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ab275027eb550b2b075c44917634eca2c" prot="public">
          <name>SENSOR_CHAN_ALL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>All channels. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934abb2893ccb71c9e1eeb155d7cbd539303" prot="public">
          <name>SENSOR_CHAN_COMMON_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Number of all common sensor channels. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ac1f260296289d93a13c5686ca11bdc12" prot="public">
          <name>SENSOR_CHAN_PRIV_START</name>
          <initializer>= SENSOR_CHAN_COMMON_COUNT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This and higher values are sensor specific. Refer to the sensor header file. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ad842035a01166417d90cd5d7630733b1" prot="public">
          <name>SENSOR_CHAN_MAX</name>
          <initializer>= INT16_MAX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Maximum value describing a sensor channel type. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Sensor channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="53" column="1" bodyfile="include/drivers/sensor.h" bodystart="53" bodyend="198"/>
      </memberdef>
      <memberdef kind="enum" id="group__sensor__interface_1ga08215279400e8c9eb05ce4e4f0898ffd" prot="public" static="no" strong="no">
        <type></type>
        <name>sensor_trigger_type</name>
        <enumvalue id="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffdabf92b196394726ec90f1d61586a7f023" prot="public">
          <name>SENSOR_TRIG_TIMER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Timer-based trigger, useful when the sensor does not have an interrupt line. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffdaf7c161e309c267a7dd6daf2ad176f44f" prot="public">
          <name>SENSOR_TRIG_DATA_READY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger fires whenever new data is ready. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda3bb90a3334bcf613c9efbdf2ed05f855" prot="public">
          <name>SENSOR_TRIG_DELTA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger fires when the selected channel varies significantly. This includes any-motion detection when the channel is acceleration or gyro. If detection is based on slope between successive channel readings, the slope threshold is configured via the <ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940bac4538665a244cb7f18fc053c40134302" kindref="member">SENSOR_ATTR_SLOPE_TH</ref> and <ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940baf510b32b2e2395bbcf1c8fd7159ed2a1" kindref="member">SENSOR_ATTR_SLOPE_DUR</ref> attributes. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda448226d83b28c2862c353a8cda7be0d5" prot="public">
          <name>SENSOR_TRIG_NEAR_FAR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger fires when a near/far event is detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda8f875f881b6540eebc28e3d6a7d46606" prot="public">
          <name>SENSOR_TRIG_THRESHOLD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger fires when channel reading transitions configured thresholds. The thresholds are configured via the <ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940baee644485ab5f64e7c5273bbe562deaaa" kindref="member">SENSOR_ATTR_LOWER_THRESH</ref>, <ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba5af51bd0640a87a94476eee112a4460b" kindref="member">SENSOR_ATTR_UPPER_THRESH</ref>, and <ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba044e67bfc04e8ddc2de7d2058fffbc94" kindref="member">SENSOR_ATTR_HYSTERESIS</ref> attributes. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffdae49a25e6400f0753f6bac8a7d136200d" prot="public">
          <name>SENSOR_TRIG_TAP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger fires when a single tap is detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffdab95e52584a6bc3343181f495cd4cb2ef" prot="public">
          <name>SENSOR_TRIG_DOUBLE_TAP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger fires when a double tap is detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda4943ffb4afaf4cbae39e85693bd4374c" prot="public">
          <name>SENSOR_TRIG_FREEFALL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger fires when a free fall is detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda8d1f2621fad4fd685d56cca3f9b042f5" prot="public">
          <name>SENSOR_TRIG_COMMON_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Number of all common sensor triggers. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda5e1a94f21fee67ee98296153ea640921" prot="public">
          <name>SENSOR_TRIG_PRIV_START</name>
          <initializer>= SENSOR_TRIG_COMMON_COUNT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This and higher values are sensor specific. Refer to the sensor header file. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda9de566f44de519f94c59c58df1efc4c4" prot="public">
          <name>SENSOR_TRIG_MAX</name>
          <initializer>= INT16_MAX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Maximum value describing a sensor trigger type. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Sensor trigger types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="203" column="1" bodyfile="include/drivers/sensor.h" bodystart="203" bodyend="254"/>
      </memberdef>
      <memberdef kind="enum" id="group__sensor__interface_1ga0dcb6842bc969492bd1c9eb49708940b" prot="public" static="no" strong="no">
        <type></type>
        <name>sensor_attribute</name>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940bacb07e3508ea5503dbcdceee3f17d2291" prot="public">
          <name>SENSOR_ATTR_SAMPLING_FREQUENCY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sensor sampling frequency, i.e. how many times a second the sensor takes a measurement. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940baee644485ab5f64e7c5273bbe562deaaa" prot="public">
          <name>SENSOR_ATTR_LOWER_THRESH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Lower threshold for trigger. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba5af51bd0640a87a94476eee112a4460b" prot="public">
          <name>SENSOR_ATTR_UPPER_THRESH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Upper threshold for trigger. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940bac4538665a244cb7f18fc053c40134302" prot="public">
          <name>SENSOR_ATTR_SLOPE_TH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Threshold for any-motion (slope) trigger. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940baf510b32b2e2395bbcf1c8fd7159ed2a1" prot="public">
          <name>SENSOR_ATTR_SLOPE_DUR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Duration for which the slope values needs to be outside the threshold for the trigger to fire. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba044e67bfc04e8ddc2de7d2058fffbc94" prot="public">
          <name>SENSOR_ATTR_HYSTERESIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba3d32987f75284d80d3f64bf44f5c6ccd" prot="public">
          <name>SENSOR_ATTR_OVERSAMPLING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Oversampling factor </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940bad30df3100fb6b285a6a786fdc77234d3" prot="public">
          <name>SENSOR_ATTR_FULL_SCALE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sensor range, in SI units. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba332935dcb6f7e228cb9c595a545079fd" prot="public">
          <name>SENSOR_ATTR_OFFSET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The sensor value returned will be altered by the amount indicated by offset: final_value = <ref refid="structsensor__value" kindref="compound">sensor_value</ref> + offset. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba3043381b539610a8b424f12d76474bdf" prot="public">
          <name>SENSOR_ATTR_CALIB_TARGET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Calibration target. This will be used by the internal chip&apos;s algorithms to calibrate itself on a certain axis, or all of them. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba75cd3aca26859fd7c10c83d86e3471e9" prot="public">
          <name>SENSOR_ATTR_CONFIGURATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Configure the operating modes of a sensor. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba843d1e79573c634987e5e839ba9e965e" prot="public">
          <name>SENSOR_ATTR_CALIBRATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set a calibration value needed by a sensor. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba1f8d2242fa9d63a13c6a48fe3a1cbe52" prot="public">
          <name>SENSOR_ATTR_FEATURE_MASK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Enable/disable sensor features </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940baaedf76e63224adc3fa266d35666e0a3a" prot="public">
          <name>SENSOR_ATTR_ALERT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Alert threshold or alert enable/disable </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba99ceedef81217614ada0c8a469f91eb8" prot="public">
          <name>SENSOR_ATTR_COMMON_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Number of all common sensor attributes. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940bafb4b5859bc369f817f60eaa161bcefc3" prot="public">
          <name>SENSOR_ATTR_PRIV_START</name>
          <initializer>= SENSOR_ATTR_COMMON_COUNT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This and higher values are sensor specific. Refer to the sensor header file. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940baf6bd0b33ca2117ef329692c291f6384b" prot="public">
          <name>SENSOR_ATTR_MAX</name>
          <initializer>= INT16_MAX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Maximum value describing a sensor attribute type. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Sensor attribute types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="269" column="1" bodyfile="include/drivers/sensor.h" bodystart="269" bodyend="326"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__sensor__interface_1ga66f7113ea7209626e17883e9fcbe72b7" prot="public" static="no">
        <type>void(*</type>
        <definition>sensor_trigger_handler_t</definition>
        <argsstring>)(const struct device *dev, const struct sensor_trigger *trigger)</argsstring>
        <name>sensor_trigger_handler_t</name>
        <briefdescription>
<para>Callback API upon firing of a trigger. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trigger</parametername>
</parameternamelist>
<parameterdescription>
<para>The trigger </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="335" column="9" bodyfile="include/drivers/sensor.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sensor__interface_1ga0ec8d3268962b051febedf98c4b8f616" prot="public" static="no">
        <type>int(*</type>
        <definition>sensor_attr_set_t</definition>
        <argsstring>)(const struct device *dev, enum sensor_channel chan, enum sensor_attribute attr, const struct sensor_value *val)</argsstring>
        <name>sensor_attr_set_t</name>
        <briefdescription>
<para>Callback API upon setting a sensor&apos;s attributes. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="group__sensor__interface_1gafbf65226a227e9f8824908bc38e336f5" kindref="member">sensor_attr_set()</ref> for argument description </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="344" column="9" bodyfile="include/drivers/sensor.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sensor__interface_1ga4088d038e6dd9d9f41c47e0f5bc720fa" prot="public" static="no">
        <type>int(*</type>
        <definition>sensor_attr_get_t</definition>
        <argsstring>)(const struct device *dev, enum sensor_channel chan, enum sensor_attribute attr, struct sensor_value *val)</argsstring>
        <name>sensor_attr_get_t</name>
        <briefdescription>
<para>Callback API upon getting a sensor&apos;s attributes. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="group__sensor__interface_1gaedfdfc71dce702dc1fb1c6e60ff0f73a" kindref="member">sensor_attr_get()</ref> for argument description </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="355" column="9" bodyfile="include/drivers/sensor.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sensor__interface_1gabee4f73fdc39b40f6c607e58dcaf2a87" prot="public" static="no">
        <type>int(*</type>
        <definition>sensor_trigger_set_t</definition>
        <argsstring>)(const struct device *dev, const struct sensor_trigger *trig, sensor_trigger_handler_t handler)</argsstring>
        <name>sensor_trigger_set_t</name>
        <briefdescription>
<para>Callback API for setting a sensor&apos;s trigger and handler. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="group__sensor__interface_1ga7c72aca732e0641612d2f9437c2e41b7" kindref="member">sensor_trigger_set()</ref> for argument description </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="366" column="9" bodyfile="include/drivers/sensor.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sensor__interface_1ga272df5be62808cf350f3dd25671bd222" prot="public" static="no">
        <type>int(*</type>
        <definition>sensor_sample_fetch_t</definition>
        <argsstring>)(const struct device *dev, enum sensor_channel chan)</argsstring>
        <name>sensor_sample_fetch_t</name>
        <briefdescription>
<para>Callback API for fetching data from a sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="group__sensor__interface_1gaa75e25d93ee7cac0bf38399f3c006dff" kindref="member">sensor_sample_fetch()</ref> for argument description </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="375" column="9" bodyfile="include/drivers/sensor.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sensor__interface_1gab62a0c4d5cba677d35f7f53a727e6550" prot="public" static="no">
        <type>int(*</type>
        <definition>sensor_channel_get_t</definition>
        <argsstring>)(const struct device *dev, enum sensor_channel chan, struct sensor_value *val)</argsstring>
        <name>sensor_channel_get_t</name>
        <briefdescription>
<para>Callback API for getting a reading from a sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="group__sensor__interface_1ga9e0e6c1408d32c52267984bae7cb268d" kindref="member">sensor_channel_get()</ref> for argument description </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="383" column="9" bodyfile="include/drivers/sensor.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__sensor__interface_1gafbf65226a227e9f8824908bc38e336f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sensor_attr_set</definition>
        <argsstring>(const struct device *dev, enum sensor_channel chan, enum sensor_attribute attr, const struct sensor_value *val)</argsstring>
        <name>sensor_attr_set</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref></type>
          <declname>chan</declname>
        </param>
        <param>
          <type>enum <ref refid="group__sensor__interface_1ga0dcb6842bc969492bd1c9eb49708940b" kindref="member">sensor_attribute</ref></type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsensor__value" kindref="compound">sensor_value</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set an attribute for a sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel the attribute belongs to, if any. Some attributes may only be set for all channels of a device, depending on device capabilities. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute to set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to set the attribute to</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, negative errno code if failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="407" column="6" declfile="include/drivers/sensor.h" declline="407" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sensor__interface_1gaedfdfc71dce702dc1fb1c6e60ff0f73a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sensor_attr_get</definition>
        <argsstring>(const struct device *dev, enum sensor_channel chan, enum sensor_attribute attr, struct sensor_value *val)</argsstring>
        <name>sensor_attr_get</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref></type>
          <declname>chan</declname>
        </param>
        <param>
          <type>enum <ref refid="group__sensor__interface_1ga0dcb6842bc969492bd1c9eb49708940b" kindref="member">sensor_attribute</ref></type>
          <declname>attr</declname>
        </param>
        <param>
          <type>struct <ref refid="structsensor__value" kindref="compound">sensor_value</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Get an attribute for a sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel the attribute belongs to, if any. Some attributes may only be set for all channels of a device, depending on device capabilities. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute to get </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to where to store the attribute</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, negative errno code if failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="439" column="6" declfile="include/drivers/sensor.h" declline="439" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sensor__interface_1ga7c72aca732e0641612d2f9437c2e41b7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int sensor_trigger_set</definition>
        <argsstring>(const struct device *dev, const struct sensor_trigger *trig, sensor_trigger_handler_t handler)</argsstring>
        <name>sensor_trigger_set</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsensor__trigger" kindref="compound">sensor_trigger</ref> *</type>
          <declname>trig</declname>
        </param>
        <param>
          <type><ref refid="group__sensor__interface_1ga66f7113ea7209626e17883e9fcbe72b7" kindref="member">sensor_trigger_handler_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Activate a sensor&apos;s trigger and set the trigger handler. </para>
        </briefdescription>
        <detaileddescription>
<para>The handler will be called from a thread, so I2C or SPI operations are safe. However, the thread&apos;s stack is limited and defined by the driver. It is currently up to the caller to ensure that the handler does not overflow the stack.</para>
<para><simplesect kind="par"><title>Function properties (list may not be complete)</title><para><htmlonly> supervisor </htmlonly>  <verbatim>embed:rst:inline :ref:`api_term_supervisor`</verbatim> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trig</parametername>
</parameternamelist>
<parameterdescription>
<para>The trigger to activate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The function that should be called when the trigger fires</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, negative errno code if failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="476" column="19" bodyfile="include/drivers/sensor.h" bodystart="476" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="group__sensor__interface_1gaa75e25d93ee7cac0bf38399f3c006dff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sensor_sample_fetch</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>sensor_sample_fetch</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Fetch a sample from the sensor and store it in an internal driver buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Read all of a sensor&apos;s active channels and, if necessary, perform any additional operations necessary to make the values useful. The user may then get individual channel values by calling <ref refid="group__sensor__interface_1ga9e0e6c1408d32c52267984bae7cb268d" kindref="member">sensor_channel_get</ref>.</para>
<para>Since the function communicates with the sensor device, it is unsafe to call it in an ISR if the device is connected via I2C or SPI.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the sensor device</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, negative errno code if failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="506" column="6" declfile="include/drivers/sensor.h" declline="506" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sensor__interface_1gac16192826432438a15274cf28d66e8a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sensor_sample_fetch_chan</definition>
        <argsstring>(const struct device *dev, enum sensor_channel type)</argsstring>
        <name>sensor_sample_fetch_chan</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Fetch a sample from the sensor and store it in an internal driver buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Read and compute compensation for one type of sensor data (magnetometer, accelerometer, etc). The user may then get individual channel values by calling <ref refid="group__sensor__interface_1ga9e0e6c1408d32c52267984bae7cb268d" kindref="member">sensor_channel_get</ref>.</para>
<para>This is mostly implemented by multi function devices enabling reading at different sampling rates.</para>
<para>Since the function communicates with the sensor device, it is unsafe to call it in an ISR if the device is connected via I2C or SPI.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel that needs updated</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, negative errno code if failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="535" column="6" declfile="include/drivers/sensor.h" declline="535" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sensor__interface_1ga9e0e6c1408d32c52267984bae7cb268d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sensor_channel_get</definition>
        <argsstring>(const struct device *dev, enum sensor_channel chan, struct sensor_value *val)</argsstring>
        <name>sensor_channel_get</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref></type>
          <declname>chan</declname>
        </param>
        <param>
          <type>struct <ref refid="structsensor__value" kindref="compound">sensor_value</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Get a reading from a sensor device. </para>
        </briefdescription>
        <detaileddescription>
<para>Return a useful value for a particular channel, from the driver&apos;s internal data. Before calling this function, a sample must be obtained by calling <ref refid="group__sensor__interface_1gaa75e25d93ee7cac0bf38399f3c006dff" kindref="member">sensor_sample_fetch</ref> or <ref refid="group__sensor__interface_1gac16192826432438a15274cf28d66e8a6" kindref="member">sensor_sample_fetch_chan</ref>. It is guaranteed that two subsequent calls of this function for the same channels will yield the same value, if <ref refid="group__sensor__interface_1gaa75e25d93ee7cac0bf38399f3c006dff" kindref="member">sensor_sample_fetch</ref> or <ref refid="group__sensor__interface_1gac16192826432438a15274cf28d66e8a6" kindref="member">sensor_sample_fetch_chan</ref> has not been called in the meantime.</para>
<para>For vectorial data samples you can request all axes in just one call by passing the specific channel with _XYZ suffix. The sample will be returned at val[0], val[1] and val[2] (X, Y and Z in that order).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the sensor device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel to read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, negative errno code if failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="568" column="6" declfile="include/drivers/sensor.h" declline="568" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sensor__interface_1gab797f2f578b1c9cc44f54ab5d503bbf8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
        <definition>static int32_t sensor_ms2_to_g</definition>
        <argsstring>(const struct sensor_value *ms2)</argsstring>
        <name>sensor_ms2_to_g</name>
        <param>
          <type>const struct <ref refid="structsensor__value" kindref="compound">sensor_value</ref> *</type>
          <declname>ms2</declname>
        </param>
        <briefdescription>
<para>Helper function to convert acceleration from m/s^2 to Gs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ms2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="structsensor__value" kindref="compound">sensor_value</ref> struct holding the acceleration, in m/s^2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The converted value, in Gs. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="600" column="23" bodyfile="include/drivers/sensor.h" bodystart="600" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="group__sensor__interface_1ga6ab9ce9c6ee2e52d197e5cb4ccd88979" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sensor_g_to_ms2</definition>
        <argsstring>(int32_t g, struct sensor_value *ms2)</argsstring>
        <name>sensor_g_to_ms2</name>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>g</declname>
        </param>
        <param>
          <type>struct <ref refid="structsensor__value" kindref="compound">sensor_value</ref> *</type>
          <declname>ms2</declname>
        </param>
        <briefdescription>
<para>Helper function to convert acceleration from Gs to m/s^2. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>The G value to be converted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ms2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="structsensor__value" kindref="compound">sensor_value</ref> struct, where the result is stored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="617" column="20" bodyfile="include/drivers/sensor.h" bodystart="617" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="group__sensor__interface_1ga040a907c8934baab66d27b8dfb1ea220" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
        <definition>static int32_t sensor_rad_to_degrees</definition>
        <argsstring>(const struct sensor_value *rad)</argsstring>
        <name>sensor_rad_to_degrees</name>
        <param>
          <type>const struct <ref refid="structsensor__value" kindref="compound">sensor_value</ref> *</type>
          <declname>rad</declname>
        </param>
        <briefdescription>
<para>Helper function for converting radians to degrees. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rad</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="structsensor__value" kindref="compound">sensor_value</ref> struct, holding the value in radians.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The converted value, in degrees. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="630" column="23" bodyfile="include/drivers/sensor.h" bodystart="630" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="group__sensor__interface_1ga39d4b84f5d792e27b2d6d5eb6a2ccb0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sensor_degrees_to_rad</definition>
        <argsstring>(int32_t d, struct sensor_value *rad)</argsstring>
        <name>sensor_degrees_to_rad</name>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type>struct <ref refid="structsensor__value" kindref="compound">sensor_value</ref> *</type>
          <declname>rad</declname>
        </param>
        <briefdescription>
<para>Helper function for converting degrees to radians. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>The value (in degrees) to be converted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rad</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="structsensor__value" kindref="compound">sensor_value</ref> struct, where the result is stored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="647" column="20" bodyfile="include/drivers/sensor.h" bodystart="647" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="group__sensor__interface_1ga29223b754dc436ab1e97ce6209a3ea06" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double sensor_value_to_double</definition>
        <argsstring>(const struct sensor_value *val)</argsstring>
        <name>sensor_value_to_double</name>
        <param>
          <type>const struct <ref refid="structsensor__value" kindref="compound">sensor_value</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Helper function for converting struct <ref refid="structsensor__value" kindref="compound">sensor_value</ref> to double. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="structsensor__value" kindref="compound">sensor_value</ref> struct. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The converted value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="659" column="22" bodyfile="include/drivers/sensor.h" bodystart="659" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="group__sensor__interface_1gaf01bbb251ad0c7f6c55c5b702e8a4048" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int sensor_value_from_double</definition>
        <argsstring>(struct sensor_value *val, double inp)</argsstring>
        <name>sensor_value_from_double</name>
        <param>
          <type>struct <ref refid="structsensor__value" kindref="compound">sensor_value</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inp</declname>
        </param>
        <briefdescription>
<para>Helper function for converting double to struct <ref refid="structsensor__value" kindref="compound">sensor_value</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="structsensor__value" kindref="compound">sensor_value</ref> struct. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inp</parametername>
</parameternamelist>
<parameterdescription>
<para>The converted value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, negative errno code if failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/sensor.h" line="671" column="19" bodyfile="include/drivers/sensor.h" bodystart="671" bodyend="687"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Public APIs for the sensor driver. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_DRIVERS_SENSOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_DRIVERS_SENSOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;device.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="errno_8h" kindref="compound">errno.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="structsensor__value" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__value" kindref="compound">sensor_value</ref><sp/>{</highlight></codeline>
<codeline lineno="45" refid="structsensor__value_1af21dddb084da4c42a7e77b48edf26fbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="structsensor__value_1af21dddb084da4c42a7e77b48edf26fbe" kindref="member">val1</ref>;</highlight></codeline>
<codeline lineno="47" refid="structsensor__value_1a91f81bd0f5da69084cf3c629fde68a1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="structsensor__value_1a91f81bd0f5da69084cf3c629fde68a1b" kindref="member">val2</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref><sp/>{</highlight></codeline>
<codeline lineno="55" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934afa9238082f000350530ca77b2f513d4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934afa9238082f000350530ca77b2f513d4c" kindref="member">SENSOR_CHAN_ACCEL_X</ref>,</highlight></codeline>
<codeline lineno="57" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a61c145468f01916c1a547fb38a1be9a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a61c145468f01916c1a547fb38a1be9a8" kindref="member">SENSOR_CHAN_ACCEL_Y</ref>,</highlight></codeline>
<codeline lineno="59" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a78e06bb48cfe06e42829816ad4cb5a0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a78e06bb48cfe06e42829816ad4cb5a0f" kindref="member">SENSOR_CHAN_ACCEL_Z</ref>,</highlight></codeline>
<codeline lineno="61" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a16c05784ae15a4952ea708c2f11a2ae9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a16c05784ae15a4952ea708c2f11a2ae9" kindref="member">SENSOR_CHAN_ACCEL_XYZ</ref>,</highlight></codeline>
<codeline lineno="63" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ac5709b77f0eb69972ccc055f927e5015" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ac5709b77f0eb69972ccc055f927e5015" kindref="member">SENSOR_CHAN_GYRO_X</ref>,</highlight></codeline>
<codeline lineno="65" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a4a9533172105fd2e55d96e0122a48847" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a4a9533172105fd2e55d96e0122a48847" kindref="member">SENSOR_CHAN_GYRO_Y</ref>,</highlight></codeline>
<codeline lineno="67" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a9b6b9d13cd8d82449823d65779a87a39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a9b6b9d13cd8d82449823d65779a87a39" kindref="member">SENSOR_CHAN_GYRO_Z</ref>,</highlight></codeline>
<codeline lineno="69" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a1d36b89ab3761e9bc86effc839f8db0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a1d36b89ab3761e9bc86effc839f8db0e" kindref="member">SENSOR_CHAN_GYRO_XYZ</ref>,</highlight></codeline>
<codeline lineno="71" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a171f37ba152d34f75ff745cb848b3240" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a171f37ba152d34f75ff745cb848b3240" kindref="member">SENSOR_CHAN_MAGN_X</ref>,</highlight></codeline>
<codeline lineno="73" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a2b4f1764f47428c528447347d7730942" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a2b4f1764f47428c528447347d7730942" kindref="member">SENSOR_CHAN_MAGN_Y</ref>,</highlight></codeline>
<codeline lineno="75" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a2a2115051ded019a57ece5a00f86ea61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a2a2115051ded019a57ece5a00f86ea61" kindref="member">SENSOR_CHAN_MAGN_Z</ref>,</highlight></codeline>
<codeline lineno="77" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a5d1f48466f6f600503af18427fa3da32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a5d1f48466f6f600503af18427fa3da32" kindref="member">SENSOR_CHAN_MAGN_XYZ</ref>,</highlight></codeline>
<codeline lineno="79" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a0a8828f51fe15335ad857d136f197ee1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a0a8828f51fe15335ad857d136f197ee1" kindref="member">SENSOR_CHAN_DIE_TEMP</ref>,</highlight></codeline>
<codeline lineno="81" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a5bf9c4a677405c4a4df3bc3acd116c7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a5bf9c4a677405c4a4df3bc3acd116c7c" kindref="member">SENSOR_CHAN_AMBIENT_TEMP</ref>,</highlight></codeline>
<codeline lineno="83" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a14cd68844542e23d1b641a2bc54132a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a14cd68844542e23d1b641a2bc54132a9" kindref="member">SENSOR_CHAN_PRESS</ref>,</highlight></codeline>
<codeline lineno="88" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934abaec2c1347ef0035221dd4d9c34a4774" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934abaec2c1347ef0035221dd4d9c34a4774" kindref="member">SENSOR_CHAN_PROX</ref>,</highlight></codeline>
<codeline lineno="90" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ad08ddb6c9cd71c853a121f426fcea042" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ad08ddb6c9cd71c853a121f426fcea042" kindref="member">SENSOR_CHAN_HUMIDITY</ref>,</highlight></codeline>
<codeline lineno="92" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a6e91196c11d080c3f5df55fda190e19d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a6e91196c11d080c3f5df55fda190e19d" kindref="member">SENSOR_CHAN_LIGHT</ref>,</highlight></codeline>
<codeline lineno="94" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ad725fe5778f000a17f93f83dab31132c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ad725fe5778f000a17f93f83dab31132c" kindref="member">SENSOR_CHAN_IR</ref>,</highlight></codeline>
<codeline lineno="96" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934af22c8ef66f4871efe5a22863d7f434aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934af22c8ef66f4871efe5a22863d7f434aa" kindref="member">SENSOR_CHAN_RED</ref>,</highlight></codeline>
<codeline lineno="98" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a216a3b2b77d7a92f94547aeb889ae378" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a216a3b2b77d7a92f94547aeb889ae378" kindref="member">SENSOR_CHAN_GREEN</ref>,</highlight></codeline>
<codeline lineno="100" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a6e66f95d73d05c2b3511e2db506844f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a6e66f95d73d05c2b3511e2db506844f5" kindref="member">SENSOR_CHAN_BLUE</ref>,</highlight></codeline>
<codeline lineno="102" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934af5ba63bfef1c64c8a96ae7fba4f35512" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934af5ba63bfef1c64c8a96ae7fba4f35512" kindref="member">SENSOR_CHAN_ALTITUDE</ref>,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a08f0c21c33008292b0b58defe5c06815" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a08f0c21c33008292b0b58defe5c06815" kindref="member">SENSOR_CHAN_PM_1_0</ref>,</highlight></codeline>
<codeline lineno="107" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a3398fdc51964aa06c9a01096d2fac945" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a3398fdc51964aa06c9a01096d2fac945" kindref="member">SENSOR_CHAN_PM_2_5</ref>,</highlight></codeline>
<codeline lineno="109" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aa450541bde278aefcc9b53bd0826e225" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aa450541bde278aefcc9b53bd0826e225" kindref="member">SENSOR_CHAN_PM_10</ref>,</highlight></codeline>
<codeline lineno="111" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ad46d1495990a86fa7e2ab5bbe5338e08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ad46d1495990a86fa7e2ab5bbe5338e08" kindref="member">SENSOR_CHAN_DISTANCE</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a7a23e3e869c5e9a39f6a7bfa28737133" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a7a23e3e869c5e9a39f6a7bfa28737133" kindref="member">SENSOR_CHAN_CO2</ref>,</highlight></codeline>
<codeline lineno="116" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934affee34c60c95398b67ec59644d647f8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934affee34c60c95398b67ec59644d647f8e" kindref="member">SENSOR_CHAN_VOC</ref>,</highlight></codeline>
<codeline lineno="118" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934acf250a87d2d175f99179a5b54cb7ba01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934acf250a87d2d175f99179a5b54cb7ba01" kindref="member">SENSOR_CHAN_GAS_RES</ref>,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a69dd8a737a0cb6f03fa5f60c92840e6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a69dd8a737a0cb6f03fa5f60c92840e6d" kindref="member">SENSOR_CHAN_VOLTAGE</ref>,</highlight></codeline>
<codeline lineno="123" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a1a001ba3ca5ad37308fb7be81f11c950" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a1a001ba3ca5ad37308fb7be81f11c950" kindref="member">SENSOR_CHAN_CURRENT</ref>,</highlight></codeline>
<codeline lineno="125" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a33607371060fca93c3555e8e10d5b177" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a33607371060fca93c3555e8e10d5b177" kindref="member">SENSOR_CHAN_POWER</ref>,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a34ba555026ff976881142512cc8a616b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a34ba555026ff976881142512cc8a616b" kindref="member">SENSOR_CHAN_RESISTANCE</ref>,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a551ffe08a9b1206e3c051f207b92aabf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a551ffe08a9b1206e3c051f207b92aabf" kindref="member">SENSOR_CHAN_ROTATION</ref>,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aa00b7a857e33c925c910661a91389517" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aa00b7a857e33c925c910661a91389517" kindref="member">SENSOR_CHAN_POS_DX</ref>,</highlight></codeline>
<codeline lineno="136" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a974327ca88ea6d22731cd03afeacef76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a974327ca88ea6d22731cd03afeacef76" kindref="member">SENSOR_CHAN_POS_DY</ref>,</highlight></codeline>
<codeline lineno="138" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aeaf49aa075947a160f21ae19cf8c39b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aeaf49aa075947a160f21ae19cf8c39b9" kindref="member">SENSOR_CHAN_POS_DZ</ref>,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a655a576a72cbd6641abc698a3f4304d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a655a576a72cbd6641abc698a3f4304d1" kindref="member">SENSOR_CHAN_RPM</ref>,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ab942649ce1507fb081a77b4bcfc1a57d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ab942649ce1507fb081a77b4bcfc1a57d" kindref="member">SENSOR_CHAN_GAUGE_VOLTAGE</ref>,</highlight></codeline>
<codeline lineno="146" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a4272c1256cde47006d424c5523d26bf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a4272c1256cde47006d424c5523d26bf8" kindref="member">SENSOR_CHAN_GAUGE_AVG_CURRENT</ref>,</highlight></codeline>
<codeline lineno="148" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a5e6b87cacfe3e4703b963a2177d35cc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a5e6b87cacfe3e4703b963a2177d35cc8" kindref="member">SENSOR_CHAN_GAUGE_STDBY_CURRENT</ref>,</highlight></codeline>
<codeline lineno="150" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a603335f6a91846c5089a2a541d9053cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a603335f6a91846c5089a2a541d9053cf" kindref="member">SENSOR_CHAN_GAUGE_MAX_LOAD_CURRENT</ref>,</highlight></codeline>
<codeline lineno="152" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a8cac65c812b3a1fcb55a53f18d827214" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a8cac65c812b3a1fcb55a53f18d827214" kindref="member">SENSOR_CHAN_GAUGE_TEMP</ref>,</highlight></codeline>
<codeline lineno="154" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a7d67d6842ee787fcc8a4d9ee2cbea139" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a7d67d6842ee787fcc8a4d9ee2cbea139" kindref="member">SENSOR_CHAN_GAUGE_STATE_OF_CHARGE</ref>,</highlight></codeline>
<codeline lineno="156" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a54a6be68e09b9f8ca4d349e3d1445649" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a54a6be68e09b9f8ca4d349e3d1445649" kindref="member">SENSOR_CHAN_GAUGE_FULL_CHARGE_CAPACITY</ref>,</highlight></codeline>
<codeline lineno="158" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aaaea6433c82f7b563f86fa53c95ad0ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aaaea6433c82f7b563f86fa53c95ad0ad" kindref="member">SENSOR_CHAN_GAUGE_REMAINING_CHARGE_CAPACITY</ref>,</highlight></codeline>
<codeline lineno="160" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934af9b0ac69fd87a68e7e8d97e52b41304a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934af9b0ac69fd87a68e7e8d97e52b41304a" kindref="member">SENSOR_CHAN_GAUGE_NOM_AVAIL_CAPACITY</ref>,</highlight></codeline>
<codeline lineno="162" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a688287fa1587944424a2eda13b8d98e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a688287fa1587944424a2eda13b8d98e8" kindref="member">SENSOR_CHAN_GAUGE_FULL_AVAIL_CAPACITY</ref>,</highlight></codeline>
<codeline lineno="164" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aa24f9e12f20a716dd152cf889cb51228" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aa24f9e12f20a716dd152cf889cb51228" kindref="member">SENSOR_CHAN_GAUGE_AVG_POWER</ref>,</highlight></codeline>
<codeline lineno="166" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a0613c39397f06d11f4350f8cbcc24cf6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a0613c39397f06d11f4350f8cbcc24cf6" kindref="member">SENSOR_CHAN_GAUGE_STATE_OF_HEALTH</ref>,</highlight></codeline>
<codeline lineno="168" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aa3755e9fcd8c90fef5185082edb29b65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934aa3755e9fcd8c90fef5185082edb29b65" kindref="member">SENSOR_CHAN_GAUGE_TIME_TO_EMPTY</ref>,</highlight></codeline>
<codeline lineno="170" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a14d4c802805e1e07c9b4e47ccaff0eeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a14d4c802805e1e07c9b4e47ccaff0eeb" kindref="member">SENSOR_CHAN_GAUGE_TIME_TO_FULL</ref>,</highlight></codeline>
<codeline lineno="172" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a8834978858c2b62b5e923d06cfcb1a46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a8834978858c2b62b5e923d06cfcb1a46" kindref="member">SENSOR_CHAN_GAUGE_CYCLE_COUNT</ref>,</highlight></codeline>
<codeline lineno="174" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a6f96ba4db6cf812b223f9a09f2a287d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a6f96ba4db6cf812b223f9a09f2a287d0" kindref="member">SENSOR_CHAN_GAUGE_DESIGN_VOLTAGE</ref>,</highlight></codeline>
<codeline lineno="176" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a2c33a7f11d5b3996e95167698a2056cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a2c33a7f11d5b3996e95167698a2056cf" kindref="member">SENSOR_CHAN_GAUGE_DESIRED_VOLTAGE</ref>,</highlight></codeline>
<codeline lineno="178" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a4aa8bba1b260e1994542383d8e2e908f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934a4aa8bba1b260e1994542383d8e2e908f" kindref="member">SENSOR_CHAN_GAUGE_DESIRED_CHARGING_CURRENT</ref>,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ab275027eb550b2b075c44917634eca2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ab275027eb550b2b075c44917634eca2c" kindref="member">SENSOR_CHAN_ALL</ref>,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934abb2893ccb71c9e1eeb155d7cbd539303" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934abb2893ccb71c9e1eeb155d7cbd539303" kindref="member">SENSOR_CHAN_COMMON_COUNT</ref>,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ac1f260296289d93a13c5686ca11bdc12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ac1f260296289d93a13c5686ca11bdc12" kindref="member">SENSOR_CHAN_PRIV_START</ref><sp/>=<sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934abb2893ccb71c9e1eeb155d7cbd539303" kindref="member">SENSOR_CHAN_COMMON_COUNT</ref>,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ad842035a01166417d90cd5d7630733b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ad842035a01166417d90cd5d7630733b1" kindref="member">SENSOR_CHAN_MAX</ref><sp/>=<sp/><ref refid="stdint_8h_1ac58f2c111cc9989c86db2a7dc4fd84ca" kindref="member">INT16_MAX</ref>,</highlight></codeline>
<codeline lineno="198"><highlight class="normal">};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="group__sensor__interface_1ga08215279400e8c9eb05ce4e4f0898ffd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1ga08215279400e8c9eb05ce4e4f0898ffd" kindref="member">sensor_trigger_type</ref><sp/>{</highlight></codeline>
<codeline lineno="208" refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffdabf92b196394726ec90f1d61586a7f023" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffdabf92b196394726ec90f1d61586a7f023" kindref="member">SENSOR_TRIG_TIMER</ref>,</highlight></codeline>
<codeline lineno="210" refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffdaf7c161e309c267a7dd6daf2ad176f44f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffdaf7c161e309c267a7dd6daf2ad176f44f" kindref="member">SENSOR_TRIG_DATA_READY</ref>,</highlight></codeline>
<codeline lineno="219" refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda3bb90a3334bcf613c9efbdf2ed05f855" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda3bb90a3334bcf613c9efbdf2ed05f855" kindref="member">SENSOR_TRIG_DELTA</ref>,</highlight></codeline>
<codeline lineno="221" refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda448226d83b28c2862c353a8cda7be0d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda448226d83b28c2862c353a8cda7be0d5" kindref="member">SENSOR_TRIG_NEAR_FAR</ref>,</highlight></codeline>
<codeline lineno="228" refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda8f875f881b6540eebc28e3d6a7d46606" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda8f875f881b6540eebc28e3d6a7d46606" kindref="member">SENSOR_TRIG_THRESHOLD</ref>,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffdae49a25e6400f0753f6bac8a7d136200d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffdae49a25e6400f0753f6bac8a7d136200d" kindref="member">SENSOR_TRIG_TAP</ref>,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffdab95e52584a6bc3343181f495cd4cb2ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffdab95e52584a6bc3343181f495cd4cb2ef" kindref="member">SENSOR_TRIG_DOUBLE_TAP</ref>,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda4943ffb4afaf4cbae39e85693bd4374c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda4943ffb4afaf4cbae39e85693bd4374c" kindref="member">SENSOR_TRIG_FREEFALL</ref>,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda8d1f2621fad4fd685d56cca3f9b042f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda8d1f2621fad4fd685d56cca3f9b042f5" kindref="member">SENSOR_TRIG_COMMON_COUNT</ref>,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda5e1a94f21fee67ee98296153ea640921" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda5e1a94f21fee67ee98296153ea640921" kindref="member">SENSOR_TRIG_PRIV_START</ref><sp/>=<sp/><ref refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda8d1f2621fad4fd685d56cca3f9b042f5" kindref="member">SENSOR_TRIG_COMMON_COUNT</ref>,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda9de566f44de519f94c59c58df1efc4c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga08215279400e8c9eb05ce4e4f0898ffda9de566f44de519f94c59c58df1efc4c4" kindref="member">SENSOR_TRIG_MAX</ref><sp/>=<sp/><ref refid="stdint_8h_1ac58f2c111cc9989c86db2a7dc4fd84ca" kindref="member">INT16_MAX</ref>,</highlight></codeline>
<codeline lineno="254"><highlight class="normal">};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="structsensor__trigger" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__trigger" kindref="compound">sensor_trigger</ref><sp/>{</highlight></codeline>
<codeline lineno="261" refid="structsensor__trigger_1ac2cce1ec6ff82f95cb06d0dccafd7af0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1ga08215279400e8c9eb05ce4e4f0898ffd" kindref="member">sensor_trigger_type</ref><sp/><ref refid="structsensor__trigger_1ac2cce1ec6ff82f95cb06d0dccafd7af0" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="263" refid="structsensor__trigger_1ae01f99b124aa99c59b9967818022e112" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref><sp/><ref refid="structsensor__trigger_1ae01f99b124aa99c59b9967818022e112" kindref="member">chan</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">};</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="group__sensor__interface_1ga0dcb6842bc969492bd1c9eb49708940b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1ga0dcb6842bc969492bd1c9eb49708940b" kindref="member">sensor_attribute</ref><sp/>{</highlight></codeline>
<codeline lineno="274" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940bacb07e3508ea5503dbcdceee3f17d2291" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940bacb07e3508ea5503dbcdceee3f17d2291" kindref="member">SENSOR_ATTR_SAMPLING_FREQUENCY</ref>,</highlight></codeline>
<codeline lineno="276" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940baee644485ab5f64e7c5273bbe562deaaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940baee644485ab5f64e7c5273bbe562deaaa" kindref="member">SENSOR_ATTR_LOWER_THRESH</ref>,</highlight></codeline>
<codeline lineno="278" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba5af51bd0640a87a94476eee112a4460b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba5af51bd0640a87a94476eee112a4460b" kindref="member">SENSOR_ATTR_UPPER_THRESH</ref>,</highlight></codeline>
<codeline lineno="280" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940bac4538665a244cb7f18fc053c40134302" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940bac4538665a244cb7f18fc053c40134302" kindref="member">SENSOR_ATTR_SLOPE_TH</ref>,</highlight></codeline>
<codeline lineno="285" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940baf510b32b2e2395bbcf1c8fd7159ed2a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940baf510b32b2e2395bbcf1c8fd7159ed2a1" kindref="member">SENSOR_ATTR_SLOPE_DUR</ref>,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hysteresis<sp/>for<sp/>trigger<sp/>thresholds.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba044e67bfc04e8ddc2de7d2058fffbc94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba044e67bfc04e8ddc2de7d2058fffbc94" kindref="member">SENSOR_ATTR_HYSTERESIS</ref>,</highlight></codeline>
<codeline lineno="289" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba3d32987f75284d80d3f64bf44f5c6ccd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba3d32987f75284d80d3f64bf44f5c6ccd" kindref="member">SENSOR_ATTR_OVERSAMPLING</ref>,</highlight></codeline>
<codeline lineno="291" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940bad30df3100fb6b285a6a786fdc77234d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940bad30df3100fb6b285a6a786fdc77234d3" kindref="member">SENSOR_ATTR_FULL_SCALE</ref>,</highlight></codeline>
<codeline lineno="296" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba332935dcb6f7e228cb9c595a545079fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba332935dcb6f7e228cb9c595a545079fd" kindref="member">SENSOR_ATTR_OFFSET</ref>,</highlight></codeline>
<codeline lineno="301" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba3043381b539610a8b424f12d76474bdf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba3043381b539610a8b424f12d76474bdf" kindref="member">SENSOR_ATTR_CALIB_TARGET</ref>,</highlight></codeline>
<codeline lineno="303" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba75cd3aca26859fd7c10c83d86e3471e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba75cd3aca26859fd7c10c83d86e3471e9" kindref="member">SENSOR_ATTR_CONFIGURATION</ref>,</highlight></codeline>
<codeline lineno="305" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba843d1e79573c634987e5e839ba9e965e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba843d1e79573c634987e5e839ba9e965e" kindref="member">SENSOR_ATTR_CALIBRATION</ref>,</highlight></codeline>
<codeline lineno="307" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba1f8d2242fa9d63a13c6a48fe3a1cbe52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba1f8d2242fa9d63a13c6a48fe3a1cbe52" kindref="member">SENSOR_ATTR_FEATURE_MASK</ref>,</highlight></codeline>
<codeline lineno="309" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940baaedf76e63224adc3fa266d35666e0a3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940baaedf76e63224adc3fa266d35666e0a3a" kindref="member">SENSOR_ATTR_ALERT</ref>,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba99ceedef81217614ada0c8a469f91eb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba99ceedef81217614ada0c8a469f91eb8" kindref="member">SENSOR_ATTR_COMMON_COUNT</ref>,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940bafb4b5859bc369f817f60eaa161bcefc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940bafb4b5859bc369f817f60eaa161bcefc3" kindref="member">SENSOR_ATTR_PRIV_START</ref><sp/>=<sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940ba99ceedef81217614ada0c8a469f91eb8" kindref="member">SENSOR_ATTR_COMMON_COUNT</ref>,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940baf6bd0b33ca2117ef329692c291f6384b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gga0dcb6842bc969492bd1c9eb49708940baf6bd0b33ca2117ef329692c291f6384b" kindref="member">SENSOR_ATTR_MAX</ref><sp/>=<sp/><ref refid="stdint_8h_1ac58f2c111cc9989c86db2a7dc4fd84ca" kindref="member">INT16_MAX</ref>,</highlight></codeline>
<codeline lineno="326"><highlight class="normal">};</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="group__sensor__interface_1ga66f7113ea7209626e17883e9fcbe72b7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__sensor__interface_1ga66f7113ea7209626e17883e9fcbe72b7" kindref="member">sensor_trigger_handler_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__trigger" kindref="compound">sensor_trigger</ref><sp/>*trigger);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="group__sensor__interface_1ga0ec8d3268962b051febedf98c4b8f616" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__sensor__interface_1ga0ec8d3268962b051febedf98c4b8f616" kindref="member">sensor_attr_set_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref><sp/>chan,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1ga0dcb6842bc969492bd1c9eb49708940b" kindref="member">sensor_attribute</ref><sp/>attr,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__value" kindref="compound">sensor_value</ref><sp/>*val);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="group__sensor__interface_1ga4088d038e6dd9d9f41c47e0f5bc720fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__sensor__interface_1ga4088d038e6dd9d9f41c47e0f5bc720fa" kindref="member">sensor_attr_get_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref><sp/>chan,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1ga0dcb6842bc969492bd1c9eb49708940b" kindref="member">sensor_attribute</ref><sp/>attr,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__value" kindref="compound">sensor_value</ref><sp/>*val);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="group__sensor__interface_1gabee4f73fdc39b40f6c607e58dcaf2a87" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__sensor__interface_1gabee4f73fdc39b40f6c607e58dcaf2a87" kindref="member">sensor_trigger_set_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__trigger" kindref="compound">sensor_trigger</ref><sp/>*trig,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ga66f7113ea7209626e17883e9fcbe72b7" kindref="member">sensor_trigger_handler_t</ref><sp/><ref refid="timer_2starve_2src_2main_8c_1ab28ee8b6412d992f77f819e17b664869" kindref="member">handler</ref>);</highlight></codeline>
<codeline lineno="375" refid="group__sensor__interface_1ga272df5be62808cf350f3dd25671bd222" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__sensor__interface_1ga272df5be62808cf350f3dd25671bd222" kindref="member">sensor_sample_fetch_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref><sp/>chan);</highlight></codeline>
<codeline lineno="383" refid="group__sensor__interface_1gab62a0c4d5cba677d35f7f53a727e6550" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__sensor__interface_1gab62a0c4d5cba677d35f7f53a727e6550" kindref="member">sensor_channel_get_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref><sp/>chan,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__value" kindref="compound">sensor_value</ref><sp/>*val);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="structsensor__driver__api" refkind="compound"><highlight class="normal">__subsystem<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__driver__api" kindref="compound">sensor_driver_api</ref><sp/>{</highlight></codeline>
<codeline lineno="388" refid="structsensor__driver__api_1a2d230a976b19a699d132034f58bb2b6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ga0ec8d3268962b051febedf98c4b8f616" kindref="member">sensor_attr_set_t</ref><sp/><ref refid="structsensor__driver__api_1a2d230a976b19a699d132034f58bb2b6a" kindref="member">attr_set</ref>;</highlight></codeline>
<codeline lineno="389" refid="structsensor__driver__api_1a3e28950f844c3f8b8da5ba9ff8052e46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ga4088d038e6dd9d9f41c47e0f5bc720fa" kindref="member">sensor_attr_get_t</ref><sp/><ref refid="structsensor__driver__api_1a3e28950f844c3f8b8da5ba9ff8052e46" kindref="member">attr_get</ref>;</highlight></codeline>
<codeline lineno="390" refid="structsensor__driver__api_1a4708070fd6654ecbbe631819aba319bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gabee4f73fdc39b40f6c607e58dcaf2a87" kindref="member">sensor_trigger_set_t</ref><sp/><ref refid="structsensor__driver__api_1a4708070fd6654ecbbe631819aba319bd" kindref="member">trigger_set</ref>;</highlight></codeline>
<codeline lineno="391" refid="structsensor__driver__api_1a4b40e25b81fe070e2f6bdcf7f8a4a31f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ga272df5be62808cf350f3dd25671bd222" kindref="member">sensor_sample_fetch_t</ref><sp/><ref refid="structsensor__driver__api_1a4b40e25b81fe070e2f6bdcf7f8a4a31f" kindref="member">sample_fetch</ref>;</highlight></codeline>
<codeline lineno="392" refid="structsensor__driver__api_1a667b41bf51f2c7a6bb31713fbf889113" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1gab62a0c4d5cba677d35f7f53a727e6550" kindref="member">sensor_channel_get_t</ref><sp/><ref refid="structsensor__driver__api_1a667b41bf51f2c7a6bb31713fbf889113" kindref="member">channel_get</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="group__sensor__interface_1gafbf65226a227e9f8824908bc38e336f5" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gafbf65226a227e9f8824908bc38e336f5" kindref="member">sensor_attr_set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref><sp/>chan,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1ga0dcb6842bc969492bd1c9eb49708940b" kindref="member">sensor_attribute</ref><sp/>attr,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsensor__value" kindref="compound">sensor_value</ref><sp/>*val);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_impl_sensor_attr_set(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref><sp/>chan,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1ga0dcb6842bc969492bd1c9eb49708940b" kindref="member">sensor_attribute</ref><sp/>attr,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsensor__value" kindref="compound">sensor_value</ref><sp/>*val)</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__driver__api" kindref="compound">sensor_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__driver__api" kindref="compound">sensor_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structsensor__driver__api_1a2d230a976b19a699d132034f58bb2b6a" kindref="member">attr_set</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structsensor__driver__api_1a2d230a976b19a699d132034f58bb2b6a" kindref="member">attr_set</ref>(dev,<sp/>chan,<sp/>attr,<sp/>val);</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="group__sensor__interface_1gaedfdfc71dce702dc1fb1c6e60ff0f73a" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaedfdfc71dce702dc1fb1c6e60ff0f73a" kindref="member">sensor_attr_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref><sp/>chan,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1ga0dcb6842bc969492bd1c9eb49708940b" kindref="member">sensor_attribute</ref><sp/>attr,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsensor__value" kindref="compound">sensor_value</ref><sp/>*val);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_impl_sensor_attr_get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref><sp/>chan,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1ga0dcb6842bc969492bd1c9eb49708940b" kindref="member">sensor_attribute</ref><sp/>attr,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsensor__value" kindref="compound">sensor_value</ref><sp/>*val)</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__driver__api" kindref="compound">sensor_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__driver__api" kindref="compound">sensor_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structsensor__driver__api_1a3e28950f844c3f8b8da5ba9ff8052e46" kindref="member">attr_get</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structsensor__driver__api_1a3e28950f844c3f8b8da5ba9ff8052e46" kindref="member">attr_get</ref>(dev,<sp/>chan,<sp/>attr,<sp/>val);</highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="group__sensor__interface_1ga7c72aca732e0641612d2f9437c2e41b7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1ga7c72aca732e0641612d2f9437c2e41b7" kindref="member">sensor_trigger_set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsensor__trigger" kindref="compound">sensor_trigger</ref><sp/>*trig,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sensor__interface_1ga66f7113ea7209626e17883e9fcbe72b7" kindref="member">sensor_trigger_handler_t</ref><sp/><ref refid="timer_2starve_2src_2main_8c_1ab28ee8b6412d992f77f819e17b664869" kindref="member">handler</ref>)</highlight></codeline>
<codeline lineno="479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__driver__api" kindref="compound">sensor_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__driver__api" kindref="compound">sensor_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structsensor__driver__api_1a4708070fd6654ecbbe631819aba319bd" kindref="member">trigger_set</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structsensor__driver__api_1a4708070fd6654ecbbe631819aba319bd" kindref="member">trigger_set</ref>(dev,<sp/>trig,<sp/><ref refid="timer_2starve_2src_2main_8c_1ab28ee8b6412d992f77f819e17b664869" kindref="member">handler</ref>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="group__sensor__interface_1gaa75e25d93ee7cac0bf38399f3c006dff" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaa75e25d93ee7cac0bf38399f3c006dff" kindref="member">sensor_sample_fetch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_impl_sensor_sample_fetch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__driver__api" kindref="compound">sensor_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__driver__api" kindref="compound">sensor_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structsensor__driver__api_1a4b40e25b81fe070e2f6bdcf7f8a4a31f" kindref="member">sample_fetch</ref>(dev,<sp/><ref refid="group__sensor__interface_1ggaaa1b502bc029b10d7b23b0a25ef4e934ab275027eb550b2b075c44917634eca2c" kindref="member">SENSOR_CHAN_ALL</ref>);</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="group__sensor__interface_1gac16192826432438a15274cf28d66e8a6" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gac16192826432438a15274cf28d66e8a6" kindref="member">sensor_sample_fetch_chan</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref><sp/>type);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_impl_sensor_sample_fetch_chan(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref><sp/>type)</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__driver__api" kindref="compound">sensor_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__driver__api" kindref="compound">sensor_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structsensor__driver__api_1a4b40e25b81fe070e2f6bdcf7f8a4a31f" kindref="member">sample_fetch</ref>(dev,<sp/>type);</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="group__sensor__interface_1ga9e0e6c1408d32c52267984bae7cb268d" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1ga9e0e6c1408d32c52267984bae7cb268d" kindref="member">sensor_channel_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref><sp/>chan,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsensor__value" kindref="compound">sensor_value</ref><sp/>*val);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_impl_sensor_channel_get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaaa1b502bc029b10d7b23b0a25ef4e934" kindref="member">sensor_channel</ref><sp/>chan,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsensor__value" kindref="compound">sensor_value</ref><sp/>*val)</highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__driver__api" kindref="compound">sensor_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__driver__api" kindref="compound">sensor_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structsensor__driver__api_1a667b41bf51f2c7a6bb31713fbf889113" kindref="member">channel_get</ref>(dev,<sp/>chan,<sp/>val);</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="585" refid="group__sensor__interface_1ga0066e049c4f084305ca2b978e5c7454d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SENSOR_G<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9806650LL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="group__sensor__interface_1ga6ebdc2f6942334de3cc248a53db7df33" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SENSOR_PI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3141592LL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="600" refid="group__sensor__interface_1gab797f2f578b1c9cc44f54ab5d503bbf8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="group__sensor__interface_1gab797f2f578b1c9cc44f54ab5d503bbf8" kindref="member">sensor_ms2_to_g</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsensor__value" kindref="compound">sensor_value</ref><sp/>*ms2)</highlight></codeline>
<codeline lineno="601"><highlight class="normal">{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref><sp/>micro_ms2<sp/>=<sp/>ms2-&gt;<ref refid="structsensor__value_1af21dddb084da4c42a7e77b48edf26fbe" kindref="member">val1</ref><sp/>*<sp/>1000000LL<sp/>+<sp/>ms2-&gt;<ref refid="structsensor__value_1a91f81bd0f5da69084cf3c629fde68a1b" kindref="member">val2</ref>;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(micro_ms2<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(micro_ms2<sp/>+<sp/><ref refid="group__sensor__interface_1ga0066e049c4f084305ca2b978e5c7454d" kindref="member">SENSOR_G</ref><sp/>/<sp/>2)<sp/>/<sp/><ref refid="group__sensor__interface_1ga0066e049c4f084305ca2b978e5c7454d" kindref="member">SENSOR_G</ref>;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(micro_ms2<sp/>-<sp/><ref refid="group__sensor__interface_1ga0066e049c4f084305ca2b978e5c7454d" kindref="member">SENSOR_G</ref><sp/>/<sp/>2)<sp/>/<sp/><ref refid="group__sensor__interface_1ga0066e049c4f084305ca2b978e5c7454d" kindref="member">SENSOR_G</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="group__sensor__interface_1ga6ab9ce9c6ee2e52d197e5cb4ccd88979" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1ga6ab9ce9c6ee2e52d197e5cb4ccd88979" kindref="member">sensor_g_to_ms2</ref>(<ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>g,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsensor__value" kindref="compound">sensor_value</ref><sp/>*ms2)</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms2-&gt;<ref refid="structsensor__value_1af21dddb084da4c42a7e77b48edf26fbe" kindref="member">val1</ref><sp/>=<sp/>((<ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref>)g<sp/>*<sp/><ref refid="group__sensor__interface_1ga0066e049c4f084305ca2b978e5c7454d" kindref="member">SENSOR_G</ref>)<sp/>/<sp/>1000000LL;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms2-&gt;<ref refid="structsensor__value_1a91f81bd0f5da69084cf3c629fde68a1b" kindref="member">val2</ref><sp/>=<sp/>((<ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref>)g<sp/>*<sp/><ref refid="group__sensor__interface_1ga0066e049c4f084305ca2b978e5c7454d" kindref="member">SENSOR_G</ref>)<sp/>%<sp/>1000000LL;</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="630" refid="group__sensor__interface_1ga040a907c8934baab66d27b8dfb1ea220" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="group__sensor__interface_1ga040a907c8934baab66d27b8dfb1ea220" kindref="member">sensor_rad_to_degrees</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsensor__value" kindref="compound">sensor_value</ref><sp/>*rad)</highlight></codeline>
<codeline lineno="631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref><sp/>micro_rad_s<sp/>=<sp/>rad-&gt;<ref refid="structsensor__value_1af21dddb084da4c42a7e77b48edf26fbe" kindref="member">val1</ref><sp/>*<sp/>1000000LL<sp/>+<sp/>rad-&gt;<ref refid="structsensor__value_1a91f81bd0f5da69084cf3c629fde68a1b" kindref="member">val2</ref>;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(micro_rad_s<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(micro_rad_s<sp/>*<sp/>180LL<sp/>+<sp/><ref refid="group__sensor__interface_1ga6ebdc2f6942334de3cc248a53db7df33" kindref="member">SENSOR_PI</ref><sp/>/<sp/>2)<sp/>/<sp/><ref refid="group__sensor__interface_1ga6ebdc2f6942334de3cc248a53db7df33" kindref="member">SENSOR_PI</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(micro_rad_s<sp/>*<sp/>180LL<sp/>-<sp/><ref refid="group__sensor__interface_1ga6ebdc2f6942334de3cc248a53db7df33" kindref="member">SENSOR_PI</ref><sp/>/<sp/>2)<sp/>/<sp/><ref refid="group__sensor__interface_1ga6ebdc2f6942334de3cc248a53db7df33" kindref="member">SENSOR_PI</ref>;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="647" refid="group__sensor__interface_1ga39d4b84f5d792e27b2d6d5eb6a2ccb0d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1ga39d4b84f5d792e27b2d6d5eb6a2ccb0d" kindref="member">sensor_degrees_to_rad</ref>(<ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="asm-macro-32-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsensor__value" kindref="compound">sensor_value</ref><sp/>*rad)</highlight></codeline>
<codeline lineno="648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rad-&gt;<ref refid="structsensor__value_1af21dddb084da4c42a7e77b48edf26fbe" kindref="member">val1</ref><sp/>=<sp/>((<ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref>)<ref refid="asm-macro-32-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref><sp/>*<sp/><ref refid="group__sensor__interface_1ga6ebdc2f6942334de3cc248a53db7df33" kindref="member">SENSOR_PI</ref><sp/>/<sp/>180LL)<sp/>/<sp/>1000000LL;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rad-&gt;<ref refid="structsensor__value_1a91f81bd0f5da69084cf3c629fde68a1b" kindref="member">val2</ref><sp/>=<sp/>((<ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref>)<ref refid="asm-macro-32-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref><sp/>*<sp/><ref refid="group__sensor__interface_1ga6ebdc2f6942334de3cc248a53db7df33" kindref="member">SENSOR_PI</ref><sp/>/<sp/>180LL)<sp/>%<sp/>1000000LL;</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="659" refid="group__sensor__interface_1ga29223b754dc436ab1e97ce6209a3ea06" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1ga29223b754dc436ab1e97ce6209a3ea06" kindref="member">sensor_value_to_double</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsensor__value" kindref="compound">sensor_value</ref><sp/>*val)</highlight></codeline>
<codeline lineno="660"><highlight class="normal">{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)val-&gt;<ref refid="structsensor__value_1af21dddb084da4c42a7e77b48edf26fbe" kindref="member">val1</ref><sp/>+<sp/>(double)val-&gt;<ref refid="structsensor__value_1a91f81bd0f5da69084cf3c629fde68a1b" kindref="member">val2</ref><sp/>/<sp/>1000000;</highlight></codeline>
<codeline lineno="662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="group__sensor__interface_1gaf01bbb251ad0c7f6c55c5b702e8a4048" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__sensor__interface_1gaf01bbb251ad0c7f6c55c5b702e8a4048" kindref="member">sensor_value_from_double</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsensor__value" kindref="compound">sensor_value</ref><sp/>*val,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inp)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inp<sp/>&lt;<sp/>INT32_MIN<sp/>||<sp/>inp<sp/>&gt;<sp/><ref refid="stdint_8h_1a181807730d4a375f848ba139813ce04f" kindref="member">INT32_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1gaa1591a4f3a86360108de5b9ba34980ca" kindref="member">ERANGE</ref>;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val2<sp/>=<sp/>(inp<sp/>-<sp/>(<ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref>)inp)<sp/>*<sp/>1000000.0;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val2<sp/>&lt;<sp/>INT32_MIN<sp/>||<sp/>val2<sp/>&gt;<sp/><ref refid="stdint_8h_1a181807730d4a375f848ba139813ce04f" kindref="member">INT32_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1gaa1591a4f3a86360108de5b9ba34980ca" kindref="member">ERANGE</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val-&gt;<ref refid="structsensor__value_1af21dddb084da4c42a7e77b48edf26fbe" kindref="member">val1</ref><sp/>=<sp/>(<ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref>)inp;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val-&gt;<ref refid="structsensor__value_1a91f81bd0f5da69084cf3c629fde68a1b" kindref="member">val2</ref><sp/>=<sp/>(<ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref>)val2;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;syscalls/sensor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_DRIVERS_SENSOR_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/drivers/sensor.h"/>
  </compounddef>
</doxygen>
