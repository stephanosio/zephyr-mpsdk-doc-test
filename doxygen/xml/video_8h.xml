<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="video_8h" kind="file" language="C++">
    <compoundname>video.h</compoundname>
    <includes local="no">device.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">zephyr.h</includes>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includes refid="video-controls_8h" local="no">drivers/video-controls.h</includes>
    <incdepgraph>
      <node id="7">
        <label>drivers/video-controls.h</label>
        <link refid="video-controls_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/drivers/video.h</label>
        <link refid="video_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="2">
        <label>device.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structvideo__format" prot="public">video_format</innerclass>
    <innerclass refid="structvideo__format__cap" prot="public">video_format_cap</innerclass>
    <innerclass refid="structvideo__caps" prot="public">video_caps</innerclass>
    <innerclass refid="structvideo__buffer" prot="public">video_buffer</innerclass>
    <innerclass refid="structvideo__driver__api" prot="public">video_driver_api</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__video__interface_1gabeacdd211927e893561446fd7299ab08" prot="public" static="no">
        <name>video_fourcc</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <param><defname>d</defname></param>
        <initializer>	((<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref>)(a) | ((<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref>)(b) &lt;&lt; 8) | ((<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref>)(<ref refid="kobject_8c_1aa52df6052d1a8a5319a5c99bbc852281" kindref="member">c</ref>) &lt;&lt; 16) | ((<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref>)(<ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>) &lt;&lt; 24))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="560" column="9" bodyfile="include/drivers/video.h" bodystart="560" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__video__interface_1ga64ad74bb6c92041a4190614b684ae024" prot="public" static="no">
        <name>VIDEO_PIX_FMT_BGGR8</name>
        <initializer><ref refid="group__video__interface_1gabeacdd211927e893561446fd7299ab08" kindref="member">video_fourcc</ref>(&apos;B&apos;, &apos;G&apos;, &apos;G&apos;, &apos;R&apos;) /*  8  BGBG.. GRGR.. */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="564" column="9" bodyfile="include/drivers/video.h" bodystart="564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__video__interface_1gaebdfd9d4230b56f6b8533630356b8793" prot="public" static="no">
        <name>VIDEO_PIX_FMT_GBRG8</name>
        <initializer><ref refid="group__video__interface_1gabeacdd211927e893561446fd7299ab08" kindref="member">video_fourcc</ref>(&apos;G&apos;, &apos;B&apos;, &apos;R&apos;, &apos;G&apos;) /*  8  GBGB.. RGRG.. */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="565" column="9" bodyfile="include/drivers/video.h" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__video__interface_1ga6b9c8d43406e45927f4e9e94504eae9c" prot="public" static="no">
        <name>VIDEO_PIX_FMT_GRBG8</name>
        <initializer><ref refid="group__video__interface_1gabeacdd211927e893561446fd7299ab08" kindref="member">video_fourcc</ref>(&apos;G&apos;, &apos;R&apos;, &apos;B&apos;, &apos;G&apos;) /*  8  GRGR.. BGBG.. */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="566" column="9" bodyfile="include/drivers/video.h" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__video__interface_1ga0c98dc205b724c9e4556e41cc266d80e" prot="public" static="no">
        <name>VIDEO_PIX_FMT_RGGB8</name>
        <initializer><ref refid="group__video__interface_1gabeacdd211927e893561446fd7299ab08" kindref="member">video_fourcc</ref>(&apos;R&apos;, &apos;G&apos;, &apos;G&apos;, &apos;B&apos;) /*  8  RGRG.. GBGB.. */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="567" column="9" bodyfile="include/drivers/video.h" bodystart="567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__video__interface_1gaf009d0eb7dbdb3bfd8883da03478c1ec" prot="public" static="no">
        <name>VIDEO_PIX_FMT_RGB565</name>
        <initializer><ref refid="group__video__interface_1gabeacdd211927e893561446fd7299ab08" kindref="member">video_fourcc</ref>(&apos;R&apos;, &apos;G&apos;, &apos;B&apos;, &apos;P&apos;) /* 16  RGB-5-6-5 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="570" column="9" bodyfile="include/drivers/video.h" bodystart="570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__video__interface_1ga035a13c38c4f123411547e2c40d58bd2" prot="public" static="no">
        <name>VIDEO_PIX_FMT_JPEG</name>
        <initializer><ref refid="group__video__interface_1gabeacdd211927e893561446fd7299ab08" kindref="member">video_fourcc</ref>(&apos;J&apos;, &apos;P&apos;, &apos;E&apos;, &apos;G&apos;) /*  8  JPEG */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="573" column="9" bodyfile="include/drivers/video.h" bodystart="573" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" prot="public" static="no" strong="no">
        <type></type>
        <name>video_endpoint_id</name>
        <enumvalue id="group__video__interface_1ggafa3d076a1324ea54b5c5ec7806cb2ef9a4293b9f211c8ec80d5ad873cec7022c7" prot="public">
          <name>VIDEO_EP_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__video__interface_1ggafa3d076a1324ea54b5c5ec7806cb2ef9a450d124253f8463114b851b1e51960fb" prot="public">
          <name>VIDEO_EP_ANY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__video__interface_1ggafa3d076a1324ea54b5c5ec7806cb2ef9a33427df6cd696ceede84d93d5245d3e7" prot="public">
          <name>VIDEO_EP_IN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__video__interface_1ggafa3d076a1324ea54b5c5ec7806cb2ef9a69d107ac2c94372d4ae872b4e7e4b35a" prot="public">
          <name>VIDEO_EP_OUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>video_endpoint_id enum Identify the video device endpoint. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="117" column="1" bodyfile="include/drivers/video.h" bodystart="117" bodyend="122"/>
      </memberdef>
      <memberdef kind="enum" id="group__video__interface_1ga0f50f287c4075e992fbab6d8a990d7a8" prot="public" static="no" strong="no">
        <type></type>
        <name>video_signal_result</name>
        <enumvalue id="group__video__interface_1gga0f50f287c4075e992fbab6d8a990d7a8ad7499b0b62f470b63d624ec49d358db8" prot="public">
          <name>VIDEO_BUF_DONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__video__interface_1gga0f50f287c4075e992fbab6d8a990d7a8a268855ccd0d8e10f608d4dac5f76fac8" prot="public">
          <name>VIDEO_BUF_ABORTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__video__interface_1gga0f50f287c4075e992fbab6d8a990d7a8afe8726c40851834057bbf9d99b0433a3" prot="public">
          <name>VIDEO_BUF_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>video_event enum Identify video event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="128" column="1" bodyfile="include/drivers/video.h" bodystart="128" bodyend="132"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__video__interface_1ga0cc17cc7532305e6c1c826387745d653" prot="public" static="no">
        <type>int(*</type>
        <definition>video_api_set_format_t</definition>
        <argsstring>)(const struct device *dev, enum video_endpoint_id ep, struct video_format *fmt)</argsstring>
        <name>video_api_set_format_t</name>
        <briefdescription>
<para>Set video format See <ref refid="group__video__interface_1gae38df95199e41ac197b9754824b2bd29" kindref="member">video_set_format()</ref> for argument descriptions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="139" column="9" bodyfile="include/drivers/video.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__video__interface_1ga4442f391f6d0281d323fb15ab47ced1e" prot="public" static="no">
        <type>int(*</type>
        <definition>video_api_get_format_t</definition>
        <argsstring>)(const struct device *dev, enum video_endpoint_id ep, struct video_format *fmt)</argsstring>
        <name>video_api_get_format_t</name>
        <briefdescription>
<para>get current video format See <ref refid="group__video__interface_1gac0964bd0b57c6be5e773a21af0438edc" kindref="member">video_get_format()</ref> for argument descriptions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="148" column="9" bodyfile="include/drivers/video.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__video__interface_1ga11186fd10ade53fa17238dc0be634df0" prot="public" static="no">
        <type>int(*</type>
        <definition>video_api_enqueue_t</definition>
        <argsstring>)(const struct device *dev, enum video_endpoint_id ep, struct video_buffer *buf)</argsstring>
        <name>video_api_enqueue_t</name>
        <briefdescription>
<para>Enqueue a buffer in the driver’s incoming queue. See <ref refid="group__video__interface_1gac19d14a5875d48c96bd66a8bb65e8a51" kindref="member">video_enqueue()</ref> for argument descriptions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="157" column="9" bodyfile="include/drivers/video.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__video__interface_1gaa51265cb53a7fd67f4d0fcaf37e72145" prot="public" static="no">
        <type>int(*</type>
        <definition>video_api_dequeue_t</definition>
        <argsstring>)(const struct device *dev, enum video_endpoint_id ep, struct video_buffer **buf, k_timeout_t timeout)</argsstring>
        <name>video_api_dequeue_t</name>
        <briefdescription>
<para>Dequeue a buffer from the driver’s outgoing queue. See <ref refid="group__video__interface_1ga9862024c9b07855609ea2078680c9afd" kindref="member">video_dequeue()</ref> for argument descriptions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="166" column="9" bodyfile="include/drivers/video.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__video__interface_1ga92acfc12d5cf3a070f31faa9e9933bbf" prot="public" static="no">
        <type>int(*</type>
        <definition>video_api_flush_t</definition>
        <argsstring>)(const struct device *dev, enum video_endpoint_id ep, bool cancel)</argsstring>
        <name>video_api_flush_t</name>
        <briefdescription>
<para>Flush endpoint buffers, buffer are moved from incoming queue to outgoing queue. See <ref refid="group__video__interface_1gae5e6256ab799ca1cbbac4987b82bb145" kindref="member">video_flush()</ref> for argument descriptions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="177" column="9" bodyfile="include/drivers/video.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__video__interface_1ga030f31941d35bc86fb54fb3cbbaf3dd0" prot="public" static="no">
        <type>int(*</type>
        <definition>video_api_stream_start_t</definition>
        <argsstring>)(const struct device *dev)</argsstring>
        <name>video_api_stream_start_t</name>
        <briefdescription>
<para>Start the capture or output process. See <ref refid="group__video__interface_1ga7145a18ad5e3e5d74398c89c00ea19f0" kindref="member">video_stream_start()</ref> for argument descriptions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="186" column="9" bodyfile="include/drivers/video.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__video__interface_1ga33b8ca01b23aae7b1a90351730f039f0" prot="public" static="no">
        <type>int(*</type>
        <definition>video_api_stream_stop_t</definition>
        <argsstring>)(const struct device *dev)</argsstring>
        <name>video_api_stream_stop_t</name>
        <briefdescription>
<para>Stop the capture or output process. See <ref refid="group__video__interface_1ga6464dede55777c9082e85d6af43a4d48" kindref="member">video_stream_stop()</ref> for argument descriptions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="193" column="9" bodyfile="include/drivers/video.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__video__interface_1gafb7b5f44634269333834264aa4116267" prot="public" static="no">
        <type>int(*</type>
        <definition>video_api_set_ctrl_t</definition>
        <argsstring>)(const struct device *dev, unsigned int cid, void *value)</argsstring>
        <name>video_api_set_ctrl_t</name>
        <briefdescription>
<para>set a video control value. See <ref refid="group__video__interface_1ga87873a4612cfbd2cb62595dec15cb77e" kindref="member">video_set_ctrl()</ref> for argument descriptions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="200" column="9" bodyfile="include/drivers/video.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__video__interface_1gada5c8458841e608fb60370a275ab8d87" prot="public" static="no">
        <type>int(*</type>
        <definition>video_api_get_ctrl_t</definition>
        <argsstring>)(const struct device *dev, unsigned int cid, void *value)</argsstring>
        <name>video_api_get_ctrl_t</name>
        <briefdescription>
<para>get a video control value. See <ref refid="group__video__interface_1ga664122e82da802f1dff8b5c30e158acd" kindref="member">video_get_ctrl()</ref> for argument descriptions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="209" column="9" bodyfile="include/drivers/video.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__video__interface_1ga93f92a3bb87b1a124a51b49b7154d9cb" prot="public" static="no">
        <type>int(*</type>
        <definition>video_api_get_caps_t</definition>
        <argsstring>)(const struct device *dev, enum video_endpoint_id ep, struct video_caps *caps)</argsstring>
        <name>video_api_get_caps_t</name>
        <briefdescription>
<para>Get capabilities of a video endpoint. See <ref refid="group__video__interface_1ga4d5237607c858708380955705a2023bd" kindref="member">video_get_caps()</ref> for argument descriptions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="218" column="9" bodyfile="include/drivers/video.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__video__interface_1ga2e65c8d29be2b80514b1f9a7688f0978" prot="public" static="no">
        <type>int(*</type>
        <definition>video_api_set_signal_t</definition>
        <argsstring>)(const struct device *dev, enum video_endpoint_id ep, struct k_poll_signal *signal)</argsstring>
        <name>video_api_set_signal_t</name>
        <briefdescription>
<para>Register/Unregister poll signal for buffer events. See <ref refid="group__video__interface_1gab38a9f956f5d5452fc6e0c0f1bf382be" kindref="member">video_set_signal()</ref> for argument descriptions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="227" column="9" bodyfile="include/drivers/video.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__video__interface_1gae38df95199e41ac197b9754824b2bd29" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int video_set_format</definition>
        <argsstring>(const struct device *dev, enum video_endpoint_id ep, struct video_format *fmt)</argsstring>
        <name>video_set_format</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref></type>
          <declname>ep</declname>
        </param>
        <param>
          <type>struct <ref refid="structvideo__format" kindref="compound">video_format</ref> *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
<para>Set video format. </para>
        </briefdescription>
        <detaileddescription>
<para>Configure video device with a specific format.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ep</parametername>
</parameternamelist>
<parameterdescription>
<para>Endpoint ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a video format struct.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Is successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>If parameters are invalid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>If format is not supported. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>General input / output error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="261" column="19" bodyfile="include/drivers/video.h" bodystart="261" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="group__video__interface_1gac0964bd0b57c6be5e773a21af0438edc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int video_get_format</definition>
        <argsstring>(const struct device *dev, enum video_endpoint_id ep, struct video_format *fmt)</argsstring>
        <name>video_get_format</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref></type>
          <declname>ep</declname>
        </param>
        <param>
          <type>struct <ref refid="structvideo__format" kindref="compound">video_format</ref> *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
<para>Get video format. </para>
        </briefdescription>
        <detaileddescription>
<para>Get video device current video format.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ep</parametername>
</parameternamelist>
<parameterdescription>
<para>Endpoint ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to video format struct.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>to video format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="286" column="19" bodyfile="include/drivers/video.h" bodystart="286" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="group__video__interface_1gac19d14a5875d48c96bd66a8bb65e8a51" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int video_enqueue</definition>
        <argsstring>(const struct device *dev, enum video_endpoint_id ep, struct video_buffer *buf)</argsstring>
        <name>video_enqueue</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref></type>
          <declname>ep</declname>
        </param>
        <param>
          <type>struct <ref refid="structvideo__buffer" kindref="compound">video_buffer</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Enqueue a video buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Enqueue an empty (capturing) or filled (output) video buffer in the driver’s endpoint incoming queue.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ep</parametername>
</parameternamelist>
<parameterdescription>
<para>Endpoint ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the video buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Is successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>If parameters are invalid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>General input / output error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="314" column="19" bodyfile="include/drivers/video.h" bodystart="314" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="group__video__interface_1ga9862024c9b07855609ea2078680c9afd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int video_dequeue</definition>
        <argsstring>(const struct device *dev, enum video_endpoint_id ep, struct video_buffer **buf, k_timeout_t timeout)</argsstring>
        <name>video_dequeue</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref></type>
          <declname>ep</declname>
        </param>
        <param>
          <type>struct <ref refid="structvideo__buffer" kindref="compound">video_buffer</ref> **</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Dequeue a video buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Dequeue a filled (capturing) or displayed (output) buffer from the driver’s enpoint outgoing queue.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ep</parametername>
</parameternamelist>
<parameterdescription>
<para>Endpoint ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer a video buffer pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Is successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>If parameters are invalid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>General input / output error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="343" column="19" bodyfile="include/drivers/video.h" bodystart="343" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="group__video__interface_1gae5e6256ab799ca1cbbac4987b82bb145" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int video_flush</definition>
        <argsstring>(const struct device *dev, enum video_endpoint_id ep, bool cancel)</argsstring>
        <name>video_flush</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref></type>
          <declname>ep</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>cancel</declname>
        </param>
        <briefdescription>
<para>Flush endpoint buffers. </para>
        </briefdescription>
        <detaileddescription>
<para>A call to flush finishes when all endpoint buffers have been moved from incoming queue to outgoing queue. Either because canceled or fully processed through the video function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ep</parametername>
</parameternamelist>
<parameterdescription>
<para>Endpoint ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cancel</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, cancel buffer processing instead of waiting for completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Is successful, -ERRNO code otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="373" column="19" bodyfile="include/drivers/video.h" bodystart="373" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="group__video__interface_1ga7145a18ad5e3e5d74398c89c00ea19f0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int video_stream_start</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>video_stream_start</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Start the video device function. </para>
        </briefdescription>
        <detaileddescription>
<para>video_stream_start is called to enter ‘streaming’ state (capture, output...). The driver may receive buffers with <ref refid="group__video__interface_1gac19d14a5875d48c96bd66a8bb65e8a51" kindref="member">video_enqueue()</ref> before video_stream_start is called. If driver/device needs a minimum number of buffers before being able to start streaming, then driver set the min_vbuf_count to the related endpoint capabilities.</para>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Is successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>General input / output error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="399" column="19" bodyfile="include/drivers/video.h" bodystart="399" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="group__video__interface_1ga6464dede55777c9082e85d6af43a4d48" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int video_stream_stop</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>video_stream_stop</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Stop the video device function. </para>
        </briefdescription>
        <detaileddescription>
<para>On video_stream_stop, driver must stop any transactions or wait until they finish.</para>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Is successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>General input / output error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="420" column="19" bodyfile="include/drivers/video.h" bodystart="420" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="group__video__interface_1ga4d5237607c858708380955705a2023bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int video_get_caps</definition>
        <argsstring>(const struct device *dev, enum video_endpoint_id ep, struct video_caps *caps)</argsstring>
        <name>video_get_caps</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref></type>
          <declname>ep</declname>
        </param>
        <param>
          <type>struct <ref refid="structvideo__caps" kindref="compound">video_caps</ref> *</type>
          <declname>caps</declname>
        </param>
        <briefdescription>
<para>Get the capabilities of a video endpoint. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ep</parametername>
</parameternamelist>
<parameterdescription>
<para>Endpoint ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caps</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="structvideo__caps" kindref="compound">video_caps</ref> struct to fill.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Is successful, -ERRNO code otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="445" column="19" bodyfile="include/drivers/video.h" bodystart="445" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="group__video__interface_1ga87873a4612cfbd2cb62595dec15cb77e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int video_set_ctrl</definition>
        <argsstring>(const struct device *dev, unsigned int cid, void *value)</argsstring>
        <name>video_set_ctrl</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the value of a control. </para>
        </briefdescription>
        <detaileddescription>
<para>This set the value of a video control, value type depends on control ID, and must be interpreted accordingly.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Control ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the control value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Is successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>If parameters are invalid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>If format is not supported. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>General input / output error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="474" column="19" bodyfile="include/drivers/video.h" bodystart="474" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="group__video__interface_1ga664122e82da802f1dff8b5c30e158acd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int video_get_ctrl</definition>
        <argsstring>(const struct device *dev, unsigned int cid, void *value)</argsstring>
        <name>video_get_ctrl</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get the current value of a control. </para>
        </briefdescription>
        <detaileddescription>
<para>This retrieve the value of a video control, value type depends on control ID, and must be interpreted accordingly.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Control ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the control value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Is successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>If parameters are invalid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>If format is not supported. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>General input / output error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="502" column="19" bodyfile="include/drivers/video.h" bodystart="502" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="group__video__interface_1gab38a9f956f5d5452fc6e0c0f1bf382be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int video_set_signal</definition>
        <argsstring>(const struct device *dev, enum video_endpoint_id ep, struct k_poll_signal *signal)</argsstring>
        <name>video_set_signal</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref></type>
          <declname>ep</declname>
        </param>
        <param>
          <type>struct <ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref> *</type>
          <declname>signal</declname>
        </param>
        <briefdescription>
<para>Register/Unregister k_poll signal for a video endpoint. </para>
        </briefdescription>
        <detaileddescription>
<para>Register a poll signal to the endpoint, which will be signaled on frame completion (done, aborted, error). Registering a NULL poll signal unregisters any previously registered signal.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ep</parametername>
</parameternamelist>
<parameterdescription>
<para>Endpoint ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signal</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to <ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Is successful, -ERRNO code otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="528" column="19" bodyfile="include/drivers/video.h" bodystart="528" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="group__video__interface_1ga8454f5568e24cf7b8a59dde765b4a804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structvideo__buffer" kindref="compound">video_buffer</ref> *</type>
        <definition>struct video_buffer * video_buffer_alloc</definition>
        <argsstring>(size_t size)</argsstring>
        <name>video_buffer_alloc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Allocate video buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the video buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>to allocated video buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="549" column="19" declfile="include/drivers/video.h" declline="549" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__video__interface_1gad2661653db019b673153001b2c61b10f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void video_buffer_release</definition>
        <argsstring>(struct video_buffer *buf)</argsstring>
        <name>video_buffer_release</name>
        <param>
          <type>struct <ref refid="structvideo__buffer" kindref="compound">video_buffer</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Release a video buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the video buffer to release. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/video.h" line="556" column="6" declfile="include/drivers/video.h" declline="556" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Public APIs for Video. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Linaro<sp/>Limited.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_VIDEO_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_VIDEO_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;device.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="video-controls_8h" kindref="compound">drivers/video-controls.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structvideo__format" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__format" kindref="compound">video_format</ref><sp/>{</highlight></codeline>
<codeline lineno="48" refid="structvideo__format_1adb8bf2c8d59125c050cdfe160c30f5ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structvideo__format_1adb8bf2c8d59125c050cdfe160c30f5ef" kindref="member">pixelformat</ref>;</highlight></codeline>
<codeline lineno="49" refid="structvideo__format_1a7b0cc009ac03437e7e3e86b45545b693" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structvideo__format_1a7b0cc009ac03437e7e3e86b45545b693" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="50" refid="structvideo__format_1a0e71fa7a0abd7740d5245021ba1acbb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structvideo__format_1a0e71fa7a0abd7740d5245021ba1acbb0" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="51" refid="structvideo__format_1aa4cd70933938ec6f52175232cf403ef6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structvideo__format_1aa4cd70933938ec6f52175232cf403ef6" kindref="member">pitch</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structvideo__format__cap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__format__cap" kindref="compound">video_format_cap</ref><sp/>{</highlight></codeline>
<codeline lineno="68" refid="structvideo__format__cap_1af5beb952295592dc9dc235a4151b2f59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structvideo__format__cap_1af5beb952295592dc9dc235a4151b2f59" kindref="member">pixelformat</ref>;</highlight></codeline>
<codeline lineno="69" refid="structvideo__format__cap_1a539b75ac7b1eadc8c9ee9395b5b2fba9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structvideo__format__cap_1a539b75ac7b1eadc8c9ee9395b5b2fba9" kindref="member">width_min</ref>;</highlight></codeline>
<codeline lineno="70" refid="structvideo__format__cap_1ab45cdeb28d93d670f06caca449fccd66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structvideo__format__cap_1ab45cdeb28d93d670f06caca449fccd66" kindref="member">width_max</ref>;</highlight></codeline>
<codeline lineno="71" refid="structvideo__format__cap_1ae6f82b60ad822a37a3c97a71892d8d35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structvideo__format__cap_1ae6f82b60ad822a37a3c97a71892d8d35" kindref="member">height_min</ref>;</highlight></codeline>
<codeline lineno="72" refid="structvideo__format__cap_1ae5f4de43c4fdaa6bc7085042ec67cd5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structvideo__format__cap_1ae5f4de43c4fdaa6bc7085042ec67cd5f" kindref="member">height_max</ref>;</highlight></codeline>
<codeline lineno="73" refid="structvideo__format__cap_1ab86710dfc4da3b5d0f9dd5017f971aad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structvideo__format__cap_1ab86710dfc4da3b5d0f9dd5017f971aad" kindref="member">width_step</ref>;</highlight></codeline>
<codeline lineno="74" refid="structvideo__format__cap_1a512907acd398e053d48d26aab611772e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structvideo__format__cap_1a512907acd398e053d48d26aab611772e" kindref="member">height_step</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="structvideo__caps" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__caps" kindref="compound">video_caps</ref><sp/>{</highlight></codeline>
<codeline lineno="87" refid="structvideo__caps_1adb454a88504d9fd6e40510171a53b185" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__format__cap" kindref="compound">video_format_cap</ref><sp/>*<ref refid="structvideo__caps_1adb454a88504d9fd6e40510171a53b185" kindref="member">format_caps</ref>;</highlight></codeline>
<codeline lineno="88" refid="structvideo__caps_1a2b2604a36a2f7a5013d9383ab5ef198a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structvideo__caps_1a2b2604a36a2f7a5013d9383ab5ef198a" kindref="member">min_vbuf_count</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="structvideo__buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__buffer" kindref="compound">video_buffer</ref><sp/>{</highlight></codeline>
<codeline lineno="106" refid="structvideo__buffer_1ab184d528487042650af105eb7d37381e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structvideo__buffer_1ab184d528487042650af105eb7d37381e" kindref="member">driver_data</ref>;</highlight></codeline>
<codeline lineno="107" refid="structvideo__buffer_1a6a62d7a50c717dc6bc85e2d8f6ae95e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="structvideo__buffer_1a6a62d7a50c717dc6bc85e2d8f6ae95e3" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="108" refid="structvideo__buffer_1a3f040775c683c91740c8bda5c96e621b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structvideo__buffer_1a3f040775c683c91740c8bda5c96e621b" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="109" refid="structvideo__buffer_1a17505a283ab5ef65047b798cb49aa9e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structvideo__buffer_1a17505a283ab5ef65047b798cb49aa9e1" kindref="member">bytesused</ref>;</highlight></codeline>
<codeline lineno="110" refid="structvideo__buffer_1af5c1abf09e0047334e03afbc64226eba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structvideo__buffer_1af5c1abf09e0047334e03afbc64226eba" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref><sp/>{</highlight></codeline>
<codeline lineno="118" refid="group__video__interface_1ggafa3d076a1324ea54b5c5ec7806cb2ef9a4293b9f211c8ec80d5ad873cec7022c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1ggafa3d076a1324ea54b5c5ec7806cb2ef9a4293b9f211c8ec80d5ad873cec7022c7" kindref="member">VIDEO_EP_NONE</ref>,</highlight></codeline>
<codeline lineno="119" refid="group__video__interface_1ggafa3d076a1324ea54b5c5ec7806cb2ef9a450d124253f8463114b851b1e51960fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1ggafa3d076a1324ea54b5c5ec7806cb2ef9a450d124253f8463114b851b1e51960fb" kindref="member">VIDEO_EP_ANY</ref>,</highlight></codeline>
<codeline lineno="120" refid="group__video__interface_1ggafa3d076a1324ea54b5c5ec7806cb2ef9a33427df6cd696ceede84d93d5245d3e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1ggafa3d076a1324ea54b5c5ec7806cb2ef9a33427df6cd696ceede84d93d5245d3e7" kindref="member">VIDEO_EP_IN</ref>,</highlight></codeline>
<codeline lineno="121" refid="group__video__interface_1ggafa3d076a1324ea54b5c5ec7806cb2ef9a69d107ac2c94372d4ae872b4e7e4b35a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1ggafa3d076a1324ea54b5c5ec7806cb2ef9a69d107ac2c94372d4ae872b4e7e4b35a" kindref="member">VIDEO_EP_OUT</ref>,</highlight></codeline>
<codeline lineno="122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="group__video__interface_1ga0f50f287c4075e992fbab6d8a990d7a8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1ga0f50f287c4075e992fbab6d8a990d7a8" kindref="member">video_signal_result</ref><sp/>{</highlight></codeline>
<codeline lineno="129" refid="group__video__interface_1gga0f50f287c4075e992fbab6d8a990d7a8ad7499b0b62f470b63d624ec49d358db8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1gga0f50f287c4075e992fbab6d8a990d7a8ad7499b0b62f470b63d624ec49d358db8" kindref="member">VIDEO_BUF_DONE</ref>,</highlight></codeline>
<codeline lineno="130" refid="group__video__interface_1gga0f50f287c4075e992fbab6d8a990d7a8a268855ccd0d8e10f608d4dac5f76fac8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1gga0f50f287c4075e992fbab6d8a990d7a8a268855ccd0d8e10f608d4dac5f76fac8" kindref="member">VIDEO_BUF_ABORTED</ref>,</highlight></codeline>
<codeline lineno="131" refid="group__video__interface_1gga0f50f287c4075e992fbab6d8a990d7a8afe8726c40851834057bbf9d99b0433a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1gga0f50f287c4075e992fbab6d8a990d7a8afe8726c40851834057bbf9d99b0433a3" kindref="member">VIDEO_BUF_ERROR</ref>,</highlight></codeline>
<codeline lineno="132"><highlight class="normal">};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="group__video__interface_1ga0cc17cc7532305e6c1c826387745d653" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__video__interface_1ga0cc17cc7532305e6c1c826387745d653" kindref="member">video_api_set_format_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref><sp/>ep,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__format" kindref="compound">video_format</ref><sp/>*fmt);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="group__video__interface_1ga4442f391f6d0281d323fb15ab47ced1e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__video__interface_1ga4442f391f6d0281d323fb15ab47ced1e" kindref="member">video_api_get_format_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref><sp/>ep,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__format" kindref="compound">video_format</ref><sp/>*fmt);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="group__video__interface_1ga11186fd10ade53fa17238dc0be634df0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__video__interface_1ga11186fd10ade53fa17238dc0be634df0" kindref="member">video_api_enqueue_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref><sp/>ep,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__buffer" kindref="compound">video_buffer</ref><sp/>*buf);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="group__video__interface_1gaa51265cb53a7fd67f4d0fcaf37e72145" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__video__interface_1gaa51265cb53a7fd67f4d0fcaf37e72145" kindref="member">video_api_dequeue_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref><sp/>ep,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__buffer" kindref="compound">video_buffer</ref><sp/>**buf,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="group__video__interface_1ga92acfc12d5cf3a070f31faa9e9933bbf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__video__interface_1ga92acfc12d5cf3a070f31faa9e9933bbf" kindref="member">video_api_flush_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref><sp/>ep,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cancel);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="group__video__interface_1ga030f31941d35bc86fb54fb3cbbaf3dd0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__video__interface_1ga030f31941d35bc86fb54fb3cbbaf3dd0" kindref="member">video_api_stream_start_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="group__video__interface_1ga33b8ca01b23aae7b1a90351730f039f0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__video__interface_1ga33b8ca01b23aae7b1a90351730f039f0" kindref="member">video_api_stream_stop_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="group__video__interface_1gafb7b5f44634269333834264aa4116267" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__video__interface_1gafb7b5f44634269333834264aa4116267" kindref="member">video_api_set_ctrl_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cid,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="group__video__interface_1gada5c8458841e608fb60370a275ab8d87" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__video__interface_1gada5c8458841e608fb60370a275ab8d87" kindref="member">video_api_get_ctrl_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cid,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="group__video__interface_1ga93f92a3bb87b1a124a51b49b7154d9cb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__video__interface_1ga93f92a3bb87b1a124a51b49b7154d9cb" kindref="member">video_api_get_caps_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref><sp/>ep,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__caps" kindref="compound">video_caps</ref><sp/>*caps);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="group__video__interface_1ga2e65c8d29be2b80514b1f9a7688f0978" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__video__interface_1ga2e65c8d29be2b80514b1f9a7688f0978" kindref="member">video_api_set_signal_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref><sp/>ep,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref><sp/>*<ref refid="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" kindref="member">signal</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="structvideo__driver__api" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mandatory<sp/>callbacks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="structvideo__driver__api_1a6ef22653b6ba24b935390795830251f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1ga0cc17cc7532305e6c1c826387745d653" kindref="member">video_api_set_format_t</ref><sp/><ref refid="structvideo__driver__api_1a6ef22653b6ba24b935390795830251f8" kindref="member">set_format</ref>;</highlight></codeline>
<codeline lineno="234" refid="structvideo__driver__api_1a5c89e8128d610dd123456f83a4f2cca4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1ga4442f391f6d0281d323fb15ab47ced1e" kindref="member">video_api_get_format_t</ref><sp/><ref refid="structvideo__driver__api_1a5c89e8128d610dd123456f83a4f2cca4" kindref="member">get_format</ref>;</highlight></codeline>
<codeline lineno="235" refid="structvideo__driver__api_1a32759d924c983ca5aabf47e7c2d23acc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1ga030f31941d35bc86fb54fb3cbbaf3dd0" kindref="member">video_api_stream_start_t</ref><sp/><ref refid="structvideo__driver__api_1a32759d924c983ca5aabf47e7c2d23acc" kindref="member">stream_start</ref>;</highlight></codeline>
<codeline lineno="236" refid="structvideo__driver__api_1a07335db8e854f8561f8fdf037def106c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1ga33b8ca01b23aae7b1a90351730f039f0" kindref="member">video_api_stream_stop_t</ref><sp/><ref refid="structvideo__driver__api_1a07335db8e854f8561f8fdf037def106c" kindref="member">stream_stop</ref>;</highlight></codeline>
<codeline lineno="237" refid="structvideo__driver__api_1a6ab4deb345d2138e63e0c6126eeb5078" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1ga93f92a3bb87b1a124a51b49b7154d9cb" kindref="member">video_api_get_caps_t</ref><sp/><ref refid="structvideo__driver__api_1a6ab4deb345d2138e63e0c6126eeb5078" kindref="member">get_caps</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>optional<sp/>callbacks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="structvideo__driver__api_1a4762a3f103ca5999e3d3f790bb74af75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1ga11186fd10ade53fa17238dc0be634df0" kindref="member">video_api_enqueue_t</ref><sp/><ref refid="structvideo__driver__api_1a4762a3f103ca5999e3d3f790bb74af75" kindref="member">enqueue</ref>;</highlight></codeline>
<codeline lineno="240" refid="structvideo__driver__api_1a96ba1bb4b76c7efc445b3071ef3a05ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1gaa51265cb53a7fd67f4d0fcaf37e72145" kindref="member">video_api_dequeue_t</ref><sp/><ref refid="structvideo__driver__api_1a96ba1bb4b76c7efc445b3071ef3a05ef" kindref="member">dequeue</ref>;</highlight></codeline>
<codeline lineno="241" refid="structvideo__driver__api_1a963927cc38174c4703470df04ec73dc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1ga92acfc12d5cf3a070f31faa9e9933bbf" kindref="member">video_api_flush_t</ref><sp/><ref refid="structvideo__driver__api_1a963927cc38174c4703470df04ec73dc6" kindref="member">flush</ref>;</highlight></codeline>
<codeline lineno="242" refid="structvideo__driver__api_1a1037a6a768906604c58032e25efabbb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1gafb7b5f44634269333834264aa4116267" kindref="member">video_api_set_ctrl_t</ref><sp/><ref refid="structvideo__driver__api_1a1037a6a768906604c58032e25efabbb8" kindref="member">set_ctrl</ref>;</highlight></codeline>
<codeline lineno="243" refid="structvideo__driver__api_1a40bc476e1e89c42ef78cb99e98d83b38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1gafb7b5f44634269333834264aa4116267" kindref="member">video_api_set_ctrl_t</ref><sp/><ref refid="structvideo__driver__api_1a40bc476e1e89c42ef78cb99e98d83b38" kindref="member">get_ctrl</ref>;</highlight></codeline>
<codeline lineno="244" refid="structvideo__driver__api_1a59dbaa93982c354c16d5de63c0d03ec2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1ga2e65c8d29be2b80514b1f9a7688f0978" kindref="member">video_api_set_signal_t</ref><sp/><ref refid="structvideo__driver__api_1a59dbaa93982c354c16d5de63c0d03ec2" kindref="member">set_signal</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="group__video__interface_1gae38df95199e41ac197b9754824b2bd29" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gae38df95199e41ac197b9754824b2bd29" kindref="member">video_set_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref><sp/>ep,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structvideo__format" kindref="compound">video_format</ref><sp/>*fmt)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structvideo__driver__api_1a6ef22653b6ba24b935390795830251f8" kindref="member">set_format</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structvideo__driver__api_1a6ef22653b6ba24b935390795830251f8" kindref="member">set_format</ref>(dev,<sp/>ep,<sp/>fmt);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="group__video__interface_1gac0964bd0b57c6be5e773a21af0438edc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gac0964bd0b57c6be5e773a21af0438edc" kindref="member">video_get_format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref><sp/>ep,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structvideo__format" kindref="compound">video_format</ref><sp/>*fmt)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structvideo__driver__api_1a5c89e8128d610dd123456f83a4f2cca4" kindref="member">get_format</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structvideo__driver__api_1a5c89e8128d610dd123456f83a4f2cca4" kindref="member">get_format</ref>(dev,<sp/>ep,<sp/>fmt);</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="group__video__interface_1gac19d14a5875d48c96bd66a8bb65e8a51" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gac19d14a5875d48c96bd66a8bb65e8a51" kindref="member">video_enqueue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref><sp/>ep,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structvideo__buffer" kindref="compound">video_buffer</ref><sp/>*buf)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structvideo__driver__api_1a4762a3f103ca5999e3d3f790bb74af75" kindref="member">enqueue</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structvideo__driver__api_1a4762a3f103ca5999e3d3f790bb74af75" kindref="member">enqueue</ref>(dev,<sp/>ep,<sp/>buf);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="group__video__interface_1ga9862024c9b07855609ea2078680c9afd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1ga9862024c9b07855609ea2078680c9afd" kindref="member">video_dequeue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref><sp/>ep,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structvideo__buffer" kindref="compound">video_buffer</ref><sp/>**buf,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structvideo__driver__api_1a96ba1bb4b76c7efc445b3071ef3a05ef" kindref="member">dequeue</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structvideo__driver__api_1a96ba1bb4b76c7efc445b3071ef3a05ef" kindref="member">dequeue</ref>(dev,<sp/>ep,<sp/>buf,<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="group__video__interface_1gae5e6256ab799ca1cbbac4987b82bb145" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gae5e6256ab799ca1cbbac4987b82bb145" kindref="member">video_flush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref><sp/>ep,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cancel)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structvideo__driver__api_1a963927cc38174c4703470df04ec73dc6" kindref="member">flush</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structvideo__driver__api_1a963927cc38174c4703470df04ec73dc6" kindref="member">flush</ref>(dev,<sp/>ep,<sp/>cancel);</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="group__video__interface_1ga7145a18ad5e3e5d74398c89c00ea19f0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1ga7145a18ad5e3e5d74398c89c00ea19f0" kindref="member">video_stream_start</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structvideo__driver__api_1a32759d924c983ca5aabf47e7c2d23acc" kindref="member">stream_start</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structvideo__driver__api_1a32759d924c983ca5aabf47e7c2d23acc" kindref="member">stream_start</ref>(dev);</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="group__video__interface_1ga6464dede55777c9082e85d6af43a4d48" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1ga6464dede55777c9082e85d6af43a4d48" kindref="member">video_stream_stop</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structvideo__driver__api_1a07335db8e854f8561f8fdf037def106c" kindref="member">stream_stop</ref>)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/>api-&gt;<ref refid="structvideo__driver__api_1a07335db8e854f8561f8fdf037def106c" kindref="member">stream_stop</ref>(dev);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__video__interface_1gae5e6256ab799ca1cbbac4987b82bb145" kindref="member">video_flush</ref>(dev,<sp/><ref refid="group__video__interface_1ggafa3d076a1324ea54b5c5ec7806cb2ef9a450d124253f8463114b851b1e51960fb" kindref="member">VIDEO_EP_ANY</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="group__video__interface_1ga4d5237607c858708380955705a2023bd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1ga4d5237607c858708380955705a2023bd" kindref="member">video_get_caps</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref><sp/>ep,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structvideo__caps" kindref="compound">video_caps</ref><sp/>*caps)</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structvideo__driver__api_1a6ab4deb345d2138e63e0c6126eeb5078" kindref="member">get_caps</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structvideo__driver__api_1a6ab4deb345d2138e63e0c6126eeb5078" kindref="member">get_caps</ref>(dev,<sp/>ep,<sp/>caps);</highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="group__video__interface_1ga87873a4612cfbd2cb62595dec15cb77e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1ga87873a4612cfbd2cb62595dec15cb77e" kindref="member">video_set_ctrl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cid,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value)</highlight></codeline>
<codeline lineno="476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structvideo__driver__api_1a1037a6a768906604c58032e25efabbb8" kindref="member">set_ctrl</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structvideo__driver__api_1a1037a6a768906604c58032e25efabbb8" kindref="member">set_ctrl</ref>(dev,<sp/>cid,<sp/>value);</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="group__video__interface_1ga664122e82da802f1dff8b5c30e158acd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1ga664122e82da802f1dff8b5c30e158acd" kindref="member">video_get_ctrl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cid,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value)</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structvideo__driver__api_1a40bc476e1e89c42ef78cb99e98d83b38" kindref="member">get_ctrl</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structvideo__driver__api_1a40bc476e1e89c42ef78cb99e98d83b38" kindref="member">get_ctrl</ref>(dev,<sp/>cid,<sp/>value);</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="group__video__interface_1gab38a9f956f5d5452fc6e0c0f1bf382be" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gab38a9f956f5d5452fc6e0c0f1bf382be" kindref="member">video_set_signal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gafa3d076a1324ea54b5c5ec7806cb2ef9" kindref="member">video_endpoint_id</ref><sp/>ep,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref><sp/>*<ref refid="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" kindref="member">signal</ref>)</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__driver__api" kindref="compound">video_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structvideo__driver__api_1a59dbaa93982c354c16d5de63c0d03ec2" kindref="member">set_signal</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structvideo__driver__api_1a59dbaa93982c354c16d5de63c0d03ec2" kindref="member">set_signal</ref>(dev,<sp/>ep,<sp/><ref refid="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" kindref="member">signal</ref>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="group__video__interface_1ga8454f5568e24cf7b8a59dde765b4a804" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvideo__buffer" kindref="compound">video_buffer</ref><sp/>*<ref refid="group__video__interface_1ga8454f5568e24cf7b8a59dde765b4a804" kindref="member">video_buffer_alloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structvideo__buffer_1a3f040775c683c91740c8bda5c96e621b" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="group__video__interface_1gad2661653db019b673153001b2c61b10f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__video__interface_1gad2661653db019b673153001b2c61b10f" kindref="member">video_buffer_release</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structvideo__buffer" kindref="compound">video_buffer</ref><sp/>*buf);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fourcc<sp/>-<sp/>four-character-code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="group__video__interface_1gabeacdd211927e893561446fd7299ab08" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>video_fourcc(a,<sp/>b,<sp/>c,<sp/>d)\</highlight></codeline>
<codeline lineno="561"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)(a)<sp/>|<sp/>((uint32_t)(b)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((uint32_t)(c)<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>((uint32_t)(d)<sp/>&lt;&lt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Raw<sp/>bayer<sp/>formats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="group__video__interface_1ga64ad74bb6c92041a4190614b684ae024" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIDEO_PIX_FMT_BGGR8<sp/><sp/>video_fourcc(&apos;B&apos;,<sp/>&apos;G&apos;,<sp/>&apos;G&apos;,<sp/>&apos;R&apos;)<sp/></highlight><highlight class="comment">/*<sp/><sp/>8<sp/><sp/>BGBG..<sp/>GRGR..<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="group__video__interface_1gaebdfd9d4230b56f6b8533630356b8793" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIDEO_PIX_FMT_GBRG8<sp/><sp/>video_fourcc(&apos;G&apos;,<sp/>&apos;B&apos;,<sp/>&apos;R&apos;,<sp/>&apos;G&apos;)<sp/></highlight><highlight class="comment">/*<sp/><sp/>8<sp/><sp/>GBGB..<sp/>RGRG..<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="group__video__interface_1ga6b9c8d43406e45927f4e9e94504eae9c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIDEO_PIX_FMT_GRBG8<sp/><sp/>video_fourcc(&apos;G&apos;,<sp/>&apos;R&apos;,<sp/>&apos;B&apos;,<sp/>&apos;G&apos;)<sp/></highlight><highlight class="comment">/*<sp/><sp/>8<sp/><sp/>GRGR..<sp/>BGBG..<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567" refid="group__video__interface_1ga0c98dc205b724c9e4556e41cc266d80e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIDEO_PIX_FMT_RGGB8<sp/><sp/>video_fourcc(&apos;R&apos;,<sp/>&apos;G&apos;,<sp/>&apos;G&apos;,<sp/>&apos;B&apos;)<sp/></highlight><highlight class="comment">/*<sp/><sp/>8<sp/><sp/>RGRG..<sp/>GBGB..<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RGB<sp/>formats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570" refid="group__video__interface_1gaf009d0eb7dbdb3bfd8883da03478c1ec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIDEO_PIX_FMT_RGB565<sp/>video_fourcc(&apos;R&apos;,<sp/>&apos;G&apos;,<sp/>&apos;B&apos;,<sp/>&apos;P&apos;)<sp/></highlight><highlight class="comment">/*<sp/>16<sp/><sp/>RGB-5-6-5<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>JPEG<sp/>formats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="group__video__interface_1ga035a13c38c4f123411547e2c40d58bd2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIDEO_PIX_FMT_JPEG<sp/><sp/><sp/>video_fourcc(&apos;J&apos;,<sp/>&apos;P&apos;,<sp/>&apos;E&apos;,<sp/>&apos;G&apos;)<sp/></highlight><highlight class="comment">/*<sp/><sp/>8<sp/><sp/>JPEG<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_VIDEO_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/drivers/video.h"/>
  </compounddef>
</doxygen>
