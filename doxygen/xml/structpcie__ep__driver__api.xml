<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structpcie__ep__driver__api" kind="struct" language="C++" prot="public">
    <compoundname>pcie_ep_driver_api</compoundname>
    <includes refid="pcie__ep_8h" local="no">pcie_ep.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structpcie__ep__driver__api_1aa5f508a7ab546c862f3aa65b480a45cc" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* pcie_ep_driver_api::conf_read) (const struct device *dev, uint32_t offset, uint32_t *data)</definition>
        <argsstring>)(const struct device *dev, uint32_t offset, uint32_t *data)</argsstring>
        <name>conf_read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pcie/endpoint/pcie_ep.h" line="60" column="1" bodyfile="include/drivers/pcie/endpoint/pcie_ep.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpcie__ep__driver__api_1acc1262a07dd079842c9c95708a2c6004" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* pcie_ep_driver_api::conf_write) (const struct device *dev, uint32_t offset, uint32_t data)</definition>
        <argsstring>)(const struct device *dev, uint32_t offset, uint32_t data)</argsstring>
        <name>conf_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pcie/endpoint/pcie_ep.h" line="62" column="1" bodyfile="include/drivers/pcie/endpoint/pcie_ep.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpcie__ep__driver__api_1a444198e899d6a1353a7f8e3828f76643" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* pcie_ep_driver_api::map_addr) (const struct device *dev, uint64_t pcie_addr, uint64_t *mapped_addr, uint32_t size, enum pcie_ob_mem_type ob_mem_type)</definition>
        <argsstring>)(const struct device *dev, uint64_t pcie_addr, uint64_t *mapped_addr, uint32_t size, enum pcie_ob_mem_type ob_mem_type)</argsstring>
        <name>map_addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pcie/endpoint/pcie_ep.h" line="64" column="1" bodyfile="include/drivers/pcie/endpoint/pcie_ep.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpcie__ep__driver__api_1a82d9766067a066d83b25390ad5903534" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* pcie_ep_driver_api::unmap_addr) (const struct device *dev, uint64_t mapped_addr)</definition>
        <argsstring>)(const struct device *dev, uint64_t mapped_addr)</argsstring>
        <name>unmap_addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pcie/endpoint/pcie_ep.h" line="67" column="1" bodyfile="include/drivers/pcie/endpoint/pcie_ep.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpcie__ep__driver__api_1a83ef7d357174e55364660b53924b0017" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* pcie_ep_driver_api::raise_irq) (const struct device *dev, enum pci_ep_irq_type irq_type, uint32_t irq_num)</definition>
        <argsstring>)(const struct device *dev, enum pci_ep_irq_type irq_type, uint32_t irq_num)</argsstring>
        <name>raise_irq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pcie/endpoint/pcie_ep.h" line="68" column="1" bodyfile="include/drivers/pcie/endpoint/pcie_ep.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpcie__ep__driver__api_1adb5f2ea78cc5e9b0f61461a036c746eb" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* pcie_ep_driver_api::register_reset_cb) (const struct device *dev, enum pcie_reset reset, pcie_ep_reset_callback_t cb, void *arg)</definition>
        <argsstring>)(const struct device *dev, enum pcie_reset reset, pcie_ep_reset_callback_t cb, void *arg)</argsstring>
        <name>register_reset_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pcie/endpoint/pcie_ep.h" line="71" column="1" bodyfile="include/drivers/pcie/endpoint/pcie_ep.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpcie__ep__driver__api_1ab816f2aad307f0b4a8181a7711d565bc" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* pcie_ep_driver_api::dma_xfer) (const struct device *dev, uint64_t mapped_addr, uintptr_t local_addr, uint32_t size, enum xfer_direction dir)</definition>
        <argsstring>)(const struct device *dev, uint64_t mapped_addr, uintptr_t local_addr, uint32_t size, enum xfer_direction dir)</argsstring>
        <name>dma_xfer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pcie/endpoint/pcie_ep.h" line="74" column="1" bodyfile="include/drivers/pcie/endpoint/pcie_ep.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/drivers/pcie/endpoint/pcie_ep.h" line="59" column="1" bodyfile="include/drivers/pcie/endpoint/pcie_ep.h" bodystart="59" bodyend="77"/>
    <listofallmembers>
      <member refid="structpcie__ep__driver__api_1aa5f508a7ab546c862f3aa65b480a45cc" prot="public" virt="non-virtual"><scope>pcie_ep_driver_api</scope><name>conf_read</name></member>
      <member refid="structpcie__ep__driver__api_1acc1262a07dd079842c9c95708a2c6004" prot="public" virt="non-virtual"><scope>pcie_ep_driver_api</scope><name>conf_write</name></member>
      <member refid="structpcie__ep__driver__api_1ab816f2aad307f0b4a8181a7711d565bc" prot="public" virt="non-virtual"><scope>pcie_ep_driver_api</scope><name>dma_xfer</name></member>
      <member refid="structpcie__ep__driver__api_1a444198e899d6a1353a7f8e3828f76643" prot="public" virt="non-virtual"><scope>pcie_ep_driver_api</scope><name>map_addr</name></member>
      <member refid="structpcie__ep__driver__api_1a83ef7d357174e55364660b53924b0017" prot="public" virt="non-virtual"><scope>pcie_ep_driver_api</scope><name>raise_irq</name></member>
      <member refid="structpcie__ep__driver__api_1adb5f2ea78cc5e9b0f61461a036c746eb" prot="public" virt="non-virtual"><scope>pcie_ep_driver_api</scope><name>register_reset_cb</name></member>
      <member refid="structpcie__ep__driver__api_1a82d9766067a066d83b25390ad5903534" prot="public" virt="non-virtual"><scope>pcie_ep_driver_api</scope><name>unmap_addr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
