<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structshell__ctx" kind="struct" language="C++" prot="public">
    <compoundname>shell_ctx</compoundname>
    <includes refid="shell_2shell_8h" local="no">shell.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structshell__ctx_1a261d4754f4bf3764298e264ed6e87eff" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* shell_ctx::prompt</definition>
        <argsstring></argsstring>
        <name>prompt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell current prompt. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="687" column="12" bodyfile="include/shell/shell.h" bodystart="687" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1a7388fd2e850fcf37c4a421cda13661e8" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__shell__api_1gaf2c6ff9ef31dc06086fd1141763e6266" kindref="member">shell_state</ref></type>
        <definition>enum shell_state shell_ctx::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Internal module state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="689" column="17" bodyfile="include/shell/shell.h" bodystart="689" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1abc4135f23c4738fcf6a2c9d8f45d516b" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__shell__api_1ga8773ed2570714ba4985108b1738d33a0" kindref="member">shell_receive_state</ref></type>
        <definition>enum shell_receive_state shell_ctx::receive_state</definition>
        <argsstring></argsstring>
        <name>receive_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Escape sequence indicator. Currently executed command. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="690" column="25" bodyfile="include/shell/shell.h" bodystart="690" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1a3df8f9a293b4c24d81a80af2d0e0c44e" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structshell__static__entry" kindref="compound">shell_static_entry</ref></type>
        <definition>struct shell_static_entry shell_ctx::active_cmd</definition>
        <argsstring></argsstring>
        <name>active_cmd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="693" column="25" bodyfile="include/shell/shell.h" bodystart="693" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1a0e9321e8954a7598cb6521f660480a88" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structshell__static__entry" kindref="compound">shell_static_entry</ref> *</type>
        <definition>const struct shell_static_entry* shell_ctx::selected_cmd</definition>
        <argsstring></argsstring>
        <name>selected_cmd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>VT100 color and cursor position, terminal width. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="696" column="31" bodyfile="include/shell/shell.h" bodystart="696" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1a25b945fcaba216e039124aacec660600" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structshell__vt100__ctx" kindref="compound">shell_vt100_ctx</ref></type>
        <definition>struct shell_vt100_ctx shell_ctx::vt100_ctx</definition>
        <argsstring></argsstring>
        <name>vt100_ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback called from shell thread context when unitialization is completed just before aborting shell thread. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="699" column="22" bodyfile="include/shell/shell.h" bodystart="699" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1a0ec61f11544cb817bbd46ed4aa332123" prot="public" static="no" mutable="no">
        <type><ref refid="group__shell__api_1gaef13cdb9a0789594395d8b0744674eb1" kindref="member">shell_uninit_cb_t</ref></type>
        <definition>shell_uninit_cb_t shell_ctx::uninit_cb</definition>
        <argsstring></argsstring>
        <name>uninit_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When bypass is set, all incoming data is passed to the callback. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="704" column="19" bodyfile="include/shell/shell.h" bodystart="704" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1a8e02d1d9a521379ad4188b4678cc6071" prot="public" static="no" mutable="no">
        <type><ref refid="group__shell__api_1ga8a8b53f567cc5b00997224ad2fd66034" kindref="member">shell_bypass_cb_t</ref></type>
        <definition>shell_bypass_cb_t shell_ctx::bypass</definition>
        <argsstring></argsstring>
        <name>bypass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="707" column="19" bodyfile="include/shell/shell.h" bodystart="707" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1a948d78719efe7f01b8edf151e1435af6" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t shell_ctx::cmd_buff_len</definition>
        <argsstring></argsstring>
        <name>cmd_buff_len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command length. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="714" column="10" bodyfile="include/shell/shell.h" bodystart="714" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1a9a8f69e6876e4788ef3961dfb769e53f" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t shell_ctx::cmd_buff_pos</definition>
        <argsstring></argsstring>
        <name>cmd_buff_pos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command buffer cursor position. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="715" column="10" bodyfile="include/shell/shell.h" bodystart="715" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1a5dfe5d3b2e27b67a7a78d5c3ad32ff1d" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t shell_ctx::cmd_tmp_buff_len</definition>
        <argsstring></argsstring>
        <name>cmd_tmp_buff_len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command length in tmp buffer. Command input buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="717" column="10" bodyfile="include/shell/shell.h" bodystart="717" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1a385014f2fba5cae182c3520ec934cce6" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char shell_ctx::cmd_buff[0]</definition>
        <argsstring>[0]</argsstring>
        <name>cmd_buff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Command temporary buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="720" column="6" bodyfile="include/shell/shell.h" bodystart="720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1a35085b30e92b913b16f02496c5ec6375" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char shell_ctx::temp_buff[0]</definition>
        <argsstring>[0]</argsstring>
        <name>temp_buff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Printf buffer size. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="723" column="6" bodyfile="include/shell/shell.h" bodystart="723" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1aba89a1995fe33838d508810e60c7ea79" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char shell_ctx::printf_buff[0]</definition>
        <argsstring>[0]</argsstring>
        <name>printf_buff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="726" column="6" bodyfile="include/shell/shell.h" bodystart="726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1a5437653e57909910df742c80562c1c83" prot="public" static="no" mutable="no">
        <type>volatile union <ref refid="unionshell__backend__cfg" kindref="compound">shell_backend_cfg</ref></type>
        <definition>volatile union shell_backend_cfg shell_ctx::cfg</definition>
        <argsstring></argsstring>
        <name>cfg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="728" column="33" bodyfile="include/shell/shell.h" bodystart="728" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1ac9bed826ec7421065e6bc6e12ad213ce" prot="public" static="no" mutable="no">
        <type>volatile union <ref refid="unionshell__backend__ctx" kindref="compound">shell_backend_ctx</ref></type>
        <definition>volatile union shell_backend_ctx shell_ctx::ctx</definition>
        <argsstring></argsstring>
        <name>ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="729" column="33" bodyfile="include/shell/shell.h" bodystart="729" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1a6d96ff92952aebed16ebf288fe0a96db" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref></type>
        <definition>struct k_poll_signal shell_ctx::signals[SHELL_SIGNALS]</definition>
        <argsstring>[SHELL_SIGNALS]</argsstring>
        <name>signals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Events that should be used only internally by shell thread. Event for SHELL_SIGNAL_TXDONE is initialized but unused. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="731" column="20" bodyfile="include/shell/shell.h" bodystart="731" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1abbbc94a651bfc56d5b0916e1516c3842" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__poll__event" kindref="compound">k_poll_event</ref></type>
        <definition>struct k_poll_event shell_ctx::events[SHELL_SIGNALS]</definition>
        <argsstring>[SHELL_SIGNALS]</argsstring>
        <name>events</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="736" column="19" bodyfile="include/shell/shell.h" bodystart="736" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1a76cf861f17057cf080c54b67acb1a801" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__mutex" kindref="compound">k_mutex</ref></type>
        <definition>struct k_mutex shell_ctx::wr_mtx</definition>
        <argsstring></argsstring>
        <name>wr_mtx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="738" column="14" bodyfile="include/shell/shell.h" bodystart="738" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell__ctx_1a2cab9b799462a9f6eea898f7076f204f" prot="public" static="no" mutable="no">
        <type><ref refid="kernel_2thread_8h_1a6379f5a1f19ffbc262a6877c4f6e3647" kindref="member">k_tid_t</ref></type>
        <definition>k_tid_t shell_ctx::tid</definition>
        <argsstring></argsstring>
        <name>tid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="739" column="9" bodyfile="include/shell/shell.h" bodystart="739" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Shell instance context. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="32">
        <label>__thread_entry</label>
      </node>
      <node id="31">
        <label>_callee_saved</label>
      </node>
      <node id="10">
        <label>_dnode</label>
      </node>
      <node id="34">
        <label>_mem_domain_info</label>
      </node>
      <node id="38">
        <label>_thread_arch</label>
      </node>
      <node id="30">
        <label>_thread_base</label>
      </node>
      <node id="33">
        <label>_thread_stack_info</label>
      </node>
      <node id="19">
        <label>_wait_q_t</label>
      </node>
      <node id="50">
        <label>k_fifo</label>
        <link refid="structk__fifo"/>
      </node>
      <node id="36">
        <label>k_heap</label>
        <link refid="structk__heap"/>
        <childnode refid="37" relation="usage">
          <edgelabel>heap</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>k_msgq</label>
        <link refid="structk__msgq"/>
        <childnode refid="19" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>k_mutex</label>
        <link refid="structk__mutex"/>
        <childnode refid="19" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>k_poll_event</label>
        <link refid="structk__poll__event"/>
        <childnode refid="49" relation="usage">
          <edgelabel>poller</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>signal</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>fifo</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>msgq</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>k_poll_signal</label>
        <link refid="structk__poll__signal"/>
        <childnode refid="10" relation="usage">
          <edgelabel>poll_events</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>k_spinlock</label>
        <link refid="structk__spinlock"/>
      </node>
      <node id="29">
        <label>k_thread</label>
        <link refid="structk__thread"/>
        <childnode refid="30" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>callee_saved</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>join_queue</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>entry</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>next_thread</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>stack_info</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>mem_domain_info</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>stack_obj</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>resource_pool</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>arch</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>log_backend</label>
        <link refid="structlog__backend"/>
        <childnode refid="16" relation="usage">
          <edgelabel>api</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>cb</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>log_backend_api</label>
        <link refid="structlog__backend__api"/>
      </node>
      <node id="17">
        <label>log_backend_control_block</label>
        <link refid="structlog__backend__control__block"/>
      </node>
      <node id="21">
        <label>log_output</label>
        <link refid="structlog__output"/>
        <childnode refid="22" relation="usage">
          <edgelabel>control_block</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>log_output_control_block</label>
        <link refid="structlog__output__control__block"/>
      </node>
      <node id="25">
        <label>mpsc_pbuf_buffer</label>
        <link refid="structmpsc__pbuf__buffer"/>
        <childnode refid="20" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>notify_drop</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>get_wlen</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>mpsc_pbuf_buffer_config</label>
        <link refid="structmpsc__pbuf__buffer__config"/>
        <childnode refid="25" relation="usage">
          <edgelabel>notify_drop</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>get_wlen</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>mpsc_pbuf_generic</label>
        <link refid="unionmpsc__pbuf__generic"/>
        <childnode refid="27" relation="usage">
          <edgelabel>hdr</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>skip</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>mpsc_pbuf_hdr</label>
        <link refid="structmpsc__pbuf__hdr"/>
      </node>
      <node id="28">
        <label>mpsc_pbuf_skip</label>
        <link refid="structmpsc__pbuf__skip"/>
      </node>
      <node id="9">
        <label>ring_buf</label>
        <link refid="structring__buf"/>
      </node>
      <node id="5">
        <label>shell</label>
        <link refid="structshell"/>
        <childnode refid="6" relation="usage">
          <edgelabel>iface</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>history</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>fprintf_ctx</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>stats</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>log_backend</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>thread</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>stack</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>shell_backend_cfg</label>
        <link refid="unionshell__backend__cfg"/>
        <childnode refid="44" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>shell_backend_config_flags</label>
        <link refid="structshell__backend__config__flags"/>
      </node>
      <node id="45">
        <label>shell_backend_ctx</label>
        <link refid="unionshell__backend__ctx"/>
        <childnode refid="46" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>shell_backend_ctx_flags</label>
        <link refid="structshell__backend__ctx__flags"/>
      </node>
      <node id="3">
        <label>shell_cmd_entry</label>
        <link refid="structshell__cmd__entry"/>
        <childnode refid="4" relation="usage">
          <edgelabel>u</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>shell_cmd_entry::union_cmd_entry</label>
        <link refid="unionshell__cmd__entry_1_1union__cmd__entry"/>
        <childnode refid="2" relation="usage">
          <edgelabel>dynamic_get</edgelabel>
          <edgelabel>entry</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>shell_ctx</label>
        <link refid="structshell__ctx"/>
        <childnode refid="2" relation="usage">
          <edgelabel>active_cmd</edgelabel>
          <edgelabel>selected_cmd</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>vt100_ctx</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>bypass</edgelabel>
          <edgelabel>uninit_cb</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>cfg</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>signals</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>events</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>wr_mtx</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>tid</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>shell_fprintf</label>
        <link refid="structshell__fprintf"/>
        <childnode refid="12" relation="usage">
          <edgelabel>ctrl_blk</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>shell_fprintf_control_block</label>
        <link refid="structshell__fprintf__control__block"/>
      </node>
      <node id="8">
        <label>shell_history</label>
        <link refid="structshell__history"/>
        <childnode refid="9" relation="usage">
          <edgelabel>ring_buf</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>current</edgelabel>
          <edgelabel>list</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>shell_log_backend</label>
        <link refid="structshell__log__backend"/>
        <childnode refid="15" relation="usage">
          <edgelabel>backend</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>msgq</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>log_output</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>control_block</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>mpsc_buffer_config</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>mpsc_buffer</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>shell_log_backend_control_block</label>
        <link refid="structshell__log__backend__control__block"/>
      </node>
      <node id="41">
        <label>shell_multiline_cons</label>
        <link refid="structshell__multiline__cons"/>
      </node>
      <node id="39">
        <label>shell_static_args</label>
        <link refid="structshell__static__args"/>
      </node>
      <node id="2">
        <label>shell_static_entry</label>
        <link refid="structshell__static__entry"/>
        <childnode refid="3" relation="usage">
          <edgelabel>subcmd</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>handler</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>args</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>shell_stats</label>
        <link refid="structshell__stats"/>
      </node>
      <node id="6">
        <label>shell_transport</label>
        <link refid="structshell__transport"/>
        <childnode refid="7" relation="usage">
          <edgelabel>api</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>shell_transport_api</label>
        <link refid="structshell__transport__api"/>
      </node>
      <node id="42">
        <label>shell_vt100_colors</label>
        <link refid="structshell__vt100__colors"/>
      </node>
      <node id="40">
        <label>shell_vt100_ctx</label>
        <link refid="structshell__vt100__ctx"/>
        <childnode refid="41" relation="usage">
          <edgelabel>cons</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>col</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>sys_heap</label>
        <link refid="structsys__heap"/>
      </node>
      <node id="49">
        <label>z_poller</label>
      </node>
      <node id="35">
        <label>z_thread_stack_element</label>
      </node>
    </collaborationgraph>
    <location file="include/shell/shell.h" line="686" column="1" bodyfile="include/shell/shell.h" bodystart="686" bodyend="740"/>
    <listofallmembers>
      <member refid="structshell__ctx_1a3df8f9a293b4c24d81a80af2d0e0c44e" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>active_cmd</name></member>
      <member refid="structshell__ctx_1a8e02d1d9a521379ad4188b4678cc6071" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>bypass</name></member>
      <member refid="structshell__ctx_1a5437653e57909910df742c80562c1c83" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>cfg</name></member>
      <member refid="structshell__ctx_1a385014f2fba5cae182c3520ec934cce6" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>cmd_buff</name></member>
      <member refid="structshell__ctx_1a948d78719efe7f01b8edf151e1435af6" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>cmd_buff_len</name></member>
      <member refid="structshell__ctx_1a9a8f69e6876e4788ef3961dfb769e53f" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>cmd_buff_pos</name></member>
      <member refid="structshell__ctx_1a5dfe5d3b2e27b67a7a78d5c3ad32ff1d" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>cmd_tmp_buff_len</name></member>
      <member refid="structshell__ctx_1ac9bed826ec7421065e6bc6e12ad213ce" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>ctx</name></member>
      <member refid="structshell__ctx_1abbbc94a651bfc56d5b0916e1516c3842" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>events</name></member>
      <member refid="structshell__ctx_1aba89a1995fe33838d508810e60c7ea79" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>printf_buff</name></member>
      <member refid="structshell__ctx_1a261d4754f4bf3764298e264ed6e87eff" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>prompt</name></member>
      <member refid="structshell__ctx_1abc4135f23c4738fcf6a2c9d8f45d516b" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>receive_state</name></member>
      <member refid="structshell__ctx_1a0e9321e8954a7598cb6521f660480a88" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>selected_cmd</name></member>
      <member refid="structshell__ctx_1a6d96ff92952aebed16ebf288fe0a96db" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>signals</name></member>
      <member refid="structshell__ctx_1a7388fd2e850fcf37c4a421cda13661e8" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>state</name></member>
      <member refid="structshell__ctx_1a35085b30e92b913b16f02496c5ec6375" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>temp_buff</name></member>
      <member refid="structshell__ctx_1a2cab9b799462a9f6eea898f7076f204f" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>tid</name></member>
      <member refid="structshell__ctx_1a0ec61f11544cb817bbd46ed4aa332123" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>uninit_cb</name></member>
      <member refid="structshell__ctx_1a25b945fcaba216e039124aacec660600" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>vt100_ctx</name></member>
      <member refid="structshell__ctx_1a76cf861f17057cf080c54b67acb1a801" prot="public" virt="non-virtual"><scope>shell_ctx</scope><name>wr_mtx</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
