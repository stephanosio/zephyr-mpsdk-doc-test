<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structk__work" kind="struct" language="C++" prot="public">
    <compoundname>k_work</compoundname>
    <includes refid="include_2kernel_8h" local="no">kernel.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structk__work_1a85772682983e0fdeb735f0821d5710d4" prot="public" static="no" mutable="no">
        <type><ref refid="slist_8h_1a69bf43aad81e3ee2d55250c59b857493" kindref="member">sys_snode_t</ref></type>
        <definition>sys_snode_t k_work::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="3578" column="13" bodyfile="include/kernel.h" bodystart="3578" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__work_1a096d6ca1338fb0fbfa330b790136f172" prot="public" static="no" mutable="no">
        <type><ref refid="group__workqueue__apis_1ga5add9ef0dce306a08413c4140fc0bdda" kindref="member">k_work_handler_t</ref></type>
        <definition>k_work_handler_t k_work::handler</definition>
        <argsstring></argsstring>
        <name>handler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="3581" column="18" bodyfile="include/kernel.h" bodystart="3581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__work_1a551be8394e041020c36a97dc2e12e137" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__work__q" kindref="compound">k_work_q</ref> *</type>
        <definition>struct k_work_q* k_work::queue</definition>
        <argsstring></argsstring>
        <name>queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="3584" column="15" bodyfile="include/kernel.h" bodystart="3584" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__work_1a391ed7d2039cd05c9894267bf8ea4dfd" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t k_work::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="3592" column="10" bodyfile="include/kernel.h" bodystart="3592" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A structure used to submit work. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="8">
        <label>__thread_entry</label>
      </node>
      <node id="6">
        <label>_callee_saved</label>
      </node>
      <node id="10">
        <label>_mem_domain_info</label>
      </node>
      <node id="16">
        <label>_slist</label>
      </node>
      <node id="2">
        <label>_snode</label>
      </node>
      <node id="15">
        <label>_thread_arch</label>
      </node>
      <node id="5">
        <label>_thread_base</label>
      </node>
      <node id="9">
        <label>_thread_stack_info</label>
      </node>
      <node id="7">
        <label>_wait_q_t</label>
      </node>
      <node id="12">
        <label>k_heap</label>
        <link refid="structk__heap"/>
        <childnode refid="13" relation="usage">
          <edgelabel>heap</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>k_spinlock</label>
        <link refid="structk__spinlock"/>
      </node>
      <node id="4">
        <label>k_thread</label>
        <link refid="structk__thread"/>
        <childnode refid="5" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>callee_saved</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>join_queue</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>entry</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>next_thread</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>stack_info</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>mem_domain_info</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>stack_obj</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>resource_pool</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>arch</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>k_work</label>
        <link refid="structk__work"/>
        <childnode refid="2" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>handler</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>k_work_q</label>
        <link refid="structk__work__q"/>
        <childnode refid="4" relation="usage">
          <edgelabel>thread</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>pending</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>drainq</edgelabel>
          <edgelabel>notifyq</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>sys_heap</label>
        <link refid="structsys__heap"/>
      </node>
      <node id="11">
        <label>z_thread_stack_element</label>
      </node>
    </collaborationgraph>
    <location file="include/kernel.h" line="3572" column="1" bodyfile="include/kernel.h" bodystart="3572" bodyend="3593"/>
    <listofallmembers>
      <member refid="structk__work_1a391ed7d2039cd05c9894267bf8ea4dfd" prot="public" virt="non-virtual"><scope>k_work</scope><name>flags</name></member>
      <member refid="structk__work_1a096d6ca1338fb0fbfa330b790136f172" prot="public" virt="non-virtual"><scope>k_work</scope><name>handler</name></member>
      <member refid="structk__work_1a85772682983e0fdeb735f0821d5710d4" prot="public" virt="non-virtual"><scope>k_work</scope><name>node</name></member>
      <member refid="structk__work_1a551be8394e041020c36a97dc2e12e137" prot="public" virt="non-virtual"><scope>k_work</scope><name>queue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
