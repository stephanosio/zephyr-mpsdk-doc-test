<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__ec__host__cmd__periph" kind="group">
    <compoundname>ec_host_cmd_periph</compoundname>
    <title>Host Command Peripherals API</title>
    <innerclass refid="structec__host__cmd__periph__rx__ctx" prot="public">ec_host_cmd_periph_rx_ctx</innerclass>
    <innerclass refid="structec__host__cmd__periph__tx__buf" prot="public">ec_host_cmd_periph_tx_buf</innerclass>
    <innerclass refid="structec__host__cmd__periph__api" prot="public">ec_host_cmd_periph_api</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__ec__host__cmd__periph_1gac55a7f30938f70e14f33c05738fd3d80" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* ec_host_cmd_periph_api_init) (const struct device *dev, struct ec_host_cmd_periph_rx_ctx *rx_ctx)</definition>
        <argsstring>)(const struct device *dev, struct ec_host_cmd_periph_rx_ctx *rx_ctx)</argsstring>
        <name>ec_host_cmd_periph_api_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/ec_host_cmd_periph.h" line="58" column="9" bodyfile="include/drivers/ec_host_cmd_periph.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__ec__host__cmd__periph_1ga4d7866d509d6b1bebc81b7b7dea529e8" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* ec_host_cmd_periph_api_send) (const struct device *dev, const struct ec_host_cmd_periph_tx_buf *tx_buf)</definition>
        <argsstring>)(const struct device *dev, const struct ec_host_cmd_periph_tx_buf *tx_buf)</argsstring>
        <name>ec_host_cmd_periph_api_send</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/ec_host_cmd_periph.h" line="61" column="9" bodyfile="include/drivers/ec_host_cmd_periph.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__ec__host__cmd__periph_1ga2c9a8e619e11b79373f16d56f2f1bd35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ec_host_cmd_periph_init</definition>
        <argsstring>(const struct device *dev, struct ec_host_cmd_periph_rx_ctx *rx_ctx)</argsstring>
        <name>ec_host_cmd_periph_init</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>struct <ref refid="structec__host__cmd__periph__rx__ctx" kindref="compound">ec_host_cmd_periph_rx_ctx</ref> *</type>
          <declname>rx_ctx</declname>
        </param>
        <briefdescription>
<para>Initialize a host command device. </para>
        </briefdescription>
        <detaileddescription>
<para>This routine initializes a host command device, prior to its first use. The receive context object are an output of this function and are valid for the lifetime of this device. The RX context is used by the client to receive data from the host.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rx_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] The receiving context object that are valid for the lifetime of the device. These objects are used to receive data from the driver when the host send data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if successful </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/ec_host_cmd_periph.h" line="85" column="6" declfile="include/drivers/ec_host_cmd_periph.h" declline="85" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ec__host__cmd__periph_1gae6fbd24442bfcdc7f0df942e57b70c82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ec_host_cmd_periph_send</definition>
        <argsstring>(const struct device *dev, const struct ec_host_cmd_periph_tx_buf *tx_buf)</argsstring>
        <name>ec_host_cmd_periph_send</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const struct <ref refid="structec__host__cmd__periph__tx__buf" kindref="compound">ec_host_cmd_periph_tx_buf</ref> *</type>
          <declname>tx_buf</declname>
        </param>
        <briefdescription>
<para>Sends the specified data to the host. </para>
        </briefdescription>
        <detaileddescription>
<para>Sends the data specified in <emphasis>tx_buf</emphasis> to the host over the host communication bus.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tx_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to transmit to the host.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if successful </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/ec_host_cmd_periph.h" line="109" column="6" declfile="include/drivers/ec_host_cmd_periph.h" declline="109" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Host Command Peripherals API. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
