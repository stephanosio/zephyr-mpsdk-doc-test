<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__timing__api" kind="group">
    <compoundname>timing_api</compoundname>
    <title>Timing APIs</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__timing__api_1ga50ff9040b99d95c56f494014831e4b47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timing_init</definition>
        <argsstring>(void)</argsstring>
        <name>timing_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the timing subsystem. </para>
        </briefdescription>
        <detaileddescription>
<para>Perform the necessary steps to initialize the timing subsystem. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="49" column="6" declfile="include/timing/timing.h" declline="49" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1ga3c28bb4ced0467c284d33c800e070bde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timing_start</definition>
        <argsstring>(void)</argsstring>
        <name>timing_start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Signal the start of the timing information gathering. </para>
        </briefdescription>
        <detaileddescription>
<para>Signal to the timing subsystem that timing information will be gathered from this point forward. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="57" column="6" declfile="include/timing/timing.h" declline="57" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1gade1584bf683c9c61905513efa4d99cf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timing_stop</definition>
        <argsstring>(void)</argsstring>
        <name>timing_stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Signal the end of the timing information gathering. </para>
        </briefdescription>
        <detaileddescription>
<para>Signal to the timing subsystem that timing information is no longer being gathered from this point forward. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="65" column="6" declfile="include/timing/timing.h" declline="65" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1gaa5736c87362de09749af1d8ff30b8208" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref></type>
        <definition>static timing_t timing_counter_get</definition>
        <argsstring>(void)</argsstring>
        <name>timing_counter_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return timing counter. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Timing counter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="72" column="24" bodyfile="include/timing/timing.h" bodystart="72" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1gaa12074c7645b19578e7ca573c6aa2955" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>static uint64_t timing_cycles_get</definition>
        <argsstring>(volatile timing_t *const start, volatile timing_t *const end)</argsstring>
        <name>timing_cycles_get</name>
        <param>
          <type>volatile <ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref> *const</type>
          <declname>start</declname>
        </param>
        <param>
          <type>volatile <ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref> *const</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Get number of cycles between <computeroutput>start</computeroutput> and <computeroutput>end</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>For some architectures or SoCs, the raw numbers from counter need to be scaled to obtain actual number of cycles.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to counter at start of a measured execution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to counter at stop of a measured execution. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of cycles between start and end. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="93" column="24" bodyfile="include/timing/timing.h" bodystart="93" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1gab72ed08d19630cb4cbea4977f2e6723b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>static uint64_t timing_freq_get</definition>
        <argsstring>(void)</argsstring>
        <name>timing_freq_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get frequency of counter used (in Hz). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Frequency of counter used for timing in Hz. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="110" column="24" bodyfile="include/timing/timing.h" bodystart="110" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1ga14a85981068350f33c63c93c4b71afe2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>static uint64_t timing_cycles_to_ns</definition>
        <argsstring>(uint64_t cycles)</argsstring>
        <name>timing_cycles_to_ns</name>
        <param>
          <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
          <declname>cycles</declname>
        </param>
        <briefdescription>
<para>Convert number of <computeroutput>cycles</computeroutput> into nanoseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cycles</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of cycles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Converted time value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="127" column="24" bodyfile="include/timing/timing.h" bodystart="127" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1ga28b0252f3395b6e6b549cb03ea4dbef4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>static uint64_t timing_cycles_to_ns_avg</definition>
        <argsstring>(uint64_t cycles, uint32_t count)</argsstring>
        <name>timing_cycles_to_ns_avg</name>
        <param>
          <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
          <declname>cycles</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Convert number of <computeroutput>cycles</computeroutput> into nanoseconds with averaging. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cycles</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of cycles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Times of accumulated cycles to average over </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Converted time value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="145" column="24" bodyfile="include/timing/timing.h" bodystart="145" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1ga65370ad32eadf61c84b90dc04ecd1d56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>static uint32_t timing_freq_get_mhz</definition>
        <argsstring>(void)</argsstring>
        <name>timing_freq_get_mhz</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get frequency of counter used (in MHz). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Frequency of counter used for timing in MHz. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="161" column="24" bodyfile="include/timing/timing.h" bodystart="161" bodyend="170"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Timing Measurement APIs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
