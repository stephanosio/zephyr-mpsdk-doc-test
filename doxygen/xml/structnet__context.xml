<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structnet__context" kind="struct" language="C++" prot="public">
    <compoundname>net_context</compoundname>
    <includes refid="net__context_8h" local="no">net_context.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnet__context_1a1679e131dd6626bc210f23938df3fbcb" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* net_context::user_data</definition>
        <argsstring></argsstring>
        <name>user_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>User data.</para>
<para>First member of the structure to let users either have user data associated with a context, or put contexts into a FIFO. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="207" column="6" bodyfile="include/net/net_context.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__context_1a0ae23462dcc7f84c95e0cc69dfeb6d5a" prot="public" static="no" mutable="no">
        <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref></type>
        <definition>atomic_t net_context::refcount</definition>
        <argsstring></argsstring>
        <name>refcount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reference count </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="211" column="10" bodyfile="include/net/net_context.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__context_1a730e72866e94ed1695010b50c618a281" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__mutex" kindref="compound">k_mutex</ref></type>
        <definition>struct k_mutex net_context::lock</definition>
        <argsstring></argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Internal lock for protecting this context from multiple access. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="215" column="14" bodyfile="include/net/net_context.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__context_1a7ed765f4d8b9cdc0fbd080287215f955" prot="public" static="no" mutable="no">
        <type>struct sockaddr_ptr</type>
        <definition>struct sockaddr_ptr net_context::local</definition>
        <argsstring></argsstring>
        <name>local</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Local endpoint address. Note that the values are in network byte order. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="220" column="19" bodyfile="include/net/net_context.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__context_1a4a58fc21990e3c3ddb5ebf77c8212b9c" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref></type>
        <definition>struct sockaddr net_context::remote</definition>
        <argsstring></argsstring>
        <name>remote</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remote endpoint address. Note that the values are in network byte order. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="225" column="15" bodyfile="include/net/net_context.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__context_1abd8ff1b4826535df911d2af14b46e312" prot="public" static="no" mutable="no">
        <type>struct net_conn_handle *</type>
        <definition>struct net_conn_handle* net_context::conn_handler</definition>
        <argsstring></argsstring>
        <name>conn_handler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Connection handle </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="228" column="22" bodyfile="include/net/net_context.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__context_1af551b252faf29ee6018d4bd783c5f2b4" prot="public" static="no" mutable="no">
        <type><ref refid="group__net__context_1ga05b4ae7d57bb4e472c637aea912b08cd" kindref="member">net_context_recv_cb_t</ref></type>
        <definition>net_context_recv_cb_t net_context::recv_cb</definition>
        <argsstring></argsstring>
        <name>recv_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Receive callback to be called when desired packet has been received. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="233" column="23" bodyfile="include/net/net_context.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__context_1a38c83746c8b2fcddf187a20299d6eb3c" prot="public" static="no" mutable="no">
        <type><ref refid="group__net__context_1ga52a4a30637d02d7fb2fe058e8314d309" kindref="member">net_context_send_cb_t</ref></type>
        <definition>net_context_send_cb_t net_context::send_cb</definition>
        <argsstring></argsstring>
        <name>send_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send callback to be called when the packet has been sent successfully. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="238" column="23" bodyfile="include/net/net_context.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__context_1abc30f85e6016901b1d6fbb771b07370d" prot="public" static="no" mutable="no">
        <type><ref refid="group__net__context_1gaaa12e95831b1de08379fd907e47c550a" kindref="member">net_context_connect_cb_t</ref></type>
        <definition>net_context_connect_cb_t net_context::connect_cb</definition>
        <argsstring></argsstring>
        <name>connect_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Connect callback to be called when a connection has been established. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="243" column="26" bodyfile="include/net/net_context.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__context_1adee6e668bfae2749df9b986d0049f10b" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* net_context::tcp</definition>
        <argsstring></argsstring>
        <name>tcp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TCP connection information </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="257" column="6" bodyfile="include/net/net_context.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__context_1a6c5f9bacfbd1ae97f9a9ab39b891c5d3" prot="public" static="no" mutable="no">
        <type>struct net_context::@171</type>
        <definition>struct net_context::@171 net_context::options</definition>
        <argsstring></argsstring>
        <name>options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Option values </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="316" column="9"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__context_1abfb04fc163636498f72b29aa12087e19" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t net_context::proto</definition>
        <argsstring></argsstring>
        <name>proto</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Protocol (UDP, TCP or IEEE 802.3 protocol value) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="319" column="10" bodyfile="include/net/net_context.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t net_context::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flags for the context </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="322" column="10" bodyfile="include/net/net_context.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__context_1ad71d151e1e9e35b934949482066f1947" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref></type>
        <definition>int8_t net_context::iface</definition>
        <argsstring></argsstring>
        <name>iface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Network interface assigned to this context </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="325" column="8" bodyfile="include/net/net_context.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__context_1af9801980b3f2bb16f5ea2126a6e18cb4" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t net_context::ipv6_hop_limit</definition>
        <argsstring></argsstring>
        <name>ipv6_hop_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="329" column="9" bodyfile="include/net/net_context.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__context_1a9a9116844b52dc0366f770f3e6c572eb" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t net_context::ipv4_ttl</definition>
        <argsstring></argsstring>
        <name>ipv4_ttl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="330" column="9" bodyfile="include/net/net_context.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__context_1a8e234cf293ac64c4edaf0bfa755a734a" prot="public" static="no" mutable="no">
        <type>union net_context::@172</type>
        <definition>union net_context::@172 net_context::@173</definition>
        <argsstring></argsstring>
        <name>@173</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IPv6 hop limit or IPv4 ttl for packets sent via this context. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_context.h" line="331" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Note that we do not store the actual source IP address in the context because the address is already be set in the network interface struct. If there is no such source address there, the packet cannot be sent anyway. This saves 12 bytes / context in IPv6. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="7">
        <label>__thread_entry</label>
      </node>
      <node id="6">
        <label>_callee_saved</label>
      </node>
      <node id="9">
        <label>_mem_domain_info</label>
      </node>
      <node id="14">
        <label>_thread_arch</label>
      </node>
      <node id="5">
        <label>_thread_base</label>
      </node>
      <node id="8">
        <label>_thread_stack_info</label>
      </node>
      <node id="3">
        <label>_wait_q_t</label>
      </node>
      <node id="11">
        <label>k_heap</label>
        <link refid="structk__heap"/>
        <childnode refid="12" relation="usage">
          <edgelabel>heap</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>k_mutex</label>
        <link refid="structk__mutex"/>
        <childnode refid="3" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>k_spinlock</label>
        <link refid="structk__spinlock"/>
      </node>
      <node id="4">
        <label>k_thread</label>
        <link refid="structk__thread"/>
        <childnode refid="5" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>callee_saved</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>join_queue</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>entry</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>next_thread</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>stack_info</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>mem_domain_info</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>stack_obj</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>resource_pool</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>arch</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>net_context</label>
        <link refid="structnet__context"/>
        <childnode refid="2" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>remote</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>connect_cb</edgelabel>
          <edgelabel>recv_cb</edgelabel>
          <edgelabel>send_cb</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>sockaddr</label>
        <link refid="structsockaddr"/>
      </node>
      <node id="12">
        <label>sys_heap</label>
        <link refid="structsys__heap"/>
      </node>
      <node id="10">
        <label>z_thread_stack_element</label>
      </node>
    </collaborationgraph>
    <location file="include/net/net_context.h" line="201" column="13" bodyfile="include/net/net_context.h" bodystart="201" bodyend="337"/>
    <listofallmembers>
      <member refid="structnet__context_1abd8ff1b4826535df911d2af14b46e312" prot="public" virt="non-virtual"><scope>net_context</scope><name>conn_handler</name></member>
      <member refid="structnet__context_1abc30f85e6016901b1d6fbb771b07370d" prot="public" virt="non-virtual"><scope>net_context</scope><name>connect_cb</name></member>
      <member refid="structnet__context_1a300e382f78b20f220fc1b450784bbd3c" prot="public" virt="non-virtual"><scope>net_context</scope><name>flags</name></member>
      <member refid="structnet__context_1ad71d151e1e9e35b934949482066f1947" prot="public" virt="non-virtual"><scope>net_context</scope><name>iface</name></member>
      <member refid="structnet__context_1a9a9116844b52dc0366f770f3e6c572eb" prot="public" virt="non-virtual"><scope>net_context</scope><name>ipv4_ttl</name></member>
      <member refid="structnet__context_1af9801980b3f2bb16f5ea2126a6e18cb4" prot="public" virt="non-virtual"><scope>net_context</scope><name>ipv6_hop_limit</name></member>
      <member refid="structnet__context_1a7ed765f4d8b9cdc0fbd080287215f955" prot="public" virt="non-virtual"><scope>net_context</scope><name>local</name></member>
      <member refid="structnet__context_1a730e72866e94ed1695010b50c618a281" prot="public" virt="non-virtual"><scope>net_context</scope><name>lock</name></member>
      <member refid="structnet__context_1a6c5f9bacfbd1ae97f9a9ab39b891c5d3" prot="public" virt="non-virtual"><scope>net_context</scope><name>options</name></member>
      <member refid="structnet__context_1abfb04fc163636498f72b29aa12087e19" prot="public" virt="non-virtual"><scope>net_context</scope><name>proto</name></member>
      <member refid="structnet__context_1af551b252faf29ee6018d4bd783c5f2b4" prot="public" virt="non-virtual"><scope>net_context</scope><name>recv_cb</name></member>
      <member refid="structnet__context_1a0ae23462dcc7f84c95e0cc69dfeb6d5a" prot="public" virt="non-virtual"><scope>net_context</scope><name>refcount</name></member>
      <member refid="structnet__context_1a4a58fc21990e3c3ddb5ebf77c8212b9c" prot="public" virt="non-virtual"><scope>net_context</scope><name>remote</name></member>
      <member refid="structnet__context_1a38c83746c8b2fcddf187a20299d6eb3c" prot="public" virt="non-virtual"><scope>net_context</scope><name>send_cb</name></member>
      <member refid="structnet__context_1adee6e668bfae2749df9b986d0049f10b" prot="public" virt="non-virtual"><scope>net_context</scope><name>tcp</name></member>
      <member refid="structnet__context_1a1679e131dd6626bc210f23938df3fbcb" prot="public" virt="non-virtual"><scope>net_context</scope><name>user_data</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
