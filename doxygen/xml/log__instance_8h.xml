<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="log__instance_8h" kind="file" language="C++">
    <compoundname>log_instance.h</compoundname>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includedby refid="log_8h" local="no">include/logging/log.h</includedby>
    <includedby refid="include_2logging_2log__core_8h" local="no">include/logging/log_core.h</includedby>
    <includedby refid="include_2logging_2log__msg2_8h" local="no">include/logging/log_msg2.h</includedby>
    <includedby refid="shell_2shell_8h" local="no">include/shell/shell.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/logging/log_instance.h</label>
        <link refid="log__instance_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>include/debug/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>include/drivers/ptp_clock.h</label>
        <link refid="ptp__clock_8h"/>
      </node>
      <node id="2">
        <label>include/logging/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>include/logging/log_backend.h</label>
        <link refid="log__backend_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>include/logging/log_backend_std.h</label>
        <link refid="log__backend__std_8h"/>
      </node>
      <node id="66">
        <label>include/logging/log_core.h</label>
        <link refid="include_2logging_2log__core_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>include/logging/log_ctrl.h</label>
        <link refid="include_2logging_2log__ctrl_8h"/>
      </node>
      <node id="67">
        <label>include/logging/log_frontend.h</label>
        <link refid="log__frontend_8h"/>
      </node>
      <node id="1">
        <label>include/logging/log_instance.h</label>
        <link refid="log__instance_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>include/logging/log_internal.h</label>
        <link refid="log__internal_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>include/logging/log_msg.h</label>
        <link refid="log__msg_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>include/logging/log_msg2.h</label>
        <link refid="include_2logging_2log__msg2_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>include/logging/log_output.h</label>
        <link refid="log__output_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>include/logging/log_output_dict.h</label>
        <link refid="log__output__dict_8h"/>
      </node>
      <node id="46">
        <label>include/net/bt.h</label>
        <link refid="bt_8h"/>
      </node>
      <node id="11">
        <label>include/net/can.h</label>
        <link refid="net_2can_8h"/>
      </node>
      <node id="21">
        <label>include/net/dns_resolve.h</label>
        <link refid="dns__resolve_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>include/net/dsa.h</label>
        <link refid="dsa_8h"/>
      </node>
      <node id="13">
        <label>include/net/dummy.h</label>
        <link refid="dummy_8h"/>
      </node>
      <node id="14">
        <label>include/net/ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>include/net/ethernet_mgmt.h</label>
        <link refid="ethernet__mgmt_8h"/>
      </node>
      <node id="9">
        <label>include/net/gptp.h</label>
        <link refid="gptp_8h"/>
      </node>
      <node id="47">
        <label>include/net/ieee802154.h</label>
        <link refid="ieee802154_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>include/net/ieee802154_mgmt.h</label>
        <link refid="ieee802154__mgmt_8h"/>
      </node>
      <node id="17">
        <label>include/net/ieee802154_radio.h</label>
        <link refid="ieee802154__radio_8h"/>
      </node>
      <node id="18">
        <label>include/net/igmp.h</label>
        <link refid="igmp_8h"/>
      </node>
      <node id="19">
        <label>include/net/net_config.h</label>
        <link refid="net__config_8h"/>
      </node>
      <node id="20">
        <label>include/net/net_context.h</label>
        <link refid="net__context_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>include/net/net_core.h</label>
        <link refid="net__core_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>include/net/net_if.h</label>
        <link refid="net__if_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>include/net/net_mgmt.h</label>
        <link refid="net__mgmt_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>include/net/net_offload.h</label>
        <link refid="net__offload_8h"/>
      </node>
      <node id="35">
        <label>include/net/net_pkt.h</label>
        <link refid="net__pkt_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>include/net/net_pkt_filter.h</label>
        <link refid="net__pkt__filter_8h"/>
      </node>
      <node id="49">
        <label>include/net/net_stats.h</label>
        <link refid="net__stats_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>include/net/openthread.h</label>
        <link refid="openthread_8h"/>
      </node>
      <node id="36">
        <label>include/net/ppp.h</label>
        <link refid="ppp_8h"/>
      </node>
      <node id="37">
        <label>include/net/promiscuous.h</label>
        <link refid="promiscuous_8h"/>
      </node>
      <node id="50">
        <label>include/net/ptp_time.h</label>
        <link refid="ptp__time_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>include/net/sntp.h</label>
        <link refid="sntp_8h"/>
      </node>
      <node id="22">
        <label>include/net/socket.h</label>
        <link refid="net_2socket_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>include/net/socket_can.h</label>
        <link refid="socket__can_8h"/>
      </node>
      <node id="43">
        <label>include/net/socket_net_mgmt.h</label>
        <link refid="socket__net__mgmt_8h"/>
      </node>
      <node id="23">
        <label>include/net/socket_offload.h</label>
        <link refid="socket__offload_8h"/>
      </node>
      <node id="28">
        <label>include/net/socketutils.h</label>
        <link refid="socketutils_8h"/>
      </node>
      <node id="24">
        <label>include/net/tftp.h</label>
        <link refid="tftp_8h"/>
      </node>
      <node id="52">
        <label>include/net/trickle.h</label>
        <link refid="trickle_8h"/>
      </node>
      <node id="38">
        <label>include/net/udp.h</label>
        <link refid="udp_8h"/>
      </node>
      <node id="39">
        <label>include/net/virtual.h</label>
        <link refid="virtual_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>include/net/virtual_mgmt.h</label>
        <link refid="virtual__mgmt_8h"/>
      </node>
      <node id="44">
        <label>include/net/wifi_mgmt.h</label>
        <link refid="wifi__mgmt_8h"/>
      </node>
      <node id="25">
        <label>include/posix/arpa/inet.h</label>
        <link refid="inet_8h"/>
      </node>
      <node id="26">
        <label>include/posix/net/if.h</label>
        <link refid="if_8h"/>
      </node>
      <node id="27">
        <label>include/posix/netdb.h</label>
        <link refid="netdb_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>include/posix/netinet/in.h</label>
        <link refid="in_8h"/>
      </node>
      <node id="30">
        <label>include/posix/netinet/tcp.h</label>
        <link refid="tcp_8h"/>
      </node>
      <node id="31">
        <label>include/posix/poll.h</label>
        <link refid="poll_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>include/posix/sys/socket.h</label>
        <link refid="posix_2sys_2socket_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>include/shell/shell.h</label>
        <link refid="shell_2shell_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>include/shell/shell_dummy.h</label>
        <link refid="shell__dummy_8h"/>
      </node>
      <node id="72">
        <label>include/shell/shell_log_backend.h</label>
        <link refid="shell__log__backend_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>include/shell/shell_rtt.h</label>
        <link refid="shell__rtt_8h"/>
      </node>
      <node id="56">
        <label>include/shell/shell_telnet.h</label>
        <link refid="shell__telnet_8h"/>
      </node>
      <node id="57">
        <label>include/shell/shell_uart.h</label>
        <link refid="shell__uart_8h"/>
      </node>
      <node id="58">
        <label>include/syscall_handler.h</label>
        <link refid="syscall__handler_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>include/usb/usb_device.h</label>
        <link refid="usb__device_8h"/>
      </node>
      <node id="59">
        <label>tests/kernel/fatal/exception/src/main.c</label>
        <link refid="fatal_2exception_2src_2main_8c"/>
      </node>
      <node id="60">
        <label>tests/kernel/mem_protect/mem_protect/src/inherit.c</label>
        <link refid="inherit_8c"/>
      </node>
      <node id="61">
        <label>tests/kernel/mem_protect/mem_protect/src/kobject.c</label>
        <link refid="kobject_8c"/>
      </node>
      <node id="62">
        <label>tests/kernel/mem_protect/obj_validation/src/main.c</label>
        <link refid="mem__protect_2obj__validation_2src_2main_8c"/>
      </node>
      <node id="63">
        <label>tests/kernel/mem_protect/syscalls/src/main.c</label>
        <link refid="mem__protect_2syscalls_2src_2main_8c"/>
      </node>
      <node id="4">
        <label>tests/kernel/mem_protect/userspace/src/main.c</label>
        <link refid="mem__protect_2userspace_2src_2main_8c"/>
      </node>
      <node id="5">
        <label>tests/kernel/profiling/profiling_api/src/main.c</label>
        <link refid="profiling_2profiling__api_2src_2main_8c"/>
      </node>
      <node id="6">
        <label>tests/kernel/threads/dynamic_thread/src/main.c</label>
        <link refid="threads_2dynamic__thread_2src_2main_8c"/>
      </node>
      <node id="7">
        <label>tests/kernel/threads/thread_apis/src/test_kthread_for_each.c</label>
        <link refid="test__kthread__for__each_8c"/>
      </node>
      <node id="64">
        <label>tests/kernel/threads/thread_stack/src/main.c</label>
        <link refid="threads_2thread__stack_2src_2main_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structlog__source__const__data" prot="public">log_source_const_data</innerclass>
    <innerclass refid="structlog__source__dynamic__data" prot="public">log_source_dynamic_data</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="log__instance_8h_1a88d644c0d8e7b8985a37dca7f467ad9b" prot="public" static="no">
        <name>LOG_OBJECT_PTR_INIT</name>
        <param><defname>_name</defname></param>
        <param><defname>_object</defname></param>
        <initializer>	<ref refid="group__sys-util_1gae67ffe50e848951dbde309ed569ea925" kindref="member">IF_ENABLED</ref>(CONFIG_LOG, (._name = _object,))</initializer>
        <briefdescription>
<para>Initialize pointer to logger instance with explicitly provided object. </para>
        </briefdescription>
        <detaileddescription>
<para>Macro can be used to initialized a pointer with object that is not unique to the given instance, thus not created with <ref refid="log__instance_8h_1ad18f1e8ffbef38f285f70d8005fa144f" kindref="member">LOG_INSTANCE_REGISTER</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the structure element for holding logging object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_object</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a logging instance object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_instance.h" line="79" column="9" bodyfile="include/logging/log_instance.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="log__instance_8h_1a96ff8eee1b58c6b6025a29608b5113b8" prot="public" static="no">
        <name>LOG_INSTANCE_PTR</name>
        <param><defname>_module_name</defname></param>
        <param><defname>_inst_name</defname></param>
        <initializer>	Z_LOG_OBJECT_PTR(Z_LOG_INSTANCE_FULL_NAME(_module_name, _inst_name))</initializer>
        <briefdescription>
<para>Get pointer to a logging instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Instance is identified by <computeroutput>_module_name</computeroutput> and <computeroutput>_inst_name</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_module_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Module name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_inst_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Instance name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to a logging instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_instance.h" line="112" column="9" bodyfile="include/logging/log_instance.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="log__instance_8h_1a7389934373419d74129407ffba7ea3e3" prot="public" static="no">
        <name>LOG_INSTANCE_PTR_INIT</name>
        <param><defname>_name</defname></param>
        <param><defname>_module_name</defname></param>
        <param><defname>_inst_name</defname></param>
        <initializer>	<ref refid="log__instance_8h_1a88d644c0d8e7b8985a37dca7f467ad9b" kindref="member">LOG_OBJECT_PTR_INIT</ref>(_name, <ref refid="log__instance_8h_1a96ff8eee1b58c6b6025a29608b5113b8" kindref="member">LOG_INSTANCE_PTR</ref>(_module_name, _inst_name))</initializer>
        <briefdescription>
<para>Macro for initializing a pointer to the logger instance. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>_module_name</computeroutput> and <computeroutput>_inst_name</computeroutput> are concatenated to form a name of the object.</para>
<para>Macro is intended to be used in user structure initializer to initialize a field in the structure that holds pointer to the logging instance. Structure field should be declared using <computeroutput>LOG_INSTANCE_PTR_DECLARE</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of a structure element that have a pointer to logging instance object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_module_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Module name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_inst_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Instance name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_instance.h" line="127" column="9" bodyfile="include/logging/log_instance.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="log__instance_8h_1a224e4a75dca6d1b363ef49e96730dcfd" prot="public" static="no">
        <name>LOG_INSTANCE_PTR_DECLARE</name>
        <param><defname>_name</defname></param>
        <initializer>	<ref refid="group__sys-util_1gae67ffe50e848951dbde309ed569ea925" kindref="member">IF_ENABLED</ref>(CONFIG_LOG, (Z_LOG_INSTANCE_STRUCT * _name))</initializer>
        <briefdescription>
<para>Declare a logger instance pointer in the module structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of a structure element that will have a pointer to logging instance object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_instance.h" line="141" column="9" bodyfile="include/logging/log_instance.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="log__instance_8h_1ad18f1e8ffbef38f285f70d8005fa144f" prot="public" static="no">
        <name>LOG_INSTANCE_REGISTER</name>
        <param><defname>_module_name</defname></param>
        <param><defname>_inst_name</defname></param>
        <param><defname>_level</defname></param>
        <initializer>	<ref refid="group__sys-util_1gae67ffe50e848951dbde309ed569ea925" kindref="member">IF_ENABLED</ref>(CONFIG_LOG, (Z_LOG_INSTANCE_REGISTER(_module_name, _inst_name, _level)))</initializer>
        <briefdescription>
<para>Macro for registering instance for logging with independent filtering. </para>
        </briefdescription>
        <detaileddescription>
<para>Module instance provides filtering of logs on instance level instead of module level. Instance create using this macro can later on be used with <ref refid="log__instance_8h_1a7389934373419d74129407ffba7ea3e3" kindref="member">LOG_INSTANCE_PTR_INIT</ref> or referenced by <ref refid="log__instance_8h_1a96ff8eee1b58c6b6025a29608b5113b8" kindref="member">LOG_INSTANCE_PTR</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_module_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Module name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_inst_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Instance name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_level</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial static filtering. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_instance.h" line="170" column="9" bodyfile="include/logging/log_instance.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_LOGGING_LOG_INSTANCE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_LOGGING_LOG_INSTANCE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="structlog__source__const__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__source__const__data" kindref="compound">log_source_const_data</ref><sp/>{</highlight></codeline>
<codeline lineno="17" refid="structlog__source__const__data_1af1556767951362b57c14a5c3e717270b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlog__source__const__data_1af1556767951362b57c14a5c3e717270b" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="18" refid="structlog__source__const__data_1acb4c059f66bc535885ecc56cbfa5b8b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structlog__source__const__data_1acb4c059f66bc535885ecc56cbfa5b8b6" kindref="member">level</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_NIOS2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Workaround<sp/>alert!<sp/>Dummy<sp/>data<sp/>to<sp/>ensure<sp/>that<sp/>structure<sp/>is<sp/>&gt;8<sp/>bytes.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Nios2<sp/>uses<sp/>global<sp/>pointer<sp/>register<sp/>for<sp/>structures<sp/>&lt;=8<sp/>bytes<sp/>and</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>apparently<sp/>does<sp/>not<sp/>handle<sp/>well<sp/>variables<sp/>placed<sp/>in<sp/>custom<sp/>sections.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>dummy;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structlog__source__dynamic__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__source__dynamic__data" kindref="compound">log_source_dynamic_data</ref><sp/>{</highlight></codeline>
<codeline lineno="30" refid="structlog__source__dynamic__data_1a92adbfc1beaf3cb08340f054de8819ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structlog__source__dynamic__data_1a92adbfc1beaf3cb08340f054de8819ef" kindref="member">filters</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_NIOS2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Workaround<sp/>alert!<sp/>Dummy<sp/>data<sp/>to<sp/>ensure<sp/>that<sp/>structure<sp/>is<sp/>&gt;8<sp/>bytes.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Nios2<sp/>uses<sp/>global<sp/>pointer<sp/>register<sp/>for<sp/>structures<sp/>&lt;=8<sp/>bytes<sp/>and</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>apparently<sp/>does<sp/>not<sp/>handle<sp/>well<sp/>variables<sp/>placed<sp/>in<sp/>custom<sp/>sections.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>dummy[2];</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_RISCV)<sp/>&amp;&amp;<sp/>defined(CONFIG_64BIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Workaround:<sp/>RV64<sp/>needs<sp/>to<sp/>ensure<sp/>that<sp/>structure<sp/>is<sp/>just<sp/>8<sp/>bytes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>dummy;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_LOG_ITEM_CONST_DATA(_name)<sp/>UTIL_CAT(log_const_,<sp/>_name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_LOG_CONST_ITEM_REGISTER(_name,<sp/>_str_name,<sp/>_level)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>struct<sp/>log_source_const_data<sp/>Z_LOG_ITEM_CONST_DATA(_name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((section(&quot;.&quot;</highlight><highlight class="normal"><sp/>STRINGIFY(Z_LOG_ITEM_CONST_DATA(_name)))))<sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__((used))<sp/>=<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/>_str_name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.level<sp/><sp/>=<sp/>(_level),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="log__instance_8h_1a88d644c0d8e7b8985a37dca7f467ad9b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_OBJECT_PTR_INIT(_name,<sp/>_object)<sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IF_ENABLED(CONFIG_LOG,<sp/>(._name<sp/>=<sp/>_object,))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_LOG_INSTANCE_FULL_NAME(_module_name,<sp/>_inst_name)<sp/>\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UTIL_CAT(_module_name,<sp/>UTIL_CAT(_,<sp/>_inst_name))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_LOG_OBJECT_PTR(_name)<sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COND_CODE_1(CONFIG_LOG_RUNTIME_FILTERING,<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(&amp;LOG_ITEM_DYNAMIC_DATA(_name)),<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(&amp;Z_LOG_ITEM_CONST_DATA(_name)))<sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="log__instance_8h_1a96ff8eee1b58c6b6025a29608b5113b8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_INSTANCE_PTR(_module_name,<sp/>_inst_name)<sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_LOG_OBJECT_PTR(Z_LOG_INSTANCE_FULL_NAME(_module_name,<sp/>_inst_name))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="log__instance_8h_1a7389934373419d74129407ffba7ea3e3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_INSTANCE_PTR_INIT(_name,<sp/>_module_name,<sp/>_inst_name)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_OBJECT_PTR_INIT(_name,<sp/>LOG_INSTANCE_PTR(_module_name,<sp/>_inst_name))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_LOG_INSTANCE_STRUCT<sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COND_CODE_1(CONFIG_LOG_RUNTIME_FILTERING,<sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(struct<sp/>log_source_dynamic_data),<sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>struct<sp/>log_source_const_data))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="log__instance_8h_1a224e4a75dca6d1b363ef49e96730dcfd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_INSTANCE_PTR_DECLARE(_name)<sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IF_ENABLED(CONFIG_LOG,<sp/>(Z_LOG_INSTANCE_STRUCT<sp/>*<sp/>_name))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_LOG_RUNTIME_INSTANCE_REGISTER(_module_name,<sp/>_inst_name)<sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>log_source_dynamic_data<sp/>LOG_INSTANCE_DYNAMIC_DATA(_module_name,<sp/>_inst_name)<sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((section(&quot;.&quot;</highlight><highlight class="normal"><sp/>STRINGIFY(<sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_INSTANCE_DYNAMIC_DATA(_module_name,<sp/>_inst_name)<sp/>\</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)))<sp/>__attribute__((used))</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_LOG_INSTANCE_REGISTER(_module_name,<sp/>_inst_name,<sp/>_level)<sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_LOG_CONST_ITEM_REGISTER(<sp/>\</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_LOG_INSTANCE_FULL_NAME(_module_name,<sp/>_inst_name),<sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STRINGIFY(_module_name._inst_name),<sp/>\</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_level);<sp/>\</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IF_ENABLED(CONFIG_LOG_RUNTIME_FILTERING,<sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Z_LOG_RUNTIME_INSTANCE_REGISTER(_module_name,<sp/>_inst_name)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="log__instance_8h_1ad18f1e8ffbef38f285f70d8005fa144f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_INSTANCE_REGISTER(_module_name,<sp/>_inst_name,<sp/>_level)<sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IF_ENABLED(CONFIG_LOG,<sp/>(Z_LOG_INSTANCE_REGISTER(_module_name,<sp/>_inst_name,<sp/>_level)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_LOGGING_LOG_INSTANCE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/logging/log_instance.h"/>
  </compounddef>
</doxygen>
