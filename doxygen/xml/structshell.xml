<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structshell" kind="struct" language="C++" prot="public">
    <compoundname>shell</compoundname>
    <includes refid="shell_2shell_8h" local="no">shell.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structshell_1a97c365dfd7202eb091b1ad016014729b" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* shell::default_prompt</definition>
        <argsstring></argsstring>
        <name>default_prompt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shell default prompt. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="756" column="12" bodyfile="include/shell/shell.h" bodystart="756" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell_1ac6033c3c2e44c2c4e29791f1f61c566c" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structshell__transport" kindref="compound">shell_transport</ref> *</type>
        <definition>const struct shell_transport* shell::iface</definition>
        <argsstring></argsstring>
        <name>iface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transport interface. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="758" column="28" bodyfile="include/shell/shell.h" bodystart="758" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell_1ac14fde7e5f28615b9eec39a2eb8aa8d4" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structshell__ctx" kindref="compound">shell_ctx</ref> *</type>
        <definition>struct shell_ctx* shell::ctx</definition>
        <argsstring></argsstring>
        <name>ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Internal context. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="759" column="16" bodyfile="include/shell/shell.h" bodystart="759" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell_1a42d2588d15f601baf3f963684d312c86" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structshell__history" kindref="compound">shell_history</ref> *</type>
        <definition>struct shell_history* shell::history</definition>
        <argsstring></argsstring>
        <name>history</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="761" column="20" bodyfile="include/shell/shell.h" bodystart="761" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell_1a3a4f58c6151b3cbd1293d36b92c2f470" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__shell__api_1ga56bf30741f9ec7a6d94e5c18c2858948" kindref="member">shell_flag</ref></type>
        <definition>enum shell_flag shell::shell_flag</definition>
        <argsstring></argsstring>
        <name>shell_flag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="763" column="22" bodyfile="include/shell/shell.h" bodystart="763" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell_1aba181907e38def0985a4c6ffd459d935" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structshell__fprintf" kindref="compound">shell_fprintf</ref> *</type>
        <definition>const struct shell_fprintf* shell::fprintf_ctx</definition>
        <argsstring></argsstring>
        <name>fprintf_ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="765" column="26" bodyfile="include/shell/shell.h" bodystart="765" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell_1a642e7d8fa92464147329247e1325ad2b" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structshell__stats" kindref="compound">shell_stats</ref> *</type>
        <definition>struct shell_stats* shell::stats</definition>
        <argsstring></argsstring>
        <name>stats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="767" column="18" bodyfile="include/shell/shell.h" bodystart="767" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell_1a3daffdb9d38ee8132a2644054126680d" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structshell__log__backend" kindref="compound">shell_log_backend</ref> *</type>
        <definition>const struct shell_log_backend* shell::log_backend</definition>
        <argsstring></argsstring>
        <name>log_backend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="769" column="30" bodyfile="include/shell/shell.h" bodystart="769" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell_1a026bf3bfd09d1b37de537441f5c595cd" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* shell::thread_name</definition>
        <argsstring></argsstring>
        <name>thread_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="773" column="12" bodyfile="include/shell/shell.h" bodystart="773" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell_1a01b4739356f2428527f322662a3bf0a7" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref> *</type>
        <definition>struct k_thread* shell::thread</definition>
        <argsstring></argsstring>
        <name>thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="774" column="15" bodyfile="include/shell/shell.h" bodystart="774" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshell_1ad62262b6b4fa8e56a0e8849f09603b3a" prot="public" static="no" mutable="no">
        <type><ref refid="arch__interface_8h_1a3e4bde3075edb41069b258d999333b0e" kindref="member">k_thread_stack_t</ref> *</type>
        <definition>k_thread_stack_t* shell::stack</definition>
        <argsstring></argsstring>
        <name>stack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="775" column="18" bodyfile="include/shell/shell.h" bodystart="775" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structshell_1a30ad7480b8be019b3b3ed63bf05ad790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shell::LOG_INSTANCE_PTR_DECLARE</definition>
        <argsstring>(log)</argsstring>
        <name>LOG_INSTANCE_PTR_DECLARE</name>
        <param>
          <type>log</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell.h" line="771" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Shell instance internals. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="28">
        <label>__thread_entry</label>
      </node>
      <node id="27">
        <label>_callee_saved</label>
      </node>
      <node id="17">
        <label>_dnode</label>
      </node>
      <node id="30">
        <label>_mem_domain_info</label>
      </node>
      <node id="34">
        <label>_thread_arch</label>
      </node>
      <node id="26">
        <label>_thread_base</label>
      </node>
      <node id="29">
        <label>_thread_stack_info</label>
      </node>
      <node id="22">
        <label>_wait_q_t</label>
      </node>
      <node id="20">
        <label>k_fifo</label>
        <link refid="structk__fifo"/>
      </node>
      <node id="32">
        <label>k_heap</label>
        <link refid="structk__heap"/>
        <childnode refid="33" relation="usage">
          <edgelabel>heap</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>k_msgq</label>
        <link refid="structk__msgq"/>
        <childnode refid="22" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>k_mutex</label>
        <link refid="structk__mutex"/>
        <childnode refid="22" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>k_poll_event</label>
        <link refid="structk__poll__event"/>
        <childnode refid="19" relation="usage">
          <edgelabel>poller</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>signal</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>fifo</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>msgq</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>k_poll_signal</label>
        <link refid="structk__poll__signal"/>
        <childnode refid="17" relation="usage">
          <edgelabel>poll_events</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>k_spinlock</label>
        <link refid="structk__spinlock"/>
      </node>
      <node id="25">
        <label>k_thread</label>
        <link refid="structk__thread"/>
        <childnode refid="26" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>callee_saved</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>join_queue</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>entry</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>next_thread</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>stack_info</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>mem_domain_info</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>stack_obj</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>resource_pool</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>arch</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>log_backend</label>
        <link refid="structlog__backend"/>
        <childnode refid="46" relation="usage">
          <edgelabel>api</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>cb</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>log_backend_api</label>
        <link refid="structlog__backend__api"/>
      </node>
      <node id="47">
        <label>log_backend_control_block</label>
        <link refid="structlog__backend__control__block"/>
      </node>
      <node id="48">
        <label>log_output</label>
        <link refid="structlog__output"/>
        <childnode refid="49" relation="usage">
          <edgelabel>control_block</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>log_output_control_block</label>
        <link refid="structlog__output__control__block"/>
      </node>
      <node id="52">
        <label>mpsc_pbuf_buffer</label>
        <link refid="structmpsc__pbuf__buffer"/>
        <childnode refid="23" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>notify_drop</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>get_wlen</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>mpsc_pbuf_buffer_config</label>
        <link refid="structmpsc__pbuf__buffer__config"/>
        <childnode refid="52" relation="usage">
          <edgelabel>notify_drop</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>get_wlen</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>mpsc_pbuf_generic</label>
        <link refid="unionmpsc__pbuf__generic"/>
        <childnode refid="54" relation="usage">
          <edgelabel>hdr</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>skip</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>mpsc_pbuf_hdr</label>
        <link refid="structmpsc__pbuf__hdr"/>
      </node>
      <node id="55">
        <label>mpsc_pbuf_skip</label>
        <link refid="structmpsc__pbuf__skip"/>
      </node>
      <node id="36">
        <label>ring_buf</label>
        <link refid="structring__buf"/>
        <childnode refid="37" relation="usage">
          <edgelabel>misc</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>buf</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>ring_buf::ring_buf_buffer</label>
        <link refid="unionring__buf_1_1ring__buf__buffer"/>
      </node>
      <node id="37">
        <label>ring_buf::ring_buf_misc</label>
        <link refid="unionring__buf_1_1ring__buf__misc"/>
        <childnode refid="38" relation="usage">
          <edgelabel>item_mode</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>byte_mode</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>ring_buf::ring_buf_misc::ring_buf_misc_byte_mode</label>
        <link refid="structring__buf_1_1ring__buf__misc_1_1ring__buf__misc__byte__mode"/>
      </node>
      <node id="38">
        <label>ring_buf::ring_buf_misc::ring_buf_misc_item_mode</label>
        <link refid="structring__buf_1_1ring__buf__misc_1_1ring__buf__misc__item__mode"/>
      </node>
      <node id="1">
        <label>shell</label>
        <link refid="structshell"/>
        <childnode refid="2" relation="usage">
          <edgelabel>iface</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>history</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>fprintf_ctx</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>stats</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>log_backend</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>thread</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>stack</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>shell_backend_cfg</label>
        <link refid="unionshell__backend__cfg"/>
        <childnode refid="13" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>shell_backend_config_flags</label>
        <link refid="structshell__backend__config__flags"/>
      </node>
      <node id="14">
        <label>shell_backend_ctx</label>
        <link refid="unionshell__backend__ctx"/>
        <childnode refid="15" relation="usage">
          <edgelabel>flags</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>shell_backend_ctx_flags</label>
        <link refid="structshell__backend__ctx__flags"/>
      </node>
      <node id="6">
        <label>shell_cmd_entry</label>
        <link refid="structshell__cmd__entry"/>
        <childnode refid="7" relation="usage">
          <edgelabel>u</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>shell_cmd_entry::union_cmd_entry</label>
        <link refid="unionshell__cmd__entry_1_1union__cmd__entry"/>
        <childnode refid="5" relation="usage">
          <edgelabel>dynamic_get</edgelabel>
          <edgelabel>entry</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>shell_ctx</label>
        <link refid="structshell__ctx"/>
        <childnode refid="5" relation="usage">
          <edgelabel>active_cmd</edgelabel>
          <edgelabel>selected_cmd</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>vt100_ctx</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>bypass</edgelabel>
          <edgelabel>uninit_cb</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>cfg</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>signals</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>events</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>wr_mtx</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>tid</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>shell_fprintf</label>
        <link refid="structshell__fprintf"/>
        <childnode refid="42" relation="usage">
          <edgelabel>ctrl_blk</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>shell_fprintf_control_block</label>
        <link refid="structshell__fprintf__control__block"/>
      </node>
      <node id="35">
        <label>shell_history</label>
        <link refid="structshell__history"/>
        <childnode refid="36" relation="usage">
          <edgelabel>ring_buf</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>current</edgelabel>
          <edgelabel>list</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>shell_log_backend</label>
        <link refid="structshell__log__backend"/>
        <childnode refid="45" relation="usage">
          <edgelabel>backend</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>msgq</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>log_output</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>control_block</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>mpsc_buffer_config</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>mpsc_buffer</edgelabel>
        </childnode>
      </node>
      <node id="50">
        <label>shell_log_backend_control_block</label>
        <link refid="structshell__log__backend__control__block"/>
      </node>
      <node id="10">
        <label>shell_multiline_cons</label>
        <link refid="structshell__multiline__cons"/>
      </node>
      <node id="8">
        <label>shell_static_args</label>
        <link refid="structshell__static__args"/>
      </node>
      <node id="5">
        <label>shell_static_entry</label>
        <link refid="structshell__static__entry"/>
        <childnode refid="6" relation="usage">
          <edgelabel>subcmd</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>handler</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>args</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>shell_stats</label>
        <link refid="structshell__stats"/>
      </node>
      <node id="2">
        <label>shell_transport</label>
        <link refid="structshell__transport"/>
        <childnode refid="3" relation="usage">
          <edgelabel>api</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>shell_transport_api</label>
        <link refid="structshell__transport__api"/>
      </node>
      <node id="11">
        <label>shell_vt100_colors</label>
        <link refid="structshell__vt100__colors"/>
      </node>
      <node id="9">
        <label>shell_vt100_ctx</label>
        <link refid="structshell__vt100__ctx"/>
        <childnode refid="10" relation="usage">
          <edgelabel>cons</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>col</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>sys_heap</label>
        <link refid="structsys__heap"/>
      </node>
      <node id="19">
        <label>z_poller</label>
      </node>
      <node id="31">
        <label>z_thread_stack_element</label>
      </node>
    </collaborationgraph>
    <location file="include/shell/shell.h" line="755" column="1" bodyfile="include/shell/shell.h" bodystart="755" bodyend="776"/>
    <listofallmembers>
      <member refid="structshell_1ac14fde7e5f28615b9eec39a2eb8aa8d4" prot="public" virt="non-virtual"><scope>shell</scope><name>ctx</name></member>
      <member refid="structshell_1a97c365dfd7202eb091b1ad016014729b" prot="public" virt="non-virtual"><scope>shell</scope><name>default_prompt</name></member>
      <member refid="structshell_1aba181907e38def0985a4c6ffd459d935" prot="public" virt="non-virtual"><scope>shell</scope><name>fprintf_ctx</name></member>
      <member refid="structshell_1a42d2588d15f601baf3f963684d312c86" prot="public" virt="non-virtual"><scope>shell</scope><name>history</name></member>
      <member refid="structshell_1ac6033c3c2e44c2c4e29791f1f61c566c" prot="public" virt="non-virtual"><scope>shell</scope><name>iface</name></member>
      <member refid="structshell_1a3daffdb9d38ee8132a2644054126680d" prot="public" virt="non-virtual"><scope>shell</scope><name>log_backend</name></member>
      <member refid="structshell_1a30ad7480b8be019b3b3ed63bf05ad790" prot="public" virt="non-virtual"><scope>shell</scope><name>LOG_INSTANCE_PTR_DECLARE</name></member>
      <member refid="structshell_1a3a4f58c6151b3cbd1293d36b92c2f470" prot="public" virt="non-virtual"><scope>shell</scope><name>shell_flag</name></member>
      <member refid="structshell_1ad62262b6b4fa8e56a0e8849f09603b3a" prot="public" virt="non-virtual"><scope>shell</scope><name>stack</name></member>
      <member refid="structshell_1a642e7d8fa92464147329247e1325ad2b" prot="public" virt="non-virtual"><scope>shell</scope><name>stats</name></member>
      <member refid="structshell_1a01b4739356f2428527f322662a3bf0a7" prot="public" virt="non-virtual"><scope>shell</scope><name>thread</name></member>
      <member refid="structshell_1a026bf3bfd09d1b37de537441f5c595cd" prot="public" virt="non-virtual"><scope>shell</scope><name>thread_name</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
