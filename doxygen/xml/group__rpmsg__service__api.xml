<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__rpmsg__service__api" kind="group">
    <compoundname>rpmsg_service_api</compoundname>
    <title>RPMsg service APIs</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__rpmsg__service__api_1ga700e612c3a6c3a77ed8bc5a3bd36f020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rpmsg_service_register_endpoint</definition>
        <argsstring>(const char *name, rpmsg_ept_cb cb)</argsstring>
        <name>rpmsg_service_register_endpoint</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>rpmsg_ept_cb</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Register IPC endpoint. </para>
        </briefdescription>
        <detaileddescription>
<para>Registers IPC endpoint to enable communication with a remote device. The endpoint is created when the slave device registers it.</para>
<para>The same function registers endpoints for both master and slave devices.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>String containing the name of the endpoint. Must be identical for master and slave </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback executed when data are available on given endpoint</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;=0</parametername>
</parameternamelist>
<parameterdescription>
<para>id of registered endpoint on success; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINPROGRESS</parametername>
</parameternamelist>
<parameterdescription>
<para>when requested to register an endpoint after endpoints creation procedure has started; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>when there is not enough slots to register the endpoint; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>an other negative errno code, reported by rpmsg. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ipc/rpmsg_service.h" line="40" column="5" declfile="include/ipc/rpmsg_service.h" declline="40" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__rpmsg__service__api_1gabb2c5240df9d976cd29edee6985e611b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rpmsg_service_send</definition>
        <argsstring>(int endpoint_id, const void *data, size_t len)</argsstring>
        <name>rpmsg_service_send</name>
        <param>
          <type>int</type>
          <declname>endpoint_id</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Send data using given IPC endpoint. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>endpoint_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Id of registered endpoint, obtained by <ref refid="group__rpmsg__service__api_1ga700e612c3a6c3a77ed8bc5a3bd36f020" kindref="member">rpmsg_service_register_endpoint</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer to send through RPMsg service </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to send.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;=0</parametername>
</parameternamelist>
<parameterdescription>
<para>number of sent bytes; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>an error code, reported by rpmsg. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ipc/rpmsg_service.h" line="53" column="5" declfile="include/ipc/rpmsg_service.h" declline="53" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__rpmsg__service__api_1gaed4439043849b5f133328f1dc7a78da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool rpmsg_service_endpoint_is_bound</definition>
        <argsstring>(int endpoint_id)</argsstring>
        <name>rpmsg_service_endpoint_is_bound</name>
        <param>
          <type>int</type>
          <declname>endpoint_id</declname>
        </param>
        <briefdescription>
<para>Check if endpoint is bound. </para>
        </briefdescription>
        <detaileddescription>
<para>Checks if remote endpoint has been created and the master has bound its endpoint to it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>endpoint_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Id of registered endpoint, obtained by <ref refid="group__rpmsg__service__api_1ga700e612c3a6c3a77ed8bc5a3bd36f020" kindref="member">rpmsg_service_register_endpoint</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>endpoint is bound </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>endpoint not bound </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ipc/rpmsg_service.h" line="67" column="6" declfile="include/ipc/rpmsg_service.h" declline="67" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>RPMsg service API. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
