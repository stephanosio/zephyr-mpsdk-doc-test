<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="test__msgq__contexts_8c" kind="file" language="C++">
    <compoundname>test_msgq_contexts.c</compoundname>
    <includes refid="test__msgq_8h" local="yes">test_msgq.h</includes>
    <incdepgraph>
      <node id="19">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="68">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="67">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="31">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="38">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="40">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="36">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="34">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="42">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="43">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="39">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="37">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="41">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="76">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="47">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="53">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="30">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="44">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="25">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="7">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="21">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="87">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="88">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="15">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="11">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="13">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="66">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="89">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="82">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="5">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="17">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>test_msgq.h</label>
        <link refid="test__msgq_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c</label>
        <link refid="test__msgq__contexts_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>alloca.h</label>
      </node>
      <node id="70">
        <label>arch/cpu.h</label>
      </node>
      <node id="33">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="32">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="45">
        <label>kernel.h</label>
      </node>
      <node id="9">
        <label>stdarg.h</label>
      </node>
      <node id="8">
        <label>stddef.h</label>
      </node>
      <node id="85">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="90">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="91">
        <label>tc_util.h</label>
      </node>
      <node id="3">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="test__msgq__contexts_8c_1a5c4ebc803e1cc8bb3827444dc64e2c47" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__msgq" kindref="compound">k_msgq</ref></type>
        <definition>struct k_msgq msgq</definition>
        <argsstring></argsstring>
        <name>msgq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="12" column="13" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__msgq__contexts_8c_1ad1436c4a973bf196dd09ec5d20a0fc6d" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__msgq" kindref="compound">k_msgq</ref></type>
        <definition>struct k_msgq msgq1</definition>
        <argsstring></argsstring>
        <name>msgq1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="13" column="13" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__msgq__contexts_8c_1aa15baae19d44279cac3d8bf47c9e707f" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread tdata</definition>
        <argsstring></argsstring>
        <name>tdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="17" column="15" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__msgq__contexts_8c_1a82c3f4a9aaaf6ca8f1ca77cc6666f892" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread tdata1</definition>
        <argsstring></argsstring>
        <name>tdata1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="18" column="15" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__msgq__contexts_8c_1a0254f78e372a9cb818cac949ef36f349" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread tdata2</definition>
        <argsstring></argsstring>
        <name>tdata2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="19" column="15" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__msgq__contexts_8c_1a07a69c8fec1db337fd7df21b5b436747" prot="public" static="yes" mutable="no">
        <type><ref refid="group__ztest__test_1gac3de5965061b1164a8033712c9094e23" kindref="member">ZTEST_BMEM</ref> char</type>
        <definition>ZTEST_BMEM char tbuffer[4 * 2]</definition>
        <argsstring>[4 *2]</argsstring>
        <name>tbuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="20" column="25" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__msgq__contexts_8c_1a40763c61bb321b7c9057a3fe9d40597a" prot="public" static="yes" mutable="no">
        <type><ref refid="group__ztest__test_1ga2c7d0aa85e7f320d582395c5ded90133" kindref="member">ZTEST_DMEM</ref> char</type>
        <definition>ZTEST_DMEM char tbuffer1[4]</definition>
        <argsstring>[4]</argsstring>
        <name>tbuffer1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="21" column="25" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__msgq__contexts_8c_1aef9fe961c39cb8538209da5a958d8c9f" prot="public" static="yes" mutable="no">
        <type><ref refid="group__ztest__test_1ga2c7d0aa85e7f320d582395c5ded90133" kindref="member">ZTEST_DMEM</ref> <ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>ZTEST_DMEM uint32_t data[2]</definition>
        <argsstring>[2]</argsstring>
        <name>data</name>
        <initializer>= {  0xABCD ,  0x1234  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="22" column="28" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" prot="public" static="no" mutable="no">
        <type>struct k_sem</type>
        <definition>struct k_sem end_sema</definition>
        <argsstring></argsstring>
        <name>end_sema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="23" column="12" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__msgq__contexts_8c_1aadb43cdaac5af3d7bef89b27dfd9e84d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_MSGQ_DEFINE</definition>
        <argsstring>(kmsgq, 4, 2, 4)</argsstring>
        <name>K_MSGQ_DEFINE</name>
        <param>
          <type><ref refid="msgq_2msgq__api_2src_2main_8c_1a591a6bafebdc3c3e3f9d6f35f679ce88" kindref="member">kmsgq</ref></type>
        </param>
        <param>
          <type>4</type>
        </param>
        <param>
          <type>2</type>
        </param>
        <param>
          <type>4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TESTPOINT: init via K_MSGQ_DEFINE </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="10" column="1" declfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" declline="10" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1ab59de228d87233094bb33be768ee364d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_MSGQ_DEFINE</definition>
        <argsstring>(kmsgq_test_alloc, 4, 2, 4)</argsstring>
        <name>K_MSGQ_DEFINE</name>
        <param>
          <type>kmsgq_test_alloc</type>
        </param>
        <param>
          <type>4</type>
        </param>
        <param>
          <type>2</type>
        </param>
        <param>
          <type>4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="11" column="1" declfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" declline="11" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1a3e6b65a6d59086025e05164fc2c45504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_DEFINE</definition>
        <argsstring>(tstack,(512+CONFIG_TEST_EXTRA_STACK_SIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref></type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACK_SIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="14" column="1" declfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" declline="14" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1a9bcc9b0a561e08fc8f01cff937397237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_DEFINE</definition>
        <argsstring>(tstack1,(512+CONFIG_TEST_EXTRA_STACK_SIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>tstack1</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACK_SIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="15" column="1" declfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" declline="15" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1a3cfd18bc41eb889b92dfa6dc3c2dd452" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_DEFINE</definition>
        <argsstring>(tstack2,(512+CONFIG_TEST_EXTRA_STACK_SIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>tstack2</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACK_SIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="16" column="1" declfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" declline="16" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1ad395f60a593718c942ab031440bd065c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void put_msgq</definition>
        <argsstring>(struct k_msgq *pmsgq)</argsstring>
        <name>put_msgq</name>
        <param>
          <type>struct <ref refid="structk__msgq" kindref="compound">k_msgq</ref> *</type>
          <declname>pmsgq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: Check if k_msgq_peek reads msgq in FIFO manner. Everytime msg is enqueued, msg read should always be the first message</para>
<para>TESTPOINT: msgq free get</para>
<para>TESTPOINT: msgq used get</para>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="25" column="13" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="25" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1ae80f7e6bfaf591ebe15961d726fec8e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void get_msgq</definition>
        <argsstring>(struct k_msgq *pmsgq)</argsstring>
        <name>get_msgq</name>
        <param>
          <type>struct <ref refid="structk__msgq" kindref="compound">k_msgq</ref> *</type>
          <declname>pmsgq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: Check if msg read is the msg deleted</para>
<para>TESTPOINT: msgq free get</para>
<para>TESTPOINT: msgq used get</para>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="50" column="13" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="50" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1a15b6fef990a72bfc89613e1fb8e28fdf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void purge_msgq</definition>
        <argsstring>(struct k_msgq *pmsgq)</argsstring>
        <name>purge_msgq</name>
        <param>
          <type>struct <ref refid="structk__msgq" kindref="compound">k_msgq</ref> *</type>
          <declname>pmsgq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="72" column="13" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="72" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1a6bff658a24f2c474ba5885b1596be10b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tisr_entry</definition>
        <argsstring>(const void *p)</argsstring>
        <name>tisr_entry</name>
        <param>
          <type>const void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="82" column="13" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1ac8d72017cdde7fad33f88bae68426254" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void thread_entry</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>thread_entry</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="87" column="13" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1aa9869a9be91f124c03e5f04b7d35151b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void msgq_thread</definition>
        <argsstring>(struct k_msgq *pmsgq)</argsstring>
        <name>msgq_thread</name>
        <param>
          <type>struct <ref refid="structk__msgq" kindref="compound">k_msgq</ref> *</type>
          <declname>pmsgq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: thread-thread data passing via message queue</para>
<para>TESTPOINT: msgq purge</para>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="93" column="13" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="93" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1ab8da513d2949ba2970feb0a93add5776" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void thread_entry_overflow</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>thread_entry_overflow</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="108" column="13" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="108" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1a24f1455d54f40fa39264d27c8e3d3596" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void msgq_thread_overflow</definition>
        <argsstring>(struct k_msgq *pmsgq)</argsstring>
        <name>msgq_thread_overflow</name>
        <param>
          <type>struct <ref refid="structk__msgq" kindref="compound">k_msgq</ref> *</type>
          <declname>pmsgq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: thread-thread data passing via message queue</para>
<para>TESTPOINT: msgq purge</para>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="125" column="13" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="125" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1acb77759ce70b232c6da623bc86c9e34c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void msgq_isr</definition>
        <argsstring>(struct k_msgq *pmsgq)</argsstring>
        <name>msgq_isr</name>
        <param>
          <type>struct <ref refid="structk__msgq" kindref="compound">k_msgq</ref> *</type>
          <declname>pmsgq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: thread-isr data passing via message queue</para>
<para>TESTPOINT: msgq purge</para>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="150" column="13" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="150" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1af1c2f3e8a2b74389ba29121101971820" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void thread_entry_get_data</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>thread_entry_get_data</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="160" column="13" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="160" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1a3f86fa3238300fc673f136f7d900ac00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pend_thread_entry</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>pend_thread_entry</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="172" column="13" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="172" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1a5d8ae3cf36094aa2b49647eac05af350" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void msgq_thread_data_passing</definition>
        <argsstring>(struct k_msgq *pmsgq)</argsstring>
        <name>msgq_thread_data_passing</name>
        <param>
          <type>struct <ref refid="structk__msgq" kindref="compound">k_msgq</ref> *</type>
          <declname>pmsgq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: msgq purge</para>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="180" column="13" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="180" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1a65252936af764835d7d257b1a0855ebd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void get_empty_entry</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>get_empty_entry</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="201" column="13" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="201" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="test__msgq__contexts_8c_1a1bb7d3c4b1781cb612b9752202dbd7dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void put_full_entry</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>put_full_entry</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="223" column="13" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="223" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__message__queue__tests_1ga42efc5fb0df3f2805445d5b5e9870b13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_msgq_thread</definition>
        <argsstring>(void)</argsstring>
        <name>test_msgq_thread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test thread to thread data passing via message queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__msgq__apis_1ga54a5cdcaea2236c383ace433fedc0d39" kindref="member">k_msgq_init()</ref>, <ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get()</ref>, <ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put()</ref>, <ref refid="group__msgq__apis_1gaa18875887773195ae44b7fe0972ee760" kindref="member">k_msgq_purge()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: init via k_msgq_init</para>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="253" column="6" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="253" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__message__queue__tests_1ga63c10397572d7e934301726e72e41958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_msgq_thread_overflow</definition>
        <argsstring>(void)</argsstring>
        <name>test_msgq_thread_overflow</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test thread to thread data passing via message queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__msgq__apis_1ga54a5cdcaea2236c383ace433fedc0d39" kindref="member">k_msgq_init()</ref>, <ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get()</ref>, <ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put()</ref>, <ref refid="group__msgq__apis_1gaa18875887773195ae44b7fe0972ee760" kindref="member">k_msgq_purge()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: init via k_msgq_init</para>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="270" column="6" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="270" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__message__queue__tests_1gaaddd5714772c3a093c8cf7c1d12c8d76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_msgq_user_thread</definition>
        <argsstring>(void)</argsstring>
        <name>test_msgq_user_thread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test user thread to kernel thread data passing via message queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__msgq__apis_1gabe7305b8f442ebdc147dbbc6e8cf92fc" kindref="member">k_msgq_alloc_init()</ref>, <ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get()</ref>, <ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put()</ref>, <ref refid="group__msgq__apis_1gaa18875887773195ae44b7fe0972ee760" kindref="member">k_msgq_purge()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="295" column="6" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="295" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__message__queue__tests_1ga8da2a26357255c77cf76c894a422c7ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_msgq_user_thread_overflow</definition>
        <argsstring>(void)</argsstring>
        <name>test_msgq_user_thread_overflow</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test thread to thread data passing via message queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__msgq__apis_1gabe7305b8f442ebdc147dbbc6e8cf92fc" kindref="member">k_msgq_alloc_init()</ref>, <ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get()</ref>, <ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put()</ref>, <ref refid="group__msgq__apis_1gaa18875887773195ae44b7fe0972ee760" kindref="member">k_msgq_purge()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="313" column="6" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="313" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__message__queue__tests_1ga5268c62bf6d1869b6fb30b311d1bd689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_msgq_isr</definition>
        <argsstring>(void)</argsstring>
        <name>test_msgq_isr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test thread to isr data passing via message queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__msgq__apis_1ga54a5cdcaea2236c383ace433fedc0d39" kindref="member">k_msgq_init()</ref>, <ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get()</ref>, <ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put()</ref>, <ref refid="group__msgq__apis_1gaa18875887773195ae44b7fe0972ee760" kindref="member">k_msgq_purge()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: init via k_msgq_init</para>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="332" column="6" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="332" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__message__queue__tests_1ga802ec41d9152d232829510eb75d8584b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_msgq_pend_thread</definition>
        <argsstring>(void)</argsstring>
        <name>test_msgq_pend_thread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test pending writer in msgq. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__msgq__apis_1ga54a5cdcaea2236c383ace433fedc0d39" kindref="member">k_msgq_init()</ref>, <ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get()</ref>, <ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put()</ref>, <ref refid="group__msgq__apis_1gaa18875887773195ae44b7fe0972ee760" kindref="member">k_msgq_purge()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="347" column="6" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="347" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__message__queue__tests_1ga086d7eb1ba6cd93aff16730ac36a1424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_msgq_alloc</definition>
        <argsstring>(void)</argsstring>
        <name>test_msgq_alloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__msgq__apis_1gabe7305b8f442ebdc147dbbc6e8cf92fc" kindref="member">k_msgq_alloc_init()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Initialization and buffer allocation for msgq from resource pool with various parameters <simplesect kind="see"><para><ref refid="group__msgq__apis_1gabe7305b8f442ebdc147dbbc6e8cf92fc" kindref="member">k_msgq_alloc_init()</ref>, <ref refid="group__msgq__apis_1gafda4399aa9b8f1e44bdf752e00ea787b" kindref="member">k_msgq_cleanup()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Requesting buffer allocation from the test pool.</para>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="364" column="6" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="364" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__message__queue__tests_1ga64eb83f3c48d8e8d88fa495ec60d0cab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_msgq_empty</definition>
        <argsstring>(void)</argsstring>
        <name>test_msgq_empty</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get message from an empty queue. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>A thread get message from an empty message queue will get a -ENOMSG if timeout is set to K_NO_WAIT</para>
</listitem><listitem><para>A thread get message from an empty message queue will be blocked if timeout is set to a positive value or K_FOREVER</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="393" column="6" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="393" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__message__queue__tests_1ga7bfd8eabd6484875b33ce30da106b227" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_msgq_full</definition>
        <argsstring>(void)</argsstring>
        <name>test_msgq_full</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Put message to a full queue. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>A thread put message to a full message queue will get a -ENOMSG if timeout is set to K_NO_WAIT</para>
</listitem><listitem><para>A thread put message to a full message queue will be blocked if timeout is set to a positive value or K_FOREVER</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" line="433" column="6" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="433" bodyend="452"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="test__msgq_8h" kindref="compound">test_msgq.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="test__msgq__contexts_8c_1aadb43cdaac5af3d7bef89b27dfd9e84d" kindref="member">K_MSGQ_DEFINE</ref>(<ref refid="msgq_2msgq__api_2src_2main_8c_1a591a6bafebdc3c3e3f9d6f35f679ce88" kindref="member">kmsgq</ref>,<sp/><ref refid="test__msgq_8h_1ad4d025ecf1bdbf8b244ca688df8e478d" kindref="member">MSG_SIZE</ref>,<sp/><ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="test__msgq__contexts_8c_1aadb43cdaac5af3d7bef89b27dfd9e84d" kindref="member">K_MSGQ_DEFINE</ref>(kmsgq_test_alloc,<sp/><ref refid="test__msgq_8h_1ad4d025ecf1bdbf8b244ca688df8e478d" kindref="member">MSG_SIZE</ref>,<sp/><ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/><ref refid="test__msgq__contexts_8c_1a5c4ebc803e1cc8bb3827444dc64e2c47" kindref="member">msgq</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/><ref refid="test__msgq__contexts_8c_1ad1436c4a973bf196dd09ec5d20a0fc6d" kindref="member">msgq1</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="test__msgq__contexts_8c_1a3e6b65a6d59086025e05164fc2c45504" kindref="member">K_THREAD_STACK_DEFINE</ref>(<ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="atomic_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="test__msgq__contexts_8c_1a3e6b65a6d59086025e05164fc2c45504" kindref="member">K_THREAD_STACK_DEFINE</ref>(tstack1,<sp/><ref refid="atomic_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="test__msgq__contexts_8c_1a3e6b65a6d59086025e05164fc2c45504" kindref="member">K_THREAD_STACK_DEFINE</ref>(tstack2,<sp/><ref refid="atomic_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="test__msgq__contexts_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="test__msgq__contexts_8c_1a82c3f4a9aaaf6ca8f1ca77cc6666f892" kindref="member">tdata1</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="test__msgq__contexts_8c_1a0254f78e372a9cb818cac949ef36f349" kindref="member">tdata2</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__ztest__test__deprecated_1gac3de5965061b1164a8033712c9094e23" kindref="member">ZTEST_BMEM</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__aligned(4)<sp/><ref refid="test__msgq__contexts_8c_1a07a69c8fec1db337fd7df21b5b436747" kindref="member">tbuffer</ref>[<ref refid="test__msgq_8h_1ad4d025ecf1bdbf8b244ca688df8e478d" kindref="member">MSG_SIZE</ref><sp/>*<sp/><ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref>];</highlight></codeline>
<codeline lineno="21"><highlight class="normal">static<sp/><ref refid="group__ztest__test__deprecated_1ga2c7d0aa85e7f320d582395c5ded90133" kindref="member">ZTEST_DMEM</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__aligned(4)<sp/><ref refid="test__msgq__contexts_8c_1a40763c61bb321b7c9057a3fe9d40597a" kindref="member">tbuffer1</ref>[<ref refid="test__msgq_8h_1ad4d025ecf1bdbf8b244ca688df8e478d" kindref="member">MSG_SIZE</ref>];</highlight></codeline>
<codeline lineno="22"><highlight class="normal">static<sp/><ref refid="group__ztest__test__deprecated_1ga2c7d0aa85e7f320d582395c5ded90133" kindref="member">ZTEST_DMEM</ref><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="test__msgq__contexts_8c_1aef9fe961c39cb8538209da5a958d8c9f" kindref="member">data</ref>[<ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref>]<sp/>=<sp/>{<sp/><ref refid="test__msgq_8h_1adaa94b0db18ca6e3f9b9353a5783b6a0" kindref="member">MSG0</ref>,<sp/><ref refid="test__msgq_8h_1a53f274963f4ee4586f05278c32a1fd07" kindref="member">MSG1</ref><sp/>};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/><ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__msgq__contexts_8c_1ad395f60a593718c942ab031440bd065c" kindref="member">put_msgq</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/>*pmsgq)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>read_data;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put</ref>(pmsgq,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__msgq__contexts_8c_1aef9fe961c39cb8538209da5a958d8c9f" kindref="member">data</ref>[i],<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__msgq__apis_1ga14f543472f2f63cfde0bdfa87b95c915" kindref="member">k_msgq_peek</ref>(pmsgq,<sp/>&amp;read_data),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(read_data,<sp/><ref refid="test__msgq__contexts_8c_1aef9fe961c39cb8538209da5a958d8c9f" kindref="member">data</ref>[0],<sp/>NULL);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__msgq__apis_1ga7d154beb4f9c6227eddbef26d406ca24" kindref="member">k_msgq_num_free_get</ref>(pmsgq),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref><sp/>-<sp/>1<sp/>-<sp/>i,<sp/>NULL);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__msgq__apis_1ga458793a89f1d9f762bda3422918a9faa" kindref="member">k_msgq_num_used_get</ref>(pmsgq),<sp/>i<sp/>+<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__msgq__contexts_8c_1ae80f7e6bfaf591ebe15961d726fec8e5" kindref="member">get_msgq</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/>*pmsgq)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>rx_data,<sp/>read_data;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__msgq__apis_1ga14f543472f2f63cfde0bdfa87b95c915" kindref="member">k_msgq_peek</ref>(pmsgq,<sp/>&amp;read_data),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get</ref>(pmsgq,<sp/>&amp;rx_data,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rx_data,<sp/><ref refid="test__msgq__contexts_8c_1aef9fe961c39cb8538209da5a958d8c9f" kindref="member">data</ref>[i],<sp/>NULL);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(read_data,<sp/>rx_data,<sp/>NULL);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__msgq__apis_1ga7d154beb4f9c6227eddbef26d406ca24" kindref="member">k_msgq_num_free_get</ref>(pmsgq),<sp/>i<sp/>+<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__msgq__apis_1ga458793a89f1d9f762bda3422918a9faa" kindref="member">k_msgq_num_used_get</ref>(pmsgq),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref><sp/>-<sp/>1<sp/>-<sp/>i,<sp/>NULL);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__msgq__contexts_8c_1a15b6fef990a72bfc89613e1fb8e28fdf" kindref="member">purge_msgq</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/>*pmsgq)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>read_data;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__msgq__apis_1gaa18875887773195ae44b7fe0972ee760" kindref="member">k_msgq_purge</ref>(pmsgq);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__msgq__apis_1ga7d154beb4f9c6227eddbef26d406ca24" kindref="member">k_msgq_num_free_get</ref>(pmsgq),<sp/><ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__msgq__apis_1ga458793a89f1d9f762bda3422918a9faa" kindref="member">k_msgq_num_used_get</ref>(pmsgq),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__msgq__apis_1ga14f543472f2f63cfde0bdfa87b95c915" kindref="member">k_msgq_peek</ref>(pmsgq,<sp/>&amp;read_data),<sp/>-<ref refid="group__system__errno_1gae40596feaa3f66f5440b485bf7c1c2d1" kindref="member">ENOMSG</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__msgq__contexts_8c_1a6bff658a24f2c474ba5885b1596be10b" kindref="member">tisr_entry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="kobject_8c_1a5bf2789125fcfa98cff775cb82fbd3c9" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1ad395f60a593718c942ab031440bd065c" kindref="member">put_msgq</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/>*)<ref refid="kobject_8c_1a5bf2789125fcfa98cff775cb82fbd3c9" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__msgq__contexts_8c_1ac8d72017cdde7fad33f88bae68426254" kindref="member">thread_entry</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1ae80f7e6bfaf591ebe15961d726fec8e5" kindref="member">get_msgq</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/>*)p1);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__msgq__contexts_8c_1aa9869a9be91f124c03e5f04b7d35151b" kindref="member">msgq_thread</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/>*pmsgq)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1ad395f60a593718c942ab031440bd065c" kindref="member">put_msgq</ref>(pmsgq);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__msgq__contexts_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="atomic_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1ac8d72017cdde7fad33f88bae68426254" kindref="member">thread_entry</ref>,<sp/>pmsgq,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(0),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga1f44bb0307bea7a97227764ecd7bf963" kindref="member">k_thread_abort</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1a15b6fef990a72bfc89613e1fb8e28fdf" kindref="member">purge_msgq</ref>(pmsgq);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__msgq__contexts_8c_1ab8da513d2949ba2970feb0a93add5776" kindref="member">thread_entry_overflow</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>rx_buf[<ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref>];</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get</ref>(p1,<sp/>&amp;rx_buf[0],<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get</ref>(p1,<sp/>&amp;rx_buf[1],<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__msgq__contexts_8c_1a24f1455d54f40fa39264d27c8e3d3596" kindref="member">msgq_thread_overflow</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/>*pmsgq)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put</ref>(pmsgq,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__msgq__contexts_8c_1aef9fe961c39cb8538209da5a958d8c9f" kindref="member">data</ref>[0],<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__msgq__contexts_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="atomic_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1ab8da513d2949ba2970feb0a93add5776" kindref="member">thread_entry_overflow</ref>,<sp/>pmsgq,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(0),</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put</ref>(pmsgq,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__msgq__contexts_8c_1aef9fe961c39cb8538209da5a958d8c9f" kindref="member">data</ref>[1],<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga1f44bb0307bea7a97227764ecd7bf963" kindref="member">k_thread_abort</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__msgq__apis_1gaa18875887773195ae44b7fe0972ee760" kindref="member">k_msgq_purge</ref>(pmsgq);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__msgq__contexts_8c_1acb77759ce70b232c6da623bc86c9e34c" kindref="member">msgq_isr</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/>*pmsgq)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="irq__offload_8h_1a429859dd7ac3d88a4b7ae858835847ce" kindref="member">irq_offload</ref>(<ref refid="test__msgq__contexts_8c_1a6bff658a24f2c474ba5885b1596be10b" kindref="member">tisr_entry</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pmsgq);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1ae80f7e6bfaf591ebe15961d726fec8e5" kindref="member">get_msgq</ref>(pmsgq);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1a15b6fef990a72bfc89613e1fb8e28fdf" kindref="member">purge_msgq</ref>(pmsgq);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__msgq__contexts_8c_1af1c2f3e8a2b74389ba29121101971820" kindref="member">thread_entry_get_data</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>rx_buf[<ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref>];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get</ref>(p1,<sp/>&amp;rx_buf[i],<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__msgq__contexts_8c_1a3f86fa3238300fc673f136f7d900ac00" kindref="member">pend_thread_entry</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put</ref>(p1,<sp/>&amp;<ref refid="test__msgq__contexts_8c_1aef9fe961c39cb8538209da5a958d8c9f" kindref="member">data</ref>[1],<sp/><ref refid="threads_2thread__apis_2src_2main_8c_1a92f68ea047b86f3b3f0bf2cd53086fc7aad9dee005a3d0f9137b2ac1e0869f89b" kindref="member">TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__msgq__contexts_8c_1a5d8ae3cf36094aa2b49647eac05af350" kindref="member">msgq_thread_data_passing</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/>*pmsgq)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put</ref>(pmsgq,<sp/>&amp;<ref refid="test__msgq__contexts_8c_1aef9fe961c39cb8538209da5a958d8c9f" kindref="member">data</ref>[0],<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a0254f78e372a9cb818cac949ef36f349" kindref="member">tdata2</ref>,<sp/>tstack2,<sp/><ref refid="atomic_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1a3f86fa3238300fc673f136f7d900ac00" kindref="member">pend_thread_entry</ref>,<sp/>pmsgq,<sp/>NULL,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(0),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="mbox_2mbox__usage_2src_2main_8c_1a86f489002d0678cfaa4ede41a18c7785" kindref="member">tid1</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a82c3f4a9aaaf6ca8f1ca77cc6666f892" kindref="member">tdata1</ref>,<sp/>tstack1,<sp/><ref refid="atomic_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1af1c2f3e8a2b74389ba29121101971820" kindref="member">thread_entry_get_data</ref>,<sp/>pmsgq,<sp/>NULL,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(1),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga1f44bb0307bea7a97227764ecd7bf963" kindref="member">k_thread_abort</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga1f44bb0307bea7a97227764ecd7bf963" kindref="member">k_thread_abort</ref>(<ref refid="mbox_2mbox__usage_2src_2main_8c_1a86f489002d0678cfaa4ede41a18c7785" kindref="member">tid1</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__msgq__apis_1gaa18875887773195ae44b7fe0972ee760" kindref="member">k_msgq_purge</ref>(pmsgq);</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__msgq__contexts_8c_1a65252936af764835d7d257b1a0855ebd" kindref="member">get_empty_entry</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>rx_buf[<ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref>];</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>there<sp/>is<sp/>no<sp/>message<sp/>in<sp/>the<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1ga14f543472f2f63cfde0bdfa87b95c915" kindref="member">k_msgq_peek</ref>(p1,<sp/>rx_buf);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>-<ref refid="group__system__errno_1gae40596feaa3f66f5440b485bf7c1c2d1" kindref="member">ENOMSG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Peek<sp/>message<sp/>from<sp/>empty<sp/>queue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get</ref>(p1,<sp/>rx_buf,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>-<ref refid="group__system__errno_1gae40596feaa3f66f5440b485bf7c1c2d1" kindref="member">ENOMSG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>message<sp/>from<sp/>empty<sp/>queue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>blocked<sp/>to<sp/>TIMEOUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get</ref>(p1,<sp/>rx_buf,<sp/><ref refid="threads_2thread__apis_2src_2main_8c_1a92f68ea047b86f3b3f0bf2cd53086fc7aad9dee005a3d0f9137b2ac1e0869f89b" kindref="member">TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>message<sp/>from<sp/>empty<sp/>queue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>blocked<sp/>forever<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1gae67f2ced2df1f9c290ae15dab9097cb7" kindref="member">k_msgq_get</ref>(p1,<sp/>rx_buf,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__msgq__contexts_8c_1a1bb7d3c4b1781cb612b9752202dbd7dd" kindref="member">put_full_entry</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>the<sp/>queue<sp/>is<sp/>full<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__msgq__apis_1ga7d154beb4f9c6227eddbef26d406ca24" kindref="member">k_msgq_num_free_get</ref>(p1),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__msgq__apis_1ga458793a89f1d9f762bda3422918a9faa" kindref="member">k_msgq_num_used_get</ref>(p1),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put</ref>(p1,<sp/>&amp;<ref refid="test__msgq__contexts_8c_1aef9fe961c39cb8538209da5a958d8c9f" kindref="member">data</ref>[1],<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>-<ref refid="group__system__errno_1gae40596feaa3f66f5440b485bf7c1c2d1" kindref="member">ENOMSG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Put<sp/>message<sp/>to<sp/>full<sp/>queue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>blocked<sp/>to<sp/>TIMEOUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put</ref>(p1,<sp/>&amp;<ref refid="test__msgq__contexts_8c_1aef9fe961c39cb8538209da5a958d8c9f" kindref="member">data</ref>[1],<sp/><ref refid="threads_2thread__apis_2src_2main_8c_1a92f68ea047b86f3b3f0bf2cd53086fc7aad9dee005a3d0f9137b2ac1e0869f89b" kindref="member">TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Put<sp/>message<sp/>to<sp/>full<sp/>queue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>blocked<sp/>forever<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put</ref>(p1,<sp/>&amp;<ref refid="test__msgq__contexts_8c_1aef9fe961c39cb8538209da5a958d8c9f" kindref="member">data</ref>[1],<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__message__queue__tests_1ga42efc5fb0df3f2805445d5b5e9870b13" kindref="member">test_msgq_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__msgq__apis_1ga54a5cdcaea2236c383ace433fedc0d39" kindref="member">k_msgq_init</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a5c4ebc803e1cc8bb3827444dc64e2c47" kindref="member">msgq</ref>,<sp/><ref refid="test__msgq__contexts_8c_1a07a69c8fec1db337fd7df21b5b436747" kindref="member">tbuffer</ref>,<sp/><ref refid="test__msgq_8h_1ad4d025ecf1bdbf8b244ca688df8e478d" kindref="member">MSG_SIZE</ref>,<sp/><ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1aa9869a9be91f124c03e5f04b7d35151b" kindref="member">msgq_thread</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a5c4ebc803e1cc8bb3827444dc64e2c47" kindref="member">msgq</ref>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1aa9869a9be91f124c03e5f04b7d35151b" kindref="member">msgq_thread</ref>(&amp;<ref refid="msgq_2msgq__api_2src_2main_8c_1a591a6bafebdc3c3e3f9d6f35f679ce88" kindref="member">kmsgq</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__message__queue__tests_1ga63c10397572d7e934301726e72e41958" kindref="member">test_msgq_thread_overflow</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__msgq__apis_1ga54a5cdcaea2236c383ace433fedc0d39" kindref="member">k_msgq_init</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a5c4ebc803e1cc8bb3827444dc64e2c47" kindref="member">msgq</ref>,<sp/><ref refid="test__msgq__contexts_8c_1a07a69c8fec1db337fd7df21b5b436747" kindref="member">tbuffer</ref>,<sp/><ref refid="test__msgq_8h_1ad4d025ecf1bdbf8b244ca688df8e478d" kindref="member">MSG_SIZE</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a5c4ebc803e1cc8bb3827444dc64e2c47" kindref="member">msgq</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__msgq__contexts_8c_1aef9fe961c39cb8538209da5a958d8c9f" kindref="member">data</ref>[0],<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1a24f1455d54f40fa39264d27c8e3d3596" kindref="member">msgq_thread_overflow</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a5c4ebc803e1cc8bb3827444dc64e2c47" kindref="member">msgq</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1a24f1455d54f40fa39264d27c8e3d3596" kindref="member">msgq_thread_overflow</ref>(&amp;<ref refid="msgq_2msgq__api_2src_2main_8c_1a591a6bafebdc3c3e3f9d6f35f679ce88" kindref="member">kmsgq</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*verify<sp/>the<sp/>write<sp/>pointer<sp/>not<sp/>reset<sp/>to<sp/>the<sp/>buffer<sp/>start*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="test__msgq__contexts_8c_1a5c4ebc803e1cc8bb3827444dc64e2c47" kindref="member">msgq</ref>.<ref refid="structk__msgq_1aacf9b7b9f6e26e402f3752fc56834f23" kindref="member">write_ptr</ref><sp/>==<sp/><ref refid="test__msgq__contexts_8c_1a5c4ebc803e1cc8bb3827444dc64e2c47" kindref="member">msgq</ref>.<ref refid="structk__msgq_1aca77f1cf833d3aa27ae65004b446bdd2" kindref="member">buffer_start</ref>,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>add<sp/>operation<sp/>of<sp/>message<sp/>queue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__message__queue__tests_1gaaddd5714772c3a093c8cf7c1d12c8d76" kindref="member">test_msgq_user_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/>*<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref><sp/>=<sp/>k_object_alloc(K_OBJ_MSGQ);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gad78332e6bd37812e56ccc4af601542e4" kindref="member">zassert_not_null</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/></highlight><highlight class="stringliteral">&quot;couldn&apos;t<sp/>alloc<sp/>message<sp/>queue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__msgq__apis_1gabe7305b8f442ebdc147dbbc6e8cf92fc" kindref="member">k_msgq_alloc_init</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/><ref refid="test__msgq_8h_1ad4d025ecf1bdbf8b244ca688df8e478d" kindref="member">MSG_SIZE</ref>,<sp/><ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1aa9869a9be91f124c03e5f04b7d35151b" kindref="member">msgq_thread</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__message__queue__tests_1ga8da2a26357255c77cf76c894a422c7ab" kindref="member">test_msgq_user_thread_overflow</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/>*<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref><sp/>=<sp/>k_object_alloc(K_OBJ_MSGQ);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gad78332e6bd37812e56ccc4af601542e4" kindref="member">zassert_not_null</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/></highlight><highlight class="stringliteral">&quot;couldn&apos;t<sp/>alloc<sp/>message<sp/>queue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__msgq__apis_1gabe7305b8f442ebdc147dbbc6e8cf92fc" kindref="member">k_msgq_alloc_init</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/><ref refid="test__msgq_8h_1ad4d025ecf1bdbf8b244ca688df8e478d" kindref="member">MSG_SIZE</ref>,<sp/>1),<sp/>NULL);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1a24f1455d54f40fa39264d27c8e3d3596" kindref="member">msgq_thread_overflow</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_USERSPACE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__message__queue__tests_1ga5268c62bf6d1869b6fb30b311d1bd689" kindref="member">test_msgq_isr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__msgq" kindref="compound">k_msgq</ref><sp/>stack_msgq;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__msgq__apis_1ga54a5cdcaea2236c383ace433fedc0d39" kindref="member">k_msgq_init</ref>(&amp;stack_msgq,<sp/><ref refid="test__msgq__contexts_8c_1a07a69c8fec1db337fd7df21b5b436747" kindref="member">tbuffer</ref>,<sp/><ref refid="test__msgq_8h_1ad4d025ecf1bdbf8b244ca688df8e478d" kindref="member">MSG_SIZE</ref>,<sp/><ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1acb77759ce70b232c6da623bc86c9e34c" kindref="member">msgq_isr</ref>(&amp;stack_msgq);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1acb77759ce70b232c6da623bc86c9e34c" kindref="member">msgq_isr</ref>(&amp;<ref refid="msgq_2msgq__api_2src_2main_8c_1a591a6bafebdc3c3e3f9d6f35f679ce88" kindref="member">kmsgq</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__message__queue__tests_1ga802ec41d9152d232829510eb75d8584b" kindref="member">test_msgq_pend_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__msgq__apis_1ga54a5cdcaea2236c383ace433fedc0d39" kindref="member">k_msgq_init</ref>(&amp;<ref refid="test__msgq__contexts_8c_1ad1436c4a973bf196dd09ec5d20a0fc6d" kindref="member">msgq1</ref>,<sp/><ref refid="test__msgq__contexts_8c_1a40763c61bb321b7c9057a3fe9d40597a" kindref="member">tbuffer1</ref>,<sp/><ref refid="test__msgq_8h_1ad4d025ecf1bdbf8b244ca688df8e478d" kindref="member">MSG_SIZE</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1a5d8ae3cf36094aa2b49647eac05af350" kindref="member">msgq_thread_data_passing</ref>(&amp;<ref refid="test__msgq__contexts_8c_1ad1436c4a973bf196dd09ec5d20a0fc6d" kindref="member">msgq1</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__message__queue__tests_1ga086d7eb1ba6cd93aff16730ac36a1424" kindref="member">test_msgq_alloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__msgq__apis_1gabe7305b8f442ebdc147dbbc6e8cf92fc" kindref="member">k_msgq_alloc_init</ref>(&amp;kmsgq_test_alloc,<sp/><ref refid="test__msgq_8h_1ad4d025ecf1bdbf8b244ca688df8e478d" kindref="member">MSG_SIZE</ref>,<sp/><ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1acb77759ce70b232c6da623bc86c9e34c" kindref="member">msgq_isr</ref>(&amp;kmsgq_test_alloc);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__msgq__apis_1gafda4399aa9b8f1e44bdf752e00ea787b" kindref="member">k_msgq_cleanup</ref>(&amp;kmsgq_test_alloc);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1gabe7305b8f442ebdc147dbbc6e8cf92fc" kindref="member">k_msgq_alloc_init</ref>(&amp;kmsgq_test_alloc,<sp/><ref refid="test__msgq_8h_1ad4d025ecf1bdbf8b244ca688df8e478d" kindref="member">MSG_SIZE</ref><sp/>*<sp/>128,<sp/><ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>==<sp/>-<ref refid="group__system__errno_1ga6a05c923dad0c1208043e9c20a58c8e5" kindref="member">ENOMEM</ref>,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;resource<sp/>pool<sp/>is<sp/>smaller<sp/>then<sp/>requested<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Requesting<sp/>a<sp/>huge<sp/>size<sp/>of<sp/>MSG<sp/>to<sp/>validate<sp/>overflow*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1gabe7305b8f442ebdc147dbbc6e8cf92fc" kindref="member">k_msgq_alloc_init</ref>(&amp;kmsgq_test_alloc,<sp/><ref refid="test__msgq_8h_1a96959bca91f13bcb146b62e424c310f6" kindref="member">OVERFLOW_SIZE_MSG</ref>,<sp/><ref refid="test__msgq_8h_1ae4dd93c45469813e45b1f56d5f6c15ba" kindref="member">MSGQ_LEN</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>==<sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>request&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__message__queue__tests_1ga64eb83f3c48d8e8d88fa495ec60d0cab" kindref="member">test_msgq_empty</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pri<sp/>=<sp/><ref refid="group__thread__apis_1ga3a46ed8ad2c3b12416fafe11325f82b3" kindref="member">k_thread_priority_get</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>())<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__msgq__apis_1ga54a5cdcaea2236c383ace433fedc0d39" kindref="member">k_msgq_init</ref>(&amp;<ref refid="test__msgq__contexts_8c_1ad1436c4a973bf196dd09ec5d20a0fc6d" kindref="member">msgq1</ref>,<sp/><ref refid="test__msgq__contexts_8c_1a40763c61bb321b7c9057a3fe9d40597a" kindref="member">tbuffer1</ref>,<sp/><ref refid="test__msgq_8h_1ad4d025ecf1bdbf8b244ca688df8e478d" kindref="member">MSG_SIZE</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a0254f78e372a9cb818cac949ef36f349" kindref="member">tdata2</ref>,<sp/>tstack2,<sp/><ref refid="atomic_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1a65252936af764835d7d257b1a0855ebd" kindref="member">get_empty_entry</ref>,<sp/>&amp;<ref refid="test__msgq__contexts_8c_1ad1436c4a973bf196dd09ec5d20a0fc6d" kindref="member">msgq1</ref>,<sp/>NULL,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>pri,<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>that<sp/>getting<sp/>thread<sp/>is<sp/>being<sp/>blocked<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>-&gt;<ref refid="structk__thread_1a09a988f143ab5c4df887894920ff9df8" kindref="member">base</ref>.thread_state,<sp/>_THREAD_PENDING,<sp/>NULL);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>since<sp/>there<sp/>is<sp/>a<sp/>thread<sp/>is<sp/>waiting<sp/>for<sp/>message,<sp/>this<sp/>queue</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>can&apos;t<sp/>be<sp/>cleanup</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1gafda4399aa9b8f1e44bdf752e00ea787b" kindref="member">k_msgq_cleanup</ref>(&amp;<ref refid="test__msgq__contexts_8c_1ad1436c4a973bf196dd09ec5d20a0fc6d" kindref="member">msgq1</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>-<ref refid="group__system__errno_1ga8368025077a0385849d6817b2007c095" kindref="member">EBUSY</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>a<sp/>message<sp/>to<sp/>wake<sp/>that<sp/>getting<sp/>thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put</ref>(&amp;<ref refid="test__msgq__contexts_8c_1ad1436c4a973bf196dd09ec5d20a0fc6d" kindref="member">msgq1</ref>,<sp/>&amp;<ref refid="test__msgq__contexts_8c_1aef9fe961c39cb8538209da5a958d8c9f" kindref="member">data</ref>[0],<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga1f44bb0307bea7a97227764ecd7bf963" kindref="member">k_thread_abort</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__message__queue__tests_1ga7bfd8eabd6484875b33ce30da106b227" kindref="member">test_msgq_full</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pri<sp/>=<sp/><ref refid="group__thread__apis_1ga3a46ed8ad2c3b12416fafe11325f82b3" kindref="member">k_thread_priority_get</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>())<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__msgq__apis_1ga54a5cdcaea2236c383ace433fedc0d39" kindref="member">k_msgq_init</ref>(&amp;<ref refid="test__msgq__contexts_8c_1ad1436c4a973bf196dd09ec5d20a0fc6d" kindref="member">msgq1</ref>,<sp/><ref refid="test__msgq__contexts_8c_1a40763c61bb321b7c9057a3fe9d40597a" kindref="member">tbuffer1</ref>,<sp/><ref refid="test__msgq_8h_1ad4d025ecf1bdbf8b244ca688df8e478d" kindref="member">MSG_SIZE</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put</ref>(&amp;<ref refid="test__msgq__contexts_8c_1ad1436c4a973bf196dd09ec5d20a0fc6d" kindref="member">msgq1</ref>,<sp/>&amp;<ref refid="test__msgq__contexts_8c_1aef9fe961c39cb8538209da5a958d8c9f" kindref="member">data</ref>[0],<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a0254f78e372a9cb818cac949ef36f349" kindref="member">tdata2</ref>,<sp/>tstack2,<sp/><ref refid="atomic_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__msgq__contexts_8c_1a1bb7d3c4b1781cb612b9752202dbd7dd" kindref="member">put_full_entry</ref>,<sp/>&amp;<ref refid="test__msgq__contexts_8c_1ad1436c4a973bf196dd09ec5d20a0fc6d" kindref="member">msgq1</ref>,<sp/>NULL,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>pri,<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="test__msgq__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>that<sp/>putting<sp/>thread<sp/>is<sp/>being<sp/>blocked<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>-&gt;<ref refid="structk__thread_1a09a988f143ab5c4df887894920ff9df8" kindref="member">base</ref>.thread_state,<sp/>_THREAD_PENDING,<sp/>NULL);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga1f44bb0307bea7a97227764ecd7bf963" kindref="member">k_thread_abort</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c"/>
  </compounddef>
</doxygen>
