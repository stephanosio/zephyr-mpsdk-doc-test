<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__jwt" kind="group">
    <compoundname>jwt</compoundname>
    <title>JSON Web Token (JWT)</title>
    <innerclass refid="structjwt__builder" prot="public">jwt_builder</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__jwt_1gab10ee40ee3c0b3eea98051c2acbb8a75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jwt_init_builder</definition>
        <argsstring>(struct jwt_builder *builder, char *buffer, size_t buffer_size)</argsstring>
        <name>jwt_init_builder</name>
        <param>
          <type>struct <ref refid="structjwt__builder" kindref="compound">jwt_builder</ref> *</type>
          <declname>builder</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
<para>Initialize the JWT builder. </para>
        </briefdescription>
        <detaileddescription>
<para>Initialize the given JWT builder for the creation of a fresh token. The buffer size should at least be as long as JWT_BUILDER_MAX_SIZE returns.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>builder</parametername>
</parameternamelist>
<parameterdescription>
<para>The builder to initialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to write the token to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of this buffer. The token will be NULL terminated, which needs to be allowed for in this size.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Success </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOSPC</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer is insufficient to initialize </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/data/jwt.h" line="71" column="5" declfile="include/data/jwt.h" declline="71" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__jwt_1ga209dc2bdbaf72b4c9d11be02e0ffe479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jwt_add_payload</definition>
        <argsstring>(struct jwt_builder *builder, int32_t exp, int32_t iat, const char *aud)</argsstring>
        <name>jwt_add_payload</name>
        <param>
          <type>struct <ref refid="structjwt__builder" kindref="compound">jwt_builder</ref> *</type>
          <declname>builder</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>exp</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>iat</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>aud</declname>
        </param>
        <briefdescription>
<para>add JWT primary payload. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/data/jwt.h" line="78" column="5" declfile="include/data/jwt.h" declline="78" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__jwt_1gaa000189c83e9b9113f401cd7d523cefe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jwt_sign</definition>
        <argsstring>(struct jwt_builder *builder, const char *der_key, size_t der_key_len)</argsstring>
        <name>jwt_sign</name>
        <param>
          <type>struct <ref refid="structjwt__builder" kindref="compound">jwt_builder</ref> *</type>
          <declname>builder</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>der_key</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>der_key_len</declname>
        </param>
        <briefdescription>
<para>Sign the JWT token. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/data/jwt.h" line="86" column="5" declfile="include/data/jwt.h" declline="86" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__jwt_1gaab49bf586392b0687aff97a27238fe85" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t jwt_payload_len</definition>
        <argsstring>(struct jwt_builder *builder)</argsstring>
        <name>jwt_payload_len</name>
        <param>
          <type>struct <ref refid="structjwt__builder" kindref="compound">jwt_builder</ref> *</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/data/jwt.h" line="91" column="22" bodyfile="include/data/jwt.h" bodystart="91" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>JSON Web Token (JWT) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
