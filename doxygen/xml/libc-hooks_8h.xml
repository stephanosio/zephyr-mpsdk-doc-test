<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="libc-hooks_8h" kind="file" language="C++">
    <compoundname>libc-hooks.h</compoundname>
    <includes refid="toolchain_8h" local="no">toolchain.h</includes>
    <includes refid="stdio_8h" local="no">stdio.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">syscalls/libc-hooks.h</includes>
    <includedby refid="threads_2tls_2src_2main_8c" local="no">tests/kernel/threads/tls/src/main.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/sys/libc-hooks.h</label>
        <link refid="libc-hooks_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="3">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>syscalls/libc-hooks.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/sys/libc-hooks.h</label>
        <link refid="libc-hooks_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>tests/kernel/threads/tls/src/main.c</label>
        <link refid="threads_2tls_2src_2main_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="libc-hooks_8h_1ac5b3b7e59825b80ba65bb6346ee88e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zephyr_fputc</definition>
        <argsstring>(int c, FILE *stream)</argsstring>
        <name>zephyr_fputc</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="stdio_8h_1ac15bbd02a147d1595cdfb8b2979693d7" kindref="member">FILE</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/libc-hooks.h" line="31" column="6" declfile="include/sys/libc-hooks.h" declline="31" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="libc-hooks_8h_1a62751e82da67a53ff962ce5bbc46ca48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t zephyr_fwrite</definition>
        <argsstring>(const void *ZRESTRICT ptr, size_t size, size_t nitems, FILE *ZRESTRICT stream)</argsstring>
        <name>zephyr_fwrite</name>
        <param>
          <type>const void *<ref refid="common_8h_1a39314fd705c5a9ed45b671ca36f883fd" kindref="member">ZRESTRICT</ref></type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nitems</declname>
        </param>
        <param>
          <type><ref refid="stdio_8h_1ac15bbd02a147d1595cdfb8b2979693d7" kindref="member">FILE</ref> *<ref refid="common_8h_1a39314fd705c5a9ed45b671ca36f883fd" kindref="member">ZRESTRICT</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/libc-hooks.h" line="33" column="9" declfile="include/sys/libc-hooks.h" declline="33" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018,<sp/>Intel<sp/>Corporation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_SYS_LIBC_HOOKS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_SYS_LIBC_HOOKS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="toolchain_8h" kindref="compound">toolchain.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdio_8h" kindref="compound">stdio.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Private<sp/>header<sp/>for<sp/>specifying<sp/>accessory<sp/>functions<sp/>to<sp/>the<sp/>C<sp/>library<sp/>internals</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>that<sp/>need<sp/>to<sp/>call<sp/>into<sp/>the<sp/>kernel<sp/>as<sp/>system<sp/>calls</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NEWLIB_LIBC)<sp/>||<sp/>defined(CONFIG_ARCMWDT_LIBC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>syscall<sp/>generation<sp/>ignores<sp/>preprocessor,<sp/>ensure<sp/>this<sp/>is<sp/>defined<sp/>to<sp/>ensure</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>we<sp/>don&apos;t<sp/>have<sp/>compile<sp/>errors</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zephyr_read_stdin(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbytes);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zephyr_write_stdout(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbytes);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Minimal<sp/>libc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="libc-hooks_8h_1ac5b3b7e59825b80ba65bb6346ee88e3c" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libc-hooks_8h_1ac5b3b7e59825b80ba65bb6346ee88e3c" kindref="member">zephyr_fputc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="printk_8c_1adc08ed1554f35803d229aeaf11216b3f" kindref="member">c</ref>,<sp/><ref refid="stdio_8h_1ac15bbd02a147d1595cdfb8b2979693d7" kindref="member">FILE</ref><sp/>*<sp/>stream);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="libc-hooks_8h_1a62751e82da67a53ff962ce5bbc46ca48" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="libc-hooks_8h_1a62751e82da67a53ff962ce5bbc46ca48" kindref="member">zephyr_fwrite</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="common_8h_1a39314fd705c5a9ed45b671ca36f883fd" kindref="member">ZRESTRICT</ref><sp/><ref refid="printk_8c_1add9af9569af79ec26dd741fb226b38ba" kindref="member">ptr</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nitems,<sp/><ref refid="stdio_8h_1ac15bbd02a147d1595cdfb8b2979693d7" kindref="member">FILE</ref><sp/>*<ref refid="common_8h_1a39314fd705c5a9ed45b671ca36f883fd" kindref="member">ZRESTRICT</ref><sp/>stream);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_NEWLIB_LIBC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NEWLIB_LIBC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>are<sp/>using<sp/>newlib,<sp/>the<sp/>heap<sp/>arena<sp/>is<sp/>in<sp/>one<sp/>of<sp/>two<sp/>areas:</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>If<sp/>we<sp/>have<sp/>an<sp/>MPU<sp/>that<sp/>requires<sp/>power<sp/>of<sp/>two<sp/>alignment,<sp/>the<sp/>heap<sp/>bounds</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>must<sp/>be<sp/>specified<sp/>in<sp/>Kconfig<sp/>via<sp/>CONFIG_NEWLIB_LIBC_ALIGNED_HEAP_SIZE.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>Otherwise,<sp/>the<sp/>heap<sp/>arena<sp/>on<sp/>most<sp/>arches<sp/>starts<sp/>at<sp/>a<sp/>suitably</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>aligned<sp/>base<sp/>addreess<sp/>after<sp/>the<sp/>`_end`<sp/>linker<sp/>symbol,<sp/>through<sp/>to<sp/>the<sp/>end</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>of<sp/>system<sp/>RAM.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(!defined(CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(defined(CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>CONFIG_NEWLIB_LIBC_ALIGNED_HEAP_SIZE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_MALLOC_PARTITION_EXISTS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__mem__partition" kindref="compound">k_mem_partition</ref><sp/>z_malloc_partition;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_MINIMAL_LIBC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Minimal<sp/>libc<sp/>by<sp/>default<sp/>has<sp/>no<sp/>malloc<sp/>arena,<sp/>its<sp/>size<sp/>must<sp/>be<sp/>set<sp/>in</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>Kconfig<sp/>via<sp/>CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_MALLOC_PARTITION_EXISTS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE<sp/>&gt;<sp/>0<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_MINIMAL_LIBC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>Z_MALLOC_PARTITION_EXISTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Memory<sp/>partition<sp/>containing<sp/>the<sp/>libc<sp/>malloc<sp/>arena.<sp/>Configuration<sp/>controls</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>whether<sp/>this<sp/>is<sp/>available,<sp/>and<sp/>an<sp/>arena<sp/>size<sp/>may<sp/>need<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__mem__partition" kindref="compound">k_mem_partition</ref><sp/>z_malloc_partition;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NEWLIB_LIBC)<sp/>||<sp/>defined(CONFIG_STACK_CANARIES)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(CONFIG_NEED_LIBC_MEM_PARTITION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-<sp/>All<sp/>newlib<sp/>globals<sp/>will<sp/>be<sp/>placed<sp/>into<sp/>z_libc_partition.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>-<sp/>Minimal<sp/>C<sp/>library<sp/>globals,<sp/>if<sp/>any,<sp/>will<sp/>be<sp/>placed<sp/>into</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/><sp/><sp/>z_libc_partition.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>-<sp/>Stack<sp/>canary<sp/>globals<sp/>will<sp/>be<sp/>placed<sp/>into<sp/>z_libc_partition<sp/>since</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>is<sp/>not<sp/>worth<sp/>placing<sp/>in<sp/>its<sp/>own<sp/>partition.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>-<sp/>Some<sp/>architectures<sp/>may<sp/>place<sp/>the<sp/>global<sp/>pointer<sp/>to<sp/>the<sp/>thread<sp/>local</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/><sp/><sp/>storage<sp/>in<sp/>z_libc_partition<sp/>since<sp/>it<sp/>is<sp/>not<sp/>worth<sp/>placing<sp/>in<sp/>its</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/><sp/><sp/>own<sp/>partition.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_LIBC_PARTITION_EXISTS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>C<sp/>library<sp/>globals,<sp/>except<sp/>the<sp/>malloc<sp/>arena<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__mem__partition" kindref="compound">k_mem_partition</ref><sp/>z_libc_partition;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_USERSPACE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;syscalls/libc-hooks.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_SYS_LIBC_HOOKS_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/sys/libc-hooks.h"/>
  </compounddef>
</doxygen>
