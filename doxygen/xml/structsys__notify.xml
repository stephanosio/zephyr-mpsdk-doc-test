<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structsys__notify" kind="struct" language="C++" prot="public">
    <compoundname>sys_notify</compoundname>
    <includes refid="notify_8h" local="no">notify.h</includes>
    <innerclass refid="unionsys__notify_1_1method" prot="public">sys_notify::method</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structsys__notify_1a9c74bb70d56f0e5c809b26754c3b6fcd" prot="public" static="no" mutable="no">
        <type>union <ref refid="unionsys__notify_1_1method" kindref="compound">sys_notify::method</ref></type>
        <definition>union sys_notify::method sys_notify::method</definition>
        <argsstring></argsstring>
        <name>method</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="149" column="8"/>
      </memberdef>
      <memberdef kind="variable" id="structsys__notify_1a0816d524409695b9b1480e7681507073" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> volatile</type>
        <definition>uint32_t volatile sys_notify::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="165" column="19" bodyfile="include/sys/notify.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsys__notify_1a6ea09c4e58d0eaaad3dd63ee4a311a21" prot="public" static="no" mutable="no">
        <type>int volatile</type>
        <definition>int volatile sys_notify::result</definition>
        <argsstring></argsstring>
        <name>result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="174" column="14" bodyfile="include/sys/notify.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>State associated with notification for an asynchronous operation. </para>
    </briefdescription>
    <detaileddescription>
<para>Objects of this type are allocated by a client, which must use an initialization function (e.g. <ref refid="group__sys__notify__apis_1ga30f9eff4b20b7d637a3a1df5f4cb38f8" kindref="member">sys_notify_init_signal()</ref>) to configure them. Generally the structure is a member of a service-specific client structure, such as <ref refid="structonoff__client" kindref="compound">onoff_client</ref>.</para>
<para>Control of the containing object transfers to the service provider when a pointer to the object is passed to a service function that is documented to take control of the object, such as onoff_service_request(). While the service provider controls the object the client must not change any object fields. Control reverts to the client:<itemizedlist>
<listitem><para>if the call to the service API returns an error;</para>
</listitem><listitem><para>when operation completion is posted. This may occur before the call to the service API returns.</para>
</listitem></itemizedlist>
</para>
<para>Operation completion is technically posted when the flags field is updated so that <ref refid="group__sys__notify__apis_1ga823397b1917e10593d606daf3ec06a65" kindref="member">sys_notify_fetch_result()</ref> returns success. This will happen before the signal is posted or callback is invoked. Note that although the manager will no longer reference the <ref refid="structsys__notify" kindref="compound">sys_notify</ref> object past this point, the containing object may have state that will be referenced within the callback. Where callbacks are used control of the containing object does not revert to the client until the callback has been invoked. (Re-use within the callback is explicitly permitted.)</para>
<para>After control has reverted to the client the notify object must be reinitialized for the next operation.</para>
<para>The content of this structure is not public API to clients: all configuration and inspection should be done with functions like <ref refid="group__sys__notify__apis_1gaa9f31f78c03f48a3c649bbac15cc3a6c" kindref="member">sys_notify_init_callback()</ref> and <ref refid="group__sys__notify__apis_1ga823397b1917e10593d606daf3ec06a65" kindref="member">sys_notify_fetch_result()</ref>. However, services that use this structure may access certain fields directly. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>_dnode</label>
      </node>
      <node id="3">
        <label>k_poll_signal</label>
        <link refid="structk__poll__signal"/>
        <childnode refid="4" relation="usage">
          <edgelabel>poll_events</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>sys_notify</label>
        <link refid="structsys__notify"/>
        <childnode refid="2" relation="usage">
          <edgelabel>method</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>sys_notify::method</label>
        <link refid="unionsys__notify_1_1method"/>
        <childnode refid="3" relation="usage">
          <edgelabel>signal</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/sys/notify.h" line="138" column="1" bodyfile="include/sys/notify.h" bodystart="138" bodyend="175"/>
    <listofallmembers>
      <member refid="structsys__notify_1a0816d524409695b9b1480e7681507073" prot="public" virt="non-virtual"><scope>sys_notify</scope><name>flags</name></member>
      <member refid="structsys__notify_1a9c74bb70d56f0e5c809b26754c3b6fcd" prot="public" virt="non-virtual"><scope>sys_notify</scope><name>method</name></member>
      <member refid="structsys__notify_1a6ea09c4e58d0eaaad3dd63ee4a311a21" prot="public" virt="non-virtual"><scope>sys_notify</scope><name>result</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
