<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="isotp_8h" kind="file" language="C++">
    <compoundname>isotp.h</compoundname>
    <includes refid="drivers_2can_8h" local="no">drivers/can.h</includes>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includes refid="net_2buf_8h" local="no">net/buf.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/canbus/isotp.h</label>
        <link refid="isotp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>drivers/can.h</label>
        <link refid="drivers_2can_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>net/buf.h</label>
        <link refid="net_2buf_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="10">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="3">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="5">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="7">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>device.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="14">
        <label>syscalls/can.h</label>
      </node>
      <node id="16">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structisotp__msg__id" prot="public">isotp_msg_id</innerclass>
    <innerclass refid="structisotp__fc__opts" prot="public">isotp_fc_opts</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__can__isotp_1gab7daaebbc303665beb2946ce077d5312" prot="public" static="no">
        <name>ISOTP_N_OK</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Completed successfully </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="49" column="9" bodyfile="include/canbus/isotp.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1ga8298423e96932f94308f3064755d18fb" prot="public" static="no">
        <name>ISOTP_N_TIMEOUT_A</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ar/As has timed out </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="52" column="9" bodyfile="include/canbus/isotp.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1ga9e525bb24928a2656e7cd2842b306553" prot="public" static="no">
        <name>ISOTP_N_TIMEOUT_BS</name>
        <initializer>-2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reception of next FC has timed out </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="55" column="9" bodyfile="include/canbus/isotp.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1ga77b802df46c66ed6002f143b57f73b7a" prot="public" static="no">
        <name>ISOTP_N_TIMEOUT_CR</name>
        <initializer>-3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cr has timed out </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="58" column="9" bodyfile="include/canbus/isotp.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1ga9caa5677a171e1bd0be06ebb6b006046" prot="public" static="no">
        <name>ISOTP_N_WRONG_SN</name>
        <initializer>-4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unexpected sequence number </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="61" column="9" bodyfile="include/canbus/isotp.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1ga99312831df8e1822f02b41e3fccc0661" prot="public" static="no">
        <name>ISOTP_N_INVALID_FS</name>
        <initializer>-5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Invalid flow status received </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="64" column="9" bodyfile="include/canbus/isotp.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1ga45e3bfdd3948be6ccb3daec5db412b78" prot="public" static="no">
        <name>ISOTP_N_UNEXP_PDU</name>
        <initializer>-6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unexpected PDU received </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="67" column="9" bodyfile="include/canbus/isotp.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1gad6bcb7b6fb8ab30da1a4ddeabe3e3178" prot="public" static="no">
        <name>ISOTP_N_WFT_OVRN</name>
        <initializer>-7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum number of WAIT flowStatus PDUs exceeded </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="70" column="9" bodyfile="include/canbus/isotp.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1ga1b8e6b35a637b5f98e7a2ab4270efd41" prot="public" static="no">
        <name>ISOTP_N_BUFFER_OVERFLW</name>
        <initializer>-8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FlowStatus OVFLW PDU was received </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="73" column="9" bodyfile="include/canbus/isotp.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1ga0805646e65d39a9e2f15e110720887ca" prot="public" static="no">
        <name>ISOTP_N_ERROR</name>
        <initializer>-9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>General error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="76" column="9" bodyfile="include/canbus/isotp.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1gaf0624cd5e7d12e94f4a739bc47ee0361" prot="public" static="no">
        <name>ISOTP_NO_FREE_FILTER</name>
        <initializer>-10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implementation specific errors Can&apos;t bind or send because the CAN device has no filter left </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="81" column="9" bodyfile="include/canbus/isotp.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1ga901f61175e228a70c2f882bc999caea6" prot="public" static="no">
        <name>ISOTP_NO_NET_BUF_LEFT</name>
        <initializer>-11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>No net buffer left to allocate </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="84" column="9" bodyfile="include/canbus/isotp.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1gaed5270f0ee489128adb8c2ea481c6c77" prot="public" static="no">
        <name>ISOTP_NO_BUF_DATA_LEFT</name>
        <initializer>-12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Not sufficient space in the buffer left for the data </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="87" column="9" bodyfile="include/canbus/isotp.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1gac5cb1fafeb8aa5cf9fe1695612671c7d" prot="public" static="no">
        <name>ISOTP_NO_CTX_LEFT</name>
        <initializer>-13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>No context buffer left to allocate </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="90" column="9" bodyfile="include/canbus/isotp.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1gaa3e873d4a80ee128f1858520874f93b6" prot="public" static="no">
        <name>ISOTP_RECV_TIMEOUT</name>
        <initializer>-14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timeout for recv </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="93" column="9" bodyfile="include/canbus/isotp.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1gaedb0e7330d19b1cdc380c0b36cabf2f5" prot="public" static="no">
        <name>ISOTP_FIXED_ADDR_SA_POS</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of fixed source address (SA) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="107" column="9" bodyfile="include/canbus/isotp.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1ga2a9cbfd95bae05a9f7433f3b1c58689e" prot="public" static="no">
        <name>ISOTP_FIXED_ADDR_SA_MASK</name>
        <initializer>(0xFF &lt;&lt; <ref refid="group__can__isotp_1gaedb0e7330d19b1cdc380c0b36cabf2f5" kindref="member">ISOTP_FIXED_ADDR_SA_POS</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mask to obtain fixed source address (SA) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="110" column="9" bodyfile="include/canbus/isotp.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1ga2b64d4dffde99159ae5120586364e1c6" prot="public" static="no">
        <name>ISOTP_FIXED_ADDR_TA_POS</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of fixed target address (TA) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="113" column="9" bodyfile="include/canbus/isotp.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1ga5d5415982e04e506c9b045bfbe2be337" prot="public" static="no">
        <name>ISOTP_FIXED_ADDR_TA_MASK</name>
        <initializer>(0xFF &lt;&lt; <ref refid="group__can__isotp_1ga2b64d4dffde99159ae5120586364e1c6" kindref="member">ISOTP_FIXED_ADDR_TA_POS</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mask to obtain fixed target address (TA) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="116" column="9" bodyfile="include/canbus/isotp.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1ga29f8806889f4e41c1529c35a56ee98a9" prot="public" static="no">
        <name>ISOTP_FIXED_ADDR_PRIO_POS</name>
        <initializer>(26U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of priority in fixed addressing mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="119" column="9" bodyfile="include/canbus/isotp.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1gab5dc33148923e7cd58b438a8906d1ace" prot="public" static="no">
        <name>ISOTP_FIXED_ADDR_PRIO_MASK</name>
        <initializer>(0x7 &lt;&lt; <ref refid="group__can__isotp_1ga29f8806889f4e41c1529c35a56ee98a9" kindref="member">ISOTP_FIXED_ADDR_PRIO_POS</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mask for priority in fixed addressing mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="122" column="9" bodyfile="include/canbus/isotp.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__isotp_1gac27b3210cb754b4621c54923696bfe2d" prot="public" static="no">
        <name>ISOTP_FIXED_ADDR_RX_MASK</name>
        <initializer>(0x03FFFF00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="125" column="9" bodyfile="include/canbus/isotp.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__can__isotp_1gad4f9c0d3f847d453ea662128db2603bb" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* isotp_tx_callback_t) (int error_nr, void *arg)</definition>
        <argsstring>)(int error_nr, void *arg)</argsstring>
        <name>isotp_tx_callback_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="175" column="9" bodyfile="include/canbus/isotp.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__can__isotp_1ga6896dc5d603b9776228e2b28d8688bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int isotp_bind</definition>
        <argsstring>(struct isotp_recv_ctx *ctx, const struct device *can_dev, const struct isotp_msg_id *rx_addr, const struct isotp_msg_id *tx_addr, const struct isotp_fc_opts *opts, k_timeout_t timeout)</argsstring>
        <name>isotp_bind</name>
        <param>
          <type>struct isotp_recv_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>can_dev</declname>
        </param>
        <param>
          <type>const struct <ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref> *</type>
          <declname>rx_addr</declname>
        </param>
        <param>
          <type>const struct <ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref> *</type>
          <declname>tx_addr</declname>
        </param>
        <param>
          <type>const struct <ref refid="structisotp__fc__opts" kindref="compound">isotp_fc_opts</ref> *</type>
          <declname>opts</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Bind an address to a receiving context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function binds an RX and TX address combination to an RX context. When data arrives from the specified address, it is buffered and can be read by calling isotp_recv. When calling this routine, a filter is applied in the CAN device, and the context is initialized. The context must be valid until calling unbind.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Context to store the internal states. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_dev</parametername>
</parameternamelist>
<parameterdescription>
<para>The CAN device to be used for sending and receiving. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rx_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier for incoming data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tx_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier for FC frames. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opts</parametername>
</parameternamelist>
<parameterdescription>
<para>Flow control options. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout for FF SF buffer allocation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>ISOTP_N_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>on success </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ISOTP_NO_FREE_FILTER</parametername>
</parameternamelist>
<parameterdescription>
<para>if CAN device has no filters left. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="199" column="5" declfile="include/canbus/isotp.h" declline="199" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__can__isotp_1ga88746b8a5754edf7ec7a4a72fb88682f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void isotp_unbind</definition>
        <argsstring>(struct isotp_recv_ctx *ctx)</argsstring>
        <name>isotp_unbind</name>
        <param>
          <type>struct isotp_recv_ctx *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Unbind a context from the interface. </para>
        </briefdescription>
        <detaileddescription>
<para>This function removes the binding from isotp_bind. The filter is detached from the CAN device, and if a transmission is ongoing, buffers are freed. The context can be discarded safely after calling this function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Context that should be unbound. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="215" column="6" declfile="include/canbus/isotp.h" declline="215" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__can__isotp_1ga5181d483961f496a02503240fea3f7ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int isotp_recv</definition>
        <argsstring>(struct isotp_recv_ctx *ctx, uint8_t *data, size_t len, k_timeout_t timeout)</argsstring>
        <name>isotp_recv</name>
        <param>
          <type>struct isotp_recv_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Read out received data from fifo. </para>
        </briefdescription>
        <detaileddescription>
<para>This function reads the data from the receive FIFO of the context. It blocks if the FIFO is empty. If an error occurs, the function returns a negative number and leaves the data buffer unchanged.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Context that is already bound. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer where the data is copied to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout for incoming data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Number</parametername>
</parameternamelist>
<parameterdescription>
<para>of bytes copied on success </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ISOTP_WAIT_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>when &quot;timeout&quot; timed out </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ISOTP_N_*</parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="234" column="5" declfile="include/canbus/isotp.h" declline="234" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__can__isotp_1gaaeec9de1c05c373667b917294ffe67db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int isotp_recv_net</definition>
        <argsstring>(struct isotp_recv_ctx *ctx, struct net_buf **buffer, k_timeout_t timeout)</argsstring>
        <name>isotp_recv_net</name>
        <param>
          <type>struct isotp_recv_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> **</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Get the net buffer on data reception. </para>
        </briefdescription>
        <detaileddescription>
<para>This function reads incoming data into net-buffers. It blocks until the entire packet is received, BS is reached, or an error occurred. If BS was zero, the data is in a single <ref refid="structnet__buf" kindref="compound">net_buf</ref>. Otherwise, the data is fragmented in chunks of BS size. The net-buffers are referenced and must be freed with net_buf_unref after the data is processed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Context that is already bound. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer where the <ref refid="structnet__buf" kindref="compound">net_buf</ref> pointer is written to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout for incoming data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Remaining</parametername>
</parameternamelist>
<parameterdescription>
<para>data length for this transfer if BS &gt; 0, 0 for BS = 0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ISOTP_WAIT_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>when &quot;timeout&quot; timed out </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ISOTP_N_*</parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="255" column="5" declfile="include/canbus/isotp.h" declline="255" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__can__isotp_1ga9fe9f694e4e04faba406d14cddd72dbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int isotp_send</definition>
        <argsstring>(struct isotp_send_ctx *ctx, const struct device *can_dev, const uint8_t *data, size_t len, const struct isotp_msg_id *tx_addr, const struct isotp_msg_id *rx_addr, isotp_tx_callback_t complete_cb, void *cb_arg)</argsstring>
        <name>isotp_send</name>
        <param>
          <type>struct isotp_send_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>can_dev</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const struct <ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref> *</type>
          <declname>tx_addr</declname>
        </param>
        <param>
          <type>const struct <ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref> *</type>
          <declname>rx_addr</declname>
        </param>
        <param>
          <type><ref refid="group__can__isotp_1gad4f9c0d3f847d453ea662128db2603bb" kindref="member">isotp_tx_callback_t</ref></type>
          <declname>complete_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cb_arg</declname>
        </param>
        <briefdescription>
<para>Send data. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used to send data to a peer that listens to the tx_addr. An internal work-queue is used to transfer the segmented data. Data and context must be valid until the transmission has finished. If a complete_cb is given, this function is non-blocking, and the callback is called on completion with the return value as a parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Context to store the internal states. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_dev</parametername>
</parameternamelist>
<parameterdescription>
<para>The CAN device to be used for sending and receiving. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be sent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data to be sent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rx_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier for FC frames. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tx_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier for outgoing frames the receiver listens on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>complete_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Function called on completion or NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb_arg</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument passed to the complete callback.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>ISOTP_N_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>on success </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ISOTP_N_*</parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/canbus/isotp.h" line="279" column="5" declfile="include/canbus/isotp.h" declline="279" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Public API for ISO-TP (ISO 15765-2:2016) </para>
    </briefdescription>
    <detaileddescription>
<para>ISO-TP is a transport protocol for CAN (Controller Area Network) </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Alexander<sp/>Wachter</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_ISOTP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_ISOTP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="drivers_2can_8h" kindref="compound">drivers/can.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net_2buf_8h" kindref="compound">net/buf.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>Abbreviations</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>BS<sp/><sp/><sp/><sp/><sp/><sp/>Block<sp/>Size</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>CAN_DL<sp/><sp/>CAN<sp/>LL<sp/>data<sp/>size</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>CF<sp/><sp/><sp/><sp/><sp/><sp/>Consecutive<sp/>Frame</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>CTS<sp/><sp/><sp/><sp/><sp/>Continue<sp/>to<sp/>send</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>DLC<sp/><sp/><sp/><sp/><sp/>Data<sp/>length<sp/>code</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>FC<sp/><sp/><sp/><sp/><sp/><sp/>Flow<sp/>Control</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>FF<sp/><sp/><sp/><sp/><sp/><sp/>First<sp/>Frame</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>FS<sp/><sp/><sp/><sp/><sp/><sp/>Flow<sp/>Status</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>AE<sp/><sp/><sp/><sp/><sp/><sp/>Address<sp/>Extension</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>SA<sp/><sp/><sp/><sp/><sp/><sp/>Source<sp/>Address</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>TA<sp/><sp/><sp/><sp/><sp/><sp/>Target<sp/>Address</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>N_Result<sp/>according<sp/>to<sp/>ISO<sp/>15765-2:2016</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>ISOTP_<sp/>prefix<sp/>is<sp/>used<sp/>to<sp/>be<sp/>zephyr<sp/>conform</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="group__can__isotp_1gab7daaebbc303665beb2946ce077d5312" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_N_OK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group__can__isotp_1ga8298423e96932f94308f3064755d18fb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_N_TIMEOUT_A<sp/><sp/><sp/><sp/><sp/><sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="group__can__isotp_1ga9e525bb24928a2656e7cd2842b306553" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_N_TIMEOUT_BS<sp/><sp/><sp/><sp/><sp/>-2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group__can__isotp_1ga77b802df46c66ed6002f143b57f73b7a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_N_TIMEOUT_CR<sp/><sp/><sp/><sp/><sp/>-3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group__can__isotp_1ga9caa5677a171e1bd0be06ebb6b006046" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_N_WRONG_SN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="group__can__isotp_1ga99312831df8e1822f02b41e3fccc0661" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_N_INVALID_FS<sp/><sp/><sp/><sp/><sp/>-5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="group__can__isotp_1ga45e3bfdd3948be6ccb3daec5db412b78" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_N_UNEXP_PDU<sp/><sp/><sp/><sp/><sp/><sp/>-6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="group__can__isotp_1gad6bcb7b6fb8ab30da1a4ddeabe3e3178" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_N_WFT_OVRN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="group__can__isotp_1ga1b8e6b35a637b5f98e7a2ab4270efd41" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_N_BUFFER_OVERFLW<sp/>-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="group__can__isotp_1ga0805646e65d39a9e2f15e110720887ca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_N_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="group__can__isotp_1gaf0624cd5e7d12e94f4a739bc47ee0361" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_NO_FREE_FILTER<sp/><sp/><sp/><sp/>-10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="group__can__isotp_1ga901f61175e228a70c2f882bc999caea6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_NO_NET_BUF_LEFT<sp/><sp/><sp/>-11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="group__can__isotp_1gaed5270f0ee489128adb8c2ea481c6c77" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_NO_BUF_DATA_LEFT<sp/><sp/>-12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="group__can__isotp_1gac5cb1fafeb8aa5cf9fe1695612671c7d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_NO_CTX_LEFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="group__can__isotp_1gaa3e873d4a80ee128f1858520874f93b6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_RECV_TIMEOUT<sp/><sp/><sp/><sp/><sp/><sp/>-14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>CAN<sp/>ID<sp/>filtering<sp/>for<sp/>ISO-TP<sp/>fixed<sp/>addressing<sp/>according<sp/>to<sp/>SAE<sp/>J1939</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>Format<sp/>of<sp/>29-bit<sp/>CAN<sp/>identifier:</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>------------------------------------------------------</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>|<sp/>28<sp/>..<sp/>26<sp/>|<sp/>25<sp/><sp/>|<sp/>24<sp/>|<sp/>23<sp/>..<sp/>16<sp/>|<sp/>15<sp/>..<sp/>8<sp/><sp/>|<sp/>7<sp/>..<sp/>0<sp/>|</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>------------------------------------------------------</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>|<sp/>Priority<sp/>|<sp/>EDP<sp/>|<sp/>DP<sp/>|<sp/>N_TAtype<sp/>|<sp/><sp/><sp/>N_TA<sp/><sp/><sp/>|<sp/><sp/>N_SA<sp/><sp/>|</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>------------------------------------------------------</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="group__can__isotp_1gaedb0e7330d19b1cdc380c0b36cabf2f5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_FIXED_ADDR_SA_POS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="group__can__isotp_1ga2a9cbfd95bae05a9f7433f3b1c58689e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_FIXED_ADDR_SA_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xFF<sp/>&lt;&lt;<sp/>ISOTP_FIXED_ADDR_SA_POS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="group__can__isotp_1ga2b64d4dffde99159ae5120586364e1c6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_FIXED_ADDR_TA_POS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="group__can__isotp_1ga5d5415982e04e506c9b045bfbe2be337" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_FIXED_ADDR_TA_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xFF<sp/>&lt;&lt;<sp/>ISOTP_FIXED_ADDR_TA_POS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="group__can__isotp_1ga29f8806889f4e41c1529c35a56ee98a9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_FIXED_ADDR_PRIO_POS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(26U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="group__can__isotp_1gab5dc33148923e7cd58b438a8906d1ace" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_FIXED_ADDR_PRIO_MASK<sp/><sp/><sp/><sp/><sp/><sp/>(0x7<sp/>&lt;&lt;<sp/>ISOTP_FIXED_ADDR_PRIO_POS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CAN<sp/>filter<sp/>RX<sp/>mask<sp/>to<sp/>match<sp/>any<sp/>priority<sp/>and<sp/>source<sp/>address<sp/>(SA)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="group__can__isotp_1gac27b3210cb754b4621c54923696bfe2d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISOTP_FIXED_ADDR_RX_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x03FFFF00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="structisotp__msg__id" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144" refid="structisotp__msg__id_1ac9ded92f8e0afa88609003c5cf819704" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structisotp__msg__id_1ac9ded92f8e0afa88609003c5cf819704" kindref="member">std_id</ref><sp/><sp/>:<sp/>11;</highlight></codeline>
<codeline lineno="145" refid="structisotp__msg__id_1a3f9d4a6efd9b1c147f889a6396d7ef1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structisotp__msg__id_1a3f9d4a6efd9b1c147f889a6396d7ef1c" kindref="member">ext_id</ref><sp/><sp/>:<sp/>29;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="148" refid="structisotp__msg__id_1a7b818e7c6dab02347b32bcc74dfc44a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structisotp__msg__id_1a7b818e7c6dab02347b32bcc74dfc44a3" kindref="member">ext_addr</ref>;</highlight></codeline>
<codeline lineno="150" refid="structisotp__msg__id_1a45618a60c9cc86339b25782f9575095e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structisotp__msg__id_1a45618a60c9cc86339b25782f9575095e" kindref="member">id_type</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="152" refid="structisotp__msg__id_1a9fdcfee39298733e7e60f46db690b05b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structisotp__msg__id_1a9fdcfee39298733e7e60f46db690b05b" kindref="member">use_ext_addr</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="154" refid="structisotp__msg__id_1a977dc8981ab53cad4e978590f9ed2b72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structisotp__msg__id_1a977dc8981ab53cad4e978590f9ed2b72" kindref="member">use_fixed_addr</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/>STmin<sp/>is<sp/>split<sp/>in<sp/>two<sp/>valid<sp/>ranges:</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/><sp/><sp/>0-127:<sp/>0ms-127ms</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>128-240:<sp/>Reserved</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>241-249:<sp/>100us-900us<sp/>(multiples<sp/>of<sp/>100us)</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>250-<sp/><sp/><sp/>:<sp/>Reserved</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="structisotp__fc__opts" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structisotp__fc__opts" kindref="compound">isotp_fc_opts</ref><sp/>{</highlight></codeline>
<codeline lineno="171" refid="structisotp__fc__opts_1a8f31bf5c95069352043da33541911b3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structisotp__fc__opts_1a8f31bf5c95069352043da33541911b3c" kindref="member">bs</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172" refid="structisotp__fc__opts_1a5db0ceeed259c26d1d8fe0a901edcbca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structisotp__fc__opts_1a5db0ceeed259c26d1d8fe0a901edcbca" kindref="member">stmin</ref>;<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal">};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="group__can__isotp_1gad4f9c0d3f847d453ea662128db2603bb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__can__isotp_1gad4f9c0d3f847d453ea662128db2603bb" kindref="member">isotp_tx_callback_t</ref>)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error_nr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">isotp_send_ctx;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">isotp_recv_ctx;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="group__can__isotp_1ga6896dc5d603b9776228e2b28d8688bd2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__can__isotp_1ga6896dc5d603b9776228e2b28d8688bd2" kindref="member">isotp_bind</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>isotp_recv_ctx<sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*can_dev,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref><sp/>*rx_addr,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref><sp/>*tx_addr,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structisotp__fc__opts" kindref="compound">isotp_fc_opts</ref><sp/>*opts,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="group__can__isotp_1ga88746b8a5754edf7ec7a4a72fb88682f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__can__isotp_1ga88746b8a5754edf7ec7a4a72fb88682f" kindref="member">isotp_unbind</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>isotp_recv_ctx<sp/>*ctx);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="group__can__isotp_1ga5181d483961f496a02503240fea3f7ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__can__isotp_1ga5181d483961f496a02503240fea3f7ea" kindref="member">isotp_recv</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>isotp_recv_ctx<sp/>*ctx,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="group__can__isotp_1gaaeec9de1c05c373667b917294ffe67db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__can__isotp_1gaaeec9de1c05c373667b917294ffe67db" kindref="member">isotp_recv_net</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>isotp_recv_ctx<sp/>*ctx,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>**<ref refid="group__kernel__mbox__api_1gab659fc0dee01e6639b8b6108addbd046" kindref="member">buffer</ref>,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="group__can__isotp_1ga9fe9f694e4e04faba406d14cddd72dbe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__can__isotp_1ga9fe9f694e4e04faba406d14cddd72dbe" kindref="member">isotp_send</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>isotp_send_ctx<sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*can_dev,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref><sp/>*tx_addr,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref><sp/>*rx_addr,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__isotp_1gad4f9c0d3f847d453ea662128db2603bb" kindref="member">isotp_tx_callback_t</ref><sp/>complete_cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cb_arg);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_ISOTP_ENABLE_CONTEXT_BUFFERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isotp_send_ctx_buf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*can_dev,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref><sp/>*tx_addr,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref><sp/>*rx_addr,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__isotp_1gad4f9c0d3f847d453ea662128db2603bb" kindref="member">isotp_tx_callback_t</ref><sp/>complete_cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cb_arg,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isotp_send_net_ctx_buf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*can_dev,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref><sp/>*tx_addr,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref><sp/>*rx_addr,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__isotp_1gad4f9c0d3f847d453ea662128db2603bb" kindref="member">isotp_tx_callback_t</ref><sp/>complete_cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cb_arg,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*CONFIG_ISOTP_ENABLE_CONTEXT_BUFFERS*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_ISOTP_USE_TX_BUF)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined(CONFIG_ISOTP_ENABLE_CONTEXT_BUFFERS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isotp_send_buf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*can_dev,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref><sp/>*tx_addr,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref><sp/>*rx_addr,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__isotp_1gad4f9c0d3f847d453ea662128db2603bb" kindref="member">isotp_tx_callback_t</ref><sp/>complete_cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cb_arg,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">isotp_callback<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__isotp_1gad4f9c0d3f847d453ea662128db2603bb" kindref="member">isotp_tx_callback_t</ref><sp/>cb;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">};</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">isotp_send_ctx<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>filter_id;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>error_nr;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*can_dev;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*buf;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/><ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_timeout<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">isotp_callback<sp/>fin_cb;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/>fin_sem;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structisotp__fc__opts" kindref="compound">isotp_fc_opts</ref><sp/>opts;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>tx_backlog;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref><sp/>rx_addr;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref><sp/>tx_addr;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>wft;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>bs;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>sn<sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>is_net_buf<sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>is_ctx_slab<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>has_callback:<sp/>1;</highlight></codeline>
<codeline lineno="402"><highlight class="normal">};</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">isotp_recv_ctx<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>filter_id;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*can_dev;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*buf;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*act_frag;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>buffer<sp/>currently<sp/>processed<sp/>in<sp/>isotp_recv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*recv_buf;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="slist_8h_1a69bf43aad81e3ee2d55250c59b857493" kindref="member">sys_snode_t</ref><sp/>alloc_node;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>length;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error_nr;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/><ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_timeout<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__fifo" kindref="compound">k_fifo</ref><sp/><ref refid="errno_8c_1a4c78dc47164573bcfb8130a8d52e1b77" kindref="member">fifo</ref>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref><sp/>rx_addr;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structisotp__msg__id" kindref="compound">isotp_msg_id</ref><sp/>tx_addr;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structisotp__fc__opts" kindref="compound">isotp_fc_opts</ref><sp/>opts;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structisotp__fc__opts_1a8f31bf5c95069352043da33541911b3c" kindref="member">bs</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>wft;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>sn_expected<sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">};</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_ISOTP_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/canbus/isotp.h"/>
  </compounddef>
</doxygen>
