<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="msr_8h" kind="file" language="C++">
    <compoundname>msr.h</compoundname>
    <includedby refid="loapic_8h" local="no">include/drivers/interrupt_controller/loapic.h</includedby>
    <invincdepgraph>
      <node id="4">
        <label>include/arch/x86/arch.h</label>
        <link refid="x86_2arch_8h"/>
      </node>
      <node id="1">
        <label>include/arch/x86/msr.h</label>
        <link refid="msr_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/drivers/interrupt_controller/loapic.h</label>
        <link refid="loapic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/drivers/interrupt_controller/sysapic.h</label>
        <link refid="sysapic_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="msr_8h_1a6a8159994070c5d75a390f81ae460dee" prot="public" static="no">
        <name>X86_TIME_STAMP_COUNTER_MSR</name>
        <initializer>0x00000010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="13" column="9" bodyfile="include/arch/x86/msr.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1ab89835f2b734a80195db70d28749e7c1" prot="public" static="no">
        <name>X86_SPEC_CTRL_MSR</name>
        <initializer>0x00000048</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="15" column="9" bodyfile="include/arch/x86/msr.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1aa7de592375a86f19136972a5bd4c8453" prot="public" static="no">
        <name>X86_SPEC_CTRL_MSR_IBRS</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="16" column="9" bodyfile="include/arch/x86/msr.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1aa267e6d482addf97eb630f208281000d" prot="public" static="no">
        <name>X86_SPEC_CTRL_MSR_SSBD</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="17" column="9" bodyfile="include/arch/x86/msr.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1a0083758907f732a480f8a9ec2ccb3778" prot="public" static="no">
        <name>X86_APIC_BASE_MSR</name>
        <initializer>0x0000001b</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="19" column="9" bodyfile="include/arch/x86/msr.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1a940221ed627aad8120e2abb0c12ff196" prot="public" static="no">
        <name>X86_APIC_BASE_MSR_X2APIC</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="20" column="9" bodyfile="include/arch/x86/msr.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1aa5479ba3ca3bbda70d35819b67d3583f" prot="public" static="no">
        <name>X86_MTRR_DEF_TYPE_MSR</name>
        <initializer>0x000002ff</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="22" column="9" bodyfile="include/arch/x86/msr.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1a2c5d224b53d927e325b710484ebfb2a0" prot="public" static="no">
        <name>X86_MTRR_DEF_TYPE_MSR_ENABLE</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(11)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="23" column="9" bodyfile="include/arch/x86/msr.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1ab5ccd444077064e6b7a399ceb3d61f9f" prot="public" static="no">
        <name>X86_X2APIC_BASE_MSR</name>
        <initializer>0x00000800 /* .. thru 0x00000BFF */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="25" column="9" bodyfile="include/arch/x86/msr.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1a4226ff6b5ecc23277e9cb0433b0d6c22" prot="public" static="no">
        <name>X86_EFER_MSR</name>
        <initializer>0xC0000080</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="27" column="9" bodyfile="include/arch/x86/msr.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1ae20fe7661b62a20885d6cef7f83e917e" prot="public" static="no">
        <name>X86_EFER_MSR_SCE</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="28" column="9" bodyfile="include/arch/x86/msr.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1a4484482d4a9eee0288970fb8a6fc70f5" prot="public" static="no">
        <name>X86_EFER_MSR_LME</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="29" column="9" bodyfile="include/arch/x86/msr.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1a410a6e81d01226d399b8e24d5506013d" prot="public" static="no">
        <name>X86_EFER_MSR_NXE</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(11)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="30" column="9" bodyfile="include/arch/x86/msr.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1a48b0da8dc9cdd319cf75ac0d5933ce0f" prot="public" static="no">
        <name>X86_STAR_MSR</name>
        <initializer>0xC0000081</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="36" column="9" bodyfile="include/arch/x86/msr.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1a64cac416a2f72c129bd8e01fd885aaea" prot="public" static="no">
        <name>X86_LSTAR_MSR</name>
        <initializer>0xC0000082</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="39" column="9" bodyfile="include/arch/x86/msr.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1af28b1c23c69f1658384a5de5b9461c64" prot="public" static="no">
        <name>X86_FMASK_MSR</name>
        <initializer>0xC0000084</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="42" column="9" bodyfile="include/arch/x86/msr.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1a935167aeb9bc9b1f4e73d8001c3c72f0" prot="public" static="no">
        <name>X86_FS_BASE</name>
        <initializer>0xC0000100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="44" column="9" bodyfile="include/arch/x86/msr.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1a263e74097e9162fd54f5d05af74f4aa1" prot="public" static="no">
        <name>X86_GS_BASE</name>
        <initializer>0xC0000101</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="45" column="9" bodyfile="include/arch/x86/msr.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msr_8h_1af832b3ce587c52ff9764d42fbd1c1b25" prot="public" static="no">
        <name>X86_KERNEL_GS_BASE</name>
        <initializer>0xC0000102</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/msr.h" line="46" column="9" bodyfile="include/arch/x86/msr.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Intel<sp/>Corp.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_ARCH_X86_MSR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_ARCH_X86_MSR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Model<sp/>specific<sp/>registers<sp/>(MSR).<sp/><sp/>Access<sp/>with<sp/>z_x86_msr_read/write().</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="msr_8h_1a6a8159994070c5d75a390f81ae460dee" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_TIME_STAMP_COUNTER_MSR<sp/><sp/><sp/><sp/><sp/><sp/>0x00000010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="msr_8h_1ab89835f2b734a80195db70d28749e7c1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_SPEC_CTRL_MSR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000048</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="msr_8h_1aa7de592375a86f19136972a5bd4c8453" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_SPEC_CTRL_MSR_IBRS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="msr_8h_1aa267e6d482addf97eb630f208281000d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_SPEC_CTRL_MSR_SSBD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="msr_8h_1a0083758907f732a480f8a9ec2ccb3778" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_APIC_BASE_MSR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0000001b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="msr_8h_1a940221ed627aad8120e2abb0c12ff196" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_APIC_BASE_MSR_X2APIC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="msr_8h_1aa5479ba3ca3bbda70d35819b67d3583f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_MTRR_DEF_TYPE_MSR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x000002ff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="msr_8h_1a2c5d224b53d927e325b710484ebfb2a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_MTRR_DEF_TYPE_MSR_ENABLE<sp/><sp/><sp/><sp/>BIT(11)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="msr_8h_1ab5ccd444077064e6b7a399ceb3d61f9f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_X2APIC_BASE_MSR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000800<sp/></highlight><highlight class="comment">/*<sp/>..<sp/>thru<sp/>0x00000BFF<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="msr_8h_1a4226ff6b5ecc23277e9cb0433b0d6c22" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_EFER_MSR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xC0000080</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="msr_8h_1ae20fe7661b62a20885d6cef7f83e917e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_EFER_MSR_SCE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="msr_8h_1a4484482d4a9eee0288970fb8a6fc70f5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_EFER_MSR_LME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="msr_8h_1a410a6e81d01226d399b8e24d5506013d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_EFER_MSR_NXE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(11)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>STAR<sp/>31:0<sp/><sp/><sp/>Unused<sp/>in<sp/>long<sp/>mode</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>47:32<sp/><sp/>Kernel<sp/>CS<sp/>(SS<sp/>=<sp/>CS+8)</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>63:48<sp/><sp/>User<sp/>CS<sp/>(SS<sp/>=<sp/>CS+8)</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="msr_8h_1a48b0da8dc9cdd319cf75ac0d5933ce0f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_STAR_MSR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xC0000081</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Location<sp/>for<sp/>system<sp/>call<sp/>entry<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="msr_8h_1a64cac416a2f72c129bd8e01fd885aaea" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_LSTAR_MSR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xC0000082</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Low<sp/>32<sp/>bits<sp/>in<sp/>this<sp/>MSR<sp/>are<sp/>the<sp/>SYSCALL<sp/>mask<sp/>applied<sp/>to<sp/>EFLAGS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="msr_8h_1af28b1c23c69f1658384a5de5b9461c64" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_FMASK_MSR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xC0000084</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="msr_8h_1a935167aeb9bc9b1f4e73d8001c3c72f0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_FS_BASE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xC0000100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="msr_8h_1a263e74097e9162fd54f5d05af74f4aa1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_GS_BASE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xC0000101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="msr_8h_1af832b3ce587c52ff9764d42fbd1c1b25" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_KERNEL_GS_BASE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xC0000102</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_ASMLANGUAGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>z_x86_msr_write()<sp/>is<sp/>shared<sp/>between<sp/>32-<sp/>and<sp/>64-bit<sp/>implementations,<sp/>but</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>due<sp/>to<sp/>ABI<sp/>differences<sp/>with<sp/>long<sp/>return<sp/>values,<sp/>z_x86_msr_read()<sp/>is<sp/>not.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_x86_msr_write(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msr,<sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>high<sp/>=<sp/><ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref><sp/>&gt;&gt;<sp/>32;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>low<sp/>=<sp/><ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref><sp/>&amp;<sp/>0xFFFFFFFF;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;wrmsr&quot;</highlight><highlight class="normal"><sp/>:<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">(msr),<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">(low),<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">(high));</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_X86_64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/>z_x86_msr_read(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msr)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>lo;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="asm-macro-32-bit-gnu_8h_1a0ef89636f8d03ae88717291e66d59527" kindref="member">hi</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/>value;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="fatal_2exception_2src_2main_8c_1ae3b62d25a3304d081b4272eeab42de09" kindref="member">rv</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;rdmsr&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=a&quot;</highlight><highlight class="normal"><sp/>(<ref refid="fatal_2exception_2src_2main_8c_1ae3b62d25a3304d081b4272eeab42de09" kindref="member">rv</ref>.lo),<sp/></highlight><highlight class="stringliteral">&quot;=d&quot;</highlight><highlight class="normal"><sp/>(<ref refid="fatal_2exception_2src_2main_8c_1ae3b62d25a3304d081b4272eeab42de09" kindref="member">rv</ref>.hi)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal"><sp/>(msr));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fatal_2exception_2src_2main_8c_1ae3b62d25a3304d081b4272eeab42de09" kindref="member">rv</ref>.value;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/>z_x86_msr_read(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msr)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;rdmsr&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=A&quot;</highlight><highlight class="normal"><sp/>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal"><sp/>(msr));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_ASMLANGUAGE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_ARCH_X86_MSR_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/arch/x86/msr.h"/>
  </compounddef>
</doxygen>
