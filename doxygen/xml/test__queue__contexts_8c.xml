<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="test__queue__contexts_8c" kind="file" language="C++">
    <compoundname>test_queue_contexts.c</compoundname>
    <includes refid="test__queue_8h" local="yes">test_queue.h</includes>
    <incdepgraph>
      <node id="18">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="67">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="66">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="30">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="37">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="39">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="35">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="33">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="41">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="42">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="38">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="36">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="40">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="76">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="46">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="52">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="29">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="43">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="24">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="5">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="20">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="87">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="88">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="14">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="9">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="12">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="65">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="89">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="82">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="3">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>ztest_error_hook.h</label>
        <link refid="ztest__error__hook_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="16">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>test_queue.h</label>
        <link refid="test__queue_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/queue/src/test_queue_contexts.c</label>
        <link refid="test__queue__contexts_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>alloca.h</label>
      </node>
      <node id="69">
        <label>arch/cpu.h</label>
      </node>
      <node id="32">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="31">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="44">
        <label>kernel.h</label>
      </node>
      <node id="7">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="85">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="90">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="91">
        <label>tc_util.h</label>
      </node>
      <node id="10">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="test__queue__contexts_8c_1a6423a880df59733d2d9b509c7718d3a9" prot="public" static="no">
        <name>STACK_SIZE</name>
        <initializer>(512 + CONFIG_TEST_EXTRA_STACK_SIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="9" column="9" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__queue__contexts_8c_1aa0db7e0f64676a51b9d71faafae093cd" prot="public" static="no">
        <name>LIST_LEN</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="10" column="9" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__kernel__queue__tests_1ga0a1e9850c03451c0ae29e134b57b6780" prot="public" static="no">
        <name>QUEUE_NUM</name>
        <initializer>10</initializer>
        <briefdescription>
<para>Verify that multiple queues can be defined simultaneously. </para>
        </briefdescription>
        <detaileddescription>
<para>define multiple queues to verify they can work.</para>
<para><simplesect kind="see"><para><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="386" column="9" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="386" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" prot="public" static="no" mutable="no">
        <type>struct k_queue</type>
        <definition>struct k_queue queue</definition>
        <argsstring></argsstring>
        <name>queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="17" column="14" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__queue__contexts_8c_1a16ed65a4677c81d42ffac43a046571b1" prot="public" static="yes" mutable="no">
        <type><ref refid="test__queue_8h_1ab220b5fe54cc9d223384a2227b750fc1" kindref="member">qdata_t</ref></type>
        <definition>qdata_t data[2]</definition>
        <argsstring>[2]</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="18" column="16" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__queue__contexts_8c_1a3dd46b11def568c2c507b4b3197be6b4" prot="public" static="yes" mutable="no">
        <type><ref refid="test__queue_8h_1ab220b5fe54cc9d223384a2227b750fc1" kindref="member">qdata_t</ref></type>
        <definition>qdata_t data_p[2]</definition>
        <argsstring>[2]</argsstring>
        <name>data_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="19" column="16" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__queue__contexts_8c_1af0a237fc9318c39fd8d68787e243fd26" prot="public" static="yes" mutable="no">
        <type><ref refid="test__queue_8h_1ab220b5fe54cc9d223384a2227b750fc1" kindref="member">qdata_t</ref></type>
        <definition>qdata_t data_l[2]</definition>
        <argsstring>[2]</argsstring>
        <name>data_l</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="20" column="16" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__queue__contexts_8c_1ae1b5488d27445cf332b324baff908719" prot="public" static="yes" mutable="no">
        <type><ref refid="test__queue_8h_1ab220b5fe54cc9d223384a2227b750fc1" kindref="member">qdata_t</ref></type>
        <definition>qdata_t data_sl[2]</definition>
        <argsstring>[2]</argsstring>
        <name>data_sl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="21" column="16" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__queue__contexts_8c_1a73c4b61d5406b8c2dd4401de076fb2f9" prot="public" static="yes" mutable="no">
        <type><ref refid="test__queue_8h_1ab220b5fe54cc9d223384a2227b750fc1" kindref="member">qdata_t</ref> *</type>
        <definition>qdata_t* data_append</definition>
        <argsstring></argsstring>
        <name>data_append</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="23" column="16" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__queue__contexts_8c_1adcc54aa8e4aaec95b8b32106997746d9" prot="public" static="yes" mutable="no">
        <type><ref refid="test__queue_8h_1ab220b5fe54cc9d223384a2227b750fc1" kindref="member">qdata_t</ref> *</type>
        <definition>qdata_t* data_prepend</definition>
        <argsstring></argsstring>
        <name>data_prepend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="24" column="16" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__queue__contexts_8c_1aa15baae19d44279cac3d8bf47c9e707f" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread tdata</definition>
        <argsstring></argsstring>
        <name>tdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="27" column="22" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__queue__contexts_8c_1a82c3f4a9aaaf6ca8f1ca77cc6666f892" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread tdata1</definition>
        <argsstring></argsstring>
        <name>tdata1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="29" column="22" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__queue__contexts_8c_1a0254f78e372a9cb818cac949ef36f349" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread tdata2</definition>
        <argsstring></argsstring>
        <name>tdata2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="31" column="22" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__queue__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" prot="public" static="yes" mutable="no">
        <type>struct k_sem</type>
        <definition>struct k_sem end_sema</definition>
        <argsstring></argsstring>
        <name>end_sema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="32" column="19" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__queue__contexts_8c_1ad0c5e530bd2f8ef035b31f9c9b197e01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_QUEUE_DEFINE</definition>
        <argsstring>(kqueue)</argsstring>
        <name>K_QUEUE_DEFINE</name>
        <param>
          <type>kqueue</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TESTPOINT: init via K_QUEUE_DEFINE </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="12" column="1" declfile="tests/kernel/queue/src/test_queue_contexts.c" declline="12" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1a2052914a3e8ddce8f048d724fc558700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_HEAP_DEFINE</definition>
        <argsstring>(mem_pool_fail, 8+128)</argsstring>
        <name>K_HEAP_DEFINE</name>
        <param>
          <type>mem_pool_fail</type>
        </param>
        <param>
          <type>8+</type>
          <declname>128</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="14" column="1" declfile="tests/kernel/queue/src/test_queue_contexts.c" declline="14" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1aade5b942c4031b22c19cd9df4e379767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_HEAP_DEFINE</definition>
        <argsstring>(mem_pool_pass, 64 *4+128)</argsstring>
        <name>K_HEAP_DEFINE</name>
        <param>
          <type>mem_pool_pass</type>
        </param>
        <param>
          <type>64 *4+</type>
          <declname>128</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="15" column="1" declfile="tests/kernel/queue/src/test_queue_contexts.c" declline="15" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1ac9f7dc87180ded5f1ffe1cdab64aed90" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_DEFINE</definition>
        <argsstring>(tstack,(512+CONFIG_TEST_EXTRA_STACK_SIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref></type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACK_SIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="26" column="8" declfile="tests/kernel/queue/src/test_queue_contexts.c" declline="26" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1a4f7ec7d4863c41f0ba67f2ce3ff3ac2f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_DEFINE</definition>
        <argsstring>(tstack1,(512+CONFIG_TEST_EXTRA_STACK_SIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>tstack1</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACK_SIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="28" column="8" declfile="tests/kernel/queue/src/test_queue_contexts.c" declline="28" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1ac7393ccbe0c6f704f97f86fd0276d502" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_DEFINE</definition>
        <argsstring>(tstack2,(512+CONFIG_TEST_EXTRA_STACK_SIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>tstack2</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACK_SIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="30" column="8" declfile="tests/kernel/queue/src/test_queue_contexts.c" declline="30" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1a44dfa584c56b3424b86a85804c539f7a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tqueue_append</definition>
        <argsstring>(struct k_queue *pqueue)</argsstring>
        <name>tqueue_append</name>
        <param>
          <type>struct k_queue *</type>
          <declname>pqueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: queue append</para>
<para>TESTPOINT: queue prepend</para>
<para>TESTPOINT: queue append list</para>
<para>TESTPOINT: queue merge slist</para>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="34" column="13" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="34" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1a85f68c613b07bf8abc74e5ae99b944b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tqueue_get</definition>
        <argsstring>(struct k_queue *pqueue)</argsstring>
        <name>tqueue_get</name>
        <param>
          <type>struct k_queue *</type>
          <declname>pqueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: queue get</para>
<para>TESTPOINT: queue get</para>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="65" column="13" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="65" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1ae0e226e49825e28f4c771f50ea08b23a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tIsr_entry_append</definition>
        <argsstring>(const void *p)</argsstring>
        <name>tIsr_entry_append</name>
        <param>
          <type>const void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="94" column="13" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1a8b0d66e259aa27791d7ca5f81a25d259" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tIsr_entry_get</definition>
        <argsstring>(const void *p)</argsstring>
        <name>tIsr_entry_get</name>
        <param>
          <type>const void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="99" column="13" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1a757b88d684794c799892d1a4c28fd86f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tThread_entry</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>tThread_entry</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="104" column="13" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="104" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1ab254a98b97de52a17c4ddc6362f65d73" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tqueue_thread_thread</definition>
        <argsstring>(struct k_queue *pqueue)</argsstring>
        <name>tqueue_thread_thread</name>
        <param>
          <type>struct k_queue *</type>
          <declname>pqueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: thread-thread data passing via queue</para>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="110" column="13" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="110" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1aa599cbeeb86a1160bb55b5a2477a91f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tqueue_thread_isr</definition>
        <argsstring>(struct k_queue *pqueue)</argsstring>
        <name>tqueue_thread_isr</name>
        <param>
          <type>struct k_queue *</type>
          <declname>pqueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: thread-isr data passing via queue</para>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="122" column="13" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="122" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1adec54877c7565f8cff1dbfdef32d34c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tqueue_isr_thread</definition>
        <argsstring>(struct k_queue *pqueue)</argsstring>
        <name>tqueue_isr_thread</name>
        <param>
          <type>struct k_queue *</type>
          <declname>pqueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: isr-thread data passing via queue</para>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="130" column="13" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="130" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__queue__tests_1gac2b4619b80e450b376058832ce1442af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_queue_thread2thread</definition>
        <argsstring>(void)</argsstring>
        <name>test_queue_thread2thread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Verify data passing between threads using queue. </para>
        </briefdescription>
        <detaileddescription>
<para>Static define and Dynamic define queues, Then initialize them. Create a new thread to wait for reading data. Current thread will append item into queue. Verify if rx_data is equal insert-data address. Verify queue can be define at compile time.</para>
<para><simplesect kind="see"><para><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init()</ref>, <ref refid="group__queue__apis_1gad47336f27e433a52600a3b67ab89556a" kindref="member">k_queue_insert()</ref>, <ref refid="group__queue__apis_1gaa84522a5ace6e7f8ba61033baca6972f" kindref="member">k_queue_append()</ref> <ref refid="test__queue__contexts_8c_1ac9f7dc87180ded5f1ffe1cdab64aed90" kindref="member">K_THREAD_STACK_DEFINE()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: init via k_queue_init</para>
<para>TESTPOINT: test K_QUEUE_DEFINEed queue</para>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="154" column="6" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="154" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__queue__tests_1ga4e99828657b64f710660f7c49c79fe9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_queue_thread2isr</definition>
        <argsstring>(void)</argsstring>
        <name>test_queue_thread2isr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Verify data passing between thread and ISR. </para>
        </briefdescription>
        <detaileddescription>
<para>Create a new ISR to insert data And current thread is used for getting data Verify if the rx_data is equal insert-data address. If the received data address is the same as the created array, prove that the queue data structures are stored within the provided data items.</para>
<para><simplesect kind="see"><para><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init()</ref>, <ref refid="group__queue__apis_1gad47336f27e433a52600a3b67ab89556a" kindref="member">k_queue_insert()</ref>, <ref refid="group__queue__apis_1gaa84522a5ace6e7f8ba61033baca6972f" kindref="member">k_queue_append()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: init via k_queue_init</para>
<para>TESTPOINT: test K_QUEUE_DEFINEed queue</para>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="178" column="6" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="178" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__queue__tests_1gaf33994f0f39f2b46dfaf2af17ccf99fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_queue_isr2thread</definition>
        <argsstring>(void)</argsstring>
        <name>test_queue_isr2thread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Verify data passing between ISR and thread. </para>
        </briefdescription>
        <detaileddescription>
<para>Create a new ISR and ready for getting data And current thread is used for inserting data Verify if the rx_data is equal insert-data address.</para>
<para><simplesect kind="see"><para><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init()</ref>, <ref refid="group__queue__apis_1gad47336f27e433a52600a3b67ab89556a" kindref="member">k_queue_insert()</ref>, <ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get()</ref>, <ref refid="group__queue__apis_1gaa84522a5ace6e7f8ba61033baca6972f" kindref="member">k_queue_append()</ref>, <ref refid="group__queue__apis_1ga4bff929ed1d366a06e00865a5bbe2544" kindref="member">k_queue_remove()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: test k_queue_init queue</para>
<para>TESTPOINT: test K_QUEUE_DEFINE queue</para>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="200" column="6" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="200" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1ac0ef0e0791f8ece2e72b1eb5d8bfc525" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tThread_get</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>tThread_get</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="210" column="13" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="210" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1a7885e06b644cb36d35e37e858729f7b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tqueue_get_2threads</definition>
        <argsstring>(struct k_queue *pqueue)</argsstring>
        <name>tqueue_get_2threads</name>
        <param>
          <type>struct k_queue *</type>
          <declname>pqueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="217" column="13" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="217" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__queue__tests_1ga625832221d8e19245df0f01989cf680e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_queue_get_2threads</definition>
        <argsstring>(void)</argsstring>
        <name>test_queue_get_2threads</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Verify <ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init()</ref>, <ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get()</ref>, <ref refid="group__queue__apis_1gaa84522a5ace6e7f8ba61033baca6972f" kindref="member">k_queue_append()</ref>, <ref refid="group__queue__apis_1gacf3dba40125073c11075e5a134919f88" kindref="member">k_queue_alloc_prepend()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: test k_queue_init queue</para>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="247" column="6" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="247" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1a9b898a57599d516394eceb8a3cf1a299" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tqueue_alloc</definition>
        <argsstring>(struct k_queue *pqueue)</argsstring>
        <name>tqueue_alloc</name>
        <param>
          <type>struct k_queue *</type>
          <declname>pqueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="255" column="13" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="255" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__queue__tests_1gaed02bb7c545405e0dd51019037e7522b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_queue_alloc</definition>
        <argsstring>(void)</argsstring>
        <name>test_queue_alloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test queue alloc append and prepend. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__queue__apis_1ga690f3a1450e946d75f31b3e499d1d06a" kindref="member">k_queue_alloc_append()</ref>, <ref refid="group__queue__apis_1gacf3dba40125073c11075e5a134919f88" kindref="member">k_queue_alloc_prepend()</ref>, z_thread_heap_assign(), <ref refid="group__queue__apis_1gadb2bb8088868b3c5801c72b320389ca9" kindref="member">k_queue_is_empty()</ref>, <ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get()</ref>, <ref refid="group__queue__apis_1ga4bff929ed1d366a06e00865a5bbe2544" kindref="member">k_queue_remove()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="300" column="6" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="300" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1a32265fda7a2a16e962bf5d4e0f4deffd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void queue_poll_race_consume</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>queue_poll_race_consume</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="319" column="13" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="319" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1a226b3bdc41d00baf8091e23c1fc7f7fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_queue_poll_race</definition>
        <argsstring>(void)</argsstring>
        <name>test_queue_poll_race</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="336" column="6" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="336" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1a250b5cad2ec049439a5568b979bbb9aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_multiple_queues</definition>
        <argsstring>(void)</argsstring>
        <name>test_multiple_queues</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="387" column="6" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="387" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1a8191cba6cff4c5445d122784a48a5575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void user_access_queue_private_data</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>user_access_queue_private_data</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="401" column="6" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="401" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1a9fa8884f88d5abdbbb63f12173e38df1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_access_kernel_obj_with_priv_data</definition>
        <argsstring>(void)</argsstring>
        <name>test_access_kernel_obj_with_priv_data</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test access kernel object with private data using system call. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>When defining system calls, it is very important to ensure that access to the API’s private data is done exclusively through system call interfaces. Private kernel data should never be made available to user mode threads directly. For example, the k_queue APIs were intentionally not made available as they store bookkeeping information about the queue directly in the queue buffers which are visible from user mode.</para>
</listitem><listitem><para>Current test makes user thread try to access private kernel data within their associated data structures. Kernel will track that system call access to these object with the kernel object permission system. Current user thread doesn&apos;t have permission on it, trying to access &amp;pqueue kernel object will happen kernel oops, because current user thread doesn&apos;t have permission on k_queue object with private kernel data. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="427" column="6" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="427" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1a055cef14b318d00d836c86d0b07b7160" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void low_prio_wait_for_queue</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>low_prio_wait_for_queue</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="436" column="13" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="436" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1a3ccfab1b690c0635991d590fc62a1700" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void high_prio_t1_wait_for_queue</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>high_prio_t1_wait_for_queue</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="446" column="13" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="446" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__contexts_8c_1af4c887bb56ee3d504f02ff687d7abf57" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void high_prio_t2_wait_for_queue</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>high_prio_t2_wait_for_queue</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="456" column="13" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="456" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__queue__tests_1ga0e791336265c0bac2f7d7a90fa92dbe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_queue_multithread_competition</definition>
        <argsstring>(void)</argsstring>
        <name>test_queue_multithread_competition</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test multi-threads to get data from a queue. </para>
        </briefdescription>
        <detaileddescription>
<para>Define three threads, and set a higher priority for two of them, and set a lower priority for the last one. Then Add a delay between creating the two high priority threads. Test point:<orderedlist>
<listitem><para>Any number of threads may wait on an empty FIFO simultaneously.</para>
</listitem><listitem><para>When a data item is added, it is given to the highest priority thread that has waited longest. </para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="479" column="6" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="479" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__queue__tests_1ga459dda9caedbf5d1adf693f7fcc22be7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_queue_unique_append</definition>
        <argsstring>(void)</argsstring>
        <name>test_queue_unique_append</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Verify <ref refid="group__queue__apis_1ga287a2d81e2e3041be1cd45164e72f127" kindref="member">k_queue_unique_append()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Append the same data to the queue repeatedly, see if it returns expected value. And verify operation succeed if append different data to the queue.</para>
<para><simplesect kind="see"><para><ref refid="group__queue__apis_1ga287a2d81e2e3041be1cd45164e72f127" kindref="member">k_queue_unique_append()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_contexts.c" line="542" column="6" bodyfile="tests/kernel/queue/src/test_queue_contexts.c" bodystart="542" bodyend="555"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="test__queue_8h" kindref="compound">test_queue.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STACK_SIZE<sp/>(512<sp/>+<sp/>CONFIG_TEST_EXTRA_STACK_SIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_LEN<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="test__queue__contexts_8c_1ad0c5e530bd2f8ef035b31f9c9b197e01" kindref="member">K_QUEUE_DEFINE</ref>(kqueue);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="test__queue__contexts_8c_1a2052914a3e8ddce8f048d724fc558700" kindref="member">K_HEAP_DEFINE</ref>(mem_pool_fail,<sp/>8<sp/>+<sp/>128);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="test__queue__contexts_8c_1a2052914a3e8ddce8f048d724fc558700" kindref="member">K_HEAP_DEFINE</ref>(mem_pool_pass,<sp/>64<sp/>*<sp/>4<sp/>+<sp/>128);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_queue<sp/><ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structqdata" kindref="compound">qdata_t</ref><sp/><ref refid="test__queue__contexts_8c_1a16ed65a4677c81d42ffac43a046571b1" kindref="member">data</ref>[<ref refid="test__queue__contexts_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref>];</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structqdata" kindref="compound">qdata_t</ref><sp/><ref refid="test__queue__contexts_8c_1a3dd46b11def568c2c507b4b3197be6b4" kindref="member">data_p</ref>[<ref refid="test__queue__contexts_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref>];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structqdata" kindref="compound">qdata_t</ref><sp/><ref refid="test__queue__contexts_8c_1af0a237fc9318c39fd8d68787e243fd26" kindref="member">data_l</ref>[<ref refid="test__queue__contexts_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref>];</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structqdata" kindref="compound">qdata_t</ref><sp/><ref refid="test__queue__contexts_8c_1ae1b5488d27445cf332b324baff908719" kindref="member">data_sl</ref>[<ref refid="test__queue__contexts_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref>];</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structqdata" kindref="compound">qdata_t</ref><sp/>*<ref refid="test__queue__contexts_8c_1a73c4b61d5406b8c2dd4401de076fb2f9" kindref="member">data_append</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structqdata" kindref="compound">qdata_t</ref><sp/>*<ref refid="test__queue__contexts_8c_1adcc54aa8e4aaec95b8b32106997746d9" kindref="member">data_prepend</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1ac9f7dc87180ded5f1ffe1cdab64aed90" kindref="member">K_THREAD_STACK_DEFINE</ref>(<ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="test__queue__contexts_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="test__queue__contexts_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1ac9f7dc87180ded5f1ffe1cdab64aed90" kindref="member">K_THREAD_STACK_DEFINE</ref>(tstack1,<sp/><ref refid="test__queue__contexts_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="test__queue__contexts_8c_1a82c3f4a9aaaf6ca8f1ca77cc6666f892" kindref="member">tdata1</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1ac9f7dc87180ded5f1ffe1cdab64aed90" kindref="member">K_THREAD_STACK_DEFINE</ref>(tstack2,<sp/><ref refid="test__queue__contexts_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="test__queue__contexts_8c_1a0254f78e372a9cb818cac949ef36f349" kindref="member">tdata2</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/><ref refid="test__queue__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1a44dfa584c56b3424b86a85804c539f7a" kindref="member">tqueue_append</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_queue<sp/>*pqueue)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1gad47336f27e433a52600a3b67ab89556a" kindref="member">k_queue_insert</ref>(pqueue,<sp/><ref refid="group__queue__apis_1ga27a460c42836d8b093ad9274c14bb176" kindref="member">k_queue_peek_tail</ref>(pqueue),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__queue__contexts_8c_1a16ed65a4677c81d42ffac43a046571b1" kindref="member">data</ref>[0]);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="test__queue__contexts_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1gaa84522a5ace6e7f8ba61033baca6972f" kindref="member">k_queue_append</ref>(pqueue,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__queue__contexts_8c_1a16ed65a4677c81d42ffac43a046571b1" kindref="member">data</ref>[i]);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="test__queue__contexts_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref><sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga8ce013d8a037d4be5078797e0050e9c6" kindref="member">k_queue_prepend</ref>(pqueue,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__queue__contexts_8c_1a3dd46b11def568c2c507b4b3197be6b4" kindref="member">data_p</ref>[i]);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structqdata" kindref="compound">qdata_t</ref><sp/>*head<sp/>=<sp/>&amp;<ref refid="test__queue__contexts_8c_1af0a237fc9318c39fd8d68787e243fd26" kindref="member">data_l</ref>[0],<sp/>*tail<sp/>=<sp/>&amp;<ref refid="test__queue__contexts_8c_1af0a237fc9318c39fd8d68787e243fd26" kindref="member">data_l</ref>[<ref refid="test__queue__contexts_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref><sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structqdata_1a1ae3d3014b38a4371a221fe5ec0f49fb" kindref="member">snode</ref>.next<sp/>=<sp/>(<ref refid="slist_8h_1a69bf43aad81e3ee2d55250c59b857493" kindref="member">sys_snode_t</ref><sp/>*)tail;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tail-&gt;snode.next<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga91d1a144fc2aeb3dd655accc94ca43aa" kindref="member">k_queue_append_list</ref>(pqueue,<sp/>(<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>*)head,<sp/>(<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>*)tail);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="slist_8h_1a44658c336b634c03938a251cdc8134f8" kindref="member">sys_slist_t</ref><sp/>slist;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__single-linked-list__apis_1ga913aea7661b4ab3b4b50a8efc0d70428" kindref="member">sys_slist_init</ref>(&amp;slist);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__single-linked-list__apis_1ga829fd7b6f1944dc38e10685e861e62b5" kindref="member">sys_slist_append</ref>(&amp;slist,<sp/>(<ref refid="slist_8h_1a69bf43aad81e3ee2d55250c59b857493" kindref="member">sys_snode_t</ref><sp/>*)&amp;(<ref refid="test__queue__contexts_8c_1ae1b5488d27445cf332b324baff908719" kindref="member">data_sl</ref>[0].snode));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__single-linked-list__apis_1ga829fd7b6f1944dc38e10685e861e62b5" kindref="member">sys_slist_append</ref>(&amp;slist,<sp/>(<ref refid="slist_8h_1a69bf43aad81e3ee2d55250c59b857493" kindref="member">sys_snode_t</ref><sp/>*)&amp;(<ref refid="test__queue__contexts_8c_1ae1b5488d27445cf332b324baff908719" kindref="member">data_sl</ref>[1].snode));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga4eee0da7442d60572b05d60a9996e69d" kindref="member">k_queue_merge_slist</ref>(pqueue,<sp/>&amp;slist);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1a85f68c613b07bf8abc74e5ae99b944b2" kindref="member">tqueue_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_queue<sp/>*pqueue)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*rx_data;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*get<sp/>queue<sp/>data<sp/>from<sp/>&quot;queue_prepend&quot;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__queue__contexts_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_data<sp/>=<sp/><ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get</ref>(pqueue,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rx_data,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__queue__contexts_8c_1a3dd46b11def568c2c507b4b3197be6b4" kindref="member">data_p</ref>[i],<sp/>NULL);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*get<sp/>queue<sp/>data<sp/>from<sp/>&quot;queue_append&quot;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__queue__contexts_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_data<sp/>=<sp/><ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get</ref>(pqueue,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rx_data,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__queue__contexts_8c_1a16ed65a4677c81d42ffac43a046571b1" kindref="member">data</ref>[i],<sp/>NULL);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*get<sp/>queue<sp/>data<sp/>from<sp/>&quot;queue_append_list&quot;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__queue__contexts_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_data<sp/>=<sp/><ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get</ref>(pqueue,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rx_data,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__queue__contexts_8c_1af0a237fc9318c39fd8d68787e243fd26" kindref="member">data_l</ref>[i],<sp/>NULL);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*get<sp/>queue<sp/>data<sp/>from<sp/>&quot;queue_merge_slist&quot;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__queue__contexts_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_data<sp/>=<sp/><ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get</ref>(pqueue,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rx_data,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__queue__contexts_8c_1ae1b5488d27445cf332b324baff908719" kindref="member">data_sl</ref>[i],<sp/>NULL);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*entry<sp/>of<sp/>contexts*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1ae0e226e49825e28f4c771f50ea08b23a" kindref="member">tIsr_entry_append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="kobject_8c_1a5bf2789125fcfa98cff775cb82fbd3c9" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1a44dfa584c56b3424b86a85804c539f7a" kindref="member">tqueue_append</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_queue<sp/>*)<ref refid="kobject_8c_1a5bf2789125fcfa98cff775cb82fbd3c9" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1a8b0d66e259aa27791d7ca5f81a25d259" kindref="member">tIsr_entry_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="kobject_8c_1a5bf2789125fcfa98cff775cb82fbd3c9" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1a85f68c613b07bf8abc74e5ae99b944b2" kindref="member">tqueue_get</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_queue<sp/>*)<ref refid="kobject_8c_1a5bf2789125fcfa98cff775cb82fbd3c9" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1a757b88d684794c799892d1a4c28fd86f" kindref="member">tThread_entry</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1a85f68c613b07bf8abc74e5ae99b944b2" kindref="member">tqueue_get</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_queue<sp/>*)p1);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="test__queue__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1ab254a98b97de52a17c4ddc6362f65d73" kindref="member">tqueue_thread_thread</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_queue<sp/>*pqueue)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="test__queue__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__queue__contexts_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="test__queue__contexts_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1a757b88d684794c799892d1a4c28fd86f" kindref="member">tThread_entry</ref>,<sp/>pqueue,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(0),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1a44dfa584c56b3424b86a85804c539f7a" kindref="member">tqueue_append</ref>(pqueue);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="test__queue__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga1f44bb0307bea7a97227764ecd7bf963" kindref="member">k_thread_abort</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1aa599cbeeb86a1160bb55b5a2477a91f2" kindref="member">tqueue_thread_isr</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_queue<sp/>*pqueue)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="test__queue__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="irq__offload_8h_1a429859dd7ac3d88a4b7ae858835847ce" kindref="member">irq_offload</ref>(<ref refid="test__queue__contexts_8c_1ae0e226e49825e28f4c771f50ea08b23a" kindref="member">tIsr_entry_append</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pqueue);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1a85f68c613b07bf8abc74e5ae99b944b2" kindref="member">tqueue_get</ref>(pqueue);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1adec54877c7565f8cff1dbfdef32d34c4" kindref="member">tqueue_isr_thread</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_queue<sp/>*pqueue)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="test__queue__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1a44dfa584c56b3424b86a85804c539f7a" kindref="member">tqueue_append</ref>(pqueue);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="irq__offload_8h_1a429859dd7ac3d88a4b7ae858835847ce" kindref="member">irq_offload</ref>(<ref refid="test__queue__contexts_8c_1a8b0d66e259aa27791d7ca5f81a25d259" kindref="member">tIsr_entry_get</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pqueue);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">/*test<sp/>cases*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__queue__tests_1gac2b4619b80e450b376058832ce1442af" kindref="member">test_queue_thread2thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1ab254a98b97de52a17c4ddc6362f65d73" kindref="member">tqueue_thread_thread</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1ab254a98b97de52a17c4ddc6362f65d73" kindref="member">tqueue_thread_thread</ref>(&amp;kqueue);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__queue__tests_1ga4e99828657b64f710660f7c49c79fe9f" kindref="member">test_queue_thread2isr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1aa599cbeeb86a1160bb55b5a2477a91f2" kindref="member">tqueue_thread_isr</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1aa599cbeeb86a1160bb55b5a2477a91f2" kindref="member">tqueue_thread_isr</ref>(&amp;kqueue);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__queue__tests_1gaf33994f0f39f2b46dfaf2af17ccf99fb" kindref="member">test_queue_isr2thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1adec54877c7565f8cff1dbfdef32d34c4" kindref="member">tqueue_isr_thread</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1adec54877c7565f8cff1dbfdef32d34c4" kindref="member">tqueue_isr_thread</ref>(&amp;kqueue);</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1ac0ef0e0791f8ece2e72b1eb5d8bfc525" kindref="member">tThread_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_queue<sp/>*)p1,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>)<sp/>!=<sp/>NULL,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="test__queue__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1a7885e06b644cb36d35e37e858729f7b4" kindref="member">tqueue_get_2threads</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_queue<sp/>*pqueue)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="test__queue__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__queue__contexts_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="test__queue__contexts_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1ac0ef0e0791f8ece2e72b1eb5d8bfc525" kindref="member">tThread_get</ref>,<sp/>pqueue,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(0),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="mbox_2mbox__usage_2src_2main_8c_1a86f489002d0678cfaa4ede41a18c7785" kindref="member">tid1</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__queue__contexts_8c_1a82c3f4a9aaaf6ca8f1ca77cc6666f892" kindref="member">tdata1</ref>,<sp/>tstack1,<sp/><ref refid="test__queue__contexts_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1ac0ef0e0791f8ece2e72b1eb5d8bfc525" kindref="member">tThread_get</ref>,<sp/>pqueue,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(0),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>threads<sp/>to<sp/>initialize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(10));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1gaa84522a5ace6e7f8ba61033baca6972f" kindref="member">k_queue_append</ref>(pqueue,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__queue__contexts_8c_1a16ed65a4677c81d42ffac43a046571b1" kindref="member">data</ref>[0]);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1gaa84522a5ace6e7f8ba61033baca6972f" kindref="member">k_queue_append</ref>(pqueue,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__queue__contexts_8c_1a16ed65a4677c81d42ffac43a046571b1" kindref="member">data</ref>[1]);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>threads<sp/>to<sp/>finalize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="test__queue__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="test__queue__contexts_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga1f44bb0307bea7a97227764ecd7bf963" kindref="member">k_thread_abort</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga1f44bb0307bea7a97227764ecd7bf963" kindref="member">k_thread_abort</ref>(<ref refid="mbox_2mbox__usage_2src_2main_8c_1a86f489002d0678cfaa4ede41a18c7785" kindref="member">tid1</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__queue__tests_1ga625832221d8e19245df0f01989cf680e" kindref="member">test_queue_get_2threads</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1a7885e06b644cb36d35e37e858729f7b4" kindref="member">tqueue_get_2threads</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1a9b898a57599d516394eceb8a3cf1a299" kindref="member">tqueue_alloc</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_queue<sp/>*pqueue)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga3f46c06833add2a2e0ddb7242f06702c" kindref="member">k_thread_heap_assign</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>NULL);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Alloc<sp/>append<sp/>without<sp/>resource<sp/>pool<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga690f3a1450e946d75f31b3e499d1d06a" kindref="member">k_queue_alloc_append</ref>(pqueue,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__queue__contexts_8c_1a73c4b61d5406b8c2dd4401de076fb2f9" kindref="member">data_append</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Insertion<sp/>fails<sp/>and<sp/>alloc<sp/>returns<sp/>NOMEM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__queue__apis_1ga4bff929ed1d366a06e00865a5bbe2544" kindref="member">k_queue_remove</ref>(pqueue,<sp/>&amp;<ref refid="test__queue__contexts_8c_1a73c4b61d5406b8c2dd4401de076fb2f9" kindref="member">data_append</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assign<sp/>resource<sp/>pool<sp/>of<sp/>lower<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga3f46c06833add2a2e0ddb7242f06702c" kindref="member">k_thread_heap_assign</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>&amp;mem_pool_fail);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prepend<sp/>to<sp/>the<sp/>queue,<sp/>but<sp/>fails<sp/>because<sp/>of</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>insufficient<sp/>memory</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1gacf3dba40125073c11075e5a134919f88" kindref="member">k_queue_alloc_prepend</ref>(pqueue,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__queue__contexts_8c_1adcc54aa8e4aaec95b8b32106997746d9" kindref="member">data_prepend</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__queue__apis_1ga4bff929ed1d366a06e00865a5bbe2544" kindref="member">k_queue_remove</ref>(pqueue,<sp/>&amp;<ref refid="test__queue__contexts_8c_1adcc54aa8e4aaec95b8b32106997746d9" kindref="member">data_prepend</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>element<sp/>must<sp/>be<sp/>present<sp/>in<sp/>the<sp/>queue,<sp/>as<sp/>all</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>operations<sp/>failed</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__queue__apis_1gadb2bb8088868b3c5801c72b320389ca9" kindref="member">k_queue_is_empty</ref>(pqueue),<sp/>NULL);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assign<sp/>resource<sp/>pool<sp/>of<sp/>sufficient<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga3f46c06833add2a2e0ddb7242f06702c" kindref="member">k_thread_heap_assign</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>&amp;mem_pool_pass);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__queue__apis_1gacf3dba40125073c11075e5a134919f88" kindref="member">k_queue_alloc_prepend</ref>(pqueue,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__queue__contexts_8c_1adcc54aa8e4aaec95b8b32106997746d9" kindref="member">data_prepend</ref>),</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>queue<sp/>shouldn&apos;t<sp/>be<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__queue__apis_1gadb2bb8088868b3c5801c72b320389ca9" kindref="member">k_queue_is_empty</ref>(pqueue),<sp/>NULL);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get</ref>(pqueue,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>)<sp/>!=<sp/>NULL,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__queue__tests_1gaed02bb7c545405e0dd51019037e7522b" kindref="member">test_queue_alloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>mem_pool_fail<sp/>pool<sp/>is<sp/>supposed<sp/>to<sp/>be<sp/>too<sp/>small<sp/>to</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>succeed<sp/>any<sp/>allocations,<sp/>but<sp/>in<sp/>fact<sp/>with<sp/>the<sp/>heap<sp/>backend</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>there&apos;s<sp/>some<sp/>base<sp/>minimal<sp/>memory<sp/>in<sp/>there<sp/>that<sp/>can<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Make<sp/>sure<sp/>it&apos;s<sp/>really<sp/>truly<sp/>full.</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__heap__apis_1ga22b83564e50ae6177388dfe63e32a512" kindref="member">k_heap_alloc</ref>(&amp;mem_pool_fail,<sp/>1,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>)<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1a9b898a57599d516394eceb8a3cf1a299" kindref="member">tqueue_alloc</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Does<sp/>nothing<sp/>but<sp/>read<sp/>items<sp/>out<sp/>of<sp/>the<sp/>queue<sp/>and<sp/>verify<sp/>that<sp/>they</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>are<sp/>non-null.<sp/><sp/>Two<sp/>such<sp/>threads<sp/>will<sp/>be<sp/>created.</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1a32265fda7a2a16e962bf5d4e0f4deffd" kindref="member">queue_poll_race_consume</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_queue<sp/>*<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref><sp/>=<sp/>p1;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref><sp/>=<sp/>p2;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>)<sp/>!=<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>There<sp/>was<sp/>a<sp/>historical<sp/>race<sp/>in<sp/>the<sp/>queue<sp/>internals<sp/>when<sp/>CONFIG_POLL</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>was<sp/>enabled<sp/>--<sp/>it<sp/>was<sp/>possible<sp/>to<sp/>wake<sp/>up<sp/>a<sp/>lower<sp/>priority<sp/>thread</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>with<sp/>an<sp/>insert<sp/>but<sp/>then<sp/>steal<sp/>it<sp/>with<sp/>a<sp/>higher<sp/>priority<sp/>thread</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*<sp/>before<sp/>it<sp/>got<sp/>a<sp/>chance<sp/>to<sp/>run,<sp/>and<sp/>the<sp/>lower<sp/>priority<sp/>thread<sp/>would</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*<sp/>then<sp/>return<sp/>NULL<sp/>before<sp/>its<sp/>timeout<sp/>expired.</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1a226b3bdc41d00baf8091e23c1fc7f7fc" kindref="member">test_queue_poll_race</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prio<sp/>=<sp/><ref refid="group__thread__apis_1ga3a46ed8ad2c3b12416fafe11325f82b3" kindref="member">k_thread_priority_get</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>());</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_count,<sp/>low_count;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__queue__contexts_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="test__queue__contexts_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1a32265fda7a2a16e962bf5d4e0f4deffd" kindref="member">queue_poll_race_consume</ref>,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;mid_count,<sp/>NULL,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prio<sp/>+<sp/>1,<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__queue__contexts_8c_1a82c3f4a9aaaf6ca8f1ca77cc6666f892" kindref="member">tdata1</ref>,<sp/>tstack1,<sp/><ref refid="test__queue__contexts_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1a32265fda7a2a16e962bf5d4e0f4deffd" kindref="member">queue_poll_race_consume</ref>,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;low_count,<sp/>NULL,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prio<sp/>+<sp/>2,<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Let<sp/>them<sp/>initialize<sp/>and<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(10));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Insert<sp/>two<sp/>items.<sp/><sp/>This<sp/>will<sp/>wake<sp/>up<sp/>both<sp/>threads,<sp/>but<sp/>the</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>higher<sp/>priority<sp/>thread<sp/>(tdata1)<sp/>might<sp/>(if<sp/>CONFIG_POLL)</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>consume<sp/>both.<sp/><sp/>The<sp/>lower<sp/>priority<sp/>thread<sp/>should<sp/>stay</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>asleep.</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1gaa84522a5ace6e7f8ba61033baca6972f" kindref="member">k_queue_append</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/>&amp;<ref refid="test__queue__contexts_8c_1a16ed65a4677c81d42ffac43a046571b1" kindref="member">data</ref>[0]);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1gaa84522a5ace6e7f8ba61033baca6972f" kindref="member">k_queue_append</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/>&amp;<ref refid="test__queue__contexts_8c_1a16ed65a4677c81d42ffac43a046571b1" kindref="member">data</ref>[1]);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(low_count<sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(mid_count<sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(10));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(low_count<sp/>+<sp/>mid_count<sp/>==<sp/>2,<sp/>NULL);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga1f44bb0307bea7a97227764ecd7bf963" kindref="member">k_thread_abort</ref>(&amp;<ref refid="test__queue__contexts_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga1f44bb0307bea7a97227764ecd7bf963" kindref="member">k_thread_abort</ref>(&amp;<ref refid="test__queue__contexts_8c_1a82c3f4a9aaaf6ca8f1ca77cc6666f892" kindref="member">tdata1</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QUEUE_NUM<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1a250b5cad2ec049439a5568b979bbb9aa" kindref="member">test_multiple_queues</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*define<sp/>multiple<sp/>queues*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_queue<sp/>queues[<ref refid="group__kernel__queue__tests_1ga0a1e9850c03451c0ae29e134b57b6780" kindref="member">QUEUE_NUM</ref>];</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__kernel__queue__tests_1ga0a1e9850c03451c0ae29e134b57b6780" kindref="member">QUEUE_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init</ref>(&amp;queues[i]);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Indicating<sp/>that<sp/>they<sp/>are<sp/>working*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1a44dfa584c56b3424b86a85804c539f7a" kindref="member">tqueue_append</ref>(&amp;queues[i]);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1a85f68c613b07bf8abc74e5ae99b944b2" kindref="member">tqueue_get</ref>(&amp;queues[i]);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1a8191cba6cff4c5445d122784a48a5575" kindref="member">user_access_queue_private_data</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ztest_set_fault_valid(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>try<sp/>to<sp/>access<sp/>to<sp/>private<sp/>kernel<sp/>data,<sp/>will<sp/>happen<sp/>kernel<sp/>oops<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1gadb2bb8088868b3c5801c72b320389ca9" kindref="member">k_queue_is_empty</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1a9fa8884f88d5abdbbb63f12173e38df1" kindref="member">test_access_kernel_obj_with_priv_data</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1gad47336f27e433a52600a3b67ab89556a" kindref="member">k_queue_insert</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/><ref refid="group__queue__apis_1ga27a460c42836d8b093ad9274c14bb176" kindref="member">k_queue_peek_tail</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__queue__contexts_8c_1a16ed65a4677c81d42ffac43a046571b1" kindref="member">data</ref>[0]);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__queue__contexts_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="test__queue__contexts_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,<sp/><ref refid="test__queue__contexts_8c_1a8191cba6cff4c5445d122784a48a5575" kindref="member">user_access_queue_private_data</ref>,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/>0,<sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(&amp;<ref refid="test__queue__contexts_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1a055cef14b318d00d836c86d0b07b7160" kindref="member">low_prio_wait_for_queue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_queue<sp/>*<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref><sp/>=<sp/>p1;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>*<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(*<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>==<sp/>0xccc,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>low<sp/>priority<sp/>thread<sp/>get<sp/>the<sp/>queue<sp/>data<sp/>failed<sp/>lastly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1a3ccfab1b690c0635991d590fc62a1700" kindref="member">high_prio_t1_wait_for_queue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_queue<sp/>*<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref><sp/>=<sp/>p1;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>*<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(*<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>==<sp/>0xaaa,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>highest<sp/>priority<sp/>and<sp/>waited<sp/>longest<sp/>get<sp/>the<sp/>queue<sp/>data<sp/>failed<sp/>firstly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__contexts_8c_1af4c887bb56ee3d504f02ff687d7abf57" kindref="member">high_prio_t2_wait_for_queue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_queue<sp/>*<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref><sp/>=<sp/>p1;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>*<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(*<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>==<sp/>0xbbb,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>higher<sp/>priority<sp/>and<sp/>waited<sp/>longer<sp/>get<sp/>the<sp/>queue<sp/>data<sp/>failed<sp/>secondly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__queue__tests_1ga0e791336265c0bac2f7d7a90fa92dbe3" kindref="member">test_queue_multithread_competition</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a53a6460ab46277db22e6847e69c6a8a6" kindref="member">old_prio</ref><sp/>=<sp/><ref refid="group__thread__apis_1ga3a46ed8ad2c3b12416fafe11325f82b3" kindref="member">k_thread_priority_get</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>());</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prio<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>test_data[3];</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="string_8h_1a4137694174d4ca2fad886a1db355015c" kindref="member">memset</ref>(test_data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_data));</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>prio);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__queue__apis_1gadb2bb8088868b3c5801c72b320389ca9" kindref="member">k_queue_is_empty</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>)<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Initializing<sp/>queue<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>some<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_data[0]<sp/>=<sp/>0xAAA;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_data[1]<sp/>=<sp/>0xBBB;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_data[2]<sp/>=<sp/>0xCCC;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__queue__contexts_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="test__queue__contexts_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1a055cef14b318d00d836c86d0b07b7160" kindref="member">low_prio_wait_for_queue</ref>,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prio<sp/>+<sp/>4,<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__queue__contexts_8c_1a82c3f4a9aaaf6ca8f1ca77cc6666f892" kindref="member">tdata1</ref>,<sp/>tstack1,<sp/><ref refid="test__queue__contexts_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1a3ccfab1b690c0635991d590fc62a1700" kindref="member">high_prio_t1_wait_for_queue</ref>,</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prio<sp/>+<sp/>2,<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>thread<sp/>tdata<sp/>and<sp/>tdata1<sp/>wait<sp/>more<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(10));</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__queue__contexts_8c_1a0254f78e372a9cb818cac949ef36f349" kindref="member">tdata2</ref>,<sp/>tstack2,<sp/><ref refid="test__queue__contexts_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__contexts_8c_1af4c887bb56ee3d504f02ff687d7abf57" kindref="member">high_prio_t2_wait_for_queue</ref>,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prio<sp/>+<sp/>2,<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>them<sp/>and<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(50));</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Insert<sp/>some<sp/>data<sp/>to<sp/>wake<sp/>up<sp/>thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1gaa84522a5ace6e7f8ba61033baca6972f" kindref="member">k_queue_append</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/>&amp;test_data[0]);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1gaa84522a5ace6e7f8ba61033baca6972f" kindref="member">k_queue_append</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/>&amp;test_data[1]);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1gaa84522a5ace6e7f8ba61033baca6972f" kindref="member">k_queue_append</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/>&amp;test_data[2]);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>thread<sp/>exiting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(&amp;<ref refid="test__queue__contexts_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(&amp;<ref refid="test__queue__contexts_8c_1a82c3f4a9aaaf6ca8f1ca77cc6666f892" kindref="member">tdata1</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(&amp;<ref refid="test__queue__contexts_8c_1a0254f78e372a9cb818cac949ef36f349" kindref="member">tdata2</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Revert<sp/>priority<sp/>of<sp/>the<sp/>main<sp/>thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a53a6460ab46277db22e6847e69c6a8a6" kindref="member">old_prio</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__queue__tests_1ga459dda9caedbf5d1adf693f7fcc22be7" kindref="member">test_queue_unique_append</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__queue__apis_1ga287a2d81e2e3041be1cd45164e72f127" kindref="member">k_queue_unique_append</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__queue__contexts_8c_1a16ed65a4677c81d42ffac43a046571b1" kindref="member">data</ref>[0]);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/></highlight><highlight class="stringliteral">&quot;queue<sp/>unique<sp/>append<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__queue__apis_1ga287a2d81e2e3041be1cd45164e72f127" kindref="member">k_queue_unique_append</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__queue__contexts_8c_1a16ed65a4677c81d42ffac43a046571b1" kindref="member">data</ref>[0]);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/></highlight><highlight class="stringliteral">&quot;queue<sp/>unique<sp/>append<sp/>should<sp/>fail&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__queue__apis_1ga287a2d81e2e3041be1cd45164e72f127" kindref="member">k_queue_unique_append</ref>(&amp;<ref refid="test__queue__contexts_8c_1a643b6f9660035f1e1098c9484d214bbd" kindref="member">queue</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;<ref refid="test__queue__contexts_8c_1a16ed65a4677c81d42ffac43a046571b1" kindref="member">data</ref>[1]);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/></highlight><highlight class="stringliteral">&quot;queue<sp/>unique<sp/>append<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/kernel/queue/src/test_queue_contexts.c"/>
  </compounddef>
</doxygen>
