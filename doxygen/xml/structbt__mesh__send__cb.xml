<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structbt__mesh__send__cb" kind="struct" language="C++" prot="public">
    <compoundname>bt_mesh_send_cb</compoundname>
    <includes refid="access_8h" local="no">access.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structbt__mesh__send__cb_1a2f84ef4cb2d28729cd98b844a3d25f55" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* bt_mesh_send_cb::start) (uint16_t duration, int err, void *cb_data)</definition>
        <argsstring>)(uint16_t duration, int err, void *cb_data)</argsstring>
        <name>start</name>
        <briefdescription>
<para>Handler called at the start of the transmission. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>The duration of the full transmission. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error occurring during sending. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback data, as passed to the send API. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="576" column="1" bodyfile="include/bluetooth/mesh/access.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__send__cb_1aa169dbec8c96fd41a35616c009604685" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* bt_mesh_send_cb::end) (int err, void *cb_data)</definition>
        <argsstring>)(int err, void *cb_data)</argsstring>
        <name>end</name>
        <briefdescription>
<para>Handler called at the end of the transmission. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error occurring during sending. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback data, as passed to the send API. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="582" column="1" bodyfile="include/bluetooth/mesh/access.h" bodystart="582" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Callback structure for monitoring model message sending </para>
    </detaileddescription>
    <location file="include/bluetooth/mesh/access.h" line="569" column="1" bodyfile="include/bluetooth/mesh/access.h" bodystart="569" bodyend="583"/>
    <listofallmembers>
      <member refid="structbt__mesh__send__cb_1aa169dbec8c96fd41a35616c009604685" prot="public" virt="non-virtual"><scope>bt_mesh_send_cb</scope><name>end</name></member>
      <member refid="structbt__mesh__send__cb_1a2f84ef4cb2d28729cd98b844a3d25f55" prot="public" virt="non-virtual"><scope>bt_mesh_send_cb</scope><name>start</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
