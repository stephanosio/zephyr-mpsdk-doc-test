<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__ppp" kind="group">
    <compoundname>ppp</compoundname>
    <title>PPP L2/driver Support Functions</title>
    <innerclass refid="structppp__api" prot="public">ppp_api</innerclass>
    <innerclass refid="structppp__fsm" prot="public">ppp_fsm</innerclass>
    <innerclass refid="structppp__my__option__data" prot="public">ppp_my_option_data</innerclass>
    <innerclass refid="structlcp__options" prot="public">lcp_options</innerclass>
    <innerclass refid="structipcp__options" prot="public">ipcp_options</innerclass>
    <innerclass refid="structipv6cp__options" prot="public">ipv6cp_options</innerclass>
    <innerclass refid="structppp__context" prot="public">ppp_context</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__ppp_1ga8ad7cc0d142a6e7ea82c45bec2cc3670" prot="public" static="no" strong="no">
        <type></type>
        <name>ppp_protocol_type</name>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a0b974fd7b99c28a8d06f096be1ed9cc6" prot="public">
          <name>PPP_IP</name>
          <initializer>= 0x0021</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 1332 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a0a9da56ae134b701f5a8b31c3f1c9bfe" prot="public">
          <name>PPP_IPV6</name>
          <initializer>= 0x0057</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 5072 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a25f326220ab531e93140b7c6bddd0d21" prot="public">
          <name>PPP_IPCP</name>
          <initializer>= 0x8021</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 1332 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a40b5032dabf9c697e761aa2cff0b2e44" prot="public">
          <name>PPP_ECP</name>
          <initializer>= 0x8053</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 1968 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670ab17a70f864ac04b8b52f8ca1edc4d2e0" prot="public">
          <name>PPP_IPV6CP</name>
          <initializer>= 0x8057</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 5072 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a4cdde6fe10fcfa862742751e1152887b" prot="public">
          <name>PPP_CCP</name>
          <initializer>= 0x80FD</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 1962 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a22dae8ee345f9664042eef54086f4de9" prot="public">
          <name>PPP_LCP</name>
          <initializer>= 0xc021</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 1661 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670ac66b190ff6dd0884dfba62da40ee2206" prot="public">
          <name>PPP_PAP</name>
          <initializer>= 0xc023</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 1334 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a1b311302ecabb507c34b1f77cba36f25" prot="public">
          <name>PPP_CHAP</name>
          <initializer>= 0xc223</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 1334 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a7a51ef2d8d979ded98e0aad680f1b6e2" prot="public">
          <name>PPP_EAP</name>
          <initializer>= 0xc227</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 2284 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PPP protocol types. See <ulink url="https://www.iana.org/assignments/ppp-numbers/ppp-numbers.xhtml">https://www.iana.org/assignments/ppp-numbers/ppp-numbers.xhtml</ulink> for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="75" column="1" bodyfile="include/net/ppp.h" bodystart="75" bodyend="86"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppp_1ga284e237a6323f2daffc444a73a4b8b6b" prot="public" static="no" strong="no">
        <type></type>
        <name>ppp_phase</name>
        <enumvalue id="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6babdff682a09630e713867c3241d56954d" prot="public">
          <name>PPP_DEAD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Physical-layer not ready </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6ba647d283023ee50299c1d9ca376cce4f4" prot="public">
          <name>PPP_ESTABLISH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Link is being established </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6ba0492bfbaebc3f126327c74dbe56ce76a" prot="public">
          <name>PPP_AUTH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Link authentication with peer </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6ba621902d0a6ca3efa0aa20c43c32164af" prot="public">
          <name>PPP_NETWORK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Network connection establishment </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6ba51a5c6e5d16fbb607597f0d2f6a12af7" prot="public">
          <name>PPP_RUNNING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Network running </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6bac1f10a2aa5edcb826621304de596a5b7" prot="public">
          <name>PPP_TERMINATE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Link termination </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PPP phases </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="91" column="1" bodyfile="include/net/ppp.h" bodystart="91" bodyend="104"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppp_1ga6d4283a0ae63a227933d12d42318cf7c" prot="public" static="no" strong="no">
        <type></type>
        <name>ppp_state</name>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7cacab404bd828016b38f34c8128c72c605" prot="public">
          <name>PPP_INITIAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca632204028ea5f855831924eeba5be19b" prot="public">
          <name>PPP_STARTING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca0fdfbc2f4448ad005284c319928034dd" prot="public">
          <name>PPP_CLOSED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7caca2412bb44a0304e094a75717ae59326" prot="public">
          <name>PPP_STOPPED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca23353ce5f2f06f3ed54e3490617c38fe" prot="public">
          <name>PPP_CLOSING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7cadad45283af72e570ed0acae6d35d3a9b" prot="public">
          <name>PPP_STOPPING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca5f27d2e78dae0c937de8669be1a3698e" prot="public">
          <name>PPP_REQUEST_SENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7caf3d5f2cb8bc8352ba3b9090b9b24fe69" prot="public">
          <name>PPP_ACK_RECEIVED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7caf9ada16d1bf148c67504252439e9a1d7" prot="public">
          <name>PPP_ACK_SENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca5acff74b583c0798cf4cb389d659fe0d" prot="public">
          <name>PPP_OPENED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PPP states, RFC 1661 ch. 4.2 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="109" column="1" bodyfile="include/net/ppp.h" bodystart="109" bodyend="120"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppp_1ga305eaed8ab120c7821de1618e10728cf" prot="public" static="no" strong="no">
        <type></type>
        <name>ppp_packet_type</name>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfab56e4bcefa0fea644739bd2208bdff62" prot="public">
          <name>PPP_CONFIGURE_REQ</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa54a76789e1194fdbd753f78a674e1003" prot="public">
          <name>PPP_CONFIGURE_ACK</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa013bc0c33d7afbca68ea157b33773703" prot="public">
          <name>PPP_CONFIGURE_NACK</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfacfd2485f57fcc1aea9435f70c96f7aed" prot="public">
          <name>PPP_CONFIGURE_REJ</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa0c0cc9b36c5b5b3902bddbd29fad8a9c" prot="public">
          <name>PPP_TERMINATE_REQ</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa2e434ed0e64c4620aa4d8e41de31a0f6" prot="public">
          <name>PPP_TERMINATE_ACK</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa0fd2c7adbce3dadb1d95d29bd87924aa" prot="public">
          <name>PPP_CODE_REJ</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfad0cbd4c01c071faa17b4cc2528bbeb65" prot="public">
          <name>PPP_PROTOCOL_REJ</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfaf15f00b023f761f71c8e41de6afef20b" prot="public">
          <name>PPP_ECHO_REQ</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa13f08a92a1b1ce1f7a0014fb7087a672" prot="public">
          <name>PPP_ECHO_REPLY</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfaa1ea3fb1e422c5831d587113d786c927" prot="public">
          <name>PPP_DISCARD_REQ</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PPP protocol operations from RFC 1661 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="125" column="1" bodyfile="include/net/ppp.h" bodystart="125" bodyend="137"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppp_1gac8f3d915c930d61831bcb13d6201b15c" prot="public" static="no" strong="no">
        <type></type>
        <name>lcp_option_type</name>
        <enumvalue id="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15caa702a3993d2a8f7d7878e1c6f43772d3" prot="public">
          <name>LCP_OPTION_RESERVED</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15cabedb2479b9edd3fcefe7a84d2deb41fe" prot="public">
          <name>LCP_OPTION_MRU</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Maximum-Receive-Unit </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15ca01e51712c002e5ce746d93376b4f2cef" prot="public">
          <name>LCP_OPTION_ASYNC_CTRL_CHAR_MAP</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Async-Control-Character-Map </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15cae36a806e93ebdacd7c3ad3f536c03743" prot="public">
          <name>LCP_OPTION_AUTH_PROTO</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Authentication-Protocol </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15ca3ed6d42c4b65271955a308c4e7a437a9" prot="public">
          <name>LCP_OPTION_QUALITY_PROTO</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Quality-Protocol </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15ca59c791ebec909b03a42659d08be2bcf8" prot="public">
          <name>LCP_OPTION_MAGIC_NUMBER</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Magic-Number </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15cab135e1ef16bb071e1490d77b51de3bd4" prot="public">
          <name>LCP_OPTION_PROTO_COMPRESS</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Protocol-Field-Compression </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15ca3c37fd8819b98caa7f9b3b94aff53524" prot="public">
          <name>LCP_OPTION_ADDR_CTRL_COMPRESS</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Address-and-Control-Field-Compression </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LCP option types from RFC 1661 ch. 6 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="142" column="1" bodyfile="include/net/ppp.h" bodystart="142" bodyend="165"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppp_1ga1064e3d8c6aa3d3161e399d6937162b6" prot="public" static="no" strong="no">
        <type></type>
        <name>ipcp_option_type</name>
        <enumvalue id="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a7319a35a35044ca3f5fcc1ed6460fb3b" prot="public">
          <name>IPCP_OPTION_RESERVED</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a80771bc5d12ab8dcf78f87c872b0f41b" prot="public">
          <name>IPCP_OPTION_IP_ADDRESSES</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>IP Addresses </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a3913e2668196db10d17f8d7ffa86c6a6" prot="public">
          <name>IPCP_OPTION_IP_COMP_PROTO</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>IP Compression Protocol </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a124bafb002549c2de4cb293f5e158fd9" prot="public">
          <name>IPCP_OPTION_IP_ADDRESS</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>IP Address </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6af156d53ee18de3907210c910667e8931" prot="public">
          <name>IPCP_OPTION_DNS1</name>
          <initializer>= 129</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Primary DNS Server Address </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a7d154ff3643ba4de8cf358bd81361552" prot="public">
          <name>IPCP_OPTION_NBNS1</name>
          <initializer>= 130</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Primary NBNS Server Address </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a176055a8c0483c7c8b6b0d416b676964" prot="public">
          <name>IPCP_OPTION_DNS2</name>
          <initializer>= 131</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Secondary DNS Server Address </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a3b315dc4f10305923bba2bfbe2fa05ad" prot="public">
          <name>IPCP_OPTION_NBNS2</name>
          <initializer>= 132</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Secondary NBNS Server Address </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IPCP option types from RFC 1332 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="170" column="1" bodyfile="include/net/ppp.h" bodystart="170" bodyend="195"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppp_1gaf30172a9fead40463d129a5afeaf1ac3" prot="public" static="no" strong="no">
        <type></type>
        <name>ipv6cp_option_type</name>
        <enumvalue id="group__ppp_1ggaf30172a9fead40463d129a5afeaf1ac3ac291788404cda3f6c30130d097d43858" prot="public">
          <name>IPV6CP_OPTION_RESERVED</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1ggaf30172a9fead40463d129a5afeaf1ac3a0448dc4b9a89736d6878a4e99e6e61b7" prot="public">
          <name>IPV6CP_OPTION_INTERFACE_IDENTIFIER</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interface identifier </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IPV6CP option types from RFC 5072 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="200" column="1" bodyfile="include/net/ppp.h" bodystart="200" bodyend="205"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppp_1ga360dc50a25d0c19b99a15807bc40d971" prot="public" static="no" strong="no">
        <type></type>
        <name>ppp_flags</name>
        <enumvalue id="group__ppp_1gga360dc50a25d0c19b99a15807bc40d971a78506697a8a37d20d486961501ec7715" prot="public">
          <name>PPP_CARRIER_UP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="373" column="1" bodyfile="include/net/ppp.h" bodystart="373" bodyend="375"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__ppp_1ga1ffff54da5bf3eb358e909e0962f1b05" prot="public" static="no">
        <type>void(*</type>
        <definition>net_ppp_lcp_echo_reply_cb_t</definition>
        <argsstring>)(void *user_data, size_t user_data_len)</argsstring>
        <name>net_ppp_lcp_echo_reply_cb_t</name>
        <briefdescription>
<para>A callback function that can be called if a Echo-Reply needs to be received. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>User settable data that is passed to the callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the user data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="215" column="9" bodyfile="include/net/ppp.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__ppp_1ga2854c0e59e903804df48569c894ee0cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void net_ppp_carrier_on</definition>
        <argsstring>(struct net_if *iface)</argsstring>
        <name>net_ppp_carrier_on</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Inform PPP L2 driver that carrier is detected. This happens when cable is connected etc. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>Network interface </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="531" column="6" declfile="include/net/ppp.h" declline="531" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ppp_1ga76340854ba3dfb0f4a85a9805a3137ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void net_ppp_carrier_off</definition>
        <argsstring>(struct net_if *iface)</argsstring>
        <name>net_ppp_carrier_off</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Inform PPP L2 driver that carrier was lost. This happens when cable is disconnected etc. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>Network interface </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="539" column="6" declfile="include/net/ppp.h" declline="539" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ppp_1gaabf883cfefc9910b9b9d8931e68b320c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void net_ppp_init</definition>
        <argsstring>(struct net_if *iface)</argsstring>
        <name>net_ppp_init</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Initialize PPP L2 stack for a given interface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid pointer to a network interface </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="546" column="6" declfile="include/net/ppp.h" declline="546" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ppp_1ga1436cf5cfcb6752e41c9e06a0ee30030" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppp_mgmt_raise_carrier_on_event</definition>
        <argsstring>(struct net_if *iface)</argsstring>
        <name>ppp_mgmt_raise_carrier_on_event</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Raise CARRIER_ON event when PPP is connected. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>PPP network interface. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="592" column="20" bodyfile="include/net/ppp.h" bodystart="592" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="group__ppp_1gad96b2c77cf6a066d55d78c5d63cb9bd0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppp_mgmt_raise_carrier_off_event</definition>
        <argsstring>(struct net_if *iface)</argsstring>
        <name>ppp_mgmt_raise_carrier_off_event</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Raise CARRIER_OFF event when PPP is disconnected. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>PPP network interface. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="606" column="20" bodyfile="include/net/ppp.h" bodystart="606" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="group__ppp_1ga74e94e9fcae30bc386c5e3d951ed5882" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppp_mgmt_raise_phase_running_event</definition>
        <argsstring>(struct net_if *iface)</argsstring>
        <name>ppp_mgmt_raise_phase_running_event</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Raise PHASE_RUNNING event when PPP reaching RUNNING phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>PPP network interface. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="620" column="20" bodyfile="include/net/ppp.h" bodystart="620" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="group__ppp_1gad7f41d9012098ed1a04f897e252cc32d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppp_mgmt_raise_phase_dead_event</definition>
        <argsstring>(struct net_if *iface)</argsstring>
        <name>ppp_mgmt_raise_phase_dead_event</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Raise PHASE_DEAD event when PPP reaching DEAD phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>PPP network interface. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="634" column="20" bodyfile="include/net/ppp.h" bodystart="634" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="group__ppp_1ga9893a7c93b3d23b96b4d83aa1204c500" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int net_ppp_ping</definition>
        <argsstring>(int idx, int32_t timeout)</argsstring>
        <name>net_ppp_ping</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Send PPP Echo-Request to peer. We expect to receive Echo-Reply back. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>PPP network interface index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of time to wait Echo-Reply. The value is in milliseconds.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if Echo-Reply was received, &lt; 0 if there is a timeout or network index is not a valid PPP network index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="653" column="19" bodyfile="include/net/ppp.h" bodystart="653" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="group__ppp_1ga4f6104cff735f9829762b6552a7346bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>struct <ref refid="structppp__context" kindref="compound">ppp_context</ref> *</type>
        <definition>static struct ppp_context * net_ppp_context_get</definition>
        <argsstring>(int idx)</argsstring>
        <name>net_ppp_context_get</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Get PPP context information. This is only used by net-shell to print information about PPP. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>PPP network interface index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PPP context or NULL if idx is invalid. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="673" column="32" bodyfile="include/net/ppp.h" bodystart="673" bodyend="678"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__ppp_1gaec050624f0693600196068d8f5413e6f" prot="public" static="no">
        <name>PPP_MRU</name>
        <initializer>CONFIG_NET_PPP_MTU_MRU</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PPP maximum receive unit (MRU) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="28" column="9" bodyfile="include/net/ppp.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ppp_1gacc51e91347721a8255ae891ddc43636b" prot="public" static="no">
        <name>PPP_MTU</name>
        <initializer><ref refid="group__ppp_1gaec050624f0693600196068d8f5413e6f" kindref="member">PPP_MRU</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PPP maximum transfer unit (MTU) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="31" column="9" bodyfile="include/net/ppp.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ppp_1ga2e5d0ae66bf076123cb29effc0a8e894" prot="public" static="no">
        <name>PPP_MAX_TERMINATE_REASON_LEN</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Max length of terminate description string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="34" column="9" bodyfile="include/net/ppp.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ppp_1gaad7380b3a502f4b649348b733124f21a" prot="public" static="no">
        <name>PPP_INTERFACE_IDENTIFIER_LEN</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Length of network interface identifier </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="37" column="9" bodyfile="include/net/ppp.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ppp_1ga217fc7e6ec870657a0b2aae05daa03af" prot="public" static="no">
        <name>PPP_MY_OPTION_ACKED</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="332" column="9" bodyfile="include/net/ppp.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ppp_1ga584c13078881fd9604b062210785be75" prot="public" static="no">
        <name>PPP_MY_OPTION_REJECTED</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="333" column="9" bodyfile="include/net/ppp.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ppp_1gada07a9f2122fbf911f5d35a92e858c9d" prot="public" static="no">
        <name>IPCP_NUM_MY_OPTIONS</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="364" column="9" bodyfile="include/net/ppp.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ppp_1ga580f383f3f33ba6e742a134e853b8411" prot="public" static="no">
        <name>IPV6CP_NUM_MY_OPTIONS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="371" column="9" bodyfile="include/net/ppp.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Point-to-point (PPP) L2/driver support functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
