<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__mailbox__apis" kind="group">
    <compoundname>mailbox_apis</compoundname>
    <title>Mailbox APIs</title>
    <innerclass refid="structk__mbox__msg" prot="public">k_mbox_msg</innerclass>
    <innerclass refid="structk__mbox" prot="public">k_mbox</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__mailbox__apis_1ga686f20c199a9e971822d8279d175d8c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_mbox_init</definition>
        <argsstring>(struct k_mbox *mbox)</argsstring>
        <name>k_mbox_init</name>
        <param>
          <type>struct <ref refid="structk__mbox" kindref="compound">k_mbox</ref> *</type>
          <declname>mbox</declname>
        </param>
        <briefdescription>
<para>Initialize a mailbox. </para>
        </briefdescription>
        <detaileddescription>
<para>This routine initializes a mailbox object, prior to its first use.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mbox</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the mailbox. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="4580" column="13" declfile="include/kernel.h" declline="4580" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__mailbox__apis_1gaa1e5cdd992d8b9be11f82254e1886ed2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_mbox_put</definition>
        <argsstring>(struct k_mbox *mbox, struct k_mbox_msg *tx_msg, k_timeout_t timeout)</argsstring>
        <name>k_mbox_put</name>
        <param>
          <type>struct <ref refid="structk__mbox" kindref="compound">k_mbox</ref> *</type>
          <declname>mbox</declname>
        </param>
        <param>
          <type>struct <ref refid="structk__mbox__msg" kindref="compound">k_mbox_msg</ref> *</type>
          <declname>tx_msg</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Send a mailbox message in a synchronous manner. </para>
        </briefdescription>
        <detaileddescription>
<para>This routine sends a message to <emphasis>mbox</emphasis> and waits for a receiver to both receive and process it. The message data may be in a buffer, in a memory pool block, or non-existent (i.e. an empty message).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mbox</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the mailbox. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tx_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the transmit message descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Waiting period for the message to be received, or one of the special values K_NO_WAIT and K_FOREVER. Once the message has been received, this routine waits as long as necessary for the message to be completely processed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Message sent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMSG</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned without waiting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>Waiting period timed out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="4601" column="12" declfile="include/kernel.h" declline="4601" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mailbox__apis_1gadd60f7b760371c0a141a1e4da253a0f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_mbox_async_put</definition>
        <argsstring>(struct k_mbox *mbox, struct k_mbox_msg *tx_msg, struct k_sem *sem)</argsstring>
        <name>k_mbox_async_put</name>
        <param>
          <type>struct <ref refid="structk__mbox" kindref="compound">k_mbox</ref> *</type>
          <declname>mbox</declname>
        </param>
        <param>
          <type>struct <ref refid="structk__mbox__msg" kindref="compound">k_mbox_msg</ref> *</type>
          <declname>tx_msg</declname>
        </param>
        <param>
          <type>struct k_sem *</type>
          <declname>sem</declname>
        </param>
        <briefdescription>
<para>Send a mailbox message in an asynchronous manner. </para>
        </briefdescription>
        <detaileddescription>
<para>This routine sends a message to <emphasis>mbox</emphasis> without waiting for a receiver to process it. The message data may be in a buffer, in a memory pool block, or non-existent (i.e. an empty message). Optionally, the semaphore <emphasis>sem</emphasis> will be given when the message has been both received and completely processed by the receiver.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mbox</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the mailbox. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tx_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the transmit message descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sem</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of a semaphore, or NULL if none is needed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="4617" column="13" declfile="include/kernel.h" declline="4617" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__mailbox__apis_1ga2ea91154620b139dbed1ad949b97c3ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int k_mbox_get</definition>
        <argsstring>(struct k_mbox *mbox, struct k_mbox_msg *rx_msg, void *buffer, k_timeout_t timeout)</argsstring>
        <name>k_mbox_get</name>
        <param>
          <type>struct <ref refid="structk__mbox" kindref="compound">k_mbox</ref> *</type>
          <declname>mbox</declname>
        </param>
        <param>
          <type>struct <ref refid="structk__mbox__msg" kindref="compound">k_mbox_msg</ref> *</type>
          <declname>rx_msg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Receive a mailbox message. </para>
        </briefdescription>
        <detaileddescription>
<para>This routine receives a message from <emphasis>mbox</emphasis>, then optionally retrieves its data and disposes of the message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mbox</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the mailbox. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rx_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the receive message descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the buffer to receive data, or NULL to defer data retrieval and message disposal until later. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Waiting period for a message to be received, or one of the special values K_NO_WAIT and K_FOREVER.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Message received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMSG</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned without waiting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>Waiting period timed out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="4637" column="12" declfile="include/kernel.h" declline="4637" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__mailbox__apis_1ga3d19e648e67f109609259543c9a01d6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void k_mbox_data_get</definition>
        <argsstring>(struct k_mbox_msg *rx_msg, void *buffer)</argsstring>
        <name>k_mbox_data_get</name>
        <param>
          <type>struct <ref refid="structk__mbox__msg" kindref="compound">k_mbox_msg</ref> *</type>
          <declname>rx_msg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Retrieve mailbox message data into a buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>This routine completes the processing of a received message by retrieving its data into a buffer, then disposing of the message.</para>
<para>Alternatively, this routine can be used to dispose of a received message without retrieving its data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rx_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the receive message descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the buffer to receive data, or NULL to discard the data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="4653" column="13" declfile="include/kernel.h" declline="4653" declcolumn="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__mailbox__apis_1gab55cba898db47113a06641c01f3e3714" prot="public" static="no">
        <name>K_MBOX_DEFINE</name>
        <param><defname>name</defname></param>
        <initializer>	<ref refid="group__iterable__section__apis_1gabed6642b8cc06863ce97dd536698004d" kindref="member">STRUCT_SECTION_ITERABLE</ref>(<ref refid="structk__mbox" kindref="compound">k_mbox</ref>, name) = \
		Z_MBOX_INITIALIZER(name) \</initializer>
        <briefdescription>
<para>Statically define and initialize a mailbox. </para>
        </briefdescription>
        <detaileddescription>
<para>The mailbox is to be accessed outside the module where it is defined using:</para>
<para><programlisting><codeline><highlight class="normal">extern<sp/>struct<sp/>k_mbox<sp/>&lt;name&gt;;<sp/></highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the mailbox. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="4569" column="9" bodyfile="include/kernel.h" bodystart="4569" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
