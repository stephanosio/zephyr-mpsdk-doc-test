<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="workq_2work__queue_2src_2main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes refid="stdbool_8h" local="no">stdbool.h</includes>
    <includes refid="toolchain_8h" local="no">toolchain.h</includes>
    <includes local="no">zephyr.h</includes>
    <includes refid="ztest_8h" local="no">ztest.h</includes>
    <includes local="no">tc_util.h</includes>
    <includes refid="util_8h" local="no">sys/util.h</includes>
    <incdepgraph>
      <node id="17">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="66">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="65">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="29">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="36">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="38">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="34">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="32">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="40">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="41">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="37">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="35">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="39">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="75">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="45">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="51">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="28">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="42">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="23">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="3">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="19">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="86">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="87">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="2">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="10">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="12">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="64">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="88">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="81">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="5">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="15">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/workq/work_queue/src/main.c</label>
        <link refid="workq_2work__queue_2src_2main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>alloca.h</label>
      </node>
      <node id="68">
        <label>arch/cpu.h</label>
      </node>
      <node id="31">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="30">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="43">
        <label>kernel.h</label>
      </node>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="84">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="89">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="90">
        <label>tc_util.h</label>
      </node>
      <node id="4">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structdelayed__test__item" prot="public">delayed_test_item</innerclass>
    <innerclass refid="structtriggered__test__item" prot="public">triggered_test_item</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" prot="public" static="no">
        <name>NUM_TEST_ITEMS</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="23" column="9" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="workq_2work__queue_2src_2main_8c_1a0f97bd2bd235bb7eb92ea2f7dbfa1b1a" prot="public" static="no">
        <name>WORK_ITEM_WAIT</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="25" column="9" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="workq_2work__queue_2src_2main_8c_1a978b7b8c1a612c37d5ef1ba14d382ac2" prot="public" static="no">
        <name>WORK_ITEM_WAIT_ALIGNED</name>
        <initializer>	<ref refid="time__units_8h_1a828a817b2dbade336bc9934576984490" kindref="member">k_ticks_to_ms_floor64</ref>(<ref refid="time__units_8h_1adb979ca17d5a910b2d287522256e7872" kindref="member">k_ms_to_ticks_ceil32</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1a0f97bd2bd235bb7eb92ea2f7dbfa1b1a" kindref="member">WORK_ITEM_WAIT</ref>) + _TICK_ALIGN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="28" column="9" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="workq_2work__queue_2src_2main_8c_1ad989b77e46dc9859f13f9700af7e2e54" prot="public" static="no">
        <name>SUBMIT_WAIT</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="35" column="9" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="workq_2work__queue_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" prot="public" static="no">
        <name>STACK_SIZE</name>
        <initializer>(1024 + CONFIG_TEST_EXTRA_STACKSIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="36" column="9" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="workq_2work__queue_2src_2main_8c_1ac0384d7904f136f06e4daf37ba62c388" prot="public" static="no">
        <name>CHECK_WAIT</name>
        <initializer>((<ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref> + 1) * <ref refid="workq_2work__queue_2src_2main_8c_1a978b7b8c1a612c37d5ef1ba14d382ac2" kindref="member">WORK_ITEM_WAIT_ALIGNED</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="41" column="9" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="workq_2work__queue_2src_2main_8c_1a7e3c0b8388c9881406fe0548d08124e2" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread co_op_data</definition>
        <argsstring></argsstring>
        <name>co_op_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="57" column="22" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structdelayed__test__item" kindref="compound">delayed_test_item</ref></type>
        <definition>struct delayed_test_item delayed_tests[6]</definition>
        <argsstring>[6]</argsstring>
        <name>delayed_tests</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="59" column="31" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structtriggered__test__item" kindref="compound">triggered_test_item</ref></type>
        <definition>struct triggered_test_item triggered_tests[6]</definition>
        <argsstring>[6]</argsstring>
        <name>triggered_tests</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="60" column="33" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work__queue_2src_2main_8c_1a1fb520755ca882ad157ccced4787b247" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int results[6]</definition>
        <argsstring>[6]</argsstring>
        <name>results</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="62" column="12" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work__queue_2src_2main_8c_1a78c88cb23904b3f7c569ba7710c6b68b" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int num_results</definition>
        <argsstring></argsstring>
        <name>num_results</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="63" column="12" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work__queue_2src_2main_8c_1ab9aa375810c51130b6df68b4d055c76c" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int expected_poll_result</definition>
        <argsstring></argsstring>
        <name>expected_poll_result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="64" column="12" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="workq_2work__queue_2src_2main_8c_1aea43146399d79961f9fc8020163c997d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_DEFINE</definition>
        <argsstring>(co_op_stack,(1024+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>co_op_stack</type>
        </param>
        <param>
          <type>(1024+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="56" column="8" declfile="tests/kernel/workq/work_queue/src/main.c" declline="56" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work__queue_2src_2main_8c_1a79d59599a7df302be796206c85bb7437" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void work_handler</definition>
        <argsstring>(struct k_work *work)</argsstring>
        <name>work_handler</name>
        <param>
          <type>struct <ref refid="structk__work" kindref="compound">k_work</ref> *</type>
          <declname>work</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="66" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="66" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1ga56bd582675fd5d24bdf95af73765325f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void delayed_test_items_init</definition>
        <argsstring>(void)</argsstring>
        <name>delayed_test_items_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="81" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="81" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work__queue_2src_2main_8c_1a9a7e7ea294eb1a8c7ffb5605ef607ce0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void reset_results</definition>
        <argsstring>(void)</argsstring>
        <name>reset_results</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="91" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="91" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work__queue_2src_2main_8c_1a5726516f22a2734a5948aec2541d4b7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void coop_work_main</definition>
        <argsstring>(int arg1, int arg2)</argsstring>
        <name>coop_work_main</name>
        <param>
          <type>int</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="102" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="102" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1gae8a2bfb4f07d8c5668096086409dcae2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void delayed_test_items_submit</definition>
        <argsstring>(void)</argsstring>
        <name>delayed_test_items_submit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1gace61b59575093d7442f39ccb7be686d7" kindref="member">k_work_submit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="123" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="123" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work__queue_2src_2main_8c_1ae81583bf4153f503ae208dfa1676e51f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void check_results</definition>
        <argsstring>(int num_tests)</argsstring>
        <name>check_results</name>
        <param>
          <type>int</type>
          <declname>num_tests</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="138" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="138" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1ga9d83d46d5244d4b5a814f3e1a3d54d48" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_sequence</definition>
        <argsstring>(void)</argsstring>
        <name>test_sequence</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test work queue items submission sequence. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init()</ref>, <ref refid="group__workqueue__apis_1gace61b59575093d7442f39ccb7be686d7" kindref="member">k_work_submit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="162" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="162" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work__queue_2src_2main_8c_1a644d66f98a935d3aea02689af37eba30" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void resubmit_work_handler</definition>
        <argsstring>(struct k_work *work)</argsstring>
        <name>resubmit_work_handler</name>
        <param>
          <type>struct <ref refid="structk__work" kindref="compound">k_work</ref> *</type>
          <declname>work</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="179" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="179" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1ga236d73e3b767cfbfa474a291596e2cf3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_resubmit</definition>
        <argsstring>(void)</argsstring>
        <name>test_resubmit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test work queue item resubmission. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1gace61b59575093d7442f39ccb7be686d7" kindref="member">k_work_submit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="201" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="201" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work__queue_2src_2main_8c_1adbb76f0017b21189a8f5558e6aee78e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void delayed_work_handler</definition>
        <argsstring>(struct k_work *work)</argsstring>
        <name>delayed_work_handler</name>
        <param>
          <type>struct <ref refid="structk__work" kindref="compound">k_work</ref> *</type>
          <declname>work</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="219" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="219" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1ga3e48e7639b0196e58c1bb26a6dc35722" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_delayed_init</definition>
        <argsstring>(void)</argsstring>
        <name>test_delayed_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test delayed work queue init. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1gaf484b980ae3dbbd620b96e883c4b4fe6" kindref="member">k_delayed_work_init()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="236" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="236" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work__queue_2src_2main_8c_1abd5fca9fc3a1f0cdef88a0ac1bbeb029" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void coop_delayed_work_main</definition>
        <argsstring>(int arg1, int arg2)</argsstring>
        <name>coop_delayed_work_main</name>
        <param>
          <type>int</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="247" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="247" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1gafd6912d9c788cc8c709489620885adec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_delayed_submit</definition>
        <argsstring>(void)</argsstring>
        <name>test_delayed_submit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test delayed workqueue submit. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1gaf484b980ae3dbbd620b96e883c4b4fe6" kindref="member">k_delayed_work_init()</ref>, <ref refid="group__workqueue__apis_1gabc2b985a4edddd17d1a7406d69167e0c" kindref="member">k_delayed_work_submit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="272" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="272" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work__queue_2src_2main_8c_1a6322183884a145bf541925bbbc4e0865" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void coop_delayed_work_cancel_main</definition>
        <argsstring>(int arg1, int arg2)</argsstring>
        <name>coop_delayed_work_cancel_main</name>
        <param>
          <type>int</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="289" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="289" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1gaa67eaa4b7076b9274f43c061ae4fca2a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_delayed_cancel</definition>
        <argsstring>(void)</argsstring>
        <name>test_delayed_cancel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test work queue delayed cancel. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1gaf484b980ae3dbbd620b96e883c4b4fe6" kindref="member">k_delayed_work_init()</ref>, <ref refid="group__workqueue__apis_1gabc2b985a4edddd17d1a7406d69167e0c" kindref="member">k_delayed_work_submit()</ref>, <ref refid="group__workqueue__apis_1ga00189a735a3a557118c035b7d69feeb0" kindref="member">k_delayed_work_cancel()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="308" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="308" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work__queue_2src_2main_8c_1a6698036ad1e09aae7f1f41e2da80efa8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_delayed_pending</definition>
        <argsstring>(void)</argsstring>
        <name>test_delayed_pending</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="329" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="329" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1gae9b102b051af1b53398e848f8929e6e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_delayed</definition>
        <argsstring>(void)</argsstring>
        <name>test_delayed</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test delayed work items. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1gaf484b980ae3dbbd620b96e883c4b4fe6" kindref="member">k_delayed_work_init()</ref>, <ref refid="group__workqueue__apis_1gabc2b985a4edddd17d1a7406d69167e0c" kindref="member">k_delayed_work_submit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="367" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="367" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work__queue_2src_2main_8c_1af884f0a7e15f02557fe7af8301dfefe7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void triggered_work_handler</definition>
        <argsstring>(struct k_work *work)</argsstring>
        <name>triggered_work_handler</name>
        <param>
          <type>struct <ref refid="structk__work" kindref="compound">k_work</ref> *</type>
          <declname>work</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="385" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="385" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1gab3368ab927fc96138c76997495bf6c89" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_triggered_init</definition>
        <argsstring>(void)</argsstring>
        <name>test_triggered_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test triggered work queue init. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1ga371dab33a40622bea19b07d852863443" kindref="member">k_work_poll_init()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="405" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="405" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1ga44c88148723cf8fffae2b1c2e8e092c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_triggered_submit</definition>
        <argsstring>(k_timeout_t timeout)</argsstring>
        <name>test_triggered_submit</name>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Test triggered workqueue submit. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1ga371dab33a40622bea19b07d852863443" kindref="member">k_work_poll_init()</ref>, <ref refid="group__workqueue__apis_1gad9f222e46d72c4f98739395a0c8bb4ea" kindref="member">k_work_poll_submit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="429" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="429" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1ga1002b7609aa0cb7fd190361abe388f6f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_triggered_trigger</definition>
        <argsstring>(void)</argsstring>
        <name>test_triggered_trigger</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Trigger triggered workqueue execution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="446" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="446" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1gafdfecc79d9e38715760b5e70e5e3aade" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_triggered</definition>
        <argsstring>(void)</argsstring>
        <name>test_triggered</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test triggered work items. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1ga371dab33a40622bea19b07d852863443" kindref="member">k_work_poll_init()</ref>, <ref refid="group__workqueue__apis_1gad9f222e46d72c4f98739395a0c8bb4ea" kindref="member">k_work_poll_submit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="464" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="464" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1ga2b6a9ab21d2e52dbe1d1837fc24da8b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_already_triggered</definition>
        <argsstring>(void)</argsstring>
        <name>test_already_triggered</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test already triggered work items. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1ga371dab33a40622bea19b07d852863443" kindref="member">k_work_poll_init()</ref>, <ref refid="group__workqueue__apis_1gad9f222e46d72c4f98739395a0c8bb4ea" kindref="member">k_work_poll_submit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="495" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="495" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work__queue_2src_2main_8c_1aed80fcdca298135ddf87fd0f655b6d5f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void triggered_resubmit_work_handler</definition>
        <argsstring>(struct k_work *work)</argsstring>
        <name>triggered_resubmit_work_handler</name>
        <param>
          <type>struct <ref refid="structk__work" kindref="compound">k_work</ref> *</type>
          <declname>work</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="519" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="519" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1ga5596f362f8253c09ab5ba13b90d68e29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_triggered_resubmit</definition>
        <argsstring>(void)</argsstring>
        <name>test_triggered_resubmit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test resubmission of triggered work queue item. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1ga371dab33a40622bea19b07d852863443" kindref="member">k_work_poll_init()</ref>, <ref refid="group__workqueue__apis_1gad9f222e46d72c4f98739395a0c8bb4ea" kindref="member">k_work_poll_submit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="544" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="544" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1ga7d522854b9f230a51f1dfcf259095984" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_triggered_no_wait</definition>
        <argsstring>(void)</argsstring>
        <name>test_triggered_no_wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test triggered work items with K_NO_WAIT timeout. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1ga371dab33a40622bea19b07d852863443" kindref="member">k_work_poll_init()</ref>, <ref refid="group__workqueue__apis_1gad9f222e46d72c4f98739395a0c8bb4ea" kindref="member">k_work_poll_submit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="588" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="588" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1ga5cb85fee631be547773d942d5be4dcb5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_triggered_no_wait_expired</definition>
        <argsstring>(void)</argsstring>
        <name>test_triggered_no_wait_expired</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test expired triggered work items with K_NO_WAIT timeout. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1ga371dab33a40622bea19b07d852863443" kindref="member">k_work_poll_init()</ref>, <ref refid="group__workqueue__apis_1gad9f222e46d72c4f98739395a0c8bb4ea" kindref="member">k_work_poll_submit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="619" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="619" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1ga246147159dd39cb1ddf096a503b32ed0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_triggered_wait</definition>
        <argsstring>(void)</argsstring>
        <name>test_triggered_wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test triggered work items with arbitrary timeout. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1ga371dab33a40622bea19b07d852863443" kindref="member">k_work_poll_init()</ref>, <ref refid="group__workqueue__apis_1gad9f222e46d72c4f98739395a0c8bb4ea" kindref="member">k_work_poll_submit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="647" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="647" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1gab93ae7655aed24b81115f5560215239a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_triggered_wait_expired</definition>
        <argsstring>(void)</argsstring>
        <name>test_triggered_wait_expired</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test expired triggered work items with arbitrary timeout. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1ga371dab33a40622bea19b07d852863443" kindref="member">k_work_poll_init()</ref>, <ref refid="group__workqueue__apis_1gad9f222e46d72c4f98739395a0c8bb4ea" kindref="member">k_work_poll_submit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="678" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="678" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1ga3bb6f236cd5d6cb687a6d522b72e35b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_delayed_work_define</definition>
        <argsstring>(void)</argsstring>
        <name>test_delayed_work_define</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test delayed work queue define macro. </para>
        </briefdescription>
        <detaileddescription>
<para>The macro should initialize the <ref refid="structk__delayed__work" kindref="compound">k_delayed_work</ref> exactly the same as <ref refid="group__workqueue__apis_1gaf484b980ae3dbbd620b96e883c4b4fe6" kindref="member">k_delayed_work_init</ref> does.</para>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1ga41c8a64e854c6cca3a6956079cce2826" kindref="member">K_DELAYED_WORK_DEFINE()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="714" column="6" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="714" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__workqueue__tests_1ga996792b051fc4b8a41ba93b999b2ddd2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_triggered_cancel</definition>
        <argsstring>(void)</argsstring>
        <name>test_triggered_cancel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Verify <ref refid="group__workqueue__apis_1ga2a19547d04dc1a202e80b752e3177215" kindref="member">k_work_poll_cancel()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Cancel a triggered work item repeatedly, see if it returns expected value.</para>
<para><simplesect kind="see"><para><ref refid="group__workqueue__apis_1ga2a19547d04dc1a202e80b752e3177215" kindref="member">k_work_poll_cancel()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="735" column="13" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="735" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work__queue_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_main</definition>
        <argsstring>(void)</argsstring>
        <name>test_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>test case main entry </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work_queue/src/main.c" line="760" column="6" bodyfile="tests/kernel/workq/work_queue/src/main.c" bodystart="760" bodyend="780"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdbool_8h" kindref="compound">stdbool.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>test<sp/>covers<sp/>deprecated<sp/>API.<sp/><sp/>Avoid<sp/>inappropriate<sp/>diagnostics</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>about<sp/>the<sp/>use<sp/>of<sp/>that<sp/>API.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="toolchain_8h" kindref="compound">toolchain.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__DEPRECATED_MACRO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__DEPRECATED_MACRO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztest_8h" kindref="compound">ztest.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tc_util.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="util_8h" kindref="compound">sys/util.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TEST_ITEMS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Each<sp/>work<sp/>item<sp/>takes<sp/>100ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WORK_ITEM_WAIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>In<sp/>fact,<sp/>each<sp/>work<sp/>item<sp/>could<sp/>take<sp/>up<sp/>to<sp/>this<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WORK_ITEM_WAIT_ALIGNED<sp/><sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k_ticks_to_ms_floor64(k_ms_to_ticks_ceil32(WORK_ITEM_WAIT)<sp/>+<sp/>_TICK_ALIGN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Wait<sp/>50ms<sp/>between<sp/>work<sp/>submissions,<sp/>to<sp/>ensure<sp/>co-op<sp/>and<sp/>prempt</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>preempt<sp/>thread<sp/>submit<sp/>alternatively.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUBMIT_WAIT<sp/><sp/><sp/><sp/><sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STACK_SIZE<sp/><sp/><sp/><sp/><sp/><sp/>(1024<sp/>+<sp/>CONFIG_TEST_EXTRA_STACKSIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>How<sp/>long<sp/>to<sp/>wait<sp/>for<sp/>the<sp/>full<sp/>test<sp/>suite<sp/>to<sp/>complete.<sp/><sp/>Allow<sp/>for<sp/>a</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>little<sp/>slop</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK_WAIT<sp/>((NUM_TEST_ITEMS<sp/>+<sp/>1)<sp/>*<sp/>WORK_ITEM_WAIT_ALIGNED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="structdelayed__test__item" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdelayed__test__item" kindref="compound">delayed_test_item</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdelayed__test__item_1a1c438bcd554badd05e81e65a3f8a6731" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__delayed__work" kindref="compound">k_delayed_work</ref><sp/><ref refid="structdelayed__test__item_1af9199ae37ba8ae2a1e531c00943342bc" kindref="member">work</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structtriggered__test__item" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtriggered__test__item" kindref="compound">triggered_test_item</ref><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtriggered__test__item_1a79c85da54b65e82856c5803189693c79" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_work_poll<sp/><ref refid="structtriggered__test__item_1aaacf034da390ece876f83261cc25e30f" kindref="member">work</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref><sp/><ref refid="structtriggered__test__item_1a5c63ce4390252381c5f3951ad1535060" kindref="member">signal</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__event" kindref="compound">k_poll_event</ref><sp/><ref refid="structtriggered__test__item_1a305e21fcb99ed79dbb034560bc42f118" kindref="member">event</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a9bda3e00bf96550334eadf74c9af316b" kindref="member">K_THREAD_STACK_DEFINE</ref>(co_op_stack,<sp/><ref refid="workq_2work__queue_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a7e3c0b8388c9881406fe0548d08124e2" kindref="member">co_op_data</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdelayed__test__item" kindref="compound">delayed_test_item</ref><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[<ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtriggered__test__item" kindref="compound">triggered_test_item</ref><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[<ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a1fb520755ca882ad157ccced4787b247" kindref="member">results</ref>[<ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a78c88cb23904b3f7c569ba7710c6b68b" kindref="member">num_results</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ab9aa375810c51130b6df68b4d055c76c" kindref="member">expected_poll_result</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a79d59599a7df302be796206c85bb7437" kindref="member">work_handler</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__work" kindref="compound">k_work</ref><sp/>*<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdelayed__test__item" kindref="compound">delayed_test_item</ref><sp/>*ti<sp/>=</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1gac5bc561d1bfd1bf68877fe577779bd2f" kindref="member">CONTAINER_OF</ref>(<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdelayed__test__item" kindref="compound">delayed_test_item</ref>,<sp/><ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Running<sp/>test<sp/>item<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>ti-&gt;<ref refid="structdelayed__test__item_1a1c438bcd554badd05e81e65a3f8a6731" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1a0f97bd2bd235bb7eb92ea2f7dbfa1b1a" kindref="member">WORK_ITEM_WAIT</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a1fb520755ca882ad157ccced4787b247" kindref="member">results</ref>[<ref refid="workq_2work__queue_2src_2main_8c_1a78c88cb23904b3f7c569ba7710c6b68b" kindref="member">num_results</ref>++]<sp/>=<sp/>ti-&gt;<ref refid="structdelayed__test__item_1a1c438bcd554badd05e81e65a3f8a6731" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1ga56bd582675fd5d24bdf95af73765325f" kindref="member">delayed_test_items_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[i].<ref refid="structdelayed__test__item_1a1c438bcd554badd05e81e65a3f8a6731" kindref="member">key</ref><sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf484b980ae3dbbd620b96e883c4b4fe6" kindref="member">k_delayed_work_init</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[i].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/><ref refid="workq_2work__queue_2src_2main_8c_1a79d59599a7df302be796206c85bb7437" kindref="member">work_handler</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a9a7e7ea294eb1a8c7ffb5605ef607ce0" kindref="member">reset_results</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a1fb520755ca882ad157ccced4787b247" kindref="member">results</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a78c88cb23904b3f7c569ba7710c6b68b" kindref="member">num_results</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a5726516f22a2734a5948aec2541d4b7c" kindref="member">coop_work_main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg1);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg2);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Let<sp/>the<sp/>preempt<sp/>thread<sp/>submit<sp/>the<sp/>first<sp/>work<sp/>item.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1ad989b77e46dc9859f13f9700af7e2e54" kindref="member">SUBMIT_WAIT</ref><sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Submitting<sp/>work<sp/>%d<sp/>from<sp/>coop<sp/>thread\n&quot;</highlight><highlight class="normal">,<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gabc2b985a4edddd17d1a7406d69167e0c" kindref="member">k_delayed_work_submit</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[i].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1ad989b77e46dc9859f13f9700af7e2e54" kindref="member">SUBMIT_WAIT</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1gae8a2bfb4f07d8c5668096086409dcae2" kindref="member">delayed_test_items_submit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a7e3c0b8388c9881406fe0548d08124e2" kindref="member">co_op_data</ref>,<sp/>co_op_stack,<sp/><ref refid="workq_2work__queue_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="arch__interface_8h_1af1bd193a26c6e6a8658140185cae42e1" kindref="member">k_thread_entry_t</ref>)<ref refid="workq_2work__queue_2src_2main_8c_1a5726516f22a2734a5948aec2541d4b7c" kindref="member">coop_work_main</ref>,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/><ref refid="include_2kernel_8h_1ac145d4747518572acfc8ee1579007d54" kindref="member">K_PRIO_COOP</ref>(10),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Submitting<sp/>work<sp/>%d<sp/>from<sp/>preempt<sp/>thread\n&quot;</highlight><highlight class="normal">,<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gabc2b985a4edddd17d1a7406d69167e0c" kindref="member">k_delayed_work_submit</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[i].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1ad989b77e46dc9859f13f9700af7e2e54" kindref="member">SUBMIT_WAIT</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ae81583bf4153f503ae208dfa1676e51f" kindref="member">check_results</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_tests)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1a78c88cb23904b3f7c569ba7710c6b68b" kindref="member">num_results</ref>,<sp/>num_tests,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;***<sp/>work<sp/>items<sp/>finished:<sp/>%d<sp/>(expected:<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a78c88cb23904b3f7c569ba7710c6b68b" kindref="member">num_results</ref>,<sp/>num_tests);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_tests;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1a1fb520755ca882ad157ccced4787b247" kindref="member">results</ref>[i],<sp/>i<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;***<sp/>got<sp/>result<sp/>%d<sp/>in<sp/>position<sp/>%d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(expected<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a1fb520755ca882ad157ccced4787b247" kindref="member">results</ref>[i],<sp/>i,<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1ga9d83d46d5244d4b5a814f3e1a3d54d48" kindref="member">test_sequence</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Initializing<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1ga56bd582675fd5d24bdf95af73765325f" kindref="member">delayed_test_items_init</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Submitting<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1gae8a2bfb4f07d8c5668096086409dcae2" kindref="member">delayed_test_items_submit</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Waiting<sp/>for<sp/>work<sp/>to<sp/>finish\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1ac0384d7904f136f06e4daf37ba62c388" kindref="member">CHECK_WAIT</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ae81583bf4153f503ae208dfa1676e51f" kindref="member">check_results</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a9a7e7ea294eb1a8c7ffb5605ef607ce0" kindref="member">reset_results</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a644d66f98a935d3aea02689af37eba30" kindref="member">resubmit_work_handler</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__work" kindref="compound">k_work</ref><sp/>*<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdelayed__test__item" kindref="compound">delayed_test_item</ref><sp/>*ti<sp/>=</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1gac5bc561d1bfd1bf68877fe577779bd2f" kindref="member">CONTAINER_OF</ref>(<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdelayed__test__item" kindref="compound">delayed_test_item</ref>,<sp/><ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1a0f97bd2bd235bb7eb92ea2f7dbfa1b1a" kindref="member">WORK_ITEM_WAIT</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a1fb520755ca882ad157ccced4787b247" kindref="member">results</ref>[<ref refid="workq_2work__queue_2src_2main_8c_1a78c88cb23904b3f7c569ba7710c6b68b" kindref="member">num_results</ref>++]<sp/>=<sp/>ti-&gt;<ref refid="structdelayed__test__item_1a1c438bcd554badd05e81e65a3f8a6731" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ti-&gt;<ref refid="structdelayed__test__item_1a1c438bcd554badd05e81e65a3f8a6731" kindref="member">key</ref><sp/>&lt;<sp/><ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti-&gt;<ref refid="structdelayed__test__item_1a1c438bcd554badd05e81e65a3f8a6731" kindref="member">key</ref>++;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Resubmitting<sp/>work\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gace61b59575093d7442f39ccb7be686d7" kindref="member">k_work_submit</ref>(<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1ga236d73e3b767cfbfa474a291596e2cf3" kindref="member">test_resubmit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Starting<sp/>resubmit<sp/>test\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[0].<ref refid="structdelayed__test__item_1a1c438bcd554badd05e81e65a3f8a6731" kindref="member">key</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf484b980ae3dbbd620b96e883c4b4fe6" kindref="member">k_delayed_work_init</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/><ref refid="workq_2work__queue_2src_2main_8c_1a644d66f98a935d3aea02689af37eba30" kindref="member">resubmit_work_handler</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Submitting<sp/>work\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gabc2b985a4edddd17d1a7406d69167e0c" kindref="member">k_delayed_work_submit</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Waiting<sp/>for<sp/>work<sp/>to<sp/>finish\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1ac0384d7904f136f06e4daf37ba62c388" kindref="member">CHECK_WAIT</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Checking<sp/>results\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ae81583bf4153f503ae208dfa1676e51f" kindref="member">check_results</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a9a7e7ea294eb1a8c7ffb5605ef607ce0" kindref="member">reset_results</ref>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work__queue_2src_2main_8c_1adbb76f0017b21189a8f5558e6aee78e0" kindref="member">delayed_work_handler</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__work" kindref="compound">k_work</ref><sp/>*<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdelayed__test__item" kindref="compound">delayed_test_item</ref><sp/>*ti<sp/>=</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1gac5bc561d1bfd1bf68877fe577779bd2f" kindref="member">CONTAINER_OF</ref>(<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdelayed__test__item" kindref="compound">delayed_test_item</ref>,<sp/><ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Running<sp/>delayed<sp/>test<sp/>item<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>ti-&gt;<ref refid="structdelayed__test__item_1a1c438bcd554badd05e81e65a3f8a6731" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a1fb520755ca882ad157ccced4787b247" kindref="member">results</ref>[<ref refid="workq_2work__queue_2src_2main_8c_1a78c88cb23904b3f7c569ba7710c6b68b" kindref="member">num_results</ref>++]<sp/>=<sp/>ti-&gt;<ref refid="structdelayed__test__item_1a1c438bcd554badd05e81e65a3f8a6731" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1ga3e48e7639b0196e58c1bb26a6dc35722" kindref="member">test_delayed_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[i].<ref refid="structdelayed__test__item_1a1c438bcd554badd05e81e65a3f8a6731" kindref="member">key</ref><sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf484b980ae3dbbd620b96e883c4b4fe6" kindref="member">k_delayed_work_init</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[i].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1adbb76f0017b21189a8f5558e6aee78e0" kindref="member">delayed_work_handler</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work__queue_2src_2main_8c_1abd5fca9fc3a1f0cdef88a0ac1bbeb029" kindref="member">coop_delayed_work_main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg1);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg2);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Let<sp/>the<sp/>preempt<sp/>thread<sp/>submit<sp/>the<sp/>first<sp/>work<sp/>item.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1ad989b77e46dc9859f13f9700af7e2e54" kindref="member">SUBMIT_WAIT</ref><sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Submitting<sp/>delayed<sp/>work<sp/>%d<sp/>from&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>coop<sp/>thread\n&quot;</highlight><highlight class="normal">,<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gabc2b985a4edddd17d1a7406d69167e0c" kindref="member">k_delayed_work_submit</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[i].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>((i<sp/>+<sp/>1)<sp/>*<sp/><ref refid="workq_2work__queue_2src_2main_8c_1a0f97bd2bd235bb7eb92ea2f7dbfa1b1a" kindref="member">WORK_ITEM_WAIT</ref>));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1gafd6912d9c788cc8c709489620885adec" kindref="member">test_delayed_submit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a7e3c0b8388c9881406fe0548d08124e2" kindref="member">co_op_data</ref>,<sp/>co_op_stack,<sp/><ref refid="workq_2work__queue_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="arch__interface_8h_1af1bd193a26c6e6a8658140185cae42e1" kindref="member">k_thread_entry_t</ref>)<ref refid="workq_2work__queue_2src_2main_8c_1abd5fca9fc3a1f0cdef88a0ac1bbeb029" kindref="member">coop_delayed_work_main</ref>,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/><ref refid="include_2kernel_8h_1ac145d4747518572acfc8ee1579007d54" kindref="member">K_PRIO_COOP</ref>(10),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Submitting<sp/>delayed<sp/>work<sp/>%d<sp/>from&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>preempt<sp/>thread\n&quot;</highlight><highlight class="normal">,<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1gabc2b985a4edddd17d1a7406d69167e0c" kindref="member">k_delayed_work_submit</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[i].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>((i<sp/>+<sp/>1)<sp/>*<sp/><ref refid="workq_2work__queue_2src_2main_8c_1a0f97bd2bd235bb7eb92ea2f7dbfa1b1a" kindref="member">WORK_ITEM_WAIT</ref>))<sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a6322183884a145bf541925bbbc4e0865" kindref="member">coop_delayed_work_cancel_main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2)</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg1);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg2);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gabc2b985a4edddd17d1a7406d69167e0c" kindref="member">k_delayed_work_submit</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[1].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1a0f97bd2bd235bb7eb92ea2f7dbfa1b1a" kindref="member">WORK_ITEM_WAIT</ref>));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Cancel<sp/>delayed<sp/>work<sp/>from<sp/>coop<sp/>thread\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga00189a735a3a557118c035b7d69feeb0" kindref="member">k_delayed_work_cancel</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[1].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1gaa67eaa4b7076b9274f43c061ae4fca2a" kindref="member">test_delayed_cancel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Starting<sp/>delayed<sp/>cancel<sp/>test\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gabc2b985a4edddd17d1a7406d69167e0c" kindref="member">k_delayed_work_submit</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1a0f97bd2bd235bb7eb92ea2f7dbfa1b1a" kindref="member">WORK_ITEM_WAIT</ref>));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Cancel<sp/>delayed<sp/>work<sp/>from<sp/>preempt<sp/>thread\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga00189a735a3a557118c035b7d69feeb0" kindref="member">k_delayed_work_cancel</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a7e3c0b8388c9881406fe0548d08124e2" kindref="member">co_op_data</ref>,<sp/>co_op_stack,<sp/><ref refid="workq_2work__queue_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="arch__interface_8h_1af1bd193a26c6e6a8658140185cae42e1" kindref="member">k_thread_entry_t</ref>)<ref refid="workq_2work__queue_2src_2main_8c_1a6322183884a145bf541925bbbc4e0865" kindref="member">coop_delayed_work_cancel_main</ref>,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/><ref refid="include_2kernel_8h_1a5fd4365cb6e8742e750b5e4950fb1e47" kindref="member">K_HIGHEST_THREAD_PRIO</ref>,<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Waiting<sp/>for<sp/>work<sp/>to<sp/>finish\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1a978b7b8c1a612c37d5ef1ba14d382ac2" kindref="member">WORK_ITEM_WAIT_ALIGNED</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Checking<sp/>results\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ae81583bf4153f503ae208dfa1676e51f" kindref="member">check_results</ref>(0);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a9a7e7ea294eb1a8c7ffb5605ef607ce0" kindref="member">reset_results</ref>();</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a6698036ad1e09aae7f1f41e2da80efa8" kindref="member">test_delayed_pending</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Starting<sp/>delayed<sp/>pending<sp/>test\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf484b980ae3dbbd620b96e883c4b4fe6" kindref="member">k_delayed_work_init</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/><ref refid="workq_2work__queue_2src_2main_8c_1adbb76f0017b21189a8f5558e6aee78e0" kindref="member">delayed_work_handler</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__workqueue__apis_1ga47b86afff751340829339566a9932f72" kindref="member">k_delayed_work_pending</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Check<sp/>pending<sp/>delayed<sp/>work<sp/>when<sp/>in<sp/>workqueue\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gabc2b985a4edddd17d1a7406d69167e0c" kindref="member">k_delayed_work_submit</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1ga47b86afff751340829339566a9932f72" kindref="member">k_delayed_work_pending</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(1);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__workqueue__apis_1ga47b86afff751340829339566a9932f72" kindref="member">k_delayed_work_pending</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Checking<sp/>results\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ae81583bf4153f503ae208dfa1676e51f" kindref="member">check_results</ref>(1);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a9a7e7ea294eb1a8c7ffb5605ef607ce0" kindref="member">reset_results</ref>();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Check<sp/>pending<sp/>delayed<sp/>work<sp/>with<sp/>timeout\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gabc2b985a4edddd17d1a7406d69167e0c" kindref="member">k_delayed_work_submit</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1a0f97bd2bd235bb7eb92ea2f7dbfa1b1a" kindref="member">WORK_ITEM_WAIT</ref>));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1ga47b86afff751340829339566a9932f72" kindref="member">k_delayed_work_pending</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1a978b7b8c1a612c37d5ef1ba14d382ac2" kindref="member">WORK_ITEM_WAIT_ALIGNED</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__workqueue__apis_1ga47b86afff751340829339566a9932f72" kindref="member">k_delayed_work_pending</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a555b98b924cf8df18792a660cf58d895" kindref="member">delayed_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Checking<sp/>results\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ae81583bf4153f503ae208dfa1676e51f" kindref="member">check_results</ref>(1);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a9a7e7ea294eb1a8c7ffb5605ef607ce0" kindref="member">reset_results</ref>();</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1gae9b102b051af1b53398e848f8929e6e2" kindref="member">test_delayed</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Starting<sp/>delayed<sp/>test\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Initializing<sp/>delayed<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1ga3e48e7639b0196e58c1bb26a6dc35722" kindref="member">test_delayed_init</ref>();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Submitting<sp/>delayed<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1gafd6912d9c788cc8c709489620885adec" kindref="member">test_delayed_submit</ref>();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Waiting<sp/>for<sp/>delayed<sp/>work<sp/>to<sp/>finish\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1ac0384d7904f136f06e4daf37ba62c388" kindref="member">CHECK_WAIT</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Checking<sp/>results\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ae81583bf4153f503ae208dfa1676e51f" kindref="member">check_results</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a9a7e7ea294eb1a8c7ffb5605ef607ce0" kindref="member">reset_results</ref>();</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work__queue_2src_2main_8c_1af884f0a7e15f02557fe7af8301dfefe7" kindref="member">triggered_work_handler</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__work" kindref="compound">k_work</ref><sp/>*<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>)</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtriggered__test__item" kindref="compound">triggered_test_item</ref><sp/>*ti<sp/>=</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1gac5bc561d1bfd1bf68877fe577779bd2f" kindref="member">CONTAINER_OF</ref>(<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtriggered__test__item" kindref="compound">triggered_test_item</ref>,<sp/><ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Running<sp/>triggered<sp/>test<sp/>item<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>ti-&gt;<ref refid="structtriggered__test__item_1a79c85da54b65e82856c5803189693c79" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(ti-&gt;<ref refid="structtriggered__test__item_1aaacf034da390ece876f83261cc25e30f" kindref="member">work</ref>.poll_result,<sp/><ref refid="workq_2work__queue_2src_2main_8c_1ab9aa375810c51130b6df68b4d055c76c" kindref="member">expected_poll_result</ref>,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;res<sp/>%d<sp/>expect<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>ti-&gt;<ref refid="structtriggered__test__item_1aaacf034da390ece876f83261cc25e30f" kindref="member">work</ref>.poll_result,<sp/><ref refid="workq_2work__queue_2src_2main_8c_1ab9aa375810c51130b6df68b4d055c76c" kindref="member">expected_poll_result</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a1fb520755ca882ad157ccced4787b247" kindref="member">results</ref>[<ref refid="workq_2work__queue_2src_2main_8c_1a78c88cb23904b3f7c569ba7710c6b68b" kindref="member">num_results</ref>++]<sp/>=<sp/>ti-&gt;<ref refid="structtriggered__test__item_1a79c85da54b65e82856c5803189693c79" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1gab3368ab927fc96138c76997495bf6c89" kindref="member">test_triggered_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[i].<ref refid="structtriggered__test__item_1a79c85da54b65e82856c5803189693c79" kindref="member">key</ref><sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga371dab33a40622bea19b07d852863443" kindref="member">k_work_poll_init</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[i].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1af884f0a7e15f02557fe7af8301dfefe7" kindref="member">triggered_work_handler</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gaee3090c2a912b93b6a5855e3018c3551" kindref="member">k_poll_signal_init</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[i].<ref refid="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" kindref="member">signal</ref>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gaa06bddd93a024fc5326d93187d80eb03" kindref="member">k_poll_event_init</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[i].<ref refid="structtriggered__test__item_1a305e21fcb99ed79dbb034560bc42f118" kindref="member">event</ref>,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga144d8eb34d85f6053e454410a10bf56a" kindref="member">K_POLL_TYPE_SIGNAL</ref>,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[i].<ref refid="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" kindref="member">signal</ref>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1ga44c88148723cf8fffae2b1c2e8e092c8" kindref="member">test_triggered_submit</ref>(<ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>)</highlight></codeline>
<codeline lineno="430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Submitting<sp/>triggered<sp/>work<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1gad9f222e46d72c4f98739395a0c8bb4ea" kindref="member">k_work_poll_submit</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[i].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[i].<ref refid="structtriggered__test__item_1a305e21fcb99ed79dbb034560bc42f118" kindref="member">event</ref>,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>)<sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1ga1002b7609aa0cb7fd190361abe388f6f" kindref="member">test_triggered_trigger</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Triggering<sp/>work<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__poll__apis_1gad0bf3825f828ec3ca37481bf3cbd6723" kindref="member">k_poll_signal_raise</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[i].<ref refid="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" kindref="member">signal</ref>,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1)<sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1gafdfecc79d9e38715760b5e70e5e3aade" kindref="member">test_triggered</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Starting<sp/>triggered<sp/>test\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>work<sp/>items<sp/>are<sp/>triggered,<sp/>they<sp/>should<sp/>indicate<sp/>an<sp/>event.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ab9aa375810c51130b6df68b4d055c76c" kindref="member">expected_poll_result</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Initializing<sp/>triggered<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1gab3368ab927fc96138c76997495bf6c89" kindref="member">test_triggered_init</ref>();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Submitting<sp/>triggered<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1ga44c88148723cf8fffae2b1c2e8e092c8" kindref="member">test_triggered_submit</ref>(<ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Triggering<sp/>test<sp/>items<sp/>execution\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1ga1002b7609aa0cb7fd190361abe388f6f" kindref="member">test_triggered_trigger</ref>();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Items<sp/>should<sp/>be<sp/>executed<sp/>when<sp/>we<sp/>will<sp/>be<sp/>sleeping.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1a0f97bd2bd235bb7eb92ea2f7dbfa1b1a" kindref="member">WORK_ITEM_WAIT</ref>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Checking<sp/>results\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ae81583bf4153f503ae208dfa1676e51f" kindref="member">check_results</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a9a7e7ea294eb1a8c7ffb5605ef607ce0" kindref="member">reset_results</ref>();</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1ga2b6a9ab21d2e52dbe1d1837fc24da8b6" kindref="member">test_already_triggered</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Starting<sp/>triggered<sp/>test\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>work<sp/>items<sp/>are<sp/>triggered,<sp/>they<sp/>should<sp/>indicate<sp/>an<sp/>event.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ab9aa375810c51130b6df68b4d055c76c" kindref="member">expected_poll_result</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Initializing<sp/>triggered<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1gab3368ab927fc96138c76997495bf6c89" kindref="member">test_triggered_init</ref>();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Triggering<sp/>test<sp/>items<sp/>execution\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1ga1002b7609aa0cb7fd190361abe388f6f" kindref="member">test_triggered_trigger</ref>();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Submitting<sp/>triggered<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1ga44c88148723cf8fffae2b1c2e8e092c8" kindref="member">test_triggered_submit</ref>(<ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Items<sp/>should<sp/>be<sp/>executed<sp/>when<sp/>we<sp/>will<sp/>be<sp/>sleeping.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1a0f97bd2bd235bb7eb92ea2f7dbfa1b1a" kindref="member">WORK_ITEM_WAIT</ref>);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Checking<sp/>results\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ae81583bf4153f503ae208dfa1676e51f" kindref="member">check_results</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a9a7e7ea294eb1a8c7ffb5605ef607ce0" kindref="member">reset_results</ref>();</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work__queue_2src_2main_8c_1aed80fcdca298135ddf87fd0f655b6d5f" kindref="member">triggered_resubmit_work_handler</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__work" kindref="compound">k_work</ref><sp/>*<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>)</highlight></codeline>
<codeline lineno="520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtriggered__test__item" kindref="compound">triggered_test_item</ref><sp/>*ti<sp/>=</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1gac5bc561d1bfd1bf68877fe577779bd2f" kindref="member">CONTAINER_OF</ref>(<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtriggered__test__item" kindref="compound">triggered_test_item</ref>,<sp/><ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a1fb520755ca882ad157ccced4787b247" kindref="member">results</ref>[<ref refid="workq_2work__queue_2src_2main_8c_1a78c88cb23904b3f7c569ba7710c6b68b" kindref="member">num_results</ref>++]<sp/>=<sp/>ti-&gt;<ref refid="structtriggered__test__item_1a79c85da54b65e82856c5803189693c79" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ti-&gt;<ref refid="structtriggered__test__item_1a79c85da54b65e82856c5803189693c79" kindref="member">key</ref><sp/>&lt;<sp/><ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti-&gt;<ref refid="structtriggered__test__item_1a79c85da54b65e82856c5803189693c79" kindref="member">key</ref>++;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Resubmitting<sp/>triggered<sp/>work\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga02d899d1455ae1f3f55ffe8f1ebd6994" kindref="member">k_poll_signal_reset</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[0].<ref refid="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" kindref="member">signal</ref>);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1gad9f222e46d72c4f98739395a0c8bb4ea" kindref="member">k_work_poll_submit</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[0].<ref refid="structtriggered__test__item_1a305e21fcb99ed79dbb034560bc42f118" kindref="member">event</ref>,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>)<sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1ga5596f362f8253c09ab5ba13b90d68e29" kindref="member">test_triggered_resubmit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Starting<sp/>triggered<sp/>resubmit<sp/>test\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>work<sp/>items<sp/>are<sp/>triggered,<sp/>they<sp/>should<sp/>indicate<sp/>an<sp/>event.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ab9aa375810c51130b6df68b4d055c76c" kindref="member">expected_poll_result</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[0].<ref refid="structtriggered__test__item_1a79c85da54b65e82856c5803189693c79" kindref="member">key</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga371dab33a40622bea19b07d852863443" kindref="member">k_work_poll_init</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1aed80fcdca298135ddf87fd0f655b6d5f" kindref="member">triggered_resubmit_work_handler</ref>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gaee3090c2a912b93b6a5855e3018c3551" kindref="member">k_poll_signal_init</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[0].<ref refid="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" kindref="member">signal</ref>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gaa06bddd93a024fc5326d93187d80eb03" kindref="member">k_poll_event_init</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[0].<ref refid="structtriggered__test__item_1a305e21fcb99ed79dbb034560bc42f118" kindref="member">event</ref>,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1ga144d8eb34d85f6053e454410a10bf56a" kindref="member">K_POLL_TYPE_SIGNAL</ref>,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__poll__apis_1gga36d7978872a83191dd3cc16d62165adda22874743e2f6b0f1fd55c5375732b681" kindref="member">K_POLL_MODE_NOTIFY_ONLY</ref>,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[0].<ref refid="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" kindref="member">signal</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Submitting<sp/>triggered<sp/>work\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1gad9f222e46d72c4f98739395a0c8bb4ea" kindref="member">k_work_poll_submit</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[0].<ref refid="structtriggered__test__item_1a305e21fcb99ed79dbb034560bc42f118" kindref="member">event</ref>,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>)<sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Triggering<sp/>test<sp/>item<sp/>execution<sp/>(iteration:<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__poll__apis_1gad0bf3825f828ec3ca37481bf3cbd6723" kindref="member">k_poll_signal_raise</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[0].<ref refid="test__poll_8c_1a88e5e0522432c8373efb54e842b92a69" kindref="member">signal</ref>,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1)<sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1a0f97bd2bd235bb7eb92ea2f7dbfa1b1a" kindref="member">WORK_ITEM_WAIT</ref>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Checking<sp/>results\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ae81583bf4153f503ae208dfa1676e51f" kindref="member">check_results</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a9a7e7ea294eb1a8c7ffb5605ef607ce0" kindref="member">reset_results</ref>();</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1ga7d522854b9f230a51f1dfcf259095984" kindref="member">test_triggered_no_wait</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Starting<sp/>triggered<sp/>test\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>work<sp/>items<sp/>are<sp/>triggered,<sp/>they<sp/>should<sp/>indicate<sp/>an<sp/>event.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ab9aa375810c51130b6df68b4d055c76c" kindref="member">expected_poll_result</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Initializing<sp/>triggered<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1gab3368ab927fc96138c76997495bf6c89" kindref="member">test_triggered_init</ref>();</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Triggering<sp/>test<sp/>items<sp/>execution\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1ga1002b7609aa0cb7fd190361abe388f6f" kindref="member">test_triggered_trigger</ref>();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Submitting<sp/>triggered<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1ga44c88148723cf8fffae2b1c2e8e092c8" kindref="member">test_triggered_submit</ref>(<ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Items<sp/>should<sp/>be<sp/>executed<sp/>when<sp/>we<sp/>will<sp/>be<sp/>sleeping.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1a0f97bd2bd235bb7eb92ea2f7dbfa1b1a" kindref="member">WORK_ITEM_WAIT</ref>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Checking<sp/>results\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ae81583bf4153f503ae208dfa1676e51f" kindref="member">check_results</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a9a7e7ea294eb1a8c7ffb5605ef607ce0" kindref="member">reset_results</ref>();</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1ga5cb85fee631be547773d942d5be4dcb5" kindref="member">test_triggered_no_wait_expired</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Starting<sp/>triggered<sp/>test\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>work<sp/>items<sp/>are<sp/>not<sp/>triggered,<sp/>they<sp/>should<sp/>be<sp/>marked<sp/>as<sp/>expired.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ab9aa375810c51130b6df68b4d055c76c" kindref="member">expected_poll_result</ref><sp/>=<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Initializing<sp/>triggered<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1gab3368ab927fc96138c76997495bf6c89" kindref="member">test_triggered_init</ref>();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Submitting<sp/>triggered<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1ga44c88148723cf8fffae2b1c2e8e092c8" kindref="member">test_triggered_submit</ref>(<ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Items<sp/>should<sp/>be<sp/>executed<sp/>when<sp/>we<sp/>will<sp/>be<sp/>sleeping.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1a0f97bd2bd235bb7eb92ea2f7dbfa1b1a" kindref="member">WORK_ITEM_WAIT</ref>);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Checking<sp/>results\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ae81583bf4153f503ae208dfa1676e51f" kindref="member">check_results</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a9a7e7ea294eb1a8c7ffb5605ef607ce0" kindref="member">reset_results</ref>();</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1ga246147159dd39cb1ddf096a503b32ed0" kindref="member">test_triggered_wait</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Starting<sp/>triggered<sp/>test\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>work<sp/>items<sp/>are<sp/>triggered,<sp/>they<sp/>should<sp/>indicate<sp/>an<sp/>event.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ab9aa375810c51130b6df68b4d055c76c" kindref="member">expected_poll_result</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Initializing<sp/>triggered<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1gab3368ab927fc96138c76997495bf6c89" kindref="member">test_triggered_init</ref>();</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Triggering<sp/>test<sp/>items<sp/>execution\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1ga1002b7609aa0cb7fd190361abe388f6f" kindref="member">test_triggered_trigger</ref>();</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Submitting<sp/>triggered<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1ga44c88148723cf8fffae2b1c2e8e092c8" kindref="member">test_triggered_submit</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(2<sp/>*<sp/><ref refid="workq_2work__queue_2src_2main_8c_1ad989b77e46dc9859f13f9700af7e2e54" kindref="member">SUBMIT_WAIT</ref>));</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Items<sp/>should<sp/>be<sp/>executed<sp/>when<sp/>we<sp/>will<sp/>be<sp/>sleeping.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1ad989b77e46dc9859f13f9700af7e2e54" kindref="member">SUBMIT_WAIT</ref>);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Checking<sp/>results\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ae81583bf4153f503ae208dfa1676e51f" kindref="member">check_results</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a9a7e7ea294eb1a8c7ffb5605ef607ce0" kindref="member">reset_results</ref>();</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1gab93ae7655aed24b81115f5560215239a" kindref="member">test_triggered_wait_expired</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Starting<sp/>triggered<sp/>test\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>work<sp/>items<sp/>are<sp/>not<sp/>triggered,<sp/>they<sp/>should<sp/>time<sp/>out.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ab9aa375810c51130b6df68b4d055c76c" kindref="member">expected_poll_result</ref><sp/>=<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Initializing<sp/>triggered<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1gab3368ab927fc96138c76997495bf6c89" kindref="member">test_triggered_init</ref>();</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Submitting<sp/>triggered<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1ga44c88148723cf8fffae2b1c2e8e092c8" kindref="member">test_triggered_submit</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(2<sp/>*<sp/><ref refid="workq_2work__queue_2src_2main_8c_1ad989b77e46dc9859f13f9700af7e2e54" kindref="member">SUBMIT_WAIT</ref>));</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Items<sp/>should<sp/>not<sp/>be<sp/>executed<sp/>when<sp/>we<sp/>will<sp/>be<sp/>sleeping<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1ad989b77e46dc9859f13f9700af7e2e54" kindref="member">SUBMIT_WAIT</ref>);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Checking<sp/>results<sp/>(before<sp/>timeout)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ae81583bf4153f503ae208dfa1676e51f" kindref="member">check_results</ref>(0);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Items<sp/>should<sp/>be<sp/>executed<sp/>when<sp/>we<sp/>will<sp/>be<sp/>sleeping<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1ad989b77e46dc9859f13f9700af7e2e54" kindref="member">SUBMIT_WAIT</ref><sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Checking<sp/>results<sp/>(after<sp/>timeout)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ae81583bf4153f503ae208dfa1676e51f" kindref="member">check_results</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1aff0da949098d45b907cde4c22eebc77e" kindref="member">NUM_TEST_ITEMS</ref>);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1a9a7e7ea294eb1a8c7ffb5605ef607ce0" kindref="member">reset_results</ref>();</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1ga3bb6f236cd5d6cb687a6d522b72e35b2" kindref="member">test_delayed_work_define</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__delayed__work" kindref="compound">k_delayed_work</ref><sp/>initialized_by_function<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga41c8a64e854c6cca3a6956079cce2826" kindref="member">K_DELAYED_WORK_DEFINE</ref>(initialized_by_macro,<sp/><ref refid="workq_2work__queue_2src_2main_8c_1adbb76f0017b21189a8f5558e6aee78e0" kindref="member">delayed_work_handler</ref>);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf484b980ae3dbbd620b96e883c4b4fe6" kindref="member">k_delayed_work_init</ref>(&amp;initialized_by_function,<sp/><ref refid="workq_2work__queue_2src_2main_8c_1adbb76f0017b21189a8f5558e6aee78e0" kindref="member">delayed_work_handler</ref>);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gabbfcf6345172387326d35b5d0e2bb051" kindref="member">zassert_mem_equal</ref>(&amp;initialized_by_function,<sp/>&amp;initialized_by_macro,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__delayed__work" kindref="compound">k_delayed_work</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__workqueue__tests_1ga996792b051fc4b8a41ba93b999b2ddd2" kindref="member">test_triggered_cancel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2stackprot_2src_2main_8c_1a32d6d77f170c7ee130ad8d8c32f928e1" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Starting<sp/>triggered<sp/>test\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>work<sp/>items<sp/>are<sp/>triggered,<sp/>they<sp/>should<sp/>indicate<sp/>an<sp/>event.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work__queue_2src_2main_8c_1ab9aa375810c51130b6df68b4d055c76c" kindref="member">expected_poll_result</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>Initializing<sp/>triggered<sp/>test<sp/>items\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1gab3368ab927fc96138c76997495bf6c89" kindref="member">test_triggered_init</ref>();</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__workqueue__tests_1ga44c88148723cf8fffae2b1c2e8e092c8" kindref="member">test_triggered_submit</ref>(<ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2stackprot_2src_2main_8c_1a32d6d77f170c7ee130ad8d8c32f928e1" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__workqueue__apis_1ga2a19547d04dc1a202e80b752e3177215" kindref="member">k_work_poll_cancel</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="mem__protect_2stackprot_2src_2main_8c_1a32d6d77f170c7ee130ad8d8c32f928e1" kindref="member">ret</ref><sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;triggered<sp/>cancel<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2stackprot_2src_2main_8c_1a32d6d77f170c7ee130ad8d8c32f928e1" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__workqueue__apis_1ga2a19547d04dc1a202e80b752e3177215" kindref="member">k_work_poll_cancel</ref>(&amp;<ref refid="workq_2work__queue_2src_2main_8c_1a4ff628a1694a84df2a6cbbd83c461931" kindref="member">triggered_tests</ref>[0].<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="mem__protect_2stackprot_2src_2main_8c_1a32d6d77f170c7ee130ad8d8c32f928e1" kindref="member">ret</ref><sp/>==<sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;triggered<sp/>cancel<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2stackprot_2src_2main_8c_1a32d6d77f170c7ee130ad8d8c32f928e1" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__workqueue__apis_1ga2a19547d04dc1a202e80b752e3177215" kindref="member">k_work_poll_cancel</ref>(NULL);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="mem__protect_2stackprot_2src_2main_8c_1a32d6d77f170c7ee130ad8d8c32f928e1" kindref="member">ret</ref><sp/>==<sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;triggered<sp/>cancel<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="comment">/*test<sp/>case<sp/>main<sp/>entry*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="common_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" kindref="member">test_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" kindref="member">ztest_test_suite</ref>(workqueue,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__workqueue__tests_1ga9d83d46d5244d4b5a814f3e1a3d54d48" kindref="member">test_sequence</ref>),</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__workqueue__tests_1ga236d73e3b767cfbfa474a291596e2cf3" kindref="member">test_resubmit</ref>),</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__workqueue__tests_1gae9b102b051af1b53398e848f8929e6e2" kindref="member">test_delayed</ref>),</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__workqueue__tests_1gaa67eaa4b7076b9274f43c061ae4fca2a" kindref="member">test_delayed_cancel</ref>),</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work__queue_2src_2main_8c_1a6698036ad1e09aae7f1f41e2da80efa8" kindref="member">test_delayed_pending</ref>),</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__workqueue__tests_1gafdfecc79d9e38715760b5e70e5e3aade" kindref="member">test_triggered</ref>),</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__workqueue__tests_1ga2b6a9ab21d2e52dbe1d1837fc24da8b6" kindref="member">test_already_triggered</ref>),</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__workqueue__tests_1ga5596f362f8253c09ab5ba13b90d68e29" kindref="member">test_triggered_resubmit</ref>),</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__workqueue__tests_1ga7d522854b9f230a51f1dfcf259095984" kindref="member">test_triggered_no_wait</ref>),</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__workqueue__tests_1ga5cb85fee631be547773d942d5be4dcb5" kindref="member">test_triggered_no_wait_expired</ref>),</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__workqueue__tests_1ga246147159dd39cb1ddf096a503b32ed0" kindref="member">test_triggered_wait</ref>),</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__workqueue__tests_1gab93ae7655aed24b81115f5560215239a" kindref="member">test_triggered_wait_expired</ref>),</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__workqueue__tests_1ga3bb6f236cd5d6cb687a6d522b72e35b2" kindref="member">test_delayed_work_define</ref>),</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__workqueue__tests_1ga996792b051fc4b8a41ba93b999b2ddd2" kindref="member">test_triggered_cancel</ref>)</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" kindref="member">ztest_run_test_suite</ref>(workqueue);</highlight></codeline>
<codeline lineno="780"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/kernel/workq/work_queue/src/main.c"/>
  </compounddef>
</doxygen>
