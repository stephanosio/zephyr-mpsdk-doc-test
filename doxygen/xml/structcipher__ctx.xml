<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structcipher__ctx" kind="struct" language="C++" prot="public">
    <compoundname>cipher_ctx</compoundname>
    <includes refid="cipher_8h" local="no">cipher.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structcipher__ctx_1ae3eb86d5be42450b761f89114723b682" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structcipher__ops" kindref="compound">cipher_ops</ref></type>
        <definition>struct cipher_ops cipher_ctx::ops</definition>
        <argsstring></argsstring>
        <name>ops</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Place for driver to return function pointers to be invoked per cipher operation. To be populated by crypto driver on return from begin_session() based on the algo/mode chosen by the app. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/cipher.h" line="116" column="17" bodyfile="include/crypto/cipher.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcipher__ctx_1a99c2676f8cdc9cef7222a01511f9dc3f" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
        <definition>uint8_t* cipher_ctx::bit_stream</definition>
        <argsstring></argsstring>
        <name>bit_stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/cipher.h" line="121" column="9" bodyfile="include/crypto/cipher.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcipher__ctx_1a81dfa0793e62065a247bd3d5b5bdc903" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* cipher_ctx::handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/cipher.h" line="125" column="6" bodyfile="include/crypto/cipher.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcipher__ctx_1a94aaf97ca644ede6b3f1aca165dd1ec0" prot="public" static="no" mutable="no">
        <type>union cipher_ctx::@99</type>
        <definition>union cipher_ctx::@99 cipher_ctx::key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>To be populated by the app before calling begin_session() </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/cipher.h" line="126" column="5"/>
      </memberdef>
      <memberdef kind="variable" id="structcipher__ctx_1a44842ea8ece2aaea4d757137cdb67b52" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
        <definition>const struct device* cipher_ctx::device</definition>
        <argsstring></argsstring>
        <name>device</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The device driver instance this crypto context relates to. Will be populated by the begin_session() API. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/cipher.h" line="131" column="19" bodyfile="include/crypto/cipher.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcipher__ctx_1a624cf985cf35b3aa8681c3892fd67429" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* cipher_ctx::drv_sessn_state</definition>
        <argsstring></argsstring>
        <name>drv_sessn_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If the driver supports multiple simultaneously crypto sessions, this will identify the specific driver state this crypto session relates to. Since dynamic memory allocation is not possible, it is suggested that at build time drivers allocate space for the max simultaneous sessions they intend to support. To be populated by the driver on return from begin_session(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/cipher.h" line="140" column="6" bodyfile="include/crypto/cipher.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcipher__ctx_1a0439c7f7c300a59296d353e76132c028" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* cipher_ctx::app_sessn_state</definition>
        <argsstring></argsstring>
        <name>app_sessn_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Place for the user app to put info relevant stuff for resuming when completion callback happens for async ops. Totally managed by the app. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/cipher.h" line="146" column="6" bodyfile="include/crypto/cipher.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcipher__ctx_1a3b6f3cdda6344880f3dcc3e2c8246b15" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structccm__params" kindref="compound">ccm_params</ref></type>
        <definition>struct ccm_params cipher_ctx::ccm_info</definition>
        <argsstring></argsstring>
        <name>ccm_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/cipher.h" line="153" column="17" bodyfile="include/crypto/cipher.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcipher__ctx_1a8a7b59087bd474eaad8d996e1600e757" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structctr__params" kindref="compound">ctr_params</ref></type>
        <definition>struct ctr_params cipher_ctx::ctr_info</definition>
        <argsstring></argsstring>
        <name>ctr_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/cipher.h" line="154" column="17" bodyfile="include/crypto/cipher.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcipher__ctx_1a995276020bd2ef77451d941fa3b238d2" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structgcm__params" kindref="compound">gcm_params</ref></type>
        <definition>struct gcm_params cipher_ctx::gcm_info</definition>
        <argsstring></argsstring>
        <name>gcm_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/cipher.h" line="155" column="17" bodyfile="include/crypto/cipher.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcipher__ctx_1ae39bf087a95913630046f99b5db54e63" prot="public" static="no" mutable="no">
        <type>union cipher_ctx::@100</type>
        <definition>union cipher_ctx::@100 cipher_ctx::mode_params</definition>
        <argsstring></argsstring>
        <name>mode_params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cypher mode parameters, which remain constant for all ops in a session. To be populated by the app before calling begin_session(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/cipher.h" line="156" column="13"/>
      </memberdef>
      <memberdef kind="variable" id="structcipher__ctx_1a10dbfc431a748118c186099c249ed5e4" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t cipher_ctx::keylen</definition>
        <argsstring></argsstring>
        <name>keylen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cryptographic keylength in bytes. To be populated by the app before calling begin_session() </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/cipher.h" line="161" column="11" bodyfile="include/crypto/cipher.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcipher__ctx_1a5745811b9b08e6df51f9b8f8b14ceae7" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t cipher_ctx::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>How certain fields are to be interpreted for this session. (A bitmask of CAP_* below.) To be populated by the app before calling begin_session(). An app can obtain the capability flags supported by a hw/driver by calling <ref refid="group__crypto_1gadb2c24136bb56927bb14d4cfffdd5d80" kindref="member">crypto_query_hwcaps()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/cipher.h" line="169" column="10" bodyfile="include/crypto/cipher.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Structure encoding session parameters.</para>
<para>Refer to comments for individual fields to know the contract in terms of who fills what and when w.r.t begin_session() call. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>ccm_params</label>
        <link refid="structccm__params"/>
      </node>
      <node id="1">
        <label>cipher_ctx</label>
        <link refid="structcipher__ctx"/>
        <childnode refid="2" relation="usage">
          <edgelabel>ops</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>device</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ccm_info</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>ctr_info</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>gcm_info</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>cipher_ops</label>
        <link refid="structcipher__ops"/>
        <childnode refid="1" relation="usage">
          <edgelabel>block_crypt_hndlr</edgelabel>
          <edgelabel>cbc_crypt_hndlr</edgelabel>
          <edgelabel>ccm_crypt_hndlr</edgelabel>
          <edgelabel>ctr_crypt_hndlr</edgelabel>
          <edgelabel>gcm_crypt_hndlr</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>ctr_params</label>
        <link refid="structctr__params"/>
      </node>
      <node id="3">
        <label>device</label>
        <link refid="structdevice"/>
        <childnode refid="4" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>device_state</label>
        <link refid="structdevice__state"/>
      </node>
      <node id="7">
        <label>gcm_params</label>
        <link refid="structgcm__params"/>
      </node>
    </collaborationgraph>
    <location file="include/crypto/cipher.h" line="110" column="1" bodyfile="include/crypto/cipher.h" bodystart="110" bodyend="170"/>
    <listofallmembers>
      <member refid="structcipher__ctx_1a0439c7f7c300a59296d353e76132c028" prot="public" virt="non-virtual"><scope>cipher_ctx</scope><name>app_sessn_state</name></member>
      <member refid="structcipher__ctx_1a99c2676f8cdc9cef7222a01511f9dc3f" prot="public" virt="non-virtual"><scope>cipher_ctx</scope><name>bit_stream</name></member>
      <member refid="structcipher__ctx_1a3b6f3cdda6344880f3dcc3e2c8246b15" prot="public" virt="non-virtual"><scope>cipher_ctx</scope><name>ccm_info</name></member>
      <member refid="structcipher__ctx_1a8a7b59087bd474eaad8d996e1600e757" prot="public" virt="non-virtual"><scope>cipher_ctx</scope><name>ctr_info</name></member>
      <member refid="structcipher__ctx_1a44842ea8ece2aaea4d757137cdb67b52" prot="public" virt="non-virtual"><scope>cipher_ctx</scope><name>device</name></member>
      <member refid="structcipher__ctx_1a624cf985cf35b3aa8681c3892fd67429" prot="public" virt="non-virtual"><scope>cipher_ctx</scope><name>drv_sessn_state</name></member>
      <member refid="structcipher__ctx_1a5745811b9b08e6df51f9b8f8b14ceae7" prot="public" virt="non-virtual"><scope>cipher_ctx</scope><name>flags</name></member>
      <member refid="structcipher__ctx_1a995276020bd2ef77451d941fa3b238d2" prot="public" virt="non-virtual"><scope>cipher_ctx</scope><name>gcm_info</name></member>
      <member refid="structcipher__ctx_1a81dfa0793e62065a247bd3d5b5bdc903" prot="public" virt="non-virtual"><scope>cipher_ctx</scope><name>handle</name></member>
      <member refid="structcipher__ctx_1a94aaf97ca644ede6b3f1aca165dd1ec0" prot="public" virt="non-virtual"><scope>cipher_ctx</scope><name>key</name></member>
      <member refid="structcipher__ctx_1a10dbfc431a748118c186099c249ed5e4" prot="public" virt="non-virtual"><scope>cipher_ctx</scope><name>keylen</name></member>
      <member refid="structcipher__ctx_1ae39bf087a95913630046f99b5db54e63" prot="public" virt="non-virtual"><scope>cipher_ctx</scope><name>mode_params</name></member>
      <member refid="structcipher__ctx_1ae3eb86d5be42450b761f89114723b682" prot="public" virt="non-virtual"><scope>cipher_ctx</scope><name>ops</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
