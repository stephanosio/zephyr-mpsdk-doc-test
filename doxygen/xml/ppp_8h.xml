<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="ppp_8h" kind="file" language="C++">
    <compoundname>ppp.h</compoundname>
    <includes refid="net__if_8h" local="no">net/net_if.h</includes>
    <includes refid="net__pkt_8h" local="no">net/net_pkt.h</includes>
    <includes refid="net__stats_8h" local="no">net/net_stats.h</includes>
    <includes refid="net__mgmt_8h" local="no">net/net_mgmt.h</includes>
    <incdepgraph>
      <node id="17">
        <label>logging/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>logging/log_core.h</label>
        <link refid="include_2logging_2log__core_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>logging/log_instance.h</label>
        <link refid="log__instance_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>logging/log_msg.h</label>
        <link refid="log__msg_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>logging/log_msg2.h</label>
        <link refid="include_2logging_2log__msg2_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>net/buf.h</label>
        <link refid="net_2buf_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>net/capture.h</label>
        <link refid="capture_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>net/ethernet_vlan.h</label>
        <link refid="ethernet__vlan_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>net/hostname.h</label>
        <link refid="hostname_8h"/>
      </node>
      <node id="57">
        <label>net/net_context.h</label>
        <link refid="net__context_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>net/net_core.h</label>
        <link refid="net__core_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>net/net_event.h</label>
        <link refid="net__event_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>net/net_if.h</label>
        <link refid="net__if_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>net/net_ip.h</label>
        <link refid="net__ip_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>net/net_l2.h</label>
        <link refid="net__l2_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>net/net_linkaddr.h</label>
        <link refid="net__linkaddr_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>net/net_mgmt.h</label>
        <link refid="net__mgmt_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>net/net_pkt.h</label>
        <link refid="net__pkt_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>net/net_stats.h</label>
        <link refid="net__stats_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>net/net_timeout.h</label>
        <link refid="net__timeout_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/net/ppp.h</label>
        <link refid="ppp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>net/ptp_time.h</label>
        <link refid="ptp__time_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="46">
        <label>sys/byteorder.h</label>
        <link refid="byteorder_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sys/cbprintf.h</label>
        <link refid="cbprintf_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>sys/cbprintf_cxx.h</label>
        <link refid="cbprintf__cxx_8h"/>
      </node>
      <node id="28">
        <label>sys/cbprintf_internal.h</label>
        <link refid="cbprintf__internal_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/mpsc_packet.h</label>
        <link refid="mpsc__packet_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="9">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="12">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="6">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="13">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="27">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>syscalls/log_core.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__core_8h"/>
      </node>
      <node id="34">
        <label>syscalls/log_msg2.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__msg2_8h"/>
      </node>
      <node id="33">
        <label>alloca.h</label>
      </node>
      <node id="3">
        <label>device.h</label>
      </node>
      <node id="40">
        <label>kernel.h</label>
      </node>
      <node id="26">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="35">
        <label>syscall.h</label>
      </node>
      <node id="31">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="55">
        <label>syscalls/net_if.h</label>
      </node>
      <node id="47">
        <label>syscalls/net_ip.h</label>
      </node>
      <node id="50">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structppp__api" prot="public">ppp_api</innerclass>
    <innerclass refid="structppp__fsm" prot="public">ppp_fsm</innerclass>
    <innerclass refid="structppp__my__option__data" prot="public">ppp_my_option_data</innerclass>
    <innerclass refid="structlcp__options" prot="public">lcp_options</innerclass>
    <innerclass refid="structipcp__options" prot="public">ipcp_options</innerclass>
    <innerclass refid="structipv6cp__options" prot="public">ipv6cp_options</innerclass>
    <innerclass refid="structppp__context" prot="public">ppp_context</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__ppp_1gaec050624f0693600196068d8f5413e6f" prot="public" static="no">
        <name>PPP_MRU</name>
        <initializer>CONFIG_NET_PPP_MTU_MRU</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PPP maximum receive unit (MRU) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="28" column="9" bodyfile="include/net/ppp.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ppp_1gacc51e91347721a8255ae891ddc43636b" prot="public" static="no">
        <name>PPP_MTU</name>
        <initializer><ref refid="group__ppp_1gaec050624f0693600196068d8f5413e6f" kindref="member">PPP_MRU</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PPP maximum transfer unit (MTU) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="31" column="9" bodyfile="include/net/ppp.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ppp_1ga2e5d0ae66bf076123cb29effc0a8e894" prot="public" static="no">
        <name>PPP_MAX_TERMINATE_REASON_LEN</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Max length of terminate description string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="34" column="9" bodyfile="include/net/ppp.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ppp_1gaad7380b3a502f4b649348b733124f21a" prot="public" static="no">
        <name>PPP_INTERFACE_IDENTIFIER_LEN</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Length of network interface identifier </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="37" column="9" bodyfile="include/net/ppp.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ppp_1ga217fc7e6ec870657a0b2aae05daa03af" prot="public" static="no">
        <name>PPP_MY_OPTION_ACKED</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="332" column="9" bodyfile="include/net/ppp.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ppp_1ga584c13078881fd9604b062210785be75" prot="public" static="no">
        <name>PPP_MY_OPTION_REJECTED</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="333" column="9" bodyfile="include/net/ppp.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ppp_1gada07a9f2122fbf911f5d35a92e858c9d" prot="public" static="no">
        <name>IPCP_NUM_MY_OPTIONS</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="364" column="9" bodyfile="include/net/ppp.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ppp_1ga580f383f3f33ba6e742a134e853b8411" prot="public" static="no">
        <name>IPV6CP_NUM_MY_OPTIONS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="371" column="9" bodyfile="include/net/ppp.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__ppp_1ga8ad7cc0d142a6e7ea82c45bec2cc3670" prot="public" static="no" strong="no">
        <type></type>
        <name>ppp_protocol_type</name>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a0b974fd7b99c28a8d06f096be1ed9cc6" prot="public">
          <name>PPP_IP</name>
          <initializer>= 0x0021</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 1332 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a0a9da56ae134b701f5a8b31c3f1c9bfe" prot="public">
          <name>PPP_IPV6</name>
          <initializer>= 0x0057</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 5072 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a25f326220ab531e93140b7c6bddd0d21" prot="public">
          <name>PPP_IPCP</name>
          <initializer>= 0x8021</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 1332 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a40b5032dabf9c697e761aa2cff0b2e44" prot="public">
          <name>PPP_ECP</name>
          <initializer>= 0x8053</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 1968 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670ab17a70f864ac04b8b52f8ca1edc4d2e0" prot="public">
          <name>PPP_IPV6CP</name>
          <initializer>= 0x8057</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 5072 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a4cdde6fe10fcfa862742751e1152887b" prot="public">
          <name>PPP_CCP</name>
          <initializer>= 0x80FD</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 1962 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a22dae8ee345f9664042eef54086f4de9" prot="public">
          <name>PPP_LCP</name>
          <initializer>= 0xc021</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 1661 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670ac66b190ff6dd0884dfba62da40ee2206" prot="public">
          <name>PPP_PAP</name>
          <initializer>= 0xc023</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 1334 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a1b311302ecabb507c34b1f77cba36f25" prot="public">
          <name>PPP_CHAP</name>
          <initializer>= 0xc223</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 1334 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a7a51ef2d8d979ded98e0aad680f1b6e2" prot="public">
          <name>PPP_EAP</name>
          <initializer>= 0xc227</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RFC 2284 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PPP protocol types. See <ulink url="https://www.iana.org/assignments/ppp-numbers/ppp-numbers.xhtml">https://www.iana.org/assignments/ppp-numbers/ppp-numbers.xhtml</ulink> for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="75" column="1" bodyfile="include/net/ppp.h" bodystart="75" bodyend="86"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppp_1ga284e237a6323f2daffc444a73a4b8b6b" prot="public" static="no" strong="no">
        <type></type>
        <name>ppp_phase</name>
        <enumvalue id="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6babdff682a09630e713867c3241d56954d" prot="public">
          <name>PPP_DEAD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Physical-layer not ready </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6ba647d283023ee50299c1d9ca376cce4f4" prot="public">
          <name>PPP_ESTABLISH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Link is being established </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6ba0492bfbaebc3f126327c74dbe56ce76a" prot="public">
          <name>PPP_AUTH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Link authentication with peer </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6ba621902d0a6ca3efa0aa20c43c32164af" prot="public">
          <name>PPP_NETWORK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Network connection establishment </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6ba51a5c6e5d16fbb607597f0d2f6a12af7" prot="public">
          <name>PPP_RUNNING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Network running </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6bac1f10a2aa5edcb826621304de596a5b7" prot="public">
          <name>PPP_TERMINATE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Link termination </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PPP phases </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="91" column="1" bodyfile="include/net/ppp.h" bodystart="91" bodyend="104"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppp_1ga6d4283a0ae63a227933d12d42318cf7c" prot="public" static="no" strong="no">
        <type></type>
        <name>ppp_state</name>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7cacab404bd828016b38f34c8128c72c605" prot="public">
          <name>PPP_INITIAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca632204028ea5f855831924eeba5be19b" prot="public">
          <name>PPP_STARTING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca0fdfbc2f4448ad005284c319928034dd" prot="public">
          <name>PPP_CLOSED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7caca2412bb44a0304e094a75717ae59326" prot="public">
          <name>PPP_STOPPED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca23353ce5f2f06f3ed54e3490617c38fe" prot="public">
          <name>PPP_CLOSING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7cadad45283af72e570ed0acae6d35d3a9b" prot="public">
          <name>PPP_STOPPING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca5f27d2e78dae0c937de8669be1a3698e" prot="public">
          <name>PPP_REQUEST_SENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7caf3d5f2cb8bc8352ba3b9090b9b24fe69" prot="public">
          <name>PPP_ACK_RECEIVED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7caf9ada16d1bf148c67504252439e9a1d7" prot="public">
          <name>PPP_ACK_SENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca5acff74b583c0798cf4cb389d659fe0d" prot="public">
          <name>PPP_OPENED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PPP states, RFC 1661 ch. 4.2 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="109" column="1" bodyfile="include/net/ppp.h" bodystart="109" bodyend="120"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppp_1ga305eaed8ab120c7821de1618e10728cf" prot="public" static="no" strong="no">
        <type></type>
        <name>ppp_packet_type</name>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfab56e4bcefa0fea644739bd2208bdff62" prot="public">
          <name>PPP_CONFIGURE_REQ</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa54a76789e1194fdbd753f78a674e1003" prot="public">
          <name>PPP_CONFIGURE_ACK</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa013bc0c33d7afbca68ea157b33773703" prot="public">
          <name>PPP_CONFIGURE_NACK</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfacfd2485f57fcc1aea9435f70c96f7aed" prot="public">
          <name>PPP_CONFIGURE_REJ</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa0c0cc9b36c5b5b3902bddbd29fad8a9c" prot="public">
          <name>PPP_TERMINATE_REQ</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa2e434ed0e64c4620aa4d8e41de31a0f6" prot="public">
          <name>PPP_TERMINATE_ACK</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa0fd2c7adbce3dadb1d95d29bd87924aa" prot="public">
          <name>PPP_CODE_REJ</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfad0cbd4c01c071faa17b4cc2528bbeb65" prot="public">
          <name>PPP_PROTOCOL_REJ</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfaf15f00b023f761f71c8e41de6afef20b" prot="public">
          <name>PPP_ECHO_REQ</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa13f08a92a1b1ce1f7a0014fb7087a672" prot="public">
          <name>PPP_ECHO_REPLY</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga305eaed8ab120c7821de1618e10728cfaa1ea3fb1e422c5831d587113d786c927" prot="public">
          <name>PPP_DISCARD_REQ</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PPP protocol operations from RFC 1661 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="125" column="1" bodyfile="include/net/ppp.h" bodystart="125" bodyend="137"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppp_1gac8f3d915c930d61831bcb13d6201b15c" prot="public" static="no" strong="no">
        <type></type>
        <name>lcp_option_type</name>
        <enumvalue id="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15caa702a3993d2a8f7d7878e1c6f43772d3" prot="public">
          <name>LCP_OPTION_RESERVED</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15cabedb2479b9edd3fcefe7a84d2deb41fe" prot="public">
          <name>LCP_OPTION_MRU</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Maximum-Receive-Unit </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15ca01e51712c002e5ce746d93376b4f2cef" prot="public">
          <name>LCP_OPTION_ASYNC_CTRL_CHAR_MAP</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Async-Control-Character-Map </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15cae36a806e93ebdacd7c3ad3f536c03743" prot="public">
          <name>LCP_OPTION_AUTH_PROTO</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Authentication-Protocol </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15ca3ed6d42c4b65271955a308c4e7a437a9" prot="public">
          <name>LCP_OPTION_QUALITY_PROTO</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Quality-Protocol </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15ca59c791ebec909b03a42659d08be2bcf8" prot="public">
          <name>LCP_OPTION_MAGIC_NUMBER</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Magic-Number </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15cab135e1ef16bb071e1490d77b51de3bd4" prot="public">
          <name>LCP_OPTION_PROTO_COMPRESS</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Protocol-Field-Compression </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15ca3c37fd8819b98caa7f9b3b94aff53524" prot="public">
          <name>LCP_OPTION_ADDR_CTRL_COMPRESS</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Address-and-Control-Field-Compression </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LCP option types from RFC 1661 ch. 6 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="142" column="1" bodyfile="include/net/ppp.h" bodystart="142" bodyend="165"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppp_1ga1064e3d8c6aa3d3161e399d6937162b6" prot="public" static="no" strong="no">
        <type></type>
        <name>ipcp_option_type</name>
        <enumvalue id="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a7319a35a35044ca3f5fcc1ed6460fb3b" prot="public">
          <name>IPCP_OPTION_RESERVED</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a80771bc5d12ab8dcf78f87c872b0f41b" prot="public">
          <name>IPCP_OPTION_IP_ADDRESSES</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>IP Addresses </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a3913e2668196db10d17f8d7ffa86c6a6" prot="public">
          <name>IPCP_OPTION_IP_COMP_PROTO</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>IP Compression Protocol </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a124bafb002549c2de4cb293f5e158fd9" prot="public">
          <name>IPCP_OPTION_IP_ADDRESS</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>IP Address </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6af156d53ee18de3907210c910667e8931" prot="public">
          <name>IPCP_OPTION_DNS1</name>
          <initializer>= 129</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Primary DNS Server Address </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a7d154ff3643ba4de8cf358bd81361552" prot="public">
          <name>IPCP_OPTION_NBNS1</name>
          <initializer>= 130</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Primary NBNS Server Address </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a176055a8c0483c7c8b6b0d416b676964" prot="public">
          <name>IPCP_OPTION_DNS2</name>
          <initializer>= 131</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Secondary DNS Server Address </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a3b315dc4f10305923bba2bfbe2fa05ad" prot="public">
          <name>IPCP_OPTION_NBNS2</name>
          <initializer>= 132</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Secondary NBNS Server Address </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IPCP option types from RFC 1332 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="170" column="1" bodyfile="include/net/ppp.h" bodystart="170" bodyend="195"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppp_1gaf30172a9fead40463d129a5afeaf1ac3" prot="public" static="no" strong="no">
        <type></type>
        <name>ipv6cp_option_type</name>
        <enumvalue id="group__ppp_1ggaf30172a9fead40463d129a5afeaf1ac3ac291788404cda3f6c30130d097d43858" prot="public">
          <name>IPV6CP_OPTION_RESERVED</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppp_1ggaf30172a9fead40463d129a5afeaf1ac3a0448dc4b9a89736d6878a4e99e6e61b7" prot="public">
          <name>IPV6CP_OPTION_INTERFACE_IDENTIFIER</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interface identifier </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IPV6CP option types from RFC 5072 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="200" column="1" bodyfile="include/net/ppp.h" bodystart="200" bodyend="205"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppp_1ga360dc50a25d0c19b99a15807bc40d971" prot="public" static="no" strong="no">
        <type></type>
        <name>ppp_flags</name>
        <enumvalue id="group__ppp_1gga360dc50a25d0c19b99a15807bc40d971a78506697a8a37d20d486961501ec7715" prot="public">
          <name>PPP_CARRIER_UP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="373" column="1" bodyfile="include/net/ppp.h" bodystart="373" bodyend="375"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__ppp_1ga1ffff54da5bf3eb358e909e0962f1b05" prot="public" static="no">
        <type>void(*</type>
        <definition>net_ppp_lcp_echo_reply_cb_t</definition>
        <argsstring>)(void *user_data, size_t user_data_len)</argsstring>
        <name>net_ppp_lcp_echo_reply_cb_t</name>
        <briefdescription>
<para>A callback function that can be called if a Echo-Reply needs to be received. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>User settable data that is passed to the callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the user data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="215" column="9" bodyfile="include/net/ppp.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__ppp_1ga2854c0e59e903804df48569c894ee0cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void net_ppp_carrier_on</definition>
        <argsstring>(struct net_if *iface)</argsstring>
        <name>net_ppp_carrier_on</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Inform PPP L2 driver that carrier is detected. This happens when cable is connected etc. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>Network interface </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="531" column="6" declfile="include/net/ppp.h" declline="531" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ppp_1ga76340854ba3dfb0f4a85a9805a3137ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void net_ppp_carrier_off</definition>
        <argsstring>(struct net_if *iface)</argsstring>
        <name>net_ppp_carrier_off</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Inform PPP L2 driver that carrier was lost. This happens when cable is disconnected etc. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>Network interface </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="539" column="6" declfile="include/net/ppp.h" declline="539" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ppp_1gaabf883cfefc9910b9b9d8931e68b320c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void net_ppp_init</definition>
        <argsstring>(struct net_if *iface)</argsstring>
        <name>net_ppp_init</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Initialize PPP L2 stack for a given interface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid pointer to a network interface </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="546" column="6" declfile="include/net/ppp.h" declline="546" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ppp_1ga1436cf5cfcb6752e41c9e06a0ee30030" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppp_mgmt_raise_carrier_on_event</definition>
        <argsstring>(struct net_if *iface)</argsstring>
        <name>ppp_mgmt_raise_carrier_on_event</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Raise CARRIER_ON event when PPP is connected. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>PPP network interface. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="592" column="20" bodyfile="include/net/ppp.h" bodystart="592" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="group__ppp_1gad96b2c77cf6a066d55d78c5d63cb9bd0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppp_mgmt_raise_carrier_off_event</definition>
        <argsstring>(struct net_if *iface)</argsstring>
        <name>ppp_mgmt_raise_carrier_off_event</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Raise CARRIER_OFF event when PPP is disconnected. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>PPP network interface. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="606" column="20" bodyfile="include/net/ppp.h" bodystart="606" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="group__ppp_1ga74e94e9fcae30bc386c5e3d951ed5882" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppp_mgmt_raise_phase_running_event</definition>
        <argsstring>(struct net_if *iface)</argsstring>
        <name>ppp_mgmt_raise_phase_running_event</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Raise PHASE_RUNNING event when PPP reaching RUNNING phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>PPP network interface. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="620" column="20" bodyfile="include/net/ppp.h" bodystart="620" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="group__ppp_1gad7f41d9012098ed1a04f897e252cc32d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppp_mgmt_raise_phase_dead_event</definition>
        <argsstring>(struct net_if *iface)</argsstring>
        <name>ppp_mgmt_raise_phase_dead_event</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Raise PHASE_DEAD event when PPP reaching DEAD phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>PPP network interface. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="634" column="20" bodyfile="include/net/ppp.h" bodystart="634" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="group__ppp_1ga9893a7c93b3d23b96b4d83aa1204c500" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int net_ppp_ping</definition>
        <argsstring>(int idx, int32_t timeout)</argsstring>
        <name>net_ppp_ping</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Send PPP Echo-Request to peer. We expect to receive Echo-Reply back. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>PPP network interface index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of time to wait Echo-Reply. The value is in milliseconds.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if Echo-Reply was received, &lt; 0 if there is a timeout or network index is not a valid PPP network index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="653" column="19" bodyfile="include/net/ppp.h" bodystart="653" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="group__ppp_1ga4f6104cff735f9829762b6552a7346bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>struct <ref refid="structppp__context" kindref="compound">ppp_context</ref> *</type>
        <definition>static struct ppp_context * net_ppp_context_get</definition>
        <argsstring>(int idx)</argsstring>
        <name>net_ppp_context_get</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Get PPP context information. This is only used by net-shell to print information about PPP. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>PPP network interface index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PPP context or NULL if idx is invalid. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="673" column="32" bodyfile="include/net/ppp.h" bodystart="673" bodyend="678"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Intel<sp/>Corporation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_NET_PPP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_NET_PPP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net__if_8h" kindref="compound">net/net_if.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net__pkt_8h" kindref="compound">net/net_pkt.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net__stats_8h" kindref="compound">net/net_stats.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net__mgmt_8h" kindref="compound">net/net_mgmt.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="group__ppp_1gaec050624f0693600196068d8f5413e6f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PPP_MRU<sp/>CONFIG_NET_PPP_MTU_MRU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="group__ppp_1gacc51e91347721a8255ae891ddc43636b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PPP_MTU<sp/>PPP_MRU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="group__ppp_1ga2e5d0ae66bf076123cb29effc0a8e894" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PPP_MAX_TERMINATE_REASON_LEN<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="group__ppp_1gaad7380b3a502f4b649348b733124f21a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PPP_INTERFACE_IDENTIFIER_LEN<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structppp__api" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__api" kindref="compound">ppp_api</ref><sp/>{</highlight></codeline>
<codeline lineno="45" refid="structppp__api_1acc4e82fbaa8b933040b0a77da8a3cae0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">net_if_api<sp/><ref refid="structppp__api_1acc4e82fbaa8b933040b0a77da8a3cae0" kindref="member">iface_api</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structppp__api_1ab85010475c4f03a48ad7629ed4947626" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structppp__api_1ab85010475c4f03a48ad7629ed4947626" kindref="member">start</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="structppp__api_1a42576f1d58920f48a0d0adf888f99006" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structppp__api_1a42576f1d58920f48a0d0adf888f99006" kindref="member">stop</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structppp__api_1aa0ec35e57f22674ef06f8cc3bc09987f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structppp__api_1aa0ec35e57f22674ef06f8cc3bc09987f" kindref="member">send</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__pkt" kindref="compound">net_pkt</ref><sp/>*pkt);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_STATISTICS_PPP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__stats__ppp" kindref="compound">net_stats_ppp</ref><sp/>*(*get_stats)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>that<sp/>the<sp/>network<sp/>interface<sp/>API<sp/>is<sp/>properly<sp/>setup<sp/>inside</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>PPP<sp/>API<sp/>struct<sp/>(it<sp/>is<sp/>the<sp/>first<sp/>one).</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">BUILD_ASSERT(offsetof(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structppp__api" kindref="compound">ppp_api</ref>,<sp/>iface_api)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="group__ppp_1ga8ad7cc0d142a6e7ea82c45bec2cc3670" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga8ad7cc0d142a6e7ea82c45bec2cc3670" kindref="member">ppp_protocol_type</ref><sp/>{</highlight></codeline>
<codeline lineno="76" refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a0b974fd7b99c28a8d06f096be1ed9cc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a0b974fd7b99c28a8d06f096be1ed9cc6" kindref="member">PPP_IP</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0021,<sp/></highlight></codeline>
<codeline lineno="77" refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a0a9da56ae134b701f5a8b31c3f1c9bfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a0a9da56ae134b701f5a8b31c3f1c9bfe" kindref="member">PPP_IPV6</ref><sp/><sp/><sp/>=<sp/>0x0057,<sp/></highlight></codeline>
<codeline lineno="78" refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a25f326220ab531e93140b7c6bddd0d21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a25f326220ab531e93140b7c6bddd0d21" kindref="member">PPP_IPCP</ref><sp/><sp/><sp/>=<sp/>0x8021,<sp/></highlight></codeline>
<codeline lineno="79" refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a40b5032dabf9c697e761aa2cff0b2e44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a40b5032dabf9c697e761aa2cff0b2e44" kindref="member">PPP_ECP</ref><sp/><sp/><sp/><sp/>=<sp/>0x8053,<sp/></highlight></codeline>
<codeline lineno="80" refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670ab17a70f864ac04b8b52f8ca1edc4d2e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670ab17a70f864ac04b8b52f8ca1edc4d2e0" kindref="member">PPP_IPV6CP</ref><sp/>=<sp/>0x8057,<sp/></highlight></codeline>
<codeline lineno="81" refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a4cdde6fe10fcfa862742751e1152887b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a4cdde6fe10fcfa862742751e1152887b" kindref="member">PPP_CCP</ref><sp/><sp/><sp/><sp/>=<sp/>0x80FD,<sp/></highlight></codeline>
<codeline lineno="82" refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a22dae8ee345f9664042eef54086f4de9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a22dae8ee345f9664042eef54086f4de9" kindref="member">PPP_LCP</ref><sp/><sp/><sp/><sp/>=<sp/>0xc021,<sp/></highlight></codeline>
<codeline lineno="83" refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670ac66b190ff6dd0884dfba62da40ee2206" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670ac66b190ff6dd0884dfba62da40ee2206" kindref="member">PPP_PAP</ref><sp/><sp/><sp/><sp/>=<sp/>0xc023,<sp/></highlight></codeline>
<codeline lineno="84" refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a1b311302ecabb507c34b1f77cba36f25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a1b311302ecabb507c34b1f77cba36f25" kindref="member">PPP_CHAP</ref><sp/><sp/><sp/>=<sp/>0xc223,<sp/></highlight></codeline>
<codeline lineno="85" refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a7a51ef2d8d979ded98e0aad680f1b6e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga8ad7cc0d142a6e7ea82c45bec2cc3670a7a51ef2d8d979ded98e0aad680f1b6e2" kindref="member">PPP_EAP</ref><sp/><sp/><sp/><sp/>=<sp/>0xc227,<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="group__ppp_1ga284e237a6323f2daffc444a73a4b8b6b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga284e237a6323f2daffc444a73a4b8b6b" kindref="member">ppp_phase</ref><sp/>{</highlight></codeline>
<codeline lineno="93" refid="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6babdff682a09630e713867c3241d56954d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6babdff682a09630e713867c3241d56954d" kindref="member">PPP_DEAD</ref>,</highlight></codeline>
<codeline lineno="95" refid="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6ba647d283023ee50299c1d9ca376cce4f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6ba647d283023ee50299c1d9ca376cce4f4" kindref="member">PPP_ESTABLISH</ref>,</highlight></codeline>
<codeline lineno="97" refid="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6ba0492bfbaebc3f126327c74dbe56ce76a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6ba0492bfbaebc3f126327c74dbe56ce76a" kindref="member">PPP_AUTH</ref>,</highlight></codeline>
<codeline lineno="99" refid="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6ba621902d0a6ca3efa0aa20c43c32164af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6ba621902d0a6ca3efa0aa20c43c32164af" kindref="member">PPP_NETWORK</ref>,</highlight></codeline>
<codeline lineno="101" refid="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6ba51a5c6e5d16fbb607597f0d2f6a12af7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6ba51a5c6e5d16fbb607597f0d2f6a12af7" kindref="member">PPP_RUNNING</ref>,</highlight></codeline>
<codeline lineno="103" refid="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6bac1f10a2aa5edcb826621304de596a5b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga284e237a6323f2daffc444a73a4b8b6bac1f10a2aa5edcb826621304de596a5b7" kindref="member">PPP_TERMINATE</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="group__ppp_1ga6d4283a0ae63a227933d12d42318cf7c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga6d4283a0ae63a227933d12d42318cf7c" kindref="member">ppp_state</ref><sp/>{</highlight></codeline>
<codeline lineno="110" refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7cacab404bd828016b38f34c8128c72c605" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7cacab404bd828016b38f34c8128c72c605" kindref="member">PPP_INITIAL</ref>,</highlight></codeline>
<codeline lineno="111" refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca632204028ea5f855831924eeba5be19b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca632204028ea5f855831924eeba5be19b" kindref="member">PPP_STARTING</ref>,</highlight></codeline>
<codeline lineno="112" refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca0fdfbc2f4448ad005284c319928034dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca0fdfbc2f4448ad005284c319928034dd" kindref="member">PPP_CLOSED</ref>,</highlight></codeline>
<codeline lineno="113" refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7caca2412bb44a0304e094a75717ae59326" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7caca2412bb44a0304e094a75717ae59326" kindref="member">PPP_STOPPED</ref>,</highlight></codeline>
<codeline lineno="114" refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca23353ce5f2f06f3ed54e3490617c38fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca23353ce5f2f06f3ed54e3490617c38fe" kindref="member">PPP_CLOSING</ref>,</highlight></codeline>
<codeline lineno="115" refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7cadad45283af72e570ed0acae6d35d3a9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7cadad45283af72e570ed0acae6d35d3a9b" kindref="member">PPP_STOPPING</ref>,</highlight></codeline>
<codeline lineno="116" refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca5f27d2e78dae0c937de8669be1a3698e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca5f27d2e78dae0c937de8669be1a3698e" kindref="member">PPP_REQUEST_SENT</ref>,</highlight></codeline>
<codeline lineno="117" refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7caf3d5f2cb8bc8352ba3b9090b9b24fe69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7caf3d5f2cb8bc8352ba3b9090b9b24fe69" kindref="member">PPP_ACK_RECEIVED</ref>,</highlight></codeline>
<codeline lineno="118" refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7caf9ada16d1bf148c67504252439e9a1d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7caf9ada16d1bf148c67504252439e9a1d7" kindref="member">PPP_ACK_SENT</ref>,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca5acff74b583c0798cf4cb389d659fe0d" kindref="member">PPP_OPENED</ref></highlight></codeline>
<codeline lineno="120" refid="group__ppp_1gga6d4283a0ae63a227933d12d42318cf7ca5acff74b583c0798cf4cb389d659fe0d" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="group__ppp_1ga305eaed8ab120c7821de1618e10728cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga305eaed8ab120c7821de1618e10728cf" kindref="member">ppp_packet_type</ref><sp/>{</highlight></codeline>
<codeline lineno="126" refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfab56e4bcefa0fea644739bd2208bdff62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfab56e4bcefa0fea644739bd2208bdff62" kindref="member">PPP_CONFIGURE_REQ</ref><sp/><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="127" refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa54a76789e1194fdbd753f78a674e1003" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa54a76789e1194fdbd753f78a674e1003" kindref="member">PPP_CONFIGURE_ACK</ref><sp/><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="128" refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa013bc0c33d7afbca68ea157b33773703" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa013bc0c33d7afbca68ea157b33773703" kindref="member">PPP_CONFIGURE_NACK</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="129" refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfacfd2485f57fcc1aea9435f70c96f7aed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfacfd2485f57fcc1aea9435f70c96f7aed" kindref="member">PPP_CONFIGURE_REJ</ref><sp/><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="130" refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa0c0cc9b36c5b5b3902bddbd29fad8a9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa0c0cc9b36c5b5b3902bddbd29fad8a9c" kindref="member">PPP_TERMINATE_REQ</ref><sp/><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="131" refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa2e434ed0e64c4620aa4d8e41de31a0f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa2e434ed0e64c4620aa4d8e41de31a0f6" kindref="member">PPP_TERMINATE_ACK</ref><sp/><sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="132" refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa0fd2c7adbce3dadb1d95d29bd87924aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa0fd2c7adbce3dadb1d95d29bd87924aa" kindref="member">PPP_CODE_REJ</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="133" refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfad0cbd4c01c071faa17b4cc2528bbeb65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfad0cbd4c01c071faa17b4cc2528bbeb65" kindref="member">PPP_PROTOCOL_REJ</ref><sp/><sp/><sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="134" refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfaf15f00b023f761f71c8e41de6afef20b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfaf15f00b023f761f71c8e41de6afef20b" kindref="member">PPP_ECHO_REQ</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="135" refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa13f08a92a1b1ce1f7a0014fb7087a672" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfa13f08a92a1b1ce1f7a0014fb7087a672" kindref="member">PPP_ECHO_REPLY</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfaa1ea3fb1e422c5831d587113d786c927" kindref="member">PPP_DISCARD_REQ</ref><sp/><sp/><sp/><sp/>=<sp/>11</highlight></codeline>
<codeline lineno="137" refid="group__ppp_1gga305eaed8ab120c7821de1618e10728cfaa1ea3fb1e422c5831d587113d786c927" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="group__ppp_1gac8f3d915c930d61831bcb13d6201b15c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1gac8f3d915c930d61831bcb13d6201b15c" kindref="member">lcp_option_type</ref><sp/>{</highlight></codeline>
<codeline lineno="143" refid="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15caa702a3993d2a8f7d7878e1c6f43772d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15caa702a3993d2a8f7d7878e1c6f43772d3" kindref="member">LCP_OPTION_RESERVED</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15cabedb2479b9edd3fcefe7a84d2deb41fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15cabedb2479b9edd3fcefe7a84d2deb41fe" kindref="member">LCP_OPTION_MRU</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15ca01e51712c002e5ce746d93376b4f2cef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15ca01e51712c002e5ce746d93376b4f2cef" kindref="member">LCP_OPTION_ASYNC_CTRL_CHAR_MAP</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15cae36a806e93ebdacd7c3ad3f536c03743" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15cae36a806e93ebdacd7c3ad3f536c03743" kindref="member">LCP_OPTION_AUTH_PROTO</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15ca3ed6d42c4b65271955a308c4e7a437a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15ca3ed6d42c4b65271955a308c4e7a437a9" kindref="member">LCP_OPTION_QUALITY_PROTO</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15ca59c791ebec909b03a42659d08be2bcf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15ca59c791ebec909b03a42659d08be2bcf8" kindref="member">LCP_OPTION_MAGIC_NUMBER</ref><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15cab135e1ef16bb071e1490d77b51de3bd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15cab135e1ef16bb071e1490d77b51de3bd4" kindref="member">LCP_OPTION_PROTO_COMPRESS</ref><sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15ca3c37fd8819b98caa7f9b3b94aff53524" kindref="member">LCP_OPTION_ADDR_CTRL_COMPRESS</ref><sp/>=<sp/>8</highlight></codeline>
<codeline lineno="165" refid="group__ppp_1ggac8f3d915c930d61831bcb13d6201b15ca3c37fd8819b98caa7f9b3b94aff53524" refkind="member"><highlight class="normal">}<sp/>__packed;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="group__ppp_1ga1064e3d8c6aa3d3161e399d6937162b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga1064e3d8c6aa3d3161e399d6937162b6" kindref="member">ipcp_option_type</ref><sp/>{</highlight></codeline>
<codeline lineno="171" refid="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a7319a35a35044ca3f5fcc1ed6460fb3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a7319a35a35044ca3f5fcc1ed6460fb3b" kindref="member">IPCP_OPTION_RESERVED</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a80771bc5d12ab8dcf78f87c872b0f41b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a80771bc5d12ab8dcf78f87c872b0f41b" kindref="member">IPCP_OPTION_IP_ADDRESSES</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a3913e2668196db10d17f8d7ffa86c6a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a3913e2668196db10d17f8d7ffa86c6a6" kindref="member">IPCP_OPTION_IP_COMP_PROTO</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a124bafb002549c2de4cb293f5e158fd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a124bafb002549c2de4cb293f5e158fd9" kindref="member">IPCP_OPTION_IP_ADDRESS</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RFC<sp/>1877<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6af156d53ee18de3907210c910667e8931" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6af156d53ee18de3907210c910667e8931" kindref="member">IPCP_OPTION_DNS1</ref><sp/>=<sp/>129,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a7d154ff3643ba4de8cf358bd81361552" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a7d154ff3643ba4de8cf358bd81361552" kindref="member">IPCP_OPTION_NBNS1</ref><sp/>=<sp/>130,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a176055a8c0483c7c8b6b0d416b676964" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a176055a8c0483c7c8b6b0d416b676964" kindref="member">IPCP_OPTION_DNS2</ref><sp/>=<sp/>131,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a3b315dc4f10305923bba2bfbe2fa05ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga1064e3d8c6aa3d3161e399d6937162b6a3b315dc4f10305923bba2bfbe2fa05ad" kindref="member">IPCP_OPTION_NBNS2</ref><sp/>=<sp/>132,</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}<sp/>__packed;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="group__ppp_1gaf30172a9fead40463d129a5afeaf1ac3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1gaf30172a9fead40463d129a5afeaf1ac3" kindref="member">ipv6cp_option_type</ref><sp/>{</highlight></codeline>
<codeline lineno="201" refid="group__ppp_1ggaf30172a9fead40463d129a5afeaf1ac3ac291788404cda3f6c30130d097d43858" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1ggaf30172a9fead40463d129a5afeaf1ac3ac291788404cda3f6c30130d097d43858" kindref="member">IPV6CP_OPTION_RESERVED</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="group__ppp_1ggaf30172a9fead40463d129a5afeaf1ac3a0448dc4b9a89736d6878a4e99e6e61b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1ggaf30172a9fead40463d129a5afeaf1ac3a0448dc4b9a89736d6878a4e99e6e61b7" kindref="member">IPV6CP_OPTION_INTERFACE_IDENTIFIER</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}<sp/>__packed;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="group__ppp_1ga1ffff54da5bf3eb358e909e0962f1b05" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__ppp_1ga1ffff54da5bf3eb358e909e0962f1b05" kindref="member">net_ppp_lcp_echo_reply_cb_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>user_data_len);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__my__option__data" kindref="compound">ppp_my_option_data</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ppp_my_option_info;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="structppp__fsm" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/>{</highlight></codeline>
<codeline lineno="226" refid="structppp__fsm_1ae033ee41d66ec568dc4244115730114a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work__delayable" kindref="compound">k_work_delayable</ref><sp/><ref refid="structppp__fsm_1ae033ee41d66ec568dc4244115730114a" kindref="member">timer</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="230" refid="structppp__fsm_1a42bb4a40d88893d461d93202c4ad8e2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structppp__fsm_1a42bb4a40d88893d461d93202c4ad8e2a" kindref="member">config_info_ack</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/>*fsm,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__pkt" kindref="compound">net_pkt</ref><sp/>*pkt,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>length);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__pkt" kindref="compound">net_pkt</ref><sp/>*(*config_info_add)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/>*fsm);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="structppp__fsm_1a099cc834fc5e2d062ee4410a1de729c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/>(*<ref refid="structppp__fsm_1a099cc834fc5e2d062ee4410a1de729c2" kindref="member">config_info_len</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/>*fsm);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="structppp__fsm_1ad0967edee7fee72368732876ca6bc5e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structppp__fsm_1ad0967edee7fee72368732876ca6bc5e7" kindref="member">config_info_nack</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/>*fsm,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__pkt" kindref="compound">net_pkt</ref><sp/>*pkt,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>length,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rejected);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="structppp__fsm_1ab430e0240f35718f6eaf8f9052a4edde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structppp__fsm_1ab430e0240f35718f6eaf8f9052a4edde" kindref="member">config_info_req</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/>*fsm,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__pkt" kindref="compound">net_pkt</ref><sp/>*pkt,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>length,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__pkt" kindref="compound">net_pkt</ref><sp/>*ret_pkt);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="structppp__fsm_1a90dad2f780b4573559c76e6a67e44f4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structppp__fsm_1a90dad2f780b4573559c76e6a67e44f4c" kindref="member">config_info_rej</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/>*fsm,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__pkt" kindref="compound">net_pkt</ref><sp/>*pkt,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>length);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="structppp__fsm_1afb0296b0d8e9b60594781cfd5f8acee3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structppp__fsm_1afb0296b0d8e9b60594781cfd5f8acee3" kindref="member">config_info_reset</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/>*fsm);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="structppp__fsm_1aa1ca37605ab7934c16a5260d531efa00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structppp__fsm_1aa1ca37605ab7934c16a5260d531efa00" kindref="member">up</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/>*fsm);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="structppp__fsm_1a2ba52396156dd1ec63d67dc6ae0a2d5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structppp__fsm_1a2ba52396156dd1ec63d67dc6ae0a2d5a" kindref="member">down</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/>*fsm);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="structppp__fsm_1ad7f2d5d09acb298d29ebc60b4f748478" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structppp__fsm_1ad7f2d5d09acb298d29ebc60b4f748478" kindref="member">starting</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/>*fsm);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="structppp__fsm_1aecdcdfa2f7264c7b1b2202a23327fa3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structppp__fsm_1aecdcdfa2f7264c7b1b2202a23327fa3b" kindref="member">finished</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/>*fsm);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="structppp__fsm_1ae4f68c11709ab03445b853c12c11c787" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structppp__fsm_1ae4f68c11709ab03445b853c12c11c787" kindref="member">proto_reject</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/>*fsm);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="structppp__fsm_1aa302cfe79c73fe081d2642cf54d1d3cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structppp__fsm_1ae0c0b33d5e51a01a63b5afbf5012c0f5" kindref="member">retransmit</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/>*fsm);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__net__core_1ga8e5393f3bdd85491f221324e637c3896" kindref="member">net_verdict</ref><sp/>(*<ref refid="structppp__fsm_1aa302cfe79c73fe081d2642cf54d1d3cf" kindref="member">proto_extension</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/>*fsm,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga305eaed8ab120c7821de1618e10728cf" kindref="member">ppp_packet_type</ref><sp/>code,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structppp__fsm_1a844c8747b299d3614e5ccff892b45d5c" kindref="member">id</ref>,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__pkt" kindref="compound">net_pkt</ref><sp/>*pkt);</highlight></codeline>
<codeline lineno="285" refid="structppp__fsm_1aecaca58bdfec36fee0f2f992e0830bbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structppp__fsm_1aecaca58bdfec36fee0f2f992e0830bbe" kindref="member">cb</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="289" refid="structppp__fsm_1a117a5df8fed62b57a59580a2513fc1c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ppp_my_option_info<sp/>*<ref refid="structppp__fsm_1a117a5df8fed62b57a59580a2513fc1c3" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="structppp__fsm_1a64330e89597eac2b8b841d0f95389473" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__my__option__data" kindref="compound">ppp_my_option_data</ref><sp/>*<ref refid="structppp__fsm_1a64330e89597eac2b8b841d0f95389473" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="structppp__fsm_1a7e125f9011a9377d18dc523b1f84964f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structppp__fsm_1a7e125f9011a9377d18dc523b1f84964f" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="296" refid="structppp__fsm_1a4e500109683650d2b8648ef88d37625e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structppp__fsm_1a4e500109683650d2b8648ef88d37625e" kindref="member">my_options</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="structppp__fsm_1a489c2d992e03e126ba2d1bbfe7a71b85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structppp__fsm_1a489c2d992e03e126ba2d1bbfe7a71b85" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">;</highlight></codeline>
<codeline lineno="302" refid="structppp__fsm_1a31d84f3fa6246bd70d664dbae6845c4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structppp__fsm_1a31d84f3fa6246bd70d664dbae6845c4b" kindref="member">retransmits</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="structppp__fsm_1a0a0523fe16fe45a756615b62e8673828" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structppp__fsm_1a0a0523fe16fe45a756615b62e8673828" kindref="member">nack_loops</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="structppp__fsm_1a55c0fe60eb84f33386ec90691ee0f707" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structppp__fsm_1a55c0fe60eb84f33386ec90691ee0f707" kindref="member">recv_nack_loops</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="structppp__fsm_1a054fd1e61e667072a552eadf54634ffc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structppp__fsm_1a054fd1e61e667072a552eadf54634ffc" kindref="member">terminate_reason</ref>[<ref refid="group__ppp_1ga2e5d0ae66bf076123cb29effc0a8e894" kindref="member">PPP_MAX_TERMINATE_REASON_LEN</ref>];</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="structppp__fsm_1a2032a922d2e356155c5a4c86cf48ff3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structppp__fsm_1a2032a922d2e356155c5a4c86cf48ff3d" kindref="member">protocol</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="structppp__fsm_1ab955d11b75231e94ec1613d5c8c027e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga6d4283a0ae63a227933d12d42318cf7c" kindref="member">ppp_state</ref><sp/><ref refid="structppp__fsm_1ab955d11b75231e94ec1613d5c8c027e1" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="structppp__fsm_1a9192c71ef82436c519ac3b8ccd38a089" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structppp__fsm_1a9192c71ef82436c519ac3b8ccd38a089" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="structppp__fsm_1a844c8747b299d3614e5ccff892b45d5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structppp__fsm_1a844c8747b299d3614e5ccff892b45d5c" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="structppp__fsm_1a8fe52ffe2a17c03ff0432e36c9d43578" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structppp__fsm_1a8fe52ffe2a17c03ff0432e36c9d43578" kindref="member">req_id</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="structppp__fsm_1a42777bc7c5f904cbac6bb0b16615fb02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structppp__fsm_1a42777bc7c5f904cbac6bb0b16615fb02" kindref="member">ack_received</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">};</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="group__ppp_1ga217fc7e6ec870657a0b2aae05daa03af" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PPP_MY_OPTION_ACKED<sp/><sp/><sp/><sp/><sp/>BIT(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="group__ppp_1ga584c13078881fd9604b062210785be75" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PPP_MY_OPTION_REJECTED<sp/><sp/>BIT(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="structppp__my__option__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__my__option__data" kindref="compound">ppp_my_option_data</ref><sp/>{</highlight></codeline>
<codeline lineno="336" refid="structppp__my__option__data_1a0d64b4bcab9df09e9fb196f99cae128b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structppp__my__option__data_1a0d64b4bcab9df09e9fb196f99cae128b" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal">};</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="structlcp__options" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlcp__options" kindref="compound">lcp_options</ref><sp/>{</highlight></codeline>
<codeline lineno="341" refid="structlcp__options_1a68d9f004596bfac6dea9b14bd22e9dda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structlcp__options_1a68d9f004596bfac6dea9b14bd22e9dda" kindref="member">magic</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="structlcp__options_1a2672e1374c25aac1571adccadda5283e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structlcp__options_1a2672e1374c25aac1571adccadda5283e" kindref="member">async_map</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="structlcp__options_1a028da648c4b8cdd9330d9195a161e847" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structlcp__options_1a028da648c4b8cdd9330d9195a161e847" kindref="member">mru</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="structlcp__options_1a560d009cb642fff99ef83a9e6c056c6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structlcp__options_1a560d009cb642fff99ef83a9e6c056c6b" kindref="member">auth_proto</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal">};</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_L2_PPP_OPTION_MRU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCP_NUM_MY_OPTIONS<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="structipcp__options" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structipcp__options" kindref="compound">ipcp_options</ref><sp/>{</highlight></codeline>
<codeline lineno="359" refid="structipcp__options_1a2d4a41b74c4a319551c003210c1e6f3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin__addr" kindref="compound">in_addr</ref><sp/><ref refid="structipcp__options_1a2d4a41b74c4a319551c003210c1e6f3d" kindref="member">address</ref>;</highlight></codeline>
<codeline lineno="360" refid="structipcp__options_1a5c2b153ee9103393159a7090357df5a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin__addr" kindref="compound">in_addr</ref><sp/><ref refid="structipcp__options_1a5c2b153ee9103393159a7090357df5a1" kindref="member">dns1_address</ref>;</highlight></codeline>
<codeline lineno="361" refid="structipcp__options_1a4e9825d9c161fa318cb538ebc231dd44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin__addr" kindref="compound">in_addr</ref><sp/><ref refid="structipcp__options_1a4e9825d9c161fa318cb538ebc231dd44" kindref="member">dns2_address</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal">};</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="group__ppp_1gada07a9f2122fbf911f5d35a92e858c9d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPCP_NUM_MY_OPTIONS<sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="structipv6cp__options" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structipv6cp__options" kindref="compound">ipv6cp_options</ref><sp/>{</highlight></codeline>
<codeline lineno="368" refid="structipv6cp__options_1a4962f03fcf645257306ceeb95116ddce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structipv6cp__options_1a4962f03fcf645257306ceeb95116ddce" kindref="member">iid</ref>[<ref refid="group__ppp_1gaad7380b3a502f4b649348b733124f21a" kindref="member">PPP_INTERFACE_IDENTIFIER_LEN</ref>];</highlight></codeline>
<codeline lineno="369"><highlight class="normal">};</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="group__ppp_1ga580f383f3f33ba6e742a134e853b8411" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPV6CP_NUM_MY_OPTIONS<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="group__ppp_1ga360dc50a25d0c19b99a15807bc40d971" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga360dc50a25d0c19b99a15807bc40d971" kindref="member">ppp_flags</ref><sp/>{</highlight></codeline>
<codeline lineno="374" refid="group__ppp_1gga360dc50a25d0c19b99a15807bc40d971a78506697a8a37d20d486961501ec7715" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1gga360dc50a25d0c19b99a15807bc40d971a78506697a8a37d20d486961501ec7715" kindref="member">PPP_CARRIER_UP</ref>,</highlight></codeline>
<codeline lineno="375"><highlight class="normal">};</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="structppp__context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__context" kindref="compound">ppp_context</ref><sp/>{</highlight></codeline>
<codeline lineno="382" refid="structppp__context_1a6b327cafe07a0807163589471a9bdae8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/><ref refid="structppp__context_1a6b327cafe07a0807163589471a9bdae8" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="structppp__context_1a5671d7ba465c424004f0460e5ed0d3ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work__delayable" kindref="compound">k_work_delayable</ref><sp/><ref refid="structppp__context_1a5671d7ba465c424004f0460e5ed0d3ba" kindref="member">startup</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="structppp__context_1a6a45323d57ded072cca7f6cea8d91732" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/><ref refid="structppp__context_1a6a45323d57ded072cca7f6cea8d91732" kindref="member">carrier_work</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="397" refid="structppp__context_1ac555024228a1e1d830c915a098428bc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/><ref refid="structppp__context_1ac555024228a1e1d830c915a098428bc5" kindref="member">fsm</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="structppp__context_1a37f609192ee6b739d7018d5a07ce179f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlcp__options" kindref="compound">lcp_options</ref><sp/><ref refid="structppp__context_1a37f609192ee6b739d7018d5a07ce179f" kindref="member">my_options</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="structppp__context_1a80fffd30b145b0842e36299ac78d5da8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlcp__options" kindref="compound">lcp_options</ref><sp/><ref refid="structppp__context_1a80fffd30b145b0842e36299ac78d5da8" kindref="member">peer_options</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="structppp__context_1a4d91bf9e6e36415b13be02ccf03d3e40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structppp__context_1a4d91bf9e6e36415b13be02ccf03d3e40" kindref="member">magic</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_L2_PPP_OPTION_MRU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__my__option__data" kindref="compound">ppp_my_option_data</ref><sp/>my_options_data[LCP_NUM_MY_OPTIONS];</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="structppp__context_1a0bf92bb809edfb6c703c78c0d503f43c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structppp__context_1a0bf92bb809edfb6c703c78c0d503f43c" kindref="member">lcp</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_IPV4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/><ref refid="structppp__context_1ac555024228a1e1d830c915a098428bc5" kindref="member">fsm</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structipcp__options" kindref="compound">ipcp_options</ref><sp/><ref refid="structppp__context_1a37f609192ee6b739d7018d5a07ce179f" kindref="member">my_options</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structipcp__options" kindref="compound">ipcp_options</ref><sp/><ref refid="structppp__context_1a80fffd30b145b0842e36299ac78d5da8" kindref="member">peer_options</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__my__option__data" kindref="compound">ppp_my_option_data</ref><sp/>my_options_data[<ref refid="group__ppp_1gada07a9f2122fbf911f5d35a92e858c9d" kindref="member">IPCP_NUM_MY_OPTIONS</ref>];</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>ipcp;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_IPV6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/><ref refid="structppp__context_1ac555024228a1e1d830c915a098428bc5" kindref="member">fsm</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structipv6cp__options" kindref="compound">ipv6cp_options</ref><sp/><ref refid="structppp__context_1a37f609192ee6b739d7018d5a07ce179f" kindref="member">my_options</ref>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structipv6cp__options" kindref="compound">ipv6cp_options</ref><sp/><ref refid="structppp__context_1a80fffd30b145b0842e36299ac78d5da8" kindref="member">peer_options</ref>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__my__option__data" kindref="compound">ppp_my_option_data</ref><sp/>my_options_data[<ref refid="group__ppp_1ga580f383f3f33ba6e742a134e853b8411" kindref="member">IPV6CP_NUM_MY_OPTIONS</ref>];</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>ipv6cp;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_L2_PPP_PAP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__fsm" kindref="compound">ppp_fsm</ref><sp/><ref refid="structppp__context_1ac555024228a1e1d830c915a098428bc5" kindref="member">fsm</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>pap;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_SHELL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ppp_1ga1ffff54da5bf3eb358e909e0962f1b05" kindref="member">net_ppp_lcp_echo_reply_cb_t</ref><sp/>cb;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>user_data_len;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>echo_reply;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/>wait_echo_reply;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>echo_req_data;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>echo_reply_data;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structshell" kindref="compound">shell</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="structppp__context_1a3b0bfb9c3ceece34565b282efa74390e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*<ref refid="structppp__context_1a3b0bfb9c3ceece34565b282efa74390e" kindref="member">iface</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="structppp__context_1a6afb964ef87696fdadb5cb0c714bd841" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga284e237a6323f2daffc444a73a4b8b6b" kindref="member">ppp_phase</ref><sp/><ref refid="structppp__context_1a6afb964ef87696fdadb5cb0c714bd841" kindref="member">phase</ref>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="structppp__context_1a1c6674bad19047abcc3097bf5ff5f31d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__net__l2_1gac7db0cc6c56d371a5803873074ec2516" kindref="member">net_l2_flags</ref><sp/><ref refid="structppp__context_1a1c6674bad19047abcc3097bf5ff5f31d" kindref="member">ppp_l2_flags</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="structppp__context_1a2e04c6e411fe5b07d9d2cda1a61db57f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structppp__context_1a2e04c6e411fe5b07d9d2cda1a61db57f" kindref="member">network_protos_open</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="structppp__context_1a9dd6e156897c53d488344bbbe05d4ae1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structppp__context_1a9dd6e156897c53d488344bbbe05d4ae1" kindref="member">network_protos_up</ref>;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="structppp__context_1a62195bd0143eea777affddc87a92b4e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structppp__context_1a62195bd0143eea777affddc87a92b4e7" kindref="member">is_net_carrier_up</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="structppp__context_1a3d97c93b183ca455daf0e3bc2b9c25e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structppp__context_1a3d97c93b183ca455daf0e3bc2b9c25e1" kindref="member">is_ready_to_serve</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="structppp__context_1a7f103857c7412a6ee9471b6c67baea71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structppp__context_1a7f103857c7412a6ee9471b6c67baea71" kindref="member">is_enabled</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="structppp__context_1a8f6bdca27d6ba4dcc1e673025bab38dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structppp__context_1a8f6bdca27d6ba4dcc1e673025bab38dc" kindref="member">is_startup_pending</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="structppp__context_1acdee16f229cb6aa0672630de1d3ee39b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structppp__context_1acdee16f229cb6aa0672630de1d3ee39b" kindref="member">is_enable_done</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="structppp__context_1a861216f943c5af5d5db58f10ba4263ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structppp__context_1a861216f943c5af5d5db58f10ba4263ac" kindref="member">is_ipcp_up</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="structppp__context_1a7ef9ac6bb1f86ea417032fe93fc7e8a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structppp__context_1a7ef9ac6bb1f86ea417032fe93fc7e8a0" kindref="member">is_ipcp_open</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="structppp__context_1a7b4ee6988626cb69c012a0b58c27bef5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structppp__context_1a7b4ee6988626cb69c012a0b58c27bef5" kindref="member">is_ipv6cp_up</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="structppp__context_1ab139c8d6f1d16c702cb9ca92a7f82178" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structppp__context_1ab139c8d6f1d16c702cb9ca92a7f82178" kindref="member">is_ipv6cp_open</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="structppp__context_1a52227a05ce8a63f3a4f7535e60fdf979" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structppp__context_1a52227a05ce8a63f3a4f7535e60fdf979" kindref="member">is_pap_up</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="structppp__context_1a80c2c3248c47fac7fce8d463cfbc0c9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structppp__context_1a80c2c3248c47fac7fce8d463cfbc0c9f" kindref="member">is_pap_open</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="523"><highlight class="normal">};</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="531" refid="group__ppp_1ga2854c0e59e903804df48569c894ee0cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga2854c0e59e903804df48569c894ee0cd" kindref="member">net_ppp_carrier_on</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="group__ppp_1ga76340854ba3dfb0f4a85a9805a3137ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga76340854ba3dfb0f4a85a9805a3137ab" kindref="member">net_ppp_carrier_off</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="546" refid="group__ppp_1gaabf883cfefc9910b9b9d8931e68b320c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1gaabf883cfefc9910b9b9d8931e68b320c" kindref="member">net_ppp_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Management<sp/>API<sp/>for<sp/>PPP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PPP_L2_CTX_TYPE<sp/>struct<sp/>ppp_context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_NET_PPP_LAYER<sp/><sp/>NET_MGMT_LAYER_L2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_NET_PPP_CODE<sp/><sp/><sp/>0x209</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_NET_PPP_BASE<sp/><sp/><sp/>(NET_MGMT_IFACE_BIT<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="557"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_MGMT_LAYER(_NET_PPP_LAYER)<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="558"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_MGMT_LAYER_CODE(_NET_PPP_CODE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_NET_PPP_EVENT<sp/><sp/>(_NET_PPP_BASE<sp/>|<sp/>NET_MGMT_EVENT_BIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>net_event_ppp_cmd<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_EVENT_PPP_CMD_CARRIER_ON<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_EVENT_PPP_CMD_CARRIER_OFF,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_EVENT_PPP_CMD_PHASE_RUNNING,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_EVENT_PPP_CMD_PHASE_DEAD,</highlight></codeline>
<codeline lineno="566"><highlight class="normal">};</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_EVENT_PPP_CARRIER_ON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="569"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(_NET_PPP_EVENT<sp/>|<sp/>NET_EVENT_PPP_CMD_CARRIER_ON)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_EVENT_PPP_CARRIER_OFF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="572"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(_NET_PPP_EVENT<sp/>|<sp/>NET_EVENT_PPP_CMD_CARRIER_OFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_EVENT_PPP_PHASE_RUNNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="575"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(_NET_PPP_EVENT<sp/>|<sp/>NET_EVENT_PPP_CMD_PHASE_RUNNING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_EVENT_PPP_PHASE_DEAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="578"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(_NET_PPP_EVENT<sp/>|<sp/>NET_EVENT_PPP_CMD_PHASE_DEAD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__if" kindref="compound">net_if</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_L2_PPP_MGMT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga1436cf5cfcb6752e41c9e06a0ee30030" kindref="member">ppp_mgmt_raise_carrier_on_event</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="group__ppp_1ga1436cf5cfcb6752e41c9e06a0ee30030" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga1436cf5cfcb6752e41c9e06a0ee30030" kindref="member">ppp_mgmt_raise_carrier_on_event</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface)</highlight></codeline>
<codeline lineno="593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(iface);</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_L2_PPP_MGMT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1gad96b2c77cf6a066d55d78c5d63cb9bd0" kindref="member">ppp_mgmt_raise_carrier_off_event</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="group__ppp_1gad96b2c77cf6a066d55d78c5d63cb9bd0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1gad96b2c77cf6a066d55d78c5d63cb9bd0" kindref="member">ppp_mgmt_raise_carrier_off_event</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface)</highlight></codeline>
<codeline lineno="607"><highlight class="normal">{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(iface);</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_L2_PPP_MGMT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga74e94e9fcae30bc386c5e3d951ed5882" kindref="member">ppp_mgmt_raise_phase_running_event</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620" refid="group__ppp_1ga74e94e9fcae30bc386c5e3d951ed5882" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga74e94e9fcae30bc386c5e3d951ed5882" kindref="member">ppp_mgmt_raise_phase_running_event</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface)</highlight></codeline>
<codeline lineno="621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(iface);</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_L2_PPP_MGMT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1gad7f41d9012098ed1a04f897e252cc32d" kindref="member">ppp_mgmt_raise_phase_dead_event</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="group__ppp_1gad7f41d9012098ed1a04f897e252cc32d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1gad7f41d9012098ed1a04f897e252cc32d" kindref="member">ppp_mgmt_raise_phase_dead_event</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface)</highlight></codeline>
<codeline lineno="635"><highlight class="normal">{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(iface);</highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_L2_PPP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga9893a7c93b3d23b96b4d83aa1204c500" kindref="member">net_ppp_ping</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="group__ppp_1ga9893a7c93b3d23b96b4d83aa1204c500" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ppp_1ga9893a7c93b3d23b96b4d83aa1204c500" kindref="member">net_ppp_ping</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>)</highlight></codeline>
<codeline lineno="654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(idx);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga91457bbf35f0f1085619a99423bb1f33" kindref="member">ENOTSUP</ref>;</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_L2_PPP)<sp/>&amp;&amp;<sp/>defined(CONFIG_NET_SHELL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__context" kindref="compound">ppp_context</ref><sp/>*<ref refid="group__ppp_1ga4f6104cff735f9829762b6552a7346bf" kindref="member">net_ppp_context_get</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673" refid="group__ppp_1ga4f6104cff735f9829762b6552a7346bf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structppp__context" kindref="compound">ppp_context</ref><sp/>*<ref refid="group__ppp_1ga4f6104cff735f9829762b6552a7346bf" kindref="member">net_ppp_context_get</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)</highlight></codeline>
<codeline lineno="674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(idx);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_NET_PPP_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/net/ppp.h"/>
  </compounddef>
</doxygen>
