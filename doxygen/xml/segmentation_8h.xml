<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="segmentation_8h" kind="file" language="C++">
    <compoundname>segmentation.h</compoundname>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includedby refid="x86_2ia32_2arch_8h" local="no">include/arch/x86/ia32/arch.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/arch/x86/ia32/segmentation.h</label>
        <link refid="segmentation_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>include/arch/x86/arch.h</label>
        <link refid="x86_2arch_8h"/>
      </node>
      <node id="2">
        <label>include/arch/x86/ia32/arch.h</label>
        <link refid="x86_2ia32_2arch_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/arch/x86/ia32/segmentation.h</label>
        <link refid="segmentation_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structtask__state__segment" prot="public">task_state_segment</innerclass>
    <innerclass refid="structsegment__descriptor" prot="public">segment_descriptor</innerclass>
    <innerclass refid="structpseudo__descriptor" prot="public">pseudo_descriptor</innerclass>
    <innerclass refid="structfar__ptr" prot="public">far_ptr</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="segmentation_8h_1a1123609025ff8c35fcebbeefc627fe40" prot="public" static="no">
        <name>SEG_TYPE_LDT</name>
        <initializer>0x2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="25" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a09b28d129d4935e1ac79010ad2ed845c" prot="public" static="no">
        <name>SEG_TYPE_TASK_GATE</name>
        <initializer>0x5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="26" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a9526fd354b043f1d989133fb51584ca5" prot="public" static="no">
        <name>SEG_TYPE_TSS</name>
        <initializer>0x9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="27" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a358e9557d55f44b1e0c48f56e9bb8eb8" prot="public" static="no">
        <name>SEG_TYPE_TSS_BUSY</name>
        <initializer>0xB</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="28" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a06659cf84f44e085e88adf1f249ea958" prot="public" static="no">
        <name>SEG_TYPE_CALL_GATE</name>
        <initializer>0xC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="29" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a62c20d09a1f35aadbffc000ce695aca5" prot="public" static="no">
        <name>SEG_TYPE_IRQ_GATE</name>
        <initializer>0xE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="30" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a24ba226f5d7c4a2d0e73d129b811d009" prot="public" static="no">
        <name>SEG_TYPE_TRAP_GATE</name>
        <initializer>0xF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="31" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a93b8e20c30316e0b31ce2d72ee429267" prot="public" static="no">
        <name>DT_GRAN_BYTE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="33" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1abd17be4fcc2b1627fdd9fce4f2616034" prot="public" static="no">
        <name>DT_GRAN_PAGE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="34" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1adb3a30ddf8c9e70de7f2f4e9532012c2" prot="public" static="no">
        <name>DT_READABLE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="36" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a440b0121a23eaee4a6da138464598332" prot="public" static="no">
        <name>DT_NON_READABLE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="37" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a9fed0f1041479b83a2177ce758026e01" prot="public" static="no">
        <name>DT_WRITABLE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="39" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a06578eef93a325c17c431c4e30358f68" prot="public" static="no">
        <name>DT_NON_WRITABLE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="40" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1aafd044e471668a2ad5d65d375fcb037b" prot="public" static="no">
        <name>DT_EXPAND_DOWN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="42" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a42725696f61f6c208aad358e0ef99521" prot="public" static="no">
        <name>DT_EXPAND_UP</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="43" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a1bf28de4d983377685927df65ada05fc" prot="public" static="no">
        <name>DT_CONFORM</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="45" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a829d7ba32b7ff93ee11394e198412fb6" prot="public" static="no">
        <name>DT_NONCONFORM</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="46" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a7e6ddc88924ea43b4d89f367cee558d4" prot="public" static="no">
        <name>DT_TYPE_SYSTEM</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="48" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1adde93db381ef8fc598457a3cef782aa1" prot="public" static="no">
        <name>DT_TYPE_CODEDATA</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="49" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a7ac21eabd74b9b1e132d0925841a162d" prot="public" static="no">
        <name>SEG_SELECTOR</name>
        <param><defname>index</defname></param>
        <param><defname>table</defname></param>
        <param><defname>dpl</defname></param>
        <initializer>(<ref refid="thread__competition_8c_1aafd95f8c7a99b9189ede7cdf0871ebe8" kindref="member">index</ref> &lt;&lt; 3 | table &lt;&lt; 2 | dpl)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="96" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1abe841886ae3cb0d59ceb52885d1283c7" prot="public" static="no">
        <name>DT_ZERO_ENTRY</name>
        <initializer>{ { 0 } }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="232" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1ab5c6bcde7b78dff38fcb2c4f3933e976" prot="public" static="no">
        <name>DT_CODE_SEG_ENTRY</name>
        <param><defname>base_p</defname></param>
        <param><defname>limit_p</defname></param>
        <param><defname>granularity_p</defname></param>
        <param><defname>dpl_p</defname></param>
        <param><defname>readable_p</defname></param>
        <param><defname>conforming_p</defname></param>
        <initializer>	{ \
		_DESC_COMMON(dpl_p), \
		_LIMIT_AND_BASE(base_p, limit_p, granularity_p), \
		.accessed = 0, \
		.rw = (readable_p), \
		.cd = (conforming_p), \
		.executable = 1, \
		.descriptor_type = 1 \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="268" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a91d1151f098e25c090d23d837c7aab05" prot="public" static="no">
        <name>DT_DATA_SEG_ENTRY</name>
        <param><defname>base_p</defname></param>
        <param><defname>limit_p</defname></param>
        <param><defname>granularity_p</defname></param>
        <param><defname>dpl_p</defname></param>
        <param><defname>writable_p</defname></param>
        <param><defname>direction_p</defname></param>
        <initializer>	{ \
		_DESC_COMMON(dpl_p), \
		_LIMIT_AND_BASE(base_p, limit_p, granularity_p), \
		.accessed = 0, \
		.rw = (writable_p), \
		.cd = (direction_p), \
		.executable = 0, \
		.descriptor_type = 1 \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="280" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1af27ff503d122d2da7548544833ec8549" prot="public" static="no">
        <name>DT_LDT_ENTRY</name>
        <param><defname>base_p</defname></param>
        <param><defname>limit_p</defname></param>
        <param><defname>granularity_p</defname></param>
        <param><defname>dpl_p</defname></param>
        <initializer>	{ \
		_DESC_COMMON(dpl_p), \
		_LIMIT_AND_BASE(base_p, limit_p, granularity_p), \
		_SYS_DESC(<ref refid="segmentation_8h_1a1123609025ff8c35fcebbeefc627fe40" kindref="member">SEG_TYPE_LDT</ref>) \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="291" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1ae5739136f793ed325e29441584ea65a5" prot="public" static="no">
        <name>DT_TSS_ENTRY</name>
        <param><defname>base_p</defname></param>
        <param><defname>limit_p</defname></param>
        <param><defname>granularity_p</defname></param>
        <param><defname>dpl_p</defname></param>
        <initializer>	{ \
		_DESC_COMMON(dpl_p), \
		_LIMIT_AND_BASE(base_p, limit_p, granularity_p), \
		_SYS_DESC(<ref refid="segmentation_8h_1a9526fd354b043f1d989133fb51584ca5" kindref="member">SEG_TYPE_TSS</ref>) \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="298" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a80cfbaa5c30032fafa5507255a2910e4" prot="public" static="no">
        <name>DT_TSS_STD_ENTRY</name>
        <param><defname>base_p</defname></param>
        <param><defname>dpl_p</defname></param>
        <initializer>	<ref refid="segmentation_8h_1ae5739136f793ed325e29441584ea65a5" kindref="member">DT_TSS_ENTRY</ref>(base_p, sizeof(struct <ref refid="structtask__state__segment" kindref="compound">task_state_segment</ref>), <ref refid="segmentation_8h_1a93b8e20c30316e0b31ce2d72ee429267" kindref="member">DT_GRAN_BYTE</ref>, \
		     dpl_p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="308" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a3d598069efca9fad4537f5184f65a1a4" prot="public" static="no">
        <name>DT_TASK_GATE_ENTRY</name>
        <param><defname>segment_p</defname></param>
        <param><defname>dpl_p</defname></param>
        <initializer>	{ \
		_DESC_COMMON(dpl_p), \
		_SYS_DESC(<ref refid="segmentation_8h_1a09b28d129d4935e1ac79010ad2ed845c" kindref="member">SEG_TYPE_TASK_GATE</ref>), \
		.segment_selector = (segment_p) \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="312" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a75b12840f3c26ab2de1240874c6ffc82" prot="public" static="no">
        <name>DT_IRQ_GATE_ENTRY</name>
        <param><defname>segment_p</defname></param>
        <param><defname>offset_p</defname></param>
        <param><defname>dpl_p</defname></param>
        <initializer>	{ \
		_DESC_COMMON(dpl_p), \
		_SEGMENT_AND_OFFSET(segment_p, offset_p), \
		_SYS_DESC(<ref refid="segmentation_8h_1a62c20d09a1f35aadbffc000ce695aca5" kindref="member">SEG_TYPE_IRQ_GATE</ref>), \
		.always_0_0 = 0 \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="319" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a21a76c871381dce14ff5f35520db7cf0" prot="public" static="no">
        <name>DT_TRAP_GATE_ENTRY</name>
        <param><defname>segment_p</defname></param>
        <param><defname>offset_p</defname></param>
        <param><defname>dpl_p</defname></param>
        <initializer>	{ \
		_DESC_COMMON(dpl_p), \
		_SEGMENT_AND_OFFSET(segment_p, offset_p), \
		_SYS_DESC(<ref refid="segmentation_8h_1a24ba226f5d7c4a2d0e73d129b811d009" kindref="member">SEG_TYPE_TRAP_GATE</ref>), \
		.always_0_0 = 0 \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="327" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a275e217de9e845c8c9ac717120883796" prot="public" static="no">
        <name>DT_CALL_GATE_ENTRY</name>
        <param><defname>segment_p</defname></param>
        <param><defname>offset_p</defname></param>
        <param><defname>dpl_p</defname></param>
        <param><defname>param_count_p</defname></param>
        <initializer>	{ \
		_DESC_COMMON(dpl_p), \
		_SEGMENT_AND_OFFSET(segment_p, offset_p), \
		_SYS_DESC(<ref refid="segmentation_8h_1a24ba226f5d7c4a2d0e73d129b811d009" kindref="member">SEG_TYPE_TRAP_GATE</ref>), \
		.reserved_or_param = (param_count_p), \
		.always_0_0 = 0 \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="335" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a1ea5335d043ecfb349e0a97da0734a51" prot="public" static="no">
        <name>DTE_BASE</name>
        <param><defname>dt_entry</defname></param>
        <initializer>			    ((dt_entry)-&gt;base_low | \
			    ((dt_entry)-&gt;base_mid &lt;&lt; 16) | \
			    ((dt_entry)-&gt;base_hi &lt;&lt; 24))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="344" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a0f68ae723f072069a290b322aee9a133" prot="public" static="no">
        <name>DTE_LIMIT</name>
        <param><defname>dt_entry</defname></param>
        <initializer>			     ((dt_entry)-&gt;limit_low | \
			     ((dt_entry)-&gt;limit_hi &lt;&lt; 16))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="348" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a1539f29629508325e28796d3226630cc" prot="public" static="no">
        <name>DTE_OFFSET</name>
        <param><defname>dt_entry</defname></param>
        <initializer>			      ((dt_entry)-&gt;offset_low | \
			      ((dt_entry)-&gt;offset_hi &lt;&lt; 16))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="351" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="segmentation_8h_1a76e349fa3b5b4263cf2fbe93e11ece50" prot="public" static="no">
        <name>DT_INIT</name>
        <param><defname>entries</defname></param>
        <initializer>{ sizeof(entries) - 1, &amp;entries[0] }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/segmentation.h" line="354" column="9" bodyfile="include/arch/x86/ia32/segmentation.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_ARCH_X86_IA32_SEGMENTATION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_ARCH_X86_IA32_SEGMENTATION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Host<sp/>gen_idt<sp/>uses<sp/>this<sp/>header<sp/>as<sp/>well,<sp/>don&apos;t<sp/>depend<sp/>on<sp/>toolchain.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__packed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__packed<sp/>__attribute__((packed))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>We<sp/>currently<sp/>do<sp/>not<sp/>have<sp/>definitions<sp/>for<sp/>16-bit<sp/>segment,<sp/>currently</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>assume<sp/>everything<sp/>we<sp/>are<sp/>working<sp/>with<sp/>is<sp/>32-bit</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="segmentation_8h_1a1123609025ff8c35fcebbeefc627fe40" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEG_TYPE_LDT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="segmentation_8h_1a09b28d129d4935e1ac79010ad2ed845c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEG_TYPE_TASK_GATE<sp/><sp/><sp/><sp/><sp/><sp/>0x5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="segmentation_8h_1a9526fd354b043f1d989133fb51584ca5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEG_TYPE_TSS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="segmentation_8h_1a358e9557d55f44b1e0c48f56e9bb8eb8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEG_TYPE_TSS_BUSY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="segmentation_8h_1a06659cf84f44e085e88adf1f249ea958" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEG_TYPE_CALL_GATE<sp/><sp/><sp/><sp/><sp/><sp/>0xC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="segmentation_8h_1a62c20d09a1f35aadbffc000ce695aca5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEG_TYPE_IRQ_GATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="segmentation_8h_1a24ba226f5d7c4a2d0e73d129b811d009" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEG_TYPE_TRAP_GATE<sp/><sp/><sp/><sp/><sp/><sp/>0xF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="segmentation_8h_1a93b8e20c30316e0b31ce2d72ee429267" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_GRAN_BYTE<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="segmentation_8h_1abd17be4fcc2b1627fdd9fce4f2616034" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_GRAN_PAGE<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="segmentation_8h_1adb3a30ddf8c9e70de7f2f4e9532012c2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_READABLE<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="segmentation_8h_1a440b0121a23eaee4a6da138464598332" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_NON_READABLE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="segmentation_8h_1a9fed0f1041479b83a2177ce758026e01" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_WRITABLE<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="segmentation_8h_1a06578eef93a325c17c431c4e30358f68" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_NON_WRITABLE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="segmentation_8h_1aafd044e471668a2ad5d65d375fcb037b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_EXPAND_DOWN<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="segmentation_8h_1a42725696f61f6c208aad358e0ef99521" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_EXPAND_UP<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="segmentation_8h_1a1bf28de4d983377685927df65ada05fc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_CONFORM<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="segmentation_8h_1a829d7ba32b7ff93ee11394e198412fb6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_NONCONFORM<sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="segmentation_8h_1a7e6ddc88924ea43b4d89f367cee558d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_TYPE_SYSTEM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="segmentation_8h_1adde93db381ef8fc598457a3cef782aa1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_TYPE_CODEDATA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_ASMLANGUAGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Section<sp/>7.2.1<sp/>of<sp/>IA<sp/>architecture<sp/>SW<sp/>developer<sp/>manual,<sp/>Vol<sp/>3.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structtask__state__segment" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__packed<sp/><ref refid="structtask__state__segment" kindref="compound">task_state_segment</ref><sp/>{</highlight></codeline>
<codeline lineno="55" refid="structtask__state__segment_1a6dca0f6680e373545f31490cb4667a1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1a6dca0f6680e373545f31490cb4667a1e" kindref="member">backlink</ref>;</highlight></codeline>
<codeline lineno="56" refid="structtask__state__segment_1ace0a346f5ca56fc785d17a8cb76c3f00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1ace0a346f5ca56fc785d17a8cb76c3f00" kindref="member">reserved_1</ref>;</highlight></codeline>
<codeline lineno="57" refid="structtask__state__segment_1ae613a01ad49d8aaa43fb955cf95e1de1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structtask__state__segment_1ae613a01ad49d8aaa43fb955cf95e1de1" kindref="member">esp0</ref>;</highlight></codeline>
<codeline lineno="58" refid="structtask__state__segment_1a74e85e53e171c23d5f29f1efe0131b0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1a74e85e53e171c23d5f29f1efe0131b0a" kindref="member">ss0</ref>;</highlight></codeline>
<codeline lineno="59" refid="structtask__state__segment_1a93ce3a1140962ce0bb74cb6101b5d696" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1a93ce3a1140962ce0bb74cb6101b5d696" kindref="member">reserved_2</ref>;</highlight></codeline>
<codeline lineno="60" refid="structtask__state__segment_1a9f656f69a3e9cd7d74e2e5c27a0c4d79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structtask__state__segment_1a9f656f69a3e9cd7d74e2e5c27a0c4d79" kindref="member">esp1</ref>;</highlight></codeline>
<codeline lineno="61" refid="structtask__state__segment_1a1e8cf1eb785cd0cebfab53c6b6f55922" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1a1e8cf1eb785cd0cebfab53c6b6f55922" kindref="member">ss1</ref>;</highlight></codeline>
<codeline lineno="62" refid="structtask__state__segment_1a6790bfb30732ab246b20827fd5d26834" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1a6790bfb30732ab246b20827fd5d26834" kindref="member">reserved_3</ref>;</highlight></codeline>
<codeline lineno="63" refid="structtask__state__segment_1a1cb20df4a49a73a2d0b88a8df19621c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structtask__state__segment_1a1cb20df4a49a73a2d0b88a8df19621c2" kindref="member">esp2</ref>;</highlight></codeline>
<codeline lineno="64" refid="structtask__state__segment_1ac8b023be5e2cd2d50ec55d15f7510c15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1ac8b023be5e2cd2d50ec55d15f7510c15" kindref="member">ss2</ref>;</highlight></codeline>
<codeline lineno="65" refid="structtask__state__segment_1a354f74ae39ffff533dfe18693fc813d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1a354f74ae39ffff533dfe18693fc813d4" kindref="member">reserved_4</ref>;</highlight></codeline>
<codeline lineno="66" refid="structtask__state__segment_1a3de57a3414f018da7b074a8c0b38ee98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structtask__state__segment_1a3de57a3414f018da7b074a8c0b38ee98" kindref="member">cr3</ref>;</highlight></codeline>
<codeline lineno="67" refid="structtask__state__segment_1aa1992e03e583070d318adb554f28b8e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structtask__state__segment_1aa1992e03e583070d318adb554f28b8e8" kindref="member">eip</ref>;</highlight></codeline>
<codeline lineno="68" refid="structtask__state__segment_1ab5e6713aa56576ebf4b4f15bff800993" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structtask__state__segment_1ab5e6713aa56576ebf4b4f15bff800993" kindref="member">eflags</ref>;</highlight></codeline>
<codeline lineno="69" refid="structtask__state__segment_1aca6436062f7e47e63b364aa331498a9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structtask__state__segment_1aca6436062f7e47e63b364aa331498a9c" kindref="member">eax</ref>;</highlight></codeline>
<codeline lineno="70" refid="structtask__state__segment_1a3bd54264357890c87cfc6ebf12ffa8eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structtask__state__segment_1a3bd54264357890c87cfc6ebf12ffa8eb" kindref="member">ecx</ref>;</highlight></codeline>
<codeline lineno="71" refid="structtask__state__segment_1a36275826a694fb98a7e3d68253991eb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structtask__state__segment_1a36275826a694fb98a7e3d68253991eb3" kindref="member">edx</ref>;</highlight></codeline>
<codeline lineno="72" refid="structtask__state__segment_1a80e9653cc996ae57e33e263773493058" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structtask__state__segment_1a80e9653cc996ae57e33e263773493058" kindref="member">ebx</ref>;</highlight></codeline>
<codeline lineno="73" refid="structtask__state__segment_1af439750f77fd6067776fd24c13443fde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structtask__state__segment_1af439750f77fd6067776fd24c13443fde" kindref="member">esp</ref>;</highlight></codeline>
<codeline lineno="74" refid="structtask__state__segment_1a1b9505b29bba1d91c92457f898e29175" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structtask__state__segment_1a1b9505b29bba1d91c92457f898e29175" kindref="member">ebp</ref>;</highlight></codeline>
<codeline lineno="75" refid="structtask__state__segment_1a23f6ba3c3c80d83eabb3e4981a684f86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structtask__state__segment_1a23f6ba3c3c80d83eabb3e4981a684f86" kindref="member">esi</ref>;</highlight></codeline>
<codeline lineno="76" refid="structtask__state__segment_1a305dc05c6ce45b06d5c08886fbc629d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structtask__state__segment_1a305dc05c6ce45b06d5c08886fbc629d2" kindref="member">edi</ref>;</highlight></codeline>
<codeline lineno="77" refid="structtask__state__segment_1a6fa263ba438e73c765619549082a9c6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1a6fa263ba438e73c765619549082a9c6b" kindref="member">es</ref>;</highlight></codeline>
<codeline lineno="78" refid="structtask__state__segment_1acae3c67be6cf9f776db8dbe60a13e192" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1acae3c67be6cf9f776db8dbe60a13e192" kindref="member">reserved_5</ref>;</highlight></codeline>
<codeline lineno="79" refid="structtask__state__segment_1a14fc9b3472e8ba0b02e1a74576d83ded" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1a14fc9b3472e8ba0b02e1a74576d83ded" kindref="member">cs</ref>;</highlight></codeline>
<codeline lineno="80" refid="structtask__state__segment_1ad1a611412a5057e35d8c7fd88cb502fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1ad1a611412a5057e35d8c7fd88cb502fa" kindref="member">reserved_6</ref>;</highlight></codeline>
<codeline lineno="81" refid="structtask__state__segment_1a007494cfabe3da5e7ae4fc17a57cb33d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1a007494cfabe3da5e7ae4fc17a57cb33d" kindref="member">ss</ref>;</highlight></codeline>
<codeline lineno="82" refid="structtask__state__segment_1ade71f2bdd6c3866243823ccf4dfc92ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1ade71f2bdd6c3866243823ccf4dfc92ef" kindref="member">reserved_7</ref>;</highlight></codeline>
<codeline lineno="83" refid="structtask__state__segment_1ac04302ea0ad115bbc792ae40396ce78c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1ac04302ea0ad115bbc792ae40396ce78c" kindref="member">ds</ref>;</highlight></codeline>
<codeline lineno="84" refid="structtask__state__segment_1aa643892a3d4af08cf265349a67cb5a45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1aa643892a3d4af08cf265349a67cb5a45" kindref="member">reserved_8</ref>;</highlight></codeline>
<codeline lineno="85" refid="structtask__state__segment_1a8954360b2c87c2de06c3ed56437f9a32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1a8954360b2c87c2de06c3ed56437f9a32" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="86" refid="structtask__state__segment_1a12e6373361b91eb6d1895f9567eb6d08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1a12e6373361b91eb6d1895f9567eb6d08" kindref="member">reserved_9</ref>;</highlight></codeline>
<codeline lineno="87" refid="structtask__state__segment_1ac0a81528e661c91b158f030b6766fd7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1ac0a81528e661c91b158f030b6766fd7b" kindref="member">gs</ref>;</highlight></codeline>
<codeline lineno="88" refid="structtask__state__segment_1a302eaf04a2515f8683dd306cc2448272" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1a302eaf04a2515f8683dd306cc2448272" kindref="member">reserved_10</ref>;</highlight></codeline>
<codeline lineno="89" refid="structtask__state__segment_1ab6dfdcda415383ef97b8d1363c202f7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1ab6dfdcda415383ef97b8d1363c202f7b" kindref="member">ldt_ss</ref>;</highlight></codeline>
<codeline lineno="90" refid="structtask__state__segment_1aeeff71878d4552cf204e882170afe2bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1aeeff71878d4552cf204e882170afe2bf" kindref="member">reserved_11</ref>;</highlight></codeline>
<codeline lineno="91" refid="structtask__state__segment_1ad26eb9b45acb4b97fecd6a9654b32b07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structtask__state__segment_1ad26eb9b45acb4b97fecd6a9654b32b07" kindref="member">t</ref>:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trap<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="structtask__state__segment_1a1518afb7acfda8e8c15b2750b726a900" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1a1518afb7acfda8e8c15b2750b726a900" kindref="member">reserved_12</ref>:15;</highlight></codeline>
<codeline lineno="93" refid="structtask__state__segment_1a4d0ac1ee16bf85562c7af4de080ecf43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtask__state__segment_1a4d0ac1ee16bf85562c7af4de080ecf43" kindref="member">iomap</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="segmentation_8h_1a7ac21eabd74b9b1e132d0925841a162d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEG_SELECTOR(index,<sp/>table,<sp/>dpl)<sp/>(index<sp/>&lt;&lt;<sp/>3<sp/>|<sp/>table<sp/>&lt;&lt;<sp/>2<sp/>|<sp/>dpl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>References</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>Section<sp/>5.8.3<sp/>(Call<sp/>gates)</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>Section<sp/>7.2.2<sp/>(TSS<sp/>Descriptor)</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>Section<sp/>3.4.5<sp/>(Segment<sp/>descriptors)</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>Section<sp/>6.11<sp/>(IDT<sp/>Descriptors)</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>IA<sp/>architecture<sp/>SW<sp/>developer<sp/>manual,<sp/>Vol<sp/>3.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="structsegment__descriptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__packed<sp/><ref refid="structsegment__descriptor" kindref="compound">segment_descriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>DWORD:<sp/>0-15<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IRQ,<sp/>call,<sp/>trap<sp/>gates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="structsegment__descriptor_1aaec62c0ab8bb3ce1c01887ec2bc3579c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structsegment__descriptor_1aaec62c0ab8bb3ce1c01887ec2bc3579c" kindref="member">limit_low</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Task<sp/>gates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="structsegment__descriptor_1acb81ff32dbec3821c9ba1cb423c5bb4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structsegment__descriptor_1acb81ff32dbec3821c9ba1cb423c5bb4d" kindref="member">reserved_task_gate_0</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Everything<sp/>else<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="structsegment__descriptor_1aacf357093163d9cb7c29de2cd4d74af1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structsegment__descriptor_1aacf357093163d9cb7c29de2cd4d74af1" kindref="member">offset_low</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>DWORD:<sp/>16-31<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call/Task/Interrupt/Trap<sp/>gates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="structsegment__descriptor_1ada9905938c5214787bb9a235658582dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structsegment__descriptor_1ada9905938c5214787bb9a235658582dd" kindref="member">segment_selector</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TSS/LDT/Segments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="structsegment__descriptor_1a22d9a7e9718d670507a0555b131079aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structsegment__descriptor_1a22d9a7e9718d670507a0555b131079aa" kindref="member">base_low</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bits<sp/>0-15<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Second<sp/>DWORD:<sp/>0-7<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TSS/LDT/Segments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="structsegment__descriptor_1a9bc044fe835300da74561089217ae3b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1a9bc044fe835300da74561089217ae3b2" kindref="member">base_mid</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bits<sp/>16-23<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Task<sp/>gates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="structsegment__descriptor_1a28e1c069a7afe06119ff057ecf388bd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1a28e1c069a7afe06119ff057ecf388bd2" kindref="member">reserved_task_gate_1</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IRQ/Trap/Call<sp/>Gates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reserved<sp/>except<sp/>in<sp/>case<sp/>of<sp/>call<sp/>gates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="structsegment__descriptor_1a6edf9d47468d11d8bbc2c3525217b42d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1a6edf9d47468d11d8bbc2c3525217b42d" kindref="member">reserved_or_param</ref>:5;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bits<sp/>5-7<sp/>0<sp/>0<sp/>0<sp/>per<sp/>CPU<sp/>manual<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="structsegment__descriptor_1a17006cb3ba7efd21a951e882e34b088d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1a17006cb3ba7efd21a951e882e34b088d" kindref="member">always_0_0</ref>:3;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Second<sp/>DWORD:<sp/>8-15<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Code<sp/>or<sp/>data<sp/>Segments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>by<sp/>the<sp/>processor,<sp/>init<sp/>to<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="structsegment__descriptor_1aaa5b961b21b18d1efd9987dbfc42ad95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1aaa5b961b21b18d1efd9987dbfc42ad95" kindref="member">accessed</ref>:1;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>executable<sp/>?<sp/>readable<sp/>:<sp/>writable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="structsegment__descriptor_1a598e508bbfbb9ed317bf6b91fd80b0e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1a598e508bbfbb9ed317bf6b91fd80b0e9" kindref="member">rw</ref>:1;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>executable<sp/>?<sp/>conforming<sp/>:<sp/>direction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="structsegment__descriptor_1a25407a6f10ee04a42832238639e4d4ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1a25407a6f10ee04a42832238639e4d4ac" kindref="member">cd</ref>:1;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1=code<sp/>0=data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="structsegment__descriptor_1a45ebb67e9b54d4780ec42861e13531fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1a45ebb67e9b54d4780ec42861e13531fd" kindref="member">executable</ref>:1;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Next<sp/>3<sp/>fields<sp/>actually<sp/>common<sp/>to<sp/>all<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1=code<sp/>or<sp/>data,<sp/>0=system<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="structsegment__descriptor_1a95674f043c616032bf416facd6ac0469" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1a95674f043c616032bf416facd6ac0469" kindref="member">descriptor_type</ref>:1;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="structsegment__descriptor_1af9c72e8bd49845bf9c9bc16c2b788adf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1af9c72e8bd49845bf9c9bc16c2b788adf" kindref="member">dpl</ref>:2;</highlight></codeline>
<codeline lineno="168" refid="structsegment__descriptor_1a61eda78022c10db647ce9e76a62a27a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1a61eda78022c10db647ce9e76a62a27a6" kindref="member">present</ref>:1;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>One<sp/>of<sp/>the<sp/>SEG_TYPE_*<sp/>macros<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="structsegment__descriptor_1a88f41f8cda2177a6d70b9cf7c315053c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1a88f41f8cda2177a6d70b9cf7c315053c" kindref="member">type</ref>:4;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Alas,<sp/>C<sp/>doesn&apos;t<sp/>let<sp/>you<sp/>do<sp/>a<sp/>union<sp/>of<sp/>the<sp/>first</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>4<sp/>bits<sp/>of<sp/>a<sp/>bitfield<sp/>and<sp/>put<sp/>the<sp/>rest<sp/>outside<sp/>of<sp/>it,</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>it<sp/>ends<sp/>up<sp/>getting<sp/>padded.</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="structsegment__descriptor_1ac9f594b7ca9e04d5a7cf8a246c73c7d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1ac9f594b7ca9e04d5a7cf8a246c73c7d5" kindref="member">use_other_union</ref>:4;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Second<sp/>DWORD:<sp/>16-31<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call/IRQ/trap<sp/>gates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="structsegment__descriptor_1a86d61b5de39020e207f567a5909aeaba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structsegment__descriptor_1a86d61b5de39020e207f567a5909aeaba" kindref="member">offset_hi</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Task<sp/>Gates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="structsegment__descriptor_1a1a8678d1406de90c691a243a4562997d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structsegment__descriptor_1a1a8678d1406de90c691a243a4562997d" kindref="member">reserved_task_gate_2</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>segment/LDT/TSS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194" refid="structsegment__descriptor_1ad233fd87d891ca5f44b7e414c8766b05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1ad233fd87d891ca5f44b7e414c8766b05" kindref="member">limit_hi</ref>:4;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="structsegment__descriptor_1a59e97c4fc79505fd8095d02edc01480f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1a59e97c4fc79505fd8095d02edc01480f" kindref="member">avl</ref>:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CPU<sp/>ignores<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1=Indicates<sp/>64-bit<sp/>code<sp/>segment<sp/>in<sp/>IA-32e<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="structsegment__descriptor_1aa62f29b11de78f55aa7a829d69a07939" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1aa62f29b11de78f55aa7a829d69a07939" kindref="member">flags_l</ref>:1;<sp/></highlight><highlight class="comment">/*<sp/>L<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="structsegment__descriptor_1a3b59b1ec549510eae9c3c2772d782e1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1a3b59b1ec549510eae9c3c2772d782e1a" kindref="member">db</ref>:1;<sp/></highlight><highlight class="comment">/*<sp/>D/B<sp/>field<sp/>1=32-bit<sp/>0=16-bit*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="structsegment__descriptor_1aebd148eac6d6e78c0a028531a76d22a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1aebd148eac6d6e78c0a028531a76d22a8" kindref="member">granularity</ref>:1;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="structsegment__descriptor_1a37dcfdc6eea1021d6be4f18aa26d4030" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsegment__descriptor_1a37dcfdc6eea1021d6be4f18aa26d4030" kindref="member">base_hi</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bits<sp/>24-31<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Address<sp/>of<sp/>this<sp/>passed<sp/>to<sp/>lidt/lgdt.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>IA<sp/>manual<sp/>calls<sp/>this<sp/>a<sp/>&apos;pseudo<sp/>descriptor&apos;.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="structpseudo__descriptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__packed<sp/><ref refid="structpseudo__descriptor" kindref="compound">pseudo_descriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="216" refid="structpseudo__descriptor_1ac20c21d8d985238e7b83c08ea735ca27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structpseudo__descriptor_1ac20c21d8d985238e7b83c08ea735ca27" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="217" refid="structpseudo__descriptor_1ad21f2391c31085657551eabf92249b8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsegment__descriptor" kindref="compound">segment_descriptor</ref><sp/>*<ref refid="structpseudo__descriptor_1ad21f2391c31085657551eabf92249b8c" kindref="member">entries</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>Full<sp/>linear<sp/>address<sp/>(segment<sp/>selector+offset),<sp/>for<sp/>far<sp/>jumps/calls</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="structfar__ptr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__packed<sp/><ref refid="structfar__ptr" kindref="compound">far_ptr</ref><sp/>{</highlight></codeline>
<codeline lineno="226" refid="structfar__ptr_1a348a66049c5a1cf56e86743c03ce568b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structfar__ptr_1a348a66049c5a1cf56e86743c03ce568b" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="228" refid="structfar__ptr_1a756bf5b1059a1d637556aadbf687df31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structfar__ptr_1a756bf5b1059a1d637556aadbf687df31" kindref="member">sel</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="segmentation_8h_1abe841886ae3cb0d59ceb52885d1283c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_ZERO_ENTRY<sp/>{<sp/>{<sp/>0<sp/>}<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>the<sp/>below<sp/>macros<sp/>only<sp/>work<sp/>for<sp/>fixed<sp/>addresses<sp/>provided<sp/>at<sp/>build<sp/>time.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*<sp/>Base<sp/>addresses<sp/>or<sp/>offsets<sp/>cannot<sp/>be<sp/>&amp;some_variable,<sp/>as<sp/>pointer<sp/>values<sp/>are<sp/>not</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/>known<sp/>until<sp/>link<sp/>time<sp/>and<sp/>the<sp/>compiler<sp/>has<sp/>to<sp/>split<sp/>the<sp/>address<sp/>into<sp/>various</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>fields<sp/>in<sp/>the<sp/>segment<sp/>selector<sp/>well<sp/>before<sp/>that.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>If<sp/>you<sp/>really<sp/>need<sp/>to<sp/>put<sp/>&amp;some_variable<sp/>as<sp/>the<sp/>base<sp/>address<sp/>in<sp/>some</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>segment<sp/>descriptor,<sp/>you<sp/>will<sp/>either<sp/>need<sp/>to<sp/>do<sp/>the<sp/>assignment<sp/>at<sp/>runtime</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/>or<sp/>implement<sp/>some<sp/>tool<sp/>to<sp/>populate<sp/>values<sp/>post-link<sp/>like<sp/>gen_idt<sp/>does.</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_LIMIT_AND_BASE(base_p,<sp/>limit_p,<sp/>granularity_p)<sp/>\</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.base_low<sp/>=<sp/>(((uint32_t)base_p)<sp/>&amp;<sp/>0xFFFF),<sp/>\</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.base_mid<sp/>=<sp/>(((base_p)<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF),<sp/>\</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.base_hi<sp/>=<sp/>(((base_p)<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xFF),<sp/>\</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.limit_low<sp/>=<sp/>((limit_p)<sp/>&amp;<sp/>0xFFFF),<sp/>\</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.limit_hi<sp/>=<sp/>(((limit_p)<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xF),<sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.granularity<sp/>=<sp/>(granularity_p),<sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.flags_l<sp/>=<sp/>0,<sp/>\</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.db<sp/>=<sp/>1,<sp/>\</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.avl<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SEGMENT_AND_OFFSET(segment_p,<sp/>offset_p)<sp/>\</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.segment_selector<sp/>=<sp/>(segment_p),<sp/>\</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.offset_low<sp/>=<sp/>((offset_p)<sp/>&amp;<sp/>0xFFFF),<sp/>\</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.offset_hi<sp/>=<sp/>((offset_p)<sp/>&gt;&gt;<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_DESC_COMMON(dpl_p)<sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dpl<sp/>=<sp/>(dpl_p),<sp/>\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.present<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SYS_DESC(type_p)<sp/>\</highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.type<sp/>=<sp/>type_p,<sp/>\</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.descriptor_type<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="segmentation_8h_1ab5c6bcde7b78dff38fcb2c4f3933e976" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_CODE_SEG_ENTRY(base_p,<sp/>limit_p,<sp/>granularity_p,<sp/>dpl_p,<sp/>readable_p,<sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conforming_p)<sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DESC_COMMON(dpl_p),<sp/>\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_LIMIT_AND_BASE(base_p,<sp/>limit_p,<sp/>granularity_p),<sp/>\</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.accessed<sp/>=<sp/>0,<sp/>\</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rw<sp/>=<sp/>(readable_p),<sp/>\</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.cd<sp/>=<sp/>(conforming_p),<sp/>\</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.executable<sp/>=<sp/>1,<sp/>\</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.descriptor_type<sp/>=<sp/>1<sp/>\</highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="segmentation_8h_1a91d1151f098e25c090d23d837c7aab05" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_DATA_SEG_ENTRY(base_p,<sp/>limit_p,<sp/>granularity_p,<sp/>dpl_p,<sp/>writable_p,<sp/>\</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction_p)<sp/>\</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DESC_COMMON(dpl_p),<sp/>\</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_LIMIT_AND_BASE(base_p,<sp/>limit_p,<sp/>granularity_p),<sp/>\</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.accessed<sp/>=<sp/>0,<sp/>\</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rw<sp/>=<sp/>(writable_p),<sp/>\</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.cd<sp/>=<sp/>(direction_p),<sp/>\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.executable<sp/>=<sp/>0,<sp/>\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.descriptor_type<sp/>=<sp/>1<sp/>\</highlight></codeline>
<codeline lineno="289"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="segmentation_8h_1af27ff503d122d2da7548544833ec8549" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_LDT_ENTRY(base_p,<sp/>limit_p,<sp/>granularity_p,<sp/>dpl_p)<sp/>\</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DESC_COMMON(dpl_p),<sp/>\</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_LIMIT_AND_BASE(base_p,<sp/>limit_p,<sp/>granularity_p),<sp/>\</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SYS_DESC(SEG_TYPE_LDT)<sp/>\</highlight></codeline>
<codeline lineno="296"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="segmentation_8h_1ae5739136f793ed325e29441584ea65a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_TSS_ENTRY(base_p,<sp/>limit_p,<sp/>granularity_p,<sp/>dpl_p)<sp/>\</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DESC_COMMON(dpl_p),<sp/>\</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_LIMIT_AND_BASE(base_p,<sp/>limit_p,<sp/>granularity_p),<sp/>\</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SYS_DESC(SEG_TYPE_TSS)<sp/>\</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;standard&quot;<sp/>TSS<sp/>segments<sp/>that<sp/>don&apos;t<sp/>stuff<sp/>extra<sp/>data<sp/>past<sp/>the<sp/>end<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/>TSS<sp/>struct</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="segmentation_8h_1a80cfbaa5c30032fafa5507255a2910e4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_TSS_STD_ENTRY(base_p,<sp/>dpl_p)<sp/>\</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DT_TSS_ENTRY(base_p,<sp/>sizeof(struct<sp/>task_state_segment),<sp/>DT_GRAN_BYTE,<sp/>\</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dpl_p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="segmentation_8h_1a3d598069efca9fad4537f5184f65a1a4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_TASK_GATE_ENTRY(segment_p,<sp/>dpl_p)<sp/>\</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="314"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DESC_COMMON(dpl_p),<sp/>\</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SYS_DESC(SEG_TYPE_TASK_GATE),<sp/>\</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.segment_selector<sp/>=<sp/>(segment_p)<sp/>\</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="segmentation_8h_1a75b12840f3c26ab2de1240874c6ffc82" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_IRQ_GATE_ENTRY(segment_p,<sp/>offset_p,<sp/>dpl_p)<sp/>\</highlight></codeline>
<codeline lineno="320"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DESC_COMMON(dpl_p),<sp/>\</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SEGMENT_AND_OFFSET(segment_p,<sp/>offset_p),<sp/>\</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SYS_DESC(SEG_TYPE_IRQ_GATE),<sp/>\</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.always_0_0<sp/>=<sp/>0<sp/>\</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="segmentation_8h_1a21a76c871381dce14ff5f35520db7cf0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_TRAP_GATE_ENTRY(segment_p,<sp/>offset_p,<sp/>dpl_p)<sp/>\</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DESC_COMMON(dpl_p),<sp/>\</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SEGMENT_AND_OFFSET(segment_p,<sp/>offset_p),<sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SYS_DESC(SEG_TYPE_TRAP_GATE),<sp/>\</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.always_0_0<sp/>=<sp/>0<sp/>\</highlight></codeline>
<codeline lineno="333"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="segmentation_8h_1a275e217de9e845c8c9ac717120883796" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_CALL_GATE_ENTRY(segment_p,<sp/>offset_p,<sp/>dpl_p,<sp/>param_count_p)<sp/>\</highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="337"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DESC_COMMON(dpl_p),<sp/>\</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SEGMENT_AND_OFFSET(segment_p,<sp/>offset_p),<sp/>\</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SYS_DESC(SEG_TYPE_TRAP_GATE),<sp/>\</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.reserved_or_param<sp/>=<sp/>(param_count_p),<sp/>\</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.always_0_0<sp/>=<sp/>0<sp/>\</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="segmentation_8h_1a1ea5335d043ecfb349e0a97da0734a51" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DTE_BASE(dt_entry)<sp/>((dt_entry)-&gt;base_low<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="345"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((dt_entry)-&gt;base_mid<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="346"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((dt_entry)-&gt;base_hi<sp/>&lt;&lt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="segmentation_8h_1a0f68ae723f072069a290b322aee9a133" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DTE_LIMIT(dt_entry)<sp/>((dt_entry)-&gt;limit_low<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="349"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((dt_entry)-&gt;limit_hi<sp/>&lt;&lt;<sp/>16))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="segmentation_8h_1a1539f29629508325e28796d3226630cc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DTE_OFFSET(dt_entry)<sp/>((dt_entry)-&gt;offset_low<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="352"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((dt_entry)-&gt;offset_hi<sp/>&lt;&lt;<sp/>16))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="segmentation_8h_1a76e349fa3b5b4263cf2fbe93e11ece50" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DT_INIT(entries)<sp/>{<sp/>sizeof(entries)<sp/>-<sp/>1,<sp/>&amp;entries[0]<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_SET_GDT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>either<sp/>the<sp/>ROM-based<sp/>GDT<sp/>in<sp/>crt0.S<sp/>or<sp/>generated<sp/>by<sp/>gen_gdt.py,</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*<sp/>depending<sp/>on<sp/>CONFIG_GDT_DYNAMIC</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpseudo__descriptor" kindref="compound">pseudo_descriptor</ref><sp/>_gdt;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpseudo__descriptor" kindref="compound">pseudo_descriptor</ref><sp/>z_idt;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_sd_set_seg_offset(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsegment__descriptor" kindref="compound">segment_descriptor</ref><sp/>*sd,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>segment_selector,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>offset)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd-&gt;<ref refid="structsegment__descriptor_1aacf357093163d9cb7c29de2cd4d74af1" kindref="member">offset_low</ref><sp/>=<sp/>offset<sp/>&amp;<sp/>0xFFFFU;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd-&gt;<ref refid="structsegment__descriptor_1a86d61b5de39020e207f567a5909aeaba" kindref="member">offset_hi</ref><sp/>=<sp/>offset<sp/>&gt;&gt;<sp/>16U;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd-&gt;<ref refid="structsegment__descriptor_1ada9905938c5214787bb9a235658582dd" kindref="member">segment_selector</ref><sp/>=<sp/>segment_selector;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd-&gt;<ref refid="structsegment__descriptor_1a17006cb3ba7efd21a951e882e34b088d" kindref="member">always_0_0</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_init_irq_gate(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsegment__descriptor" kindref="compound">segment_descriptor</ref><sp/>*sd,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>seg_selector,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>offset,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>dpl)</highlight></codeline>
<codeline lineno="396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_sd_set_seg_offset(sd,<sp/>seg_selector,<sp/>offset);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd-&gt;<ref refid="structsegment__descriptor_1af9c72e8bd49845bf9c9bc16c2b788adf" kindref="member">dpl</ref><sp/>=<sp/>dpl;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd-&gt;<ref refid="structsegment__descriptor_1a95674f043c616032bf416facd6ac0469" kindref="member">descriptor_type</ref><sp/>=<sp/><ref refid="segmentation_8h_1a7e6ddc88924ea43b4d89f367cee558d4" kindref="member">DT_TYPE_SYSTEM</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd-&gt;<ref refid="structsegment__descriptor_1a61eda78022c10db647ce9e76a62a27a6" kindref="member">present</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd-&gt;<ref refid="structsegment__descriptor_1a88f41f8cda2177a6d70b9cf7c315053c" kindref="member">type</ref><sp/>=<sp/><ref refid="segmentation_8h_1a62c20d09a1f35aadbffc000ce695aca5" kindref="member">SEG_TYPE_IRQ_GATE</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_set_tss(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>sel)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__<sp/>(</highlight><highlight class="stringliteral">&quot;ltr<sp/>%0&quot;</highlight><highlight class="normal"><sp/>::<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal"><sp/>(sel));</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>_get_tss(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>sel;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__<sp/>(</highlight><highlight class="stringliteral">&quot;str<sp/>%0&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=r&quot;</highlight><highlight class="normal"><sp/>(sel));</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sel;</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_get_gdt(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpseudo__descriptor" kindref="compound">pseudo_descriptor</ref><sp/>*gdt)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__<sp/>(</highlight><highlight class="stringliteral">&quot;sgdt<sp/>%0&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=m&quot;</highlight><highlight class="normal"><sp/>(*gdt));</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_get_idt(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpseudo__descriptor" kindref="compound">pseudo_descriptor</ref><sp/>*idt)</highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__<sp/>(</highlight><highlight class="stringliteral">&quot;sidt<sp/>%0&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=m&quot;</highlight><highlight class="normal"><sp/>(*idt));</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>_get_ldt(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__<sp/>(</highlight><highlight class="stringliteral">&quot;sldt<sp/>%0&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=m&quot;</highlight><highlight class="normal"><sp/>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>));</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_set_ldt(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>ldt)</highlight></codeline>
<codeline lineno="471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__<sp/>(</highlight><highlight class="stringliteral">&quot;lldt<sp/>%0&quot;</highlight><highlight class="normal"><sp/>::<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal"><sp/>(ldt));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_set_gdt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpseudo__descriptor" kindref="compound">pseudo_descriptor</ref><sp/>*gdt)</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__<sp/>(</highlight><highlight class="stringliteral">&quot;lgdt<sp/>%0&quot;</highlight><highlight class="normal"><sp/>::<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal"><sp/>(*gdt));</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_set_idt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpseudo__descriptor" kindref="compound">pseudo_descriptor</ref><sp/>*idt)</highlight></codeline>
<codeline lineno="496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__<sp/>(</highlight><highlight class="stringliteral">&quot;lidt<sp/>%0&quot;</highlight><highlight class="normal"><sp/>::<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal"><sp/>(*idt));</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>_get_cs(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>cs<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__<sp/>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%cs,<sp/>%0&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=r&quot;</highlight><highlight class="normal"><sp/>(cs));</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cs;</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>_get_ds(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>ds<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__<sp/>(</highlight><highlight class="stringliteral">&quot;mov<sp/>%%ds,<sp/>%0&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=r&quot;</highlight><highlight class="normal"><sp/>(ds));</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ds;</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_ASMLANGUAGE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_ARCH_X86_IA32_SEGMENTATION_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/arch/x86/ia32/segmentation.h"/>
  </compounddef>
</doxygen>
