<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="arm_2aarch32_2arch_8h" kind="file" language="C++">
    <compoundname>arch.h</compoundname>
    <includes refid="devicetree_8h" local="no">devicetree.h</includes>
    <includes refid="arch_2arm_2aarch32_2thread_8h" local="no">arch/arm/aarch32/thread.h</includes>
    <includes refid="arm_2aarch32_2exc_8h" local="no">arch/arm/aarch32/exc.h</includes>
    <includes refid="arch_2arm_2aarch32_2irq_8h" local="no">arch/arm/aarch32/irq.h</includes>
    <includes refid="arm_2aarch32_2error_8h" local="no">arch/arm/aarch32/error.h</includes>
    <includes refid="arm_2aarch32_2misc_8h" local="no">arch/arm/aarch32/misc.h</includes>
    <includes refid="addr__types_8h" local="no">arch/common/addr_types.h</includes>
    <includes refid="ffs_8h" local="no">arch/common/ffs.h</includes>
    <includes refid="nmi_8h" local="no">arch/arm/aarch32/nmi.h</includes>
    <includes refid="arm_2aarch32_2asm__inline_8h" local="no">arch/arm/aarch32/asm_inline.h</includes>
    <includes refid="sys__bitops_8h" local="no">arch/common/sys_bitops.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/arch/arm/aarch32/arch.h</label>
        <link refid="arm_2aarch32_2arch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>arch/arm/aarch32/asm_inline.h</label>
        <link refid="arm_2aarch32_2asm__inline_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>arch/arm/aarch32/error.h</label>
        <link refid="arm_2aarch32_2error_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>arch/arm/aarch32/exc.h</label>
        <link refid="arm_2aarch32_2exc_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>arch/arm/aarch32/irq.h</label>
        <link refid="arch_2arm_2aarch32_2irq_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>arch/arm/aarch32/misc.h</label>
        <link refid="arm_2aarch32_2misc_8h"/>
      </node>
      <node id="33">
        <label>arch/arm/aarch32/nmi.h</label>
        <link refid="nmi_8h"/>
      </node>
      <node id="29">
        <label>arch/arm/aarch32/syscall.h</label>
        <link refid="arch_2arm_2aarch32_2syscall_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>arch/arm/aarch32/thread.h</label>
        <link refid="arch_2arm_2aarch32_2thread_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>arch/common/addr_types.h</label>
        <link refid="addr__types_8h"/>
      </node>
      <node id="32">
        <label>arch/common/ffs.h</label>
        <link refid="ffs_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>arch/common/sys_bitops.h</label>
        <link refid="sys__bitops_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="17">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="19">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="15">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="13">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="21">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="22">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="18">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="16">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="20">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="26">
        <label>sw_isr_table.h</label>
        <link refid="sw__isr__table_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>sys/sys_io.h</label>
        <link refid="sys_2sys__io_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="6">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="10">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="12">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="35">
        <label>arch/arm/asm_inline_other.h</label>
      </node>
      <node id="4">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="3">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="11">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="arm_2aarch32_2arch_8h_1a59d42697fc33d0b600597145a7b76dc7" prot="public" static="no">
        <name>sys_define_gpr_with_alias</name>
        <param><defname>name1</defname></param>
        <param><defname>name2</defname></param>
        <initializer>union { <ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> name1, name2; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arm/aarch32/arch.h" line="23" column="9" bodyfile="include/arch/arm/aarch32/arch.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm_2aarch32_2arch_8h_1af0f8ad93611d93cd0626914837e761d3" prot="public" static="no">
        <name>ARCH_STACK_PTR_ALIGN</name>
        <initializer>4</initializer>
        <briefdescription>
<para>Declare the ARCH_STACK_PTR_ALIGN. </para>
        </briefdescription>
        <detaileddescription>
<para>Denotes the required alignment of the stack pointer on public API boundaries </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arm/aarch32/arch.h" line="60" column="10" bodyfile="include/arch/arm/aarch32/arch.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm_2aarch32_2arch_8h_1a08b1afe29bff127c0f3c0376ee6744b1" prot="public" static="no">
        <name>MPU_GUARD_ALIGN_AND_SIZE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Declare a minimum MPU guard alignment and size. </para>
        </briefdescription>
        <detaileddescription>
<para>This specifies the minimum MPU guard alignment/size for the MPU. This will be used to denote the guard section of the stack, if it exists.</para>
<para>One key note is that this guard results in extra bytes being added to the stack. APIs which give the stack ptr and stack size will take this guard size into account.</para>
<para>Stack is allocated, but initial stack pointer is at the end (highest address). Stack grows down to the actual allocation address (lowest address). Stack guard, if present, will comprise the lowest MPU_GUARD_ALIGN_AND_SIZE bytes of the stack.</para>
<para>As the stack grows down, it will reach the end of the stack when it encounters either the stack guard region, or the stack allocation address.</para>
<para>--------------------<mdash/> &lt;-<mdash/> Stack allocation address + stack size + | | MPU_GUARD_ALIGN_AND_SIZE | Some thread data | &lt;-<mdash/> Defined when thread is created | ... | |------------------<mdash/>| &lt;-<mdash/> Actual initial stack ptr | Initial Stack Ptr | aligned to ARCH_STACK_PTR_ALIGN | ... | | ... | | ... | | ... | | ... | | ... | | ... | | ... | | Stack Ends | |-------------------<mdash/> &lt;-<mdash/> Stack Buffer Ptr from API | MPU Guard, | | if present | --------------------<mdash/> &lt;-<mdash/> Stack Allocation address </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arm/aarch32/arch.h" line="123" column="10" bodyfile="include/arch/arm/aarch32/arch.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm_2aarch32_2arch_8h_1a28b1b91e550d6b6fb08cf9aef9e9b0f2" prot="public" static="no">
        <name>MPU_GUARD_ALIGN_AND_SIZE_FLOAT</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Declare the MPU guard alignment and size for a thread stack that is using the Floating Point services. </para>
        </briefdescription>
        <detaileddescription>
<para>For threads that are using the Floating Point services under Shared Registers (CONFIG_FPU_SHARING=y) mode, the exception stack frame may contain both the basic stack frame and the FP caller-saved context, upon exception entry. Therefore, a wide guard region is required to guarantee that stack-overflow detection will always be successful. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arm/aarch32/arch.h" line="140" column="10" bodyfile="include/arch/arm/aarch32/arch.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm_2aarch32_2arch_8h_1ab6c1d96f5e018ed166ee401dc84b7ab7" prot="public" static="no">
        <name>ARCH_THREAD_STACK_OBJ_ALIGN</name>
        <param><defname>size</defname></param>
        <initializer>						    <ref refid="group__sys-util_1gafa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(Z_THREAD_MIN_STACK_ALIGN, \
						    Z_MPU_GUARD_ALIGN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arm/aarch32/arch.h" line="167" column="10" bodyfile="include/arch/arm/aarch32/arch.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm_2aarch32_2arch_8h_1ab76d60bd06e5c5a0f995c6b11bf97fd8" prot="public" static="no">
        <name>ARCH_THREAD_STACK_SIZE_ADJUST</name>
        <param><defname>size</defname></param>
        <initializer>	<ref refid="group__sys-util_1gaada5610108b15d85c65d863b0c646ef3" kindref="member">ROUND_UP</ref>(size, CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arm/aarch32/arch.h" line="170" column="9" bodyfile="include/arch/arm/aarch32/arch.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arm_2aarch32_2arch_8h_1ace8831316d471ccfb06eeddb6d69d817" prot="public" static="no">
        <name>ARCH_THREAD_STACK_RESERVED</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arm/aarch32/arch.h" line="184" column="9" bodyfile="include/arch/arm/aarch32/arch.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>ARM AArch32 specific kernel interface header. </para>
    </briefdescription>
    <detaileddescription>
<para>This header contains the ARM AArch32 specific kernel interface. It is included by the kernel interface architecture-abstraction header (include/arm/cpu.h) </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2013-2014<sp/>Wind<sp/>River<sp/>Systems,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_ARCH_ARM_AARCH32_ARCH_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_ARCH_ARM_AARCH32_ARCH_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Add<sp/>include<sp/>for<sp/>DTS<sp/>generated<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="devicetree_8h" kindref="compound">devicetree.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ARM<sp/>GPRs<sp/>are<sp/>often<sp/>designated<sp/>by<sp/>two<sp/>different<sp/>names<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="arm_2aarch32_2arch_8h_1a59d42697fc33d0b600597145a7b76dc7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>sys_define_gpr_with_alias(name1,<sp/>name2)<sp/>union<sp/>{<sp/>uint32_t<sp/>name1,<sp/>name2;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="arch_2arm_2aarch32_2thread_8h" kindref="compound">arch/arm/aarch32/thread.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="arm_2aarch32_2exc_8h" kindref="compound">arch/arm/aarch32/exc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="arch_2arm_2aarch32_2irq_8h" kindref="compound">arch/arm/aarch32/irq.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="arm_2aarch32_2error_8h" kindref="compound">arch/arm/aarch32/error.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="arm_2aarch32_2misc_8h" kindref="compound">arch/arm/aarch32/misc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="addr__types_8h" kindref="compound">arch/common/addr_types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ffs_8h" kindref="compound">arch/common/ffs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmi_8h" kindref="compound">arch/arm/aarch32/nmi.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="arm_2aarch32_2asm__inline_8h" kindref="compound">arch/arm/aarch32/asm_inline.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="sys__bitops_8h" kindref="compound">arch/common/sys_bitops.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_CPU_CORTEX_M</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2arch_2arm_2aarch32_2cortex__m_2cpu_8h" kindref="compound">arch/arm/aarch32/cortex_m/cpu.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="memory__map_8h" kindref="compound">arch/arm/aarch32/cortex_m/memory_map.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="arch_2common_2sys__io_8h" kindref="compound">arch/common/sys_io.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_CPU_AARCH32_CORTEX_R)<sp/>||<sp/>defined(CONFIG_CPU_AARCH32_CORTEX_A)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2arch_2arm_2aarch32_2cortex__a__r_2cpu_8h" kindref="compound">arch/arm/aarch32/cortex_a_r/cpu.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="arch_2arm_2aarch32_2cortex__a__r_2sys__io_8h" kindref="compound">arch/arm/aarch32/cortex_a_r/sys_io.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="aarch32_2cortex__a__r_2timer_8h" kindref="compound">arch/arm/aarch32/cortex_a_r/timer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_STACK_ALIGN_DOUBLE_WORD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_STACK_PTR_ALIGN<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="arm_2aarch32_2arch_8h_1af0f8ad93611d93cd0626914837e761d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_STACK_PTR_ALIGN<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_USERSPACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_THREAD_MIN_STACK_ALIGN<sp/>CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ARM_AARCH32_MMU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_THREAD_MIN_STACK_ALIGN<sp/>CONFIG_ARM_MMU_REGION_MIN_ALIGN_AND_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_THREAD_MIN_STACK_ALIGN<sp/>ARCH_STACK_PTR_ALIGN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_MPU_STACK_GUARD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_GUARD_ALIGN_AND_SIZE<sp/>CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="arm_2aarch32_2arch_8h_1a08b1afe29bff127c0f3c0376ee6744b1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_GUARD_ALIGN_AND_SIZE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_FPU)<sp/>&amp;&amp;<sp/>defined(CONFIG_FPU_SHARING)<sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>defined(CONFIG_MPU_STACK_GUARD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_GUARD_ALIGN_AND_SIZE_FLOAT<sp/>CONFIG_MPU_STACK_GUARD_MIN_SIZE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="arm_2aarch32_2arch_8h_1a28b1b91e550d6b6fb08cf9aef9e9b0f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_GUARD_ALIGN_AND_SIZE_FLOAT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_MPU_GUARD_ALIGN<sp/>(MAX(MPU_GUARD_ALIGN_AND_SIZE,<sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPU_GUARD_ALIGN_AND_SIZE_FLOAT))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_MPU_GUARD_ALIGN<sp/>MPU_GUARD_ALIGN_AND_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_USERSPACE)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined(CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>MPU<sp/>requires<sp/>regions<sp/>to<sp/>be<sp/>sized<sp/>to<sp/>a<sp/>power<sp/>of<sp/>two,<sp/>and<sp/>aligned<sp/>to</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>their<sp/>own<sp/>size.<sp/>Since<sp/>an<sp/>MPU<sp/>region<sp/>must<sp/>be<sp/>able<sp/>to<sp/>cover<sp/>the<sp/>entire</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>user-accessible<sp/>stack<sp/>buffer,<sp/>we<sp/>size/align<sp/>to<sp/>match.<sp/>The<sp/>privilege</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>mode<sp/>stack<sp/>is<sp/>generated<sp/>elsewhere<sp/>in<sp/>memory.</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_THREAD_STACK_OBJ_ALIGN(size)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_POW2_CEIL(size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_THREAD_STACK_SIZE_ADJUST(size)<sp/><sp/><sp/><sp/><sp/>Z_POW2_CEIL(size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="arm_2aarch32_2arch_8h_1ab6c1d96f5e018ed166ee401dc84b7ab7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_THREAD_STACK_OBJ_ALIGN(size)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX(Z_THREAD_MIN_STACK_ALIGN,<sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_MPU_GUARD_ALIGN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="arm_2aarch32_2arch_8h_1ab76d60bd06e5c5a0f995c6b11bf97fd8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_THREAD_STACK_SIZE_ADJUST(size)<sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROUND_UP(size,<sp/>CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_MPU_STACK_GUARD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Kernel-only<sp/>stacks<sp/>need<sp/>an<sp/>MPU<sp/>guard<sp/>region<sp/>programmed<sp/>at<sp/>the<sp/>beginning<sp/>of</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>the<sp/>stack<sp/>object,<sp/>so<sp/>align<sp/>the<sp/>object<sp/>appropriately.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_KERNEL_STACK_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/>MPU_GUARD_ALIGN_AND_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_KERNEL_STACK_OBJ_ALIGN<sp/><sp/><sp/><sp/><sp/>Z_MPU_GUARD_ALIGN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>On<sp/>arm,<sp/>all<sp/>MPU<sp/>guards<sp/>are<sp/>carve-outs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="arm_2aarch32_2arch_8h_1ace8831316d471ccfb06eeddb6d69d817" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_THREAD_STACK_RESERVED<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Legacy<sp/>case:<sp/>retain<sp/>containing<sp/>extern<sp/>&quot;C&quot;<sp/>with<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_ARM_MPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_CPU_HAS_ARM_MPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="aarch32_2mpu_2arm__mpu_8h" kindref="compound">arch/arm/aarch32/mpu/arm_mpu.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_CPU_HAS_ARM_MPU<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_CPU_HAS_NXP_MPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nxp__mpu_8h" kindref="compound">arch/arm/aarch32/mpu/nxp_mpu.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_CPU_HAS_NXP_MPU<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_ARM_MPU<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_ARM_AARCH32_MMU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="aarch32_2mmu_2arm__mmu_8h" kindref="compound">arch/arm/aarch32/mmu/arm_mmu.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_ARM_AARCH32_MMU<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_ARCH_ARM_AARCH32_ARCH_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/arch/arm/aarch32/arch.h"/>
  </compounddef>
</doxygen>
