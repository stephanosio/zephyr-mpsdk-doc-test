<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structbt__l2cap__chan" kind="struct" language="C++" prot="public">
    <compoundname>bt_l2cap_chan</compoundname>
    <includes refid="l2cap_8h" local="no">l2cap.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structbt__l2cap__chan_1a007a7ef11a00c0dff22cd64961260d3d" prot="public" static="no" mutable="no">
        <type>struct bt_conn *</type>
        <definition>struct bt_conn* bt_l2cap_chan::conn</definition>
        <argsstring></argsstring>
        <name>conn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Channel connection reference </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/l2cap.h" line="133" column="14" bodyfile="include/bluetooth/l2cap.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__l2cap__chan_1a3e370744f17ca4cff200cc0a2ee1a74b" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structbt__l2cap__chan__ops" kindref="compound">bt_l2cap_chan_ops</ref> *</type>
        <definition>const struct bt_l2cap_chan_ops* bt_l2cap_chan::ops</definition>
        <argsstring></argsstring>
        <name>ops</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Channel operations reference </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/l2cap.h" line="135" column="30" bodyfile="include/bluetooth/l2cap.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__l2cap__chan_1a123ae4bb1db6f4b41561b3d4691b1c02" prot="public" static="no" mutable="no">
        <type><ref refid="slist_8h_1a69bf43aad81e3ee2d55250c59b857493" kindref="member">sys_snode_t</ref></type>
        <definition>sys_snode_t bt_l2cap_chan::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/l2cap.h" line="136" column="12" bodyfile="include/bluetooth/l2cap.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__l2cap__chan_1ac0fbde11b35e0b6b424970e73c945a40" prot="public" static="no" mutable="no">
        <type><ref refid="group__bt__l2cap_1gafe930d6bed8baed9f982f791b5d2172f" kindref="member">bt_l2cap_chan_destroy_t</ref></type>
        <definition>bt_l2cap_chan_destroy_t bt_l2cap_chan::destroy</definition>
        <argsstring></argsstring>
        <name>destroy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/l2cap.h" line="137" column="24" bodyfile="include/bluetooth/l2cap.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__l2cap__chan_1a7b4bc93af4f8205a8565a3bac00b00df" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__work__delayable" kindref="compound">k_work_delayable</ref></type>
        <definition>struct k_work_delayable bt_l2cap_chan::rtx_work</definition>
        <argsstring></argsstring>
        <name>rtx_work</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/l2cap.h" line="139" column="23" bodyfile="include/bluetooth/l2cap.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__l2cap__chan_1a3aebc11505687cc450fb94c91c4aa704" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__work__sync" kindref="compound">k_work_sync</ref></type>
        <definition>struct k_work_sync bt_l2cap_chan::rtx_sync</definition>
        <argsstring></argsstring>
        <name>rtx_sync</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/l2cap.h" line="140" column="18" bodyfile="include/bluetooth/l2cap.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__l2cap__chan_1a83ae7c039e12e9d4f39d5262223ce892" prot="public" static="no" mutable="no">
        <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref></type>
        <definition>atomic_t bt_l2cap_chan::status[ATOMIC_BITMAP_SIZE( BT_L2CAP_NUM_STATUS)]</definition>
        <argsstring>[ATOMIC_BITMAP_SIZE(BT_L2CAP_NUM_STATUS)]</argsstring>
        <name>status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/l2cap.h" line="141" column="12" bodyfile="include/bluetooth/l2cap.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>L2CAP Channel structure. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="13">
        <label>__thread_entry</label>
      </node>
      <node id="11">
        <label>_callee_saved</label>
      </node>
      <node id="15">
        <label>_mem_domain_info</label>
      </node>
      <node id="21">
        <label>_slist</label>
      </node>
      <node id="4">
        <label>_snode</label>
      </node>
      <node id="20">
        <label>_thread_arch</label>
      </node>
      <node id="10">
        <label>_thread_base</label>
      </node>
      <node id="14">
        <label>_thread_stack_info</label>
      </node>
      <node id="22">
        <label>_timeout</label>
      </node>
      <node id="12">
        <label>_wait_q_t</label>
      </node>
      <node id="1">
        <label>bt_l2cap_chan</label>
        <link refid="structbt__l2cap__chan"/>
        <childnode refid="2" relation="usage">
          <edgelabel>ops</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>destroy</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>rtx_work</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>rtx_sync</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>bt_l2cap_chan_ops</label>
        <link refid="structbt__l2cap__chan__ops"/>
        <childnode refid="3" relation="usage">
          <edgelabel>alloc_buf</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>k_heap</label>
        <link refid="structk__heap"/>
        <childnode refid="18" relation="usage">
          <edgelabel>heap</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>k_spinlock</label>
        <link refid="structk__spinlock"/>
      </node>
      <node id="9">
        <label>k_thread</label>
        <link refid="structk__thread"/>
        <childnode refid="10" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>callee_saved</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>join_queue</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>entry</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>next_thread</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>stack_info</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>mem_domain_info</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>stack_obj</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>resource_pool</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>arch</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>k_work</label>
        <link refid="structk__work"/>
        <childnode refid="4" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>handler</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>k_work_delayable</label>
        <link refid="structk__work__delayable"/>
        <childnode refid="7" relation="usage">
          <edgelabel>work</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>timeout</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>k_work_q</label>
        <link refid="structk__work__q"/>
        <childnode refid="9" relation="usage">
          <edgelabel>thread</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>pending</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>drainq</edgelabel>
          <edgelabel>notifyq</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>k_work_sync</label>
        <link refid="structk__work__sync"/>
      </node>
      <node id="3">
        <label>net_buf</label>
        <link refid="structnet__buf"/>
        <childnode refid="4" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>frags</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>b</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>net_buf_simple</label>
        <link refid="structnet__buf__simple"/>
      </node>
      <node id="18">
        <label>sys_heap</label>
        <link refid="structsys__heap"/>
      </node>
      <node id="16">
        <label>z_thread_stack_element</label>
      </node>
    </collaborationgraph>
    <location file="include/bluetooth/l2cap.h" line="131" column="1" bodyfile="include/bluetooth/l2cap.h" bodystart="131" bodyend="151"/>
    <listofallmembers>
      <member refid="structbt__l2cap__chan_1a007a7ef11a00c0dff22cd64961260d3d" prot="public" virt="non-virtual"><scope>bt_l2cap_chan</scope><name>conn</name></member>
      <member refid="structbt__l2cap__chan_1ac0fbde11b35e0b6b424970e73c945a40" prot="public" virt="non-virtual"><scope>bt_l2cap_chan</scope><name>destroy</name></member>
      <member refid="structbt__l2cap__chan_1a123ae4bb1db6f4b41561b3d4691b1c02" prot="public" virt="non-virtual"><scope>bt_l2cap_chan</scope><name>node</name></member>
      <member refid="structbt__l2cap__chan_1a3e370744f17ca4cff200cc0a2ee1a74b" prot="public" virt="non-virtual"><scope>bt_l2cap_chan</scope><name>ops</name></member>
      <member refid="structbt__l2cap__chan_1a3aebc11505687cc450fb94c91c4aa704" prot="public" virt="non-virtual"><scope>bt_l2cap_chan</scope><name>rtx_sync</name></member>
      <member refid="structbt__l2cap__chan_1a7b4bc93af4f8205a8565a3bac00b00df" prot="public" virt="non-virtual"><scope>bt_l2cap_chan</scope><name>rtx_work</name></member>
      <member refid="structbt__l2cap__chan_1a83ae7c039e12e9d4f39d5262223ce892" prot="public" virt="non-virtual"><scope>bt_l2cap_chan</scope><name>status</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
