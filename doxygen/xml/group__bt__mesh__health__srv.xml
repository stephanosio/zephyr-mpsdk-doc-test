<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__bt__mesh__health__srv" kind="group">
    <compoundname>bt_mesh_health_srv</compoundname>
    <title>Health Server Model</title>
    <innerclass refid="structbt__mesh__health__srv__cb" prot="public">bt_mesh_health_srv_cb</innerclass>
    <innerclass refid="structbt__mesh__health__srv" prot="public">bt_mesh_health_srv</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__mesh__health__srv_1ga8151e159cf8cd9dcf3b1f2de6b57d404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_fault_update</definition>
        <argsstring>(struct bt_mesh_elem *elem)</argsstring>
        <name>bt_mesh_fault_update</name>
        <param>
          <type>struct <ref refid="structbt__mesh__elem" kindref="compound">bt_mesh_elem</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Notify the stack that the fault array state of the given element has changed. </para>
        </briefdescription>
        <detaileddescription>
<para>This prompts the Health server on this element to publish the current fault array if periodic publishing is disabled.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Element to update the fault state of.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, or (negative) error code otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/health_srv.h" line="185" column="5" declfile="include/bluetooth/mesh/health_srv.h" declline="185" declcolumn="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__mesh__health__srv_1ga35c500e915092ec365862b11e76f92ad" prot="public" static="no">
        <name>BT_MESH_HEALTH_PUB_DEFINE</name>
        <param><defname>_name</defname></param>
        <param><defname>_max_faults</defname></param>
        <initializer>	<ref refid="group__bt__mesh__access_1ga8334ff2da1f0dc3ab2fc914059c33622" kindref="member">BT_MESH_MODEL_PUB_DEFINE</ref>(_name, NULL, (1 + 3 + (_max_faults)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A helper to define a health publication context</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name given to the publication context variable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_max_faults</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of faults the element can have. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/health_srv.h" line="144" column="9" bodyfile="include/bluetooth/mesh/health_srv.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__health__srv_1ga0b1dbf65d378d563fb90a867ea857b99" prot="public" static="no">
        <name>BT_MESH_MODEL_HEALTH_SRV</name>
        <param><defname>srv</defname></param>
        <param><defname>pub</defname></param>
        <initializer>	<ref refid="group__bt__mesh__access_1gac062c101b7310020e11a527de9c40d3a" kindref="member">BT_MESH_MODEL_CB</ref>(<ref refid="group__bt__mesh__access_1ga6416216348d7186f91175ca50bb8c903" kindref="member">BT_MESH_MODEL_ID_HEALTH_SRV</ref>, bt_mesh_health_srv_op,   \
			 pub, srv, &amp;<ref refid="structbt__mesh__health__srv__cb" kindref="compound">bt_mesh_health_srv_cb</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define a new health server model. Note that this API needs to be repeated for each element that the application wants to have a health server model on. Each instance also needs a unique <ref refid="structbt__mesh__health__srv" kindref="compound">bt_mesh_health_srv</ref> and <ref refid="structbt__mesh__model__pub" kindref="compound">bt_mesh_model_pub</ref> context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>srv</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a unique struct <ref refid="structbt__mesh__health__srv" kindref="compound">bt_mesh_health_srv</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pub</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a unique struct <ref refid="structbt__mesh__model__pub" kindref="compound">bt_mesh_model_pub</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New mesh model instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/health_srv.h" line="171" column="9" bodyfile="include/bluetooth/mesh/health_srv.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Health Server Model. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
