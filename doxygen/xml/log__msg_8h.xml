<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="log__msg_8h" kind="file" language="C++">
    <compoundname>log_msg.h</compoundname>
    <includes refid="atomic_8h" local="no">sys/atomic.h</includes>
    <includes refid="util_8h" local="no">sys/util.h</includes>
    <includes refid="string_8h" local="no">string.h</includes>
    <includes refid="include_2logging_2log__msg2_8h" local="no">logging/log_msg2.h</includes>
    <includedby refid="log__backend_8h" local="no">include/logging/log_backend.h</includedby>
    <includedby refid="log__backend__std_8h" local="no">include/logging/log_backend_std.h</includedby>
    <includedby refid="include_2logging_2log__core_8h" local="no">include/logging/log_core.h</includedby>
    <includedby refid="include_2logging_2log__ctrl_8h" local="no">include/logging/log_ctrl.h</includedby>
    <includedby refid="log__output_8h" local="no">include/logging/log_output.h</includedby>
    <incdepgraph>
      <node id="15">
        <label>logging/log_instance.h</label>
        <link refid="log__instance_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/logging/log_msg.h</label>
        <link refid="log__msg_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>logging/log_msg2.h</label>
        <link refid="include_2logging_2log__msg2_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="17">
        <label>sys/cbprintf.h</label>
        <link refid="cbprintf_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/cbprintf_cxx.h</label>
        <link refid="cbprintf__cxx_8h"/>
      </node>
      <node id="20">
        <label>sys/cbprintf_internal.h</label>
        <link refid="cbprintf__internal_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>sys/mpsc_packet.h</label>
        <link refid="mpsc__packet_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="8">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="6">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="7">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="19">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>syscalls/log_msg2.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__msg2_8h"/>
      </node>
      <node id="25">
        <label>alloca.h</label>
      </node>
      <node id="18">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="23">
        <label>syscalls/errno_private.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13">
        <label>include/debug/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>include/drivers/ptp_clock.h</label>
        <link refid="ptp__clock_8h"/>
      </node>
      <node id="12">
        <label>include/logging/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/logging/log_backend.h</label>
        <link refid="log__backend_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>include/logging/log_backend_std.h</label>
        <link refid="log__backend__std_8h"/>
      </node>
      <node id="11">
        <label>include/logging/log_core.h</label>
        <link refid="include_2logging_2log__core_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/logging/log_ctrl.h</label>
        <link refid="include_2logging_2log__ctrl_8h"/>
      </node>
      <node id="71">
        <label>include/logging/log_frontend.h</label>
        <link refid="log__frontend_8h"/>
      </node>
      <node id="72">
        <label>include/logging/log_internal.h</label>
        <link refid="log__internal_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/logging/log_msg.h</label>
        <link refid="log__msg_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>include/logging/log_output.h</label>
        <link refid="log__output_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>include/logging/log_output_dict.h</label>
        <link refid="log__output__dict_8h"/>
      </node>
      <node id="56">
        <label>include/net/bt.h</label>
        <link refid="bt_8h"/>
      </node>
      <node id="21">
        <label>include/net/can.h</label>
        <link refid="net_2can_8h"/>
      </node>
      <node id="31">
        <label>include/net/dns_resolve.h</label>
        <link refid="dns__resolve_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>include/net/dsa.h</label>
        <link refid="dsa_8h"/>
      </node>
      <node id="23">
        <label>include/net/dummy.h</label>
        <link refid="dummy_8h"/>
      </node>
      <node id="24">
        <label>include/net/ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>include/net/ethernet_mgmt.h</label>
        <link refid="ethernet__mgmt_8h"/>
      </node>
      <node id="19">
        <label>include/net/gptp.h</label>
        <link refid="gptp_8h"/>
      </node>
      <node id="57">
        <label>include/net/ieee802154.h</label>
        <link refid="ieee802154_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>include/net/ieee802154_mgmt.h</label>
        <link refid="ieee802154__mgmt_8h"/>
      </node>
      <node id="27">
        <label>include/net/ieee802154_radio.h</label>
        <link refid="ieee802154__radio_8h"/>
      </node>
      <node id="28">
        <label>include/net/igmp.h</label>
        <link refid="igmp_8h"/>
      </node>
      <node id="29">
        <label>include/net/net_config.h</label>
        <link refid="net__config_8h"/>
      </node>
      <node id="30">
        <label>include/net/net_context.h</label>
        <link refid="net__context_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>include/net/net_core.h</label>
        <link refid="net__core_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>include/net/net_if.h</label>
        <link refid="net__if_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>include/net/net_mgmt.h</label>
        <link refid="net__mgmt_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>include/net/net_offload.h</label>
        <link refid="net__offload_8h"/>
      </node>
      <node id="45">
        <label>include/net/net_pkt.h</label>
        <link refid="net__pkt_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>include/net/net_pkt_filter.h</label>
        <link refid="net__pkt__filter_8h"/>
      </node>
      <node id="59">
        <label>include/net/net_stats.h</label>
        <link refid="net__stats_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>include/net/openthread.h</label>
        <link refid="openthread_8h"/>
      </node>
      <node id="46">
        <label>include/net/ppp.h</label>
        <link refid="ppp_8h"/>
      </node>
      <node id="47">
        <label>include/net/promiscuous.h</label>
        <link refid="promiscuous_8h"/>
      </node>
      <node id="60">
        <label>include/net/ptp_time.h</label>
        <link refid="ptp__time_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>include/net/sntp.h</label>
        <link refid="sntp_8h"/>
      </node>
      <node id="32">
        <label>include/net/socket.h</label>
        <link refid="net_2socket_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>include/net/socket_can.h</label>
        <link refid="socket__can_8h"/>
      </node>
      <node id="53">
        <label>include/net/socket_net_mgmt.h</label>
        <link refid="socket__net__mgmt_8h"/>
      </node>
      <node id="33">
        <label>include/net/socket_offload.h</label>
        <link refid="socket__offload_8h"/>
      </node>
      <node id="38">
        <label>include/net/socketutils.h</label>
        <link refid="socketutils_8h"/>
      </node>
      <node id="34">
        <label>include/net/tftp.h</label>
        <link refid="tftp_8h"/>
      </node>
      <node id="62">
        <label>include/net/trickle.h</label>
        <link refid="trickle_8h"/>
      </node>
      <node id="48">
        <label>include/net/udp.h</label>
        <link refid="udp_8h"/>
      </node>
      <node id="49">
        <label>include/net/virtual.h</label>
        <link refid="virtual_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>include/net/virtual_mgmt.h</label>
        <link refid="virtual__mgmt_8h"/>
      </node>
      <node id="54">
        <label>include/net/wifi_mgmt.h</label>
        <link refid="wifi__mgmt_8h"/>
      </node>
      <node id="35">
        <label>include/posix/arpa/inet.h</label>
        <link refid="inet_8h"/>
      </node>
      <node id="36">
        <label>include/posix/net/if.h</label>
        <link refid="if_8h"/>
      </node>
      <node id="37">
        <label>include/posix/netdb.h</label>
        <link refid="netdb_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>include/posix/netinet/in.h</label>
        <link refid="in_8h"/>
      </node>
      <node id="40">
        <label>include/posix/netinet/tcp.h</label>
        <link refid="tcp_8h"/>
      </node>
      <node id="41">
        <label>include/posix/poll.h</label>
        <link refid="poll_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>include/posix/sys/socket.h</label>
        <link refid="posix_2sys_2socket_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/shell/shell.h</label>
        <link refid="shell_2shell_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>include/shell/shell_dummy.h</label>
        <link refid="shell__dummy_8h"/>
      </node>
      <node id="4">
        <label>include/shell/shell_log_backend.h</label>
        <link refid="shell__log__backend_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/shell/shell_rtt.h</label>
        <link refid="shell__rtt_8h"/>
      </node>
      <node id="8">
        <label>include/shell/shell_telnet.h</label>
        <link refid="shell__telnet_8h"/>
      </node>
      <node id="9">
        <label>include/shell/shell_uart.h</label>
        <link refid="shell__uart_8h"/>
      </node>
      <node id="63">
        <label>include/syscall_handler.h</label>
        <link refid="syscall__handler_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>include/usb/usb_device.h</label>
        <link refid="usb__device_8h"/>
      </node>
      <node id="64">
        <label>tests/kernel/fatal/exception/src/main.c</label>
        <link refid="fatal_2exception_2src_2main_8c"/>
      </node>
      <node id="65">
        <label>tests/kernel/mem_protect/mem_protect/src/inherit.c</label>
        <link refid="inherit_8c"/>
      </node>
      <node id="66">
        <label>tests/kernel/mem_protect/mem_protect/src/kobject.c</label>
        <link refid="kobject_8c"/>
      </node>
      <node id="67">
        <label>tests/kernel/mem_protect/obj_validation/src/main.c</label>
        <link refid="mem__protect_2obj__validation_2src_2main_8c"/>
      </node>
      <node id="68">
        <label>tests/kernel/mem_protect/syscalls/src/main.c</label>
        <link refid="mem__protect_2syscalls_2src_2main_8c"/>
      </node>
      <node id="14">
        <label>tests/kernel/mem_protect/userspace/src/main.c</label>
        <link refid="mem__protect_2userspace_2src_2main_8c"/>
      </node>
      <node id="15">
        <label>tests/kernel/profiling/profiling_api/src/main.c</label>
        <link refid="profiling_2profiling__api_2src_2main_8c"/>
      </node>
      <node id="16">
        <label>tests/kernel/threads/dynamic_thread/src/main.c</label>
        <link refid="threads_2dynamic__thread_2src_2main_8c"/>
      </node>
      <node id="17">
        <label>tests/kernel/threads/thread_apis/src/test_kthread_for_each.c</label>
        <link refid="test__kthread__for__each_8c"/>
      </node>
      <node id="69">
        <label>tests/kernel/threads/thread_stack/src/main.c</label>
        <link refid="threads_2thread__stack_2src_2main_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structlog__msg__ids" prot="public">log_msg_ids</innerclass>
    <innerclass refid="structlog__msg__generic__hdr" prot="public">log_msg_generic_hdr</innerclass>
    <innerclass refid="structlog__msg__std__hdr" prot="public">log_msg_std_hdr</innerclass>
    <innerclass refid="structlog__msg__hexdump__hdr" prot="public">log_msg_hexdump_hdr</innerclass>
    <innerclass refid="structlog__msg__hdr" prot="public">log_msg_hdr</innerclass>
    <innerclass refid="unionlog__msg__hdr_1_1log__msg__hdr__params" prot="public">log_msg_hdr::log_msg_hdr_params</innerclass>
    <innerclass refid="unionlog__msg__head__data" prot="public">log_msg_head_data</innerclass>
    <innerclass refid="structlog__msg__ext__head__data" prot="public">log_msg_ext_head_data</innerclass>
    <innerclass refid="unionlog__msg__ext__head__data_1_1log__msg__ext__head__data__data" prot="public">log_msg_ext_head_data::log_msg_ext_head_data_data</innerclass>
    <innerclass refid="structlog__msg" prot="public">log_msg</innerclass>
    <innerclass refid="unionlog__msg_1_1log__msg__data" prot="public">log_msg::log_msg_data</innerclass>
    <innerclass refid="structlog__msg__cont" prot="public">log_msg_cont</innerclass>
    <innerclass refid="unionlog__msg__cont_1_1log__msg__cont__data" prot="public">log_msg_cont::log_msg_cont_data</innerclass>
    <innerclass refid="unionlog__msg__chunk" prot="public">log_msg_chunk</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__log__msg_1ga5900a85c32582b5a4ce3f46ee52b7e9e" prot="public" static="no">
        <name>LOG_MAX_NARGS</name>
        <initializer>15</initializer>
        <briefdescription>
<para>Maximum number of arguments in the standard log entry. </para>
        </briefdescription>
        <detaileddescription>
<para>It is limited by 4 bit nargs field in the log message. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="35" column="9" bodyfile="include/logging/log_msg.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__log__msg_1ga269343a13ee57b72d62ab369d5a5c044" prot="public" static="no">
        <name>LOG_MSG_NARGS_SINGLE_CHUNK</name>
        <initializer>3U</initializer>
        <briefdescription>
<para>Number of arguments in the log entry which fits in one chunk. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="41" column="10" bodyfile="include/logging/log_msg.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__log__msg_1gadb487a9ce1f3413b2a91c97bf3c601c9" prot="public" static="no">
        <name>LOG_MSG_NARGS_HEAD_CHUNK</name>
        <initializer>	(<ref refid="group__log__msg_1ga269343a13ee57b72d62ab369d5a5c044" kindref="member">LOG_MSG_NARGS_SINGLE_CHUNK</ref> - (sizeof(void *)/sizeof(<ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref>)))</initializer>
        <briefdescription>
<para>Number of arguments in the head of extended standard log message.. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="45" column="9" bodyfile="include/logging/log_msg.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__log__msg_1gacd9d4676590adf7231a760227fc17a9e" prot="public" static="no">
        <name>LOG_MSG_HEXDUMP_BYTES_SINGLE_CHUNK</name>
        <initializer>	(<ref refid="group__log__msg_1ga269343a13ee57b72d62ab369d5a5c044" kindref="member">LOG_MSG_NARGS_SINGLE_CHUNK</ref> * sizeof(<ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref>))</initializer>
        <briefdescription>
<para>Maximal amount of bytes in the hexdump entry which fits in one chunk. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="50" column="9" bodyfile="include/logging/log_msg.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__log__msg_1ga37f48c72db15497ee8e67942a65d594e" prot="public" static="no">
        <name>LOG_MSG_HEXDUMP_BYTES_HEAD_CHUNK</name>
        <initializer>	(<ref refid="group__log__msg_1gacd9d4676590adf7231a760227fc17a9e" kindref="member">LOG_MSG_HEXDUMP_BYTES_SINGLE_CHUNK</ref> - sizeof(void *))</initializer>
        <briefdescription>
<para>Number of bytes in the first chunk of hexdump message if message consists of more than one chunk. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="56" column="9" bodyfile="include/logging/log_msg.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__log__msg_1ga6bf0f7d5e6318aa280e50ce59d27c2a4" prot="public" static="no">
        <name>HEXDUMP_BYTES_CONT_MSG</name>
        <initializer>	(sizeof(struct <ref refid="structlog__msg" kindref="compound">log_msg</ref>) - sizeof(void *))</initializer>
        <briefdescription>
<para>Number of bytes that can be stored in chunks following head chunk in hexdump log message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="62" column="9" bodyfile="include/logging/log_msg.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__log__msg_1gad5463a0306f9515aaace6e648a3fceeb" prot="public" static="no">
        <name>ARGS_CONT_MSG</name>
        <initializer>(<ref refid="group__log__msg_1ga6bf0f7d5e6318aa280e50ce59d27c2a4" kindref="member">HEXDUMP_BYTES_CONT_MSG</ref> / sizeof(<ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="65" column="9" bodyfile="include/logging/log_msg.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__log__msg_1gaef0cd4f562f09242626fd7f2e01ee875" prot="public" static="no">
        <name>LOG_MSG_TYPE_STD</name>
        <initializer>0U</initializer>
        <briefdescription>
<para>Flag indicating standard log message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="68" column="9" bodyfile="include/logging/log_msg.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__log__msg_1ga2747b5933204d337ffee654b2f9d749c" prot="public" static="no">
        <name>LOG_MSG_TYPE_HEXDUMP</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Flag indicating hexdump log message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="71" column="9" bodyfile="include/logging/log_msg.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__log__msg_1ga495f7973d045ff48e62160b6e953d2c9" prot="public" static="no">
        <name>COMMON_PARAM_HDR</name>
        <param></param>
        <initializer>	<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref> type : 1;	   \
	<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref> ext : 1</initializer>
        <briefdescription>
<para>Common part of log message header. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="74" column="9" bodyfile="include/logging/log_msg.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__log__msg_1ga350cae59b8bc12eb56a74914103314de" prot="public" static="no">
        <name>LOG_MSG_HEXDUMP_LENGTH_BITS</name>
        <initializer>14</initializer>
        <briefdescription>
<para>Number of bits used for storing length of hexdump log message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="79" column="9" bodyfile="include/logging/log_msg.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__log__msg_1gaabb2c9581ff5e17f1a369983ba996cff" prot="public" static="no">
        <name>LOG_MSG_HEXDUMP_MAX_LENGTH</name>
        <initializer>(<ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(<ref refid="group__log__msg_1ga350cae59b8bc12eb56a74914103314de" kindref="member">LOG_MSG_HEXDUMP_LENGTH_BITS</ref>) - 1)</initializer>
        <briefdescription>
<para>Maximum length of log hexdump message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="82" column="9" bodyfile="include/logging/log_msg.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" prot="public" static="no">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> long</type>
        <definition>typedef unsigned long log_arg_t</definition>
        <argsstring></argsstring>
        <name>log_arg_t</name>
        <briefdescription>
<para>Log argument type. </para>
        </briefdescription>
        <detaileddescription>
<para>Should preferably be equivalent to a native word size. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="29" column="23" bodyfile="include/logging/log_msg.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__log__msg_1ga00a80b9f48ab8c446dc1e29018983e10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void log_msg_pool_init</definition>
        <argsstring>(void)</argsstring>
        <name>log_msg_pool_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for initialization of the log message pool. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="165" column="6" declfile="include/logging/log_msg.h" declline="165" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1gad34f068325f8d3818005ce3bf5ed8d2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void log_msg_get</definition>
        <argsstring>(struct log_msg *msg)</argsstring>
        <name>log_msg_get</name>
        <param>
          <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Function for indicating that message is in use. </para>
        </briefdescription>
        <detaileddescription>
<para>Message can be used (read) by multiple users. Internal reference counter is atomically increased. See <ref refid="group__log__msg_1gaa7cb59b92b25a79dba0d013d4e565eb2" kindref="member">log_msg_put</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="174" column="6" declfile="include/logging/log_msg.h" declline="174" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1gaa7cb59b92b25a79dba0d013d4e565eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void log_msg_put</definition>
        <argsstring>(struct log_msg *msg)</argsstring>
        <name>log_msg_put</name>
        <param>
          <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Function for indicating that message is no longer in use. </para>
        </briefdescription>
        <detaileddescription>
<para>Internal reference counter is atomically decreased. If reference counter equals 0 message is freed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="183" column="6" declfile="include/logging/log_msg.h" declline="183" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1ga5a3dfb0fe49d8ba541dd1fc9dcf71d0a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>static uint32_t log_msg_domain_id_get</definition>
        <argsstring>(struct log_msg *msg)</argsstring>
        <name>log_msg_domain_id_get</name>
        <param>
          <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Get domain ID of the message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Message</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Domain ID. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="191" column="24" bodyfile="include/logging/log_msg.h" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1ga6d69f64bb78e4e9d92340338326c435e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>static uint32_t log_msg_source_id_get</definition>
        <argsstring>(struct log_msg *msg)</argsstring>
        <name>log_msg_source_id_get</name>
        <param>
          <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Get source ID (module or instance) of the message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Message</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Source ID. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="202" column="24" bodyfile="include/logging/log_msg.h" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1ga146bfd52f03be08b6e8fb472d8275622" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>static uint32_t log_msg_level_get</definition>
        <argsstring>(struct log_msg *msg)</argsstring>
        <name>log_msg_level_get</name>
        <param>
          <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Get severity level of the message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Message</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Severity message. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="213" column="24" bodyfile="include/logging/log_msg.h" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1ga3ae6f1ab10f322506a136dd3e3070d48" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>static uint32_t log_msg_timestamp_get</definition>
        <argsstring>(struct log_msg *msg)</argsstring>
        <name>log_msg_timestamp_get</name>
        <param>
          <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Get timestamp of the message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Message</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Timestamp value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="224" column="24" bodyfile="include/logging/log_msg.h" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1ga914c4e8d90ccfda30f1105e18812b22b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool log_msg_is_std</definition>
        <argsstring>(struct log_msg *msg)</argsstring>
        <name>log_msg_is_std</name>
        <param>
          <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Check if message is of standard type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Message</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Standard message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Hexdump message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="236" column="20" bodyfile="include/logging/log_msg.h" bodystart="236" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1ga87ff24775dd5d88f779b2965da9f5f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t log_msg_nargs_get</definition>
        <argsstring>(struct log_msg *msg)</argsstring>
        <name>log_msg_nargs_get</name>
        <param>
          <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Returns number of arguments in standard log message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Standard log message.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of arguments. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="247" column="10" declfile="include/logging/log_msg.h" declline="247" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1gab6449857ff234005f8a2eec31b73b362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref></type>
        <definition>log_arg_t log_msg_arg_get</definition>
        <argsstring>(struct log_msg *msg, uint32_t arg_idx)</argsstring>
        <name>log_msg_arg_get</name>
        <param>
          <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>arg_idx</declname>
        </param>
        <briefdescription>
<para>Gets argument from standard log message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Standard log message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Argument value or 0 if arg_idx exceeds number of arguments in the message. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="257" column="11" declfile="include/logging/log_msg.h" declline="257" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1ga6b32d69271906dfd5ec883c496e51f65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * log_msg_str_get</definition>
        <argsstring>(struct log_msg *msg)</argsstring>
        <name>log_msg_str_get</name>
        <param>
          <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Gets pointer to the unformatted string from standard log message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Standard log message.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="266" column="12" declfile="include/logging/log_msg.h" declline="266" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1ga97764c3d3bb243515f5c95bfa44297fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
        <definition>struct log_msg * log_msg_hexdump_create</definition>
        <argsstring>(const char *str, const uint8_t *data, uint32_t length)</argsstring>
        <name>log_msg_hexdump_create</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Allocates chunks for hexdump message and copies the data. </para>
        </briefdescription>
        <detaileddescription>
<para>Function resets header and sets following fields:<itemizedlist>
<listitem><para>message type</para>
</listitem><listitem><para>length</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="note"><para>Allocation and partial filling is combined for performance reasons.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Data length.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to allocated head of the message or NULL </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="282" column="14" declfile="include/logging/log_msg.h" declline="282" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1ga5bf3664a1e88859af545e64232f628e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void log_msg_hexdump_data_put</definition>
        <argsstring>(struct log_msg *msg, uint8_t *data, size_t *length, size_t offset)</argsstring>
        <name>log_msg_hexdump_data_put</name>
        <param>
          <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>length</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Put data into hexdump log message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be copied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Input: requested amount. Output: actual amount. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="293" column="6" declfile="include/logging/log_msg.h" declline="293" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1ga908fe60dc33e29bac2eb42c2a54b15ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void log_msg_hexdump_data_get</definition>
        <argsstring>(struct log_msg *msg, uint8_t *data, size_t *length, size_t offset)</argsstring>
        <name>log_msg_hexdump_data_get</name>
        <param>
          <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>length</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Get data from hexdump log message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer for data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Input: requested amount. Output: actual amount. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="305" column="6" declfile="include/logging/log_msg.h" declline="305" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1ga81b5033fae66d3d05209db2211ed34d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>union <ref refid="unionlog__msg__chunk" kindref="compound">log_msg_chunk</ref> *</type>
        <definition>union log_msg_chunk * log_msg_no_space_handle</definition>
        <argsstring>(void)</argsstring>
        <name>log_msg_no_space_handle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="310" column="20" declfile="include/logging/log_msg.h" declline="310" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1gae23ae828851c74aa13db87107caf62d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>union <ref refid="unionlog__msg__chunk" kindref="compound">log_msg_chunk</ref> *</type>
        <definition>union log_msg_chunk * log_msg_chunk_alloc</definition>
        <argsstring>(void)</argsstring>
        <name>log_msg_chunk_alloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Allocate single chunk from the pool. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to the allocated chunk or NULL if failed to allocate. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="316" column="20" declfile="include/logging/log_msg.h" declline="316" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1gaa34c281e9c6b45a29b9e55ff902e374d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
        <definition>static struct log_msg * log_msg_create_0</definition>
        <argsstring>(const char *str)</argsstring>
        <name>log_msg_create_0</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Create standard log message with no arguments. </para>
        </briefdescription>
        <detaileddescription>
<para>Function resets header and sets following fields:<itemizedlist>
<listitem><para>message type</para>
</listitem><listitem><para>string pointer</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="return"><para>Pointer to allocated head of the message or NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="351" column="28" bodyfile="include/logging/log_msg.h" bodystart="351" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1gaf1eec61c29da3bd024b944e9a067c85f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
        <definition>static struct log_msg * log_msg_create_1</definition>
        <argsstring>(const char *str, log_arg_t arg1)</argsstring>
        <name>log_msg_create_1</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref></type>
          <declname>arg1</declname>
        </param>
        <briefdescription>
<para>Create standard log message with one argument. </para>
        </briefdescription>
        <detaileddescription>
<para>Function resets header and sets following fields:<itemizedlist>
<listitem><para>message type</para>
</listitem><listitem><para>string pointer</para>
</listitem><listitem><para>number of arguments</para>
</listitem><listitem><para>argument</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg1</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to allocated head of the message or NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="375" column="28" bodyfile="include/logging/log_msg.h" bodystart="375" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1ga9859855a99966a4482f66da41fc5dccf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
        <definition>static struct log_msg * log_msg_create_2</definition>
        <argsstring>(const char *str, log_arg_t arg1, log_arg_t arg2)</argsstring>
        <name>log_msg_create_2</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref></type>
          <declname>arg1</declname>
        </param>
        <param>
          <type><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref></type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
<para>Create standard log message with two arguments. </para>
        </briefdescription>
        <detaileddescription>
<para>Function resets header and sets following fields:<itemizedlist>
<listitem><para>message type</para>
</listitem><listitem><para>string pointer</para>
</listitem><listitem><para>number of arguments</para>
</listitem><listitem><para>arguments</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg1</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument 1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg2</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument 2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to allocated head of the message or NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="403" column="28" bodyfile="include/logging/log_msg.h" bodystart="403" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1ga509d75155372abe5b324b228b52799e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
        <definition>static struct log_msg * log_msg_create_3</definition>
        <argsstring>(const char *str, log_arg_t arg1, log_arg_t arg2, log_arg_t arg3)</argsstring>
        <name>log_msg_create_3</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref></type>
          <declname>arg1</declname>
        </param>
        <param>
          <type><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref></type>
          <declname>arg2</declname>
        </param>
        <param>
          <type><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref></type>
          <declname>arg3</declname>
        </param>
        <briefdescription>
<para>Create standard log message with three arguments. </para>
        </briefdescription>
        <detaileddescription>
<para>Function resets header and sets following fields:<itemizedlist>
<listitem><para>message type</para>
</listitem><listitem><para>string pointer</para>
</listitem><listitem><para>number of arguments</para>
</listitem><listitem><para>arguments</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg1</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument 1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg2</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument 2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg3</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument 3.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to allocated head of the message or NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="434" column="28" bodyfile="include/logging/log_msg.h" bodystart="434" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1gaddd73c484ec86849c176934c6f983a34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structlog__msg" kindref="compound">log_msg</ref> *</type>
        <definition>struct log_msg * log_msg_create_n</definition>
        <argsstring>(const char *str, log_arg_t *args, uint32_t nargs)</argsstring>
        <name>log_msg_create_n</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>nargs</declname>
        </param>
        <briefdescription>
<para>Create standard log message with variable number of arguments. </para>
        </briefdescription>
        <detaileddescription>
<para>Function resets header and sets following fields:<itemizedlist>
<listitem><para>message type</para>
</listitem><listitem><para>string pointer</para>
</listitem><listitem><para>number of arguments</para>
</listitem><listitem><para>arguments</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Array with arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nargs</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of arguments.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to allocated head of the message or NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="466" column="14" declfile="include/logging/log_msg.h" declline="466" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1gaeef64d243b794ba77cff9ceff1691fd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t log_msg_mem_get_free</definition>
        <argsstring>(void)</argsstring>
        <name>log_msg_mem_get_free</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get number of free blocks from the log mem pool. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="473" column="10" declfile="include/logging/log_msg.h" declline="473" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1gaaf81fbf7786167d3c22074df83636f0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t log_msg_mem_get_used</definition>
        <argsstring>(void)</argsstring>
        <name>log_msg_mem_get_used</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get number of used blocks from the log mem pool. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="478" column="10" declfile="include/logging/log_msg.h" declline="478" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__log__msg_1gafb77acf737b6a62fcd3545af569ba1ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t log_msg_mem_get_max_used</definition>
        <argsstring>(void)</argsstring>
        <name>log_msg_mem_get_max_used</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get max used blocks from the log mem pool. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_msg.h" line="483" column="10" declfile="include/logging/log_msg.h" declline="483" declcolumn="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_LOGGING_LOG_MSG_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_LOGGING_LOG_MSG_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="atomic_8h" kindref="compound">sys/atomic.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="util_8h" kindref="compound">sys/util.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="string_8h" kindref="compound">string.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2logging_2log__msg2_8h" kindref="compound">logging/log_msg2.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="group__log__msg_1ga5900a85c32582b5a4ce3f46ee52b7e9e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_MAX_NARGS<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_64BIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_MSG_NARGS_SINGLE_CHUNK<sp/>4U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="group__log__msg_1ga269343a13ee57b72d62ab369d5a5c044" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_MSG_NARGS_SINGLE_CHUNK<sp/>3U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="group__log__msg_1gadb487a9ce1f3413b2a91c97bf3c601c9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_MSG_NARGS_HEAD_CHUNK<sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LOG_MSG_NARGS_SINGLE_CHUNK<sp/>-<sp/>(sizeof(void<sp/>*)/sizeof(log_arg_t)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group__log__msg_1gacd9d4676590adf7231a760227fc17a9e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_MSG_HEXDUMP_BYTES_SINGLE_CHUNK<sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LOG_MSG_NARGS_SINGLE_CHUNK<sp/>*<sp/>sizeof(log_arg_t))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="group__log__msg_1ga37f48c72db15497ee8e67942a65d594e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_MSG_HEXDUMP_BYTES_HEAD_CHUNK<sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LOG_MSG_HEXDUMP_BYTES_SINGLE_CHUNK<sp/>-<sp/>sizeof(void<sp/>*))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="group__log__msg_1ga6bf0f7d5e6318aa280e50ce59d27c2a4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEXDUMP_BYTES_CONT_MSG<sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sizeof(struct<sp/>log_msg)<sp/>-<sp/>sizeof(void<sp/>*))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group__log__msg_1gad5463a0306f9515aaace6e648a3fceeb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARGS_CONT_MSG<sp/>(HEXDUMP_BYTES_CONT_MSG<sp/>/<sp/>sizeof(log_arg_t))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="group__log__msg_1gaef0cd4f562f09242626fd7f2e01ee875" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_MSG_TYPE_STD<sp/>0U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="group__log__msg_1ga2747b5933204d337ffee654b2f9d749c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_MSG_TYPE_HEXDUMP<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="group__log__msg_1ga495f7973d045ff48e62160b6e953d2c9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMMON_PARAM_HDR()<sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>type<sp/>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>ext<sp/>:<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="group__log__msg_1ga350cae59b8bc12eb56a74914103314de" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_MSG_HEXDUMP_LENGTH_BITS<sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="group__log__msg_1gaabb2c9581ff5e17f1a369983ba996cff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_MSG_HEXDUMP_MAX_LENGTH<sp/>(BIT(LOG_MSG_HEXDUMP_LENGTH_BITS)<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="structlog__msg__ids" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg__ids" kindref="compound">log_msg_ids</ref><sp/>{</highlight></codeline>
<codeline lineno="86" refid="structlog__msg__ids_1a3bed56b475692f863992b59c59f3886b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structlog__msg__ids_1a3bed56b475692f863992b59c59f3886b" kindref="member">level</ref><sp/><sp/><sp/><sp/><sp/>:<sp/>3;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87" refid="structlog__msg__ids_1aaaa0112ceeef1ca34385615dd6bbb511" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structlog__msg__ids_1aaaa0112ceeef1ca34385615dd6bbb511" kindref="member">domain_id</ref><sp/>:<sp/>3;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88" refid="structlog__msg__ids_1ace53e848f4fea90404ed1e3c03e77afc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structlog__msg__ids_1ace53e848f4fea90404ed1e3c03e77afc" kindref="member">source_id</ref><sp/>:<sp/>10;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="structlog__msg__generic__hdr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg__generic__hdr" kindref="compound">log_msg_generic_hdr</ref><sp/>{</highlight></codeline>
<codeline lineno="93" refid="structlog__msg__generic__hdr_1aecf551b49b9a106a3a3db4f6d4ac5175" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log__msg_1ga495f7973d045ff48e62160b6e953d2c9" kindref="member">COMMON_PARAM_HDR</ref>();</highlight></codeline>
<codeline lineno="94" refid="structlog__msg__generic__hdr_1a155455ed8b5ad624d058213130ee057a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structlog__msg__generic__hdr_1a155455ed8b5ad624d058213130ee057a" kindref="member">reserved</ref><sp/>:<sp/>14;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="structlog__msg__std__hdr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg__std__hdr" kindref="compound">log_msg_std_hdr</ref><sp/>{</highlight></codeline>
<codeline lineno="99" refid="structlog__msg__std__hdr_1ac93c7b01dbc69f0eec59753cd3a368ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log__msg_1ga495f7973d045ff48e62160b6e953d2c9" kindref="member">COMMON_PARAM_HDR</ref>();</highlight></codeline>
<codeline lineno="100" refid="structlog__msg__std__hdr_1a5f4ed4c5d36dbb1220c2fd39f397749b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structlog__msg__std__hdr_1a5f4ed4c5d36dbb1220c2fd39f397749b" kindref="member">reserved</ref><sp/>:<sp/>10;</highlight></codeline>
<codeline lineno="101" refid="structlog__msg__std__hdr_1a8d72d3e976e47aeb5d82417fb9b5729c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structlog__msg__std__hdr_1a8d72d3e976e47aeb5d82417fb9b5729c" kindref="member">nargs</ref><sp/><sp/><sp/><sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="structlog__msg__hexdump__hdr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg__hexdump__hdr" kindref="compound">log_msg_hexdump_hdr</ref><sp/>{</highlight></codeline>
<codeline lineno="106" refid="structlog__msg__hexdump__hdr_1acc50d3e4540835d54a7dbfca6a4ef3f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log__msg_1ga495f7973d045ff48e62160b6e953d2c9" kindref="member">COMMON_PARAM_HDR</ref>();</highlight></codeline>
<codeline lineno="107" refid="structlog__msg__hexdump__hdr_1ad5b2b74bf3351315153b4a0f23c22989" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structlog__msg__hexdump__hdr_1ad5b2b74bf3351315153b4a0f23c22989" kindref="member">length</ref><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="group__log__msg_1ga350cae59b8bc12eb56a74914103314de" kindref="member">LOG_MSG_HEXDUMP_LENGTH_BITS</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="structlog__msg__hdr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg__hdr" kindref="compound">log_msg_hdr</ref><sp/>{</highlight></codeline>
<codeline lineno="112" refid="structlog__msg__hdr_1a925422f8e7e405f126675392a744f44c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/><ref refid="structlog__msg__hdr_1a925422f8e7e405f126675392a744f44c" kindref="member">ref_cnt</ref>;<sp/></highlight></codeline>
<codeline lineno="113" refid="unionlog__msg__hdr_1_1log__msg__hdr__params" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionlog__msg__hdr_1_1log__msg__hdr__params" kindref="compound">log_msg_hdr_params</ref><sp/>{</highlight></codeline>
<codeline lineno="114" refid="unionlog__msg__hdr_1_1log__msg__hdr__params_1a6981b19e8a784f6ef24048731158ac60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg__generic__hdr" kindref="compound">log_msg_generic_hdr</ref><sp/><ref refid="unionlog__msg__hdr_1_1log__msg__hdr__params_1a6981b19e8a784f6ef24048731158ac60" kindref="member">generic</ref>;</highlight></codeline>
<codeline lineno="115" refid="unionlog__msg__hdr_1_1log__msg__hdr__params_1ae5097514ba358b38effcdabefec0548c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg__std__hdr" kindref="compound">log_msg_std_hdr</ref><sp/><ref refid="unionlog__msg__hdr_1_1log__msg__hdr__params_1ae5097514ba358b38effcdabefec0548c" kindref="member">std</ref>;</highlight></codeline>
<codeline lineno="116" refid="unionlog__msg__hdr_1_1log__msg__hdr__params_1a7d5366f9375db5e349a8ef3c01b06e69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg__hexdump__hdr" kindref="compound">log_msg_hexdump_hdr</ref><sp/><ref refid="unionlog__msg__hdr_1_1log__msg__hdr__params_1a7d5366f9375db5e349a8ef3c01b06e69" kindref="member">hexdump</ref>;</highlight></codeline>
<codeline lineno="117" refid="unionlog__msg__hdr_1_1log__msg__hdr__params_1a626ba2e9abb4e598de7351938ab15367" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="unionlog__msg__hdr_1_1log__msg__hdr__params_1a626ba2e9abb4e598de7351938ab15367" kindref="member">raw</ref>;</highlight></codeline>
<codeline lineno="118" refid="structlog__msg__hdr_1ab7d0c0c7147ea9ebb178b88aae5f125b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structlog__msg__hdr_1ab7d0c0c7147ea9ebb178b88aae5f125b" kindref="member">params</ref>;</highlight></codeline>
<codeline lineno="119" refid="structlog__msg__hdr_1aba2be834d33cd21eda844bac817853cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg__ids" kindref="compound">log_msg_ids</ref><sp/><ref refid="structlog__msg__hdr_1aba2be834d33cd21eda844bac817853cb" kindref="member">ids</ref>;<sp/></highlight></codeline>
<codeline lineno="120" refid="structlog__msg__hdr_1a55dcbe6b5e224fd418cd973fe55e90b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structlog__msg__hdr_1a55dcbe6b5e224fd418cd973fe55e90b5" kindref="member">timestamp</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="unionlog__msg__head__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionlog__msg__head__data" kindref="compound">log_msg_head_data</ref><sp/>{</highlight></codeline>
<codeline lineno="125" refid="unionlog__msg__head__data_1afceb0b78aebb00268326cf4aacfc770f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref><sp/><ref refid="unionlog__msg__head__data_1afceb0b78aebb00268326cf4aacfc770f" kindref="member">args</ref>[<ref refid="group__log__msg_1ga269343a13ee57b72d62ab369d5a5c044" kindref="member">LOG_MSG_NARGS_SINGLE_CHUNK</ref>];</highlight></codeline>
<codeline lineno="126" refid="unionlog__msg__head__data_1a005a522de2fa8570e11ceda3f0bff7ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="unionlog__msg__head__data_1a005a522de2fa8570e11ceda3f0bff7ab" kindref="member">bytes</ref>[<ref refid="group__log__msg_1gacd9d4676590adf7231a760227fc17a9e" kindref="member">LOG_MSG_HEXDUMP_BYTES_SINGLE_CHUNK</ref>];</highlight></codeline>
<codeline lineno="127"><highlight class="normal">};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="structlog__msg__ext__head__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg__ext__head__data" kindref="compound">log_msg_ext_head_data</ref><sp/>{</highlight></codeline>
<codeline lineno="131" refid="structlog__msg__ext__head__data_1a20806d28ca0c41a39b9fd78a8da200ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg__cont" kindref="compound">log_msg_cont</ref><sp/>*<ref refid="structlog__msg__ext__head__data_1a20806d28ca0c41a39b9fd78a8da200ca" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="132" refid="unionlog__msg__ext__head__data_1_1log__msg__ext__head__data__data" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionlog__msg__ext__head__data_1_1log__msg__ext__head__data__data" kindref="compound">log_msg_ext_head_data_data</ref><sp/>{</highlight></codeline>
<codeline lineno="133" refid="unionlog__msg__ext__head__data_1_1log__msg__ext__head__data__data_1a18d145bf9aaac65144865564ea86431f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref><sp/><ref refid="unionlog__msg__ext__head__data_1_1log__msg__ext__head__data__data_1a18d145bf9aaac65144865564ea86431f" kindref="member">args</ref>[<ref refid="group__log__msg_1gadb487a9ce1f3413b2a91c97bf3c601c9" kindref="member">LOG_MSG_NARGS_HEAD_CHUNK</ref>];</highlight></codeline>
<codeline lineno="134" refid="unionlog__msg__ext__head__data_1_1log__msg__ext__head__data__data_1ae16167de7090b58f58564e4795c10cde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="unionlog__msg__ext__head__data_1_1log__msg__ext__head__data__data_1ae16167de7090b58f58564e4795c10cde" kindref="member">bytes</ref>[<ref refid="group__log__msg_1ga37f48c72db15497ee8e67942a65d594e" kindref="member">LOG_MSG_HEXDUMP_BYTES_HEAD_CHUNK</ref>];</highlight></codeline>
<codeline lineno="135" refid="structlog__msg__ext__head__data_1a004f0c2fdfa7fdc5b94bded7b071211c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structlog__msg__ext__head__data_1a004f0c2fdfa7fdc5b94bded7b071211c" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="structlog__msg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>{</highlight></codeline>
<codeline lineno="140" refid="structlog__msg_1a669c072f4fb1702a89806e13cd494a06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="structlog__msg_1a669c072f4fb1702a89806e13cd494a06" kindref="member">next</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141" refid="structlog__msg_1a5831ce7bc8d973714a7ca37455890d2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg__hdr" kindref="compound">log_msg_hdr</ref><sp/><ref refid="structlog__msg_1a5831ce7bc8d973714a7ca37455890d2a" kindref="member">hdr</ref>;<sp/></highlight></codeline>
<codeline lineno="142" refid="structlog__msg_1a18421dd62b685ca3f0351ecffd17ad6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlog__msg_1a18421dd62b685ca3f0351ecffd17ad6b" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="143" refid="unionlog__msg_1_1log__msg__data" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionlog__msg_1_1log__msg__data" kindref="compound">log_msg_data</ref><sp/>{</highlight></codeline>
<codeline lineno="144" refid="unionlog__msg_1_1log__msg__data_1aa75b42d7e1134bdd5ccab04465febd83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionlog__msg__head__data" kindref="compound">log_msg_head_data</ref><sp/><ref refid="unionlog__msg_1_1log__msg__data_1aa75b42d7e1134bdd5ccab04465febd83" kindref="member">single</ref>;</highlight></codeline>
<codeline lineno="145" refid="unionlog__msg_1_1log__msg__data_1a1af02bd39b9db955ca04694b011be82d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg__ext__head__data" kindref="compound">log_msg_ext_head_data</ref><sp/><ref refid="unionlog__msg_1_1log__msg__data_1a1af02bd39b9db955ca04694b011be82d" kindref="member">ext</ref>;</highlight></codeline>
<codeline lineno="146" refid="structlog__msg_1a02af2c1bd343efaacb95ae1387c45374" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structlog__msg_1a02af2c1bd343efaacb95ae1387c45374" kindref="member">payload</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal">};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="structlog__msg__cont" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg__cont" kindref="compound">log_msg_cont</ref><sp/>{</highlight></codeline>
<codeline lineno="151" refid="structlog__msg__cont_1adcd7af84ef386df1c3fb231c5d6989d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg__cont" kindref="compound">log_msg_cont</ref><sp/>*<ref refid="structlog__msg__cont_1adcd7af84ef386df1c3fb231c5d6989d3" kindref="member">next</ref>;<sp/></highlight></codeline>
<codeline lineno="152" refid="unionlog__msg__cont_1_1log__msg__cont__data" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionlog__msg__cont_1_1log__msg__cont__data" kindref="compound">log_msg_cont_data</ref><sp/>{</highlight></codeline>
<codeline lineno="153" refid="unionlog__msg__cont_1_1log__msg__cont__data_1a9d1fcb986dd26b683afcae12e97deb19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref><sp/><ref refid="unionlog__msg__cont_1_1log__msg__cont__data_1a9d1fcb986dd26b683afcae12e97deb19" kindref="member">args</ref>[<ref refid="group__log__msg_1gad5463a0306f9515aaace6e648a3fceeb" kindref="member">ARGS_CONT_MSG</ref>];</highlight></codeline>
<codeline lineno="154" refid="unionlog__msg__cont_1_1log__msg__cont__data_1a8b9eed19d7da4f09dc4ce37659adb9c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="unionlog__msg__cont_1_1log__msg__cont__data_1a8b9eed19d7da4f09dc4ce37659adb9c7" kindref="member">bytes</ref>[<ref refid="group__log__msg_1ga6bf0f7d5e6318aa280e50ce59d27c2a4" kindref="member">HEXDUMP_BYTES_CONT_MSG</ref>];</highlight></codeline>
<codeline lineno="155" refid="structlog__msg__cont_1a7ca2adba427d69c44b5c7f6de943dfa4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structlog__msg__cont_1a7ca2adba427d69c44b5c7f6de943dfa4" kindref="member">payload</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="unionlog__msg__chunk" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionlog__msg__chunk" kindref="compound">log_msg_chunk</ref><sp/>{</highlight></codeline>
<codeline lineno="160" refid="unionlog__msg__chunk_1a645b325de50323c698913c6d54679312" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/><ref refid="unionlog__msg__chunk_1a645b325de50323c698913c6d54679312" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="161" refid="unionlog__msg__chunk_1a8fbf013fe14cf2ae703482dde52e3c2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg__cont" kindref="compound">log_msg_cont</ref><sp/><ref refid="unionlog__msg__chunk_1a8fbf013fe14cf2ae703482dde52e3c2e" kindref="member">cont</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="group__log__msg_1ga00a80b9f48ab8c446dc1e29018983e10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__log__msg_1ga00a80b9f48ab8c446dc1e29018983e10" kindref="member">log_msg_pool_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="group__log__msg_1gad34f068325f8d3818005ce3bf5ed8d2c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__log__msg_1gad34f068325f8d3818005ce3bf5ed8d2c" kindref="member">log_msg_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="group__log__msg_1gaa7cb59b92b25a79dba0d013d4e565eb2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__log__msg_1gaa7cb59b92b25a79dba0d013d4e565eb2" kindref="member">log_msg_put</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="group__log__msg_1ga5a3dfb0fe49d8ba541dd1fc9dcf71d0a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="group__log__msg_1ga5a3dfb0fe49d8ba541dd1fc9dcf71d0a" kindref="member">log_msg_domain_id_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;hdr.ids.domain_id;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="group__log__msg_1ga6d69f64bb78e4e9d92340338326c435e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="group__log__msg_1ga6d69f64bb78e4e9d92340338326c435e" kindref="member">log_msg_source_id_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;hdr.ids.source_id;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="group__log__msg_1ga146bfd52f03be08b6e8fb472d8275622" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="group__log__msg_1ga146bfd52f03be08b6e8fb472d8275622" kindref="member">log_msg_level_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;hdr.ids.level;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="group__log__msg_1ga3ae6f1ab10f322506a136dd3e3070d48" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="group__log__msg_1ga3ae6f1ab10f322506a136dd3e3070d48" kindref="member">log_msg_timestamp_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;hdr.timestamp;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="group__log__msg_1ga914c4e8d90ccfda30f1105e18812b22b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__log__msg_1ga914c4e8d90ccfda30f1105e18812b22b" kindref="member">log_msg_is_std</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;hdr.params.generic.type<sp/>==<sp/><ref refid="group__log__msg_1gaef0cd4f562f09242626fd7f2e01ee875" kindref="member">LOG_MSG_TYPE_STD</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="group__log__msg_1ga87ff24775dd5d88f779b2965da9f5f7e" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="group__log__msg_1ga87ff24775dd5d88f779b2965da9f5f7e" kindref="member">log_msg_nargs_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="group__log__msg_1gab6449857ff234005f8a2eec31b73b362" refkind="member"><highlight class="normal"><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref><sp/><ref refid="group__log__msg_1gab6449857ff234005f8a2eec31b73b362" kindref="member">log_msg_arg_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>arg_idx);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="group__log__msg_1ga6b32d69271906dfd5ec883c496e51f65" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__log__msg_1ga6b32d69271906dfd5ec883c496e51f65" kindref="member">log_msg_str_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="group__log__msg_1ga97764c3d3bb243515f5c95bfa44297fb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="group__log__msg_1ga97764c3d3bb243515f5c95bfa44297fb" kindref="member">log_msg_hexdump_create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlog__msg_1a18421dd62b685ca3f0351ecffd17ad6b" kindref="member">str</ref>,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>length);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="group__log__msg_1ga5bf3664a1e88859af545e64232f628e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__log__msg_1ga5bf3664a1e88859af545e64232f628e0" kindref="member">log_msg_hexdump_data_put</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*length,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="group__log__msg_1ga908fe60dc33e29bac2eb42c2a54b15ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__log__msg_1ga908fe60dc33e29bac2eb42c2a54b15ea" kindref="member">log_msg_hexdump_data_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*length,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="group__log__msg_1ga81b5033fae66d3d05209db2211ed34d4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionlog__msg__chunk" kindref="compound">log_msg_chunk</ref><sp/>*<ref refid="group__log__msg_1ga81b5033fae66d3d05209db2211ed34d4" kindref="member">log_msg_no_space_handle</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="group__log__msg_1gae23ae828851c74aa13db87107caf62d6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionlog__msg__chunk" kindref="compound">log_msg_chunk</ref><sp/>*<ref refid="group__log__msg_1gae23ae828851c74aa13db87107caf62d6" kindref="member">log_msg_chunk_alloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*z_log_msg_std_alloc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*)<ref refid="group__log__msg_1gae23ae828851c74aa13db87107caf62d6" kindref="member">log_msg_chunk_alloc</ref>();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>all<sp/>fields<sp/>reset<sp/>to<sp/>0,<sp/>reference<sp/>counter<sp/>to<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;hdr.ref_cnt<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;hdr.params.raw<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;hdr.params.std.type<sp/>=<sp/><ref refid="group__log__msg_1gaef0cd4f562f09242626fd7f2e01ee875" kindref="member">LOG_MSG_TYPE_STD</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(CONFIG_USERSPACE))<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>it<sp/>may<sp/>be<sp/>used<sp/>in<sp/>msg_free()<sp/>function.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;hdr.ids.level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;hdr.ids.domain_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;hdr.ids.source_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="group__log__msg_1gaa34c281e9c6b45a29b9e55ff902e374d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="group__log__msg_1gaa34c281e9c6b45a29b9e55ff902e374d" kindref="member">log_msg_create_0</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlog__msg_1a18421dd62b685ca3f0351ecffd17ad6b" kindref="member">str</ref>)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref><sp/>=<sp/>z_log_msg_std_alloc();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;str<sp/>=<sp/><ref refid="structlog__msg_1a18421dd62b685ca3f0351ecffd17ad6b" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="group__log__msg_1gaf1eec61c29da3bd024b944e9a067c85f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="group__log__msg_1gaf1eec61c29da3bd024b944e9a067c85f" kindref="member">log_msg_create_1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlog__msg_1a18421dd62b685ca3f0351ecffd17ad6b" kindref="member">str</ref>,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref><sp/>arg1)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref><sp/>=<sp/>z_log_msg_std_alloc();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;str<sp/>=<sp/><ref refid="structlog__msg_1a18421dd62b685ca3f0351ecffd17ad6b" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;hdr.params.std.nargs<sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;payload.single.args[0]<sp/>=<sp/>arg1;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="group__log__msg_1ga9859855a99966a4482f66da41fc5dccf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="group__log__msg_1ga9859855a99966a4482f66da41fc5dccf" kindref="member">log_msg_create_2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlog__msg_1a18421dd62b685ca3f0351ecffd17ad6b" kindref="member">str</ref>,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref><sp/>arg1,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref><sp/>arg2)</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref><sp/>=<sp/>z_log_msg_std_alloc();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;str<sp/>=<sp/><ref refid="structlog__msg_1a18421dd62b685ca3f0351ecffd17ad6b" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;hdr.params.std.nargs<sp/>=<sp/>2U;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;payload.single.args[0]<sp/>=<sp/>arg1;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;payload.single.args[1]<sp/>=<sp/>arg2;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="group__log__msg_1ga509d75155372abe5b324b228b52799e1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="group__log__msg_1ga509d75155372abe5b324b228b52799e1" kindref="member">log_msg_create_3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlog__msg_1a18421dd62b685ca3f0351ecffd17ad6b" kindref="member">str</ref>,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref><sp/>arg1,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref><sp/>arg2,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref><sp/>arg3)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref><sp/>=<sp/>z_log_msg_std_alloc();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;str<sp/>=<sp/><ref refid="structlog__msg_1a18421dd62b685ca3f0351ecffd17ad6b" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;hdr.params.std.nargs<sp/>=<sp/>3U;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;payload.single.args[0]<sp/>=<sp/>arg1;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;payload.single.args[1]<sp/>=<sp/>arg2;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>-&gt;payload.single.args[2]<sp/>=<sp/>arg3;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="group__log__msg_1gaddd73c484ec86849c176934c6f983a34" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__msg" kindref="compound">log_msg</ref><sp/>*<ref refid="group__log__msg_1gaddd73c484ec86849c176934c6f983a34" kindref="member">log_msg_create_n</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlog__msg_1a18421dd62b685ca3f0351ecffd17ad6b" kindref="member">str</ref>,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__log__msg_1ga60fcf7fd1423d631f2057111818143ca" kindref="member">log_arg_t</ref><sp/>*args,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>nargs);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="group__log__msg_1gaeef64d243b794ba77cff9ceff1691fd0" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="group__log__msg_1gaeef64d243b794ba77cff9ceff1691fd0" kindref="member">log_msg_mem_get_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="group__log__msg_1gaaf81fbf7786167d3c22074df83636f0e" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="group__log__msg_1gaaf81fbf7786167d3c22074df83636f0e" kindref="member">log_msg_mem_get_used</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="group__log__msg_1gafb77acf737b6a62fcd3545af569ba1ec" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="group__log__msg_1gafb77acf737b6a62fcd3545af569ba1ec" kindref="member">log_msg_mem_get_max_used</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_LOGGING_LOG_MSG_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/logging/log_msg.h"/>
  </compounddef>
</doxygen>
