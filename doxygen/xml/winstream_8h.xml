<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="winstream_8h" kind="file" language="C++">
    <compoundname>winstream.h</compoundname>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/sys/winstream.h</label>
        <link refid="winstream_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
    </incdepgraph>
    <innerclass refid="structsys__winstream" prot="public">sys_winstream</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="winstream_8h_1acc72f0f65bd88e8f2b630a3832006f9c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>struct <ref refid="structsys__winstream" kindref="compound">sys_winstream</ref> *</type>
        <definition>static struct sys_winstream * sys_winstream_init</definition>
        <argsstring>(void *buf, int buflen)</argsstring>
        <name>sys_winstream_init</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buflen</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="structsys__winstream" kindref="compound">sys_winstream</ref> from a region of memory. </para>
        </briefdescription>
        <detaileddescription>
<para>This function initializes a <ref refid="structsys__winstream" kindref="compound">sys_winstream</ref> in an arbitrarily-sized region of memory, returning the resulting object (which is guaranteed to be at the same address as the buffer). The memory must (obviously) be shared between the reader and writer, and all operations to it must be coherent and consistently ordered.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a region of memory to contain the stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buflen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer, must be large enough to contain the struct <ref refid="structsys__winstream" kindref="compound">sys_winstream</ref> and at least one byte of data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to an initialized <ref refid="structsys__winstream" kindref="compound">sys_winstream</ref> (same address as the buf parameter). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/winstream.h" line="48" column="34" bodyfile="include/sys/winstream.h" bodystart="48" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="winstream_8h_1ae8686be598c081858322378c8e4368cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sys_winstream_write</definition>
        <argsstring>(struct sys_winstream *ws, const char *data, uint32_t len)</argsstring>
        <name>sys_winstream_write</name>
        <param>
          <type>struct <ref refid="structsys__winstream" kindref="compound">sys_winstream</ref> *</type>
          <declname>ws</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Write bytes to a <ref refid="structsys__winstream" kindref="compound">sys_winstream</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function writes the specified number of bytes into the stream. It will always return synchronously, it does not block or engage in any kind of synchronization beyond memory write ordering. Any bytes passed beyond what can be stored in the buffer will be silently dropped, but readers can detect their presence via the sequence number.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ws</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="structsys__winstream" kindref="compound">sys_winstream</ref> to which to write </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to bytes to be written </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to write </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/winstream.h" line="69" column="6" declfile="include/sys/winstream.h" declline="69" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="winstream_8h_1a55dc3b77ec21e6d799aa951e327dc392" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t sys_winstream_read</definition>
        <argsstring>(struct sys_winstream *ws, uint32_t *seq, char *buf, uint32_t buflen)</argsstring>
        <name>sys_winstream_read</name>
        <param>
          <type>struct <ref refid="structsys__winstream" kindref="compound">sys_winstream</ref> *</type>
          <declname>ws</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> *</type>
          <declname>seq</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>buflen</declname>
        </param>
        <briefdescription>
<para>Read bytes from a <ref refid="structsys__winstream" kindref="compound">sys_winstream</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function will read bytes from a <ref refid="structsys__winstream" kindref="compound">sys_winstream</ref> into a specified buffer. It will always return in constant time, it does not block or engage in any kind of synchronization beyond memory ordering. The number of bytes read into the buffer will be returned, but note that it is possible that an underflow can occur if the writer gets ahead of our context. That situation can be detected via the sequence number returned via a pointer (i.e. if &quot;*seq != old_seq +
return_value&quot;, an underflow occurred and bytes were dropped).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ws</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="structsys__winstream" kindref="compound">sys_winstream</ref> from which to read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seq</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an integer containing the last sequence number read from the stream, or zero to indicate &quot;start
           of stream&quot;. It is updated in place and returned for future calls and for detecting underflows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer into which to store the data read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buflen</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of buf in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes written into the buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/winstream.h" line="92" column="10" declfile="include/sys/winstream.h" declline="92" declcolumn="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_SYS_WINSTREAM_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_SYS_WINSTREAM_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structsys__winstream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__winstream" kindref="compound">sys_winstream</ref><sp/>{</highlight></codeline>
<codeline lineno="26" refid="structsys__winstream_1a30b03df76a51ecbf0cbe33975d5aaa66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structsys__winstream_1a30b03df76a51ecbf0cbe33975d5aaa66" kindref="member">len</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Length<sp/>of<sp/>data[]<sp/>in<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="structsys__winstream_1a1cc84dfd9f812b3491135d13365c7a98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structsys__winstream_1a1cc84dfd9f812b3491135d13365c7a98" kindref="member">start</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>of<sp/>first<sp/>valid<sp/>byte<sp/>in<sp/>data[]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structsys__winstream_1a6b80cf715e4a3ca7b7b74b9efd150a23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structsys__winstream_1a6b80cf715e4a3ca7b7b74b9efd150a23" kindref="member">end</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>of<sp/>next<sp/>byte<sp/>in<sp/>data[]<sp/>to<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structsys__winstream_1a7d946d6a54652a8ac035dd8cd0ba861a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structsys__winstream_1a7d946d6a54652a8ac035dd8cd0ba861a" kindref="member">seq</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mod-2^32<sp/>index<sp/>of<sp/>&apos;end&apos;<sp/>since<sp/>stream<sp/>init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structsys__winstream_1a341203116bfee52d4b801466097fc3eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structsys__winstream_1a341203116bfee52d4b801466097fc3eb" kindref="member">data</ref>[];</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="winstream_8h_1acc72f0f65bd88e8f2b630a3832006f9c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__winstream" kindref="compound">sys_winstream</ref><sp/>*<ref refid="winstream_8h_1acc72f0f65bd88e8f2b630a3832006f9c" kindref="member">sys_winstream_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buflen)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__winstream" kindref="compound">sys_winstream</ref><sp/>*ws<sp/>=<sp/>buf,<sp/>tmp<sp/>=<sp/>{<sp/>.<ref refid="structsys__winstream_1a30b03df76a51ecbf0cbe33975d5aaa66" kindref="member">len</ref><sp/>=<sp/>buflen<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ws)<sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ws<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ws;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="winstream_8h_1ae8686be598c081858322378c8e4368cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="winstream_8h_1ae8686be598c081858322378c8e4368cb" kindref="member">sys_winstream_write</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsys__winstream" kindref="compound">sys_winstream</ref><sp/>*ws,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structsys__winstream_1a30b03df76a51ecbf0cbe33975d5aaa66" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="winstream_8h_1a55dc3b77ec21e6d799aa951e327dc392" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="winstream_8h_1a55dc3b77ec21e6d799aa951e327dc392" kindref="member">sys_winstream_read</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsys__winstream" kindref="compound">sys_winstream</ref><sp/>*ws,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>*<ref refid="structsys__winstream_1a7d946d6a54652a8ac035dd8cd0ba861a" kindref="member">seq</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>buflen);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_SYS_WINSTREAM_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/sys/winstream.h"/>
  </compounddef>
</doxygen>
