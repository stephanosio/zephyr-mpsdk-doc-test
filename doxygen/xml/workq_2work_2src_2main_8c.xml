<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="workq_2work_2src_2main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes refid="toolchain_8h" local="no">toolchain.h</includes>
    <includes refid="ztest_8h" local="no">ztest.h</includes>
    <incdepgraph>
      <node id="17">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="66">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="65">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="29">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="36">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="38">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="34">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="32">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="40">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="41">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="37">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="35">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="39">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="75">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="45">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="51">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="28">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="42">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="23">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="2">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="19">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="86">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="87">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="13">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="8">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="11">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="64">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="88">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="81">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="3">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="15">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/workq/work/src/main.c</label>
        <link refid="workq_2work_2src_2main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>alloca.h</label>
      </node>
      <node id="68">
        <label>arch/cpu.h</label>
      </node>
      <node id="31">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="30">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="43">
        <label>kernel.h</label>
      </node>
      <node id="6">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="84">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="89">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="90">
        <label>tc_util.h</label>
      </node>
      <node id="9">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structtest__running__cancel__timer" prot="public">test_running_cancel_timer</innerclass>
    <innerclass refid="structtest__drain__wait__timer" prot="public">test_drain_wait_timer</innerclass>
    <innerclass refid="structstate__1cpu__basic__schedule__running" prot="public">state_1cpu_basic_schedule_running</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="workq_2work_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" prot="public" static="no">
        <name>STACK_SIZE</name>
        <initializer>(1024 + CONFIG_TEST_EXTRA_STACK_SIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="18" column="9" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="workq_2work_2src_2main_8c_1ad07dad03a589b49d99e3f0d901c85983" prot="public" static="no">
        <name>COOPHI_PRIORITY</name>
        <initializer><ref refid="include_2kernel_8h_1ac145d4747518572acfc8ee1579007d54" kindref="member">K_PRIO_COOP</ref>(0) /* = -4 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="19" column="9" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="workq_2work_2src_2main_8c_1aae59c40ffd8c60a6850dbe141b206181" prot="public" static="no">
        <name>COOPLO_PRIORITY</name>
        <initializer><ref refid="include_2kernel_8h_1ac145d4747518572acfc8ee1579007d54" kindref="member">K_PRIO_COOP</ref>(3) /* = -1 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="22" column="9" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="workq_2work_2src_2main_8c_1af039ab0e2c22d8453bdac499b76895c9" prot="public" static="no">
        <name>PREEMPT_PRIORITY</name>
        <initializer><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(1) /* = 1 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="23" column="9" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" prot="public" static="no">
        <name>DELAY_MS</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="25" column="9" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="workq_2work_2src_2main_8c_1a2ac0fd69ec4b708360186ae64430dea1" prot="public" static="no">
        <name>DELAY_TIMEOUT</name>
        <initializer><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="26" column="9" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" prot="public" static="yes" mutable="no">
        <type>struct k_sem</type>
        <definition>struct k_sem sync_sem</definition>
        <argsstring></argsstring>
        <name>sync_sem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="38" column="19" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1a5ab4ecd90a56c717098aa73d54fb7df8" prot="public" static="yes" mutable="no">
        <type>struct k_sem</type>
        <definition>struct k_sem rel_sem</definition>
        <argsstring></argsstring>
        <name>rel_sem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="41" column="19" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__work" kindref="compound">k_work</ref></type>
        <definition>struct k_work work</definition>
        <argsstring></argsstring>
        <name>work</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="46" column="20" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1a9fedd8df465f8a32d522ebc00891005e" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__work" kindref="compound">k_work</ref></type>
        <definition>struct k_work work1</definition>
        <argsstring></argsstring>
        <name>work1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="47" column="20" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__work__delayable" kindref="compound">k_work_delayable</ref></type>
        <definition>struct k_work_delayable dwork</definition>
        <argsstring></argsstring>
        <name>dwork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="48" column="30" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__work__sync" kindref="compound">k_work_sync</ref></type>
        <definition>struct k_work_sync work_sync</definition>
        <argsstring></argsstring>
        <name>work_sync</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="53" column="25" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1a1a57fef890c6b3defdc54c18c1c47a1c" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref> *</type>
        <definition>struct k_thread* main_thread</definition>
        <argsstring></argsstring>
        <name>main_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="55" column="22" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1a3113c779dd60ece13baa9e9ce206900c" prot="public" static="yes" mutable="no">
        <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref></type>
        <definition>atomic_t resubmits_left</definition>
        <argsstring></argsstring>
        <name>resubmits_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="81" column="17" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1af11484df95b098ad95a91c341ef6663b" prot="public" static="yes" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> volatile</type>
        <definition>uint32_t volatile last_handle_ms</definition>
        <argsstring></argsstring>
        <name>last_handle_ms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="84" column="26" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__work__q" kindref="compound">k_work_q</ref></type>
        <definition>struct k_work_q coophi_queue</definition>
        <argsstring></argsstring>
        <name>coophi_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="87" column="22" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1a90b552985916399a879a0de7f4e25645" prot="public" static="yes" mutable="no">
        <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref></type>
        <definition>atomic_t coophi_ctr</definition>
        <argsstring></argsstring>
        <name>coophi_ctr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="88" column="17" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1ac50614b04ba0bc3bba8cf507b7845229" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__work__q" kindref="compound">k_work_q</ref></type>
        <definition>struct k_work_q cooplo_queue</definition>
        <argsstring></argsstring>
        <name>cooplo_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="95" column="22" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1a71daaccf2d64f80069287faf54e2268b" prot="public" static="yes" mutable="no">
        <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref></type>
        <definition>atomic_t cooplo_ctr</definition>
        <argsstring></argsstring>
        <name>cooplo_ctr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="96" column="17" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1a449e714b2c823aee4dc5ecbcfaacbb1f" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__work__q" kindref="compound">k_work_q</ref></type>
        <definition>struct k_work_q preempt_queue</definition>
        <argsstring></argsstring>
        <name>preempt_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="110" column="22" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1a61aab4d02be169cc42649e7afad56184" prot="public" static="yes" mutable="no">
        <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref></type>
        <definition>atomic_t preempt_ctr</definition>
        <argsstring></argsstring>
        <name>preempt_ctr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="111" column="17" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1af38eb5e38a5924af7e2c8ac826abcf2e" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__work__q" kindref="compound">k_work_q</ref></type>
        <definition>struct k_work_q invalid_test_queue</definition>
        <argsstring></argsstring>
        <name>invalid_test_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="118" column="22" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1a67f3ac2c4999ebf5c4f938aad24315b5" prot="public" static="yes" mutable="no">
        <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref></type>
        <definition>atomic_t system_ctr</definition>
        <argsstring></argsstring>
        <name>system_ctr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="120" column="17" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1a88e4150001bfcde891512d9d19040474" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structtest__running__cancel__timer" kindref="compound">test_running_cancel_timer</ref></type>
        <definition>struct test_running_cancel_timer test_running_cancel_ctx</definition>
        <argsstring></argsstring>
        <name>test_running_cancel_ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="680" column="39" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="680" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="workq_2work_2src_2main_8c_1af7d629ad5415236f27726583400594c1" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structtest__drain__wait__timer" kindref="compound">test_drain_wait_timer</ref></type>
        <definition>struct test_drain_wait_timer test_drain_wait_ctx</definition>
        <argsstring></argsstring>
        <name>test_drain_wait_ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="857" column="35" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="857" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a0b35142922e28918a75bc6e58dfa098b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_DEFINE</definition>
        <argsstring>(coophi_stack,(1024+CONFIG_TEST_EXTRA_STACK_SIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>coophi_stack</type>
        </param>
        <param>
          <type>(1024+CONFIG_TEST_EXTRA_STACK_SIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="86" column="8" declfile="tests/kernel/workq/work/src/main.c" declline="86" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int coophi_counter</definition>
        <argsstring>(void)</argsstring>
        <name>coophi_counter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="89" column="19" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1abd3dd0f68d78f97486074955d614fa35" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_DEFINE</definition>
        <argsstring>(cooplo_stack,(1024+CONFIG_TEST_EXTRA_STACK_SIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>cooplo_stack</type>
        </param>
        <param>
          <type>(1024+CONFIG_TEST_EXTRA_STACK_SIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="94" column="8" declfile="tests/kernel/workq/work/src/main.c" declline="94" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1ab4f117ff15cc6cbaed33489e85a4a537" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int cooplo_counter</definition>
        <argsstring>(void)</argsstring>
        <name>cooplo_counter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="97" column="19" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a7aa72bc64fa669e6b7a4c9c557cb7969" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int coop_counter</definition>
        <argsstring>(struct k_work_q *wq)</argsstring>
        <name>coop_counter</name>
        <param>
          <type>struct <ref refid="structk__work__q" kindref="compound">k_work_q</ref> *</type>
          <declname>wq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="102" column="19" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="102" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1ab7ac60852003d7e7f76f7b73957fb2c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_DEFINE</definition>
        <argsstring>(preempt_stack,(1024+CONFIG_TEST_EXTRA_STACK_SIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>preempt_stack</type>
        </param>
        <param>
          <type>(1024+CONFIG_TEST_EXTRA_STACK_SIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="109" column="8" declfile="tests/kernel/workq/work/src/main.c" declline="109" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a96afb496e5966a3553f338d33d062a69" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int preempt_counter</definition>
        <argsstring>(void)</argsstring>
        <name>preempt_counter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="112" column="19" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a903fe364a78c015b076a438580b4a9bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_DEFINE</definition>
        <argsstring>(invalid_test_stack,(1024+CONFIG_TEST_EXTRA_STACK_SIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>invalid_test_stack</type>
        </param>
        <param>
          <type>(1024+CONFIG_TEST_EXTRA_STACK_SIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="117" column="8" declfile="tests/kernel/workq/work/src/main.c" declline="117" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a896c3c7a7503404932c16d6018d7072b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int system_counter</definition>
        <argsstring>(void)</argsstring>
        <name>system_counter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="121" column="19" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void reset_counters</definition>
        <argsstring>(void)</argsstring>
        <name>reset_counters</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="126" column="20" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="126" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void counter_handler</definition>
        <argsstring>(struct k_work *work)</argsstring>
        <name>counter_handler</name>
        <param>
          <type>struct <ref refid="structk__work" kindref="compound">k_work</ref> *</type>
          <declname>work</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="138" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="138" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a7f6c7cc361ae0b4b424424f2a8508f0b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void handler_release</definition>
        <argsstring>(void)</argsstring>
        <name>handler_release</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="157" column="20" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a74cf9b566a8cf9398f4a6ef08f8bada6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void async_release_cb</definition>
        <argsstring>(struct k_timer *timer)</argsstring>
        <name>async_release_cb</name>
        <param>
          <type>struct k_timer *</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="162" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a3bffe48eab97a27372d4318202187c3a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_TIMER_DEFINE</definition>
        <argsstring>(async_releaser, async_release_cb, NULL)</argsstring>
        <name>K_TIMER_DEFINE</name>
        <param>
          <type>async_releaser</type>
        </param>
        <param>
          <type><ref refid="workq_2work_2src_2main_8c_1a74cf9b566a8cf9398f4a6ef08f8bada6" kindref="member">async_release_cb</ref></type>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="167" column="8" declfile="tests/kernel/workq/work/src/main.c" declline="167" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a847778466ac6be37008d0bab34b168d5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void async_release</definition>
        <argsstring>(void)</argsstring>
        <name>async_release</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="169" column="20" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1abecbbfaa65d8f2cbfee3a685be225a88" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rel_handler</definition>
        <argsstring>(struct k_work *work)</argsstring>
        <name>rel_handler</name>
        <param>
          <type>struct <ref refid="structk__work" kindref="compound">k_work</ref> *</type>
          <declname>work</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="174" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a07f2054c8f893e3cae22f3f224487f12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void delay_handler</definition>
        <argsstring>(struct k_work *work)</argsstring>
        <name>delay_handler</name>
        <param>
          <type>struct <ref refid="structk__work" kindref="compound">k_work</ref> *</type>
          <declname>work</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="180" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1ae669581d2e97a3e690eb7b88acc363f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_work_init</definition>
        <argsstring>(void)</argsstring>
        <name>test_work_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="187" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="187" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1ad2de23ae7c81643670995ecf188b4f41" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_delayable_init</definition>
        <argsstring>(void)</argsstring>
        <name>test_delayable_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="198" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="198" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a924384de7747470829d50b8eee968870" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_legacy_delayed_init</definition>
        <argsstring>(void)</argsstring>
        <name>test_legacy_delayed_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="209" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="209" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a8bb7ef5ff38593332b0aa83ce10377de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_unstarted</definition>
        <argsstring>(void)</argsstring>
        <name>test_unstarted</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="221" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="221" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1abfb0eef89872dae72a0d041949467b11" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_queue_start</definition>
        <argsstring>(void)</argsstring>
        <name>test_queue_start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="232" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="232" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a77ce66315734063e9ce4a9ece2631d17" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_null_queue</definition>
        <argsstring>(void)</argsstring>
        <name>test_null_queue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="281" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="281" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a635f2161af9826df87ea0f9ef53fd727" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_simple_queue</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_simple_queue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="293" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="293" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a387c69b612b02f493a19497b40a33244" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_smp_simple_queue</definition>
        <argsstring>(void)</argsstring>
        <name>test_smp_simple_queue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="325" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="325" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a801768e734510e3cb7c0bea31752e41d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_sync_queue</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_sync_queue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="361" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="361" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1ac82dffa7384f1bac58a19dcd335d894e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_reentrant_queue</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_reentrant_queue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="399" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="399" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a8baee445c01f44c9055324d1e8c8329f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_queued_flush</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_queued_flush</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="438" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="438" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a20fd804f5d56687d0b6a16b6761bd0d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_running_flush</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_running_flush</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="476" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="476" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a98d09628ce2e2f67d2dc0ad161648f7f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_delayed_flush</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_delayed_flush</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="507" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="507" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a083db2196ba0caee73d2b0c82279c2f3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_queued_cancel</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_queued_cancel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="541" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="541" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1acb2410291bb95a111b17d70b308894cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_queued_cancel_sync</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_queued_cancel_sync</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="562" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="562" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1af829a63d4ec71fb9c72631bd56a909c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_delayed_cancel</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_delayed_cancel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="592" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="592" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a5aff836fdc615eddd77d7d05b70d03de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_delayed_cancel_sync</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_delayed_cancel_sync</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="614" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="614" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a6bf758347497de087360629438a2c365" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_delayed_cancel_sync_wait</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_delayed_cancel_sync_wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="642" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="642" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a6b8466482e953d56be192edd8032ba03" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_running_cancel_cb</definition>
        <argsstring>(struct k_timer *timer)</argsstring>
        <name>test_running_cancel_cb</name>
        <param>
          <type>struct k_timer *</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="682" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="682" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1ac4629f0613c54f97eb3ba437a22fde96" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_running_cancel</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_running_cancel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="693" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="693" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a76ba5fb95e98c3b063c7999e0164fe49" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_running_cancel_sync</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_running_cancel_sync</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="749" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="749" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a8a8a22c88ade11cbc88aa597d4e67d1b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_smp_running_cancel</definition>
        <argsstring>(void)</argsstring>
        <name>test_smp_running_cancel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="801" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="801" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1ab6bd2144638940e5ddc2bed826b9281d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_drain_empty</definition>
        <argsstring>(void)</argsstring>
        <name>test_drain_empty</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="843" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="843" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1ad70d04f8d9e3f7a2ebbf4c9411280a20" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_drain_wait_cb</definition>
        <argsstring>(struct k_timer *timer)</argsstring>
        <name>test_drain_wait_cb</name>
        <param>
          <type>struct k_timer *</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="859" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="859" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a570c523d96a16aace6d83efd38915cb8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_drain_wait</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_drain_wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="868" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="868" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a312aff318fc66883c6c9728ad6253488" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_plugged_drain</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_plugged_drain</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="908" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="908" bodyend="962"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a84ea559f96c13f1e91bdd79b8caa1301" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_basic_schedule</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_basic_schedule</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="965" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="965" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a6e6f7e4f4ac9c180a566a218fa69991a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void handle_1cpu_basic_schedule_running</definition>
        <argsstring>(struct k_work *work)</argsstring>
        <name>handle_1cpu_basic_schedule_running</name>
        <param>
          <type>struct <ref refid="structk__work" kindref="compound">k_work</ref> *</type>
          <declname>work</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="1018" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="1018" bodyend="1038"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1af57b9364561e401127d1d927f8154ed0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_basic_schedule_running</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_basic_schedule_running</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="1041" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="1041" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a13a82c07a35300fab433e94b42833402" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_immed_schedule</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_immed_schedule</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="1077" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="1077" bodyend="1112"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a0290c6f550c1db54d86da3eb4d4e0170" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_basic_reschedule</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_basic_reschedule</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="1115" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="1115" bodyend="1165"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1ac7bb940ea3e87f7ea230bcba4db26e1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_immed_reschedule</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_immed_reschedule</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="1170" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="1170" bodyend="1253"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a76282488686be2d2c70280c757c6be9c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool try_queue_no_yield</definition>
        <argsstring>(struct k_work_q *wq)</argsstring>
        <name>try_queue_no_yield</name>
        <param>
          <type>struct <ref refid="structk__work__q" kindref="compound">k_work_q</ref> *</type>
          <declname>wq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="1258" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="1258" bodyend="1299"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a6ca1e285ef37e83660c286707c0087b9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_queue_no_yield</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_queue_no_yield</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="1302" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="1302" bodyend="1306"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1ac23b1946e4a63aac97d8b7847d5fbeea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_system_queue</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_system_queue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="1309" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="1309" bodyend="1336"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a7b96628be8b00c454a77c3781674f4f3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_system_schedule</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_system_schedule</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="1338" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="1338" bodyend="1380"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a3d832812601891fca26cb06ee5012053" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_system_reschedule</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_system_reschedule</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="1382" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="1382" bodyend="1429"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1acd5a58f763601433f78630fa34eba3d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_legacy_delayed_submit</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_legacy_delayed_submit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="1432" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="1432" bodyend="1471"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1ada5cb237fb7ddcd3344753e42ab0a6d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_legacy_delayed_resubmit</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_legacy_delayed_resubmit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="1474" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="1474" bodyend="1521"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a1c119803af1b22e49264f7f8c4be8889" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_1cpu_legacy_delayed_cancel</definition>
        <argsstring>(void)</argsstring>
        <name>test_1cpu_legacy_delayed_cancel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="1524" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="1524" bodyend="1552"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a5e03abbe663c434e5932c55ce4376f5e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_nop</definition>
        <argsstring>(void)</argsstring>
        <name>test_nop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="1555" column="13" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="1555" bodyend="1558"/>
      </memberdef>
      <memberdef kind="function" id="workq_2work_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_main</definition>
        <argsstring>(void)</argsstring>
        <name>test_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>test case main entry </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/workq/work/src/main.c" line="1560" column="6" bodyfile="tests/kernel/workq/work/src/main.c" bodystart="1560" bodyend="1606"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>test<sp/>covers<sp/>deprecated<sp/>API.<sp/><sp/>Avoid<sp/>inappropriate<sp/>diagnostics</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>about<sp/>the<sp/>use<sp/>of<sp/>that<sp/>API.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="toolchain_8h" kindref="compound">toolchain.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__DEPRECATED_MACRO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__DEPRECATED_MACRO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztest_8h" kindref="compound">ztest.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STACK_SIZE<sp/>(1024<sp/>+<sp/>CONFIG_TEST_EXTRA_STACK_SIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COOPHI_PRIORITY<sp/>K_PRIO_COOP(0)<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>-4<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SYSTEM_WORKQUEUE_PRIORITY<sp/>=<sp/>-3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ZTEST_THREAD_PRIORITY<sp/>=<sp/>-2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COOPLO_PRIORITY<sp/>K_PRIO_COOP(3)<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>-1<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PREEMPT_PRIORITY<sp/>K_PRIO_PREEMPT(1)<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>1<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DELAY_MS<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DELAY_TIMEOUT<sp/>K_MSEC(DELAY_MS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">BUILD_ASSERT(<ref refid="workq_2work_2src_2main_8c_1ad07dad03a589b49d99e3f0d901c85983" kindref="member">COOPHI_PRIORITY</ref><sp/>&lt;<sp/>CONFIG_SYSTEM_WORKQUEUE_PRIORITY,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;COOPHI<sp/>not<sp/>higher<sp/>priority<sp/>than<sp/>system<sp/>workqueue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">BUILD_ASSERT(CONFIG_SYSTEM_WORKQUEUE_PRIORITY<sp/>&lt;<sp/>CONFIG_ZTEST_THREAD_PRIORITY,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;System<sp/>workqueue<sp/>not<sp/>higher<sp/>priority<sp/>than<sp/>ZTEST&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">BUILD_ASSERT(CONFIG_ZTEST_THREAD_PRIORITY<sp/>&lt;<sp/><ref refid="workq_2work_2src_2main_8c_1aae59c40ffd8c60a6850dbe141b206181" kindref="member">COOPLO_PRIORITY</ref>,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ZTEST<sp/>not<sp/>higher<sp/>priority<sp/>than<sp/>COOPLO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">BUILD_ASSERT(<ref refid="workq_2work_2src_2main_8c_1aae59c40ffd8c60a6850dbe141b206181" kindref="member">COOPLO_PRIORITY</ref><sp/>&lt;<sp/>0,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;COOPLO<sp/>not<sp/>cooperative&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Given<sp/>by<sp/>work<sp/>thread<sp/>to<sp/>signal<sp/>completion.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/><ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Given<sp/>by<sp/>test<sp/>thread<sp/>to<sp/>release<sp/>a<sp/>work<sp/>item.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/><ref refid="workq_2work_2src_2main_8c_1a5ab4ecd90a56c717098aa73d54fb7df8" kindref="member">rel_sem</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Common<sp/>work<sp/>structures,<sp/>to<sp/>avoid<sp/>dead<sp/>references<sp/>to<sp/>stack<sp/>objects</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>if<sp/>a<sp/>test<sp/>fails.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/><ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/><ref refid="workq_2work_2src_2main_8c_1a9fedd8df465f8a32d522ebc00891005e" kindref="member">work1</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work__delayable" kindref="compound">k_work_delayable</ref><sp/><ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Work<sp/>synchronization<sp/>objects<sp/>must<sp/>be<sp/>in<sp/>cache-coherent<sp/>memory,</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>which<sp/>excludes<sp/>stacks<sp/>on<sp/>some<sp/>architectures.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work__sync" kindref="compound">k_work_sync</ref><sp/><ref refid="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" kindref="member">work_sync</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/>*<ref refid="workq_2work_2src_2main_8c_1a1a57fef890c6b3defdc54c18c1c47a1c" kindref="member">main_thread</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>these<sp/>threads,<sp/>in<sp/>strictly<sp/>decreasing<sp/>order<sp/>of<sp/>priority:</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>*<sp/>coophi:<sp/>a<sp/>high<sp/>priority<sp/>cooperative<sp/>work<sp/>queue</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>*<sp/>system:<sp/>the<sp/>standard<sp/>system<sp/>work<sp/>queue</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>*<sp/>ztest<sp/>thread:<sp/>priority<sp/>for<sp/>threads<sp/>running<sp/>tests</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>*<sp/>cooplo<sp/>:<sp/>a<sp/>low-priority<sp/>cooperative<sp/>work<sp/>queue</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>*<sp/>preempt:<sp/>a<sp/>preemptible<sp/>work<sp/>queue</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>The<sp/>test<sp/>infrastructure<sp/>records<sp/>the<sp/>number<sp/>of<sp/>times<sp/>each<sp/>work<sp/>queue</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>executes<sp/>in<sp/>a<sp/>counter.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>The<sp/>common<sp/>work<sp/>handler<sp/>also<sp/>supports<sp/>internal<sp/>re-submission<sp/>if</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>configured<sp/>to<sp/>do<sp/>so.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>There<sp/>are<sp/>three<sp/>core<sp/>handlers:</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>*<sp/>The<sp/>basic<sp/>one<sp/>(counter_handler)<sp/>increments<sp/>the<sp/>count<sp/>of<sp/>handler</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/><sp/><sp/>invocations<sp/>by<sp/>work<sp/>queue<sp/>thread,<sp/>optionally<sp/>resubmits,<sp/>then</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/><sp/><sp/>releases<sp/>the<sp/>semaphore<sp/>the<sp/>test<sp/>is<sp/>waiting<sp/>for.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>*<sp/>The<sp/>blocking<sp/>one<sp/>(rel_handler)<sp/>waits<sp/>until<sp/>something<sp/>invokes</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/><sp/><sp/>handler_release()<sp/>to<sp/>allow<sp/>it<sp/>to<sp/>complete<sp/>by<sp/>invoking</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/><sp/><sp/>counter_handler().<sp/><sp/>This<sp/>makes<sp/>a<sp/>work<sp/>queue<sp/>busy<sp/>for<sp/>arbitrary</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/><sp/><sp/>periods,<sp/>but<sp/>requires<sp/>something<sp/>external<sp/>to<sp/>trigger<sp/>the<sp/>release.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>*<sp/>The<sp/>delaying<sp/>one<sp/>(delay_handler)<sp/>waits<sp/>for<sp/>K_MSEC(DELAY_MS)<sp/>before</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/><sp/><sp/>invoking<sp/>counter_handler().</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/><ref refid="workq_2work_2src_2main_8c_1a3113c779dd60ece13baa9e9ce206900c" kindref="member">resubmits_left</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>k_uptime_get32()<sp/>on<sp/>the<sp/>last<sp/>invocation<sp/>of<sp/>the<sp/>core<sp/>handler.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1af11484df95b098ad95a91c341ef6663b" kindref="member">last_handle_ms</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1abb291232121138c783bcbd0addb9a4f3" kindref="member">K_THREAD_STACK_DEFINE</ref>(coophi_stack,<sp/><ref refid="workq_2work_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work__q" kindref="compound">k_work_q</ref><sp/><ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/><ref refid="workq_2work_2src_2main_8c_1a90b552985916399a879a0de7f4e25645" kindref="member">coophi_ctr</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="atomic__xtensa_8h_1a70641cc94157f8d7be8f7fc2ebb72e02" kindref="member">atomic_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a90b552985916399a879a0de7f4e25645" kindref="member">coophi_ctr</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1abb291232121138c783bcbd0addb9a4f3" kindref="member">K_THREAD_STACK_DEFINE</ref>(cooplo_stack,<sp/><ref refid="workq_2work_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work__q" kindref="compound">k_work_q</ref><sp/><ref refid="workq_2work_2src_2main_8c_1ac50614b04ba0bc3bba8cf507b7845229" kindref="member">cooplo_queue</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/><ref refid="workq_2work_2src_2main_8c_1a71daaccf2d64f80069287faf54e2268b" kindref="member">cooplo_ctr</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1ab4f117ff15cc6cbaed33489e85a4a537" kindref="member">cooplo_counter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="atomic__xtensa_8h_1a70641cc94157f8d7be8f7fc2ebb72e02" kindref="member">atomic_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a71daaccf2d64f80069287faf54e2268b" kindref="member">cooplo_ctr</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a7aa72bc64fa669e6b7a4c9c557cb7969" kindref="member">coop_counter</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__work__q" kindref="compound">k_work_q</ref><sp/>*wq)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(wq<sp/>==<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>)<sp/>?<sp/><ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>()</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(wq<sp/>==<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1ac50614b04ba0bc3bba8cf507b7845229" kindref="member">cooplo_queue</ref>)<sp/>?<sp/><ref refid="workq_2work_2src_2main_8c_1ab4f117ff15cc6cbaed33489e85a4a537" kindref="member">cooplo_counter</ref>()</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1abb291232121138c783bcbd0addb9a4f3" kindref="member">K_THREAD_STACK_DEFINE</ref>(preempt_stack,<sp/><ref refid="workq_2work_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work__q" kindref="compound">k_work_q</ref><sp/><ref refid="workq_2work_2src_2main_8c_1a449e714b2c823aee4dc5ecbcfaacbb1f" kindref="member">preempt_queue</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/><ref refid="workq_2work_2src_2main_8c_1a61aab4d02be169cc42649e7afad56184" kindref="member">preempt_ctr</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a96afb496e5966a3553f338d33d062a69" kindref="member">preempt_counter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="atomic__xtensa_8h_1a70641cc94157f8d7be8f7fc2ebb72e02" kindref="member">atomic_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a61aab4d02be169cc42649e7afad56184" kindref="member">preempt_ctr</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1abb291232121138c783bcbd0addb9a4f3" kindref="member">K_THREAD_STACK_DEFINE</ref>(invalid_test_stack,<sp/><ref refid="workq_2work_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work__q" kindref="compound">k_work_q</ref><sp/><ref refid="workq_2work_2src_2main_8c_1af38eb5e38a5924af7e2c8ac826abcf2e" kindref="member">invalid_test_queue</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/><ref refid="workq_2work_2src_2main_8c_1a67f3ac2c4999ebf5c4f938aad24315b5" kindref="member">system_ctr</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a896c3c7a7503404932c16d6018d7072b" kindref="member">system_counter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="atomic__xtensa_8h_1a70641cc94157f8d7be8f7fc2ebb72e02" kindref="member">atomic_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a67f3ac2c4999ebf5c4f938aad24315b5" kindref="member">system_ctr</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>fails<sp/>the<sp/>previous<sp/>test<sp/>didn&apos;t<sp/>clean<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/>-<ref refid="group__system__errno_1ga8368025077a0385849d6817b2007c095" kindref="member">EBUSY</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1af11484df95b098ad95a91c341ef6663b" kindref="member">last_handle_ms</ref><sp/>=<sp/><ref refid="stdint_8h_1ab5eb23180f7cc12b7d6c04a8ec067fdd" kindref="member">UINT32_MAX</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic__xtensa_8h_1a5da5d59cfe0071203119b4881c2edf25" kindref="member">atomic_set</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a3113c779dd60ece13baa9e9ce206900c" kindref="member">resubmits_left</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic__xtensa_8h_1a5da5d59cfe0071203119b4881c2edf25" kindref="member">atomic_set</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a90b552985916399a879a0de7f4e25645" kindref="member">coophi_ctr</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic__xtensa_8h_1a5da5d59cfe0071203119b4881c2edf25" kindref="member">atomic_set</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a67f3ac2c4999ebf5c4f938aad24315b5" kindref="member">system_ctr</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic__xtensa_8h_1a5da5d59cfe0071203119b4881c2edf25" kindref="member">atomic_set</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a71daaccf2d64f80069287faf54e2268b" kindref="member">cooplo_ctr</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic__xtensa_8h_1a5da5d59cfe0071203119b4881c2edf25" kindref="member">atomic_set</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a61aab4d02be169cc42649e7afad56184" kindref="member">preempt_ctr</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__work" kindref="compound">k_work</ref><sp/>*<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1af11484df95b098ad95a91c341ef6663b" kindref="member">last_handle_ms</ref><sp/>=<sp/><ref refid="group__clock__apis_1ga9253cfb7b46af4d8994349323ce9872b" kindref="member">k_uptime_get_32</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>()<sp/>==<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>.<ref refid="structk__work__q_1aa42ca271a4989f129bf1a43c491327eb" kindref="member">thread</ref>)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic__arch_8h_1aae47a9cbe5a6534967b417f602b37ac2" kindref="member">atomic_inc</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a90b552985916399a879a0de7f4e25645" kindref="member">coophi_ctr</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>()<sp/>==<sp/>&amp;k_sys_work_q.thread)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic__arch_8h_1aae47a9cbe5a6534967b417f602b37ac2" kindref="member">atomic_inc</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a67f3ac2c4999ebf5c4f938aad24315b5" kindref="member">system_ctr</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>()<sp/>==<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1ac50614b04ba0bc3bba8cf507b7845229" kindref="member">cooplo_queue</ref>.<ref refid="structk__work__q_1aa42ca271a4989f129bf1a43c491327eb" kindref="member">thread</ref>)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic__arch_8h_1aae47a9cbe5a6534967b417f602b37ac2" kindref="member">atomic_inc</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a71daaccf2d64f80069287faf54e2268b" kindref="member">cooplo_ctr</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>()<sp/>==<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a449e714b2c823aee4dc5ecbcfaacbb1f" kindref="member">preempt_queue</ref>.<ref refid="structk__work__q_1aa42ca271a4989f129bf1a43c491327eb" kindref="member">thread</ref>)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic__arch_8h_1aae47a9cbe5a6534967b417f602b37ac2" kindref="member">atomic_inc</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a61aab4d02be169cc42649e7afad56184" kindref="member">preempt_ctr</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="atomic__arch_8h_1ac260f0efbd970717eae4ac3bb493a0c4" kindref="member">atomic_dec</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a3113c779dd60ece13baa9e9ce206900c" kindref="member">resubmits_left</ref>)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(NULL,<sp/><ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a7f6c7cc361ae0b4b424424f2a8508f0b" kindref="member">handler_release</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a5ab4ecd90a56c717098aa73d54fb7df8" kindref="member">rel_sem</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a74cf9b566a8cf9398f4a6ef08f8bada6" kindref="member">async_release_cb</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_timer<sp/>*<ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a7f6c7cc361ae0b4b424424f2a8508f0b" kindref="member">handler_release</ref>();</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="obj__tracking_2src_2main_8c_1ad8c286584d1c6cae5e5866e4af529b6b" kindref="member">K_TIMER_DEFINE</ref>(async_releaser,<sp/><ref refid="workq_2work_2src_2main_8c_1a74cf9b566a8cf9398f4a6ef08f8bada6" kindref="member">async_release_cb</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a847778466ac6be37008d0bab34b168d5" kindref="member">async_release</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga3ba70e9f059ff52fd2057ab89ea7f2ee" kindref="member">k_timer_start</ref>(&amp;async_releaser,<sp/><ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1),<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1abecbbfaa65d8f2cbfee3a685be225a88" kindref="member">rel_handler</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__work" kindref="compound">k_work</ref><sp/>*<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a5ab4ecd90a56c717098aa73d54fb7df8" kindref="member">rel_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>(<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a07f2054c8f893e3cae22f3f224487f12" kindref="member">delay_handler</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__work" kindref="compound">k_work</ref><sp/>*<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>(<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>standard<sp/>initializations<sp/>result<sp/>in<sp/>expected<sp/>content.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1ae669581d2e97a3e690eb7b88acc363f4" kindref="member">test_work_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__workqueue__apis_1gaf8e003eefa5dd66ba883688f9d39c333" kindref="member">K_WORK_DEFINE</ref>(fnstat,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/><ref refid="smp__boot__delay_2src_2main_8c_1a96786824adbf96016a9dbf6eded02b94" kindref="member">stack</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="smp__boot__delay_2src_2main_8c_1a96786824adbf96016a9dbf6eded02b94" kindref="member">stack</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gabbfcf6345172387326d35b5d0e2bb051" kindref="member">zassert_mem_equal</ref>(&amp;<ref refid="smp__boot__delay_2src_2main_8c_1a96786824adbf96016a9dbf6eded02b94" kindref="member">stack</ref>,<sp/>&amp;fnstat,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="smp__boot__delay_2src_2main_8c_1a96786824adbf96016a9dbf6eded02b94" kindref="member">stack</ref>),</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1ad2de23ae7c81643670995ecf188b4f41" kindref="member">test_delayable_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__workqueue__apis_1ga893b281f3d2bc0088650536899e17903" kindref="member">K_WORK_DELAYABLE_DEFINE</ref>(fnstat,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work__delayable" kindref="compound">k_work_delayable</ref><sp/><ref refid="smp__boot__delay_2src_2main_8c_1a96786824adbf96016a9dbf6eded02b94" kindref="member">stack</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga2876c5d82fb2340a093bc4d689a55465" kindref="member">k_work_init_delayable</ref>(&amp;<ref refid="smp__boot__delay_2src_2main_8c_1a96786824adbf96016a9dbf6eded02b94" kindref="member">stack</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gabbfcf6345172387326d35b5d0e2bb051" kindref="member">zassert_mem_equal</ref>(&amp;<ref refid="smp__boot__delay_2src_2main_8c_1a96786824adbf96016a9dbf6eded02b94" kindref="member">stack</ref>,<sp/>&amp;fnstat,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="smp__boot__delay_2src_2main_8c_1a96786824adbf96016a9dbf6eded02b94" kindref="member">stack</ref>),</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a924384de7747470829d50b8eee968870" kindref="member">test_legacy_delayed_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__workqueue__apis_1ga41c8a64e854c6cca3a6956079cce2826" kindref="member">K_DELAYED_WORK_DEFINE</ref>(fnstat,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__delayed__work" kindref="compound">k_delayed_work</ref><sp/><ref refid="smp__boot__delay_2src_2main_8c_1a96786824adbf96016a9dbf6eded02b94" kindref="member">stack</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf484b980ae3dbbd620b96e883c4b4fe6" kindref="member">k_delayed_work_init</ref>(&amp;<ref refid="smp__boot__delay_2src_2main_8c_1a96786824adbf96016a9dbf6eded02b94" kindref="member">stack</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gabbfcf6345172387326d35b5d0e2bb051" kindref="member">zassert_mem_equal</ref>(&amp;<ref refid="smp__boot__delay_2src_2main_8c_1a96786824adbf96016a9dbf6eded02b94" kindref="member">stack</ref>,<sp/>&amp;fnstat,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="smp__boot__delay_2src_2main_8c_1a96786824adbf96016a9dbf6eded02b94" kindref="member">stack</ref>),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>submission<sp/>to<sp/>an<sp/>unstarted<sp/>queue<sp/>is<sp/>diagnosed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a8bb7ef5ff38593332b0aa83ce10377de" kindref="member">test_unstarted</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>-<ref refid="group__system__errno_1gab9b8cc17d1947160d13faaba7a18d6d1" kindref="member">ENODEV</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1abfb0eef89872dae72a0d041949467b11" kindref="member">test_queue_start</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work__queue__config" kindref="compound">k_work_queue_config</ref><sp/>cfg<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structk__work__queue__config_1a0929d83372efff6798bc69bb7ca1eaaa" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;wq.preempt&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gada77d818ea9e4d07c14a960872ed5492" kindref="member">k_work_queue_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a449e714b2c823aee4dc5ecbcfaacbb1f" kindref="member">preempt_queue</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a449e714b2c823aee4dc5ecbcfaacbb1f" kindref="member">preempt_queue</ref>.<ref refid="structk__work__q_1a68bc8e9c412ebdbf34827087d91a080e" kindref="member">flags</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gadfc56554f9bfe7b52309d79660188593" kindref="member">k_work_queue_start</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a449e714b2c823aee4dc5ecbcfaacbb1f" kindref="member">preempt_queue</ref>,<sp/>preempt_stack,<sp/><ref refid="workq_2work_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1af039ab0e2c22d8453bdac499b76895c9" kindref="member">PREEMPT_PRIORITY</ref>,<sp/>&amp;cfg);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a449e714b2c823aee4dc5ecbcfaacbb1f" kindref="member">preempt_queue</ref>.<ref refid="structk__work__q_1a68bc8e9c412ebdbf34827087d91a080e" kindref="member">flags</ref>,<sp/>K_WORK_QUEUE_STARTED,<sp/>NULL);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(CONFIG_THREAD_NAME))<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tn<sp/>=<sp/><ref refid="group__thread__apis_1gadebf45da56dee393164569742459dc0a" kindref="member">k_thread_name_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a449e714b2c823aee4dc5ecbcfaacbb1f" kindref="member">preempt_queue</ref>.<ref refid="structk__work__q_1aa42ca271a4989f129bf1a43c491327eb" kindref="member">thread</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(tn<sp/>!=<sp/>cfg.<ref refid="structk__work__queue__config_1a0929d83372efff6798bc69bb7ca1eaaa" kindref="member">name</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(tn<sp/>!=<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="string_8h_1a11bd144d7d44914099a3aeddf1c8567d" kindref="member">strcmp</ref>(tn,<sp/>cfg.<ref refid="structk__work__queue__config_1a0929d83372efff6798bc69bb7ca1eaaa" kindref="member">name</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg.<ref refid="structk__work__queue__config_1a0929d83372efff6798bc69bb7ca1eaaa" kindref="member">name</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1af38eb5e38a5924af7e2c8ac826abcf2e" kindref="member">invalid_test_queue</ref>.<ref refid="structk__work__q_1a68bc8e9c412ebdbf34827087d91a080e" kindref="member">flags</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gadfc56554f9bfe7b52309d79660188593" kindref="member">k_work_queue_start</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1af38eb5e38a5924af7e2c8ac826abcf2e" kindref="member">invalid_test_queue</ref>,<sp/>invalid_test_stack,<sp/><ref refid="workq_2work_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1af039ab0e2c22d8453bdac499b76895c9" kindref="member">PREEMPT_PRIORITY</ref>,<sp/>&amp;cfg);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1af38eb5e38a5924af7e2c8ac826abcf2e" kindref="member">invalid_test_queue</ref>.<ref refid="structk__work__q_1a68bc8e9c412ebdbf34827087d91a080e" kindref="member">flags</ref>,<sp/>K_WORK_QUEUE_STARTED,<sp/>NULL);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(CONFIG_THREAD_NAME))<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tn<sp/>=<sp/><ref refid="group__thread__apis_1gadebf45da56dee393164569742459dc0a" kindref="member">k_thread_name_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1af38eb5e38a5924af7e2c8ac826abcf2e" kindref="member">invalid_test_queue</ref>.<ref refid="structk__work__q_1aa42ca271a4989f129bf1a43c491327eb" kindref="member">thread</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(tn<sp/>!=<sp/>cfg.<ref refid="structk__work__queue__config_1a0929d83372efff6798bc69bb7ca1eaaa" kindref="member">name</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(tn<sp/>!=<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="string_8h_1a11bd144d7d44914099a3aeddf1c8567d" kindref="member">strcmp</ref>(tn,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg.<ref refid="structk__work__queue__config_1a0929d83372efff6798bc69bb7ca1eaaa" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;wq.coophi&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg.<ref refid="structk__work__queue__config_1afcf64d6e69d1ddfff8cbd749dafa4d13" kindref="member">no_yield</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gadfc56554f9bfe7b52309d79660188593" kindref="member">k_work_queue_start</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>coophi_stack,<sp/><ref refid="workq_2work_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1ad07dad03a589b49d99e3f0d901c85983" kindref="member">COOPHI_PRIORITY</ref>,<sp/>&amp;cfg);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>.<ref refid="structk__work__q_1a68bc8e9c412ebdbf34827087d91a080e" kindref="member">flags</ref>,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_WORK_QUEUE_STARTED<sp/>|<sp/>K_WORK_QUEUE_NO_YIELD,<sp/>NULL);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg.<ref refid="structk__work__queue__config_1a0929d83372efff6798bc69bb7ca1eaaa" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;wq.cooplo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg.<ref refid="structk__work__queue__config_1afcf64d6e69d1ddfff8cbd749dafa4d13" kindref="member">no_yield</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gadfc56554f9bfe7b52309d79660188593" kindref="member">k_work_queue_start</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1ac50614b04ba0bc3bba8cf507b7845229" kindref="member">cooplo_queue</ref>,<sp/>cooplo_stack,<sp/><ref refid="workq_2work_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1aae59c40ffd8c60a6850dbe141b206181" kindref="member">COOPLO_PRIORITY</ref>,<sp/>&amp;cfg);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1ac50614b04ba0bc3bba8cf507b7845229" kindref="member">cooplo_queue</ref>.<ref refid="structk__work__q_1a68bc8e9c412ebdbf34827087d91a080e" kindref="member">flags</ref>,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_WORK_QUEUE_STARTED<sp/>|<sp/>K_WORK_QUEUE_NO_YIELD,<sp/>NULL);</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>validation<sp/>of<sp/>submission<sp/>without<sp/>a<sp/>destination<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a77ce66315734063e9ce4a9ece2631d17" kindref="member">test_null_queue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(NULL,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Basic<sp/>single-CPU<sp/>check<sp/>submitting<sp/>with<sp/>a<sp/>non-blocking<sp/>handler.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a635f2161af9826df87ea0f9ef53fd727" kindref="member">test_1cpu_simple_queue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>non-blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga0d1d2e1d2ba2e89a560a1bdc5365d9e0" kindref="member">k_work_is_pending</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3caa7f8855bc9931bff79062ce53b06eb85" kindref="member">K_WORK_QUEUED</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga0d1d2e1d2ba2e89a560a1bdc5365d9e0" kindref="member">k_work_is_pending</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Shouldn&apos;t<sp/>have<sp/>been<sp/>started<sp/>since<sp/>test<sp/>thread<sp/>is</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>cooperative.</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Let<sp/>it<sp/>run,<sp/>then<sp/>check<sp/>it<sp/>finished.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flush<sp/>the<sp/>sync<sp/>state<sp/>from<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Basic<sp/>SMP<sp/>check<sp/>submitting<sp/>with<sp/>a<sp/>non-blocking<sp/>handler.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a387c69b612b02f493a19497b40a33244" kindref="member">test_smp_simple_queue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(CONFIG_SMP))<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>non-blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga0d1d2e1d2ba2e89a560a1bdc5365d9e0" kindref="member">k_work_is_pending</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>should<sp/>run<sp/>and<sp/>finish<sp/>without<sp/>this<sp/>thread<sp/>yielding.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref><sp/>ts0<sp/>=<sp/><ref refid="group__clock__apis_1ga8f143af2ee4ad42d9f7817ef161cbd13" kindref="member">k_uptime_ticks</ref>();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>delay;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay<sp/>=<sp/><ref refid="time__units_8h_1a9c1fcba23d4d8fc10db9b9ec6fc4a9aa" kindref="member">k_ticks_to_ms_floor32</ref>(<ref refid="group__clock__apis_1ga8f143af2ee4ad42d9f7817ef161cbd13" kindref="member">k_uptime_ticks</ref>()<sp/>-<sp/>ts0);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__workqueue__apis_1ga0d1d2e1d2ba2e89a560a1bdc5365d9e0" kindref="member">k_work_is_pending</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>)<sp/>&amp;&amp;<sp/>(delay<sp/>&lt;<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flush<sp/>the<sp/>sync<sp/>state<sp/>from<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Basic<sp/>single-CPU<sp/>check<sp/>submitting<sp/>with<sp/>a<sp/>blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a801768e734510e3cb7c0bea31752e41d" kindref="member">test_1cpu_sync_queue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1abecbbfaa65d8f2cbfee3a685be225a88" kindref="member">rel_handler</ref>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3caa7f8855bc9931bff79062ce53b06eb85" kindref="member">K_WORK_QUEUED</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Shouldn&apos;t<sp/>have<sp/>been<sp/>started<sp/>since<sp/>test<sp/>thread<sp/>is</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>cooperative.</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Let<sp/>it<sp/>run,<sp/>then<sp/>check<sp/>it<sp/>didn&apos;t<sp/>finish.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cac6bee9a104cf6ee3853579f5eb15c165" kindref="member">K_WORK_RUNNING</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>it<sp/>ready<sp/>so<sp/>it<sp/>can<sp/>finish<sp/>when<sp/>this<sp/>thread<sp/>yields.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a7f6c7cc361ae0b4b424424f2a8508f0b" kindref="member">handler_release</ref>();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>then<sp/>verify<sp/>finish<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Verify<sp/>that<sp/>if<sp/>a<sp/>work<sp/>item<sp/>is<sp/>submitted<sp/>while<sp/>it<sp/>is<sp/>being<sp/>run<sp/>by<sp/>a</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*<sp/>queue<sp/>thread<sp/>it<sp/>gets<sp/>submitted<sp/>to<sp/>the<sp/>queue<sp/>it&apos;s<sp/>running<sp/>on,<sp/>to</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/>prevent<sp/>reentrant<sp/>invocation,<sp/>at<sp/>least<sp/>on<sp/>a<sp/>single<sp/>CPU.</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1ac82dffa7384f1bac58a19dcd335d894e" kindref="member">test_1cpu_reentrant_queue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1abecbbfaa65d8f2cbfee3a685be225a88" kindref="member">rel_handler</ref>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>it<sp/>so<sp/>it&apos;s<sp/>running<sp/>and<sp/>can<sp/>be<sp/>rescheduled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Resubmit<sp/>to<sp/>a<sp/>different<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a449e714b2c823aee4dc5ecbcfaacbb1f" kindref="member">preempt_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>2,<sp/>NULL);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>the<sp/>first<sp/>submission.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a7f6c7cc361ae0b4b424424f2a8508f0b" kindref="member">handler_release</ref>();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Confirm<sp/>the<sp/>second<sp/>submission<sp/>was<sp/>redirected<sp/>to<sp/>the<sp/>running</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>queue<sp/>to<sp/>avoid<sp/>re-entrancy<sp/>problems.</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a7f6c7cc361ae0b4b424424f2a8508f0b" kindref="member">handler_release</ref>();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>2,<sp/>NULL);</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>submit<sp/>two<sp/>work<sp/>items<sp/>and<sp/>wait<sp/>for<sp/>flush<sp/>in<sp/>order</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*<sp/>before<sp/>they<sp/>get<sp/>started.</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a8baee445c01f44c9055324d1e8c8329f" kindref="member">test_1cpu_queued_flush</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>delaying<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a07f2054c8f893e3cae22f3f224487f12" kindref="member">delay_handler</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a9fedd8df465f8a32d522ebc00891005e" kindref="member">work1</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a07f2054c8f893e3cae22f3f224487f12" kindref="member">delay_handler</ref>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a9fedd8df465f8a32d522ebc00891005e" kindref="member">work1</ref>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Confirm<sp/>that<sp/>it&apos;s<sp/>still<sp/>in<sp/>the<sp/>queue,<sp/>then<sp/>wait<sp/>for<sp/>completion.</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>should<sp/>wait.</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3caa7f8855bc9931bff79062ce53b06eb85" kindref="member">K_WORK_QUEUED</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a9fedd8df465f8a32d522ebc00891005e" kindref="member">work1</ref>),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3caa7f8855bc9931bff79062ce53b06eb85" kindref="member">K_WORK_QUEUED</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1gabd1cda459bab538fb2d6dfd84a73b253" kindref="member">k_work_flush</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" kindref="member">work_sync</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__workqueue__apis_1gabd1cda459bab538fb2d6dfd84a73b253" kindref="member">k_work_flush</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a9fedd8df465f8a32d522ebc00891005e" kindref="member">work1</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" kindref="member">work_sync</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>completion.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>2,<sp/>NULL);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(!<ref refid="group__workqueue__apis_1ga0d1d2e1d2ba2e89a560a1bdc5365d9e0" kindref="member">k_work_is_pending</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(!<ref refid="group__workqueue__apis_1ga0d1d2e1d2ba2e89a560a1bdc5365d9e0" kindref="member">k_work_is_pending</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a9fedd8df465f8a32d522ebc00891005e" kindref="member">work1</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>After<sp/>completion<sp/>flush<sp/>should<sp/>be<sp/>a<sp/>no-op<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__workqueue__apis_1gabd1cda459bab538fb2d6dfd84a73b253" kindref="member">k_work_flush</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" kindref="member">work_sync</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__workqueue__apis_1gabd1cda459bab538fb2d6dfd84a73b253" kindref="member">k_work_flush</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a9fedd8df465f8a32d522ebc00891005e" kindref="member">work1</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" kindref="member">work_sync</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>submit<sp/>a<sp/>work<sp/>item<sp/>and<sp/>wait<sp/>for<sp/>flush<sp/>after<sp/>it&apos;s<sp/>started.</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a20fd804f5d56687d0b6a16b6761bd0d9" kindref="member">test_1cpu_running_flush</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>delaying<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a07f2054c8f893e3cae22f3f224487f12" kindref="member">delay_handler</ref>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3caa7f8855bc9931bff79062ce53b06eb85" kindref="member">K_WORK_QUEUED</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>it<sp/>so<sp/>it&apos;s<sp/>running.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cac6bee9a104cf6ee3853579f5eb15c165" kindref="member">K_WORK_RUNNING</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>completion.<sp/><sp/>This<sp/>should<sp/>be<sp/>released<sp/>by<sp/>the<sp/>delay</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>handler.</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1gabd1cda459bab538fb2d6dfd84a73b253" kindref="member">k_work_flush</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" kindref="member">work_sync</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>completion.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>schedule<sp/>a<sp/>work<sp/>item<sp/>and<sp/>wait<sp/>for<sp/>flush.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a98d09628ce2e2f67d2dc0ad161648f7f" kindref="member">test_1cpu_delayed_flush</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>flush_ms;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>wait_ms;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>non-blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga2876c5d82fb2340a093bc4d689a55465" kindref="member">k_work_init_delayable</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unscheduled<sp/>completes<sp/>immediately.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__workqueue__apis_1gad47d54e513030304be2600d75b1a965f" kindref="member">k_work_flush_delayable</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" kindref="member">work_sync</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga17f863c9f6ff2fb41dc0f3b7de4fdf23" kindref="member">k_work_schedule_for_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>to<sp/>tick<sp/>then<sp/>flush.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flush_ms<sp/>=<sp/><ref refid="group__clock__apis_1ga9253cfb7b46af4d8994349323ce9872b" kindref="member">k_uptime_get_32</ref>();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1gad47d54e513030304be2600d75b1a965f" kindref="member">k_work_flush_delayable</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" kindref="member">work_sync</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wait_ms<sp/>=<sp/><ref refid="workq_2work_2src_2main_8c_1af11484df95b098ad95a91c341ef6663b" kindref="member">last_handle_ms</ref><sp/>-<sp/>flush_ms;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(wait_ms<sp/>&lt;=<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;waited<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>wait_ms);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>completion.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>cancel<sp/>before<sp/>work<sp/>item<sp/>is<sp/>unqueued<sp/>should<sp/>complete</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/>*<sp/>immediately.</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a083db2196ba0caee73d2b0c82279c2f3" kindref="member">test_1cpu_queued_cancel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1abecbbfaa65d8f2cbfee3a685be225a88" kindref="member">rel_handler</ref>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cancellation<sp/>should<sp/>complete<sp/>immediately.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga389fe2a8fb20f9bd593cf8d990727078" kindref="member">k_work_cancel</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Shouldn&apos;t<sp/>have<sp/>run.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>cancel<sp/>before<sp/>work<sp/>item<sp/>is<sp/>unqueued<sp/>should<sp/>not<sp/>wait.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1acb2410291bb95a111b17d70b308894cb" kindref="member">test_1cpu_queued_cancel_sync</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1abecbbfaa65d8f2cbfee3a685be225a88" kindref="member">rel_handler</ref>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cancel<sp/>an<sp/>unqueued<sp/>work<sp/>item<sp/>should<sp/>not<sp/>affect<sp/>the<sp/>work</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>return<sp/>false.</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__workqueue__apis_1gab2b05cfe3af08f7d32c3946fa1c808f9" kindref="member">k_work_cancel_sync</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" kindref="member">work_sync</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cancellation<sp/>should<sp/>complete<sp/>immediately,<sp/>indicating<sp/>that</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>work<sp/>was<sp/>pending.</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1gab2b05cfe3af08f7d32c3946fa1c808f9" kindref="member">k_work_cancel_sync</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" kindref="member">work_sync</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Shouldn&apos;t<sp/>have<sp/>run.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>cancel<sp/>before<sp/>scheduled<sp/>work<sp/>item<sp/>is<sp/>queued<sp/>should</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/>*<sp/>complete<sp/>immediately.</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1af829a63d4ec71fb9c72631bd56a909c5" kindref="member">test_1cpu_delayed_cancel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga2876c5d82fb2340a093bc4d689a55465" kindref="member">k_work_init_delayable</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1abecbbfaa65d8f2cbfee3a685be225a88" kindref="member">rel_handler</ref>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga17f863c9f6ff2fb41dc0f3b7de4fdf23" kindref="member">k_work_schedule_for_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cancellation<sp/>should<sp/>complete<sp/>immediately.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga92355914ee178d4c3e848a1946bed3e4" kindref="member">k_work_cancel_delayable</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Shouldn&apos;t<sp/>have<sp/>run.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>cancel<sp/>before<sp/>scheduled<sp/>work<sp/>item<sp/>is<sp/>queued<sp/>should<sp/>not<sp/>wait.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a5aff836fdc615eddd77d7d05b70d03de" kindref="member">test_1cpu_delayed_cancel_sync</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga2876c5d82fb2340a093bc4d689a55465" kindref="member">k_work_init_delayable</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1abecbbfaa65d8f2cbfee3a685be225a88" kindref="member">rel_handler</ref>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cancel<sp/>an<sp/>unqueued<sp/>delayable<sp/>work<sp/>item<sp/>should<sp/>not<sp/>affect<sp/>the<sp/>work</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>return<sp/>false.</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__workqueue__apis_1ga7e7ec237648556fc16bfda8d35f7cd86" kindref="member">k_work_cancel_delayable_sync</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" kindref="member">work_sync</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga17f863c9f6ff2fb41dc0f3b7de4fdf23" kindref="member">k_work_schedule_for_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cancellation<sp/>should<sp/>complete<sp/>immediately,<sp/>indicating<sp/>that</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>work<sp/>was<sp/>pending.</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1ga7e7ec237648556fc16bfda8d35f7cd86" kindref="member">k_work_cancel_delayable_sync</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" kindref="member">work_sync</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Shouldn&apos;t<sp/>have<sp/>run.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>cancel<sp/>after<sp/>delayable<sp/>item<sp/>starts<sp/>should<sp/>wait.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a6bf758347497de087360629438a2c365" kindref="member">test_1cpu_delayed_cancel_sync_wait</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga2876c5d82fb2340a093bc4d689a55465" kindref="member">k_work_init_delayable</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1abecbbfaa65d8f2cbfee3a685be225a88" kindref="member">rel_handler</ref>);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga17f863c9f6ff2fb41dc0f3b7de4fdf23" kindref="member">k_work_schedule_for_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga1b76969667844f0981d348c9c671bc9f" kindref="member">k_work_delayable_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3caa7f8855bc9931bff79062ce53b06eb85" kindref="member">K_WORK_QUEUED</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>it<sp/>to<sp/>running,<sp/>where<sp/>it<sp/>will<sp/>block.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga1b76969667844f0981d348c9c671bc9f" kindref="member">k_work_delayable_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cac6bee9a104cf6ee3853579f5eb15c165" kindref="member">K_WORK_RUNNING</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Schedule<sp/>to<sp/>release,<sp/>then<sp/>cancel<sp/>should<sp/>delay.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a847778466ac6be37008d0bab34b168d5" kindref="member">async_release</ref>();</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1ga7e7ec237648556fc16bfda8d35f7cd86" kindref="member">k_work_cancel_delayable_sync</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" kindref="member">work_sync</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>completion.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Infrastructure<sp/>to<sp/>capture<sp/>behavior<sp/>of<sp/>work<sp/>item<sp/>that&apos;s<sp/>being</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/>*<sp/>cancelled.</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673" refid="structtest__running__cancel__timer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtest__running__cancel__timer" kindref="compound">test_running_cancel_timer</ref><sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_timer<sp/><ref refid="structtest__running__cancel__timer_1a595b067227f973d0fed9253b4e4ecd6f" kindref="member">timer</ref>;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/><ref refid="structtest__running__cancel__timer_1af8c87dcab2b4d0c864b1a4d7be5fa2c8" kindref="member">work</ref>;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtest__running__cancel__timer_1ab0eb741fe55ea49fd40d6e3444960e82" kindref="member">submit_rc</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtest__running__cancel__timer_1a950190ea5e300ea14b8bed4f1afe2337" kindref="member">busy_rc</ref>;</highlight></codeline>
<codeline lineno="678"><highlight class="normal">};</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtest__running__cancel__timer" kindref="compound">test_running_cancel_timer</ref><sp/><ref refid="workq_2work_2src_2main_8c_1a88e4150001bfcde891512d9d19040474" kindref="member">test_running_cancel_ctx</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a6b8466482e953d56be192edd8032ba03" kindref="member">test_running_cancel_cb</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_timer<sp/>*<ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>)</highlight></codeline>
<codeline lineno="683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtest__running__cancel__timer" kindref="compound">test_running_cancel_timer</ref><sp/>*ctx<sp/>=</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1gac5bc561d1bfd1bf68877fe577779bd2f" kindref="member">CONTAINER_OF</ref>(<ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtest__running__cancel__timer" kindref="compound">test_running_cancel_timer</ref>,<sp/><ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;<ref refid="structtest__running__cancel__timer_1a950190ea5e300ea14b8bed4f1afe2337" kindref="member">busy_rc</ref><sp/>=<sp/><ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;ctx-&gt;<ref refid="structtest__running__cancel__timer_1af8c87dcab2b4d0c864b1a4d7be5fa2c8" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;<ref refid="structtest__running__cancel__timer_1ab0eb741fe55ea49fd40d6e3444960e82" kindref="member">submit_rc</ref><sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;ctx-&gt;<ref refid="structtest__running__cancel__timer_1af8c87dcab2b4d0c864b1a4d7be5fa2c8" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a7f6c7cc361ae0b4b424424f2a8508f0b" kindref="member">handler_release</ref>();</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>test<sp/>cancellation<sp/>after<sp/>work<sp/>starts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1ac4629f0613c54f97eb3ba437a22fde96" kindref="member">test_1cpu_running_cancel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtest__running__cancel__timer" kindref="compound">test_running_cancel_timer</ref><sp/>*ctx<sp/>=<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a88e4150001bfcde891512d9d19040474" kindref="member">test_running_cancel_ctx</ref>;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/>*wp<sp/>=<sp/>&amp;ctx-&gt;<ref refid="structtest__running__cancel__timer_1af8c87dcab2b4d0c864b1a4d7be5fa2c8" kindref="member">work</ref>;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(wp,<sp/><ref refid="workq_2work_2src_2main_8c_1abecbbfaa65d8f2cbfee3a685be225a88" kindref="member">rel_handler</ref>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>wp);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>it<sp/>so<sp/>it&apos;s<sp/>running.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Schedule<sp/>the<sp/>async<sp/>process<sp/>to<sp/>capture<sp/>state<sp/>and<sp/>release<sp/>work.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;<ref refid="structtest__running__cancel__timer_1ab0eb741fe55ea49fd40d6e3444960e82" kindref="member">submit_rc</ref><sp/>=<sp/><ref refid="limits_8h_1a9ec306f36d50c7375e74f0d1c55a3a67" kindref="member">INT_MAX</ref>;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;<ref refid="structtest__running__cancel__timer_1a950190ea5e300ea14b8bed4f1afe2337" kindref="member">busy_rc</ref><sp/>=<sp/><ref refid="limits_8h_1a9ec306f36d50c7375e74f0d1c55a3a67" kindref="member">INT_MAX</ref>;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga318c846a740b901e5d56876a47ad7f61" kindref="member">k_timer_init</ref>(&amp;ctx-&gt;<ref refid="structtest__running__cancel__timer_1a595b067227f973d0fed9253b4e4ecd6f" kindref="member">timer</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a6b8466482e953d56be192edd8032ba03" kindref="member">test_running_cancel_cb</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga3ba70e9f059ff52fd2057ab89ea7f2ee" kindref="member">k_timer_start</ref>(&amp;ctx-&gt;<ref refid="structtest__running__cancel__timer_1a595b067227f973d0fed9253b4e4ecd6f" kindref="member">timer</ref>,<sp/><ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1),<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cancellation<sp/>should<sp/>not<sp/>complete.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga389fe2a8fb20f9bd593cf8d990727078" kindref="member">k_work_cancel</ref>(wp),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cac6bee9a104cf6ee3853579f5eb15c165" kindref="member">K_WORK_RUNNING</ref><sp/>|<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3ca9fdc4327489bcdcca3de0ee9eed6b732" kindref="member">K_WORK_CANCELING</ref>,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handler<sp/>should<sp/>not<sp/>have<sp/>run.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>cancellation<sp/>to<sp/>complete.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1gab2b05cfe3af08f7d32c3946fa1c808f9" kindref="member">k_work_cancel_sync</ref>(wp,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" kindref="member">work_sync</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handler<sp/>should<sp/>have<sp/>detected<sp/>running<sp/>and<sp/>canceling.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(ctx-&gt;<ref refid="structtest__running__cancel__timer_1a950190ea5e300ea14b8bed4f1afe2337" kindref="member">busy_rc</ref>,<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cac6bee9a104cf6ee3853579f5eb15c165" kindref="member">K_WORK_RUNNING</ref><sp/>|<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3ca9fdc4327489bcdcca3de0ee9eed6b732" kindref="member">K_WORK_CANCELING</ref>,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Attempt<sp/>to<sp/>submit<sp/>while<sp/>cancelling<sp/>should<sp/>have<sp/>been</highlight></codeline>
<codeline lineno="737"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>rejected.</highlight></codeline>
<codeline lineno="738"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(ctx-&gt;<ref refid="structtest__running__cancel__timer_1ab0eb741fe55ea49fd40d6e3444960e82" kindref="member">submit_rc</ref>,<sp/>-<ref refid="group__system__errno_1ga8368025077a0385849d6817b2007c095" kindref="member">EBUSY</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Post-cancellation<sp/>should<sp/>have<sp/>no<sp/>flags.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;bad:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>rc);</highlight></codeline>
<codeline lineno="744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>test<sp/>wait-for-cancellation<sp/>after<sp/>the<sp/>work<sp/>item<sp/>has</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/>*<sp/>started<sp/>running.</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a76ba5fb95e98c3b063c7999e0164fe49" kindref="member">test_1cpu_running_cancel_sync</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtest__running__cancel__timer" kindref="compound">test_running_cancel_timer</ref><sp/>*ctx<sp/>=<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a88e4150001bfcde891512d9d19040474" kindref="member">test_running_cancel_ctx</ref>;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/>*wp<sp/>=<sp/>&amp;ctx-&gt;<ref refid="structtest__running__cancel__timer_1af8c87dcab2b4d0c864b1a4d7be5fa2c8" kindref="member">work</ref>;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(wp,<sp/><ref refid="workq_2work_2src_2main_8c_1abecbbfaa65d8f2cbfee3a685be225a88" kindref="member">rel_handler</ref>);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>wp);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>it<sp/>so<sp/>it&apos;s<sp/>running.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Schedule<sp/>the<sp/>async<sp/>process<sp/>to<sp/>capture<sp/>state<sp/>and<sp/>release<sp/>work.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;<ref refid="structtest__running__cancel__timer_1ab0eb741fe55ea49fd40d6e3444960e82" kindref="member">submit_rc</ref><sp/>=<sp/><ref refid="limits_8h_1a9ec306f36d50c7375e74f0d1c55a3a67" kindref="member">INT_MAX</ref>;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;<ref refid="structtest__running__cancel__timer_1a950190ea5e300ea14b8bed4f1afe2337" kindref="member">busy_rc</ref><sp/>=<sp/><ref refid="limits_8h_1a9ec306f36d50c7375e74f0d1c55a3a67" kindref="member">INT_MAX</ref>;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga318c846a740b901e5d56876a47ad7f61" kindref="member">k_timer_init</ref>(&amp;ctx-&gt;<ref refid="structtest__running__cancel__timer_1a595b067227f973d0fed9253b4e4ecd6f" kindref="member">timer</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a6b8466482e953d56be192edd8032ba03" kindref="member">test_running_cancel_cb</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga3ba70e9f059ff52fd2057ab89ea7f2ee" kindref="member">k_timer_start</ref>(&amp;ctx-&gt;<ref refid="structtest__running__cancel__timer_1a595b067227f973d0fed9253b4e4ecd6f" kindref="member">timer</ref>,<sp/><ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1),<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cancellation<sp/>should<sp/>wait.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1gab2b05cfe3af08f7d32c3946fa1c808f9" kindref="member">k_work_cancel_sync</ref>(wp,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" kindref="member">work_sync</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handler<sp/>should<sp/>have<sp/>run.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handler<sp/>should<sp/>have<sp/>detected<sp/>running<sp/>and<sp/>canceling.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(ctx-&gt;<ref refid="structtest__running__cancel__timer_1a950190ea5e300ea14b8bed4f1afe2337" kindref="member">busy_rc</ref>,<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cac6bee9a104cf6ee3853579f5eb15c165" kindref="member">K_WORK_RUNNING</ref><sp/>|<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3ca9fdc4327489bcdcca3de0ee9eed6b732" kindref="member">K_WORK_CANCELING</ref>,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Attempt<sp/>to<sp/>submit<sp/>while<sp/>cancelling<sp/>should<sp/>have<sp/>been</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>rejected.</highlight></codeline>
<codeline lineno="790"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(ctx-&gt;<ref refid="structtest__running__cancel__timer_1ab0eb741fe55ea49fd40d6e3444960e82" kindref="member">submit_rc</ref>,<sp/>-<ref refid="group__system__errno_1ga8368025077a0385849d6817b2007c095" kindref="member">EBUSY</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Post-cancellation<sp/>should<sp/>have<sp/>no<sp/>flags.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;bad:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>rc);</highlight></codeline>
<codeline lineno="796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SMP<sp/>cancel<sp/>after<sp/>work<sp/>item<sp/>is<sp/>started<sp/>should<sp/>succeed<sp/>but<sp/>require</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/>*<sp/>wait.</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a8a8a22c88ade11cbc88aa597d4e67d1b" kindref="member">test_smp_running_cancel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="802"><highlight class="normal">{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(CONFIG_SMP))<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>delaying<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a07f2054c8f893e3cae22f3f224487f12" kindref="member">delay_handler</ref>);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>should<sp/>advance<sp/>to<sp/>running<sp/>without<sp/>this<sp/>thread<sp/>yielding.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref><sp/>ts0<sp/>=<sp/><ref refid="group__clock__apis_1ga8f143af2ee4ad42d9f7817ef161cbd13" kindref="member">k_uptime_ticks</ref>();</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>delay;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay<sp/>=<sp/><ref refid="time__units_8h_1a9c1fcba23d4d8fc10db9b9ec6fc4a9aa" kindref="member">k_ticks_to_ms_floor32</ref>(<ref refid="group__clock__apis_1ga8f143af2ee4ad42d9f7817ef161cbd13" kindref="member">k_uptime_ticks</ref>()<sp/>-<sp/>ts0);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>)<sp/>!=<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cac6bee9a104cf6ee3853579f5eb15c165" kindref="member">K_WORK_RUNNING</ref>)</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(delay<sp/>&lt;<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cancellation<sp/>should<sp/>not<sp/>succeed<sp/>immediately<sp/>because<sp/>the</highlight></codeline>
<codeline lineno="828"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>work<sp/>is<sp/>running.</highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga389fe2a8fb20f9bd593cf8d990727078" kindref="member">k_work_cancel</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cac6bee9a104cf6ee3853579f5eb15c165" kindref="member">K_WORK_RUNNING</ref><sp/>|<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3ca9fdc4327489bcdcca3de0ee9eed6b732" kindref="member">K_WORK_CANCELING</ref>,<sp/></highlight><highlight class="stringliteral">&quot;rc<sp/>%x&quot;</highlight><highlight class="normal">,<sp/>rc);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sync<sp/>should<sp/>wait.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gab2b05cfe3af08f7d32c3946fa1c808f9" kindref="member">k_work_cancel_sync</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a9f0ea1a60614e08732dd06ae10b52775" kindref="member">work_sync</ref>),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Should<sp/>have<sp/>completed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Drain<sp/>with<sp/>no<sp/>active<sp/>workers<sp/>completes<sp/>immediately.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1ab6bd2144638940e5ddc2bed826b9281d" kindref="member">test_drain_empty</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="844"><highlight class="normal">{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga0fefe3e0225ac99b47b250849f6cd863" kindref="member">k_work_queue_drain</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851" refid="structtest__drain__wait__timer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtest__drain__wait__timer" kindref="compound">test_drain_wait_timer</ref><sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_timer<sp/><ref refid="structtest__drain__wait__timer_1ae961c2295426587bd3a29f1f29bc2544" kindref="member">timer</ref>;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/><ref refid="structtest__drain__wait__timer_1a9c1213f99d9e6f452e0e774ccb8810dd" kindref="member">work</ref>;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtest__drain__wait__timer_1a7adf39fc978d7b93a4fac2e6021bf215" kindref="member">submit_rc</ref>;</highlight></codeline>
<codeline lineno="855"><highlight class="normal">};</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtest__drain__wait__timer" kindref="compound">test_drain_wait_timer</ref><sp/><ref refid="workq_2work_2src_2main_8c_1af7d629ad5415236f27726583400594c1" kindref="member">test_drain_wait_ctx</ref>;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1ad70d04f8d9e3f7a2ebbf4c9411280a20" kindref="member">test_drain_wait_cb</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_timer<sp/>*<ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>)</highlight></codeline>
<codeline lineno="860"><highlight class="normal">{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtest__drain__wait__timer" kindref="compound">test_drain_wait_timer</ref><sp/>*ctx<sp/>=</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1gac5bc561d1bfd1bf68877fe577779bd2f" kindref="member">CONTAINER_OF</ref>(<ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtest__drain__wait__timer" kindref="compound">test_drain_wait_timer</ref>,<sp/><ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;<ref refid="structtest__drain__wait__timer_1a7adf39fc978d7b93a4fac2e6021bf215" kindref="member">submit_rc</ref><sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;ctx-&gt;<ref refid="structtest__drain__wait__timer_1a9c1213f99d9e6f452e0e774ccb8810dd" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>submit<sp/>an<sp/>item<sp/>and<sp/>wait<sp/>for<sp/>it<sp/>to<sp/>drain.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a570c523d96a16aace6d83efd38915cb8" kindref="member">test_1cpu_drain_wait</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtest__drain__wait__timer" kindref="compound">test_drain_wait_timer</ref><sp/>*ctx<sp/>=<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1af7d629ad5415236f27726583400594c1" kindref="member">test_drain_wait_ctx</ref>;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state,<sp/>allow<sp/>one<sp/>re-submission,<sp/>and<sp/>use<sp/>the<sp/>delaying</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>handler.</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic__xtensa_8h_1a5da5d59cfe0071203119b4881c2edf25" kindref="member">atomic_set</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a3113c779dd60ece13baa9e9ce206900c" kindref="member">resubmits_left</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a07f2054c8f893e3cae22f3f224487f12" kindref="member">delay_handler</ref>);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Schedule<sp/>the<sp/>async<sp/>process<sp/>to<sp/>capture<sp/>submission<sp/>state</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>while<sp/>draining.</highlight></codeline>
<codeline lineno="887"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;<ref refid="structtest__drain__wait__timer_1a7adf39fc978d7b93a4fac2e6021bf215" kindref="member">submit_rc</ref><sp/>=<sp/><ref refid="limits_8h_1a9ec306f36d50c7375e74f0d1c55a3a67" kindref="member">INT_MAX</ref>;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga318c846a740b901e5d56876a47ad7f61" kindref="member">k_timer_init</ref>(&amp;ctx-&gt;<ref refid="structtest__drain__wait__timer_1ae961c2295426587bd3a29f1f29bc2544" kindref="member">timer</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1ad70d04f8d9e3f7a2ebbf4c9411280a20" kindref="member">test_drain_wait_cb</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga3ba70e9f059ff52fd2057ab89ea7f2ee" kindref="member">k_timer_start</ref>(&amp;ctx-&gt;<ref refid="structtest__drain__wait__timer_1ae961c2295426587bd3a29f1f29bc2544" kindref="member">timer</ref>,<sp/><ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1),<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>to<sp/>drain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga0fefe3e0225ac99b47b250849f6cd863" kindref="member">k_work_queue_drain</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Confirm<sp/>that<sp/>chained<sp/>submission<sp/>worked,<sp/>and<sp/>non-chained</highlight></codeline>
<codeline lineno="901"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>submission<sp/>failed.</highlight></codeline>
<codeline lineno="902"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>2,<sp/>NULL);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(ctx-&gt;<ref refid="structtest__drain__wait__timer_1a7adf39fc978d7b93a4fac2e6021bf215" kindref="member">submit_rc</ref>,<sp/>-<ref refid="group__system__errno_1ga8368025077a0385849d6817b2007c095" kindref="member">EBUSY</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>submit<sp/>item,<sp/>drain<sp/>with<sp/>plug,<sp/>test,<sp/>then<sp/>unplug.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a312aff318fc66883c6c9728ad6253488" kindref="member">test_1cpu_plugged_drain</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>delaying<sp/>handler.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a07f2054c8f893e3cae22f3f224487f12" kindref="member">delay_handler</ref>);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>to<sp/>drain,<sp/>and<sp/>plug.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga0fefe3e0225ac99b47b250849f6cd863" kindref="member">k_work_queue_drain</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Queue<sp/>should<sp/>be<sp/>plugged<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>.<ref refid="structk__work__q_1a68bc8e9c412ebdbf34827087d91a080e" kindref="member">flags</ref>,</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_WORK_QUEUE_STARTED</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>K_WORK_QUEUE_PLUGGED</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>K_WORK_QUEUE_NO_YIELD,</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Switch<sp/>to<sp/>the<sp/>non-blocking<sp/>handler.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Resubmission<sp/>should<sp/>fail<sp/>because<sp/>queue<sp/>is<sp/>plugged<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>-<ref refid="group__system__errno_1ga8368025077a0385849d6817b2007c095" kindref="member">EBUSY</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unplug<sp/>the<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1gaa0463bb79af3ec470f7d3be02052139f" kindref="member">k_work_queue_unplug</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unplug<sp/>the<sp/>unplugged<sp/>queue<sp/>should<sp/>not<sp/>affect<sp/>the<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1gaa0463bb79af3ec470f7d3be02052139f" kindref="member">k_work_queue_unplug</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>-<ref refid="group__system__errno_1gaa4ccb54aa806de3e41a8515f06db85d4" kindref="member">EALREADY</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>.<ref refid="structk__work__q_1a68bc8e9c412ebdbf34827087d91a080e" kindref="member">flags</ref>,</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_WORK_QUEUE_STARTED<sp/>|<sp/>K_WORK_QUEUE_NO_YIELD,</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Resubmission<sp/>should<sp/>succeed<sp/>and<sp/>complete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flush<sp/>the<sp/>sync<sp/>state<sp/>and<sp/>verify<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>2,<sp/>NULL);</highlight></codeline>
<codeline lineno="962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>test<sp/>delayed<sp/>submission<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a84ea559f96c13f1e91bdd79b8caa1301" kindref="member">test_1cpu_basic_schedule</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>sched_ms;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>max_ms<sp/>=<sp/><ref refid="time__units_8h_1a3a3dc1691a68c9426f345748ca340ac6" kindref="member">k_ticks_to_ms_ceil32</ref>(1U</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="time__units_8h_1adb979ca17d5a910b2d287522256e7872" kindref="member">k_ms_to_ticks_ceil32</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>elapsed_ms;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/>*wp<sp/>=<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>.<ref refid="structk__work__delayable_1a594ad30acf08249909c30c0af76c1629" kindref="member">work</ref>;<sp/></highlight><highlight class="comment">/*<sp/>whitebox<sp/>testing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>non-blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga2876c5d82fb2340a093bc4d689a55465" kindref="member">k_work_init_delayable</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>that<sp/>work<sp/>is<sp/>idle<sp/>and<sp/>marked<sp/>delayable.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(wp-&gt;<ref refid="structk__work_1a391ed7d2039cd05c9894267bf8ea4dfd" kindref="member">flags</ref><sp/>&amp;<sp/>K_WORK_DELAYABLE,<sp/>K_WORK_DELAYABLE,</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>to<sp/>tick,<sp/>then<sp/>schedule<sp/>after<sp/>normal<sp/>delay.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sched_ms<sp/>=<sp/><ref refid="group__clock__apis_1ga9253cfb7b46af4d8994349323ce9872b" kindref="member">k_uptime_get_32</ref>();</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga17f863c9f6ff2fb41dc0f3b7de4fdf23" kindref="member">k_work_schedule_for_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cab4bf9e74435077b2bbfe1de1f4e80aed" kindref="member">K_WORK_DELAYED</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga1b76969667844f0981d348c9c671bc9f" kindref="member">k_work_delayable_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>),<sp/>rc,<sp/>NULL);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga66e598dbc73f653cbfec03c21168df2e" kindref="member">k_work_delayable_is_pending</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scheduling<sp/>again<sp/>does<sp/>nothing.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga17f863c9f6ff2fb41dc0f3b7de4fdf23" kindref="member">k_work_schedule_for_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>it<sp/>ran<sp/>and<sp/>is<sp/>now<sp/>idle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>the<sp/>delay<sp/>is<sp/>within<sp/>the<sp/>expected<sp/>range.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elapsed_ms<sp/>=<sp/><ref refid="workq_2work_2src_2main_8c_1af11484df95b098ad95a91c341ef6663b" kindref="member">last_handle_ms</ref><sp/>-<sp/>sched_ms;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(elapsed_ms<sp/>&gt;=<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>,</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;short<sp/>%u<sp/>&lt;<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>elapsed_ms,<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(elapsed_ms<sp/>&lt;=<sp/>max_ms,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;long<sp/>%u<sp/>&gt;<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>elapsed_ms,<sp/>max_ms);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013" refid="structstate__1cpu__basic__schedule__running" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstate__1cpu__basic__schedule__running" kindref="compound">state_1cpu_basic_schedule_running</ref><sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work__delayable" kindref="compound">k_work_delayable</ref><sp/><ref refid="structstate__1cpu__basic__schedule__running_1aa6e9e37ed7287b5262e763048a3f1e9d" kindref="member">dwork</ref>;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structstate__1cpu__basic__schedule__running_1a9dd76edb9b2823b5198a9a779c54f02a" kindref="member">schedule_res</ref>;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a6e6f7e4f4ac9c180a566a218fa69991a" kindref="member">handle_1cpu_basic_schedule_running</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__work" kindref="compound">k_work</ref><sp/>*<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work__delayable" kindref="compound">k_work_delayable</ref><sp/>*<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref><sp/>=<sp/><ref refid="group__workqueue__apis_1gabcb822a03ce7ea9ee1ed046afe31ffca" kindref="member">k_work_delayable_from_work</ref>(<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstate__1cpu__basic__schedule__running" kindref="compound">state_1cpu_basic_schedule_running</ref><sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__sys-util_1gac5bc561d1bfd1bf68877fe577779bd2f" kindref="member">CONTAINER_OF</ref>(<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structstate__1cpu__basic__schedule__running" kindref="compound">state_1cpu_basic_schedule_running</ref>,</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Co-opt<sp/>the<sp/>resubmits<sp/>so<sp/>we<sp/>can<sp/>test<sp/>the<sp/>schedule<sp/>API</highlight></codeline>
<codeline lineno="1026"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>explicitly.</highlight></codeline>
<codeline lineno="1027"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="atomic__arch_8h_1ac260f0efbd970717eae4ac3bb493a0c4" kindref="member">atomic_dec</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a3113c779dd60ece13baa9e9ce206900c" kindref="member">resubmits_left</ref>)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Schedule<sp/>again<sp/>on<sp/>current<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>-&gt;schedule_res<sp/>=<sp/><ref refid="group__workqueue__apis_1ga17f863c9f6ff2fb41dc0f3b7de4fdf23" kindref="member">k_work_schedule_for_queue</ref>(NULL,<sp/><ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flag<sp/>that<sp/>it<sp/>didn&apos;t<sp/>schedule<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>-&gt;schedule_res<sp/>=<sp/>-<ref refid="group__system__errno_1gaa4ccb54aa806de3e41a8515f06db85d4" kindref="member">EALREADY</ref>;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>(<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>test<sp/>that<sp/>schedules<sp/>when<sp/>running<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1af57b9364561e401127d1d927f8154ed0" kindref="member">test_1cpu_basic_schedule_running</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstate__1cpu__basic__schedule__running" kindref="compound">state_1cpu_basic_schedule_running</ref><sp/><ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structstate__1cpu__basic__schedule__running_1a9dd76edb9b2823b5198a9a779c54f02a" kindref="member">schedule_res</ref><sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>set<sp/>for<sp/>one<sp/>resubmit.<sp/><sp/>Use<sp/>a<sp/>test-specific</highlight></codeline>
<codeline lineno="1049"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>handler.</highlight></codeline>
<codeline lineno="1050"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic__xtensa_8h_1a5da5d59cfe0071203119b4881c2edf25" kindref="member">atomic_set</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a3113c779dd60ece13baa9e9ce206900c" kindref="member">resubmits_left</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga2876c5d82fb2340a093bc4d689a55465" kindref="member">k_work_init_delayable</ref>(&amp;<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>.dwork,<sp/><ref refid="workq_2work_2src_2main_8c_1a6e6f7e4f4ac9c180a566a218fa69991a" kindref="member">handle_1cpu_basic_schedule_running</ref>);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>.schedule_res,<sp/>-1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga17f863c9f6ff2fb41dc0f3b7de4fdf23" kindref="member">k_work_schedule_for_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>.dwork,</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a7aa72bc64fa669e6b7a4c9c557cb7969" kindref="member">coop_counter</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>.schedule_res,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a7aa72bc64fa669e6b7a4c9c557cb7969" kindref="member">coop_counter</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>.schedule_res,<sp/>-<ref refid="group__system__errno_1gaa4ccb54aa806de3e41a8515f06db85d4" kindref="member">EALREADY</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a7aa72bc64fa669e6b7a4c9c557cb7969" kindref="member">coop_counter</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>),<sp/>2,<sp/>NULL);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>test<sp/>schedule<sp/>without<sp/>delay<sp/>is<sp/>queued<sp/>immediately.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a13a82c07a35300fab433e94b42833402" kindref="member">test_1cpu_immed_schedule</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/>*wp<sp/>=<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>.<ref refid="structk__work__delayable_1a594ad30acf08249909c30c0af76c1629" kindref="member">work</ref>;<sp/></highlight><highlight class="comment">/*<sp/>whitebox<sp/>testing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>non-blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga2876c5d82fb2340a093bc4d689a55465" kindref="member">k_work_init_delayable</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>cooperative<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga17f863c9f6ff2fb41dc0f3b7de4fdf23" kindref="member">k_work_schedule_for_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3caa7f8855bc9931bff79062ce53b06eb85" kindref="member">K_WORK_QUEUED</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga1b76969667844f0981d348c9c671bc9f" kindref="member">k_work_delayable_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>),<sp/>rc,<sp/>NULL);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga66e598dbc73f653cbfec03c21168df2e" kindref="member">k_work_delayable_is_pending</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scheduling<sp/>again<sp/>does<sp/>nothing.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga17f863c9f6ff2fb41dc0f3b7de4fdf23" kindref="member">k_work_schedule_for_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Shouldn&apos;t<sp/>have<sp/>been<sp/>started<sp/>since<sp/>test<sp/>thread<sp/>is</highlight></codeline>
<codeline lineno="1100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>cooperative.</highlight></codeline>
<codeline lineno="1101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Let<sp/>it<sp/>run,<sp/>then<sp/>check<sp/>it<sp/>didn&apos;t<sp/>finish.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flush<sp/>the<sp/>sync<sp/>state<sp/>from<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>test<sp/>that<sp/>delayed<sp/>work<sp/>can<sp/>be<sp/>rescheduled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a0290c6f550c1db54d86da3eb4d4e0170" kindref="member">test_1cpu_basic_reschedule</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>sched_ms;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>max_ms<sp/>=<sp/><ref refid="time__units_8h_1a3a3dc1691a68c9426f345748ca340ac6" kindref="member">k_ticks_to_ms_ceil32</ref>(1U</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="time__units_8h_1adb979ca17d5a910b2d287522256e7872" kindref="member">k_ms_to_ticks_ceil32</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>elapsed_ms;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/>*wp<sp/>=<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>.<ref refid="structk__work__delayable_1a594ad30acf08249909c30c0af76c1629" kindref="member">work</ref>;<sp/></highlight><highlight class="comment">/*<sp/>whitebox<sp/>testing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>non-blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga2876c5d82fb2340a093bc4d689a55465" kindref="member">k_work_init_delayable</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>that<sp/>work<sp/>is<sp/>idle<sp/>and<sp/>marked<sp/>delayable.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(wp-&gt;<ref refid="structk__work_1a391ed7d2039cd05c9894267bf8ea4dfd" kindref="member">flags</ref><sp/>&amp;<sp/>K_WORK_DELAYABLE,<sp/>K_WORK_DELAYABLE,</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Schedule<sp/>to<sp/>the<sp/>preempt<sp/>queue<sp/>after<sp/>twice<sp/>the<sp/>standard</highlight></codeline>
<codeline lineno="1134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>delay.</highlight></codeline>
<codeline lineno="1135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1gabf5db091eac19b19a4e12c0cb381f0a8" kindref="member">k_work_reschedule_for_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a449e714b2c823aee4dc5ecbcfaacbb1f" kindref="member">preempt_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(2U<sp/>*<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cab4bf9e74435077b2bbfe1de1f4e80aed" kindref="member">K_WORK_DELAYED</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>to<sp/>tick<sp/>then<sp/>reschedule<sp/>on<sp/>the<sp/>cooperative<sp/>queue<sp/>for</highlight></codeline>
<codeline lineno="1142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>standard<sp/>delay.</highlight></codeline>
<codeline lineno="1143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sched_ms<sp/>=<sp/><ref refid="group__clock__apis_1ga9253cfb7b46af4d8994349323ce9872b" kindref="member">k_uptime_get_32</ref>();</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1gabf5db091eac19b19a4e12c0cb381f0a8" kindref="member">k_work_reschedule_for_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cab4bf9e74435077b2bbfe1de1f4e80aed" kindref="member">K_WORK_DELAYED</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>it<sp/>ran<sp/>on<sp/>the<sp/>coop<sp/>queue<sp/>and<sp/>is<sp/>now<sp/>idle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>the<sp/>delay<sp/>is<sp/>within<sp/>the<sp/>expected<sp/>range.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elapsed_ms<sp/>=<sp/><ref refid="workq_2work_2src_2main_8c_1af11484df95b098ad95a91c341ef6663b" kindref="member">last_handle_ms</ref><sp/>-<sp/>sched_ms;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(elapsed_ms<sp/>&gt;=<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>,</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;short<sp/>%u<sp/>&lt;<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>elapsed_ms,<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(elapsed_ms<sp/>&lt;=<sp/>max_ms,</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;long<sp/>%u<sp/>&gt;<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>elapsed_ms,<sp/>max_ms);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>test<sp/>that<sp/>delayed<sp/>work<sp/>can<sp/>be<sp/>immediately<sp/>queued<sp/>by</highlight></codeline>
<codeline lineno="1168"><highlight class="comment"><sp/>*<sp/>reschedule<sp/>API.</highlight></codeline>
<codeline lineno="1169"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1ac7bb940ea3e87f7ea230bcba4db26e1e" kindref="member">test_1cpu_immed_reschedule</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/>*wp<sp/>=<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>.<ref refid="structk__work__delayable_1a594ad30acf08249909c30c0af76c1629" kindref="member">work</ref>;<sp/></highlight><highlight class="comment">/*<sp/>whitebox<sp/>testing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>delay<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga2876c5d82fb2340a093bc4d689a55465" kindref="member">k_work_init_delayable</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a07f2054c8f893e3cae22f3f224487f12" kindref="member">delay_handler</ref>);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Schedule<sp/>immediately<sp/>to<sp/>the<sp/>cooperative<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1gabf5db091eac19b19a4e12c0cb381f0a8" kindref="member">k_work_reschedule_for_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3caa7f8855bc9931bff79062ce53b06eb85" kindref="member">K_WORK_QUEUED</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Shouldn&apos;t<sp/>have<sp/>been<sp/>started<sp/>since<sp/>test<sp/>thread<sp/>is</highlight></codeline>
<codeline lineno="1186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>cooperative.</highlight></codeline>
<codeline lineno="1187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Let<sp/>it<sp/>run,<sp/>then<sp/>check<sp/>it<sp/>didn&apos;t<sp/>finish.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cac6bee9a104cf6ee3853579f5eb15c165" kindref="member">K_WORK_RUNNING</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Schedule<sp/>immediately<sp/>to<sp/>the<sp/>preemptive<sp/>queue<sp/>(will<sp/>divert</highlight></codeline>
<codeline lineno="1196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>coop<sp/>since<sp/>running).</highlight></codeline>
<codeline lineno="1197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1gabf5db091eac19b19a4e12c0cb381f0a8" kindref="member">k_work_reschedule_for_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a449e714b2c823aee4dc5ecbcfaacbb1f" kindref="member">preempt_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>2,<sp/>NULL);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3caa7f8855bc9931bff79062ce53b06eb85" kindref="member">K_WORK_QUEUED</ref><sp/>|<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cac6bee9a104cf6ee3853579f5eb15c165" kindref="member">K_WORK_RUNNING</ref>,</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Schedule<sp/>after<sp/>3x<sp/>the<sp/>delay<sp/>to<sp/>the<sp/>preemptive<sp/>queue</highlight></codeline>
<codeline lineno="1204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(will<sp/>not<sp/>divert<sp/>since<sp/>previous<sp/>submissions<sp/>will<sp/>have</highlight></codeline>
<codeline lineno="1205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>completed).</highlight></codeline>
<codeline lineno="1206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1gabf5db091eac19b19a4e12c0cb381f0a8" kindref="member">k_work_reschedule_for_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a449e714b2c823aee4dc5ecbcfaacbb1f" kindref="member">preempt_queue</ref>,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(3<sp/>*<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp),</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cab4bf9e74435077b2bbfe1de1f4e80aed" kindref="member">K_WORK_DELAYED</ref><sp/>|<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3caa7f8855bc9931bff79062ce53b06eb85" kindref="member">K_WORK_QUEUED</ref><sp/>|<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cac6bee9a104cf6ee3853579f5eb15c165" kindref="member">K_WORK_RUNNING</ref>,</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>the<sp/>original<sp/>no-wait<sp/>submission<sp/>(total<sp/>1<sp/>delay))<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>coop<sp/>ran<sp/>once,<sp/>and<sp/>work<sp/>is<sp/>still<sp/>delayed<sp/>and</highlight></codeline>
<codeline lineno="1219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>also<sp/>running.</highlight></codeline>
<codeline lineno="1220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cab4bf9e74435077b2bbfe1de1f4e80aed" kindref="member">K_WORK_DELAYED</ref><sp/>|<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cac6bee9a104cf6ee3853579f5eb15c165" kindref="member">K_WORK_RUNNING</ref>,</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>the<sp/>queued<sp/>no-wait<sp/>submission<sp/>(total<sp/>2<sp/>delay)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>got<sp/>diverted<sp/>to<sp/>coop<sp/>and<sp/>ran,<sp/>and<sp/>work<sp/>is<sp/>still</highlight></codeline>
<codeline lineno="1230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>delayed.</highlight></codeline>
<codeline lineno="1231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>2,<sp/>NULL);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a96afb496e5966a3553f338d33d062a69" kindref="member">preempt_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cab4bf9e74435077b2bbfe1de1f4e80aed" kindref="member">K_WORK_DELAYED</ref>,</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>the<sp/>delayed<sp/>submission<sp/>(total<sp/>3<sp/>delay)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>ran<sp/>on<sp/>preempt.<sp/><sp/>In<sp/>fact<sp/>we&apos;re<sp/>here<sp/>because<sp/>the</highlight></codeline>
<codeline lineno="1242"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>test<sp/>thread<sp/>is<sp/>higher<sp/>priority,<sp/>so<sp/>the<sp/>work<sp/>will<sp/>still<sp/>be</highlight></codeline>
<codeline lineno="1243"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>marked<sp/>running.</highlight></codeline>
<codeline lineno="1244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>2,<sp/>NULL);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a96afb496e5966a3553f338d33d062a69" kindref="member">preempt_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(wp),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cac6bee9a104cf6ee3853579f5eb15c165" kindref="member">K_WORK_RUNNING</ref>,</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>preempt<sp/>to<sp/>drain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga0fefe3e0225ac99b47b250849f6cd863" kindref="member">k_work_queue_drain</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a449e714b2c823aee4dc5ecbcfaacbb1f" kindref="member">preempt_queue</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Test<sp/>no-yield<sp/>behavior,<sp/>returns<sp/>true<sp/>iff<sp/>work<sp/>queue<sp/>priority<sp/>is</highlight></codeline>
<codeline lineno="1256"><highlight class="comment"><sp/>*<sp/>higher<sp/>than<sp/>test<sp/>thread<sp/>priority</highlight></codeline>
<codeline lineno="1257"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a76282488686be2d2c70280c757c6be9c" kindref="member">try_queue_no_yield</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__work__q" kindref="compound">k_work_q</ref><sp/>*wq)</highlight></codeline>
<codeline lineno="1259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_high<sp/>=<sp/>(<ref refid="group__thread__apis_1ga3a46ed8ad2c3b12416fafe11325f82b3" kindref="member">k_thread_priority_get</ref>(<ref refid="group__workqueue__apis_1ga0b8b496f7e7bd82d08590a07293e38d7" kindref="member">k_work_queue_thread_get</ref>(wq))</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/><ref refid="group__thread__apis_1ga3a46ed8ad2c3b12416fafe11325f82b3" kindref="member">k_thread_priority_get</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>()));</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Testing<sp/>no-yield<sp/>on<sp/>%s-priority<sp/>queue\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_high<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;high&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;low&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>two<sp/>work<sp/>items<sp/>directly<sp/>to<sp/>the<sp/>cooperative<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga2876c5d82fb2340a093bc4d689a55465" kindref="member">k_work_init_delayable</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(wq,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga17f863c9f6ff2fb41dc0f3b7de4fdf23" kindref="member">k_work_schedule_for_queue</ref>(wq,<sp/>&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga0d1d2e1d2ba2e89a560a1bdc5365d9e0" kindref="member">k_work_is_pending</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga66e598dbc73f653cbfec03c21168df2e" kindref="member">k_work_delayable_is_pending</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Because<sp/>there<sp/>was<sp/>no<sp/>yield<sp/>both<sp/>should<sp/>have<sp/>run,<sp/>and</highlight></codeline>
<codeline lineno="1285"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>another<sp/>yield<sp/>won&apos;t<sp/>cause<sp/>anything<sp/>to<sp/>happen.</highlight></codeline>
<codeline lineno="1286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a7aa72bc64fa669e6b7a4c9c557cb7969" kindref="member">coop_counter</ref>(wq),<sp/>2,<sp/>NULL);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga0d1d2e1d2ba2e89a560a1bdc5365d9e0" kindref="member">k_work_is_pending</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga66e598dbc73f653cbfec03c21168df2e" kindref="member">k_work_delayable_is_pending</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>first<sp/>give<sp/>unblocked<sp/>this<sp/>thread;<sp/>we<sp/>need<sp/>to<sp/>consume</highlight></codeline>
<codeline lineno="1292"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>give<sp/>from<sp/>the<sp/>second<sp/>work<sp/>task.</highlight></codeline>
<codeline lineno="1293"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>),<sp/>-<ref refid="group__system__errno_1ga8368025077a0385849d6817b2007c095" kindref="member">EBUSY</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_high;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Verify<sp/>that<sp/>no-yield<sp/>policy<sp/>works<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a6ca1e285ef37e83660c286707c0087b9" kindref="member">test_1cpu_queue_no_yield</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a76282488686be2d2c70280c757c6be9c" kindref="member">try_queue_no_yield</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a76282488686be2d2c70280c757c6be9c" kindref="member">try_queue_no_yield</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1ac50614b04ba0bc3bba8cf507b7845229" kindref="member">cooplo_queue</ref>),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Basic<sp/>functionality<sp/>with<sp/>the<sp/>system<sp/>work<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1ac23b1946e4a63aac97d8b7847d5fbeea" kindref="member">test_1cpu_system_queue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>the<sp/>non-blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>to<sp/>the<sp/>system<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1gace61b59575093d7442f39ccb7be686d7" kindref="member">k_work_submit</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3caa7f8855bc9931bff79062ce53b06eb85" kindref="member">K_WORK_QUEUED</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Shouldn&apos;t<sp/>have<sp/>been<sp/>started<sp/>since<sp/>test<sp/>thread<sp/>is</highlight></codeline>
<codeline lineno="1324"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>cooperative.</highlight></codeline>
<codeline lineno="1325"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a896c3c7a7503404932c16d6018d7072b" kindref="member">system_counter</ref>(),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Let<sp/>it<sp/>run,<sp/>then<sp/>check<sp/>it<sp/>didn&apos;t<sp/>finish.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a896c3c7a7503404932c16d6018d7072b" kindref="member">system_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1gaba8a8734768d768b433f9d8490e7df7b" kindref="member">k_work_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flush<sp/>the<sp/>sync<sp/>state<sp/>from<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a7b96628be8b00c454a77c3781674f4f3" kindref="member">test_1cpu_system_schedule</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>sched_ms;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>max_ms<sp/>=<sp/><ref refid="time__units_8h_1a3a3dc1691a68c9426f345748ca340ac6" kindref="member">k_ticks_to_ms_ceil32</ref>(1U</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="time__units_8h_1adb979ca17d5a910b2d287522256e7872" kindref="member">k_ms_to_ticks_ceil32</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>elapsed_ms;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>non-blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga2876c5d82fb2340a093bc4d689a55465" kindref="member">k_work_init_delayable</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>that<sp/>work<sp/>is<sp/>idle<sp/>and<sp/>marked<sp/>delayable.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga1b76969667844f0981d348c9c671bc9f" kindref="member">k_work_delayable_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>.<ref refid="structk__work__delayable_1a594ad30acf08249909c30c0af76c1629" kindref="member">work</ref>.<ref refid="structk__work_1a391ed7d2039cd05c9894267bf8ea4dfd" kindref="member">flags</ref><sp/>&amp;<sp/>K_WORK_DELAYABLE,<sp/>K_WORK_DELAYABLE,</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>to<sp/>tick,<sp/>then<sp/>schedule<sp/>after<sp/>normal<sp/>delay.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sched_ms<sp/>=<sp/><ref refid="group__clock__apis_1ga9253cfb7b46af4d8994349323ce9872b" kindref="member">k_uptime_get_32</ref>();</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5c113ea2bc8e8e5cd7a5c8bc5ec595d3" kindref="member">k_work_schedule</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga1b76969667844f0981d348c9c671bc9f" kindref="member">k_work_delayable_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cab4bf9e74435077b2bbfe1de1f4e80aed" kindref="member">K_WORK_DELAYED</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scheduling<sp/>again<sp/>does<sp/>nothing.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga5c113ea2bc8e8e5cd7a5c8bc5ec595d3" kindref="member">k_work_schedule</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>it<sp/>ran<sp/>and<sp/>is<sp/>now<sp/>idle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a896c3c7a7503404932c16d6018d7072b" kindref="member">system_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga1b76969667844f0981d348c9c671bc9f" kindref="member">k_work_delayable_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>the<sp/>delay<sp/>is<sp/>within<sp/>the<sp/>expected<sp/>range.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elapsed_ms<sp/>=<sp/><ref refid="workq_2work_2src_2main_8c_1af11484df95b098ad95a91c341ef6663b" kindref="member">last_handle_ms</ref><sp/>-<sp/>sched_ms;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(elapsed_ms<sp/>&gt;=<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>,</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;short<sp/>%u<sp/>&lt;<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>elapsed_ms,<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(elapsed_ms<sp/>&lt;=<sp/>max_ms,</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;long<sp/>%u<sp/>&gt;<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>elapsed_ms,<sp/>max_ms);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a3d832812601891fca26cb06ee5012053" kindref="member">test_1cpu_system_reschedule</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>sched_ms;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>max_ms<sp/>=<sp/><ref refid="time__units_8h_1a3a3dc1691a68c9426f345748ca340ac6" kindref="member">k_ticks_to_ms_ceil32</ref>(1U</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="time__units_8h_1adb979ca17d5a910b2d287522256e7872" kindref="member">k_ms_to_ticks_ceil32</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>elapsed_ms;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>non-blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga2876c5d82fb2340a093bc4d689a55465" kindref="member">k_work_init_delayable</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>that<sp/>work<sp/>is<sp/>idle<sp/>and<sp/>marked<sp/>delayable.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga1b76969667844f0981d348c9c671bc9f" kindref="member">k_work_delayable_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>.<ref refid="structk__work__delayable_1a594ad30acf08249909c30c0af76c1629" kindref="member">work</ref>.<ref refid="structk__work_1a391ed7d2039cd05c9894267bf8ea4dfd" kindref="member">flags</ref><sp/>&amp;<sp/>K_WORK_DELAYABLE,<sp/>K_WORK_DELAYABLE,</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Schedule<sp/>to<sp/>the<sp/>preempt<sp/>queue<sp/>after<sp/>twice<sp/>the<sp/>standard</highlight></codeline>
<codeline lineno="1400"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>delay.</highlight></codeline>
<codeline lineno="1401"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1gaacaab408fb7c848d466ad1f069dfa648" kindref="member">k_work_reschedule</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(2U<sp/>*<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga1b76969667844f0981d348c9c671bc9f" kindref="member">k_work_delayable_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cab4bf9e74435077b2bbfe1de1f4e80aed" kindref="member">K_WORK_DELAYED</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>to<sp/>tick<sp/>then<sp/>reschedule<sp/>on<sp/>the<sp/>system<sp/>queue<sp/>for</highlight></codeline>
<codeline lineno="1407"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>standard<sp/>delay.</highlight></codeline>
<codeline lineno="1408"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sched_ms<sp/>=<sp/><ref refid="group__clock__apis_1ga9253cfb7b46af4d8994349323ce9872b" kindref="member">k_uptime_get_32</ref>();</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1gaacaab408fb7c848d466ad1f069dfa648" kindref="member">k_work_reschedule</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga1b76969667844f0981d348c9c671bc9f" kindref="member">k_work_delayable_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>),<sp/><ref refid="group__workqueue__apis_1gga15b3bbe041870ee299f7e042b0305e3cab4bf9e74435077b2bbfe1de1f4e80aed" kindref="member">K_WORK_DELAYED</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>it<sp/>ran<sp/>on<sp/>the<sp/>system<sp/>queue<sp/>and<sp/>is<sp/>now<sp/>idle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1a896c3c7a7503404932c16d6018d7072b" kindref="member">system_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="group__workqueue__apis_1ga1b76969667844f0981d348c9c671bc9f" kindref="member">k_work_delayable_busy_get</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a0aaa7e21c7cd2159f22acc20d1860ffd" kindref="member">dwork</ref>),<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>the<sp/>delay<sp/>is<sp/>within<sp/>the<sp/>expected<sp/>range.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elapsed_ms<sp/>=<sp/><ref refid="workq_2work_2src_2main_8c_1af11484df95b098ad95a91c341ef6663b" kindref="member">last_handle_ms</ref><sp/>-<sp/>sched_ms;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(elapsed_ms<sp/>&gt;=<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>,</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;short<sp/>%u<sp/>&lt;<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>elapsed_ms,<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(elapsed_ms<sp/>&lt;=<sp/>max_ms,</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;long<sp/>%u<sp/>&gt;<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>elapsed_ms,<sp/>max_ms);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>test<sp/>legacy<sp/>delayed<sp/>API<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1acd5a58f763601433f78630fa34eba3d6" kindref="member">test_1cpu_legacy_delayed_submit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>sched_ms;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>max_ms<sp/>=<sp/><ref refid="time__units_8h_1a3a3dc1691a68c9426f345748ca340ac6" kindref="member">k_ticks_to_ms_ceil32</ref>(1U</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="time__units_8h_1adb979ca17d5a910b2d287522256e7872" kindref="member">k_ms_to_ticks_ceil32</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>elapsed_ms;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__delayed__work" kindref="compound">k_delayed_work</ref><sp/>lwork;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>non-blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf484b980ae3dbbd620b96e883c4b4fe6" kindref="member">k_delayed_work_init</ref>(&amp;lwork,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>that<sp/>work<sp/>is<sp/>not<sp/>pending<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__workqueue__apis_1ga47b86afff751340829339566a9932f72" kindref="member">k_delayed_work_pending</ref>(&amp;lwork),<sp/>NULL);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>to<sp/>tick,<sp/>then<sp/>schedule<sp/>after<sp/>normal<sp/>delay.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sched_ms<sp/>=<sp/><ref refid="group__clock__apis_1ga9253cfb7b46af4d8994349323ce9872b" kindref="member">k_uptime_get_32</ref>();</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga9d96cee1aa79b9fd01aa3ea7892f74d0" kindref="member">k_delayed_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;lwork,</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1ga47b86afff751340829339566a9932f72" kindref="member">k_delayed_work_pending</ref>(&amp;lwork),<sp/>NULL);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>it<sp/>ran<sp/>and<sp/>is<sp/>now<sp/>idle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga1b76969667844f0981d348c9c671bc9f" kindref="member">k_work_delayable_busy_get</ref>(&amp;lwork.work);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__workqueue__apis_1ga47b86afff751340829339566a9932f72" kindref="member">k_delayed_work_pending</ref>(&amp;lwork),<sp/></highlight><highlight class="stringliteral">&quot;rc<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>rc);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>the<sp/>delay<sp/>is<sp/>within<sp/>the<sp/>expected<sp/>range.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elapsed_ms<sp/>=<sp/><ref refid="workq_2work_2src_2main_8c_1af11484df95b098ad95a91c341ef6663b" kindref="member">last_handle_ms</ref><sp/>-<sp/>sched_ms;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(elapsed_ms<sp/>&gt;=<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>,</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;short<sp/>%u<sp/>&lt;<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>elapsed_ms,<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(elapsed_ms<sp/>&lt;=<sp/>max_ms,</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;long<sp/>%u<sp/>&gt;<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>elapsed_ms,<sp/>max_ms);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>test<sp/>legacy<sp/>delayed<sp/>API<sp/>resubmit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1ada5cb237fb7ddcd3344753e42ab0a6d9" kindref="member">test_1cpu_legacy_delayed_resubmit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>sched_ms;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>max_ms<sp/>=<sp/><ref refid="time__units_8h_1a3a3dc1691a68c9426f345748ca340ac6" kindref="member">k_ticks_to_ms_ceil32</ref>(1U</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="time__units_8h_1adb979ca17d5a910b2d287522256e7872" kindref="member">k_ms_to_ticks_ceil32</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>elapsed_ms;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__delayed__work" kindref="compound">k_delayed_work</ref><sp/>lwork;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>non-blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf484b980ae3dbbd620b96e883c4b4fe6" kindref="member">k_delayed_work_init</ref>(&amp;lwork,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>that<sp/>work<sp/>is<sp/>not<sp/>pending<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__workqueue__apis_1ga47b86afff751340829339566a9932f72" kindref="member">k_delayed_work_pending</ref>(&amp;lwork),<sp/>NULL);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Schedule<sp/>to<sp/>the<sp/>preempt<sp/>queue<sp/>after<sp/>twice<sp/>the<sp/>standard</highlight></codeline>
<codeline lineno="1491"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>delay.</highlight></codeline>
<codeline lineno="1492"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga9d96cee1aa79b9fd01aa3ea7892f74d0" kindref="member">k_delayed_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a449e714b2c823aee4dc5ecbcfaacbb1f" kindref="member">preempt_queue</ref>,<sp/>&amp;lwork,</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(2<sp/>*<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1ga47b86afff751340829339566a9932f72" kindref="member">k_delayed_work_pending</ref>(&amp;lwork),<sp/>NULL);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>to<sp/>tick<sp/>then<sp/>schedule<sp/>after<sp/>standard<sp/>delay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gaeda983960bd25f1dba7a386ad720e395" kindref="member">K_TICKS</ref>(1));</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sched_ms<sp/>=<sp/><ref refid="group__clock__apis_1ga9253cfb7b46af4d8994349323ce9872b" kindref="member">k_uptime_get_32</ref>();</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga9d96cee1aa79b9fd01aa3ea7892f74d0" kindref="member">k_delayed_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;lwork,</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1ga47b86afff751340829339566a9932f72" kindref="member">k_delayed_work_pending</ref>(&amp;lwork),<sp/>NULL);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>it<sp/>ran<sp/>and<sp/>is<sp/>now<sp/>idle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga1b76969667844f0981d348c9c671bc9f" kindref="member">k_work_delayable_busy_get</ref>(&amp;lwork.work);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__workqueue__apis_1ga47b86afff751340829339566a9932f72" kindref="member">k_delayed_work_pending</ref>(&amp;lwork),<sp/></highlight><highlight class="stringliteral">&quot;rc<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>rc);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="workq_2work_2src_2main_8c_1afb3c1911053c965a5c0e7a09b4cc12c2" kindref="member">coophi_counter</ref>(),<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>the<sp/>delay<sp/>is<sp/>within<sp/>the<sp/>expected<sp/>range.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elapsed_ms<sp/>=<sp/><ref refid="workq_2work_2src_2main_8c_1af11484df95b098ad95a91c341ef6663b" kindref="member">last_handle_ms</ref><sp/>-<sp/>sched_ms;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(elapsed_ms<sp/>&gt;=<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>,</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;short<sp/>%u<sp/>&lt;<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>elapsed_ms,<sp/><ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(elapsed_ms<sp/>&lt;=<sp/>max_ms,</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;long<sp/>%u<sp/>&gt;<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>elapsed_ms,<sp/>max_ms);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Single<sp/>CPU<sp/>test<sp/>legacy<sp/>delayed<sp/>cancel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="workq_2work_2src_2main_8c_1a1c119803af1b22e49264f7f8c4be8889" kindref="member">test_1cpu_legacy_delayed_cancel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__delayed__work" kindref="compound">k_delayed_work</ref><sp/>lwork;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>and<sp/>use<sp/>non-blocking<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a99d3db5999de87dcb0e159f620445505" kindref="member">reset_counters</ref>();</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf484b980ae3dbbd620b96e883c4b4fe6" kindref="member">k_delayed_work_init</ref>(&amp;lwork,<sp/><ref refid="workq_2work_2src_2main_8c_1a9d82ff8176862bf379b974942b4b9e41" kindref="member">counter_handler</ref>);</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>that<sp/>work<sp/>is<sp/>not<sp/>pending<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__workqueue__apis_1ga47b86afff751340829339566a9932f72" kindref="member">k_delayed_work_pending</ref>(&amp;lwork),<sp/>NULL);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cancel<sp/>should<sp/>be<sp/>-EALREADY<sp/>if<sp/>not<sp/>submitted/active;<sp/>this</highlight></codeline>
<codeline lineno="1537"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>does<sp/>not<sp/>match<sp/>original<sp/>behavior<sp/>(-EINVAL),<sp/>but<sp/>it&apos;s<sp/>what</highlight></codeline>
<codeline lineno="1538"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>can<sp/>do.</highlight></codeline>
<codeline lineno="1539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga00189a735a3a557118c035b7d69feeb0" kindref="member">k_delayed_work_cancel</ref>(&amp;lwork);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Submit<sp/>after<sp/>standard<sp/>delay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga9d96cee1aa79b9fd01aa3ea7892f74d0" kindref="member">k_delayed_work_submit_to_queue</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a1ad20c512b07f64b9e5d7dec554eaa7f" kindref="member">coophi_queue</ref>,<sp/>&amp;lwork,</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="workq_2work_2src_2main_8c_1a70fb43de88d474f4c6e87dff47edf851" kindref="member">DELAY_MS</ref>));</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__workqueue__apis_1ga47b86afff751340829339566a9932f72" kindref="member">k_delayed_work_pending</ref>(&amp;lwork),<sp/>NULL);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cancel<sp/>should<sp/>succeed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="group__workqueue__apis_1ga00189a735a3a557118c035b7d69feeb0" kindref="member">k_delayed_work_cancel</ref>(&amp;lwork);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(rc,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__workqueue__apis_1ga47b86afff751340829339566a9932f72" kindref="member">k_delayed_work_pending</ref>(&amp;lwork),<sp/>NULL);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__common__tests_1ga0f504167b62d85064806318554a9d1ef" kindref="member">test_nop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="1558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="common_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" kindref="member">test_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1a1a57fef890c6b3defdc54c18c1c47a1c" kindref="member">main_thread</ref><sp/>=<sp/><ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>();</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="workq_2work_2src_2main_8c_1a5ab4ecd90a56c717098aa73d54fb7df8" kindref="member">rel_sem</ref>,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" kindref="member">ztest_test_suite</ref>(<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>,</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1ae669581d2e97a3e690eb7b88acc363f4" kindref="member">test_work_init</ref>),</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1ad2de23ae7c81643670995ecf188b4f41" kindref="member">test_delayable_init</ref>),</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a924384de7747470829d50b8eee968870" kindref="member">test_legacy_delayed_init</ref>),</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a8bb7ef5ff38593332b0aa83ce10377de" kindref="member">test_unstarted</ref>),</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1abfb0eef89872dae72a0d041949467b11" kindref="member">test_queue_start</ref>),</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a77ce66315734063e9ce4a9ece2631d17" kindref="member">test_null_queue</ref>),</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a635f2161af9826df87ea0f9ef53fd727" kindref="member">test_1cpu_simple_queue</ref>),</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a387c69b612b02f493a19497b40a33244" kindref="member">test_smp_simple_queue</ref>),</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a801768e734510e3cb7c0bea31752e41d" kindref="member">test_1cpu_sync_queue</ref>),</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1ac82dffa7384f1bac58a19dcd335d894e" kindref="member">test_1cpu_reentrant_queue</ref>),</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a8baee445c01f44c9055324d1e8c8329f" kindref="member">test_1cpu_queued_flush</ref>),</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a20fd804f5d56687d0b6a16b6761bd0d9" kindref="member">test_1cpu_running_flush</ref>),</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a083db2196ba0caee73d2b0c82279c2f3" kindref="member">test_1cpu_queued_cancel</ref>),</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1acb2410291bb95a111b17d70b308894cb" kindref="member">test_1cpu_queued_cancel_sync</ref>),</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1ac4629f0613c54f97eb3ba437a22fde96" kindref="member">test_1cpu_running_cancel</ref>),</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a76ba5fb95e98c3b063c7999e0164fe49" kindref="member">test_1cpu_running_cancel_sync</ref>),</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a8a8a22c88ade11cbc88aa597d4e67d1b" kindref="member">test_smp_running_cancel</ref>),</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1ab6bd2144638940e5ddc2bed826b9281d" kindref="member">test_drain_empty</ref>),</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a570c523d96a16aace6d83efd38915cb8" kindref="member">test_1cpu_drain_wait</ref>),</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a312aff318fc66883c6c9728ad6253488" kindref="member">test_1cpu_plugged_drain</ref>),</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a84ea559f96c13f1e91bdd79b8caa1301" kindref="member">test_1cpu_basic_schedule</ref>),</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1af57b9364561e401127d1d927f8154ed0" kindref="member">test_1cpu_basic_schedule_running</ref>),</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a13a82c07a35300fab433e94b42833402" kindref="member">test_1cpu_immed_schedule</ref>),</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a0290c6f550c1db54d86da3eb4d4e0170" kindref="member">test_1cpu_basic_reschedule</ref>),</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1ac7bb940ea3e87f7ea230bcba4db26e1e" kindref="member">test_1cpu_immed_reschedule</ref>),</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a98d09628ce2e2f67d2dc0ad161648f7f" kindref="member">test_1cpu_delayed_flush</ref>),</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a5aff836fdc615eddd77d7d05b70d03de" kindref="member">test_1cpu_delayed_cancel_sync</ref>),</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a6bf758347497de087360629438a2c365" kindref="member">test_1cpu_delayed_cancel_sync_wait</ref>),</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1af829a63d4ec71fb9c72631bd56a909c5" kindref="member">test_1cpu_delayed_cancel</ref>),</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a6ca1e285ef37e83660c286707c0087b9" kindref="member">test_1cpu_queue_no_yield</ref>),</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1ac23b1946e4a63aac97d8b7847d5fbeea" kindref="member">test_1cpu_system_queue</ref>),</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a7b96628be8b00c454a77c3781674f4f3" kindref="member">test_1cpu_system_schedule</ref>),</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a3d832812601891fca26cb06ee5012053" kindref="member">test_1cpu_system_reschedule</ref>),</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1acd5a58f763601433f78630fa34eba3d6" kindref="member">test_1cpu_legacy_delayed_submit</ref>),</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="workq_2work_2src_2main_8c_1ada5cb237fb7ddcd3344753e42ab0a6d9" kindref="member">test_1cpu_legacy_delayed_resubmit</ref>),</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="workq_2work_2src_2main_8c_1a1c119803af1b22e49264f7f8c4be8889" kindref="member">test_1cpu_legacy_delayed_cancel</ref>),</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="group__kernel__common__tests_1ga0f504167b62d85064806318554a9d1ef" kindref="member">test_nop</ref>));</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" kindref="member">ztest_run_test_suite</ref>(<ref refid="workq_2work_2src_2main_8c_1a147e2d2d335d9181395da44aa45b7694" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="1606"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/kernel/workq/work/src/main.c"/>
  </compounddef>
</doxygen>
