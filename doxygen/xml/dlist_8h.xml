<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="dlist_8h" kind="file" language="C++">
    <compoundname>dlist.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes refid="stdbool_8h" local="no">stdbool.h</includes>
    <includes refid="toolchain_8h" local="no">toolchain.h</includes>
    <includedby refid="app__memdomain_8h" local="no">include/app_memory/app_memdomain.h</includedby>
    <includedby refid="mem__domain_8h" local="no">include/app_memory/mem_domain.h</includedby>
    <includedby refid="disk_8h" local="no">include/drivers/disk.h</includedby>
    <includedby refid="fs_8h" local="no">include/fs/fs.h</includedby>
    <includedby refid="sched__priq_8h" local="no">include/kernel/sched_priq.h</includedby>
    <includedby refid="kernel__includes_8h" local="no">include/kernel_includes.h</includedby>
    <includedby refid="kernel__structs_8h" local="no">include/kernel_structs.h</includedby>
    <includedby refid="shell__history_8h" local="no">include/shell/shell_history.h</includedby>
    <includedby refid="include_2sys__clock_8h" local="no">include/sys_clock.h</includedby>
    <includedby refid="wait__q_8h" local="no">include/wait_q.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="3">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
      <node id="173">
        <label>include/app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="174" relation="include">
        </childnode>
      </node>
      <node id="194">
        <label>include/arch/arc/arch_inlines.h</label>
        <link refid="arc_2arch__inlines_8h"/>
      </node>
      <node id="195">
        <label>include/arch/arm64/arch_inlines.h</label>
        <link refid="arm64_2arch__inlines_8h"/>
      </node>
      <node id="197">
        <label>include/arch/x86/arch.h</label>
        <link refid="x86_2arch_8h"/>
      </node>
      <node id="196">
        <label>include/arch/x86/ia32/arch.h</label>
        <link refid="x86_2ia32_2arch_8h"/>
        <childnode refid="197" relation="include">
        </childnode>
      </node>
      <node id="198">
        <label>include/arch/xtensa/arch_inlines.h</label>
        <link refid="xtensa_2arch__inlines_8h"/>
      </node>
      <node id="176">
        <label>include/cache.h</label>
        <link refid="cache_8h"/>
      </node>
      <node id="199">
        <label>include/debug/object_tracing.h</label>
        <link refid="object__tracing_8h"/>
      </node>
      <node id="202">
        <label>include/debug/tracing.h</label>
        <link refid="debug_2tracing_8h"/>
      </node>
      <node id="178">
        <label>include/device.h</label>
        <link refid="device_8h"/>
      </node>
      <node id="187">
        <label>include/drivers/disk.h</label>
        <link refid="disk_8h"/>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="179">
        <label>include/drivers/pcie/endpoint/pcie_ep.h</label>
        <link refid="pcie__ep_8h"/>
      </node>
      <node id="189">
        <label>include/fs/fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="190" relation="include">
        </childnode>
      </node>
      <node id="177">
        <label>include/init.h</label>
        <link refid="init_8h"/>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="175">
        <label>include/kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
      </node>
      <node id="192">
        <label>include/kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="174">
        <label>include/kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="175" relation="include">
        </childnode>
      </node>
      <node id="193">
        <label>include/kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
      <node id="184">
        <label>include/posix/pthread.h</label>
        <link refid="pthread_8h"/>
      </node>
      <node id="191">
        <label>include/posix/sys/eventfd.h</label>
        <link refid="eventfd_8h"/>
      </node>
      <node id="204">
        <label>include/shell/shell.h</label>
        <link refid="shell_2shell_8h"/>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
      </node>
      <node id="205">
        <label>include/shell/shell_dummy.h</label>
        <link refid="shell__dummy_8h"/>
      </node>
      <node id="203">
        <label>include/shell/shell_history.h</label>
        <link refid="shell__history_8h"/>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="206">
        <label>include/shell/shell_rtt.h</label>
        <link refid="shell__rtt_8h"/>
      </node>
      <node id="207">
        <label>include/shell/shell_telnet.h</label>
        <link refid="shell__telnet_8h"/>
      </node>
      <node id="208">
        <label>include/shell/shell_uart.h</label>
        <link refid="shell__uart_8h"/>
      </node>
      <node id="186">
        <label>include/smf.h</label>
        <link refid="smf_8h"/>
      </node>
      <node id="188">
        <label>include/storage/disk_access.h</label>
        <link refid="disk__access_8h"/>
      </node>
      <node id="1">
        <label>include/sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="190">
        <label>include/sys/fdtable.h</label>
        <link refid="fdtable_8h"/>
        <childnode refid="191" relation="include">
        </childnode>
      </node>
      <node id="209">
        <label>include/sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="174" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>include/syscall_handler.h</label>
        <link refid="syscall__handler_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
      <node id="182">
        <label>include/timeout_q.h</label>
        <link refid="timeout__q_8h"/>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="201">
        <label>include/tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
      </node>
      <node id="200">
        <label>include/tracing/tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="201" relation="include">
        </childnode>
      </node>
      <node id="183">
        <label>include/wait_q.h</label>
        <link refid="wait__q_8h"/>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="180">
        <label>include/xen/console.h</label>
        <link refid="xen_2console_8h"/>
      </node>
      <node id="185">
        <label>include/zephyr.h</label>
        <link refid="zephyr_8h"/>
        <childnode refid="186" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>subsys/testsuite/ztest/include/ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>subsys/testsuite/ztest/include/ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>subsys/testsuite/ztest/include/ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>subsys/testsuite/ztest/include/ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="172">
        <label>subsys/testsuite/ztest/include/ztest_test_new.h</label>
        <link refid="ztest__test__new_8h"/>
      </node>
      <node id="7">
        <label>tests/kernel/common/src/atomic.c</label>
        <link refid="atomic_8c"/>
      </node>
      <node id="8">
        <label>tests/kernel/common/src/bitarray.c</label>
        <link refid="bitarray_8c"/>
      </node>
      <node id="9">
        <label>tests/kernel/common/src/bitfield.c</label>
        <link refid="bitfield_8c"/>
      </node>
      <node id="10">
        <label>tests/kernel/common/src/boot_delay.c</label>
        <link refid="boot__delay_8c"/>
      </node>
      <node id="11">
        <label>tests/kernel/common/src/byteorder.c</label>
        <link refid="byteorder_8c"/>
      </node>
      <node id="12">
        <label>tests/kernel/common/src/clock.c</label>
        <link refid="clock_8c"/>
      </node>
      <node id="13">
        <label>tests/kernel/common/src/errno.c</label>
        <link refid="errno_8c"/>
      </node>
      <node id="14">
        <label>tests/kernel/common/src/irq_offload.c</label>
        <link refid="irq__offload_8c"/>
      </node>
      <node id="15">
        <label>tests/kernel/common/src/main.c</label>
        <link refid="common_2src_2main_8c"/>
      </node>
      <node id="16">
        <label>tests/kernel/common/src/multilib.c</label>
        <link refid="multilib_8c"/>
      </node>
      <node id="17">
        <label>tests/kernel/common/src/printk.c</label>
        <link refid="printk_8c"/>
      </node>
      <node id="18">
        <label>tests/kernel/common/src/timeout_order.c</label>
        <link refid="timeout__order_8c"/>
      </node>
      <node id="19">
        <label>tests/kernel/condvar/condvar_api/src/main.c</label>
        <link refid="condvar_2condvar__api_2src_2main_8c"/>
      </node>
      <node id="20">
        <label>tests/kernel/context/src/main.c</label>
        <link refid="context_2src_2main_8c"/>
      </node>
      <node id="21">
        <label>tests/kernel/device/src/abstract_driver.c</label>
        <link refid="abstract__driver_8c"/>
      </node>
      <node id="22">
        <label>tests/kernel/device/src/abstract_driver.h</label>
        <link refid="abstract__driver_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>tests/kernel/device/src/main.c</label>
        <link refid="device_2src_2main_8c"/>
      </node>
      <node id="24">
        <label>tests/kernel/device/src/mmio.c</label>
        <link refid="mmio_8c"/>
      </node>
      <node id="25">
        <label>tests/kernel/device/src/test_driver_init.c</label>
        <link refid="test__driver__init_8c"/>
      </node>
      <node id="26">
        <label>tests/kernel/early_sleep/src/main.c</label>
        <link refid="early__sleep_2src_2main_8c"/>
      </node>
      <node id="27">
        <label>tests/kernel/events/event_api/src/main.c</label>
        <link refid="events_2event__api_2src_2main_8c"/>
      </node>
      <node id="28">
        <label>tests/kernel/events/event_api/src/test_event_apis.c</label>
        <link refid="test__event__apis_8c"/>
      </node>
      <node id="29">
        <label>tests/kernel/events/sys_event/src/main.c</label>
        <link refid="events_2sys__event_2src_2main_8c"/>
      </node>
      <node id="30">
        <label>tests/kernel/fatal/exception/src/main.c</label>
        <link refid="fatal_2exception_2src_2main_8c"/>
      </node>
      <node id="31">
        <label>tests/kernel/fatal/no-multithreading/src/main.c</label>
        <link refid="fatal_2no-multithreading_2src_2main_8c"/>
      </node>
      <node id="32">
        <label>tests/kernel/fifo/fifo_api/src/main.c</label>
        <link refid="fifo_2fifo__api_2src_2main_8c"/>
      </node>
      <node id="33">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo.h</label>
        <link refid="test__fifo_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_cancel.c</label>
        <link refid="test__fifo__cancel_8c"/>
      </node>
      <node id="35">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_contexts.c</label>
        <link refid="test__fifo__contexts_8c"/>
      </node>
      <node id="36">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_fail.c</label>
        <link refid="test__fifo__fail_8c"/>
      </node>
      <node id="37">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_loop.c</label>
        <link refid="test__fifo__loop_8c"/>
      </node>
      <node id="38">
        <label>tests/kernel/fifo/fifo_timeout/src/main.c</label>
        <link refid="fifo_2fifo__timeout_2src_2main_8c"/>
      </node>
      <node id="39">
        <label>tests/kernel/fifo/fifo_usage/src/main.c</label>
        <link refid="fifo_2fifo__usage_2src_2main_8c"/>
      </node>
      <node id="40">
        <label>tests/kernel/fpu_sharing/float_disable/src/k_float_disable.c</label>
        <link refid="k__float__disable_8c"/>
      </node>
      <node id="41">
        <label>tests/kernel/fpu_sharing/float_disable/src/main.c</label>
        <link refid="fpu__sharing_2float__disable_2src_2main_8c"/>
      </node>
      <node id="42">
        <label>tests/kernel/fpu_sharing/generic/src/load_store.c</label>
        <link refid="load__store_8c"/>
      </node>
      <node id="43">
        <label>tests/kernel/fpu_sharing/generic/src/main.c</label>
        <link refid="fpu__sharing_2generic_2src_2main_8c"/>
      </node>
      <node id="44">
        <label>tests/kernel/fpu_sharing/generic/src/pi.c</label>
        <link refid="pi_8c"/>
      </node>
      <node id="45">
        <label>tests/kernel/gen_isr_table/src/main.c</label>
        <link refid="gen__isr__table_2src_2main_8c"/>
      </node>
      <node id="46">
        <label>tests/kernel/interrupt/src/direct_isr.c</label>
        <link refid="direct__isr_8c"/>
      </node>
      <node id="47">
        <label>tests/kernel/interrupt/src/dynamic_isr.c</label>
        <link refid="dynamic__isr_8c"/>
      </node>
      <node id="48">
        <label>tests/kernel/interrupt/src/interrupt_offload.c</label>
        <link refid="interrupt__offload_8c"/>
      </node>
      <node id="49">
        <label>tests/kernel/interrupt/src/main.c</label>
        <link refid="interrupt_2src_2main_8c"/>
      </node>
      <node id="50">
        <label>tests/kernel/interrupt/src/nested_irq.c</label>
        <link refid="nested__irq_8c"/>
      </node>
      <node id="51">
        <label>tests/kernel/interrupt/src/prevent_irq.c</label>
        <link refid="prevent__irq_8c"/>
      </node>
      <node id="52">
        <label>tests/kernel/interrupt/src/regular_isr.c</label>
        <link refid="regular__isr_8c"/>
      </node>
      <node id="53">
        <label>tests/kernel/lifo/lifo_api/src/main.c</label>
        <link refid="lifo_2lifo__api_2src_2main_8c"/>
      </node>
      <node id="54">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo.h</label>
        <link refid="test__lifo_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo_contexts.c</label>
        <link refid="test__lifo__contexts_8c"/>
      </node>
      <node id="56">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo_fail.c</label>
        <link refid="test__lifo__fail_8c"/>
      </node>
      <node id="57">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo_loop.c</label>
        <link refid="test__lifo__loop_8c"/>
      </node>
      <node id="58">
        <label>tests/kernel/lifo/lifo_usage/src/main.c</label>
        <link refid="lifo_2lifo__usage_2src_2main_8c"/>
      </node>
      <node id="59">
        <label>tests/kernel/mbox/mbox_api/src/main.c</label>
        <link refid="mbox_2mbox__api_2src_2main_8c"/>
      </node>
      <node id="60">
        <label>tests/kernel/mbox/mbox_api/src/test_mbox_api.c</label>
        <link refid="test__mbox__api_8c"/>
      </node>
      <node id="61">
        <label>tests/kernel/mbox/mbox_usage/src/main.c</label>
        <link refid="mbox_2mbox__usage_2src_2main_8c"/>
      </node>
      <node id="62">
        <label>tests/kernel/mem_heap/k_heap_api/src/main.c</label>
        <link refid="mem__heap_2k__heap__api_2src_2main_8c"/>
      </node>
      <node id="63">
        <label>tests/kernel/mem_heap/k_heap_api/src/test_kheap_api.c</label>
        <link refid="test__kheap__api_8c"/>
      </node>
      <node id="64">
        <label>tests/kernel/mem_heap/mheap_api_concept/src/main.c</label>
        <link refid="mem__heap_2mheap__api__concept_2src_2main_8c"/>
      </node>
      <node id="65">
        <label>tests/kernel/mem_heap/mheap_api_concept/src/test_mheap_api.c</label>
        <link refid="test__mheap__api_8c"/>
      </node>
      <node id="66">
        <label>tests/kernel/mem_heap/mheap_api_concept/src/test_mheap_concept.c</label>
        <link refid="test__mheap__concept_8c"/>
      </node>
      <node id="67">
        <label>tests/kernel/mem_heap/shared_multi_heap/src/main.c</label>
        <link refid="mem__heap_2shared__multi__heap_2src_2main_8c"/>
      </node>
      <node id="68">
        <label>tests/kernel/mem_protect/demand_paging/src/main.c</label>
        <link refid="mem__protect_2demand__paging_2src_2main_8c"/>
      </node>
      <node id="69">
        <label>tests/kernel/mem_protect/futex/src/main.c</label>
        <link refid="mem__protect_2futex_2src_2main_8c"/>
      </node>
      <node id="70">
        <label>tests/kernel/mem_protect/mem_map/src/main.c</label>
        <link refid="mem__protect_2mem__map_2src_2main_8c"/>
      </node>
      <node id="71">
        <label>tests/kernel/mem_protect/mem_protect/src/common.c</label>
        <link refid="common_8c"/>
      </node>
      <node id="74">
        <label>tests/kernel/mem_protect/mem_protect/src/inherit.c</label>
        <link refid="inherit_8c"/>
      </node>
      <node id="75">
        <label>tests/kernel/mem_protect/mem_protect/src/kobject.c</label>
        <link refid="kobject_8c"/>
      </node>
      <node id="72">
        <label>tests/kernel/mem_protect/mem_protect/src/main.c</label>
        <link refid="mem__protect_2mem__protect_2src_2main_8c"/>
      </node>
      <node id="76">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_domain.c</label>
        <link refid="mem__domain_8c"/>
      </node>
      <node id="77">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_partition.c</label>
        <link refid="mem__partition_8c"/>
      </node>
      <node id="73">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_protect.h</label>
        <link refid="mem__protect_8h"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>tests/kernel/mem_protect/obj_validation/src/main.c</label>
        <link refid="mem__protect_2obj__validation_2src_2main_8c"/>
      </node>
      <node id="79">
        <label>tests/kernel/mem_protect/protection/src/main.c</label>
        <link refid="mem__protect_2protection_2src_2main_8c"/>
      </node>
      <node id="80">
        <label>tests/kernel/mem_protect/stack_random/src/main.c</label>
        <link refid="mem__protect_2stack__random_2src_2main_8c"/>
      </node>
      <node id="81">
        <label>tests/kernel/mem_protect/stackprot/src/main.c</label>
        <link refid="mem__protect_2stackprot_2src_2main_8c"/>
      </node>
      <node id="82">
        <label>tests/kernel/mem_protect/sys_sem/src/main.c</label>
        <link refid="mem__protect_2sys__sem_2src_2main_8c"/>
      </node>
      <node id="83">
        <label>tests/kernel/mem_protect/syscalls/src/main.c</label>
        <link refid="mem__protect_2syscalls_2src_2main_8c"/>
      </node>
      <node id="84">
        <label>tests/kernel/mem_protect/userspace/src/main.c</label>
        <link refid="mem__protect_2userspace_2src_2main_8c"/>
      </node>
      <node id="85">
        <label>tests/kernel/mem_slab/mslab/src/main.c</label>
        <link refid="mem__slab_2mslab_2src_2main_8c"/>
      </node>
      <node id="86">
        <label>tests/kernel/mem_slab/mslab_api/src/main.c</label>
        <link refid="mem__slab_2mslab__api_2src_2main_8c"/>
      </node>
      <node id="87">
        <label>tests/kernel/mem_slab/mslab_api/src/test_mslab_api.c</label>
        <link refid="test__mslab__api_8c"/>
      </node>
      <node id="88">
        <label>tests/kernel/mem_slab/mslab_api/src/test_mslab_extern.c</label>
        <link refid="test__mslab__extern_8c"/>
      </node>
      <node id="89">
        <label>tests/kernel/mem_slab/mslab_concept/src/main.c</label>
        <link refid="mem__slab_2mslab__concept_2src_2main_8c"/>
      </node>
      <node id="90">
        <label>tests/kernel/mem_slab/mslab_concept/src/test_mslab_alloc_wait.c</label>
        <link refid="test__mslab__alloc__wait_8c"/>
      </node>
      <node id="91">
        <label>tests/kernel/mem_slab/mslab_threadsafe/src/main.c</label>
        <link refid="mem__slab_2mslab__threadsafe_2src_2main_8c"/>
      </node>
      <node id="92">
        <label>tests/kernel/mem_slab/mslab_threadsafe/src/test_mslab_threadsafe.c</label>
        <link refid="test__mslab__threadsafe_8c"/>
      </node>
      <node id="93">
        <label>tests/kernel/mp/src/main.c</label>
        <link refid="mp_2src_2main_8c"/>
      </node>
      <node id="94">
        <label>tests/kernel/msgq/msgq_api/src/main.c</label>
        <link refid="msgq_2msgq__api_2src_2main_8c"/>
      </node>
      <node id="95">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq.h</label>
        <link refid="test__msgq_8h"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_attrs.c</label>
        <link refid="test__msgq__attrs_8c"/>
      </node>
      <node id="97">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c</label>
        <link refid="test__msgq__contexts_8c"/>
      </node>
      <node id="98">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_fail.c</label>
        <link refid="test__msgq__fail_8c"/>
      </node>
      <node id="99">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_purge.c</label>
        <link refid="test__msgq__purge_8c"/>
      </node>
      <node id="100">
        <label>tests/kernel/msgq/msgq_usage/src/main.c</label>
        <link refid="msgq_2msgq__usage_2src_2main_8c"/>
      </node>
      <node id="101">
        <label>tests/kernel/mutex/mutex_api/src/test_mutex_apis.c</label>
        <link refid="test__mutex__apis_8c"/>
      </node>
      <node id="102">
        <label>tests/kernel/mutex/mutex_error_case/src/test_mutex_error.c</label>
        <link refid="test__mutex__error_8c"/>
      </node>
      <node id="103">
        <label>tests/kernel/mutex/sys_mutex/src/main.c</label>
        <link refid="mutex_2sys__mutex_2src_2main_8c"/>
      </node>
      <node id="104">
        <label>tests/kernel/mutex/sys_mutex/src/thread_competition.c</label>
        <link refid="thread__competition_8c"/>
      </node>
      <node id="105">
        <label>tests/kernel/obj_tracking/src/main.c</label>
        <link refid="obj__tracking_2src_2main_8c"/>
      </node>
      <node id="106">
        <label>tests/kernel/pending/src/main.c</label>
        <link refid="pending_2src_2main_8c"/>
      </node>
      <node id="107">
        <label>tests/kernel/pipe/pipe/src/main.c</label>
        <link refid="pipe_2pipe_2src_2main_8c"/>
      </node>
      <node id="108">
        <label>tests/kernel/pipe/pipe/src/test_pipe.c</label>
        <link refid="test__pipe_8c"/>
      </node>
      <node id="109">
        <label>tests/kernel/pipe/pipe_api/src/main.c</label>
        <link refid="pipe_2pipe__api_2src_2main_8c"/>
      </node>
      <node id="110">
        <label>tests/kernel/pipe/pipe_api/src/test_pipe_avail.c</label>
        <link refid="test__pipe__avail_8c"/>
      </node>
      <node id="111">
        <label>tests/kernel/pipe/pipe_api/src/test_pipe_contexts.c</label>
        <link refid="test__pipe__contexts_8c"/>
      </node>
      <node id="112">
        <label>tests/kernel/pipe/pipe_api/src/test_pipe_fail.c</label>
        <link refid="test__pipe__fail_8c"/>
      </node>
      <node id="113">
        <label>tests/kernel/poll/src/main.c</label>
        <link refid="poll_2src_2main_8c"/>
      </node>
      <node id="114">
        <label>tests/kernel/poll/src/test_poll.c</label>
        <link refid="test__poll_8c"/>
      </node>
      <node id="115">
        <label>tests/kernel/poll/src/test_poll_fail.c</label>
        <link refid="test__poll__fail_8c"/>
      </node>
      <node id="116">
        <label>tests/kernel/profiling/profiling_api/src/main.c</label>
        <link refid="profiling_2profiling__api_2src_2main_8c"/>
      </node>
      <node id="117">
        <label>tests/kernel/queue/src/main.c</label>
        <link refid="queue_2src_2main_8c"/>
      </node>
      <node id="118">
        <label>tests/kernel/queue/src/test_queue.h</label>
        <link refid="test__queue_8h"/>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>tests/kernel/queue/src/test_queue_contexts.c</label>
        <link refid="test__queue__contexts_8c"/>
      </node>
      <node id="120">
        <label>tests/kernel/queue/src/test_queue_fail.c</label>
        <link refid="test__queue__fail_8c"/>
      </node>
      <node id="121">
        <label>tests/kernel/queue/src/test_queue_loop.c</label>
        <link refid="test__queue__loop_8c"/>
      </node>
      <node id="122">
        <label>tests/kernel/queue/src/test_queue_user.c</label>
        <link refid="test__queue__user_8c"/>
      </node>
      <node id="123">
        <label>tests/kernel/sched/deadline/src/main.c</label>
        <link refid="sched_2deadline_2src_2main_8c"/>
      </node>
      <node id="124">
        <label>tests/kernel/sched/metairq/src/main.c</label>
        <link refid="sched_2metairq_2src_2main_8c"/>
      </node>
      <node id="125">
        <label>tests/kernel/sched/preempt/src/main.c</label>
        <link refid="sched_2preempt_2src_2main_8c"/>
      </node>
      <node id="128">
        <label>tests/kernel/sched/schedule_api/src/main.c</label>
        <link refid="sched_2schedule__api_2src_2main_8c"/>
      </node>
      <node id="126">
        <label>tests/kernel/sched/schedule_api/src/test_priority_scheduling.c</label>
        <link refid="test__priority__scheduling_8c"/>
      </node>
      <node id="127">
        <label>tests/kernel/sched/schedule_api/src/test_sched.h</label>
        <link refid="test__sched_8h"/>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>tests/kernel/sched/schedule_api/src/test_sched_is_preempt_thread.c</label>
        <link refid="test__sched__is__preempt__thread_8c"/>
      </node>
      <node id="130">
        <label>tests/kernel/sched/schedule_api/src/test_sched_priority.c</label>
        <link refid="test__sched__priority_8c"/>
      </node>
      <node id="131">
        <label>tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c</label>
        <link refid="test__sched__timeslice__and__lock_8c"/>
      </node>
      <node id="132">
        <label>tests/kernel/sched/schedule_api/src/test_sched_timeslice_reset.c</label>
        <link refid="test__sched__timeslice__reset_8c"/>
      </node>
      <node id="133">
        <label>tests/kernel/sched/schedule_api/src/test_slice_scheduling.c</label>
        <link refid="test__slice__scheduling_8c"/>
      </node>
      <node id="134">
        <label>tests/kernel/sched/schedule_api/src/user_api.c</label>
        <link refid="user__api_8c"/>
      </node>
      <node id="135">
        <label>tests/kernel/semaphore/semaphore/src/main.c</label>
        <link refid="semaphore_2semaphore_2src_2main_8c"/>
      </node>
      <node id="136">
        <label>tests/kernel/semaphore/sys_sem/src/main.c</label>
        <link refid="semaphore_2sys__sem_2src_2main_8c"/>
      </node>
      <node id="137">
        <label>tests/kernel/sleep/src/main.c</label>
        <link refid="sleep_2src_2main_8c"/>
      </node>
      <node id="138">
        <label>tests/kernel/sleep/src/usleep.c</label>
        <link refid="usleep_8c"/>
      </node>
      <node id="139">
        <label>tests/kernel/smp/src/main.c</label>
        <link refid="smp_2src_2main_8c"/>
      </node>
      <node id="140">
        <label>tests/kernel/smp_boot_delay/src/main.c</label>
        <link refid="smp__boot__delay_2src_2main_8c"/>
      </node>
      <node id="141">
        <label>tests/kernel/spinlock/src/main.c</label>
        <link refid="spinlock_2src_2main_8c"/>
      </node>
      <node id="142">
        <label>tests/kernel/spinlock/src/spinlock_error_case.c</label>
        <link refid="spinlock__error__case_8c"/>
      </node>
      <node id="143">
        <label>tests/kernel/stack/stack/src/main.c</label>
        <link refid="stack_2stack_2src_2main_8c"/>
      </node>
      <node id="144">
        <label>tests/kernel/stack/stack/src/test_stack_contexts.c</label>
        <link refid="test__stack__contexts_8c"/>
      </node>
      <node id="145">
        <label>tests/kernel/stack/stack/src/test_stack_fail.c</label>
        <link refid="test__stack__fail_8c"/>
      </node>
      <node id="146">
        <label>tests/kernel/threads/dynamic_thread/src/main.c</label>
        <link refid="threads_2dynamic__thread_2src_2main_8c"/>
      </node>
      <node id="147">
        <label>tests/kernel/threads/no-multithreading/src/main.c</label>
        <link refid="threads_2no-multithreading_2src_2main_8c"/>
      </node>
      <node id="148">
        <label>tests/kernel/threads/thread_apis/src/main.c</label>
        <link refid="threads_2thread__apis_2src_2main_8c"/>
      </node>
      <node id="149">
        <label>tests/kernel/threads/thread_apis/src/test_essential_thread.c</label>
        <link refid="test__essential__thread_8c"/>
      </node>
      <node id="150">
        <label>tests/kernel/threads/thread_apis/src/test_kthread_for_each.c</label>
        <link refid="test__kthread__for__each_8c"/>
      </node>
      <node id="151">
        <label>tests/kernel/threads/thread_apis/src/test_threads_cancel_abort.c</label>
        <link refid="test__threads__cancel__abort_8c"/>
      </node>
      <node id="152">
        <label>tests/kernel/threads/thread_apis/src/test_threads_cpu_mask.c</label>
        <link refid="test__threads__cpu__mask_8c"/>
      </node>
      <node id="153">
        <label>tests/kernel/threads/thread_apis/src/test_threads_set_priority.c</label>
        <link refid="test__threads__set__priority_8c"/>
      </node>
      <node id="154">
        <label>tests/kernel/threads/thread_apis/src/test_threads_spawn.c</label>
        <link refid="test__threads__spawn_8c"/>
      </node>
      <node id="155">
        <label>tests/kernel/threads/thread_apis/src/test_threads_suspend_resume.c</label>
        <link refid="test__threads__suspend__resume_8c"/>
      </node>
      <node id="156">
        <label>tests/kernel/threads/thread_error_case/src/main.c</label>
        <link refid="threads_2thread__error__case_2src_2main_8c"/>
      </node>
      <node id="157">
        <label>tests/kernel/threads/thread_init/src/main.c</label>
        <link refid="threads_2thread__init_2src_2main_8c"/>
      </node>
      <node id="158">
        <label>tests/kernel/threads/thread_stack/src/main.c</label>
        <link refid="threads_2thread__stack_2src_2main_8c"/>
      </node>
      <node id="159">
        <label>tests/kernel/threads/tls/src/main.c</label>
        <link refid="threads_2tls_2src_2main_8c"/>
      </node>
      <node id="160">
        <label>tests/kernel/tickless/tickless_concept/src/main.c</label>
        <link refid="tickless_2tickless__concept_2src_2main_8c"/>
      </node>
      <node id="161">
        <label>tests/kernel/timer/cycle64/src/main.c</label>
        <link refid="timer_2cycle64_2src_2main_8c"/>
      </node>
      <node id="162">
        <label>tests/kernel/timer/starve/src/main.c</label>
        <link refid="timer_2starve_2src_2main_8c"/>
      </node>
      <node id="163">
        <label>tests/kernel/timer/timer_api/src/main.c</label>
        <link refid="timer_2timer__api_2src_2main_8c"/>
      </node>
      <node id="164">
        <label>tests/kernel/timer/timer_api/src/timer_convert.c</label>
        <link refid="timer__convert_8c"/>
      </node>
      <node id="165">
        <label>tests/kernel/timer/timer_error_case/src/main.c</label>
        <link refid="timer_2timer__error__case_2src_2main_8c"/>
      </node>
      <node id="166">
        <label>tests/kernel/timer/timer_monotonic/src/main.c</label>
        <link refid="timer_2timer__monotonic_2src_2main_8c"/>
      </node>
      <node id="167">
        <label>tests/kernel/workq/critical/src/main.c</label>
        <link refid="workq_2critical_2src_2main_8c"/>
      </node>
      <node id="168">
        <label>tests/kernel/workq/user_work/src/main.c</label>
        <link refid="workq_2user__work_2src_2main_8c"/>
      </node>
      <node id="169">
        <label>tests/kernel/workq/work/src/main.c</label>
        <link refid="workq_2work_2src_2main_8c"/>
      </node>
      <node id="170">
        <label>tests/kernel/workq/work_queue/src/main.c</label>
        <link refid="workq_2work__queue_2src_2main_8c"/>
      </node>
      <node id="171">
        <label>tests/kernel/xip/src/main.c</label>
        <link refid="xip_2src_2main_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__doubly-linked-list__apis_1ga3788b5bbd11acc885e7378800a8cf974" prot="public" static="no">
        <name>SYS_DLIST_FOR_EACH_NODE</name>
        <param><defname>__dl</defname></param>
        <param><defname>__dn</defname></param>
        <initializer>	for (__dn = <ref refid="group__doubly-linked-list__apis_1ga6fc11e4682311b6b368d849e1e421183" kindref="member">sys_dlist_peek_head</ref>(__dl); __dn != NULL;		\
	     __dn = <ref refid="group__doubly-linked-list__apis_1ga76366019520dc4c2ce2735cf747c1a22" kindref="member">sys_dlist_peek_next</ref>(__dl, __dn))</initializer>
        <briefdescription>
<para>Provide the primitive to iterate on a list Note: the loop is unsafe and thus __dn should not be removed. </para>
        </briefdescription>
        <detaileddescription>
<para>User <emphasis>MUST</emphasis> add the loop statement curly braces enclosing its own code: <verbatim>SYS_DLIST_FOR_EACH_NODE(l, n) {
    &lt;user code&gt;
}
</verbatim> This and other SYS_DLIST_*() macros are not thread safe.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__dl</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer on a sys_dlist_t to iterate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>__dn</parametername>
</parameternamelist>
<parameterdescription>
<para>A sys_dnode_t pointer to peek each node of the list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="67" column="9" bodyfile="include/sys/dlist.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__doubly-linked-list__apis_1ga2bda6ba927f32e1d0b71ad63781b9909" prot="public" static="no">
        <name>SYS_DLIST_ITERATE_FROM_NODE</name>
        <param><defname>__dl</defname></param>
        <param><defname>__dn</defname></param>
        <initializer>	for (__dn = __dn ? <ref refid="group__doubly-linked-list__apis_1ga84863ceb4ef678a9d3500d0e876e6afb" kindref="member">sys_dlist_peek_next_no_check</ref>(__dl, __dn) \
			 : <ref refid="group__doubly-linked-list__apis_1ga6fc11e4682311b6b368d849e1e421183" kindref="member">sys_dlist_peek_head</ref>(__dl); \
	     __dn != NULL; \
	     __dn = <ref refid="group__doubly-linked-list__apis_1ga76366019520dc4c2ce2735cf747c1a22" kindref="member">sys_dlist_peek_next</ref>(__dl, __dn))</initializer>
        <briefdescription>
<para>Provide the primitive to iterate on a list, from a node in the list Note: the loop is unsafe and thus __dn should not be removed. </para>
        </briefdescription>
        <detaileddescription>
<para>User <emphasis>MUST</emphasis> add the loop statement curly braces enclosing its own code: <verbatim>SYS_DLIST_ITERATE_FROM_NODE(l, n) {
    &lt;user code&gt;
}
</verbatim> Like <ref refid="group__doubly-linked-list__apis_1ga3788b5bbd11acc885e7378800a8cf974" kindref="member">SYS_DLIST_FOR_EACH_NODE()</ref>, but __dn already contains a node in the list where to start searching for the next entry from. If NULL, it starts from the head.</para>
<para>This and other SYS_DLIST_*() macros are not thread safe.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__dl</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer on a sys_dlist_t to iterate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>__dn</parametername>
</parameternamelist>
<parameterdescription>
<para>A sys_dnode_t pointer to peek each node of the list; it contains the starting node, or NULL to start from the head </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="91" column="9" bodyfile="include/sys/dlist.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__doubly-linked-list__apis_1ga21c5c7dc311eaba99f00fb2eeca736d9" prot="public" static="no">
        <name>SYS_DLIST_FOR_EACH_NODE_SAFE</name>
        <param><defname>__dl</defname></param>
        <param><defname>__dn</defname></param>
        <param><defname>__dns</defname></param>
        <initializer>	for (__dn = <ref refid="group__doubly-linked-list__apis_1ga6fc11e4682311b6b368d849e1e421183" kindref="member">sys_dlist_peek_head</ref>(__dl),				\
		     __dns = <ref refid="group__doubly-linked-list__apis_1ga76366019520dc4c2ce2735cf747c1a22" kindref="member">sys_dlist_peek_next</ref>(__dl, __dn);		\
	     __dn != NULL; __dn = __dns,				\
		     __dns = <ref refid="group__doubly-linked-list__apis_1ga76366019520dc4c2ce2735cf747c1a22" kindref="member">sys_dlist_peek_next</ref>(__dl, __dn))</initializer>
        <briefdescription>
<para>Provide the primitive to safely iterate on a list Note: __dn can be removed, it will not break the loop. </para>
        </briefdescription>
        <detaileddescription>
<para>User <emphasis>MUST</emphasis> add the loop statement curly braces enclosing its own code: <verbatim>SYS_DLIST_FOR_EACH_NODE_SAFE(l, n, s) {
    &lt;user code&gt;
}
</verbatim> This and other SYS_DLIST_*() macros are not thread safe.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__dl</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer on a sys_dlist_t to iterate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>__dn</parametername>
</parameternamelist>
<parameterdescription>
<para>A sys_dnode_t pointer to peek each node of the list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>__dns</parametername>
</parameternamelist>
<parameterdescription>
<para>A sys_dnode_t pointer for the loop to run safely </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="113" column="9" bodyfile="include/sys/dlist.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__doubly-linked-list__apis_1ga33a8bf65e8095e3b4dcee0b005b79170" prot="public" static="no">
        <name>SYS_DLIST_CONTAINER</name>
        <param><defname>__dn</defname></param>
        <param><defname>__cn</defname></param>
        <param><defname>__n</defname></param>
        <initializer>	((__dn != NULL) ? <ref refid="group__sys-util_1gac5bc561d1bfd1bf68877fe577779bd2f" kindref="member">CONTAINER_OF</ref>(__dn, __typeof__(*__cn), __n) : NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="127" column="9" bodyfile="include/sys/dlist.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__doubly-linked-list__apis_1ga6dc66f3e84d3b79fef461d30b56a0f7c" prot="public" static="no">
        <name>SYS_DLIST_PEEK_HEAD_CONTAINER</name>
        <param><defname>__dl</defname></param>
        <param><defname>__cn</defname></param>
        <param><defname>__n</defname></param>
        <initializer>	<ref refid="group__doubly-linked-list__apis_1ga33a8bf65e8095e3b4dcee0b005b79170" kindref="member">SYS_DLIST_CONTAINER</ref>(<ref refid="group__doubly-linked-list__apis_1ga6fc11e4682311b6b368d849e1e421183" kindref="member">sys_dlist_peek_head</ref>(__dl), __cn, __n)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="136" column="9" bodyfile="include/sys/dlist.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__doubly-linked-list__apis_1gaffb72234c90286ecf382b93d4db50a19" prot="public" static="no">
        <name>SYS_DLIST_PEEK_NEXT_CONTAINER</name>
        <param><defname>__dl</defname></param>
        <param><defname>__cn</defname></param>
        <param><defname>__n</defname></param>
        <initializer>	((__cn != NULL) ? \
	 <ref refid="group__doubly-linked-list__apis_1ga33a8bf65e8095e3b4dcee0b005b79170" kindref="member">SYS_DLIST_CONTAINER</ref>(<ref refid="group__doubly-linked-list__apis_1ga76366019520dc4c2ce2735cf747c1a22" kindref="member">sys_dlist_peek_next</ref>(__dl, &amp;(__cn-&gt;__n)),	\
				      __cn, __n) : NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="146" column="9" bodyfile="include/sys/dlist.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__doubly-linked-list__apis_1gaf9eeb36eef731248c2f57c603feb1b20" prot="public" static="no">
        <name>SYS_DLIST_FOR_EACH_CONTAINER</name>
        <param><defname>__dl</defname></param>
        <param><defname>__cn</defname></param>
        <param><defname>__n</defname></param>
        <initializer>	for (__cn = <ref refid="group__doubly-linked-list__apis_1ga6dc66f3e84d3b79fef461d30b56a0f7c" kindref="member">SYS_DLIST_PEEK_HEAD_CONTAINER</ref>(__dl, __cn, __n);     \
	     __cn != NULL;                                              \
	     __cn = <ref refid="group__doubly-linked-list__apis_1gaffb72234c90286ecf382b93d4db50a19" kindref="member">SYS_DLIST_PEEK_NEXT_CONTAINER</ref>(__dl, __cn, __n))</initializer>
        <briefdescription>
<para>Provide the primitive to iterate on a list under a container Note: the loop is unsafe and thus __cn should not be detached. </para>
        </briefdescription>
        <detaileddescription>
<para>User <emphasis>MUST</emphasis> add the loop statement curly braces enclosing its own code: <verbatim>SYS_DLIST_FOR_EACH_CONTAINER(l, c, n) {
    &lt;user code&gt;
}
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__dl</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer on a sys_dlist_t to iterate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>__cn</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to peek each entry of the list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>__n</parametername>
</parameternamelist>
<parameterdescription>
<para>The field name of sys_dnode_t within the container struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="165" column="9" bodyfile="include/sys/dlist.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__doubly-linked-list__apis_1gaf07e09986c950b0dd1a0c89d4348f858" prot="public" static="no">
        <name>SYS_DLIST_FOR_EACH_CONTAINER_SAFE</name>
        <param><defname>__dl</defname></param>
        <param><defname>__cn</defname></param>
        <param><defname>__cns</defname></param>
        <param><defname>__n</defname></param>
        <initializer>	for (__cn = <ref refid="group__doubly-linked-list__apis_1ga6dc66f3e84d3b79fef461d30b56a0f7c" kindref="member">SYS_DLIST_PEEK_HEAD_CONTAINER</ref>(__dl, __cn, __n),	\
	     __cns = <ref refid="group__doubly-linked-list__apis_1gaffb72234c90286ecf382b93d4db50a19" kindref="member">SYS_DLIST_PEEK_NEXT_CONTAINER</ref>(__dl, __cn, __n);    \
	     __cn != NULL; __cn = __cns,				\
	     __cns = <ref refid="group__doubly-linked-list__apis_1gaffb72234c90286ecf382b93d4db50a19" kindref="member">SYS_DLIST_PEEK_NEXT_CONTAINER</ref>(__dl, __cn, __n))</initializer>
        <briefdescription>
<para>Provide the primitive to safely iterate on a list under a container Note: __cn can be detached, it will not break the loop. </para>
        </briefdescription>
        <detaileddescription>
<para>User <emphasis>MUST</emphasis> add the loop statement curly braces enclosing its own code: <verbatim>SYS_DLIST_FOR_EACH_CONTAINER_SAFE(l, c, cn, n) {
    &lt;user code&gt;
}
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__dl</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer on a sys_dlist_t to iterate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>__cn</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to peek each entry of the list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>__cns</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer for the loop to run safely </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>__n</parametername>
</parameternamelist>
<parameterdescription>
<para>The field name of sys_dnode_t within the container struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="185" column="9" bodyfile="include/sys/dlist.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__doubly-linked-list__apis_1ga3681d4600f9cbd9237ea9ce6f67e508d" prot="public" static="no">
        <name>SYS_DLIST_STATIC_INIT</name>
        <param><defname>ptr_to_list</defname></param>
        <initializer>{ {(ptr_to_list)}, {(ptr_to_list)} }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="203" column="9" bodyfile="include/sys/dlist.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" prot="public" static="no">
        <type>struct _dnode</type>
        <definition>typedef struct _dnode sys_dlist_t</definition>
        <argsstring></argsstring>
        <name>sys_dlist_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="48" column="21" bodyfile="include/sys/dlist.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" prot="public" static="no">
        <type>struct _dnode</type>
        <definition>typedef struct _dnode sys_dnode_t</definition>
        <argsstring></argsstring>
        <name>sys_dnode_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="49" column="21" bodyfile="include/sys/dlist.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__doubly-linked-list__apis_1gaf05dbc7d7250990b971796300aaf6c53" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sys_dlist_init</definition>
        <argsstring>(sys_dlist_t *list)</argsstring>
        <name>sys_dlist_init</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>initialize list to its empty state </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the doubly-linked list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="197" column="20" bodyfile="include/sys/dlist.h" bodystart="197" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1gadf15b39af330221921d24505280e7a32" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sys_dnode_init</definition>
        <argsstring>(sys_dnode_t *node)</argsstring>
        <name>sys_dnode_init</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>initialize node to its state when not in a list </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="211" column="20" bodyfile="include/sys/dlist.h" bodystart="211" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1gac725da0c7e65c126a96a9405af84ca41" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool sys_dnode_is_linked</definition>
        <argsstring>(const sys_dnode_t *node)</argsstring>
        <name>sys_dnode_is_linked</name>
        <param>
          <type>const <ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>check if a node is a member of any list </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if node is linked into a list, false if it is not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="225" column="20" bodyfile="include/sys/dlist.h" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1ga78a2c3d2272ee91578eafbfba3840af4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool sys_dlist_is_head</definition>
        <argsstring>(sys_dlist_t *list, sys_dnode_t *node)</argsstring>
        <name>sys_dlist_is_head</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>check if a node is the list&apos;s head </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the doubly-linked list to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node to check</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if node is the head, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="239" column="20" bodyfile="include/sys/dlist.h" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1ga38b8cad6cd6535c8ddc65d623fa967db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool sys_dlist_is_tail</definition>
        <argsstring>(sys_dlist_t *list, sys_dnode_t *node)</argsstring>
        <name>sys_dlist_is_tail</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>check if a node is the list&apos;s tail </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the doubly-linked list to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node to check</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if node is the tail, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="253" column="20" bodyfile="include/sys/dlist.h" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1gaaa314b62d8d271071d5603075a961766" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool sys_dlist_is_empty</definition>
        <argsstring>(sys_dlist_t *list)</argsstring>
        <name>sys_dlist_is_empty</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>check if the list is empty </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the doubly-linked list to operate on</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if empty, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="266" column="20" bodyfile="include/sys/dlist.h" bodystart="266" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1ga05b1ed491829b98de0200eca523b7829" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool sys_dlist_has_multiple_nodes</definition>
        <argsstring>(sys_dlist_t *list)</argsstring>
        <name>sys_dlist_has_multiple_nodes</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>check if more than one node present </para>
        </briefdescription>
        <detaileddescription>
<para>This and other sys_dlist_*() functions are not thread safe.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the doubly-linked list to operate on</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if multiple nodes, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="281" column="20" bodyfile="include/sys/dlist.h" bodystart="281" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1ga6fc11e4682311b6b368d849e1e421183" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
        <definition>static sys_dnode_t * sys_dlist_peek_head</definition>
        <argsstring>(sys_dlist_t *list)</argsstring>
        <name>sys_dlist_peek_head</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>get a reference to the head item in the list </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the doubly-linked list to operate on</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the head element, NULL if list is empty </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="294" column="27" bodyfile="include/sys/dlist.h" bodystart="294" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1ga7196173f9d59400b52163c2850a22fee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
        <definition>static sys_dnode_t * sys_dlist_peek_head_not_empty</definition>
        <argsstring>(sys_dlist_t *list)</argsstring>
        <name>sys_dlist_peek_head_not_empty</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>get a reference to the head item in the list </para>
        </briefdescription>
        <detaileddescription>
<para>The list must be known to be non-empty.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the doubly-linked list to operate on</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the head element </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="309" column="27" bodyfile="include/sys/dlist.h" bodystart="309" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1ga84863ceb4ef678a9d3500d0e876e6afb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
        <definition>static sys_dnode_t * sys_dlist_peek_next_no_check</definition>
        <argsstring>(sys_dlist_t *list, sys_dnode_t *node)</argsstring>
        <name>sys_dlist_peek_next_no_check</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>get a reference to the next item in the list, node is not NULL </para>
        </briefdescription>
        <detaileddescription>
<para>Faster than <ref refid="group__doubly-linked-list__apis_1ga76366019520dc4c2ce2735cf747c1a22" kindref="member">sys_dlist_peek_next()</ref> if node is known not to be NULL.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the doubly-linked list to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node from which to get the next element in the list</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the next element from a node, NULL if node is the tail </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="325" column="27" bodyfile="include/sys/dlist.h" bodystart="325" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1ga76366019520dc4c2ce2735cf747c1a22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
        <definition>static sys_dnode_t * sys_dlist_peek_next</definition>
        <argsstring>(sys_dlist_t *list, sys_dnode_t *node)</argsstring>
        <name>sys_dlist_peek_next</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>get a reference to the next item in the list </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the doubly-linked list to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node from which to get the next element in the list</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the next element from a node, NULL if node is the tail or NULL (when node comes from reading the head of an empty list). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="341" column="27" bodyfile="include/sys/dlist.h" bodystart="341" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1ga806259b974b7ea6e42feaeab3987f140" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
        <definition>static sys_dnode_t * sys_dlist_peek_prev_no_check</definition>
        <argsstring>(sys_dlist_t *list, sys_dnode_t *node)</argsstring>
        <name>sys_dlist_peek_prev_no_check</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>get a reference to the previous item in the list, node is not NULL </para>
        </briefdescription>
        <detaileddescription>
<para>Faster than <ref refid="group__doubly-linked-list__apis_1ga23b9f6a10a14c08ccf1fbb7d8518fc43" kindref="member">sys_dlist_peek_prev()</ref> if node is known not to be NULL.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the doubly-linked list to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node from which to get the previous element in the list</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the previous element from a node, NULL if node is the tail </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="359" column="27" bodyfile="include/sys/dlist.h" bodystart="359" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1ga23b9f6a10a14c08ccf1fbb7d8518fc43" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
        <definition>static sys_dnode_t * sys_dlist_peek_prev</definition>
        <argsstring>(sys_dlist_t *list, sys_dnode_t *node)</argsstring>
        <name>sys_dlist_peek_prev</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>get a reference to the previous item in the list </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the doubly-linked list to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node from which to get the previous element in the list</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the previous element from a node, NULL if node is the tail or NULL (when node comes from reading the head of an empty list). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="376" column="27" bodyfile="include/sys/dlist.h" bodystart="376" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1gac84d0d3aade5677f7840f51f3c65c095" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
        <definition>static sys_dnode_t * sys_dlist_peek_tail</definition>
        <argsstring>(sys_dlist_t *list)</argsstring>
        <name>sys_dlist_peek_tail</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>get a reference to the tail item in the list </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the doubly-linked list to operate on</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the tail element, NULL if list is empty </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="390" column="27" bodyfile="include/sys/dlist.h" bodystart="390" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1ga119cb342faf37cd4e97e6361c7ecabe3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sys_dlist_append</definition>
        <argsstring>(sys_dlist_t *list, sys_dnode_t *node)</argsstring>
        <name>sys_dlist_append</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>add node to tail of list </para>
        </briefdescription>
        <detaileddescription>
<para>This and other sys_dlist_*() functions are not thread safe.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the doubly-linked list to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the element to append </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="404" column="20" bodyfile="include/sys/dlist.h" bodystart="404" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1ga6f21ba50e0de93f54bfefeaabe0c767f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sys_dlist_prepend</definition>
        <argsstring>(sys_dlist_t *list, sys_dnode_t *node)</argsstring>
        <name>sys_dlist_prepend</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>add node to head of list </para>
        </briefdescription>
        <detaileddescription>
<para>This and other sys_dlist_*() functions are not thread safe.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the doubly-linked list to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the element to append </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="424" column="20" bodyfile="include/sys/dlist.h" bodystart="424" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1ga94987670c6afd5eabeb9957bb065a071" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sys_dlist_insert</definition>
        <argsstring>(sys_dnode_t *successor, sys_dnode_t *node)</argsstring>
        <name>sys_dlist_insert</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
          <declname>successor</declname>
        </param>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Insert a node into a list. </para>
        </briefdescription>
        <detaileddescription>
<para>Insert a node before a specified node in a dlist.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>successor</parametername>
</parameternamelist>
<parameterdescription>
<para>the position before which &quot;node&quot; will be inserted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the element to insert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="443" column="20" bodyfile="include/sys/dlist.h" bodystart="443" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1ga667cee0bdd59d8ca3fc82a5bca2bcd48" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sys_dlist_insert_at</definition>
        <argsstring>(sys_dlist_t *list, sys_dnode_t *node, int(*cond)(sys_dnode_t *node, void *data), void *data)</argsstring>
        <name>sys_dlist_insert_at</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>int(*)(<ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *node, void *<ref refid="test__stack__fail_8c_1a4bb6fa6c719fd9021449009ab8befc04" kindref="member">data</ref>)</type>
          <declname>cond</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>insert node at position </para>
        </briefdescription>
        <detaileddescription>
<para>Insert a node in a location depending on a external condition. The cond() function checks if the node is to be inserted <emphasis>before</emphasis> the current node against which it is checked. This and other sys_dlist_*() functions are not thread safe.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the doubly-linked list to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the element to insert </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond</parametername>
</parameternamelist>
<parameterdescription>
<para>a function that determines if the current node is the correct insert point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter to cond() </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="468" column="20" bodyfile="include/sys/dlist.h" bodystart="468" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1ga06f88befada25820fba01d2019970e4e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sys_dlist_remove</definition>
        <argsstring>(sys_dnode_t *node)</argsstring>
        <name>sys_dlist_remove</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>remove a specific node from a list </para>
        </briefdescription>
        <detaileddescription>
<para>The list is implicit from the node. The node must be part of a list. This and other sys_dlist_*() functions are not thread safe.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the node to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="496" column="20" bodyfile="include/sys/dlist.h" bodystart="496" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="group__doubly-linked-list__apis_1ga3032394541494771f980e7642ecbc287" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref> *</type>
        <definition>static sys_dnode_t * sys_dlist_get</definition>
        <argsstring>(sys_dlist_t *list)</argsstring>
        <name>sys_dlist_get</name>
        <param>
          <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>get the first node in a list </para>
        </briefdescription>
        <detaileddescription>
<para>This and other sys_dlist_*() functions are not thread safe.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the doubly-linked list to operate on</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the first node in the list, NULL if list is empty </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/dlist.h" line="516" column="27" bodyfile="include/sys/dlist.h" bodystart="516" bodyend="526"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Doubly-linked list implementation. </para>
    </briefdescription>
    <detaileddescription>
<para>Doubly-linked list implementation using inline macros/functions. This API is not thread safe, and thus if a list is used across threads, calls to functions must be protected with synchronization primitives.</para>
<para>The lists are expected to be initialized such that both the head and tail pointers point to the list itself. Initializing the lists in such a fashion simplifies the adding and removing of nodes to/from the list. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2013-2015<sp/>Wind<sp/>River<sp/>Systems,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_SYS_DLIST_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_SYS_DLIST_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdbool_8h" kindref="compound">stdbool.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="toolchain_8h" kindref="compound">toolchain.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_dnode<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_dnode<sp/>*head;<sp/></highlight><highlight class="comment">/*<sp/>ptr<sp/>to<sp/>head<sp/>of<sp/>list<sp/>(sys_dlist_t)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_dnode<sp/>*next;<sp/></highlight><highlight class="comment">/*<sp/>ptr<sp/>to<sp/>next<sp/>node<sp/><sp/><sp/><sp/>(sys_dnode_t)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_dnode<sp/>*tail;<sp/></highlight><highlight class="comment">/*<sp/>ptr<sp/>to<sp/>tail<sp/>of<sp/>list<sp/>(sys_dlist_t)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_dnode<sp/>*prev;<sp/></highlight><highlight class="comment">/*<sp/>ptr<sp/>to<sp/>previous<sp/>node<sp/>(sys_dnode_t)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_dnode<sp/><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref>;</highlight></codeline>
<codeline lineno="49" refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_dnode<sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="group__doubly-linked-list__apis_1ga3788b5bbd11acc885e7378800a8cf974" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_DLIST_FOR_EACH_NODE(__dl,<sp/>__dn)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(__dn<sp/>=<sp/>sys_dlist_peek_head(__dl);<sp/>__dn<sp/>!=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__dn<sp/>=<sp/>sys_dlist_peek_next(__dl,<sp/>__dn))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="group__doubly-linked-list__apis_1ga2bda6ba927f32e1d0b71ad63781b9909" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_DLIST_ITERATE_FROM_NODE(__dl,<sp/>__dn)<sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(__dn<sp/>=<sp/>__dn<sp/>?<sp/>sys_dlist_peek_next_no_check(__dl,<sp/>__dn)<sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>sys_dlist_peek_head(__dl);<sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__dn<sp/>!=<sp/>NULL;<sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__dn<sp/>=<sp/>sys_dlist_peek_next(__dl,<sp/>__dn))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="group__doubly-linked-list__apis_1ga21c5c7dc311eaba99f00fb2eeca736d9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_DLIST_FOR_EACH_NODE_SAFE(__dl,<sp/>__dn,<sp/>__dns)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(__dn<sp/>=<sp/>sys_dlist_peek_head(__dl),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__dns<sp/>=<sp/>sys_dlist_peek_next(__dl,<sp/>__dn);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__dn<sp/>!=<sp/>NULL;<sp/>__dn<sp/>=<sp/>__dns,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__dns<sp/>=<sp/>sys_dlist_peek_next(__dl,<sp/>__dn))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Provide<sp/>the<sp/>primitive<sp/>to<sp/>resolve<sp/>the<sp/>container<sp/>of<sp/>a<sp/>list<sp/>node</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>Note:<sp/>it<sp/>is<sp/>safe<sp/>to<sp/>use<sp/>with<sp/>NULL<sp/>pointer<sp/>nodes</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>@param<sp/>__dn<sp/>A<sp/>pointer<sp/>on<sp/>a<sp/>sys_dnode_t<sp/>to<sp/>get<sp/>its<sp/>container</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>@param<sp/>__cn<sp/>Container<sp/>struct<sp/>type<sp/>pointer</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>@param<sp/>__n<sp/>The<sp/>field<sp/>name<sp/>of<sp/>sys_dnode_t<sp/>within<sp/>the<sp/>container<sp/>struct</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="group__doubly-linked-list__apis_1ga33a8bf65e8095e3b4dcee0b005b79170" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_DLIST_CONTAINER(__dn,<sp/>__cn,<sp/>__n)<sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((__dn<sp/>!=<sp/>NULL)<sp/>?<sp/>CONTAINER_OF(__dn,<sp/>__typeof__(*__cn),<sp/>__n)<sp/>:<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Provide<sp/>the<sp/>primitive<sp/>to<sp/>peek<sp/>container<sp/>of<sp/>the<sp/>list<sp/>head</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>@param<sp/>__dl<sp/>A<sp/>pointer<sp/>on<sp/>a<sp/>sys_dlist_t<sp/>to<sp/>peek</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>@param<sp/>__cn<sp/>Container<sp/>struct<sp/>type<sp/>pointer</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>@param<sp/>__n<sp/>The<sp/>field<sp/>name<sp/>of<sp/>sys_dnode_t<sp/>within<sp/>the<sp/>container<sp/>struct</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="group__doubly-linked-list__apis_1ga6dc66f3e84d3b79fef461d30b56a0f7c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_DLIST_PEEK_HEAD_CONTAINER(__dl,<sp/>__cn,<sp/>__n)<sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SYS_DLIST_CONTAINER(sys_dlist_peek_head(__dl),<sp/>__cn,<sp/>__n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Provide<sp/>the<sp/>primitive<sp/>to<sp/>peek<sp/>the<sp/>next<sp/>container</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/>@param<sp/>__dl<sp/>A<sp/>pointer<sp/>on<sp/>a<sp/>sys_dlist_t<sp/>to<sp/>peek</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/>@param<sp/>__cn<sp/>Container<sp/>struct<sp/>type<sp/>pointer</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>@param<sp/>__n<sp/>The<sp/>field<sp/>name<sp/>of<sp/>sys_dnode_t<sp/>within<sp/>the<sp/>container<sp/>struct</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="group__doubly-linked-list__apis_1gaffb72234c90286ecf382b93d4db50a19" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_DLIST_PEEK_NEXT_CONTAINER(__dl,<sp/>__cn,<sp/>__n)<sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((__cn<sp/>!=<sp/>NULL)<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SYS_DLIST_CONTAINER(sys_dlist_peek_next(__dl,<sp/>&amp;(__cn-&gt;__n)),<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__cn,<sp/>__n)<sp/>:<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="group__doubly-linked-list__apis_1gaf9eeb36eef731248c2f57c603feb1b20" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_DLIST_FOR_EACH_CONTAINER(__dl,<sp/>__cn,<sp/>__n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(__cn<sp/>=<sp/>SYS_DLIST_PEEK_HEAD_CONTAINER(__dl,<sp/>__cn,<sp/>__n);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__cn<sp/>!=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__cn<sp/>=<sp/>SYS_DLIST_PEEK_NEXT_CONTAINER(__dl,<sp/>__cn,<sp/>__n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="group__doubly-linked-list__apis_1gaf07e09986c950b0dd1a0c89d4348f858" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_DLIST_FOR_EACH_CONTAINER_SAFE(__dl,<sp/>__cn,<sp/>__cns,<sp/>__n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(__cn<sp/>=<sp/>SYS_DLIST_PEEK_HEAD_CONTAINER(__dl,<sp/>__cn,<sp/>__n),<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__cns<sp/>=<sp/>SYS_DLIST_PEEK_NEXT_CONTAINER(__dl,<sp/>__cn,<sp/>__n);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__cn<sp/>!=<sp/>NULL;<sp/>__cn<sp/>=<sp/>__cns,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__cns<sp/>=<sp/>SYS_DLIST_PEEK_NEXT_CONTAINER(__dl,<sp/>__cn,<sp/>__n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="group__doubly-linked-list__apis_1gaf05dbc7d7250990b971796300aaf6c53" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1gaf05dbc7d7250990b971796300aaf6c53" kindref="member">sys_dlist_init</ref>(<ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/>*list)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;head<sp/>=<sp/>(<ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*)list;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;tail<sp/>=<sp/>(<ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*)list;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="group__doubly-linked-list__apis_1ga3681d4600f9cbd9237ea9ce6f67e508d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_DLIST_STATIC_INIT(ptr_to_list)<sp/>{<sp/>{(ptr_to_list)},<sp/>{(ptr_to_list)}<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="group__doubly-linked-list__apis_1gadf15b39af330221921d24505280e7a32" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1gadf15b39af330221921d24505280e7a32" kindref="member">sys_dnode_init</ref>(<ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*node)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;next<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;prev<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="group__doubly-linked-list__apis_1gac725da0c7e65c126a96a9405af84ca41" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1gac725da0c7e65c126a96a9405af84ca41" kindref="member">sys_dnode_is_linked</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*node)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node-&gt;next<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="group__doubly-linked-list__apis_1ga78a2c3d2272ee91578eafbfba3840af4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga78a2c3d2272ee91578eafbfba3840af4" kindref="member">sys_dlist_is_head</ref>(<ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/>*list,<sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*node)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list-&gt;head<sp/>==<sp/>node;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="group__doubly-linked-list__apis_1ga38b8cad6cd6535c8ddc65d623fa967db" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga38b8cad6cd6535c8ddc65d623fa967db" kindref="member">sys_dlist_is_tail</ref>(<ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/>*list,<sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*node)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list-&gt;tail<sp/>==<sp/>node;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="group__doubly-linked-list__apis_1gaaa314b62d8d271071d5603075a961766" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1gaaa314b62d8d271071d5603075a961766" kindref="member">sys_dlist_is_empty</ref>(<ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/>*list)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list-&gt;head<sp/>==<sp/>list;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="group__doubly-linked-list__apis_1ga05b1ed491829b98de0200eca523b7829" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga05b1ed491829b98de0200eca523b7829" kindref="member">sys_dlist_has_multiple_nodes</ref>(<ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/>*list)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list-&gt;head<sp/>!=<sp/>list-&gt;tail;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="group__doubly-linked-list__apis_1ga6fc11e4682311b6b368d849e1e421183" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*<ref refid="group__doubly-linked-list__apis_1ga6fc11e4682311b6b368d849e1e421183" kindref="member">sys_dlist_peek_head</ref>(<ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/>*list)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1gaaa314b62d8d271071d5603075a961766" kindref="member">sys_dlist_is_empty</ref>(list)<sp/>?<sp/>NULL<sp/>:<sp/>list-&gt;head;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="group__doubly-linked-list__apis_1ga7196173f9d59400b52163c2850a22fee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*<ref refid="group__doubly-linked-list__apis_1ga7196173f9d59400b52163c2850a22fee" kindref="member">sys_dlist_peek_head_not_empty</ref>(<ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/>*list)</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list-&gt;head;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="group__doubly-linked-list__apis_1ga84863ceb4ef678a9d3500d0e876e6afb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*<ref refid="group__doubly-linked-list__apis_1ga84863ceb4ef678a9d3500d0e876e6afb" kindref="member">sys_dlist_peek_next_no_check</ref>(<ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/>*list,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*node)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>list-&gt;tail)<sp/>?<sp/>NULL<sp/>:<sp/>node-&gt;next;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="group__doubly-linked-list__apis_1ga76366019520dc4c2ce2735cf747c1a22" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*<ref refid="group__doubly-linked-list__apis_1ga76366019520dc4c2ce2735cf747c1a22" kindref="member">sys_dlist_peek_next</ref>(<ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/>*list,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*node)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>NULL)<sp/>?<sp/><ref refid="group__doubly-linked-list__apis_1ga84863ceb4ef678a9d3500d0e876e6afb" kindref="member">sys_dlist_peek_next_no_check</ref>(list,<sp/>node)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="group__doubly-linked-list__apis_1ga806259b974b7ea6e42feaeab3987f140" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*<ref refid="group__doubly-linked-list__apis_1ga806259b974b7ea6e42feaeab3987f140" kindref="member">sys_dlist_peek_prev_no_check</ref>(<ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/>*list,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*node)</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>list-&gt;head)<sp/>?<sp/>NULL<sp/>:<sp/>node-&gt;prev;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="group__doubly-linked-list__apis_1ga23b9f6a10a14c08ccf1fbb7d8518fc43" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*<ref refid="group__doubly-linked-list__apis_1ga23b9f6a10a14c08ccf1fbb7d8518fc43" kindref="member">sys_dlist_peek_prev</ref>(<ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/>*list,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*node)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>NULL)<sp/>?<sp/><ref refid="group__doubly-linked-list__apis_1ga806259b974b7ea6e42feaeab3987f140" kindref="member">sys_dlist_peek_prev_no_check</ref>(list,<sp/>node)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="group__doubly-linked-list__apis_1gac84d0d3aade5677f7840f51f3c65c095" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*<ref refid="group__doubly-linked-list__apis_1gac84d0d3aade5677f7840f51f3c65c095" kindref="member">sys_dlist_peek_tail</ref>(<ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/>*list)</highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1gaaa314b62d8d271071d5603075a961766" kindref="member">sys_dlist_is_empty</ref>(list)<sp/>?<sp/>NULL<sp/>:<sp/>list-&gt;tail;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="group__doubly-linked-list__apis_1ga119cb342faf37cd4e97e6361c7ecabe3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga119cb342faf37cd4e97e6361c7ecabe3" kindref="member">sys_dlist_append</ref>(<ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/>*list,<sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*node)</highlight></codeline>
<codeline lineno="405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tail<sp/>=<sp/>list-&gt;tail;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;next<sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;prev<sp/>=<sp/>tail;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tail-&gt;next<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;tail<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="group__doubly-linked-list__apis_1ga6f21ba50e0de93f54bfefeaabe0c767f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga6f21ba50e0de93f54bfefeaabe0c767f" kindref="member">sys_dlist_prepend</ref>(<ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/>*list,<sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*node)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>head<sp/>=<sp/>list-&gt;head;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;next<sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;prev<sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;prev<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;head<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="group__doubly-linked-list__apis_1ga94987670c6afd5eabeb9957bb065a071" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga94987670c6afd5eabeb9957bb065a071" kindref="member">sys_dlist_insert</ref>(<ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*successor,<sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*node)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>prev<sp/>=<sp/>successor-&gt;prev;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;prev<sp/>=<sp/>prev;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;next<sp/>=<sp/>successor;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev-&gt;next<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>successor-&gt;prev<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="group__doubly-linked-list__apis_1ga667cee0bdd59d8ca3fc82a5bca2bcd48" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga667cee0bdd59d8ca3fc82a5bca2bcd48" kindref="member">sys_dlist_insert_at</ref>(<ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/>*list,<sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*node,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*cond)(<ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*node,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__doubly-linked-list__apis_1gaaa314b62d8d271071d5603075a961766" kindref="member">sys_dlist_is_empty</ref>(list))<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1ga119cb342faf37cd4e97e6361c7ecabe3" kindref="member">sys_dlist_append</ref>(list,<sp/>node);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*<ref refid="printk_8c_1a1910d262855b71da353ed0d07a6c7823" kindref="member">pos</ref><sp/>=<sp/><ref refid="group__doubly-linked-list__apis_1ga6fc11e4682311b6b368d849e1e421183" kindref="member">sys_dlist_peek_head</ref>(list);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((<ref refid="printk_8c_1a1910d262855b71da353ed0d07a6c7823" kindref="member">pos</ref><sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(cond(<ref refid="printk_8c_1a1910d262855b71da353ed0d07a6c7823" kindref="member">pos</ref>,<sp/><ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>)<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="printk_8c_1a1910d262855b71da353ed0d07a6c7823" kindref="member">pos</ref><sp/>=<sp/><ref refid="group__doubly-linked-list__apis_1ga76366019520dc4c2ce2735cf747c1a22" kindref="member">sys_dlist_peek_next</ref>(list,<sp/><ref refid="printk_8c_1a1910d262855b71da353ed0d07a6c7823" kindref="member">pos</ref>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="printk_8c_1a1910d262855b71da353ed0d07a6c7823" kindref="member">pos</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1ga94987670c6afd5eabeb9957bb065a071" kindref="member">sys_dlist_insert</ref>(<ref refid="printk_8c_1a1910d262855b71da353ed0d07a6c7823" kindref="member">pos</ref>,<sp/>node);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1ga119cb342faf37cd4e97e6361c7ecabe3" kindref="member">sys_dlist_append</ref>(list,<sp/>node);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="group__doubly-linked-list__apis_1ga06f88befada25820fba01d2019970e4e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga06f88befada25820fba01d2019970e4e" kindref="member">sys_dlist_remove</ref>(<ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*node)</highlight></codeline>
<codeline lineno="497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>prev<sp/>=<sp/>node-&gt;prev;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>next<sp/>=<sp/>node-&gt;next;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev-&gt;next<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next-&gt;prev<sp/>=<sp/>prev;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1gadf15b39af330221921d24505280e7a32" kindref="member">sys_dnode_init</ref>(node);</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="group__doubly-linked-list__apis_1ga3032394541494771f980e7642ecbc287" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*<ref refid="group__doubly-linked-list__apis_1ga3032394541494771f980e7642ecbc287" kindref="member">sys_dlist_get</ref>(<ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref><sp/>*list)</highlight></codeline>
<codeline lineno="517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1ga57fdb936802a617d16c00ab08cd2ad98" kindref="member">sys_dnode_t</ref><sp/>*node<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__doubly-linked-list__apis_1gaaa314b62d8d271071d5603075a961766" kindref="member">sys_dlist_is_empty</ref>(list))<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>list-&gt;head;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__doubly-linked-list__apis_1ga06f88befada25820fba01d2019970e4e" kindref="member">sys_dlist_remove</ref>(node);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_SYS_DLIST_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/sys/dlist.h"/>
  </compounddef>
</doxygen>
