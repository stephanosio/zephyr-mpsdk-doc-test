<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__bt__buf" kind="group">
    <compoundname>bt_buf</compoundname>
    <title>Data buffers</title>
    <innerclass refid="structbt__buf__data" prot="public">bt_buf_data</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__bt__buf_1gafe1539a89ba3389d52d010a071620d7b" prot="public" static="no" strong="no">
        <type></type>
        <name>bt_buf_type</name>
        <enumvalue id="group__bt__buf_1ggafe1539a89ba3389d52d010a071620d7baead9b640992dd72bd90ebd5d1fa3aaf1" prot="public">
          <name>BT_BUF_CMD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>HCI command </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__buf_1ggafe1539a89ba3389d52d010a071620d7ba350a2419b238423e479203a61d45a6e5" prot="public">
          <name>BT_BUF_EVT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>HCI event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__buf_1ggafe1539a89ba3389d52d010a071620d7ba4332d09d0ae276cf48aa550cf2ab4091" prot="public">
          <name>BT_BUF_ACL_OUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Outgoing ACL data </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__buf_1ggafe1539a89ba3389d52d010a071620d7baff31d58d06bf1d330f570bf8f1600c13" prot="public">
          <name>BT_BUF_ACL_IN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Incoming ACL data </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__buf_1ggafe1539a89ba3389d52d010a071620d7ba4137aa547b58a7dbf69ef9c29127fa7e" prot="public">
          <name>BT_BUF_ISO_OUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Outgoing ISO data </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__buf_1ggafe1539a89ba3389d52d010a071620d7badd49c17ef6b2f452c9172fce6f96fb9e" prot="public">
          <name>BT_BUF_ISO_IN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Incoming ISO data </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__buf_1ggafe1539a89ba3389d52d010a071620d7baf9a0d91bbd7c45c285615c6e4d9e5b57" prot="public">
          <name>BT_BUF_H4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>H:4 data </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Possible types of buffers passed around the Bluetooth stack </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="31" column="1" bodyfile="include/bluetooth/buf.h" bodystart="31" bodyend="46"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__buf_1ga4013cce9637f5aa2742d1f1aaa00e7ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
        <definition>struct net_buf * bt_buf_get_rx</definition>
        <argsstring>(enum bt_buf_type type, k_timeout_t timeout)</argsstring>
        <name>bt_buf_get_rx</name>
        <param>
          <type>enum <ref refid="group__bt__buf_1gafe1539a89ba3389d52d010a071620d7b" kindref="member">bt_buf_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate a buffer for incoming data</para>
<para>This will set the buffer type so <ref refid="group__bt__buf_1gaec645aec3d6fb845f214c07f2a864fec" kindref="member">bt_buf_set_type()</ref> does not need to be explicitly called before <ref refid="group__bt__hci__driver_1ga19c61df1660d6049ae6b03afe3554fee" kindref="member">bt_recv_prio()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of buffer. Only BT_BUF_EVT and BT_BUF_ACL_IN are allowed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-negative waiting period to obtain a buffer or one of the special values K_NO_WAIT and K_FOREVER. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="113" column="14" declfile="include/bluetooth/buf.h" declline="113" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__buf_1ga761a31b7fb19f2325b3a9ac6b1fb1700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
        <definition>struct net_buf * bt_buf_get_tx</definition>
        <argsstring>(enum bt_buf_type type, k_timeout_t timeout, const void *data, size_t size)</argsstring>
        <name>bt_buf_get_tx</name>
        <param>
          <type>enum <ref refid="group__bt__buf_1gafe1539a89ba3389d52d010a071620d7b" kindref="member">bt_buf_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate a buffer for outgoing data</para>
<para>This will set the buffer type so <ref refid="group__bt__buf_1gaec645aec3d6fb845f214c07f2a864fec" kindref="member">bt_buf_set_type()</ref> does not need to be explicitly called before <ref refid="group__hci__raw_1ga8de934e01eb9a16a3c9d096151e58313" kindref="member">bt_send()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of buffer. Only BT_BUF_CMD, BT_BUF_ACL_OUT or BT_BUF_H4, when operating on H:4 mode, are allowed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-negative waiting period to obtain a buffer or one of the special values K_NO_WAIT and K_FOREVER. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial data to append to buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial data size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="128" column="14" declfile="include/bluetooth/buf.h" declline="128" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__buf_1ga8d38c64230d8e3b6bc30122f2f40afb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
        <definition>struct net_buf * bt_buf_get_cmd_complete</definition>
        <argsstring>(k_timeout_t timeout)</argsstring>
        <name>bt_buf_get_cmd_complete</name>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate a buffer for an HCI Command Complete/Status Event</para>
<para>This will set the buffer type so <ref refid="group__bt__buf_1gaec645aec3d6fb845f214c07f2a864fec" kindref="member">bt_buf_set_type()</ref> does not need to be explicitly called before <ref refid="group__bt__hci__driver_1ga19c61df1660d6049ae6b03afe3554fee" kindref="member">bt_recv_prio()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-negative waiting period to obtain a buffer or one of the special values K_NO_WAIT and K_FOREVER. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="140" column="14" declfile="include/bluetooth/buf.h" declline="140" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__buf_1ga7b7a19302881dea458fbd2e9e2309b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
        <definition>struct net_buf * bt_buf_get_evt</definition>
        <argsstring>(uint8_t evt, bool discardable, k_timeout_t timeout)</argsstring>
        <name>bt_buf_get_evt</name>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>evt</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>discardable</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate a buffer for an HCI Event</para>
<para>This will set the buffer type so <ref refid="group__bt__buf_1gaec645aec3d6fb845f214c07f2a864fec" kindref="member">bt_buf_set_type()</ref> does not need to be explicitly called before <ref refid="group__bt__hci__driver_1ga19c61df1660d6049ae6b03afe3554fee" kindref="member">bt_recv_prio()</ref> or <ref refid="group__bt__hci__driver_1gaca80bc9dacc4fa44416bd545bd185ef7" kindref="member">bt_recv()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>evt</parametername>
</parameternamelist>
<parameterdescription>
<para>HCI event code </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>discardable</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the driver considers the event discardable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-negative waiting period to obtain a buffer or one of the special values K_NO_WAIT and K_FOREVER. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="153" column="14" declfile="include/bluetooth/buf.h" declline="153" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__buf_1gaec645aec3d6fb845f214c07f2a864fec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void bt_buf_set_type</definition>
        <argsstring>(struct net_buf *buf, enum bt_buf_type type)</argsstring>
        <name>bt_buf_set_type</name>
        <param>
          <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>enum <ref refid="group__bt__buf_1gafe1539a89ba3389d52d010a071620d7b" kindref="member">bt_buf_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the buffer type</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Bluetooth buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The BT_* type to set the buffer to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="160" column="20" bodyfile="include/bluetooth/buf.h" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__buf_1ga2e35f0593e54d28bad62d6b8933f1599" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>enum <ref refid="group__bt__buf_1gafe1539a89ba3389d52d010a071620d7b" kindref="member">bt_buf_type</ref></type>
        <definition>static enum bt_buf_type bt_buf_get_type</definition>
        <argsstring>(struct net_buf *buf)</argsstring>
        <name>bt_buf_get_type</name>
        <param>
          <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the buffer type</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Bluetooth buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The BT_* type to of the buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="171" column="31" bodyfile="include/bluetooth/buf.h" bodystart="171" bodyend="175"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__buf_1ga41f80f3995e79982f704f832394a6bef" prot="public" static="no">
        <name>BT_BUF_RESERVE</name>
        <initializer>CONFIG_BT_HCI_RESERVE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="56" column="10" bodyfile="include/bluetooth/buf.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__buf_1ga9c114a415dc8fc2b84503736b1283468" prot="public" static="no">
        <name>BT_BUF_SIZE</name>
        <param><defname>size</defname></param>
        <initializer>(<ref refid="group__bt__buf_1ga41f80f3995e79982f704f832394a6bef" kindref="member">BT_BUF_RESERVE</ref> + (size))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper to include reserved HCI data in buffer calculations </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="60" column="9" bodyfile="include/bluetooth/buf.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__buf_1ga8f570211d5e391be63bd46c189eac637" prot="public" static="no">
        <name>BT_BUF_ACL_SIZE</name>
        <param><defname>size</defname></param>
        <initializer><ref refid="group__bt__buf_1ga9c114a415dc8fc2b84503736b1283468" kindref="member">BT_BUF_SIZE</ref>(<ref refid="hci_8h_1a7418d845532d6b077a9695454fa65bc5" kindref="member">BT_HCI_ACL_HDR_SIZE</ref> + (size))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper to calculate needed buffer size for HCI ACL packets </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="63" column="9" bodyfile="include/bluetooth/buf.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__buf_1ga098d042ed58592d7c2428967928ee478" prot="public" static="no">
        <name>BT_BUF_EVT_SIZE</name>
        <param><defname>size</defname></param>
        <initializer><ref refid="group__bt__buf_1ga9c114a415dc8fc2b84503736b1283468" kindref="member">BT_BUF_SIZE</ref>(<ref refid="hci_8h_1a0edb7e700cfa557e7fb8ec44f5eea961" kindref="member">BT_HCI_EVT_HDR_SIZE</ref> + (size))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper to calculate needed buffer size for HCI Event packets. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="66" column="9" bodyfile="include/bluetooth/buf.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__buf_1ga9dc9de00be5e8bf673ec60921ea6681b" prot="public" static="no">
        <name>BT_BUF_CMD_SIZE</name>
        <param><defname>size</defname></param>
        <initializer><ref refid="group__bt__buf_1ga9c114a415dc8fc2b84503736b1283468" kindref="member">BT_BUF_SIZE</ref>(<ref refid="hci_8h_1acdf2b6de1459a7492415a8987ad9a896" kindref="member">BT_HCI_CMD_HDR_SIZE</ref> + (size))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper to calculate needed buffer size for HCI Command packets. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="69" column="9" bodyfile="include/bluetooth/buf.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__buf_1gaa820dee05a7202304e1aaa9a36386ca4" prot="public" static="no">
        <name>BT_BUF_ISO_SIZE</name>
        <param><defname>size</defname></param>
        <initializer>					  <ref refid="group__bt__buf_1ga9c114a415dc8fc2b84503736b1283468" kindref="member">BT_BUF_SIZE</ref>(<ref refid="hci_8h_1a75c1f5e8a44b034004ecfebdb75ee4be" kindref="member">BT_HCI_ISO_HDR_SIZE</ref> + \
					  <ref refid="hci_8h_1a0ad84468158c3df92d4dd2fb10771f6e" kindref="member">BT_HCI_ISO_TS_DATA_HDR_SIZE</ref> + \
					  (size))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper to calculate needed buffer size for HCI ISO packets. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="72" column="9" bodyfile="include/bluetooth/buf.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__buf_1ga3ad106326ce13d6eb61d0ac16f592003" prot="public" static="no">
        <name>BT_BUF_ACL_RX_SIZE</name>
        <initializer><ref refid="group__bt__buf_1ga8f570211d5e391be63bd46c189eac637" kindref="member">BT_BUF_ACL_SIZE</ref>(CONFIG_BT_BUF_ACL_RX_SIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Data size needed for HCI ACL RX buffers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="77" column="9" bodyfile="include/bluetooth/buf.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__buf_1gac76caf2a7fce82ba652eab094162ec66" prot="public" static="no">
        <name>BT_BUF_EVT_RX_SIZE</name>
        <initializer><ref refid="group__bt__buf_1ga098d042ed58592d7c2428967928ee478" kindref="member">BT_BUF_EVT_SIZE</ref>(CONFIG_BT_BUF_EVT_RX_SIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Data size needed for HCI Event RX buffers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="80" column="9" bodyfile="include/bluetooth/buf.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__buf_1gae5db5f9f282f9675fe620842e0c50337" prot="public" static="no">
        <name>BT_BUF_ISO_RX_SIZE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="86" column="10" bodyfile="include/bluetooth/buf.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__buf_1gac45f7915fff9516d9d156a42794e8221" prot="public" static="no">
        <name>BT_BUF_ISO_RX_COUNT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="87" column="9" bodyfile="include/bluetooth/buf.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__buf_1ga3e16a5f4c0c9c4c9117d972b7043d82b" prot="public" static="no">
        <name>BT_BUF_RX_SIZE</name>
        <initializer>			    (<ref refid="group__sys-util_1gafa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(<ref refid="group__sys-util_1gafa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(<ref refid="group__bt__buf_1ga3ad106326ce13d6eb61d0ac16f592003" kindref="member">BT_BUF_ACL_RX_SIZE</ref>, <ref refid="group__bt__buf_1gac76caf2a7fce82ba652eab094162ec66" kindref="member">BT_BUF_EVT_RX_SIZE</ref>), \
			    <ref refid="group__bt__buf_1gae5db5f9f282f9675fe620842e0c50337" kindref="member">BT_BUF_ISO_RX_SIZE</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Data size needed for HCI ACL, HCI ISO or Event RX buffers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="91" column="9" bodyfile="include/bluetooth/buf.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__buf_1gaa3ab0861dfd4ebc5f7485f36c1b0fdf1" prot="public" static="no">
        <name>BT_BUF_RX_COUNT</name>
        <initializer>				 (<ref refid="group__sys-util_1gafa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(<ref refid="group__sys-util_1gafa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(CONFIG_BT_BUF_EVT_RX_COUNT, \
				 CONFIG_BT_BUF_ACL_RX_COUNT), \
			     <ref refid="group__bt__buf_1gac45f7915fff9516d9d156a42794e8221" kindref="member">BT_BUF_ISO_RX_COUNT</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buffer count needed for HCI ACL, HCI ISO or Event RX buffers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="95" column="9" bodyfile="include/bluetooth/buf.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__buf_1ga366c2eee5dcc6056430b203d1c020042" prot="public" static="no">
        <name>BT_BUF_CMD_TX_SIZE</name>
        <initializer><ref refid="group__bt__buf_1ga9dc9de00be5e8bf673ec60921ea6681b" kindref="member">BT_BUF_CMD_SIZE</ref>(CONFIG_BT_BUF_CMD_TX_SIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Data size needed for HCI Command buffers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/buf.h" line="100" column="9" bodyfile="include/bluetooth/buf.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Data buffers. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
