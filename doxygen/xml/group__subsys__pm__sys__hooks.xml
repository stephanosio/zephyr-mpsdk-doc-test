<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__subsys__pm__sys__hooks" kind="group">
    <compoundname>subsys_pm_sys_hooks</compoundname>
    <title>Hooks</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__subsys__pm__sys__hooks_1ga02e5f5fa75011aee48c84ed479cd3d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pm_power_state_set</definition>
        <argsstring>(struct pm_state_info info)</argsstring>
        <name>pm_power_state_set</name>
        <param>
          <type>struct <ref refid="structpm__state__info" kindref="compound">pm_state_info</ref></type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Put processor into a power state. </para>
        </briefdescription>
        <detaileddescription>
<para>This function implements the SoC specific details necessary to put the processor into available power states.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Power state which should be used in the ongoing suspend operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/pm/pm.h" line="185" column="6" declfile="include/pm/pm.h" declline="185" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__subsys__pm__sys__hooks_1ga2704992892d76514696d2f9e1b96f4e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pm_power_state_exit_post_ops</definition>
        <argsstring>(struct pm_state_info info)</argsstring>
        <name>pm_power_state_exit_post_ops</name>
        <param>
          <type>struct <ref refid="structpm__state__info" kindref="compound">pm_state_info</ref></type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Do any SoC or architecture specific post ops after sleep state exits. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is a place holder to do any operations that may be needed to be done after sleep state exits. Currently it enables interrupts after resuming from sleep state. In future, the enabling of interrupts may be moved into the kernel.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Power state that the given cpu is leaving. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/pm/pm.h" line="197" column="6" declfile="include/pm/pm.h" declline="197" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>System Power Management Hooks. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
