<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__monochrome__character__framebuffer" kind="group">
    <compoundname>monochrome_character_framebuffer</compoundname>
    <title>Monochrome Character Framebuffer</title>
    <innerclass refid="structcfb__font" prot="public">cfb_font</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__monochrome__character__framebuffer_1ga32e8edb517093dbc1b612a1bef24c7af" prot="public" static="no" strong="no">
        <type></type>
        <name>cfb_display_param</name>
        <enumvalue id="group__monochrome__character__framebuffer_1gga32e8edb517093dbc1b612a1bef24c7afaab99f7b44bcfca4e49a71df82ad3b3e1" prot="public">
          <name>CFB_DISPLAY_HEIGH</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__monochrome__character__framebuffer_1gga32e8edb517093dbc1b612a1bef24c7afae3709eb7028aa574528a7035f5f4f43a" prot="public">
          <name>CFB_DISPLAY_WIDTH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__monochrome__character__framebuffer_1gga32e8edb517093dbc1b612a1bef24c7afa3cc81a52aac17be5f1e3787c20ffe630" prot="public">
          <name>CFB_DISPLAY_PPT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__monochrome__character__framebuffer_1gga32e8edb517093dbc1b612a1bef24c7afa594c2dcc2987ff448e265a18e163d22c" prot="public">
          <name>CFB_DISPLAY_ROWS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__monochrome__character__framebuffer_1gga32e8edb517093dbc1b612a1bef24c7afac64b7d912d7f53ff111a64a96f8d977f" prot="public">
          <name>CFB_DISPLAY_COLS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/cfb.h" line="36" column="1" bodyfile="include/display/cfb.h" bodystart="36" bodyend="42"/>
      </memberdef>
      <memberdef kind="enum" id="group__monochrome__character__framebuffer_1gae98337479a5339d4171797e96313fee5" prot="public" static="no" strong="no">
        <type></type>
        <name>cfb_font_caps</name>
        <enumvalue id="group__monochrome__character__framebuffer_1ggae98337479a5339d4171797e96313fee5a5f679876161e14616d5342806578e3e6" prot="public">
          <name>CFB_FONT_MONO_VPACKED</name>
          <initializer>= BIT(0)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__monochrome__character__framebuffer_1ggae98337479a5339d4171797e96313fee5a36d4664fb2460600d5dbe85a76ac974c" prot="public">
          <name>CFB_FONT_MONO_HPACKED</name>
          <initializer>= BIT(1)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__monochrome__character__framebuffer_1ggae98337479a5339d4171797e96313fee5a837f2231088d93be083dda79095ac82b" prot="public">
          <name>CFB_FONT_MSB_FIRST</name>
          <initializer>= BIT(2)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/cfb.h" line="44" column="1" bodyfile="include/display/cfb.h" bodystart="44" bodyend="48"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__monochrome__character__framebuffer_1gad592bd689241ec67059f29533f314c5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cfb_print</definition>
        <argsstring>(const struct device *dev, char *str, uint16_t x, uint16_t y)</argsstring>
        <name>cfb_print</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Print a string into the framebuffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to device structure for driver instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String to print </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Position in X direction of the beginning of the string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Position in Y direction of the beginning of the string</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative value otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/cfb.h" line="90" column="5" declfile="include/display/cfb.h" declline="90" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__monochrome__character__framebuffer_1gac9a957b5dd6e99377d9c070085df3252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cfb_framebuffer_clear</definition>
        <argsstring>(const struct device *dev, bool clear_display)</argsstring>
        <name>cfb_framebuffer_clear</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>clear_display</declname>
        </param>
        <briefdescription>
<para>Clear framebuffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to device structure for driver instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clear_display</parametername>
</parameternamelist>
<parameterdescription>
<para>Clear the display as well</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative value otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/cfb.h" line="100" column="5" declfile="include/display/cfb.h" declline="100" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__monochrome__character__framebuffer_1ga8e86d48a0c6d951de34089f5d6cf5fb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cfb_framebuffer_invert</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>cfb_framebuffer_invert</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Invert Pixels. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to device structure for driver instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative value otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/cfb.h" line="109" column="5" declfile="include/display/cfb.h" declline="109" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__monochrome__character__framebuffer_1ga9d0b3f63c2b52458ab040993b3c3b97d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cfb_framebuffer_finalize</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>cfb_framebuffer_finalize</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Finalize framebuffer and write it to display RAM, invert or reorder pixels if necessary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to device structure for driver instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative value otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/cfb.h" line="119" column="5" declfile="include/display/cfb.h" declline="119" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__monochrome__character__framebuffer_1gaeb46dfb72c31474c1acbc46d2f08803e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cfb_get_display_parameter</definition>
        <argsstring>(const struct device *dev, enum cfb_display_param)</argsstring>
        <name>cfb_get_display_parameter</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum</type>
          <declname>cfb_display_param</declname>
        </param>
        <briefdescription>
<para>Get display parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to device structure for driver instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cfb_display_param</parametername>
</parameternamelist>
<parameterdescription>
<para>One of the display parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Display parameter value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/cfb.h" line="129" column="5" declfile="include/display/cfb.h" declline="129" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__monochrome__character__framebuffer_1ga29343c61a7a9e28c50cb384ba4f383cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cfb_framebuffer_set_font</definition>
        <argsstring>(const struct device *dev, uint8_t idx)</argsstring>
        <name>cfb_framebuffer_set_font</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Set font. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to device structure for driver instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Font index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative value otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/cfb.h" line="140" column="5" declfile="include/display/cfb.h" declline="140" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__monochrome__character__framebuffer_1ga63ea5f559391ed735da8afa78745e458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cfb_get_font_size</definition>
        <argsstring>(const struct device *dev, uint8_t idx, uint8_t *width, uint8_t *height)</argsstring>
        <name>cfb_get_font_size</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>idx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Get font size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to device structure for driver instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Font index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointers to the variable where the font width will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointers to the variable where the font height will be stored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative value otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/cfb.h" line="152" column="5" declfile="include/display/cfb.h" declline="152" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__monochrome__character__framebuffer_1ga5ef3b84b6169eaef398cf47b3583c827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cfb_get_numof_fonts</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>cfb_get_numof_fonts</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Get number of fonts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to device structure for driver instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of fonts </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/cfb.h" line="162" column="5" declfile="include/display/cfb.h" declline="162" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__monochrome__character__framebuffer_1ga2bbe913d7f0a10b4ba543d83ef6fac95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cfb_framebuffer_init</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>cfb_framebuffer_init</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Initialize Character Framebuffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to device structure for driver instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative value otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/cfb.h" line="171" column="5" declfile="include/display/cfb.h" declline="171" declcolumn="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__monochrome__character__framebuffer_1ga1fe25d7d6b057a40715ad44db7bc9249" prot="public" static="no">
        <name>FONT_ENTRY_DEFINE</name>
        <param><defname>_name</defname></param>
        <param><defname>_width</defname></param>
        <param><defname>_height</defname></param>
        <param><defname>_caps</defname></param>
        <param><defname>_data</defname></param>
        <param><defname>_fc</defname></param>
        <param><defname>_lc</defname></param>
        <initializer>	static const <ref refid="group__iterable__section__apis_1gabed6642b8cc06863ce97dd536698004d" kindref="member">STRUCT_SECTION_ITERABLE</ref>(<ref refid="structcfb__font" kindref="compound">cfb_font</ref>, _name) = {	       \
		.<ref refid="test__stack__fail_8c_1a4bb6fa6c719fd9021449009ab8befc04" kindref="member">data</ref> = _data,						       \
		.caps = _caps,						       \
		.width = _width,					       \
		.height = _height,					       \
		.first_char = _fc,					       \
		.last_char = _lc,					       \
	}</initializer>
        <briefdescription>
<para>Macro for creating a font entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the font entry. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the font in pixels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the font in pixels. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_caps</parametername>
</parameternamelist>
<parameterdescription>
<para>Font capabilities. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw data of the font. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_fc</parametername>
</parameternamelist>
<parameterdescription>
<para>Character mapped to first font element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_lc</parametername>
</parameternamelist>
<parameterdescription>
<para>Character mapped to last font element. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/display/cfb.h" line="70" column="9" bodyfile="include/display/cfb.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Public Monochrome Character Framebuffer API. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
