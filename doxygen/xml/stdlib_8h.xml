<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="stdlib_8h" kind="file" language="C++">
    <compoundname>stdlib.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes refid="limits_8h" local="no">limits.h</includes>
    <includedby refid="uart__mcumgr_8h" local="no">include/drivers/console/uart_mcumgr.h</includedby>
    <includedby refid="uart__pipe_8h" local="no">include/drivers/console/uart_pipe.h</includedby>
    <includedby refid="net_2socket_8h" local="no">include/net/socket.h</includedby>
    <includedby refid="pthread_8h" local="no">include/posix/pthread.h</includedby>
    <includedby refid="mem__protect_2mem__protect_2src_2main_8c" local="no">tests/kernel/mem_protect/mem_protect/src/main.c</includedby>
    <includedby refid="mem__protect_8h" local="no">tests/kernel/mem_protect/mem_protect/src/mem_protect.h</includedby>
    <includedby refid="mem__protect_2protection_2src_2main_8c" local="no">tests/kernel/mem_protect/protection/src/main.c</includedby>
    <includedby refid="mem__protect_2userspace_2src_2main_8c" local="no">tests/kernel/mem_protect/userspace/src/main.c</includedby>
    <includedby refid="timer_2timer__api_2src_2main_8c" local="no">tests/kernel/timer/timer_api/src/main.c</includedby>
    <includedby refid="timer_2timer__error__case_2src_2main_8c" local="no">tests/kernel/timer/timer_error_case/src/main.c</includedby>
    <incdepgraph>
      <node id="3">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="1">
        <label>lib/libc/minimal/include/stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/drivers/console/uart_mcumgr.h</label>
        <link refid="uart__mcumgr_8h"/>
      </node>
      <node id="3">
        <label>include/drivers/console/uart_pipe.h</label>
        <link refid="uart__pipe_8h"/>
      </node>
      <node id="14">
        <label>include/net/sntp.h</label>
        <link refid="sntp_8h"/>
      </node>
      <node id="4">
        <label>include/net/socket.h</label>
        <link refid="net_2socket_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/net/socket_offload.h</label>
        <link refid="socket__offload_8h"/>
      </node>
      <node id="10">
        <label>include/net/socketutils.h</label>
        <link refid="socketutils_8h"/>
      </node>
      <node id="6">
        <label>include/net/tftp.h</label>
        <link refid="tftp_8h"/>
      </node>
      <node id="7">
        <label>include/posix/arpa/inet.h</label>
        <link refid="inet_8h"/>
      </node>
      <node id="8">
        <label>include/posix/net/if.h</label>
        <link refid="if_8h"/>
      </node>
      <node id="9">
        <label>include/posix/netdb.h</label>
        <link refid="netdb_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>include/posix/netinet/in.h</label>
        <link refid="in_8h"/>
      </node>
      <node id="12">
        <label>include/posix/netinet/tcp.h</label>
        <link refid="tcp_8h"/>
      </node>
      <node id="13">
        <label>include/posix/poll.h</label>
        <link refid="poll_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>include/posix/pthread.h</label>
        <link refid="pthread_8h"/>
      </node>
      <node id="15">
        <label>include/posix/sys/socket.h</label>
        <link refid="posix_2sys_2socket_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>lib/libc/minimal/include/stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>tests/kernel/mem_protect/mem_protect/src/inherit.c</label>
        <link refid="inherit_8c"/>
      </node>
      <node id="20">
        <label>tests/kernel/mem_protect/mem_protect/src/kobject.c</label>
        <link refid="kobject_8c"/>
      </node>
      <node id="17">
        <label>tests/kernel/mem_protect/mem_protect/src/main.c</label>
        <link refid="mem__protect_2mem__protect_2src_2main_8c"/>
      </node>
      <node id="21">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_domain.c</label>
        <link refid="mem__domain_8c"/>
      </node>
      <node id="22">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_partition.c</label>
        <link refid="mem__partition_8c"/>
      </node>
      <node id="18">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_protect.h</label>
        <link refid="mem__protect_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>tests/kernel/mem_protect/protection/src/main.c</label>
        <link refid="mem__protect_2protection_2src_2main_8c"/>
      </node>
      <node id="24">
        <label>tests/kernel/mem_protect/userspace/src/main.c</label>
        <link refid="mem__protect_2userspace_2src_2main_8c"/>
      </node>
      <node id="25">
        <label>tests/kernel/timer/timer_api/src/main.c</label>
        <link refid="timer_2timer__api_2src_2main_8c"/>
      </node>
      <node id="26">
        <label>tests/kernel/timer/timer_error_case/src/main.c</label>
        <link refid="timer_2timer__error__case_2src_2main_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="stdlib_8h_1a687984f47d8cce148d1b914d2b79612a" prot="public" static="no">
        <name>EXIT_SUCCESS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="36" column="9" bodyfile="lib/libc/minimal/include/stdlib.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdlib_8h_1a73efe787c131b385070f25d18b7c9aa4" prot="public" static="no">
        <name>EXIT_FAILURE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="37" column="9" bodyfile="lib/libc/minimal/include/stdlib.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stdlib_8h_1a6d257fc3f00865d0556ed7327c312b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> long</type>
        <definition>unsigned long strtoul</definition>
        <argsstring>(const char *nptr, char **endptr, int base)</argsstring>
        <name>strtoul</name>
        <param>
          <type>const char *</type>
          <declname>nptr</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>endptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="19" column="15" declfile="lib/libc/minimal/include/stdlib.h" declline="19" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="stdlib_8h_1a311071298c2fe3e5d7057f396a6acfdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long strtol</definition>
        <argsstring>(const char *nptr, char **endptr, int base)</argsstring>
        <name>strtol</name>
        <param>
          <type>const char *</type>
          <declname>nptr</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>endptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="20" column="6" declfile="lib/libc/minimal/include/stdlib.h" declline="20" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stdlib_8h_1a30670a60464f77af17dfb353353d6df8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int atoi</definition>
        <argsstring>(const char *s)</argsstring>
        <name>atoi</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="21" column="5" declfile="lib/libc/minimal/include/stdlib.h" declline="21" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="stdlib_8h_1a9c36d0fe3ec4675cbffdc9b52f5fb399" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * malloc</definition>
        <argsstring>(size_t size)</argsstring>
        <name>malloc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="23" column="6" declfile="lib/libc/minimal/include/stdlib.h" declline="23" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stdlib_8h_1afbedc913aa4651b3c3b4b3aecd9b4711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>free</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="24" column="6" declfile="lib/libc/minimal/include/stdlib.h" declline="24" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stdlib_8h_1a2807e26a012717736641384f91ab2563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * calloc</definition>
        <argsstring>(size_t nmemb, size_t size)</argsstring>
        <name>calloc</name>
        <param>
          <type>size_t</type>
          <declname>nmemb</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="25" column="6" declfile="lib/libc/minimal/include/stdlib.h" declline="25" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stdlib_8h_1ad28fed1039f35d754710633141b4edf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * realloc</definition>
        <argsstring>(void *ptr, size_t size)</argsstring>
        <name>realloc</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="26" column="6" declfile="lib/libc/minimal/include/stdlib.h" declline="26" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stdlib_8h_1aa34babf7c7883ba6714ac6d010952465" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * reallocarray</definition>
        <argsstring>(void *ptr, size_t nmemb, size_t size)</argsstring>
        <name>reallocarray</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nmemb</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="27" column="6" declfile="lib/libc/minimal/include/stdlib.h" declline="27" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stdlib_8h_1a5edc8d086d2525fdcd63486536cb4d9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * bsearch</definition>
        <argsstring>(const void *key, const void *array, size_t count, size_t size, int(*cmp)(const void *key, const void *element))</argsstring>
        <name>bsearch</name>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int(*)(const void *<ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>, const void *element)</type>
          <declname>cmp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="29" column="6" declfile="lib/libc/minimal/include/stdlib.h" declline="29" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stdlib_8h_1a108744e70f6e2ca952e88277145d5346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void qsort_r</definition>
        <argsstring>(void *base, size_t nmemb, size_t size, int(*compar)(const void *, const void *, void *), void *arg)</argsstring>
        <name>qsort_r</name>
        <param>
          <type>void *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nmemb</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int(*)(const void *, const void *, void *)</type>
          <declname>compar</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="33" column="6" declfile="lib/libc/minimal/include/stdlib.h" declline="33" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stdlib_8h_1af929aa40c441bb81bd806d5b44481af1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void exit</definition>
        <argsstring>(int status)</argsstring>
        <name>exit</name>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="39" column="20" bodyfile="lib/libc/minimal/include/stdlib.h" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="stdlib_8h_1a8dec7c95227ff149687066cf04029191" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void abort</definition>
        <argsstring>(void)</argsstring>
        <name>abort</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="43" column="6" declfile="lib/libc/minimal/include/stdlib.h" declline="43" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stdlib_8h_1ae0743c61576232ed6a443e6269af2b84" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int abs</definition>
        <argsstring>(int __n)</argsstring>
        <name>abs</name>
        <param>
          <type>int</type>
          <declname>__n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="51" column="19" bodyfile="lib/libc/minimal/include/stdlib.h" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="stdlib_8h_1a8f842d6a8002a51ca6930a076ea86549" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long labs</definition>
        <argsstring>(long __n)</argsstring>
        <name>labs</name>
        <param>
          <type>long</type>
          <declname>__n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="56" column="20" bodyfile="lib/libc/minimal/include/stdlib.h" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="stdlib_8h_1a5613b9b7ce990f94ceaaf1f455cc98e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long long</type>
        <definition>static long long llabs</definition>
        <argsstring>(long long __n)</argsstring>
        <name>llabs</name>
        <param>
          <type>long long</type>
          <declname>__n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="61" column="25" bodyfile="lib/libc/minimal/include/stdlib.h" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="stdlib_8h_1a7fa55f3f9cad4c09dad2636efadfea5e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void qsort</definition>
        <argsstring>(void *base, size_t nmemb, size_t size, int(*compar)(const void *, const void *))</argsstring>
        <name>qsort</name>
        <param>
          <type>void *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nmemb</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int(*)(const void *, const void *)</type>
          <declname>compar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/stdlib.h" line="66" column="20" bodyfile="lib/libc/minimal/include/stdlib.h" bodystart="66" bodyend="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>stdlib.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2011-2014<sp/>Wind<sp/>River<sp/>Systems,<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_LIB_LIBC_MINIMAL_INCLUDE_STDLIB_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_LIB_LIBC_MINIMAL_INCLUDE_STDLIB_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="limits_8h" kindref="compound">limits.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="stdlib_8h_1a6d257fc3f00865d0556ed7327c312b55" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="stdlib_8h_1a6d257fc3f00865d0556ed7327c312b55" kindref="member">strtoul</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**endptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="20" refid="stdlib_8h_1a311071298c2fe3e5d7057f396a6acfdc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="stdlib_8h_1a311071298c2fe3e5d7057f396a6acfdc" kindref="member">strtol</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**endptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="21" refid="stdlib_8h_1a30670a60464f77af17dfb353353d6df8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stdlib_8h_1a30670a60464f77af17dfb353353d6df8" kindref="member">atoi</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="asm-macro-32-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="stdlib_8h_1a9c36d0fe3ec4675cbffdc9b52f5fb399" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="stdlib_8h_1a9c36d0fe3ec4675cbffdc9b52f5fb399" kindref="member">malloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="24" refid="stdlib_8h_1afbedc913aa4651b3c3b4b3aecd9b4711" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stdlib_8h_1afbedc913aa4651b3c3b4b3aecd9b4711" kindref="member">free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="printk_8c_1add9af9569af79ec26dd741fb226b38ba" kindref="member">ptr</ref>);</highlight></codeline>
<codeline lineno="25" refid="stdlib_8h_1a2807e26a012717736641384f91ab2563" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="stdlib_8h_1a2807e26a012717736641384f91ab2563" kindref="member">calloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nmemb,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="26" refid="stdlib_8h_1ad28fed1039f35d754710633141b4edf0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="stdlib_8h_1ad28fed1039f35d754710633141b4edf0" kindref="member">realloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="printk_8c_1add9af9569af79ec26dd741fb226b38ba" kindref="member">ptr</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="27" refid="stdlib_8h_1aa34babf7c7883ba6714ac6d010952465" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="stdlib_8h_1aa34babf7c7883ba6714ac6d010952465" kindref="member">reallocarray</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="printk_8c_1add9af9569af79ec26dd741fb226b38ba" kindref="member">ptr</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nmemb,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="stdlib_8h_1a5edc8d086d2525fdcd63486536cb4d9a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="stdlib_8h_1a5edc8d086d2525fdcd63486536cb4d9a" kindref="member">bsearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*array,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*cmp)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*element));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="stdlib_8h_1a108744e70f6e2ca952e88277145d5346" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stdlib_8h_1a108744e70f6e2ca952e88277145d5346" kindref="member">qsort_r</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*base,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nmemb,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*compar)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="stdlib_8h_1a687984f47d8cce148d1b914d2b79612a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXIT_SUCCESS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="stdlib_8h_1a73efe787c131b385070f25d18b7c9aa4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXIT_FAILURE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_exit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status);</highlight></codeline>
<codeline lineno="39" refid="stdlib_8h_1af929aa40c441bb81bd806d5b44481af1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stdlib_8h_1af929aa40c441bb81bd806d5b44481af1" kindref="member">exit</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_exit(status);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43" refid="stdlib_8h_1a8dec7c95227ff149687066cf04029191" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stdlib_8h_1a8dec7c95227ff149687066cf04029191" kindref="member">abort</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_MINIMAL_LIBC_RAND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RAND_MAX<sp/>INT_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rand(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>srand(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_MINIMAL_LIBC_RAND<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="stdlib_8h_1ae0743c61576232ed6a443e6269af2b84" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stdlib_8h_1ae0743c61576232ed6a443e6269af2b84" kindref="member">abs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__n)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(__n<sp/>&lt;<sp/>0)<sp/>?<sp/>-__n<sp/>:<sp/>__n;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="stdlib_8h_1a8f842d6a8002a51ca6930a076ea86549" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="stdlib_8h_1a8f842d6a8002a51ca6930a076ea86549" kindref="member">labs</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__n)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(__n<sp/>&lt;<sp/>0L)<sp/>?<sp/>-__n<sp/>:<sp/>__n;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="stdlib_8h_1a5613b9b7ce990f94ceaaf1f455cc98e6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="stdlib_8h_1a5613b9b7ce990f94ceaaf1f455cc98e6" kindref="member">llabs</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__n)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(__n<sp/>&lt;<sp/>0LL)<sp/>?<sp/>-__n<sp/>:<sp/>__n;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="stdlib_8h_1a7fa55f3f9cad4c09dad2636efadfea5e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stdlib_8h_1a7fa55f3f9cad4c09dad2636efadfea5e" kindref="member">qsort</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*base,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nmemb,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*compar)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*compar3)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdlib_8h_1a108744e70f6e2ca952e88277145d5346" kindref="member">qsort_r</ref>(base,<sp/>nmemb,<sp/>size,<sp/>(compar3)compar,<sp/>NULL);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_LIB_LIBC_MINIMAL_INCLUDE_STDLIB_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="lib/libc/minimal/include/stdlib.h"/>
  </compounddef>
</doxygen>
