<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="ctype_8h" kind="file" language="C++">
    <compoundname>ctype.h</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="ctype_8h_1a05d9ca901946ee2f2078c351163dc015" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int isupper</definition>
        <argsstring>(int a)</argsstring>
        <name>isupper</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/ctype.h" line="16" column="19" bodyfile="lib/libc/minimal/include/ctype.h" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="ctype_8h_1ab208778249f6c2cf8339e187e21e11bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int isalpha</definition>
        <argsstring>(int c)</argsstring>
        <name>isalpha</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/ctype.h" line="21" column="19" bodyfile="lib/libc/minimal/include/ctype.h" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="ctype_8h_1a9318513eb3136e55002d65bf602f74a7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int isspace</definition>
        <argsstring>(int c)</argsstring>
        <name>isspace</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/ctype.h" line="26" column="19" bodyfile="lib/libc/minimal/include/ctype.h" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="ctype_8h_1a825ff84641e11035f0b6aa8f86eacbfd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int isgraph</definition>
        <argsstring>(int c)</argsstring>
        <name>isgraph</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/ctype.h" line="31" column="19" bodyfile="lib/libc/minimal/include/ctype.h" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="ctype_8h_1ab14b97a75cf7392a543f89b5530e0ad7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int isprint</definition>
        <argsstring>(int c)</argsstring>
        <name>isprint</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/ctype.h" line="37" column="19" bodyfile="lib/libc/minimal/include/ctype.h" bodystart="37" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="ctype_8h_1a7c84919af75ed5a47fab36e2fa13775f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int isdigit</definition>
        <argsstring>(int a)</argsstring>
        <name>isdigit</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/ctype.h" line="43" column="19" bodyfile="lib/libc/minimal/include/ctype.h" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="ctype_8h_1a0152b6658f63acfdd96a9409d0142719" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int isxdigit</definition>
        <argsstring>(int a)</argsstring>
        <name>isxdigit</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/ctype.h" line="48" column="19" bodyfile="lib/libc/minimal/include/ctype.h" bodystart="48" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="ctype_8h_1ab5088a2e14096e665c030d72508e2e9d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tolower</definition>
        <argsstring>(int chr)</argsstring>
        <name>tolower</name>
        <param>
          <type>int</type>
          <declname>chr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/ctype.h" line="56" column="19" bodyfile="lib/libc/minimal/include/ctype.h" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="ctype_8h_1abfe63aca83a67be16cf7b8636260b018" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int toupper</definition>
        <argsstring>(int chr)</argsstring>
        <name>toupper</name>
        <param>
          <type>int</type>
          <declname>chr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/ctype.h" line="61" column="19" bodyfile="lib/libc/minimal/include/ctype.h" bodystart="61" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="ctype_8h_1ac4c06d14f1ed4d340b63aaeea1a830af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int isalnum</definition>
        <argsstring>(int chr)</argsstring>
        <name>isalnum</name>
        <param>
          <type>int</type>
          <declname>chr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/ctype.h" line="67" column="19" bodyfile="lib/libc/minimal/include/ctype.h" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="ctype_8h_1a5d4143d99c571ef986ffc4a88df64097" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int iscntrl</definition>
        <argsstring>(int c)</argsstring>
        <name>iscntrl</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libc/minimal/include/ctype.h" line="72" column="19" bodyfile="lib/libc/minimal/include/ctype.h" bodystart="72" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>ctype.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015<sp/>Intel<sp/>Corporation.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_LIB_LIBC_MINIMAL_INCLUDE_CTYPE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_LIB_LIBC_MINIMAL_INCLUDE_CTYPE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="ctype_8h_1a05d9ca901946ee2f2078c351163dc015" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ctype_8h_1a05d9ca901946ee2f2078c351163dc015" kindref="member">isupper</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(((<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref>)(a)-(<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref>)</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">)<sp/>&lt;<sp/>26U);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="ctype_8h_1ab208778249f6c2cf8339e187e21e11bd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ctype_8h_1ab208778249f6c2cf8339e187e21e11bd" kindref="member">isalpha</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="printk_8c_1adc08ed1554f35803d229aeaf11216b3f" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)((((<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref>)<ref refid="printk_8c_1adc08ed1554f35803d229aeaf11216b3f" kindref="member">c</ref>|32u)-(<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref>)</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/>&lt;<sp/>26U);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="ctype_8h_1a9318513eb3136e55002d65bf602f74a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ctype_8h_1a9318513eb3136e55002d65bf602f74a7" kindref="member">isspace</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="printk_8c_1adc08ed1554f35803d229aeaf11216b3f" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(<ref refid="printk_8c_1adc08ed1554f35803d229aeaf11216b3f" kindref="member">c</ref><sp/>==<sp/>(int)</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<ref refid="printk_8c_1adc08ed1554f35803d229aeaf11216b3f" kindref="member">c</ref>-(<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref>)</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">)<sp/>&lt;<sp/>5U);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="ctype_8h_1a825ff84641e11035f0b6aa8f86eacbfd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ctype_8h_1a825ff84641e11035f0b6aa8f86eacbfd" kindref="member">isgraph</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="printk_8c_1adc08ed1554f35803d229aeaf11216b3f" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)((((<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref>)<ref refid="printk_8c_1adc08ed1554f35803d229aeaf11216b3f" kindref="member">c</ref>)<sp/>&gt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<ref refid="printk_8c_1adc08ed1554f35803d229aeaf11216b3f" kindref="member">c</ref>)<sp/>&lt;=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)</highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="ctype_8h_1ab14b97a75cf7392a543f89b5530e0ad7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ctype_8h_1ab14b97a75cf7392a543f89b5530e0ad7" kindref="member">isprint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="printk_8c_1adc08ed1554f35803d229aeaf11216b3f" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)((((<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref>)<ref refid="printk_8c_1adc08ed1554f35803d229aeaf11216b3f" kindref="member">c</ref>)<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<ref refid="printk_8c_1adc08ed1554f35803d229aeaf11216b3f" kindref="member">c</ref>)<sp/>&lt;=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)</highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="ctype_8h_1a7c84919af75ed5a47fab36e2fa13775f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ctype_8h_1a7c84919af75ed5a47fab36e2fa13775f" kindref="member">isdigit</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(((<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref>)(a)-(<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref>)</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;<sp/>10U);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="ctype_8h_1a0152b6658f63acfdd96a9409d0142719" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ctype_8h_1a0152b6658f63acfdd96a9409d0142719" kindref="member">isxdigit</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ua<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)a;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(((ua<sp/>-<sp/>(<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref>)</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;<sp/>10U)<sp/>||</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ua<sp/>|<sp/>32U)<sp/>-<sp/>(<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref>)</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&lt;<sp/>6U));</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="ctype_8h_1ab5088a2e14096e665c030d72508e2e9d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ctype_8h_1ab5088a2e14096e665c030d72508e2e9d" kindref="member">tolower</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chr)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(chr<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>chr<sp/>&lt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>?<sp/>(chr<sp/>+<sp/>32)<sp/>:<sp/>(chr);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="ctype_8h_1abfe63aca83a67be16cf7b8636260b018" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ctype_8h_1abfe63aca83a67be16cf7b8636260b018" kindref="member">toupper</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chr)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)((chr<sp/>&gt;=<sp/>(int)</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>chr<sp/>&lt;=</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)<sp/>?<sp/>(chr<sp/>-<sp/>32)<sp/>:<sp/>(chr));</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="ctype_8h_1ac4c06d14f1ed4d340b63aaeea1a830af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ctype_8h_1ac4c06d14f1ed4d340b63aaeea1a830af" kindref="member">isalnum</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chr)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(<ref refid="ctype_8h_1ab208778249f6c2cf8339e187e21e11bd" kindref="member">isalpha</ref>(chr)<sp/>||<sp/><ref refid="ctype_8h_1a7c84919af75ed5a47fab36e2fa13775f" kindref="member">isdigit</ref>(chr));</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="ctype_8h_1a5d4143d99c571ef986ffc4a88df64097" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ctype_8h_1a5d4143d99c571ef986ffc4a88df64097" kindref="member">iscntrl</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="printk_8c_1adc08ed1554f35803d229aeaf11216b3f" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)((((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<ref refid="printk_8c_1adc08ed1554f35803d229aeaf11216b3f" kindref="member">c</ref>)<sp/>&lt;=<sp/>31U)<sp/>||<sp/>(((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="printk_8c_1adc08ed1554f35803d229aeaf11216b3f" kindref="member">c</ref>)<sp/>==<sp/>127U));</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_LIB_LIBC_MINIMAL_INCLUDE_CTYPE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="lib/libc/minimal/include/ctype.h"/>
  </compounddef>
</doxygen>
