<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="vocs_8h" kind="file" language="C++">
    <compoundname>vocs.h</compoundname>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includedby refid="vcs_8h" local="no">include/bluetooth/audio/vcs.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/bluetooth/audio/vocs.h</label>
        <link refid="vocs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/bluetooth/audio/vcs.h</label>
        <link refid="vcs_8h"/>
      </node>
      <node id="1">
        <label>include/bluetooth/audio/vocs.h</label>
        <link refid="vocs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structbt__vocs__register__param" prot="public">bt_vocs_register_param</innerclass>
    <innerclass refid="structbt__vocs__discover__param" prot="public">bt_vocs_discover_param</innerclass>
    <innerclass refid="structbt__vocs__cb" prot="public">bt_vocs_cb</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__gatt__vocs_1ga17c81394b9b4d601768e72d8c360992f" prot="public" static="no">
        <name>BT_VOCS_ERR_INVALID_COUNTER</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Volume Offset Control Service Error codes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="36" column="9" bodyfile="include/bluetooth/audio/vocs.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__vocs_1gadd01a04e3c4336a13a4760e2448131b1" prot="public" static="no">
        <name>BT_VOCS_ERR_OP_NOT_SUPPORTED</name>
        <initializer>0x81</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="37" column="9" bodyfile="include/bluetooth/audio/vocs.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__vocs_1ga2ecb7e0408bb1767c2d51c816f4b273d" prot="public" static="no">
        <name>BT_VOCS_ERR_OUT_OF_RANGE</name>
        <initializer>0x82</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="38" column="9" bodyfile="include/bluetooth/audio/vocs.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__vocs_1ga64d4e32f9d92a58b3229b3aa2e8fcc4d" prot="public" static="no">
        <name>BT_VOCS_MIN_OFFSET</name>
        <initializer>-255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="40" column="9" bodyfile="include/bluetooth/audio/vocs.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__vocs_1ga800092562173fd37826b5537feaac3ae" prot="public" static="no">
        <name>BT_VOCS_MAX_OFFSET</name>
        <initializer>255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="41" column="9" bodyfile="include/bluetooth/audio/vocs.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__bt__gatt__vocs_1gaa329fd8931add8fd4f6c59b48c91ef75" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_vocs_state_cb) (struct bt_vocs *inst, int err, int16_t offset)</definition>
        <argsstring>)(struct bt_vocs *inst, int err, int16_t offset)</argsstring>
        <name>bt_vocs_state_cb</name>
        <briefdescription>
<para>Callback function for the offset state. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the value is read, or if the value is changed by either the server or client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. For notifications, this will always be 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="136" column="9" bodyfile="include/bluetooth/audio/vocs.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__vocs_1ga2630344190f12f911bb2b01c4b95ded6" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_vocs_set_offset_cb) (struct bt_vocs *inst, int err)</definition>
        <argsstring>)(struct bt_vocs *inst, int err)</argsstring>
        <name>bt_vocs_set_offset_cb</name>
        <briefdescription>
<para>Callback function for setting offset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="145" column="9" bodyfile="include/bluetooth/audio/vocs.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__vocs_1ga84983707e04eae75f18017072b647115" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_vocs_location_cb) (struct bt_vocs *inst, int err, uint32_t location)</definition>
        <argsstring>)(struct bt_vocs *inst, int err, uint32_t location)</argsstring>
        <name>bt_vocs_location_cb</name>
        <briefdescription>
<para>Callback function for the location. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the value is read, or if the value is changed by either the server or client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. For notifications, this will always be 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>The location value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="158" column="9" bodyfile="include/bluetooth/audio/vocs.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__vocs_1gaa351c3ab631b16272e27cbb837d9e49c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_vocs_description_cb) (struct bt_vocs *inst, int err, char *description)</definition>
        <argsstring>)(struct bt_vocs *inst, int err, char *description)</argsstring>
        <name>bt_vocs_description_cb</name>
        <briefdescription>
<para>Callback function for the description. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the value is read, or if the value is changed by either the server or client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. For notifications, this will always be 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>The description as an UTF-8 encoded string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="172" column="9" bodyfile="include/bluetooth/audio/vocs.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__vocs_1gad50fd539190b5c64b5262d3830699365" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_vocs_discover_cb) (struct bt_vocs *inst, int err)</definition>
        <argsstring>)(struct bt_vocs *inst, int err)</argsstring>
        <name>bt_vocs_discover_cb</name>
        <briefdescription>
<para>Callback function for bt_vocs_discover. </para>
        </briefdescription>
        <detaileddescription>
<para>This callback should be overwritten by the primary service that includes the Volume Control Offset Service client, and should thus not be set by the application.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on positive value or errno on negative value. For notifications, this will always be 0. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="187" column="9" bodyfile="include/bluetooth/audio/vocs.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__gatt__vocs_1gadde50c3eb90ea7b7aa9b9c4b3672710f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct bt_vocs *</type>
        <definition>struct bt_vocs * bt_vocs_free_instance_get</definition>
        <argsstring>(void)</argsstring>
        <name>bt_vocs_free_instance_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get a free service instance of Volume Offset Control Service from the pool. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Volume Offset Control Service instance in case of success or NULL in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="88" column="14" declfile="include/bluetooth/audio/vocs.h" declline="88" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vocs_1ga9f7ff4c0521686ded011758ddd8ea95e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * bt_vocs_svc_decl_get</definition>
        <argsstring>(struct bt_vocs *vocs)</argsstring>
        <name>bt_vocs_svc_decl_get</name>
        <param>
          <type>struct bt_vocs *</type>
          <declname>vocs</declname>
        </param>
        <briefdescription>
<para>Get the service declaration attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>The first service attribute returned can be included in any other GATT service.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vocs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Offset Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the attributes of the service. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="99" column="6" declfile="include/bluetooth/audio/vocs.h" declline="99" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vocs_1gafcf7ecea73c8c199b38c7291ce4a648f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vocs_client_conn_get</definition>
        <argsstring>(const struct bt_vocs *vocs, struct bt_conn **conn)</argsstring>
        <name>bt_vocs_client_conn_get</name>
        <param>
          <type>const struct bt_vocs *</type>
          <declname>vocs</declname>
        </param>
        <param>
          <type>struct bt_conn **</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Get the connection pointer of a client instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the Bluetooth connection pointer of a Audio Input Control Service client instance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vocs</parametername>
</parameternamelist>
<parameterdescription>
<para>Audio Input Control Service client instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="112" column="5" declfile="include/bluetooth/audio/vocs.h" declline="112" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vocs_1gac011ddd93bb3240148a789f1ee9ef7da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vocs_register</definition>
        <argsstring>(struct bt_vocs *vocs, const struct bt_vocs_register_param *param)</argsstring>
        <name>bt_vocs_register</name>
        <param>
          <type>struct bt_vocs *</type>
          <declname>vocs</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__vocs__register__param" kindref="compound">bt_vocs_register_param</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Register the Volume Offset Control Service instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vocs</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Offset Control Service instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume Offset Control Service register parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="122" column="5" declfile="include/bluetooth/audio/vocs.h" declline="122" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vocs_1ga6c835234a5530bae3bb0f5bd03a0bdd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vocs_state_get</definition>
        <argsstring>(struct bt_vocs *inst)</argsstring>
        <name>bt_vocs_state_get</name>
        <param>
          <type>struct bt_vocs *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Volume Offset Control Service offset state. </para>
        </briefdescription>
        <detaileddescription>
<para>The value is returned in the <ref refid="structbt__vocs__cb_1ae633c1f6cd8aa03d89287e783179460e" kindref="member">bt_vocs_cb.state</ref> callback.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Volume Offset Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="210" column="5" declfile="include/bluetooth/audio/vocs.h" declline="210" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vocs_1ga28ea337e439b5872abab8f5b98719da4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vocs_state_set</definition>
        <argsstring>(struct bt_vocs *inst, int16_t offset)</argsstring>
        <name>bt_vocs_state_set</name>
        <param>
          <type>struct bt_vocs *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1afe270aee8d96ad7f279a4020b9d58bdf" kindref="member">int16_t</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Set the Volume Offset Control Service offset state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Volume Offset Control Service instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset to set (-255 to 255).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="220" column="5" declfile="include/bluetooth/audio/vocs.h" declline="220" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vocs_1ga90ba394e6be138d6052b95d73ab2f409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vocs_location_get</definition>
        <argsstring>(struct bt_vocs *inst)</argsstring>
        <name>bt_vocs_location_get</name>
        <param>
          <type>struct bt_vocs *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Volume Offset Control Service location. </para>
        </briefdescription>
        <detaileddescription>
<para>The value is returned in the <ref refid="structbt__vocs__cb_1a50d1d429089456267b06d4450712b897" kindref="member">bt_vocs_cb.location</ref> callback.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Volume Offset Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="231" column="5" declfile="include/bluetooth/audio/vocs.h" declline="231" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vocs_1ga02b036f060eee947c8924bbea846bc29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vocs_location_set</definition>
        <argsstring>(struct bt_vocs *inst, uint32_t location)</argsstring>
        <name>bt_vocs_location_set</name>
        <param>
          <type>struct bt_vocs *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>location</declname>
        </param>
        <briefdescription>
<para>Set the Volume Offset Control Service location. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Volume Offset Control Service instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>The location to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="241" column="5" declfile="include/bluetooth/audio/vocs.h" declline="241" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vocs_1gaac1c1292cae4c5845a376d2f4db3d661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vocs_description_get</definition>
        <argsstring>(struct bt_vocs *inst)</argsstring>
        <name>bt_vocs_description_get</name>
        <param>
          <type>struct bt_vocs *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Volume Offset Control Service output description. </para>
        </briefdescription>
        <detaileddescription>
<para>The value is returned in the <ref refid="structbt__vocs__cb_1ac508b1e6dda00c607aa1cbe52423ec52" kindref="member">bt_vocs_cb.description</ref> callback.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Volume Offset Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="252" column="5" declfile="include/bluetooth/audio/vocs.h" declline="252" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vocs_1gac17cb7101233605834ec6b66d7417f91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vocs_description_set</definition>
        <argsstring>(struct bt_vocs *inst, const char *description)</argsstring>
        <name>bt_vocs_description_set</name>
        <param>
          <type>struct bt_vocs *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>description</declname>
        </param>
        <briefdescription>
<para>Set the Volume Offset Control Service description. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Volume Offset Control Service instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>The UTF-8 encoded string description to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="262" column="5" declfile="include/bluetooth/audio/vocs.h" declline="262" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vocs_1gaace802556eca3d634a13dd8f2bf3c544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bt_vocs_client_cb_register</definition>
        <argsstring>(struct bt_vocs *inst, struct bt_vocs_cb *cb)</argsstring>
        <name>bt_vocs_client_cb_register</name>
        <param>
          <type>struct bt_vocs *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__vocs__cb" kindref="compound">bt_vocs_cb</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Registers the callbacks for the Volume Offset Control Service client. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Volume Offset Control Service client instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the callback structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="270" column="6" declfile="include/bluetooth/audio/vocs.h" declline="270" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vocs_1ga6182120b1bece7f5851bb6295c81b562" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct bt_vocs *</type>
        <definition>struct bt_vocs * bt_vocs_client_free_instance_get</definition>
        <argsstring>(void)</argsstring>
        <name>bt_vocs_client_free_instance_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns a pointer to a Volume Offset Control Service client instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to the instance, or NULL if no free instances are left. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="277" column="14" declfile="include/bluetooth/audio/vocs.h" declline="277" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__vocs_1ga45efa872e07ac8051379caf5aa8d0133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_vocs_discover</definition>
        <argsstring>(struct bt_conn *conn, struct bt_vocs *inst, const struct bt_vocs_discover_param *param)</argsstring>
        <name>bt_vocs_discover</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct bt_vocs *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__vocs__discover__param" kindref="compound">bt_vocs_discover_param</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Discover a Volume Offset Control Service. </para>
        </briefdescription>
        <detaileddescription>
<para>Attempts to discover a Volume Offset Control Service on a server given the <computeroutput>param</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer with the Volume Offset Control Service. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Volume Offset Control Service client instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, errno on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/vocs.h" line="290" column="5" declfile="include/bluetooth/audio/vocs.h" declline="290" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_BLUETOOTH_SERVICES_VOCS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_BLUETOOTH_SERVICES_VOCS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="group__bt__gatt__vocs_1ga17c81394b9b4d601768e72d8c360992f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_VOCS_ERR_INVALID_COUNTER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="group__bt__gatt__vocs_1gadd01a04e3c4336a13a4760e2448131b1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_VOCS_ERR_OP_NOT_SUPPORTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x81</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="group__bt__gatt__vocs_1ga2ecb7e0408bb1767c2d51c816f4b273d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_VOCS_ERR_OUT_OF_RANGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x82</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="group__bt__gatt__vocs_1ga64d4e32f9d92a58b3229b3aa2e8fcc4d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_VOCS_MIN_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="group__bt__gatt__vocs_1ga800092562173fd37826b5537feaac3ae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_VOCS_MAX_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_vocs;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structbt__vocs__register__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__vocs__register__param" kindref="compound">bt_vocs_register_param</ref><sp/>{</highlight></codeline>
<codeline lineno="49" refid="structbt__vocs__register__param_1a0572c60319c8984e2437e596584c46f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structbt__vocs__register__param_1a0572c60319c8984e2437e596584c46f5" kindref="member">location</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structbt__vocs__register__param_1a6919f965abfa1fec39a3c8e0f29c04f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structbt__vocs__register__param_1a6919f965abfa1fec39a3c8e0f29c04f3" kindref="member">location_writable</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structbt__vocs__register__param_1ac1c2475cd390f5acf840f92ea45c6d31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1afe270aee8d96ad7f279a4020b9d58bdf" kindref="member">int16_t</ref><sp/><ref refid="structbt__vocs__register__param_1ac1c2475cd390f5acf840f92ea45c6d31" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structbt__vocs__register__param_1a1f6baed09dc35b974d06f1426b671e05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbt__vocs__register__param_1a1f6baed09dc35b974d06f1426b671e05" kindref="member">output_desc</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structbt__vocs__register__param_1aace5987e890c8b4dbf3e01fa5c2a4432" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structbt__vocs__register__param_1aace5987e890c8b4dbf3e01fa5c2a4432" kindref="member">desc_writable</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="structbt__vocs__register__param_1a306ad3c712bb5a5109f3afb4912d590b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__vocs__cb" kindref="compound">bt_vocs_cb</ref><sp/>*<ref refid="structbt__vocs__register__param_1a306ad3c712bb5a5109f3afb4912d590b" kindref="member">cb</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structbt__vocs__discover__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__vocs__discover__param" kindref="compound">bt_vocs_discover_param</ref><sp/>{</highlight></codeline>
<codeline lineno="74" refid="structbt__vocs__discover__param_1aca830a50436def0f422d05eba34273ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structbt__vocs__discover__param_1aca830a50436def0f422d05eba34273ed" kindref="member">start_handle</ref>;</highlight></codeline>
<codeline lineno="80" refid="structbt__vocs__discover__param_1a3811da3035bb1f0ff5d290eb60fb2fda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structbt__vocs__discover__param_1a3811da3035bb1f0ff5d290eb60fb2fda" kindref="member">end_handle</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="group__bt__gatt__vocs_1gadde50c3eb90ea7b7aa9b9c4b3672710f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_vocs<sp/>*<ref refid="group__bt__gatt__vocs_1gadde50c3eb90ea7b7aa9b9c4b3672710f" kindref="member">bt_vocs_free_instance_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="group__bt__gatt__vocs_1ga9f7ff4c0521686ded011758ddd8ea95e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__bt__gatt__vocs_1ga9f7ff4c0521686ded011758ddd8ea95e" kindref="member">bt_vocs_svc_decl_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*vocs);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="group__bt__gatt__vocs_1gafcf7ecea73c8c199b38c7291ce4a648f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vocs_1gafcf7ecea73c8c199b38c7291ce4a648f" kindref="member">bt_vocs_client_conn_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*vocs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_conn<sp/>**conn);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="group__bt__gatt__vocs_1gac011ddd93bb3240148a789f1ee9ef7da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vocs_1gac011ddd93bb3240148a789f1ee9ef7da" kindref="member">bt_vocs_register</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*vocs,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__vocs__register__param" kindref="compound">bt_vocs_register_param</ref><sp/>*param);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="group__bt__gatt__vocs_1gaa329fd8931add8fd4f6c59b48c91ef75" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__gatt__vocs_1gaa329fd8931add8fd4f6c59b48c91ef75" kindref="member">bt_vocs_state_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_vocs<sp/>*inst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err,<sp/><ref refid="stdint_8h_1afe270aee8d96ad7f279a4020b9d58bdf" kindref="member">int16_t</ref><sp/>offset);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="group__bt__gatt__vocs_1ga2630344190f12f911bb2b01c4b95ded6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__gatt__vocs_1ga2630344190f12f911bb2b01c4b95ded6" kindref="member">bt_vocs_set_offset_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_vocs<sp/>*inst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="group__bt__gatt__vocs_1ga84983707e04eae75f18017072b647115" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__gatt__vocs_1ga84983707e04eae75f18017072b647115" kindref="member">bt_vocs_location_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_vocs<sp/>*inst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>location);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="group__bt__gatt__vocs_1gaa351c3ab631b16272e27cbb837d9e49c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__gatt__vocs_1gaa351c3ab631b16272e27cbb837d9e49c" kindref="member">bt_vocs_description_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_vocs<sp/>*inst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*description);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="group__bt__gatt__vocs_1gad50fd539190b5c64b5262d3830699365" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__gatt__vocs_1gad50fd539190b5c64b5262d3830699365" kindref="member">bt_vocs_discover_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_vocs<sp/>*inst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="structbt__vocs__cb" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__vocs__cb" kindref="compound">bt_vocs_cb</ref><sp/>{</highlight></codeline>
<codeline lineno="190" refid="structbt__vocs__cb_1ae633c1f6cd8aa03d89287e783179460e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__vocs_1gaa329fd8931add8fd4f6c59b48c91ef75" kindref="member">bt_vocs_state_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__vocs__cb_1ae633c1f6cd8aa03d89287e783179460e" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="191" refid="structbt__vocs__cb_1a50d1d429089456267b06d4450712b897" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__vocs_1ga84983707e04eae75f18017072b647115" kindref="member">bt_vocs_location_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__vocs__cb_1a50d1d429089456267b06d4450712b897" kindref="member">location</ref>;</highlight></codeline>
<codeline lineno="192" refid="structbt__vocs__cb_1ac508b1e6dda00c607aa1cbe52423ec52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__vocs_1gaa351c3ab631b16272e27cbb837d9e49c" kindref="member">bt_vocs_description_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__vocs__cb_1ac508b1e6dda00c607aa1cbe52423ec52" kindref="member">description</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_BT_VOCS_CLIENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Client<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__vocs_1gad50fd539190b5c64b5262d3830699365" kindref="member">bt_vocs_discover_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discover;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__vocs_1ga2630344190f12f911bb2b01c4b95ded6" kindref="member">bt_vocs_set_offset_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_offset;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_BT_VOCS_CLIENT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="group__bt__gatt__vocs_1ga6c835234a5530bae3bb0f5bd03a0bdd7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vocs_1ga6c835234a5530bae3bb0f5bd03a0bdd7" kindref="member">bt_vocs_state_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*inst);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="group__bt__gatt__vocs_1ga28ea337e439b5872abab8f5b98719da4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vocs_1ga28ea337e439b5872abab8f5b98719da4" kindref="member">bt_vocs_state_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*inst,<sp/><ref refid="stdint_8h_1afe270aee8d96ad7f279a4020b9d58bdf" kindref="member">int16_t</ref><sp/>offset);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="group__bt__gatt__vocs_1ga90ba394e6be138d6052b95d73ab2f409" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vocs_1ga90ba394e6be138d6052b95d73ab2f409" kindref="member">bt_vocs_location_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*inst);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="group__bt__gatt__vocs_1ga02b036f060eee947c8924bbea846bc29" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vocs_1ga02b036f060eee947c8924bbea846bc29" kindref="member">bt_vocs_location_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*inst,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>location);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="group__bt__gatt__vocs_1gaac1c1292cae4c5845a376d2f4db3d661" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vocs_1gaac1c1292cae4c5845a376d2f4db3d661" kindref="member">bt_vocs_description_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*inst);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="group__bt__gatt__vocs_1gac17cb7101233605834ec6b66d7417f91" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vocs_1gac17cb7101233605834ec6b66d7417f91" kindref="member">bt_vocs_description_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*inst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*description);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="group__bt__gatt__vocs_1gaace802556eca3d634a13dd8f2bf3c544" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vocs_1gaace802556eca3d634a13dd8f2bf3c544" kindref="member">bt_vocs_client_cb_register</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*inst,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__vocs__cb" kindref="compound">bt_vocs_cb</ref><sp/>*cb);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="group__bt__gatt__vocs_1ga6182120b1bece7f5851bb6295c81b562" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_vocs<sp/>*<ref refid="group__bt__gatt__vocs_1ga6182120b1bece7f5851bb6295c81b562" kindref="member">bt_vocs_client_free_instance_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="group__bt__gatt__vocs_1ga45efa872e07ac8051379caf5aa8d0133" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__vocs_1ga45efa872e07ac8051379caf5aa8d0133" kindref="member">bt_vocs_discover</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_conn<sp/>*conn,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_vocs<sp/>*inst,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__vocs__discover__param" kindref="compound">bt_vocs_discover_param</ref><sp/>*param);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_BLUETOOTH_SERVICES_VOCS_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/bluetooth/audio/vocs.h"/>
  </compounddef>
</doxygen>
