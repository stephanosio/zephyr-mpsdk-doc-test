<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structppp__api" kind="struct" language="C++" prot="public">
    <compoundname>ppp_api</compoundname>
    <includes refid="ppp_8h" local="no">ppp.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structppp__api_1acc4e82fbaa8b933040b0a77da8a3cae0" prot="public" static="no" mutable="no">
        <type>struct net_if_api</type>
        <definition>struct net_if_api ppp_api::iface_api</definition>
        <argsstring></argsstring>
        <name>iface_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The net_if_api must be placed in first position in this struct so that we are compatible with network interface API. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="45" column="17" bodyfile="include/net/ppp.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structppp__api_1ab85010475c4f03a48ad7629ed4947626" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* ppp_api::start) (const struct device *dev)</definition>
        <argsstring>)(const struct device *dev)</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start the device </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="48" column="1" bodyfile="include/net/ppp.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structppp__api_1a42576f1d58920f48a0d0adf888f99006" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* ppp_api::stop) (const struct device *dev)</definition>
        <argsstring>)(const struct device *dev)</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop the device </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="51" column="1" bodyfile="include/net/ppp.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structppp__api_1aa0ec35e57f22674ef06f8cc3bc09987f" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* ppp_api::send) (const struct device *dev, struct net_pkt *pkt)</definition>
        <argsstring>)(const struct device *dev, struct net_pkt *pkt)</argsstring>
        <name>send</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a network packet </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/ppp.h" line="54" column="1" bodyfile="include/net/ppp.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>PPP L2 API </para>
    </detaileddescription>
    <location file="include/net/ppp.h" line="40" column="1" bodyfile="include/net/ppp.h" bodystart="40" bodyend="63"/>
    <listofallmembers>
      <member refid="structppp__api_1acc4e82fbaa8b933040b0a77da8a3cae0" prot="public" virt="non-virtual"><scope>ppp_api</scope><name>iface_api</name></member>
      <member refid="structppp__api_1aa0ec35e57f22674ef06f8cc3bc09987f" prot="public" virt="non-virtual"><scope>ppp_api</scope><name>send</name></member>
      <member refid="structppp__api_1ab85010475c4f03a48ad7629ed4947626" prot="public" virt="non-virtual"><scope>ppp_api</scope><name>start</name></member>
      <member refid="structppp__api_1a42576f1d58920f48a0d0adf888f99006" prot="public" virt="non-virtual"><scope>ppp_api</scope><name>stop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
