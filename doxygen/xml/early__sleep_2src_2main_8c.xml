<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="early__sleep_2src_2main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes refid="init_8h" local="no">init.h</includes>
    <includes local="no">arch/cpu.h</includes>
    <includes local="no">sys_clock.h</includes>
    <includes refid="stdbool_8h" local="no">stdbool.h</includes>
    <includes local="no">tc_util.h</includes>
    <includes refid="ztest_8h" local="no">ztest.h</includes>
    <incdepgraph>
      <node id="73">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="39">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="38">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="78">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="85">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="87">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="83">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="81">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="89">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="90">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="86">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="84">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="88">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="48">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="4">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="22">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="77">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="24">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="14">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="3">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="75">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="59">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="61">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="13">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="8">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="68">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="37">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="62">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="54">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="65">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="71">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/early_sleep/src/main.c</label>
        <link refid="early__sleep_2src_2main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>alloca.h</label>
      </node>
      <node id="41">
        <label>arch/cpu.h</label>
      </node>
      <node id="80">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="79">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="60">
        <label>kernel.h</label>
      </node>
      <node id="20">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="63">
        <label>sys_clock.h</label>
      </node>
      <node id="57">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="91">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="64">
        <label>tc_util.h</label>
      </node>
      <node id="66">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="early__sleep_2src_2main_8c_1af9a5d6addf893be0502ae41f52e794b2" prot="public" static="no">
        <name>THREAD_STACK</name>
        <initializer>(384 + CONFIG_TEST_EXTRA_STACKSIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="34" column="9" bodyfile="tests/kernel/early_sleep/src/main.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="early__sleep_2src_2main_8c_1a3ea9aa451559f29e07f8716031b54b19" prot="public" static="no">
        <name>TEST_TICKS_TO_SLEEP</name>
        <initializer>(<ref refid="ztest_8h_1a5b30ac02803b92fea0759730f33b9e35" kindref="member">CONFIG_SYS_CLOCK_TICKS_PER_SEC</ref> / 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="36" column="9" bodyfile="tests/kernel/early_sleep/src/main.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="early__sleep_2src_2main_8c_1a2e0190ea60ed3575663df100d7e7b98d" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread helper_tdata</definition>
        <argsstring></argsstring>
        <name>helper_tdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="40" column="22" bodyfile="tests/kernel/early_sleep/src/main.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="early__sleep_2src_2main_8c_1aa40978d8c387be39062d23f6fa94ce11" prot="public" static="yes" mutable="no">
        <type><ref refid="kernel_2thread_8h_1a6379f5a1f19ffbc262a6877c4f6e3647" kindref="member">k_tid_t</ref></type>
        <definition>k_tid_t helper_ttid</definition>
        <argsstring></argsstring>
        <name>helper_ttid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="41" column="17" bodyfile="tests/kernel/early_sleep/src/main.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="early__sleep_2src_2main_8c_1a5ae5f205bbc94e428d2667cf1ca91ba3" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int actual_sleep_ticks</definition>
        <argsstring></argsstring>
        <name>actual_sleep_ticks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="44" column="12" bodyfile="tests/kernel/early_sleep/src/main.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="early__sleep_2src_2main_8c_1a6cc7548959fbc6dd36cf2104c4cbca68" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int actual_post_kernel_sleep_ticks</definition>
        <argsstring></argsstring>
        <name>actual_post_kernel_sleep_ticks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="45" column="12" bodyfile="tests/kernel/early_sleep/src/main.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="early__sleep_2src_2main_8c_1aad376faa9f778381ca12d75ed1dacdc3" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int actual_app_sleep_ticks</definition>
        <argsstring></argsstring>
        <name>actual_app_sleep_ticks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="46" column="12" bodyfile="tests/kernel/early_sleep/src/main.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="early__sleep_2src_2main_8c_1a37970110dd218c375ca17ef788223686" prot="public" static="yes" mutable="no">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool test_failure</definition>
        <argsstring></argsstring>
        <name>test_failure</name>
        <initializer>= <ref refid="stdbool_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="48" column="13" bodyfile="tests/kernel/early_sleep/src/main.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="early__sleep_2src_2main_8c_1a9b0828430bdc0a990e498b19b7883ef9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_DEFINE</definition>
        <argsstring>(helper_tstack,(384+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>helper_tstack</type>
        </param>
        <param>
          <type>(384+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="39" column="8" declfile="tests/kernel/early_sleep/src/main.c" declline="39" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="early__sleep_2src_2main_8c_1a444655b46a733d8e0ef18dc69cb15773" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void helper_thread</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>helper_thread</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="50" column="13" bodyfile="tests/kernel/early_sleep/src/main.c" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="early__sleep_2src_2main_8c_1aa96b5ca1278818bd0c64fb9d314ceb9f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ticks_to_sleep</definition>
        <argsstring>(int ticks)</argsstring>
        <name>ticks_to_sleep</name>
        <param>
          <type>int</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="55" column="12" bodyfile="tests/kernel/early_sleep/src/main.c" bodystart="55" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="early__sleep_2src_2main_8c_1ab5344c2783084fa8710d636f65d996aa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int test_early_sleep_post_kernel</definition>
        <argsstring>(const struct device *unused)</argsstring>
        <name>test_early_sleep_post_kernel</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>unused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="68" column="12" bodyfile="tests/kernel/early_sleep/src/main.c" bodystart="68" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="early__sleep_2src_2main_8c_1a687c1f0b2610a3676bd1c096485e1879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SYS_INIT</definition>
        <argsstring>(test_early_sleep_post_kernel, POST_KERNEL, CONFIG_KERNEL_INIT_PRIORITY_DEVICE)</argsstring>
        <name>SYS_INIT</name>
        <param>
          <type><ref refid="early__sleep_2src_2main_8c_1ab5344c2783084fa8710d636f65d996aa" kindref="member">test_early_sleep_post_kernel</ref></type>
        </param>
        <param>
          <type>POST_KERNEL</type>
        </param>
        <param>
          <type>CONFIG_KERNEL_INIT_PRIORITY_DEVICE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="75" column="1" declfile="tests/kernel/early_sleep/src/main.c" declline="75" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="early__sleep_2src_2main_8c_1a8851c0f103aba021730997f48c8f1f35" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int test_early_sleep_app</definition>
        <argsstring>(const struct device *unused)</argsstring>
        <name>test_early_sleep_app</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>unused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="78" column="12" bodyfile="tests/kernel/early_sleep/src/main.c" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="early__sleep_2src_2main_8c_1a080adab9e7b88edfe90c6d2115d9d06e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SYS_INIT</definition>
        <argsstring>(test_early_sleep_app, APPLICATION, CONFIG_KERNEL_INIT_PRIORITY_DEVICE)</argsstring>
        <name>SYS_INIT</name>
        <param>
          <type><ref refid="early__sleep_2src_2main_8c_1a8851c0f103aba021730997f48c8f1f35" kindref="member">test_early_sleep_app</ref></type>
        </param>
        <param>
          <type>APPLICATION</type>
        </param>
        <param>
          <type>CONFIG_KERNEL_INIT_PRIORITY_DEVICE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="85" column="1" declfile="tests/kernel/early_sleep/src/main.c" declline="85" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="early__sleep_2src_2main_8c_1a9f44a7f5a4213bbce7d6857d215cb451" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_early_sleep</definition>
        <argsstring>(void)</argsstring>
        <name>test_early_sleep</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test early sleep. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="94" column="13" bodyfile="tests/kernel/early_sleep/src/main.c" bodystart="94" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="early__sleep_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_main</definition>
        <argsstring>(void)</argsstring>
        <name>test_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/early_sleep/src/main.c" line="137" column="6" bodyfile="tests/kernel/early_sleep/src/main.c" bodystart="137" bodyend="142"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Test<sp/>early<sp/>sleep<sp/>functionality</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>kernel_earlysleep_tests<sp/>Early<sp/>Sleep<sp/>Tests</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>all_tests</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>k_sleep()<sp/>can<sp/>be<sp/>used<sp/>to<sp/>put<sp/>the<sp/>calling<sp/>thread<sp/>to</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>sleep<sp/>for<sp/>a<sp/>specified<sp/>number<sp/>of<sp/>ticks<sp/>during<sp/>system<sp/>initialization.<sp/><sp/>In<sp/>this</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>test<sp/>we<sp/>are<sp/>calling<sp/>k_sleep()<sp/>at<sp/>POST_KERNEL<sp/>and<sp/>APPLICATION<sp/>level</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>initialization<sp/>sequence.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Note:<sp/>We<sp/>can<sp/>not<sp/>call<sp/>k_sleep()<sp/>during<sp/>PRE_KERNEL1<sp/>or<sp/>PRE_KERNEL2<sp/>level</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>because<sp/>the<sp/>core<sp/>kernel<sp/>objects<sp/>and<sp/>devices<sp/>initialization<sp/>happens<sp/>at<sp/>these</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>levels.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>@}</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="init_8h" kindref="compound">init.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arch/cpu.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys_clock.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdbool_8h" kindref="compound">stdbool.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tc_util.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztest_8h" kindref="compound">ztest.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREAD_STACK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(384<sp/>+<sp/>CONFIG_TEST_EXTRA_STACKSIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_TICKS_TO_SLEEP<sp/><sp/><sp/><sp/><sp/>(CONFIG_SYS_CLOCK_TICKS_PER_SEC<sp/>/<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Helper<sp/>thread<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a9bda3e00bf96550334eadf74c9af316b" kindref="member">K_THREAD_STACK_DEFINE</ref>(helper_tstack,<sp/><ref refid="early__sleep_2src_2main_8c_1af9a5d6addf893be0502ae41f52e794b2" kindref="member">THREAD_STACK</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="early__sleep_2src_2main_8c_1a2e0190ea60ed3575663df100d7e7b98d" kindref="member">helper_tdata</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><sp/><ref refid="early__sleep_2src_2main_8c_1aa40978d8c387be39062d23f6fa94ce11" kindref="member">helper_ttid</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>time<sp/>that<sp/>the<sp/>thread<sp/>was<sp/>actually<sp/>sleeping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="early__sleep_2src_2main_8c_1a5ae5f205bbc94e428d2667cf1ca91ba3" kindref="member">actual_sleep_ticks</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="early__sleep_2src_2main_8c_1a6cc7548959fbc6dd36cf2104c4cbca68" kindref="member">actual_post_kernel_sleep_ticks</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="early__sleep_2src_2main_8c_1aad376faa9f778381ca12d75ed1dacdc3" kindref="member">actual_app_sleep_ticks</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="early__sleep_2src_2main_8c_1a37970110dd218c375ca17ef788223686" kindref="member">test_failure</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="early__sleep_2src_2main_8c_1a444655b46a733d8e0ef18dc69cb15773" kindref="member">helper_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="early__sleep_2src_2main_8c_1a37970110dd218c375ca17ef788223686" kindref="member">test_failure</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="early__sleep_2src_2main_8c_1aa96b5ca1278818bd0c64fb9d314ceb9f" kindref="member">ticks_to_sleep</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ticks)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>start_time;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>stop_time;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_time<sp/>=<sp/><ref refid="group__clock__apis_1ga208687de625e0036558343b4e66143d3" kindref="member">k_cycle_get_32</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="time__units_8h_1a828a817b2dbade336bc9934576984490" kindref="member">k_ticks_to_ms_floor64</ref>(ticks)));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_time<sp/>=<sp/><ref refid="group__clock__apis_1ga208687de625e0036558343b4e66143d3" kindref="member">k_cycle_get_32</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stop_time<sp/>-<sp/>start_time)<sp/>/<sp/><ref refid="time__units_8h_1a4f158167a4645a9dc7716eb343834d5c" kindref="member">k_ticks_to_cyc_floor32</ref>(1);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="early__sleep_2src_2main_8c_1ab5344c2783084fa8710d636f65d996aa" kindref="member">test_early_sleep_post_kernel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*unused)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(unused);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="early__sleep_2src_2main_8c_1a6cc7548959fbc6dd36cf2104c4cbca68" kindref="member">actual_post_kernel_sleep_ticks</ref><sp/>=<sp/><ref refid="early__sleep_2src_2main_8c_1aa96b5ca1278818bd0c64fb9d314ceb9f" kindref="member">ticks_to_sleep</ref>(<ref refid="early__sleep_2src_2main_8c_1a3ea9aa451559f29e07f8716031b54b19" kindref="member">TEST_TICKS_TO_SLEEP</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="group__kernel__device__tests_1ga8b0abf706cc05490fcffda7839d4b971" kindref="member">SYS_INIT</ref>(<ref refid="early__sleep_2src_2main_8c_1ab5344c2783084fa8710d636f65d996aa" kindref="member">test_early_sleep_post_kernel</ref>,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>POST_KERNEL,<sp/>CONFIG_KERNEL_INIT_PRIORITY_DEVICE);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="early__sleep_2src_2main_8c_1a8851c0f103aba021730997f48c8f1f35" kindref="member">test_early_sleep_app</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*unused)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(unused);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="early__sleep_2src_2main_8c_1aad376faa9f778381ca12d75ed1dacdc3" kindref="member">actual_app_sleep_ticks</ref><sp/>=<sp/><ref refid="early__sleep_2src_2main_8c_1aa96b5ca1278818bd0c64fb9d314ceb9f" kindref="member">ticks_to_sleep</ref>(<ref refid="early__sleep_2src_2main_8c_1a3ea9aa451559f29e07f8716031b54b19" kindref="member">TEST_TICKS_TO_SLEEP</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="group__kernel__device__tests_1ga8b0abf706cc05490fcffda7839d4b971" kindref="member">SYS_INIT</ref>(<ref refid="early__sleep_2src_2main_8c_1a8851c0f103aba021730997f48c8f1f35" kindref="member">test_early_sleep_app</ref>,<sp/>APPLICATION,<sp/>CONFIG_KERNEL_INIT_PRIORITY_DEVICE);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="early__sleep_2src_2main_8c_1a9f44a7f5a4213bbce7d6857d215cb451" kindref="member">test_early_sleep</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Testing<sp/>early<sp/>sleeping\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Main<sp/>thread(test_main)<sp/>priority<sp/>is<sp/>0<sp/>but<sp/>ztest<sp/>thread<sp/>runs<sp/>at</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>priority<sp/>-1.<sp/>To<sp/>run<sp/>the<sp/>test<sp/>smoothly<sp/>make<sp/>both<sp/>main<sp/>and<sp/>ztest</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>threads<sp/>run<sp/>at<sp/>same<sp/>priority<sp/>level.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;msec<sp/>per<sp/>tick:<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;.%03&quot;</highlight><highlight class="normal"><sp/><ref refid="inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>ticks<sp/>to<sp/>sleep:<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="time__units_8h_1a828a817b2dbade336bc9934576984490" kindref="member">k_ticks_to_ms_floor64</ref>(1000)<sp/>/<sp/>1000U,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="time__units_8h_1a828a817b2dbade336bc9934576984490" kindref="member">k_ticks_to_ms_floor64</ref>(1000)<sp/>%<sp/>1000,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="early__sleep_2src_2main_8c_1a3ea9aa451559f29e07f8716031b54b19" kindref="member">TEST_TICKS_TO_SLEEP</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>lower<sp/>priority<sp/>thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="early__sleep_2src_2main_8c_1aa40978d8c387be39062d23f6fa94ce11" kindref="member">helper_ttid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="early__sleep_2src_2main_8c_1a2e0190ea60ed3575663df100d7e7b98d" kindref="member">helper_tdata</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helper_tstack,<sp/><ref refid="early__sleep_2src_2main_8c_1af9a5d6addf893be0502ae41f52e794b2" kindref="member">THREAD_STACK</ref>,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="early__sleep_2src_2main_8c_1a444655b46a733d8e0ef18dc69cb15773" kindref="member">helper_thread</ref>,<sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga3a46ed8ad2c3b12416fafe11325f82b3" kindref="member">k_thread_priority_get</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>())<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;k_sleep()<sp/>ticks<sp/>at<sp/>POST_KERNEL<sp/>level:<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="early__sleep_2src_2main_8c_1a6cc7548959fbc6dd36cf2104c4cbca68" kindref="member">actual_post_kernel_sleep_ticks</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>((<ref refid="early__sleep_2src_2main_8c_1a6cc7548959fbc6dd36cf2104c4cbca68" kindref="member">actual_post_kernel_sleep_ticks</ref><sp/>+<sp/>1)<sp/>&gt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="early__sleep_2src_2main_8c_1a3ea9aa451559f29e07f8716031b54b19" kindref="member">TEST_TICKS_TO_SLEEP</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;k_sleep()<sp/>ticks<sp/>at<sp/>APPLICATION<sp/>level:<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="early__sleep_2src_2main_8c_1aad376faa9f778381ca12d75ed1dacdc3" kindref="member">actual_app_sleep_ticks</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>((<ref refid="early__sleep_2src_2main_8c_1aad376faa9f778381ca12d75ed1dacdc3" kindref="member">actual_app_sleep_ticks</ref><sp/>+<sp/>1)<sp/>&gt;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="early__sleep_2src_2main_8c_1a3ea9aa451559f29e07f8716031b54b19" kindref="member">TEST_TICKS_TO_SLEEP</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="early__sleep_2src_2main_8c_1a5ae5f205bbc94e428d2667cf1ca91ba3" kindref="member">actual_sleep_ticks</ref><sp/>=<sp/><ref refid="early__sleep_2src_2main_8c_1aa96b5ca1278818bd0c64fb9d314ceb9f" kindref="member">ticks_to_sleep</ref>(<ref refid="early__sleep_2src_2main_8c_1a3ea9aa451559f29e07f8716031b54b19" kindref="member">TEST_TICKS_TO_SLEEP</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;k_sleep()<sp/>ticks<sp/>on<sp/>running<sp/>system:<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="early__sleep_2src_2main_8c_1a5ae5f205bbc94e428d2667cf1ca91ba3" kindref="member">actual_sleep_ticks</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>((<ref refid="early__sleep_2src_2main_8c_1a5ae5f205bbc94e428d2667cf1ca91ba3" kindref="member">actual_sleep_ticks</ref><sp/>+<sp/>1)<sp/>&gt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="early__sleep_2src_2main_8c_1a3ea9aa451559f29e07f8716031b54b19" kindref="member">TEST_TICKS_TO_SLEEP</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="early__sleep_2src_2main_8c_1a37970110dd218c375ca17ef788223686" kindref="member">test_failure</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Lower<sp/>priority<sp/>thread<sp/>not<sp/>ran!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*test<sp/>case<sp/>main<sp/>entry*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="common_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" kindref="member">test_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" kindref="member">ztest_test_suite</ref>(test_earlysleep,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="early__sleep_2src_2main_8c_1a9f44a7f5a4213bbce7d6857d215cb451" kindref="member">test_early_sleep</ref>));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" kindref="member">ztest_run_test_suite</ref>(test_earlysleep);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/kernel/early_sleep/src/main.c"/>
  </compounddef>
</doxygen>
