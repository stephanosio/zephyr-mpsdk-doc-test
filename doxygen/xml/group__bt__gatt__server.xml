<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__bt__gatt__server" kind="group">
    <compoundname>bt_gatt_server</compoundname>
    <title>GATT Server APIs</title>
    <innerclass refid="structbt__gatt__ccc__cfg" prot="public">bt_gatt_ccc_cfg</innerclass>
    <innerclass refid="structbt__gatt__notify__params" prot="public">bt_gatt_notify_params</innerclass>
    <innerclass refid="structbt__gatt__indicate__params" prot="public">bt_gatt_indicate_params</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__bt__gatt__server_1gade9ca5088d171ad20b4c237f1c2d6260" prot="public" static="no" strong="no">
        <type></type>
        <name>@66</name>
        <enumvalue id="group__bt__gatt__server_1ggade9ca5088d171ad20b4c237f1c2d6260aa3f2a25e27c7065a2c7bb2a9ff09542e" prot="public">
          <name>BT_GATT_ITER_STOP</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__gatt__server_1ggade9ca5088d171ad20b4c237f1c2d6260aea569feffa4815d3443e12be78c684f5" prot="public">
          <name>BT_GATT_ITER_CONTINUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="388" column="1" bodyfile="include/bluetooth/gatt.h" bodystart="388" bodyend="391"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__bt__gatt__server_1gaee6c51e8f8cbdc6d9eaac41295083d91" prot="public" static="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref>(*</type>
        <definition>bt_gatt_attr_func_t</definition>
        <argsstring>)(const struct bt_gatt_attr *attr, uint16_t handle, void *user_data)</argsstring>
        <name>bt_gatt_attr_func_t</name>
        <briefdescription>
<para>Attribute iterator callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute found. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute handle found. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data given.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>BT_GATT_ITER_CONTINUE if should continue to the next attribute. </para>
</simplesect>
<simplesect kind="return"><para>BT_GATT_ITER_STOP to stop. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="403" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__server_1gac55832607b95f394d26a64ed1cfe5bba" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_gatt_complete_func_t) (struct bt_conn *conn, void *user_data)</definition>
        <argsstring>)(struct bt_conn *conn, void *user_data)</argsstring>
        <name>bt_gatt_complete_func_t</name>
        <briefdescription>
<para>Notification complete result callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data passed in by the user. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="962" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="962" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__server_1ga0c348f73c2e00b8c2d2cad21b2ebc709" prot="public" static="no">
        <type>void(*</type>
        <definition>bt_gatt_indicate_func_t</definition>
        <argsstring>)(struct bt_conn *conn, struct bt_gatt_indicate_params *params, uint8_t err)</argsstring>
        <name>bt_gatt_indicate_func_t</name>
        <briefdescription>
<para>Indication complete result callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Indication params object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>ATT error code </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="1104" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="1104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__server_1ga5d47ed9eaea22c8f00db14329daee8fe" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_gatt_indicate_params_destroy_t) (struct bt_gatt_indicate_params *params)</definition>
        <argsstring>)(struct bt_gatt_indicate_params *params)</argsstring>
        <name>bt_gatt_indicate_params_destroy_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="1108" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="1108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__gatt__server_1ga270c8a52bf3d512defc373f8c29b59f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bt_gatt_cb_register</definition>
        <argsstring>(struct bt_gatt_cb *cb)</argsstring>
        <name>bt_gatt_cb_register</name>
        <param>
          <type>struct <ref refid="structbt__gatt__cb" kindref="compound">bt_gatt_cb</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Register GATT callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>Register callbacks to monitor the state of GATT.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback struct. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="348" column="6" declfile="include/bluetooth/gatt.h" declline="348" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1gab4d9cfea04e44445d5dc30ad52842b64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_gatt_service_register</definition>
        <argsstring>(struct bt_gatt_service *svc)</argsstring>
        <name>bt_gatt_service_register</name>
        <param>
          <type>struct <ref refid="structbt__gatt__service" kindref="compound">bt_gatt_service</ref> *</type>
          <declname>svc</declname>
        </param>
        <briefdescription>
<para>Register GATT service. </para>
        </briefdescription>
        <detaileddescription>
<para>Register GATT service. Applications can make use of macros such as BT_GATT_PRIMARY_SERVICE, BT_GATT_CHARACTERISTIC, BT_GATT_DESCRIPTOR, etc.</para>
<para>When using <verbatim>embed:rst:inline :kconfig:`CONFIG_BT_SETTINGS` </verbatim> then all services that should have bond configuration loaded, i.e. CCC values, must be registered before calling <ref refid="group__settings_1ga89c6d618df81f197cc5c1a2018b00648" kindref="member">settings_load</ref>.</para>
<para>When using <verbatim>embed:rst:inline :kconfig:`CONFIG_BT_GATT_CACHING` </verbatim> and <verbatim>embed:rst:inline :kconfig:`CONFIG_BT_SETTINGS` </verbatim> then all services that should be included in the GATT Database Hash calculation should be added before calling <ref refid="group__settings_1ga89c6d618df81f197cc5c1a2018b00648" kindref="member">settings_load</ref>. All services registered after settings_load will trigger a new database hash calculation and a new hash stored.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>svc</parametername>
</parameternamelist>
<parameterdescription>
<para>Service containing the available attributes</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="370" column="5" declfile="include/bluetooth/gatt.h" declline="370" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1gaf5bf0205fad5f7ad187b764d23deba6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_gatt_service_unregister</definition>
        <argsstring>(struct bt_gatt_service *svc)</argsstring>
        <name>bt_gatt_service_unregister</name>
        <param>
          <type>struct <ref refid="structbt__gatt__service" kindref="compound">bt_gatt_service</ref> *</type>
          <declname>svc</declname>
        </param>
        <briefdescription>
<para>Unregister GATT service. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>svc</parametername>
</parameternamelist>
<parameterdescription>
<para>Service to be unregistered.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="378" column="5" declfile="include/bluetooth/gatt.h" declline="378" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1gae5c1e8b7bb1e673e228f03d1d084be9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool bt_gatt_service_is_registered</definition>
        <argsstring>(const struct bt_gatt_service *svc)</argsstring>
        <name>bt_gatt_service_is_registered</name>
        <param>
          <type>const struct <ref refid="structbt__gatt__service" kindref="compound">bt_gatt_service</ref> *</type>
          <declname>svc</declname>
        </param>
        <briefdescription>
<para>Check if GATT service is registered. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>svc</parametername>
</parameternamelist>
<parameterdescription>
<para>Service to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if registered or false if not register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="386" column="6" declfile="include/bluetooth/gatt.h" declline="386" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1gad8d8f513004f391167212d7bf9f7ff10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bt_gatt_foreach_attr_type</definition>
        <argsstring>(uint16_t start_handle, uint16_t end_handle, const struct bt_uuid *uuid, const void *attr_data, uint16_t num_matches, bt_gatt_attr_func_t func, void *user_data)</argsstring>
        <name>bt_gatt_foreach_attr_type</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>start_handle</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>end_handle</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__uuid" kindref="compound">bt_uuid</ref> *</type>
          <declname>uuid</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>attr_data</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>num_matches</declname>
        </param>
        <param>
          <type><ref refid="group__bt__gatt__server_1gaee6c51e8f8cbdc6d9eaac41295083d91" kindref="member">bt_gatt_attr_func_t</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Attribute iterator by type. </para>
        </briefdescription>
        <detaileddescription>
<para>Iterate attributes in the given range matching given UUID and/or data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Start handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>End handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>UUID to match, passing NULL skips UUID matching. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute data to match, passing NULL skips data matching. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_matches</parametername>
</parameternamelist>
<parameterdescription>
<para>Number matches, passing 0 makes it unlimited. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to pass to the callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="419" column="6" declfile="include/bluetooth/gatt.h" declline="419" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1gaa93b5e0f2870ed135447bead903c175a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void bt_gatt_foreach_attr</definition>
        <argsstring>(uint16_t start_handle, uint16_t end_handle, bt_gatt_attr_func_t func, void *user_data)</argsstring>
        <name>bt_gatt_foreach_attr</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>start_handle</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>end_handle</declname>
        </param>
        <param>
          <type><ref refid="group__bt__gatt__server_1gaee6c51e8f8cbdc6d9eaac41295083d91" kindref="member">bt_gatt_attr_func_t</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Attribute iterator. </para>
        </briefdescription>
        <detaileddescription>
<para>Iterate attributes in the given range.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Start handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>End handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to pass to the callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="434" column="20" bodyfile="include/bluetooth/gatt.h" bodystart="434" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1ga35cecaa43b00b374062d29cca1479d85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
        <definition>struct bt_gatt_attr * bt_gatt_attr_next</definition>
        <argsstring>(const struct bt_gatt_attr *attr)</argsstring>
        <name>bt_gatt_attr_next</name>
        <param>
          <type>const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Iterate to the next attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Iterate to the next attribute following a given attribute.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Current Attribute.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The next attribute or NULL if it cannot be found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="450" column="19" declfile="include/bluetooth/gatt.h" declline="450" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1gad2f3272b1dc42378104b492ec7caf6b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
        <definition>struct bt_gatt_attr * bt_gatt_find_by_uuid</definition>
        <argsstring>(const struct bt_gatt_attr *attr, uint16_t attr_count, const struct bt_uuid *uuid)</argsstring>
        <name>bt_gatt_find_by_uuid</name>
        <param>
          <type>const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>attr_count</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__uuid" kindref="compound">bt_uuid</ref> *</type>
          <declname>uuid</declname>
        </param>
        <briefdescription>
<para>Find Attribute by UUID. </para>
        </briefdescription>
        <detaileddescription>
<para>Find the attribute with the matching UUID. To limit the search to a service set the attr to the service attributes and the attr_count to the service attribute count .</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an attribute that serves as the starting point for the search of a match for the UUID. Passing NULL will search the entire range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of attributes from the starting point to search for a match for the UUID. Set to 0 to search until the end. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>UUID to match. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="466" column="19" declfile="include/bluetooth/gatt.h" declline="466" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1ga2d51136ea1bd6cdb50900639506fd9f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t bt_gatt_attr_get_handle</definition>
        <argsstring>(const struct bt_gatt_attr *attr)</argsstring>
        <name>bt_gatt_attr_get_handle</name>
        <param>
          <type>const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Get Attribute handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Handle of the corresponding attribute or zero if the attribute could not be found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="477" column="10" declfile="include/bluetooth/gatt.h" declline="477" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1ga99738cf4f05eae4c6da17cc3420827d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t bt_gatt_attr_value_handle</definition>
        <argsstring>(const struct bt_gatt_attr *attr)</argsstring>
        <name>bt_gatt_attr_value_handle</name>
        <param>
          <type>const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Get the handle of the characteristic value descriptor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>A Characteristic Attribute.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The user_data of the attribute must of type <ref refid="structbt__gatt__chrc" kindref="compound">bt_gatt_chrc</ref>.</para>
</simplesect>
<simplesect kind="return"><para>the handle of the corresponding Characteristic Value. The value will be zero (the invalid handle) if <computeroutput>attr</computeroutput> was not a characteristic attribute. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="489" column="10" declfile="include/bluetooth/gatt.h" declline="489" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1gaf6d253849932b706ec7f303568980dfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>ssize_t bt_gatt_attr_read</definition>
        <argsstring>(struct bt_conn *conn, const struct bt_gatt_attr *attr, void *buf, uint16_t buf_len, uint16_t offset, const void *value, uint16_t value_len)</argsstring>
        <name>bt_gatt_attr_read</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>buf_len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>value_len</declname>
        </param>
        <briefdescription>
<para>Generic Read Attribute value helper. </para>
        </briefdescription>
        <detaileddescription>
<para>Read attribute value from local database storing the result into buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Start offset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the attribute value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes read in case of success or negative values in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="506" column="9" declfile="include/bluetooth/gatt.h" declline="506" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1gacae81c0f272bad7e6ac93c0d13b678c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>ssize_t bt_gatt_attr_read_service</definition>
        <argsstring>(struct bt_conn *conn, const struct bt_gatt_attr *attr, void *buf, uint16_t len, uint16_t offset)</argsstring>
        <name>bt_gatt_attr_read_service</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Read Service Attribute helper. </para>
        </briefdescription>
        <detaileddescription>
<para>Read service attribute value from local database storing the result into buffer after encoding it. <simplesect kind="note"><para>Only use this with attributes which user_data is a <ref refid="structbt__uuid" kindref="compound">bt_uuid</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the value read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Start offset.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes read in case of success or negative values in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="525" column="9" declfile="include/bluetooth/gatt.h" declline="525" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1ga4313a63decac2c8b7c4a1764df3d53ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>ssize_t bt_gatt_attr_read_included</definition>
        <argsstring>(struct bt_conn *conn, const struct bt_gatt_attr *attr, void *buf, uint16_t len, uint16_t offset)</argsstring>
        <name>bt_gatt_attr_read_included</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Read Include Attribute helper. </para>
        </briefdescription>
        <detaileddescription>
<para>Read include service attribute value from local database storing the result into buffer after encoding it. <simplesect kind="note"><para>Only use this with attributes which user_data is a <ref refid="structbt__gatt__include" kindref="compound">bt_gatt_include</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the value read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Start offset.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes read in case of success or negative values in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="622" column="9" declfile="include/bluetooth/gatt.h" declline="622" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1gad58b526a06334530c13292d14a11257c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>ssize_t bt_gatt_attr_read_chrc</definition>
        <argsstring>(struct bt_conn *conn, const struct bt_gatt_attr *attr, void *buf, uint16_t len, uint16_t offset)</argsstring>
        <name>bt_gatt_attr_read_chrc</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Read Characteristic Attribute helper. </para>
        </briefdescription>
        <detaileddescription>
<para>Read characteristic attribute value from local database storing the result into buffer after encoding it. <simplesect kind="note"><para>Only use this with attributes which user_data is a <ref refid="structbt__gatt__chrc" kindref="compound">bt_gatt_chrc</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the value read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Start offset.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes read in case of success or negative values in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="652" column="9" declfile="include/bluetooth/gatt.h" declline="652" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1ga2e85b42136e2c6a4cb5b7ad8a2532573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>ssize_t bt_gatt_attr_read_ccc</definition>
        <argsstring>(struct bt_conn *conn, const struct bt_gatt_attr *attr, void *buf, uint16_t len, uint16_t offset)</argsstring>
        <name>bt_gatt_attr_read_ccc</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Read Client Characteristic Configuration Attribute helper. </para>
        </briefdescription>
        <detaileddescription>
<para>Read CCC attribute value from local database storing the result into buffer after encoding it.</para>
<para><simplesect kind="note"><para>Only use this with attributes which user_data is a _bt_gatt_ccc.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the value read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Start offset.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes read in case of success or negative values in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="760" column="9" declfile="include/bluetooth/gatt.h" declline="760" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1gabba965b676650a55cb9934072b34c75e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>ssize_t bt_gatt_attr_write_ccc</definition>
        <argsstring>(struct bt_conn *conn, const struct bt_gatt_attr *attr, const void *buf, uint16_t len, uint16_t offset, uint8_t flags)</argsstring>
        <name>bt_gatt_attr_write_ccc</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Write Client Characteristic Configuration Attribute helper. </para>
        </briefdescription>
        <detaileddescription>
<para>Write value in the buffer into CCC attribute.</para>
<para><simplesect kind="note"><para>Only use this with attributes which user_data is a _bt_gatt_ccc.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the value read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Start offset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Write flags.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes written in case of success or negative values in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="780" column="9" declfile="include/bluetooth/gatt.h" declline="780" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1ga5893166f1b24f437a94ccf1fc57c7917" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>ssize_t bt_gatt_attr_read_cep</definition>
        <argsstring>(struct bt_conn *conn, const struct bt_gatt_attr *attr, void *buf, uint16_t len, uint16_t offset)</argsstring>
        <name>bt_gatt_attr_read_cep</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Read Characteristic Extended Properties Attribute helper. </para>
        </briefdescription>
        <detaileddescription>
<para>Read CEP attribute value from local database storing the result into buffer after encoding it.</para>
<para><simplesect kind="note"><para>Only use this with attributes which user_data is a <ref refid="structbt__gatt__cep" kindref="compound">bt_gatt_cep</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the value read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Start offset</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes read in case of success or negative values in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="843" column="9" declfile="include/bluetooth/gatt.h" declline="843" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1ga29421c8788b47b6a648704d27d5f0d28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>ssize_t bt_gatt_attr_read_cud</definition>
        <argsstring>(struct bt_conn *conn, const struct bt_gatt_attr *attr, void *buf, uint16_t len, uint16_t offset)</argsstring>
        <name>bt_gatt_attr_read_cud</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Read Characteristic User Description Descriptor Attribute helper. </para>
        </briefdescription>
        <detaileddescription>
<para>Read CUD attribute value from local database storing the result into buffer after encoding it.</para>
<para><simplesect kind="note"><para>Only use this with attributes which user_data is a NULL-terminated C string.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the value read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Start offset</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes read in case of success or negative values in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="875" column="9" declfile="include/bluetooth/gatt.h" declline="875" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1ga5ae96590a0aaa5c4c3863a4a14d80fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>ssize_t bt_gatt_attr_read_cpf</definition>
        <argsstring>(struct bt_conn *conn, const struct bt_gatt_attr *attr, void *buf, uint16_t len, uint16_t offset)</argsstring>
        <name>bt_gatt_attr_read_cpf</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Read Characteristic Presentation format Descriptor Attribute helper. </para>
        </briefdescription>
        <detaileddescription>
<para>Read CPF attribute value from local database storing the result into buffer after encoding it.</para>
<para><simplesect kind="note"><para>Only use this with attributes which user_data is a bt_gatt_pf.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store the value read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Start offset</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes read in case of success or negative values in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="907" column="9" declfile="include/bluetooth/gatt.h" declline="907" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1ga55e3ef7cb43b8acb0a27643c78390146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_gatt_notify_cb</definition>
        <argsstring>(struct bt_conn *conn, struct bt_gatt_notify_params *params)</argsstring>
        <name>bt_gatt_notify_cb</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__gatt__notify__params" kindref="compound">bt_gatt_notify_params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Notify attribute value change. </para>
        </briefdescription>
        <detaileddescription>
<para>This function works in the same way as <ref refid="group__bt__gatt__server_1ga74ee552864c563aa5bc939f37395c14a" kindref="member">bt_gatt_notify</ref>. With the addition that after sending the notification the callback function will be called.</para>
<para>The callback is run from System Workqueue context. When called from the System Workqueue context this API will not wait for resources for the callback but instead return an error. The number of pending callbacks can be increased with the <verbatim>embed:rst:inline :kconfig:`CONFIG_BT_CONN_TX_MAX` </verbatim> option.</para>
<para>Alternatively it is possible to notify by UUID by setting it on the parameters, when using this method the attribute if provided is used as the start range when looking up for possible matches.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Notification parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="1008" column="5" declfile="include/bluetooth/gatt.h" declline="1008" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1gaaeac011e1bc08f613b0cd7e09949ccba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_gatt_notify_multiple</definition>
        <argsstring>(struct bt_conn *conn, uint16_t num_params, struct bt_gatt_notify_params *params)</argsstring>
        <name>bt_gatt_notify_multiple</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>num_params</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__gatt__notify__params" kindref="compound">bt_gatt_notify_params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Notify multiple attribute value change. </para>
        </briefdescription>
        <detaileddescription>
<para>This function works in the same way as <ref refid="group__bt__gatt__server_1ga55e3ef7cb43b8acb0a27643c78390146" kindref="member">bt_gatt_notify_cb</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_params</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of notification parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of notification parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="1021" column="5" declfile="include/bluetooth/gatt.h" declline="1021" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1ga74ee552864c563aa5bc939f37395c14a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int bt_gatt_notify</definition>
        <argsstring>(struct bt_conn *conn, const struct bt_gatt_attr *attr, const void *data, uint16_t len)</argsstring>
        <name>bt_gatt_notify</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Notify attribute value change. </para>
        </briefdescription>
        <detaileddescription>
<para>Send notification of attribute value change, if connection is NULL notify all peer that have notification enabled via CCC otherwise do a direct notification only the given connection.</para>
<para>The attribute object on the parameters can be the so called Characteristic Declaration, which is usually declared with BT_GATT_CHARACTERISTIC followed by BT_GATT_CCC, or the Characteristic Value Declaration which is automatically created after the Characteristic Declaration when using BT_GATT_CHARACTERISTIC.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Characteristic or Characteristic Value attribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Attribute data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute value length.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="1043" column="19" bodyfile="include/bluetooth/gatt.h" bodystart="1043" bodyend="1056"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1ga24bae284dbc71cd4075649c4bc348b7c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int bt_gatt_notify_uuid</definition>
        <argsstring>(struct bt_conn *conn, const struct bt_uuid *uuid, const struct bt_gatt_attr *attr, const void *data, uint16_t len)</argsstring>
        <name>bt_gatt_notify_uuid</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__uuid" kindref="compound">bt_uuid</ref> *</type>
          <declname>uuid</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Notify attribute value change by UUID. </para>
        </briefdescription>
        <detaileddescription>
<para>Send notification of attribute value change, if connection is NULL notify all peer that have notification enabled via CCC otherwise do a direct notification only on the given connection.</para>
<para>The attribute object is the starting point for the search of the UUID.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>The UUID. If the server contains multiple services with the same UUID, then the first occurrence, starting from the attr given, is used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an attribute that serves as the starting point for the search of a match for the UUID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Attribute data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute value length.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="1077" column="19" bodyfile="include/bluetooth/gatt.h" bodystart="1077" bodyend="1092"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1ga4f2272692cc0f1d44638828012296c80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_gatt_indicate</definition>
        <argsstring>(struct bt_conn *conn, struct bt_gatt_indicate_params *params)</argsstring>
        <name>bt_gatt_indicate</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__gatt__indicate__params" kindref="compound">bt_gatt_indicate_params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Indicate attribute value change. </para>
        </briefdescription>
        <detaileddescription>
<para>Send an indication of attribute value change. if connection is NULL indicate all peer that have notification enabled via CCC otherwise do a direct indication only the given connection.</para>
<para>The attribute object on the parameters can be the so called Characteristic Declaration, which is usually declared with BT_GATT_CHARACTERISTIC followed by BT_GATT_CCC, or the Characteristic Value Declaration which is automatically created after the Characteristic Declaration when using BT_GATT_CHARACTERISTIC.</para>
<para>Alternatively it is possible to indicate by UUID by setting it on the parameters, when using this method the attribute if provided is used as the start range when looking up for possible matches.</para>
<para><simplesect kind="note"><para>This procedure is asynchronous therefore the parameters need to remains valid while it is active. The procedure is active until the destroy callback is run.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicate parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="1162" column="5" declfile="include/bluetooth/gatt.h" declline="1162" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1gaeb090eb11cf068fda5d68c29bcfadf53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool bt_gatt_is_subscribed</definition>
        <argsstring>(struct bt_conn *conn, const struct bt_gatt_attr *attr, uint16_t ccc_value)</argsstring>
        <name>bt_gatt_is_subscribed</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>ccc_value</declname>
        </param>
        <briefdescription>
<para>Check if connection have subscribed to attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Check if connection has subscribed to attribute value change.</para>
<para>The attribute object can be the so called Characteristic Declaration, which is usually declared with BT_GATT_CHARACTERISTIC followed by BT_GATT_CCC, or the Characteristic Value Declaration which is automatically created after the Characteristic Declaration when using BT_GATT_CHARACTERISTIC, or the Client Characteristic Configuration Descriptor (CCCD) which is created by BT_GATT_CCC.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ccc_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The subscription type, either notifications or indications.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the attribute object has been subscribed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="1183" column="6" declfile="include/bluetooth/gatt.h" declline="1183" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__server_1ga351fd7658eaecbbfa60f1769119ef733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t bt_gatt_get_mtu</definition>
        <argsstring>(struct bt_conn *conn)</argsstring>
        <name>bt_gatt_get_mtu</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Get ATT MTU for a connection. </para>
        </briefdescription>
        <detaileddescription>
<para>Get negotiated ATT connection MTU, note that this does not equal the largest amount of attribute data that can be transferred within a single packet.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>MTU in bytes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="1195" column="10" declfile="include/bluetooth/gatt.h" declline="1195" declcolumn="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__gatt__server_1ga04c7887fb67107bd060dd023fd3186d5" prot="public" static="no">
        <name>BT_GATT_SERVICE_DEFINE</name>
        <param><defname>_name</defname></param>
        <param><defname>...</defname></param>
        <initializer>	const struct <ref refid="structbt__gatt__attr" kindref="compound">bt_gatt_attr</ref> attr_##_name[] = { __VA_ARGS__ };	\
	const <ref refid="group__iterable__section__apis_1gabed6642b8cc06863ce97dd536698004d" kindref="member">STRUCT_SECTION_ITERABLE</ref>(<ref refid="structbt__gatt__service__static" kindref="compound">bt_gatt_service_static</ref>, _name) =	\
					<ref refid="group__bt__gatt__server_1ga7d413ec013b91a633ec24d80d2814e2b" kindref="member">BT_GATT_SERVICE</ref>(attr_##_name)</initializer>
        <briefdescription>
<para>Statically define and register a service. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to statically define and register a service.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Service name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="536" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__server_1ga8bb3aeef20465d7f6e38f6bbddef74e5" prot="public" static="no">
        <name>BT_GATT_SERVICE_INSTANCE_DEFINE</name>
        <param><defname>_name</defname></param>
        <param><defname>_instances</defname></param>
        <param><defname>_instance_num</defname></param>
        <param><defname>_attrs_def</defname></param>
        <initializer>	BUILD_ASSERT(<ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(_instances) == _instance_num,		 \
		&quot;The number of array elements does not match its size&quot;); \
	UTIL_EVAL(<ref refid="util__internal_8h_1a3c54146013b856ef16ad45471b9fc7d1" kindref="member">UTIL_REPEAT</ref>(						 \
		_instance_num, _BT_GATT_ATTRS_ARRAY_DEFINE, _instances,  \
		_attrs_def))						 \
	static struct <ref refid="structbt__gatt__service" kindref="compound">bt_gatt_service</ref> _name[] = {			 \
		<ref refid="group__sys-util_1ga31079a877f7990c552cbfaf10225e37a" kindref="member">UTIL_LISTIFY</ref>(_instance_num, _BT_GATT_SERVICE_ARRAY_ITEM) \
	}</initializer>
        <briefdescription>
<para>Statically define service structure array. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to statically define service structure array. Each element of the array is linked to the service attribute array which is also defined in this scope using _attrs_def macro.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of service structure array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_instances</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of instances to pass as user context to the attribute callbacks. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_instance_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in instance array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_attrs_def</parametername>
</parameternamelist>
<parameterdescription>
<para>Macro provided by the user that defines attribute array for the serivce. This macro should accept single parameter which is the instance context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="562" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="561" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__server_1ga7d413ec013b91a633ec24d80d2814e2b" prot="public" static="no">
        <name>BT_GATT_SERVICE</name>
        <param><defname>_attrs</defname></param>
        <initializer>{									\
	.attrs = _attrs,						\
	.attr_count = <ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(_attrs),				\
}</initializer>
        <briefdescription>
<para>Service Structure Declaration Macro. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to declare a service structure.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_attrs</parametername>
</parameternamelist>
<parameterdescription>
<para>Service attributes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="579" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="579" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__server_1gaacada0ff1029af959b6fcd6703d4a0bf" prot="public" static="no">
        <name>BT_GATT_PRIMARY_SERVICE</name>
        <param><defname>_service</defname></param>
        <initializer>	<ref refid="group__bt__gatt__server_1gac4abfeb068d16dcdaceee812c12bf406" kindref="member">BT_GATT_ATTRIBUTE</ref>(<ref refid="group__bt__uuid_1ga6e87ce1575494eb90358e074e8dbe276" kindref="member">BT_UUID_GATT_PRIMARY</ref>, <ref refid="group__bt__gatt_1gga9334a5b9057f32da96db9b5c6a045d67a9afb838c2cef657e9cd035ef27521f17" kindref="member">BT_GATT_PERM_READ</ref>,	\
			 <ref refid="group__bt__gatt__server_1gacae81c0f272bad7e6ac93c0d13b678c6" kindref="member">bt_gatt_attr_read_service</ref>, NULL, _service)</initializer>
        <briefdescription>
<para>Primary Service Declaration Macro. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to declare a primary service attribute.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_service</parametername>
</parameternamelist>
<parameterdescription>
<para>Service attribute value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="592" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__server_1gaecb4d30282677d3450ad79c5f83f3445" prot="public" static="no">
        <name>BT_GATT_SECONDARY_SERVICE</name>
        <param><defname>_service</defname></param>
        <initializer>	<ref refid="group__bt__gatt__server_1gac4abfeb068d16dcdaceee812c12bf406" kindref="member">BT_GATT_ATTRIBUTE</ref>(<ref refid="group__bt__uuid_1gad084d3658e663b6b8e200be256c54cdb" kindref="member">BT_UUID_GATT_SECONDARY</ref>, <ref refid="group__bt__gatt_1gga9334a5b9057f32da96db9b5c6a045d67a9afb838c2cef657e9cd035ef27521f17" kindref="member">BT_GATT_PERM_READ</ref>,	\
			 <ref refid="group__bt__gatt__server_1gacae81c0f272bad7e6ac93c0d13b678c6" kindref="member">bt_gatt_attr_read_service</ref>, NULL, _service)</initializer>
        <briefdescription>
<para>Secondary Service Declaration Macro. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to declare a secondary service attribute.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_service</parametername>
</parameternamelist>
<parameterdescription>
<para>Service attribute value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="603" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__server_1ga08ffee706d271b75a54b1b99249dba24" prot="public" static="no">
        <name>BT_GATT_INCLUDE_SERVICE</name>
        <param><defname>_service_incl</defname></param>
        <initializer>	<ref refid="group__bt__gatt__server_1gac4abfeb068d16dcdaceee812c12bf406" kindref="member">BT_GATT_ATTRIBUTE</ref>(<ref refid="group__bt__uuid_1ga995596ff7374ebcb44d4706bc16234e4" kindref="member">BT_UUID_GATT_INCLUDE</ref>, <ref refid="group__bt__gatt_1gga9334a5b9057f32da96db9b5c6a045d67a9afb838c2cef657e9cd035ef27521f17" kindref="member">BT_GATT_PERM_READ</ref>,	\
			  <ref refid="group__bt__gatt__server_1ga4313a63decac2c8b7c4a1764df3d53ea" kindref="member">bt_gatt_attr_read_included</ref>, NULL, _service_incl)</initializer>
        <briefdescription>
<para>Include Service Declaration Macro. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to declare database internal include service attribute.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_service_incl</parametername>
</parameternamelist>
<parameterdescription>
<para>the first service attribute of service to include </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="633" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="633" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__server_1ga7f19592a722c41d6c1d2421d166dd78a" prot="public" static="no">
        <name>BT_GATT_CHRC_INIT</name>
        <param><defname>_uuid</defname></param>
        <param><defname>_handle</defname></param>
        <param><defname>_props</defname></param>
        <initializer>{                                                 \
	.uuid = _uuid,                            \
	.value_handle = _handle,                  \
	.properties = _props,                     \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="656" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="656" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__server_1ga9e739546dbd906d3b3c4f1ed5ad9f41e" prot="public" static="no">
        <name>BT_GATT_CHARACTERISTIC</name>
        <param><defname>_uuid</defname></param>
        <param><defname>_props</defname></param>
        <param><defname>_perm</defname></param>
        <param><defname>_read</defname></param>
        <param><defname>_write</defname></param>
        <param><defname>_user_data</defname></param>
        <initializer>	<ref refid="group__bt__gatt__server_1gac4abfeb068d16dcdaceee812c12bf406" kindref="member">BT_GATT_ATTRIBUTE</ref>(<ref refid="group__bt__uuid_1gadcedbbe1c432c4ac737e54b318e01a0f" kindref="member">BT_UUID_GATT_CHRC</ref>, <ref refid="group__bt__gatt_1gga9334a5b9057f32da96db9b5c6a045d67a9afb838c2cef657e9cd035ef27521f17" kindref="member">BT_GATT_PERM_READ</ref>,                 \
			  <ref refid="group__bt__gatt__server_1gad58b526a06334530c13292d14a11257c" kindref="member">bt_gatt_attr_read_chrc</ref>, NULL,                         \
			  ((struct <ref refid="structbt__gatt__chrc" kindref="compound">bt_gatt_chrc</ref>[]) {                            \
				<ref refid="group__bt__gatt__server_1ga7f19592a722c41d6c1d2421d166dd78a" kindref="member">BT_GATT_CHRC_INIT</ref>(_uuid, 0U, _props),           \
						   })),                         \
	<ref refid="group__bt__gatt__server_1gac4abfeb068d16dcdaceee812c12bf406" kindref="member">BT_GATT_ATTRIBUTE</ref>(_uuid, _perm, _read, _write, _user_data)</initializer>
        <briefdescription>
<para>Characteristic and Value Declaration Macro. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to declare a characteristic attribute along with its attribute value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>Characteristic attribute uuid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_props</parametername>
</parameternamelist>
<parameterdescription>
<para>Characteristic attribute properties. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_perm</parametername>
</parameternamelist>
<parameterdescription>
<para>Characteristic Attribute access permissions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_read</parametername>
</parameternamelist>
<parameterdescription>
<para>Characteristic Attribute read callback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_write</parametername>
</parameternamelist>
<parameterdescription>
<para>Characteristic Attribute write callback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Characteristic Attribute user data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="676" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__server_1gac1c0a195c1ec1ff2cdd5bf6d0ba6ad00" prot="public" static="no">
        <name>BT_GATT_CCC_MAX</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="689" column="11" bodyfile="include/bluetooth/gatt.h" bodystart="689" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__server_1ga59fd77199435e461e03a80c7121bb869" prot="public" static="no">
        <name>BT_GATT_CCC_INITIALIZER</name>
        <param><defname>_changed</defname></param>
        <param><defname>_write</defname></param>
        <param><defname>_match</defname></param>
        <initializer>	{                                            \
		.cfg = {},                           \
		.cfg_changed = _changed,             \
		.cfg_write = _write,                 \
		.cfg_match = _match,                 \
	}</initializer>
        <briefdescription>
<para>Initialize Client Characteristic Configuration Declaration Macro. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to initialize a Managed CCC attribute value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_changed</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration changed callback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_write</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration write callback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_match</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration match callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="794" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="794" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__server_1gad8b296ecfd1139680f21da7904b9f585" prot="public" static="no">
        <name>BT_GATT_CCC_MANAGED</name>
        <param><defname>_ccc</defname></param>
        <param><defname>_perm</defname></param>
        <initializer>	<ref refid="group__bt__gatt__server_1gac4abfeb068d16dcdaceee812c12bf406" kindref="member">BT_GATT_ATTRIBUTE</ref>(<ref refid="group__bt__uuid_1ga03a2d3f0ce89508b794d5c87a4303057" kindref="member">BT_UUID_GATT_CCC</ref>, _perm,			\
			<ref refid="group__bt__gatt__server_1ga2e85b42136e2c6a4cb5b7ad8a2532573" kindref="member">bt_gatt_attr_read_ccc</ref>, <ref refid="group__bt__gatt__server_1gabba965b676650a55cb9934072b34c75e" kindref="member">bt_gatt_attr_write_ccc</ref>,  \
			_ccc)</initializer>
        <briefdescription>
<para>Managed Client Characteristic Configuration Declaration Macro. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to declare a Managed CCC attribute.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_ccc</parametername>
</parameternamelist>
<parameterdescription>
<para>CCC attribute user data, shall point to a _bt_gatt_ccc. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_perm</parametername>
</parameternamelist>
<parameterdescription>
<para>CCC access permissions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="810" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="810" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__server_1ga140b9c25d10244bebd9c891f881fdc94" prot="public" static="no">
        <name>BT_GATT_CCC</name>
        <param><defname>_changed</defname></param>
        <param><defname>_perm</defname></param>
        <initializer>	<ref refid="group__bt__gatt__server_1gad8b296ecfd1139680f21da7904b9f585" kindref="member">BT_GATT_CCC_MANAGED</ref>(((struct _bt_gatt_ccc[])			\
		{<ref refid="group__bt__gatt__server_1ga59fd77199435e461e03a80c7121bb869" kindref="member">BT_GATT_CCC_INITIALIZER</ref>(_changed, NULL, NULL)}), _perm)</initializer>
        <briefdescription>
<para>Client Characteristic Configuration Declaration Macro. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to declare a CCC attribute.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_changed</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration changed callback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_perm</parametername>
</parameternamelist>
<parameterdescription>
<para>CCC access permissions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="823" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="823" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__server_1ga55a82cada1093c4ff75fe5504ac504b1" prot="public" static="no">
        <name>BT_GATT_CEP</name>
        <param><defname>_value</defname></param>
        <initializer>	<ref refid="group__bt__gatt__server_1ga83207fc083454327004f7d3c3e5b3840" kindref="member">BT_GATT_DESCRIPTOR</ref>(<ref refid="group__bt__uuid_1ga6aa143b721d810f1536d7431a9bf7cc7" kindref="member">BT_UUID_GATT_CEP</ref>, <ref refid="group__bt__gatt_1gga9334a5b9057f32da96db9b5c6a045d67a9afb838c2cef657e9cd035ef27521f17" kindref="member">BT_GATT_PERM_READ</ref>,		\
			  <ref refid="group__bt__gatt__server_1ga5893166f1b24f437a94ccf1fc57c7917" kindref="member">bt_gatt_attr_read_cep</ref>, NULL, (void *)_value)</initializer>
        <briefdescription>
<para>Characteristic Extended Properties Declaration Macro. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to declare a CEP attribute.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a struct <ref refid="structbt__gatt__cep" kindref="compound">bt_gatt_cep</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="854" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="854" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__server_1ga1e1cd9d0853e2dcbefcb85fda44dc9c7" prot="public" static="no">
        <name>BT_GATT_CUD</name>
        <param><defname>_value</defname></param>
        <param><defname>_perm</defname></param>
        <initializer>	<ref refid="group__bt__gatt__server_1ga83207fc083454327004f7d3c3e5b3840" kindref="member">BT_GATT_DESCRIPTOR</ref>(<ref refid="group__bt__uuid_1gaaaf94f5d918a1b6715cf4816b03875a2" kindref="member">BT_UUID_GATT_CUD</ref>, _perm, <ref refid="group__bt__gatt__server_1ga29421c8788b47b6a648704d27d5f0d28" kindref="member">bt_gatt_attr_read_cud</ref>, \
			   NULL, (void *)_value)</initializer>
        <briefdescription>
<para>Characteristic User Format Descriptor Declaration Macro. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to declare a CUD attribute.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>User description NULL-terminated C string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_perm</parametername>
</parameternamelist>
<parameterdescription>
<para>Descriptor attribute access permissions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="887" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="887" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__server_1ga3835fcfdf7a5f917e21c9d17e75162be" prot="public" static="no">
        <name>BT_GATT_CPF</name>
        <param><defname>_value</defname></param>
        <initializer>	<ref refid="group__bt__gatt__server_1ga83207fc083454327004f7d3c3e5b3840" kindref="member">BT_GATT_DESCRIPTOR</ref>(<ref refid="group__bt__uuid_1ga331a61702ffe9b15bac0de3d60414022" kindref="member">BT_UUID_GATT_CPF</ref>, <ref refid="group__bt__gatt_1gga9334a5b9057f32da96db9b5c6a045d67a9afb838c2cef657e9cd035ef27521f17" kindref="member">BT_GATT_PERM_READ</ref>,		\
			  <ref refid="group__bt__gatt__server_1ga5ae96590a0aaa5c4c3863a4a14d80fdd" kindref="member">bt_gatt_attr_read_cpf</ref>, NULL, (void *)_value)</initializer>
        <briefdescription>
<para>Characteristic Presentation Format Descriptor Declaration Macro. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to declare a CPF attribute.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a struct <ref refid="structbt__gatt__cpf" kindref="compound">bt_gatt_cpf</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="918" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="918" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__server_1ga83207fc083454327004f7d3c3e5b3840" prot="public" static="no">
        <name>BT_GATT_DESCRIPTOR</name>
        <param><defname>_uuid</defname></param>
        <param><defname>_perm</defname></param>
        <param><defname>_read</defname></param>
        <param><defname>_write</defname></param>
        <param><defname>_user_data</defname></param>
        <initializer>	<ref refid="group__bt__gatt__server_1gac4abfeb068d16dcdaceee812c12bf406" kindref="member">BT_GATT_ATTRIBUTE</ref>(_uuid, _perm, _read, _write, _user_data)</initializer>
        <briefdescription>
<para>Descriptor Declaration Macro. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to declare a descriptor attribute.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>Descriptor attribute uuid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_perm</parametername>
</parameternamelist>
<parameterdescription>
<para>Descriptor attribute access permissions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_read</parametername>
</parameternamelist>
<parameterdescription>
<para>Descriptor attribute read callback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_write</parametername>
</parameternamelist>
<parameterdescription>
<para>Descriptor attribute write callback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Descriptor attribute user data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="933" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="933" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__server_1gac4abfeb068d16dcdaceee812c12bf406" prot="public" static="no">
        <name>BT_GATT_ATTRIBUTE</name>
        <param><defname>_uuid</defname></param>
        <param><defname>_perm</defname></param>
        <param><defname>_read</defname></param>
        <param><defname>_write</defname></param>
        <param><defname>_user_data</defname></param>
        <initializer>{									\
	.uuid = _uuid,							\
	.read = _read,							\
	.write = _write,						\
	.<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref> = _user_data,					\
	.handle = 0,							\
	.perm = _perm,							\
}</initializer>
        <briefdescription>
<para>Attribute Declaration Macro. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to declare an attribute.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute uuid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_perm</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute access permissions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_read</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute read callback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_write</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute write callback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute user data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt.h" line="947" column="9" bodyfile="include/bluetooth/gatt.h" bodystart="947" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
