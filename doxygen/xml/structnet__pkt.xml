<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structnet__pkt" kind="struct" language="C++" prot="public">
    <compoundname>net_pkt</compoundname>
    <includes refid="net__pkt_8h" local="no">net_pkt.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnet__pkt_1a96e82461f6786814de708049f2bc0b22" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0bd5dec00e345e69027427f8621d6a6c" kindref="member">intptr_t</ref></type>
        <definition>intptr_t net_pkt::fifo</definition>
        <argsstring></argsstring>
        <name>fifo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The fifo is used by RX/TX threads and by socket layer. The <ref refid="structnet__pkt" kindref="compound">net_pkt</ref> is queued via fifo to the processing thread. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_pkt.h" line="67" column="10" bodyfile="include/net/net_pkt.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__pkt_1add4540bddb5c549a5ae61b99b14b0b54" prot="public" static="no" mutable="no">
        <type>struct k_mem_slab *</type>
        <definition>struct k_mem_slab* net_pkt::slab</definition>
        <argsstring></argsstring>
        <name>slab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Slab pointer from where it belongs to </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_pkt.h" line="70" column="17" bodyfile="include/net/net_pkt.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__pkt_1a1c27e50656b8c2713704d979b902c5d6" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
        <definition>struct net_buf* net_pkt::frags</definition>
        <argsstring></argsstring>
        <name>frags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_pkt.h" line="74" column="14" bodyfile="include/net/net_pkt.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__pkt_1ad319458430aa691b88e24776e843d30b" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
        <definition>struct net_buf* net_pkt::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_pkt.h" line="75" column="14" bodyfile="include/net/net_pkt.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__pkt_1a38759e6bb90bb8c551a46fa1f5e096a6" prot="public" static="no" mutable="no">
        <type>union net_pkt::@182</type>
        <definition>union net_pkt::@182 net_pkt::@183</definition>
        <argsstring></argsstring>
        <name>@183</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>buffer holding the packet </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_pkt.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__pkt_1a52f155a86698a929fa2130b594630d06" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structnet__pkt__cursor" kindref="compound">net_pkt_cursor</ref></type>
        <definition>struct net_pkt_cursor net_pkt::cursor</definition>
        <argsstring></argsstring>
        <name>cursor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Internal buffer iterator used for reading/writing </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_pkt.h" line="79" column="21" bodyfile="include/net/net_pkt.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__pkt_1a4b9c3f62209f4d7748070224654360cf" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
        <definition>struct net_context* net_pkt::context</definition>
        <argsstring></argsstring>
        <name>context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Network connection context </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_pkt.h" line="82" column="18" bodyfile="include/net/net_pkt.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__pkt_1a7590eeacf06469206cb7e7949acfa7b2" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
        <definition>struct net_if* net_pkt::iface</definition>
        <argsstring></argsstring>
        <name>iface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Network interface </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_pkt.h" line="85" column="13" bodyfile="include/net/net_pkt.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Network packet. </para>
    </briefdescription>
    <detaileddescription>
<para>Note that if you add new fields into <ref refid="structnet__pkt" kindref="compound">net_pkt</ref>, remember to update <ref refid="group__net__pkt_1gaefefe50d0c68fb4997abc7b309740959" kindref="member">net_pkt_clone()</ref> function. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="12">
        <label>__thread_entry</label>
      </node>
      <node id="11">
        <label>_callee_saved</label>
      </node>
      <node id="14">
        <label>_mem_domain_info</label>
      </node>
      <node id="3">
        <label>_snode</label>
      </node>
      <node id="19">
        <label>_thread_arch</label>
      </node>
      <node id="10">
        <label>_thread_base</label>
      </node>
      <node id="13">
        <label>_thread_stack_info</label>
      </node>
      <node id="8">
        <label>_wait_q_t</label>
      </node>
      <node id="23">
        <label>device</label>
        <link refid="structdevice"/>
        <childnode refid="24" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>device_state</label>
        <link refid="structdevice__state"/>
      </node>
      <node id="16">
        <label>k_heap</label>
        <link refid="structk__heap"/>
        <childnode refid="17" relation="usage">
          <edgelabel>heap</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>k_mutex</label>
        <link refid="structk__mutex"/>
        <childnode refid="8" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>k_spinlock</label>
        <link refid="structk__spinlock"/>
      </node>
      <node id="9">
        <label>k_thread</label>
        <link refid="structk__thread"/>
        <childnode refid="10" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>callee_saved</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>join_queue</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>entry</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>next_thread</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>stack_info</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>mem_domain_info</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>stack_obj</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>resource_pool</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>arch</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>net_buf</label>
        <link refid="structnet__buf"/>
        <childnode refid="3" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>frags</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>b</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>net_buf_simple</label>
        <link refid="structnet__buf__simple"/>
      </node>
      <node id="6">
        <label>net_context</label>
        <link refid="structnet__context"/>
        <childnode refid="7" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>remote</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>connect_cb</edgelabel>
          <edgelabel>recv_cb</edgelabel>
          <edgelabel>send_cb</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>net_if</label>
        <link refid="structnet__if"/>
        <childnode refid="22" relation="usage">
          <edgelabel>if_dev</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>config</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>net_if_config</label>
        <link refid="structnet__if__config"/>
        <childnode refid="28" relation="usage">
          <edgelabel>ip</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>net_if_dev</label>
        <link refid="structnet__if__dev"/>
        <childnode refid="23" relation="usage">
          <edgelabel>dev</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>l2</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>link_addr</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>net_if_ip</label>
        <link refid="structnet__if__ip"/>
      </node>
      <node id="25">
        <label>net_l2</label>
        <link refid="structnet__l2"/>
      </node>
      <node id="26">
        <label>net_linkaddr</label>
        <link refid="structnet__linkaddr"/>
      </node>
      <node id="1">
        <label>net_pkt</label>
        <link refid="structnet__pkt"/>
        <childnode refid="2" relation="usage">
          <edgelabel>buffer</edgelabel>
          <edgelabel>frags</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>cursor</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>context</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>iface</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>net_pkt_cursor</label>
        <link refid="structnet__pkt__cursor"/>
        <childnode refid="2" relation="usage">
          <edgelabel>buf</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>sockaddr</label>
        <link refid="structsockaddr"/>
      </node>
      <node id="17">
        <label>sys_heap</label>
        <link refid="structsys__heap"/>
      </node>
      <node id="15">
        <label>z_thread_stack_element</label>
      </node>
    </collaborationgraph>
    <location file="include/net/net_pkt.h" line="62" column="1" bodyfile="include/net/net_pkt.h" bodystart="62" bodyend="272"/>
    <listofallmembers>
      <member refid="structnet__pkt_1ad319458430aa691b88e24776e843d30b" prot="public" virt="non-virtual"><scope>net_pkt</scope><name>buffer</name></member>
      <member refid="structnet__pkt_1a4b9c3f62209f4d7748070224654360cf" prot="public" virt="non-virtual"><scope>net_pkt</scope><name>context</name></member>
      <member refid="structnet__pkt_1a52f155a86698a929fa2130b594630d06" prot="public" virt="non-virtual"><scope>net_pkt</scope><name>cursor</name></member>
      <member refid="structnet__pkt_1a96e82461f6786814de708049f2bc0b22" prot="public" virt="non-virtual"><scope>net_pkt</scope><name>fifo</name></member>
      <member refid="structnet__pkt_1a1c27e50656b8c2713704d979b902c5d6" prot="public" virt="non-virtual"><scope>net_pkt</scope><name>frags</name></member>
      <member refid="structnet__pkt_1a7590eeacf06469206cb7e7949acfa7b2" prot="public" virt="non-virtual"><scope>net_pkt</scope><name>iface</name></member>
      <member refid="structnet__pkt_1add4540bddb5c549a5ae61b99b14b0b54" prot="public" virt="non-virtual"><scope>net_pkt</scope><name>slab</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
