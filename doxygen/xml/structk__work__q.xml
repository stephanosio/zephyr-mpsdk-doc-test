<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structk__work__q" kind="struct" language="C++" prot="public">
    <compoundname>k_work_q</compoundname>
    <includes refid="include_2kernel_8h" local="no">kernel.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structk__work__q_1aa42ca271a4989f129bf1a43c491327eb" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread k_work_q::thread</definition>
        <argsstring></argsstring>
        <name>thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="3721" column="15" bodyfile="include/kernel.h" bodystart="3721" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__work__q_1a2012199571f6b658873550d64386b00c" prot="public" static="no" mutable="no">
        <type><ref refid="slist_8h_1a44658c336b634c03938a251cdc8134f8" kindref="member">sys_slist_t</ref></type>
        <definition>sys_slist_t k_work_q::pending</definition>
        <argsstring></argsstring>
        <name>pending</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="3728" column="13" bodyfile="include/kernel.h" bodystart="3728" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__work__q_1a561c90f8bb944217230e00052cdecf10" prot="public" static="no" mutable="no">
        <type>_wait_q_t</type>
        <definition>_wait_q_t k_work_q::notifyq</definition>
        <argsstring></argsstring>
        <name>notifyq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="3731" column="11" bodyfile="include/kernel.h" bodystart="3731" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__work__q_1a308d1ac78b1203b7ea78b0f18c5bdf5b" prot="public" static="no" mutable="no">
        <type>_wait_q_t</type>
        <definition>_wait_q_t k_work_q::drainq</definition>
        <argsstring></argsstring>
        <name>drainq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="3734" column="11" bodyfile="include/kernel.h" bodystart="3734" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__work__q_1a68bc8e9c412ebdbf34827087d91a080e" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t k_work_q::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="3737" column="10" bodyfile="include/kernel.h" bodystart="3737" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A structure used to hold work until it can be processed. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6">
        <label>__thread_entry</label>
      </node>
      <node id="4">
        <label>_callee_saved</label>
      </node>
      <node id="8">
        <label>_mem_domain_info</label>
      </node>
      <node id="14">
        <label>_slist</label>
      </node>
      <node id="13">
        <label>_thread_arch</label>
      </node>
      <node id="3">
        <label>_thread_base</label>
      </node>
      <node id="7">
        <label>_thread_stack_info</label>
      </node>
      <node id="5">
        <label>_wait_q_t</label>
      </node>
      <node id="10">
        <label>k_heap</label>
        <link refid="structk__heap"/>
        <childnode refid="11" relation="usage">
          <edgelabel>heap</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>k_spinlock</label>
        <link refid="structk__spinlock"/>
      </node>
      <node id="2">
        <label>k_thread</label>
        <link refid="structk__thread"/>
        <childnode refid="3" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>callee_saved</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>join_queue</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>entry</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>next_thread</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>stack_info</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>mem_domain_info</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>stack_obj</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>resource_pool</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>arch</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>k_work_q</label>
        <link refid="structk__work__q"/>
        <childnode refid="2" relation="usage">
          <edgelabel>thread</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>pending</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>drainq</edgelabel>
          <edgelabel>notifyq</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>sys_heap</label>
        <link refid="structsys__heap"/>
      </node>
      <node id="9">
        <label>z_thread_stack_element</label>
      </node>
    </collaborationgraph>
    <location file="include/kernel.h" line="3719" column="1" bodyfile="include/kernel.h" bodystart="3719" bodyend="3738"/>
    <listofallmembers>
      <member refid="structk__work__q_1a308d1ac78b1203b7ea78b0f18c5bdf5b" prot="public" virt="non-virtual"><scope>k_work_q</scope><name>drainq</name></member>
      <member refid="structk__work__q_1a68bc8e9c412ebdbf34827087d91a080e" prot="public" virt="non-virtual"><scope>k_work_q</scope><name>flags</name></member>
      <member refid="structk__work__q_1a561c90f8bb944217230e00052cdecf10" prot="public" virt="non-virtual"><scope>k_work_q</scope><name>notifyq</name></member>
      <member refid="structk__work__q_1a2012199571f6b658873550d64386b00c" prot="public" virt="non-virtual"><scope>k_work_q</scope><name>pending</name></member>
      <member refid="structk__work__q_1aa42ca271a4989f129bf1a43c491327eb" prot="public" virt="non-virtual"><scope>k_work_q</scope><name>thread</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
