<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="mqtt_8h" kind="file" language="C++">
    <compoundname>mqtt.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">zephyr.h</includes>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includes refid="tls__credentials_8h" local="no">net/tls_credentials.h</includes>
    <includes refid="net__ip_8h" local="no">net/net_ip.h</includes>
    <includes refid="mutex_8h" local="no">sys/mutex.h</includes>
    <includes refid="websocket_8h" local="no">net/websocket.h</includes>
    <incdepgraph>
      <node id="37">
        <label>net/http_client.h</label>
        <link refid="http__client_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>net/http_parser.h</label>
        <link refid="http__parser_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>net/http_parser_state.h</label>
        <link refid="http__parser__state_8h"/>
      </node>
      <node id="36">
        <label>net/http_parser_url.h</label>
        <link refid="http__parser__url_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/net/mqtt.h</label>
        <link refid="mqtt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>net/net_ip.h</label>
        <link refid="net__ip_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>net/net_linkaddr.h</label>
        <link refid="net__linkaddr_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>net/tls_credentials.h</label>
        <link refid="tls__credentials_8h"/>
      </node>
      <node id="30">
        <label>net/websocket.h</label>
        <link refid="websocket_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="15">
        <label>sys/byteorder.h</label>
        <link refid="byteorder_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sys/mutex.h</label>
        <link refid="mutex_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="12">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="4">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="5">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="8">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>sys/_types.h</label>
        <link refid="__types_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>sys/types.h</label>
        <link refid="lib_2libc_2minimal_2include_2sys_2types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>kernel.h</label>
      </node>
      <node id="18">
        <label>stdarg.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="28">
        <label>sys_clock.h</label>
      </node>
      <node id="23">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="29">
        <label>syscalls/mutex.h</label>
      </node>
      <node id="24">
        <label>syscalls/net_ip.h</label>
      </node>
      <node id="3">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structmqtt__utf8" prot="public">mqtt_utf8</innerclass>
    <innerclass refid="structmqtt__binstr" prot="public">mqtt_binstr</innerclass>
    <innerclass refid="structmqtt__topic" prot="public">mqtt_topic</innerclass>
    <innerclass refid="structmqtt__publish__message" prot="public">mqtt_publish_message</innerclass>
    <innerclass refid="structmqtt__connack__param" prot="public">mqtt_connack_param</innerclass>
    <innerclass refid="structmqtt__puback__param" prot="public">mqtt_puback_param</innerclass>
    <innerclass refid="structmqtt__pubrec__param" prot="public">mqtt_pubrec_param</innerclass>
    <innerclass refid="structmqtt__pubrel__param" prot="public">mqtt_pubrel_param</innerclass>
    <innerclass refid="structmqtt__pubcomp__param" prot="public">mqtt_pubcomp_param</innerclass>
    <innerclass refid="structmqtt__suback__param" prot="public">mqtt_suback_param</innerclass>
    <innerclass refid="structmqtt__unsuback__param" prot="public">mqtt_unsuback_param</innerclass>
    <innerclass refid="structmqtt__publish__param" prot="public">mqtt_publish_param</innerclass>
    <innerclass refid="structmqtt__subscription__list" prot="public">mqtt_subscription_list</innerclass>
    <innerclass refid="unionmqtt__evt__param" prot="public">mqtt_evt_param</innerclass>
    <innerclass refid="structmqtt__evt" prot="public">mqtt_evt</innerclass>
    <innerclass refid="structmqtt__sec__config" prot="public">mqtt_sec_config</innerclass>
    <innerclass refid="structmqtt__transport" prot="public">mqtt_transport</innerclass>
    <innerclass refid="structmqtt__internal" prot="public">mqtt_internal</innerclass>
    <innerclass refid="structmqtt__client" prot="public">mqtt_client</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__mqtt__socket_1gaeaa4fcf581c7d6be755f9a053a3b488c" prot="public" static="no">
        <name>MQTT_UTF8_LITERAL</name>
        <param><defname>literal</defname></param>
        <initializer>	((struct <ref refid="structmqtt__utf8" kindref="compound">mqtt_utf8</ref>) {literal, sizeof(literal) - 1})</initializer>
        <briefdescription>
<para>Initialize UTF-8 encoded string from C literal string. </para>
        </briefdescription>
        <detaileddescription>
<para>Use it as follows:</para>
<para>struct <ref refid="structmqtt__utf8" kindref="compound">mqtt_utf8</ref> password = MQTT_UTF8_LITERAL(&quot;my_pass&quot;);</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">literal</parametername>
</parameternamelist>
<parameterdescription>
<para>Literal string from which to generate <ref refid="structmqtt__utf8" kindref="compound">mqtt_utf8</ref> object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="166" column="9" bodyfile="include/net/mqtt.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__mqtt__socket_1ga0071fe013b9920711456ef51cc3e6d91" prot="public" static="no" strong="no">
        <type></type>
        <name>mqtt_evt_type</name>
        <enumvalue id="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91ab6e626b5a1eda76b32053ccbb4b7b5f3" prot="public">
          <name>MQTT_EVT_CONNACK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledgment of connection request. Event result accompanying the event indicates whether the connection failed or succeeded. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91a8de64478f7ae463d7844fc2e786ce032" prot="public">
          <name>MQTT_EVT_DISCONNECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Disconnection Event. MQTT Client Reference is no longer valid once this event is received for the client. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91aa893a345e05e796cfd28392c1c4d8cf9" prot="public">
          <name>MQTT_EVT_PUBLISH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Publish event received when message is published on a topic client is subscribed to.</para>
<para><simplesect kind="note"><para>PUBLISH event structure only contains payload size, the payload data parameter should be ignored. Payload content has to be read manually with <ref refid="group__mqtt__socket_1ga3559cdd6093d75c6fe6792ec2a453172" kindref="member">mqtt_read_publish_payload</ref> function. </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91a2f25d5d4ca704ab63439d4706d3587de" prot="public">
          <name>MQTT_EVT_PUBACK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledgment for published message with QoS 1. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91a1d5f6ba2524f935dd9625d85638eda87" prot="public">
          <name>MQTT_EVT_PUBREC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reception confirmation for published message with QoS 2. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91ab35ebaf4dcc6698471eb16a41c8252a2" prot="public">
          <name>MQTT_EVT_PUBREL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Release of published message with QoS 2. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91afdba5e48987b4355f445d35b4dc056e8" prot="public">
          <name>MQTT_EVT_PUBCOMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Confirmation to a publish release message with QoS 2. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91a67caa558ae7975548b3c4e1c1de5f8fb" prot="public">
          <name>MQTT_EVT_SUBACK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledgment to a subscribe request. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91aa5c333ddf366e44f932ec5545ed75bb2" prot="public">
          <name>MQTT_EVT_UNSUBACK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledgment to a unsubscribe request. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91a52842872177b26e5e0e45a3c66fdb0b5" prot="public">
          <name>MQTT_EVT_PINGRESP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Ping Response from server. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MQTT Asynchronous Events notified to the application from the module through the callback registered by the application. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="42" column="1" bodyfile="include/net/mqtt.h" bodystart="42" bodyend="82"/>
      </memberdef>
      <memberdef kind="enum" id="group__mqtt__socket_1ga90d152a4b0986e9a07a12c7c56f5e2a0" prot="public" static="no" strong="no">
        <type></type>
        <name>mqtt_version</name>
        <enumvalue id="group__mqtt__socket_1gga90d152a4b0986e9a07a12c7c56f5e2a0ac93057183f274a064e118af6b4d681e7" prot="public">
          <name>MQTT_VERSION_3_1_0</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Protocol level for 3.1.0. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1gga90d152a4b0986e9a07a12c7c56f5e2a0ad2926cb14db1fcfb95a47f45d2f5b08e" prot="public">
          <name>MQTT_VERSION_3_1_1</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Protocol level for 3.1.1. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MQTT version protocol level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="85" column="1" bodyfile="include/net/mqtt.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="enum" id="group__mqtt__socket_1ga396015e492b0fee8da37c7168d9cdb33" prot="public" static="no" strong="no">
        <type></type>
        <name>mqtt_qos</name>
        <enumvalue id="group__mqtt__socket_1gga396015e492b0fee8da37c7168d9cdb33a2ea1051887beb30d7c1fd61b5e153f6e" prot="public">
          <name>MQTT_QOS_0_AT_MOST_ONCE</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Lowest Quality of Service, no acknowledgment needed for published message. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1gga396015e492b0fee8da37c7168d9cdb33a732d9d294b41bd472ef221c8dff0731d" prot="public">
          <name>MQTT_QOS_1_AT_LEAST_ONCE</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Medium Quality of Service, if acknowledgment expected for published message, duplicate messages permitted. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1gga396015e492b0fee8da37c7168d9cdb33a9012ddca1943a824454ac14a85bcf117" prot="public">
          <name>MQTT_QOS_2_EXACTLY_ONCE</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Highest Quality of Service, acknowledgment expected and message shall be published only once. Message not published to interested parties unless client issues a PUBREL. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MQTT Quality of Service types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="91" column="1" bodyfile="include/net/mqtt.h" bodystart="91" bodyend="107"/>
      </memberdef>
      <memberdef kind="enum" id="group__mqtt__socket_1gaa17b38ed9c7e65f3e01ad906b24bb618" prot="public" static="no" strong="no">
        <type></type>
        <name>mqtt_conn_return_code</name>
        <enumvalue id="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618a2fdd911a8978b8df2254766c1e3fd050" prot="public">
          <name>MQTT_CONNECTION_ACCEPTED</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Connection accepted. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618a9195e642b0b9e594d96aff84f0696744" prot="public">
          <name>MQTT_UNACCEPTABLE_PROTOCOL_VERSION</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The Server does not support the level of the MQTT protocol requested by the Client. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618aa662f46a044e31ae26397adffee82141" prot="public">
          <name>MQTT_IDENTIFIER_REJECTED</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The Client identifier is correct UTF-8 but not allowed by the Server. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618afe234e7084078871a567359819458df3" prot="public">
          <name>MQTT_SERVER_UNAVAILABLE</name>
          <initializer>= 0x03</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The Network Connection has been made but the MQTT service is unavailable. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618aa12d243cef12e3e7b1f4e245f64a1134" prot="public">
          <name>MQTT_BAD_USER_NAME_OR_PASSWORD</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The data in the user name or password is malformed. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618a4d101dcf5a101d90ae26ba8fe54a27eb" prot="public">
          <name>MQTT_NOT_AUTHORIZED</name>
          <initializer>= 0x05</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The Client is not authorized to connect. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MQTT CONNACK return codes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="110" column="1" bodyfile="include/net/mqtt.h" bodystart="110" bodyend="134"/>
      </memberdef>
      <memberdef kind="enum" id="group__mqtt__socket_1gaca1e61c8b14b75544e253cea355274a8" prot="public" static="no" strong="no">
        <type></type>
        <name>mqtt_suback_return_code</name>
        <enumvalue id="group__mqtt__socket_1ggaca1e61c8b14b75544e253cea355274a8a835fdffd58e7ad800d549c9dfce1ce01" prot="public">
          <name>MQTT_SUBACK_SUCCESS_QoS_0</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Subscription with QoS 0 succeeded. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1ggaca1e61c8b14b75544e253cea355274a8afd0c8b7b9c39b3e242f33f7603b3ca9c" prot="public">
          <name>MQTT_SUBACK_SUCCESS_QoS_1</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Subscription with QoS 1 succeeded. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1ggaca1e61c8b14b75544e253cea355274a8ae8702eb6a2944444abd9b2f6c1fb2e1b" prot="public">
          <name>MQTT_SUBACK_SUCCESS_QoS_2</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Subscription with QoS 2 succeeded. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1ggaca1e61c8b14b75544e253cea355274a8a08b9651ef43ea219f29125fcb43952f7" prot="public">
          <name>MQTT_SUBACK_FAILURE</name>
          <initializer>= 0x80</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Subscription for a topic failed. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MQTT SUBACK return codes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="137" column="1" bodyfile="include/net/mqtt.h" bodystart="137" bodyend="149"/>
      </memberdef>
      <memberdef kind="enum" id="group__mqtt__socket_1gaffc2c3078004cf8d24935be086ad63b4" prot="public" static="no" strong="no">
        <type></type>
        <name>mqtt_transport_type</name>
        <enumvalue id="group__mqtt__socket_1ggaffc2c3078004cf8d24935be086ad63b4a981f7e2ca25c5e478bf658750e26972a" prot="public">
          <name>MQTT_TRANSPORT_NON_SECURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use non secure TCP transport for MQTT connection. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__mqtt__socket_1ggaffc2c3078004cf8d24935be086ad63b4a61056a250c98f3d29ccf5cdbdda3d3df" prot="public">
          <name>MQTT_TRANSPORT_NUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shall not be used as a transport type. Indicator of maximum transport types possible. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MQTT transport type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="363" column="1" bodyfile="include/net/mqtt.h" bodystart="363" bodyend="389"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__mqtt__socket_1gabdf01ededb62ceb4c1608a64cb718a8c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* mqtt_evt_cb_t) (struct mqtt_client *client, const struct mqtt_evt *evt)</definition>
        <argsstring>)(struct mqtt_client *client, const struct mqtt_evt *evt)</argsstring>
        <name>mqtt_evt_cb_t</name>
        <briefdescription>
<para>Asynchronous event notification callback registered by the application. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifies the client for which the event is notified. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">evt</parametername>
</parameternamelist>
<parameterdescription>
<para>Event description along with result and associated parameters (if any). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="331" column="9" bodyfile="include/net/mqtt.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__mqtt__socket_1gad1376509ae7c946c840d103d8b59e9a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mqtt_client_init</definition>
        <argsstring>(struct mqtt_client *client)</argsstring>
        <name>mqtt_client_init</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>Initializes the client instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Client instance for which the procedure is requested. Shall not be NULL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Shall be called to initialize client structure, before setting any client parameters and before connecting to broker. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="551" column="6" declfile="include/net/mqtt.h" declline="551" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1gad936f28553cb2e771a843512b0a315fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_connect</definition>
        <argsstring>(struct mqtt_client *client)</argsstring>
        <name>mqtt_connect</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>API to request new MQTT client connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Client instance for which the procedure is requested. Shall not be NULL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This memory is assumed to be resident until mqtt_disconnect is called. </para>
</simplesect>
<simplesect kind="note"><para>Any subsequent changes to parameters like broker address, user name, device id, etc. have no effect once MQTT connection is established.</para>
</simplesect>
<simplesect kind="return"><para>0 or a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure.</para>
</simplesect>
<simplesect kind="note"><para>Default protocol revision used for connection request is 3.1.1. Please set client.protocol_version = MQTT_VERSION_3_1_0 to use protocol 3.1.0. </para>
</simplesect>
<simplesect kind="note"><para>Please modify <verbatim>embed:rst:inline :kconfig:`CONFIG_MQTT_KEEPALIVE` </verbatim> time to override default of 1 minute. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="589" column="5" declfile="include/net/mqtt.h" declline="589" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1ga57745efa1bf6fbdf7eb1b3f01623e4c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_publish</definition>
        <argsstring>(struct mqtt_client *client, const struct mqtt_publish_param *param)</argsstring>
        <name>mqtt_publish</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const struct <ref refid="structmqtt__publish__param" kindref="compound">mqtt_publish_param</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>API to publish messages on topics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Client instance for which the procedure is requested. Shall not be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameters to be used for the publish message. Shall not be NULL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 or a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="601" column="5" declfile="include/net/mqtt.h" declline="601" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1gae9069fceec2c018e64cc6beb16aa055c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_publish_qos1_ack</definition>
        <argsstring>(struct mqtt_client *client, const struct mqtt_puback_param *param)</argsstring>
        <name>mqtt_publish_qos1_ack</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const struct <ref refid="structmqtt__puback__param" kindref="compound">mqtt_puback_param</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>API used by client to send acknowledgment on receiving QoS1 publish message. Should be called on reception of <ref refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91aa893a345e05e796cfd28392c1c4d8cf9" kindref="member">MQTT_EVT_PUBLISH</ref> with QoS level <ref refid="group__mqtt__socket_1gga396015e492b0fee8da37c7168d9cdb33a732d9d294b41bd472ef221c8dff0731d" kindref="member">MQTT_QOS_1_AT_LEAST_ONCE</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Client instance for which the procedure is requested. Shall not be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifies message being acknowledged.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 or a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="615" column="5" declfile="include/net/mqtt.h" declline="615" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1gacbe41b83d9c0676d0d4cf01dd91765eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_publish_qos2_receive</definition>
        <argsstring>(struct mqtt_client *client, const struct mqtt_pubrec_param *param)</argsstring>
        <name>mqtt_publish_qos2_receive</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const struct <ref refid="structmqtt__pubrec__param" kindref="compound">mqtt_pubrec_param</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>API used by client to send acknowledgment on receiving QoS2 publish message. Should be called on reception of <ref refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91aa893a345e05e796cfd28392c1c4d8cf9" kindref="member">MQTT_EVT_PUBLISH</ref> with QoS level <ref refid="group__mqtt__socket_1gga396015e492b0fee8da37c7168d9cdb33a9012ddca1943a824454ac14a85bcf117" kindref="member">MQTT_QOS_2_EXACTLY_ONCE</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifies client instance for which the procedure is requested. Shall not be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifies message being acknowledged.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 or a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="629" column="5" declfile="include/net/mqtt.h" declline="629" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1ga6c952ed014f78774096bfb6099794803" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_publish_qos2_release</definition>
        <argsstring>(struct mqtt_client *client, const struct mqtt_pubrel_param *param)</argsstring>
        <name>mqtt_publish_qos2_release</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const struct <ref refid="structmqtt__pubrel__param" kindref="compound">mqtt_pubrel_param</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>API used by client to request release of QoS2 publish message. Should be called on reception of <ref refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91a1d5f6ba2524f935dd9625d85638eda87" kindref="member">MQTT_EVT_PUBREC</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Client instance for which the procedure is requested. Shall not be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifies message being released.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 or a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="642" column="5" declfile="include/net/mqtt.h" declline="642" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1ga2b17999e845d613f5b0b20015b8204f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_publish_qos2_complete</definition>
        <argsstring>(struct mqtt_client *client, const struct mqtt_pubcomp_param *param)</argsstring>
        <name>mqtt_publish_qos2_complete</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const struct <ref refid="structmqtt__pubcomp__param" kindref="compound">mqtt_pubcomp_param</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>API used by client to send acknowledgment on receiving QoS2 publish release message. Should be called on reception of <ref refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91ab35ebaf4dcc6698471eb16a41c8252a2" kindref="member">MQTT_EVT_PUBREL</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifies client instance for which the procedure is requested. Shall not be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifies message being completed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 or a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="656" column="5" declfile="include/net/mqtt.h" declline="656" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1ga40d226b891b8f62f2c486bbb11ce9678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_subscribe</definition>
        <argsstring>(struct mqtt_client *client, const struct mqtt_subscription_list *param)</argsstring>
        <name>mqtt_subscribe</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const struct <ref refid="structmqtt__subscription__list" kindref="compound">mqtt_subscription_list</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>API to request subscription of one or more topics on the connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifies client instance for which the procedure is requested. Shall not be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Subscription parameters. Shall not be NULL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 or a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="668" column="5" declfile="include/net/mqtt.h" declline="668" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1ga4ff43a198e93e332b5553a4d0b59261d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_unsubscribe</definition>
        <argsstring>(struct mqtt_client *client, const struct mqtt_subscription_list *param)</argsstring>
        <name>mqtt_unsubscribe</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const struct <ref refid="structmqtt__subscription__list" kindref="compound">mqtt_subscription_list</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>API to request unsubscription of one or more topics on the connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifies client instance for which the procedure is requested. Shall not be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameters describing topics being unsubscribed from. Shall not be NULL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>QoS included in topic description is unused in this API.</para>
</simplesect>
<simplesect kind="return"><para>0 or a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="683" column="5" declfile="include/net/mqtt.h" declline="683" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1gad1d549d37b69a61e1bf8d9d213e02ca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_ping</definition>
        <argsstring>(struct mqtt_client *client)</argsstring>
        <name>mqtt_ping</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>API to send MQTT ping. The use of this API is optional, as the library handles the connection keep-alive on it&apos;s own, see <ref refid="group__mqtt__socket_1ga8b87710d01076c8e51b1a75634168269" kindref="member">mqtt_live</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifies client instance for which procedure is requested.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 or a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="695" column="5" declfile="include/net/mqtt.h" declline="695" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1gad5e01a1b60c393adb0f7f34c1a90e6ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_disconnect</definition>
        <argsstring>(struct mqtt_client *client)</argsstring>
        <name>mqtt_disconnect</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>API to disconnect MQTT connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifies client instance for which procedure is requested.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 or a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="705" column="5" declfile="include/net/mqtt.h" declline="705" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1gafb2df41fad7c318f9fe75919919139bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_abort</definition>
        <argsstring>(struct mqtt_client *client)</argsstring>
        <name>mqtt_abort</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>API to abort MQTT connection. This will close the corresponding transport without closing the connection gracefully at the MQTT level (with disconnect message). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifies client instance for which procedure is requested.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 or a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="717" column="5" declfile="include/net/mqtt.h" declline="717" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1ga8b87710d01076c8e51b1a75634168269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_live</definition>
        <argsstring>(struct mqtt_client *client)</argsstring>
        <name>mqtt_live</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>This API should be called periodically for the client to be able to keep the connection alive by sending Ping Requests if need be. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Client instance for which the procedure is requested. Shall not be NULL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Application shall ensure that the periodicity of calling this function makes it possible to respect the Keep Alive time agreed with the broker on connection. <ref refid="group__mqtt__socket_1gad936f28553cb2e771a843512b0a315fa" kindref="member">mqtt_connect</ref> for details on Keep Alive time.</para>
</simplesect>
<simplesect kind="return"><para>0 or a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="733" column="5" declfile="include/net/mqtt.h" declline="733" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1gaa16bf7b0597ad00c4a3943235579e86b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_keepalive_time_left</definition>
        <argsstring>(const struct mqtt_client *client)</argsstring>
        <name>mqtt_keepalive_time_left</name>
        <param>
          <type>const struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>Helper function to determine when next keep alive message should be sent. Can be used for instance as a source for <computeroutput>poll</computeroutput> timeout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Client instance for which the procedure is requested.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Time in milliseconds until next keep alive message is expected to be sent. Function will return -1 if keep alive messages are not enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="745" column="5" declfile="include/net/mqtt.h" declline="745" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1ga2dbc3c158d63a6f57b362be94c22660a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_input</definition>
        <argsstring>(struct mqtt_client *client)</argsstring>
        <name>mqtt_input</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>Receive an incoming MQTT packet. The registered callback will be called with the packet content. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>In case of PUBLISH message, the payload has to be read separately with <ref refid="group__mqtt__socket_1ga3559cdd6093d75c6fe6792ec2a453172" kindref="member">mqtt_read_publish_payload</ref> function. The size of the payload to read is provided in the publish event structure.</para>
</simplesect>
<simplesect kind="note"><para>This is a non-blocking call.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Client instance for which the procedure is requested. Shall not be NULL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 or a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="762" column="5" declfile="include/net/mqtt.h" declline="762" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1ga3559cdd6093d75c6fe6792ec2a453172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_read_publish_payload</definition>
        <argsstring>(struct mqtt_client *client, void *buffer, size_t length)</argsstring>
        <name>mqtt_read_publish_payload</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Read the payload of the received PUBLISH message. This function should be called within the MQTT event handler, when MQTT PUBLISH message is notified. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is a non-blocking call.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Client instance for which the procedure is requested. Shall not be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer where payload should be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer, in bytes.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes read or a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="779" column="5" declfile="include/net/mqtt.h" declline="779" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1ga05213aceaa9e9cbbfaa9bab7a78b3d25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_read_publish_payload_blocking</definition>
        <argsstring>(struct mqtt_client *client, void *buffer, size_t length)</argsstring>
        <name>mqtt_read_publish_payload_blocking</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Blocking version of <ref refid="group__mqtt__socket_1ga3559cdd6093d75c6fe6792ec2a453172" kindref="member">mqtt_read_publish_payload</ref> function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Client instance for which the procedure is requested. Shall not be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer where payload should be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer, in bytes.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes read or a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="793" column="5" declfile="include/net/mqtt.h" declline="793" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__mqtt__socket_1ga31823965ec34a253793b40b50e800417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mqtt_readall_publish_payload</definition>
        <argsstring>(struct mqtt_client *client, uint8_t *buffer, size_t length)</argsstring>
        <name>mqtt_readall_publish_payload</name>
        <param>
          <type>struct <ref refid="structmqtt__client" kindref="compound">mqtt_client</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Blocking version of <ref refid="group__mqtt__socket_1ga3559cdd6093d75c6fe6792ec2a453172" kindref="member">mqtt_read_publish_payload</ref> function which runs until the required number of bytes are read. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>Client instance for which the procedure is requested. Shall not be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer where payload should be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to read.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, otherwise a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="808" column="5" declfile="include/net/mqtt.h" declline="808" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_NET_MQTT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_NET_MQTT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tls__credentials_8h" kindref="compound">net/tls_credentials.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net__ip_8h" kindref="compound">net/net_ip.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="mutex_8h" kindref="compound">sys/mutex.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="websocket_8h" kindref="compound">net/websocket.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="group__mqtt__socket_1ga0071fe013b9920711456ef51cc3e6d91" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1ga0071fe013b9920711456ef51cc3e6d91" kindref="member">mqtt_evt_type</ref><sp/>{</highlight></codeline>
<codeline lineno="46" refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91ab6e626b5a1eda76b32053ccbb4b7b5f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91ab6e626b5a1eda76b32053ccbb4b7b5f3" kindref="member">MQTT_EVT_CONNACK</ref>,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91a8de64478f7ae463d7844fc2e786ce032" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91a8de64478f7ae463d7844fc2e786ce032" kindref="member">MQTT_EVT_DISCONNECT</ref>,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91aa893a345e05e796cfd28392c1c4d8cf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91aa893a345e05e796cfd28392c1c4d8cf9" kindref="member">MQTT_EVT_PUBLISH</ref>,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91a2f25d5d4ca704ab63439d4706d3587de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91a2f25d5d4ca704ab63439d4706d3587de" kindref="member">MQTT_EVT_PUBACK</ref>,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91a1d5f6ba2524f935dd9625d85638eda87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91a1d5f6ba2524f935dd9625d85638eda87" kindref="member">MQTT_EVT_PUBREC</ref>,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91ab35ebaf4dcc6698471eb16a41c8252a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91ab35ebaf4dcc6698471eb16a41c8252a2" kindref="member">MQTT_EVT_PUBREL</ref>,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91afdba5e48987b4355f445d35b4dc056e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91afdba5e48987b4355f445d35b4dc056e8" kindref="member">MQTT_EVT_PUBCOMP</ref>,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91a67caa558ae7975548b3c4e1c1de5f8fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91a67caa558ae7975548b3c4e1c1de5f8fb" kindref="member">MQTT_EVT_SUBACK</ref>,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91aa5c333ddf366e44f932ec5545ed75bb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91aa5c333ddf366e44f932ec5545ed75bb2" kindref="member">MQTT_EVT_UNSUBACK</ref>,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91a52842872177b26e5e0e45a3c66fdb0b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1gga0071fe013b9920711456ef51cc3e6d91a52842872177b26e5e0e45a3c66fdb0b5" kindref="member">MQTT_EVT_PINGRESP</ref>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="group__mqtt__socket_1ga90d152a4b0986e9a07a12c7c56f5e2a0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1ga90d152a4b0986e9a07a12c7c56f5e2a0" kindref="member">mqtt_version</ref><sp/>{</highlight></codeline>
<codeline lineno="86" refid="group__mqtt__socket_1gga90d152a4b0986e9a07a12c7c56f5e2a0ac93057183f274a064e118af6b4d681e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1gga90d152a4b0986e9a07a12c7c56f5e2a0ac93057183f274a064e118af6b4d681e7" kindref="member">MQTT_VERSION_3_1_0</ref><sp/>=<sp/>3,<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1gga90d152a4b0986e9a07a12c7c56f5e2a0ad2926cb14db1fcfb95a47f45d2f5b08e" kindref="member">MQTT_VERSION_3_1_1</ref><sp/>=<sp/>4<sp/><sp/></highlight></codeline>
<codeline lineno="88" refid="group__mqtt__socket_1gga90d152a4b0986e9a07a12c7c56f5e2a0ad2926cb14db1fcfb95a47f45d2f5b08e" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="group__mqtt__socket_1ga396015e492b0fee8da37c7168d9cdb33" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1ga396015e492b0fee8da37c7168d9cdb33" kindref="member">mqtt_qos</ref><sp/>{</highlight></codeline>
<codeline lineno="95" refid="group__mqtt__socket_1gga396015e492b0fee8da37c7168d9cdb33a2ea1051887beb30d7c1fd61b5e153f6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1gga396015e492b0fee8da37c7168d9cdb33a2ea1051887beb30d7c1fd61b5e153f6e" kindref="member">MQTT_QOS_0_AT_MOST_ONCE</ref><sp/>=<sp/>0x00,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="group__mqtt__socket_1gga396015e492b0fee8da37c7168d9cdb33a732d9d294b41bd472ef221c8dff0731d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1gga396015e492b0fee8da37c7168d9cdb33a732d9d294b41bd472ef221c8dff0731d" kindref="member">MQTT_QOS_1_AT_LEAST_ONCE</ref><sp/>=<sp/>0x01,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1gga396015e492b0fee8da37c7168d9cdb33a9012ddca1943a824454ac14a85bcf117" kindref="member">MQTT_QOS_2_EXACTLY_ONCE</ref><sp/><sp/>=<sp/>0x02</highlight></codeline>
<codeline lineno="107" refid="group__mqtt__socket_1gga396015e492b0fee8da37c7168d9cdb33a9012ddca1943a824454ac14a85bcf117" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="group__mqtt__socket_1gaa17b38ed9c7e65f3e01ad906b24bb618" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1gaa17b38ed9c7e65f3e01ad906b24bb618" kindref="member">mqtt_conn_return_code</ref><sp/>{</highlight></codeline>
<codeline lineno="112" refid="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618a2fdd911a8978b8df2254766c1e3fd050" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618a2fdd911a8978b8df2254766c1e3fd050" kindref="member">MQTT_CONNECTION_ACCEPTED</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618a9195e642b0b9e594d96aff84f0696744" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618a9195e642b0b9e594d96aff84f0696744" kindref="member">MQTT_UNACCEPTABLE_PROTOCOL_VERSION</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x01,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618aa662f46a044e31ae26397adffee82141" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618aa662f46a044e31ae26397adffee82141" kindref="member">MQTT_IDENTIFIER_REJECTED</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x02,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618afe234e7084078871a567359819458df3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618afe234e7084078871a567359819458df3" kindref="member">MQTT_SERVER_UNAVAILABLE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x03,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618aa12d243cef12e3e7b1f4e245f64a1134" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618aa12d243cef12e3e7b1f4e245f64a1134" kindref="member">MQTT_BAD_USER_NAME_OR_PASSWORD</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x04,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618a4d101dcf5a101d90ae26ba8fe54a27eb" kindref="member">MQTT_NOT_AUTHORIZED</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x05</highlight></codeline>
<codeline lineno="134" refid="group__mqtt__socket_1ggaa17b38ed9c7e65f3e01ad906b24bb618a4d101dcf5a101d90ae26ba8fe54a27eb" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="group__mqtt__socket_1gaca1e61c8b14b75544e253cea355274a8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1gaca1e61c8b14b75544e253cea355274a8" kindref="member">mqtt_suback_return_code</ref><sp/>{</highlight></codeline>
<codeline lineno="139" refid="group__mqtt__socket_1ggaca1e61c8b14b75544e253cea355274a8a835fdffd58e7ad800d549c9dfce1ce01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1ggaca1e61c8b14b75544e253cea355274a8a835fdffd58e7ad800d549c9dfce1ce01" kindref="member">MQTT_SUBACK_SUCCESS_QoS_0</ref><sp/>=<sp/>0x00,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="group__mqtt__socket_1ggaca1e61c8b14b75544e253cea355274a8afd0c8b7b9c39b3e242f33f7603b3ca9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1ggaca1e61c8b14b75544e253cea355274a8afd0c8b7b9c39b3e242f33f7603b3ca9c" kindref="member">MQTT_SUBACK_SUCCESS_QoS_1</ref><sp/>=<sp/>0x01,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="group__mqtt__socket_1ggaca1e61c8b14b75544e253cea355274a8ae8702eb6a2944444abd9b2f6c1fb2e1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1ggaca1e61c8b14b75544e253cea355274a8ae8702eb6a2944444abd9b2f6c1fb2e1b" kindref="member">MQTT_SUBACK_SUCCESS_QoS_2</ref><sp/>=<sp/>0x02,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1ggaca1e61c8b14b75544e253cea355274a8a08b9651ef43ea219f29125fcb43952f7" kindref="member">MQTT_SUBACK_FAILURE</ref><sp/>=<sp/>0x80</highlight></codeline>
<codeline lineno="149" refid="group__mqtt__socket_1ggaca1e61c8b14b75544e253cea355274a8a08b9651ef43ea219f29125fcb43952f7" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="structmqtt__utf8" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__utf8" kindref="compound">mqtt_utf8</ref><sp/>{</highlight></codeline>
<codeline lineno="153" refid="structmqtt__utf8_1a69a949e3c9cb1794f8d28091601eba16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="structmqtt__utf8_1a69a949e3c9cb1794f8d28091601eba16" kindref="member">utf8</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154" refid="structmqtt__utf8_1a2376f943335326dae74c798141326b70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structmqtt__utf8_1a2376f943335326dae74c798141326b70" kindref="member">size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="group__mqtt__socket_1gaeaa4fcf581c7d6be755f9a053a3b488c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MQTT_UTF8_LITERAL(literal)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((struct<sp/>mqtt_utf8)<sp/>{literal,<sp/>sizeof(literal)<sp/>-<sp/>1})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="structmqtt__binstr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__binstr" kindref="compound">mqtt_binstr</ref><sp/>{</highlight></codeline>
<codeline lineno="171" refid="structmqtt__binstr_1a1f61872edd09941155f60a242e582ff7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="structmqtt__binstr_1a1f61872edd09941155f60a242e582ff7" kindref="member">data</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172" refid="structmqtt__binstr_1abcc36b6c59c3da740a6b352fe846fd5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structmqtt__binstr_1abcc36b6c59c3da740a6b352fe846fd5f" kindref="member">len</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal">};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="structmqtt__topic" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__topic" kindref="compound">mqtt_topic</ref><sp/>{</highlight></codeline>
<codeline lineno="180" refid="structmqtt__topic_1ab859d08baf88e6a1ac5135e1e55158d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__utf8" kindref="compound">mqtt_utf8</ref><sp/><ref refid="structmqtt__topic_1ab859d08baf88e6a1ac5135e1e55158d5" kindref="member">topic</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="structmqtt__topic_1a780e90d62c094557bd3918de3b3921e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structmqtt__topic_1a780e90d62c094557bd3918de3b3921e6" kindref="member">qos</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="structmqtt__publish__message" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__publish__message" kindref="compound">mqtt_publish_message</ref><sp/>{</highlight></codeline>
<codeline lineno="190" refid="structmqtt__publish__message_1acf5dba605db61efe68ec29337eea95e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__topic" kindref="compound">mqtt_topic</ref><sp/><ref refid="structmqtt__publish__message_1acf5dba605db61efe68ec29337eea95e9" kindref="member">topic</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191" refid="structmqtt__publish__message_1a6cfed92c8f8fb319d3cbf40b956cb94d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__binstr" kindref="compound">mqtt_binstr</ref><sp/><ref refid="structmqtt__publish__message_1a6cfed92c8f8fb319d3cbf40b956cb94d" kindref="member">payload</ref>;<sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal">};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="structmqtt__connack__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__connack__param" kindref="compound">mqtt_connack_param</ref><sp/>{</highlight></codeline>
<codeline lineno="200" refid="structmqtt__connack__param_1ab123a8236804082667ad93ddd7e40e7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structmqtt__connack__param_1ab123a8236804082667ad93ddd7e40e7a" kindref="member">session_present_flag</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="structmqtt__connack__param_1a07e8ca2df92b2f83fc9e732a9c9964f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1gaa17b38ed9c7e65f3e01ad906b24bb618" kindref="member">mqtt_conn_return_code</ref><sp/><ref refid="structmqtt__connack__param_1a07e8ca2df92b2f83fc9e732a9c9964f4" kindref="member">return_code</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="structmqtt__puback__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__puback__param" kindref="compound">mqtt_puback_param</ref><sp/>{</highlight></codeline>
<codeline lineno="210" refid="structmqtt__puback__param_1a727b919b853e77e480fb841e74a2dedf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structmqtt__puback__param_1a727b919b853e77e480fb841e74a2dedf" kindref="member">message_id</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="structmqtt__pubrec__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__pubrec__param" kindref="compound">mqtt_pubrec_param</ref><sp/>{</highlight></codeline>
<codeline lineno="215" refid="structmqtt__pubrec__param_1ab0f92884dbd6e63894210ff7f57fe62c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structmqtt__pubrec__param_1ab0f92884dbd6e63894210ff7f57fe62c" kindref="member">message_id</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">};</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="structmqtt__pubrel__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__pubrel__param" kindref="compound">mqtt_pubrel_param</ref><sp/>{</highlight></codeline>
<codeline lineno="220" refid="structmqtt__pubrel__param_1a4333fba7ac37d5a68fe921453b56b572" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structmqtt__pubrel__param_1a4333fba7ac37d5a68fe921453b56b572" kindref="member">message_id</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="structmqtt__pubcomp__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__pubcomp__param" kindref="compound">mqtt_pubcomp_param</ref><sp/>{</highlight></codeline>
<codeline lineno="225" refid="structmqtt__pubcomp__param_1ae8484ad4d62f953ecace6c990002e316" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structmqtt__pubcomp__param_1ae8484ad4d62f953ecace6c990002e316" kindref="member">message_id</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="structmqtt__suback__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__suback__param" kindref="compound">mqtt_suback_param</ref><sp/>{</highlight></codeline>
<codeline lineno="230" refid="structmqtt__suback__param_1a985b53444e7b2c10ab68844fcee34ee4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structmqtt__suback__param_1a985b53444e7b2c10ab68844fcee34ee4" kindref="member">message_id</ref>;</highlight></codeline>
<codeline lineno="231" refid="structmqtt__suback__param_1a94ef5183aa3438db0521f445650c5868" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__binstr" kindref="compound">mqtt_binstr</ref><sp/><ref refid="structmqtt__suback__param_1a94ef5183aa3438db0521f445650c5868" kindref="member">return_codes</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="structmqtt__unsuback__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__unsuback__param" kindref="compound">mqtt_unsuback_param</ref><sp/>{</highlight></codeline>
<codeline lineno="236" refid="structmqtt__unsuback__param_1aa453177181e07cd0532b8cf591be0f32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structmqtt__unsuback__param_1aa453177181e07cd0532b8cf591be0f32" kindref="member">message_id</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="structmqtt__publish__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__publish__param" kindref="compound">mqtt_publish_param</ref><sp/>{</highlight></codeline>
<codeline lineno="244" refid="structmqtt__publish__param_1a9841a4fbb30b597a9710863ce6034688" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__publish__message" kindref="compound">mqtt_publish_message</ref><sp/><ref refid="structmqtt__publish__param_1a9841a4fbb30b597a9710863ce6034688" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="structmqtt__publish__param_1aac4c6ba605506c183d2d5bdd7e550b3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structmqtt__publish__param_1aac4c6ba605506c183d2d5bdd7e550b3e" kindref="member">message_id</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="structmqtt__publish__param_1a2c2062c2b3ad027d5dfea56cb81c48e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structmqtt__publish__param_1a2c2062c2b3ad027d5dfea56cb81c48e7" kindref="member">dup_flag</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="structmqtt__publish__param_1a9b2c6fad5bf830276d8d3f6b5ab04210" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structmqtt__publish__param_1a9b2c6fad5bf830276d8d3f6b5ab04210" kindref="member">retain_flag</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">};</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="structmqtt__subscription__list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__subscription__list" kindref="compound">mqtt_subscription_list</ref><sp/>{</highlight></codeline>
<codeline lineno="263" refid="structmqtt__subscription__list_1ae9db5f602e3c649b1ccc180aef6c4b4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__topic" kindref="compound">mqtt_topic</ref><sp/>*<ref refid="structmqtt__subscription__list_1ae9db5f602e3c649b1ccc180aef6c4b4e" kindref="member">list</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="structmqtt__subscription__list_1aa44e0af3526ee0424627bb24a90ea6b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structmqtt__subscription__list_1aa44e0af3526ee0424627bb24a90ea6b1" kindref="member">list_count</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="structmqtt__subscription__list_1a0667dcd4bd5eb5fe1b13b4df1bf2c26f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structmqtt__subscription__list_1a0667dcd4bd5eb5fe1b13b4df1bf2c26f" kindref="member">message_id</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="unionmqtt__evt__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionmqtt__evt__param" kindref="compound">mqtt_evt_param</ref><sp/>{</highlight></codeline>
<codeline lineno="278" refid="unionmqtt__evt__param_1aa99a77bbade75b3f450088b32131f87a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__connack__param" kindref="compound">mqtt_connack_param</ref><sp/><ref refid="unionmqtt__evt__param_1aa99a77bbade75b3f450088b32131f87a" kindref="member">connack</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="unionmqtt__evt__param_1a41be40873e1ebb9bf6fbf6dc9566d6ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__publish__param" kindref="compound">mqtt_publish_param</ref><sp/><ref refid="unionmqtt__evt__param_1a41be40873e1ebb9bf6fbf6dc9566d6ff" kindref="member">publish</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="unionmqtt__evt__param_1a24bf756db9fa8cc67c0b02c4e2cb602c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__puback__param" kindref="compound">mqtt_puback_param</ref><sp/><ref refid="unionmqtt__evt__param_1a24bf756db9fa8cc67c0b02c4e2cb602c" kindref="member">puback</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="unionmqtt__evt__param_1a3b31e1d94c480b8d0244cc12d1c25524" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__pubrec__param" kindref="compound">mqtt_pubrec_param</ref><sp/><ref refid="unionmqtt__evt__param_1a3b31e1d94c480b8d0244cc12d1c25524" kindref="member">pubrec</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="unionmqtt__evt__param_1a2269e07f580fb65df5f3d0832aa6b3af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__pubrel__param" kindref="compound">mqtt_pubrel_param</ref><sp/><ref refid="unionmqtt__evt__param_1a2269e07f580fb65df5f3d0832aa6b3af" kindref="member">pubrel</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="unionmqtt__evt__param_1ac3d564095019ccf57c10678a433bc31a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__pubcomp__param" kindref="compound">mqtt_pubcomp_param</ref><sp/><ref refid="unionmqtt__evt__param_1ac3d564095019ccf57c10678a433bc31a" kindref="member">pubcomp</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="unionmqtt__evt__param_1af6ce2426884d2faa443b3dfdaa45594c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__suback__param" kindref="compound">mqtt_suback_param</ref><sp/><ref refid="unionmqtt__evt__param_1af6ce2426884d2faa443b3dfdaa45594c" kindref="member">suback</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="unionmqtt__evt__param_1ad040b028ed0aaabcaddedc204fb709d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__unsuback__param" kindref="compound">mqtt_unsuback_param</ref><sp/><ref refid="unionmqtt__evt__param_1ad040b028ed0aaabcaddedc204fb709d8" kindref="member">unsuback</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">};</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="structmqtt__evt" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__evt" kindref="compound">mqtt_evt</ref><sp/>{</highlight></codeline>
<codeline lineno="310" refid="structmqtt__evt_1a79d7a198d8ed9959bb7aae835b6301c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1ga0071fe013b9920711456ef51cc3e6d91" kindref="member">mqtt_evt_type</ref><sp/><ref refid="structmqtt__evt_1a79d7a198d8ed9959bb7aae835b6301c2" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="structmqtt__evt_1aca1085171667c46b2438f66d9227e07c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionmqtt__evt__param" kindref="compound">mqtt_evt_param</ref><sp/><ref refid="structmqtt__evt_1aca1085171667c46b2438f66d9227e07c" kindref="member">param</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="structmqtt__evt_1aa1a4304d4aa70440ba630f3fe5e76d2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmqtt__evt_1aa1a4304d4aa70440ba630f3fe5e76d2f" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal">};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="group__mqtt__socket_1gabdf01ededb62ceb4c1608a64cb718a8c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__mqtt__socket_1gabdf01ededb62ceb4c1608a64cb718a8c" kindref="member">mqtt_evt_cb_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__evt" kindref="compound">mqtt_evt</ref><sp/>*evt);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="structmqtt__sec__config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__sec__config" kindref="compound">mqtt_sec_config</ref><sp/>{</highlight></codeline>
<codeline lineno="337" refid="structmqtt__sec__config_1a0e04768b6589823464c2d13c31230cad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmqtt__sec__config_1a0e04768b6589823464c2d13c31230cad" kindref="member">peer_verify</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="structmqtt__sec__config_1a25415e32e00808fb6a24187f4234059f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structmqtt__sec__config_1a25415e32e00808fb6a24187f4234059f" kindref="member">cipher_count</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="structmqtt__sec__config_1a0c50aa204b56bb520abc6b2d28e477c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="structmqtt__sec__config_1a0c50aa204b56bb520abc6b2d28e477c4" kindref="member">cipher_list</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="structmqtt__sec__config_1a6d59afc061a749ea31f5bd415918a3e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structmqtt__sec__config_1a6d59afc061a749ea31f5bd415918a3e0" kindref="member">sec_tag_count</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="structmqtt__sec__config_1a73a66d76ac5566efe9d94c5c197fb3c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__tls__credentials_1gaadfe9694309e473f7be74ed98dfb36d3" kindref="member">sec_tag_t</ref><sp/>*<ref refid="structmqtt__sec__config_1a73a66d76ac5566efe9d94c5c197fb3c2" kindref="member">sec_tag_list</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="structmqtt__sec__config_1af7a0ee827bf98fde264000f4c9020c15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structmqtt__sec__config_1af7a0ee827bf98fde264000f4c9020c15" kindref="member">hostname</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="structmqtt__sec__config_1a5beac5704fec3e399e5c0099a57ce115" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmqtt__sec__config_1a5beac5704fec3e399e5c0099a57ce115" kindref="member">cert_nocopy</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">};</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="group__mqtt__socket_1gaffc2c3078004cf8d24935be086ad63b4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1gaffc2c3078004cf8d24935be086ad63b4" kindref="member">mqtt_transport_type</ref><sp/>{</highlight></codeline>
<codeline lineno="365" refid="group__mqtt__socket_1ggaffc2c3078004cf8d24935be086ad63b4a981f7e2ca25c5e478bf658750e26972a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1ggaffc2c3078004cf8d24935be086ad63b4a981f7e2ca25c5e478bf658750e26972a" kindref="member">MQTT_TRANSPORT_NON_SECURE</ref>,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_MQTT_LIB_TLS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MQTT_TRANSPORT_SECURE,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_MQTT_LIB_TLS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_MQTT_LIB_WEBSOCKET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MQTT_TRANSPORT_NON_SECURE_WEBSOCKET,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_MQTT_LIB_TLS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MQTT_TRANSPORT_SECURE_WEBSOCKET,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_MQTT_LIB_WEBSOCKET<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_MQTT_LIB_CUSTOM_TRANSPORT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MQTT_TRANSPORT_CUSTOM,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_MQTT_LIB_CUSTOM_TRANSPORT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1ggaffc2c3078004cf8d24935be086ad63b4a61056a250c98f3d29ccf5cdbdda3d3df" kindref="member">MQTT_TRANSPORT_NUM</ref></highlight></codeline>
<codeline lineno="389" refid="group__mqtt__socket_1ggaffc2c3078004cf8d24935be086ad63b4a61056a250c98f3d29ccf5cdbdda3d3df" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="structmqtt__transport" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__transport" kindref="compound">mqtt_transport</ref><sp/>{</highlight></codeline>
<codeline lineno="397" refid="structmqtt__transport_1a47b49927c79e67b202112c68b53d83f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1gaffc2c3078004cf8d24935be086ad63b4" kindref="member">mqtt_transport_type</ref><sp/><ref refid="structmqtt__transport_1a47b49927c79e67b202112c68b53d83f4" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TCP<sp/>socket<sp/>transport<sp/>for<sp/>MQTT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="403" refid="structmqtt__transport_1a3b4589dd05394589e7af460761b800bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmqtt__transport_1a3b4589dd05394589e7af460761b800bf" kindref="member">sock</ref>;</highlight></codeline>
<codeline lineno="404" refid="structmqtt__transport_1ae0ae95c8cb1f8b5f883579a4e16d51ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structmqtt__transport_1ae0ae95c8cb1f8b5f883579a4e16d51ca" kindref="member">tcp</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_MQTT_LIB_TLS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TLS<sp/>socket<sp/>transport<sp/>for<sp/>MQTT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmqtt__transport_1a3b4589dd05394589e7af460761b800bf" kindref="member">sock</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__sec__config" kindref="compound">mqtt_sec_config</ref><sp/>config;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>tls;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_MQTT_LIB_TLS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_MQTT_LIB_WEBSOCKET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwebsocket__request" kindref="compound">websocket_request</ref><sp/>config;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmqtt__transport_1a3b4589dd05394589e7af460761b800bf" kindref="member">sock</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>websocket;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_MQTT_LIB_CUSTOM_TRANSPORT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*custom_transport_data;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_MQTT_LIB_CUSTOM_TRANSPORT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_SOCKS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>addr;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addrlen;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>proxy;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal">};</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="structmqtt__internal" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__internal" kindref="compound">mqtt_internal</ref><sp/>{</highlight></codeline>
<codeline lineno="450" refid="structmqtt__internal_1af866a252b9e18496c8e1627704d8a8b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__mutex" kindref="compound">sys_mutex</ref><sp/><ref refid="structmqtt__internal_1af866a252b9e18496c8e1627704d8a8b2" kindref="member">mutex</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="structmqtt__internal_1a8f30cb1440efecf8ae8fc448e4f462f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structmqtt__internal_1a8f30cb1440efecf8ae8fc448e4f462f8" kindref="member">last_activity</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="structmqtt__internal_1acf93a973de5a5430e767e2996f1cd048" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structmqtt__internal_1acf93a973de5a5430e767e2996f1cd048" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="structmqtt__internal_1a45aeafd71dadaf1d0fd0bc3969c921de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structmqtt__internal_1a45aeafd71dadaf1d0fd0bc3969c921de" kindref="member">rx_buf_datalen</ref>;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="structmqtt__internal_1a921477a9839447f4fe1c823911680c92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structmqtt__internal_1a921477a9839447f4fe1c823911680c92" kindref="member">remaining_payload</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal">};</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="structmqtt__client" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>{</highlight></codeline>
<codeline lineno="473" refid="structmqtt__client_1a41cc1d3c5e5180af1d6376f88598678a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__internal" kindref="compound">mqtt_internal</ref><sp/><ref refid="structmqtt__client_1a41cc1d3c5e5180af1d6376f88598678a" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="structmqtt__client_1ac31a2ea9d67886f83fd3af88f33f36d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__transport" kindref="compound">mqtt_transport</ref><sp/><ref refid="structmqtt__client_1ac31a2ea9d67886f83fd3af88f33f36d9" kindref="member">transport</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="structmqtt__client_1aabd419115c8637e4e4c0e6d23a5a984d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__utf8" kindref="compound">mqtt_utf8</ref><sp/><ref refid="structmqtt__client_1aabd419115c8637e4e4c0e6d23a5a984d" kindref="member">client_id</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="structmqtt__client_1a72d61d9c0e717010ff90c2ed7fcddf5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structmqtt__client_1a72d61d9c0e717010ff90c2ed7fcddf5c" kindref="member">broker</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="structmqtt__client_1ab271f2061fe3c9e3c1a76158a1c00449" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__utf8" kindref="compound">mqtt_utf8</ref><sp/>*<ref refid="structmqtt__client_1ab271f2061fe3c9e3c1a76158a1c00449" kindref="member">user_name</ref>;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="structmqtt__client_1aef6da1db6f600a2bfd1c7dd0d78d1b6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__utf8" kindref="compound">mqtt_utf8</ref><sp/>*<ref refid="structmqtt__client_1aef6da1db6f600a2bfd1c7dd0d78d1b6d" kindref="member">password</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="structmqtt__client_1a4b23a72831697b78dc4019a4b6ac97e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__topic" kindref="compound">mqtt_topic</ref><sp/>*<ref refid="structmqtt__client_1a4b23a72831697b78dc4019a4b6ac97e4" kindref="member">will_topic</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="structmqtt__client_1a7f4e9547b1d91edf21589334db711499" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmqtt__utf8" kindref="compound">mqtt_utf8</ref><sp/>*<ref refid="structmqtt__client_1a7f4e9547b1d91edf21589334db711499" kindref="member">will_message</ref>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="structmqtt__client_1a44c515b8b25d59554990f6193217d83f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mqtt__socket_1gabdf01ededb62ceb4c1608a64cb718a8c" kindref="member">mqtt_evt_cb_t</ref><sp/><ref refid="structmqtt__client_1a44c515b8b25d59554990f6193217d83f" kindref="member">evt_cb</ref>;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="structmqtt__client_1a9f63fb54f8557135c1aa38a60bb7053c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="structmqtt__client_1a9f63fb54f8557135c1aa38a60bb7053c" kindref="member">rx_buf</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="structmqtt__client_1a66335741e991a2985ab5d4d7765651d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structmqtt__client_1a66335741e991a2985ab5d4d7765651d2" kindref="member">rx_buf_size</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="structmqtt__client_1ae582274bf396caa0a3427f1aeace639c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="structmqtt__client_1ae582274bf396caa0a3427f1aeace639c" kindref="member">tx_buf</ref>;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="structmqtt__client_1a4c456f4065e3bc20752d908f2d805667" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structmqtt__client_1a4c456f4065e3bc20752d908f2d805667" kindref="member">tx_buf_size</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="structmqtt__client_1aa65a4af5952634e4ff5c4bf700ccccd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structmqtt__client_1aa65a4af5952634e4ff5c4bf700ccccd7" kindref="member">keepalive</ref>;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="527" refid="structmqtt__client_1a63e3c1b470a7de9d179b1c0686504a68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structmqtt__client_1a63e3c1b470a7de9d179b1c0686504a68" kindref="member">protocol_version</ref>;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="structmqtt__client_1a67f76cd0feadf8ae11ed232dcc9ac1d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref><sp/><ref refid="structmqtt__client_1a67f76cd0feadf8ae11ed232dcc9ac1d1" kindref="member">unacked_ping</ref>;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="534" refid="structmqtt__client_1ac96879e15ccd829fbcf9b88913161c0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structmqtt__client_1ac96879e15ccd829fbcf9b88913161c0d" kindref="member">will_retain</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="structmqtt__client_1aae9ecb0faf8dc4337579e0713d065184" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structmqtt__client_1aae9ecb0faf8dc4337579e0713d065184" kindref="member">clean_session</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="540"><highlight class="normal">};</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="group__mqtt__socket_1gad1376509ae7c946c840d103d8b59e9a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1gad1376509ae7c946c840d103d8b59e9a1" kindref="member">mqtt_client_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_SOCKS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Set<sp/>proxy<sp/>server<sp/>details</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>client<sp/>Client<sp/>instance<sp/>for<sp/>which<sp/>the<sp/>procedure<sp/>is<sp/>requested,</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shall<sp/>not<sp/>be<sp/>NULL.</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>proxy_addr<sp/>Proxy<sp/>server<sp/>address.</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>addrlen<sp/>Proxy<sp/>server<sp/>address<sp/>length.</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/>*<sp/>@return<sp/>0<sp/>or<sp/>a<sp/>negative<sp/>error<sp/>code<sp/>(errno.h)<sp/>indicating<sp/>reason<sp/>of<sp/>failure.</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>*<sp/>@note<sp/>Must<sp/>be<sp/>called<sp/>before<sp/>calling<sp/>mqtt_connect().</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mqtt_client_set_proxy(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*proxy_addr,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addrlen);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="589" refid="group__mqtt__socket_1gad936f28553cb2e771a843512b0a315fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1gad936f28553cb2e771a843512b0a315fa" kindref="member">mqtt_connect</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="601" refid="group__mqtt__socket_1ga57745efa1bf6fbdf7eb1b3f01623e4c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1ga57745efa1bf6fbdf7eb1b3f01623e4c7" kindref="member">mqtt_publish</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__publish__param" kindref="compound">mqtt_publish_param</ref><sp/>*param);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="615" refid="group__mqtt__socket_1gae9069fceec2c018e64cc6beb16aa055c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1gae9069fceec2c018e64cc6beb16aa055c" kindref="member">mqtt_publish_qos1_ack</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__puback__param" kindref="compound">mqtt_puback_param</ref><sp/>*param);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="629" refid="group__mqtt__socket_1gacbe41b83d9c0676d0d4cf01dd91765eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1gacbe41b83d9c0676d0d4cf01dd91765eb" kindref="member">mqtt_publish_qos2_receive</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__pubrec__param" kindref="compound">mqtt_pubrec_param</ref><sp/>*param);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="642" refid="group__mqtt__socket_1ga6c952ed014f78774096bfb6099794803" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1ga6c952ed014f78774096bfb6099794803" kindref="member">mqtt_publish_qos2_release</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__pubrel__param" kindref="compound">mqtt_pubrel_param</ref><sp/>*param);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="656" refid="group__mqtt__socket_1ga2b17999e845d613f5b0b20015b8204f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1ga2b17999e845d613f5b0b20015b8204f3" kindref="member">mqtt_publish_qos2_complete</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__pubcomp__param" kindref="compound">mqtt_pubcomp_param</ref><sp/>*param);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="group__mqtt__socket_1ga40d226b891b8f62f2c486bbb11ce9678" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1ga40d226b891b8f62f2c486bbb11ce9678" kindref="member">mqtt_subscribe</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__subscription__list" kindref="compound">mqtt_subscription_list</ref><sp/>*param);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="683" refid="group__mqtt__socket_1ga4ff43a198e93e332b5553a4d0b59261d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1ga4ff43a198e93e332b5553a4d0b59261d" kindref="member">mqtt_unsubscribe</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__subscription__list" kindref="compound">mqtt_subscription_list</ref><sp/>*param);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="695" refid="group__mqtt__socket_1gad1d549d37b69a61e1bf8d9d213e02ca8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1gad1d549d37b69a61e1bf8d9d213e02ca8" kindref="member">mqtt_ping</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="705" refid="group__mqtt__socket_1gad5e01a1b60c393adb0f7f34c1a90e6ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1gad5e01a1b60c393adb0f7f34c1a90e6ff" kindref="member">mqtt_disconnect</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="717" refid="group__mqtt__socket_1gafb2df41fad7c318f9fe75919919139bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1gafb2df41fad7c318f9fe75919919139bd" kindref="member">mqtt_abort</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="733" refid="group__mqtt__socket_1ga8b87710d01076c8e51b1a75634168269" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1ga8b87710d01076c8e51b1a75634168269" kindref="member">mqtt_live</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="745" refid="group__mqtt__socket_1gaa16bf7b0597ad00c4a3943235579e86b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1gaa16bf7b0597ad00c4a3943235579e86b" kindref="member">mqtt_keepalive_time_left</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="762" refid="group__mqtt__socket_1ga2dbc3c158d63a6f57b362be94c22660a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1ga2dbc3c158d63a6f57b362be94c22660a" kindref="member">mqtt_input</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="779" refid="group__mqtt__socket_1ga3559cdd6093d75c6fe6792ec2a453172" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1ga3559cdd6093d75c6fe6792ec2a453172" kindref="member">mqtt_read_publish_payload</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__kernel__mbox__api_1gab659fc0dee01e6639b8b6108addbd046" kindref="member">buffer</ref>,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="793" refid="group__mqtt__socket_1ga05213aceaa9e9cbbfaa9bab7a78b3d25" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1ga05213aceaa9e9cbbfaa9bab7a78b3d25" kindref="member">mqtt_read_publish_payload_blocking</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__kernel__mbox__api_1gab659fc0dee01e6639b8b6108addbd046" kindref="member">buffer</ref>,</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="808" refid="group__mqtt__socket_1ga31823965ec34a253793b40b50e800417" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mqtt__socket_1ga31823965ec34a253793b40b50e800417" kindref="member">mqtt_readall_publish_payload</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmqtt__client" kindref="compound">mqtt_client</ref><sp/>*<ref refid="msgq_2msgq__usage_2src_2main_8c_1ad8d0b96f8c26e36fa704776a807468a1" kindref="member">client</ref>,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="group__kernel__mbox__api_1gab659fc0dee01e6639b8b6108addbd046" kindref="member">buffer</ref>,</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_NET_MQTT_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/net/mqtt.h"/>
  </compounddef>
</doxygen>
