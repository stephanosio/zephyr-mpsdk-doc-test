<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="asm-macro-64-bit-gnu_8h" kind="file" language="C++">
    <compoundname>asm-macro-64-bit-gnu.h</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" prot="public" static="no" mutable="no">
        <type>irp</type>
        <definition>workaround assembler barfing for ST if else stl aa endif endm endr macro STR else if off STR as off else stl endif endif endm macro PUSHR r pushl r endm macro POPR r popl r endm macro LRR aux lrl aux endm macro SRR aux srl aux endm irp nz macro ADDR cc v addl cc v endm endr irp nz macro ADD2R cc v add2l cc v endm endr macro ADD3R v add3l v endm macro SUBR v subl v endm macro BMSKNR v bmsknl v endm macro LSRR v lsrl v endm macro ASLR v asll v endm macro ANDR v andl v endm macro v orl v endm irp cc</definition>
        <argsstring></argsstring>
        <name>cc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" line="10" column="8" bodyfile="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asm-macro-64-bit-gnu_8h_1a0ef89636f8d03ae88717291e66d59527" prot="public" static="no" mutable="no">
        <type>irp</type>
        <definition>irp hi</definition>
        <argsstring></argsstring>
        <name>hi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" line="10" column="10" bodyfile="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" prot="public" static="no" mutable="no">
        <type>irp nz macro <ref refid="asm-macro-32-bit-mwdt_8h_1a62c92c2e7e269b0afb80256c5207da7b" kindref="member">MOVR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref></type>
        <definition>workaround assembler barfing for ST if else stl aa endif endm endr macro STR else if off STR as off else stl endif endif endm macro PUSHR r pushl r endm macro POPR r popl r endm macro LRR aux lrl aux endm macro SRR aux srl aux endm irp nz macro ADDR cc v addl cc v endm endr irp nz macro ADD2R cc v add2l cc v endm endr macro ADD3R v add3l v endm macro SUBR v subl v endm macro BMSKNR v bmsknl v endm macro LSRR v lsrl v endm macro ASLR v asll v endm macro ANDR v andl v endm macro v orl v endm irp eq macro BRR cc lbl br lbl endm endr macro BREQR lbl breql d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" line="11" column="14" bodyfile="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asm-macro-64-bit-gnu_8h_1a8be979fed261ea1fe93f3bf629f3aa9b" prot="public" static="no" mutable="no">
        <type>irp nz macro <ref refid="asm-macro-32-bit-mwdt_8h_1a62c92c2e7e269b0afb80256c5207da7b" kindref="member">MOVR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> <ref refid="kobject_8c_1ac3f4657537e42ff1fa877307841464af" kindref="member">s</ref> movl <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> <ref refid="kobject_8c_1ac3f4657537e42ff1fa877307841464af" kindref="member">s</ref> endm endr irp</type>
        <definition>irp nz macro MOVR cc s movl cc s endm endr irp aw macro LDR aa endm endr irp aa</definition>
        <argsstring></argsstring>
        <name>aa</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" line="16" column="8" bodyfile="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asm-macro-64-bit-gnu_8h_1a65db1da5eb749b340685303a403ae14d" prot="public" static="no" mutable="no">
        <type>irp nz macro <ref refid="asm-macro-32-bit-mwdt_8h_1a62c92c2e7e269b0afb80256c5207da7b" kindref="member">MOVR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> <ref refid="kobject_8c_1ac3f4657537e42ff1fa877307841464af" kindref="member">s</ref> movl <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> <ref refid="kobject_8c_1ac3f4657537e42ff1fa877307841464af" kindref="member">s</ref> endm endr irp</type>
        <definition>irp nz macro MOVR cc s movl cc s endm endr irp aw macro LDR aa endm endr irp ab</definition>
        <argsstring></argsstring>
        <name>ab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" line="16" column="10" bodyfile="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asm-macro-64-bit-gnu_8h_1ac93d5f4341d561a6bd9864e880cffcf4" prot="public" static="no" mutable="no">
        <type>irp nz macro <ref refid="asm-macro-32-bit-mwdt_8h_1a62c92c2e7e269b0afb80256c5207da7b" kindref="member">MOVR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> <ref refid="kobject_8c_1ac3f4657537e42ff1fa877307841464af" kindref="member">s</ref> movl <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> <ref refid="kobject_8c_1ac3f4657537e42ff1fa877307841464af" kindref="member">s</ref> endm endr irp</type>
        <definition>irp nz macro MOVR cc s movl cc s endm endr irp aw macro LDR aa endm endr irp as</definition>
        <argsstring></argsstring>
        <name>as</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" line="16" column="12" bodyfile="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" prot="public" static="no" mutable="no">
        <type>irp nz macro <ref refid="asm-macro-32-bit-mwdt_8h_1a62c92c2e7e269b0afb80256c5207da7b" kindref="member">MOVR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> s movl <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> s endm endr irp aw macro <ref refid="asm-macro-32-bit-mwdt_8h_1a1a46311eefaef8a6a42bae236b114d6b" kindref="member">LDR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1a8be979fed261ea1fe93f3bf629f3aa9b" kindref="member">aa</ref></type>
        <definition>workaround assembler barfing for ST if else stl aa endif endm endr macro STR else if off STR as off else stl endif endif endm macro PUSHR r pushl r endm macro POPR r popl r endm macro LRR aux lrl aux endm macro SRR aux srl aux endm irp nz macro ADDR cc v addl cc v endm endr irp nz macro ADD2R cc v add2l cc v endm endr macro ADD3R v add3l v endm macro SUBR v subl v endm macro BMSKNR v bmsknl v endm macro LSRR v lsrl v endm macro ASLR v asll v endm macro ANDR v andl v endm macro v orl v endm irp eq macro BRR cc lbl br lbl endm endr macro BREQR lbl breql s</definition>
        <argsstring></argsstring>
        <name>s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" line="17" column="15" bodyfile="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asm-macro-64-bit-gnu_8h_1adbc19a384ffe3a93866980a920b08394" prot="public" static="no" mutable="no">
        <type>irp nz macro <ref refid="asm-macro-32-bit-mwdt_8h_1a62c92c2e7e269b0afb80256c5207da7b" kindref="member">MOVR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> <ref refid="kobject_8c_1ac3f4657537e42ff1fa877307841464af" kindref="member">s</ref> movl <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> <ref refid="kobject_8c_1ac3f4657537e42ff1fa877307841464af" kindref="member">s</ref> endm endr irp aw macro <ref refid="asm-macro-32-bit-mwdt_8h_1a1a46311eefaef8a6a42bae236b114d6b" kindref="member">LDR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1a8be979fed261ea1fe93f3bf629f3aa9b" kindref="member">aa</ref></type>
        <definition>workaround assembler barfing for ST if else stl aa endif endm endr macro STR off</definition>
        <argsstring></argsstring>
        <name>off</name>
        <initializer>=0
	<ref refid="asm-macro-64-bit-gnu_8h_1a8be979fed261ea1fe93f3bf629f3aa9b" kindref="member">ldl\aa</ref> \<ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" line="17" column="17" bodyfile="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" prot="public" static="no" mutable="no">
        <type>workaround assembler barfing for ST</type>
        <definition>workaround assembler barfing for ST r</definition>
        <argsstring></argsstring>
        <name>r</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" line="24" column="38" bodyfile="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asm-macro-64-bit-gnu_8h_1a73772c29f6eea427991a6d445478808d" prot="public" static="no" mutable="no">
        <type>workaround assembler barfing for ST if else stl <ref refid="asm-macro-64-bit-gnu_8h_1a8be979fed261ea1fe93f3bf629f3aa9b" kindref="member">aa</ref> endif endm endr macro <ref refid="asm-macro-32-bit-mwdt_8h_1a2559ca808b98187e087954aafba01ad1" kindref="member">STR</ref> else if <ref refid="asm-macro-64-bit-gnu_8h_1adbc19a384ffe3a93866980a920b08394" kindref="member">off</ref> <ref refid="asm-macro-32-bit-mwdt_8h_1a2559ca808b98187e087954aafba01ad1" kindref="member">STR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1ac93d5f4341d561a6bd9864e880cffcf4" kindref="member">as</ref> <ref refid="asm-macro-64-bit-gnu_8h_1adbc19a384ffe3a93866980a920b08394" kindref="member">off</ref> else stl endif endif endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1aaecb2f53890260a5b5518501ac4ae55b" kindref="member">PUSHR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref> pushl <ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref> endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1a0f674b4d35f1df924883bff738f5c288" kindref="member">POPR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref> popl <ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref> endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1af065467bfff1489bf1d38337a5d60988" kindref="member">LRR</ref> aux lrl aux endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1a4ab637a402c195c93f2e5f1d0fcccf78" kindref="member">SRR</ref> aux srl aux endm irp nz macro <ref refid="asm-macro-32-bit-mwdt_8h_1a74d94870ad16a58f150bf43374bcc908" kindref="member">ADDR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> v addl <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> v endm endr irp nz macro <ref refid="asm-macro-32-bit-mwdt_8h_1a4213081f87edc43524180616979bd1b8" kindref="member">ADD2R</ref> <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> v add2l <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> v endm endr macro <ref refid="asm-macro-32-bit-mwdt_8h_1a9cb390b45f968e4859be09505e376ff6" kindref="member">ADD3R</ref> v add3l v endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1a1548d46b55a34b4830367a41995f6f48" kindref="member">SUBR</ref> v subl v endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1aa4129c1e4b6617f30740aada9bdd872d" kindref="member">BMSKNR</ref> v bmsknl v endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1a8667c7c46bc57aff0cac0ca728023ed5" kindref="member">LSRR</ref> v lsrl v endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1aaff8d26b5c5198b247467cb55a7df38b" kindref="member">ASLR</ref> v asll v endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1abf83bab508dfaea0c41d8093d7b1c551" kindref="member">ANDR</ref> v andl v endm macro</type>
        <definition>workaround assembler barfing for ST if else stl aa endif endm endr macro STR else if off STR as off else stl endif endif endm macro PUSHR r pushl r endm macro POPR r popl r endm macro LRR aux lrl aux endm macro SRR aux srl aux endm irp nz macro ADDR cc v addl cc v endm endr irp nz macro ADD2R cc v add2l cc v endm endr macro ADD3R v add3l v endm macro SUBR v subl v endm macro BMSKNR v bmsknl v endm macro LSRR v lsrl v endm macro ASLR v asll v endm macro ANDR v andl v endm macro ORR</definition>
        <argsstring></argsstring>
        <name>ORR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" line="97" column="7" bodyfile="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asm-macro-64-bit-gnu_8h_1a69384ae28398c3f7eb9ffc42f9fb3df2" prot="public" static="no" mutable="no">
        <type>workaround assembler barfing for ST if else stl <ref refid="asm-macro-64-bit-gnu_8h_1a8be979fed261ea1fe93f3bf629f3aa9b" kindref="member">aa</ref> endif endm endr macro <ref refid="asm-macro-32-bit-mwdt_8h_1a2559ca808b98187e087954aafba01ad1" kindref="member">STR</ref> else if <ref refid="asm-macro-64-bit-gnu_8h_1adbc19a384ffe3a93866980a920b08394" kindref="member">off</ref> <ref refid="asm-macro-32-bit-mwdt_8h_1a2559ca808b98187e087954aafba01ad1" kindref="member">STR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1ac93d5f4341d561a6bd9864e880cffcf4" kindref="member">as</ref> <ref refid="asm-macro-64-bit-gnu_8h_1adbc19a384ffe3a93866980a920b08394" kindref="member">off</ref> else stl endif endif endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1aaecb2f53890260a5b5518501ac4ae55b" kindref="member">PUSHR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref> pushl <ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref> endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1a0f674b4d35f1df924883bff738f5c288" kindref="member">POPR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref> popl <ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref> endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1af065467bfff1489bf1d38337a5d60988" kindref="member">LRR</ref> aux lrl aux endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1a4ab637a402c195c93f2e5f1d0fcccf78" kindref="member">SRR</ref> aux srl aux endm irp nz macro <ref refid="asm-macro-32-bit-mwdt_8h_1a74d94870ad16a58f150bf43374bcc908" kindref="member">ADDR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> v addl <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> v endm endr irp nz macro <ref refid="asm-macro-32-bit-mwdt_8h_1a4213081f87edc43524180616979bd1b8" kindref="member">ADD2R</ref> <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> v add2l <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> v endm endr macro <ref refid="asm-macro-32-bit-mwdt_8h_1a9cb390b45f968e4859be09505e376ff6" kindref="member">ADD3R</ref> v add3l v endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1a1548d46b55a34b4830367a41995f6f48" kindref="member">SUBR</ref> v subl v endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1aa4129c1e4b6617f30740aada9bdd872d" kindref="member">BMSKNR</ref> v bmsknl v endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1a8667c7c46bc57aff0cac0ca728023ed5" kindref="member">LSRR</ref> v lsrl v endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1aaff8d26b5c5198b247467cb55a7df38b" kindref="member">ASLR</ref> v asll v endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1abf83bab508dfaea0c41d8093d7b1c551" kindref="member">ANDR</ref> v andl v endm macro v orl v endm irp</type>
        <definition>workaround assembler barfing for ST if else stl aa endif endm endr macro STR else if off STR as off else stl endif endif endm macro PUSHR r pushl r endm macro POPR r popl r endm macro LRR aux lrl aux endm macro SRR aux srl aux endm irp nz macro ADDR cc v addl cc v endm endr irp nz macro ADD2R cc v add2l cc v endm endr macro ADD3R v add3l v endm macro SUBR v subl v endm macro BMSKNR v bmsknl v endm macro LSRR v lsrl v endm macro ASLR v asll v endm macro ANDR v andl v endm macro v orl v endm irp ne</definition>
        <argsstring></argsstring>
        <name>ne</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" line="101" column="10" bodyfile="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="asm-macro-64-bit-gnu_8h_1a0f83c16c864dd25dbe54e81e22ea092a" prot="public" static="no" mutable="no">
        <type>workaround assembler barfing for ST if else stl <ref refid="asm-macro-64-bit-gnu_8h_1a8be979fed261ea1fe93f3bf629f3aa9b" kindref="member">aa</ref> endif endm endr macro <ref refid="asm-macro-32-bit-mwdt_8h_1a2559ca808b98187e087954aafba01ad1" kindref="member">STR</ref> else if <ref refid="asm-macro-64-bit-gnu_8h_1adbc19a384ffe3a93866980a920b08394" kindref="member">off</ref> <ref refid="asm-macro-32-bit-mwdt_8h_1a2559ca808b98187e087954aafba01ad1" kindref="member">STR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1ac93d5f4341d561a6bd9864e880cffcf4" kindref="member">as</ref> <ref refid="asm-macro-64-bit-gnu_8h_1adbc19a384ffe3a93866980a920b08394" kindref="member">off</ref> else stl endif endif endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1aaecb2f53890260a5b5518501ac4ae55b" kindref="member">PUSHR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref> pushl <ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref> endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1a0f674b4d35f1df924883bff738f5c288" kindref="member">POPR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref> popl <ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref> endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1af065467bfff1489bf1d38337a5d60988" kindref="member">LRR</ref> aux lrl aux endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1a4ab637a402c195c93f2e5f1d0fcccf78" kindref="member">SRR</ref> aux srl aux endm irp nz macro <ref refid="asm-macro-32-bit-mwdt_8h_1a74d94870ad16a58f150bf43374bcc908" kindref="member">ADDR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> v addl <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> v endm endr irp nz macro <ref refid="asm-macro-32-bit-mwdt_8h_1a4213081f87edc43524180616979bd1b8" kindref="member">ADD2R</ref> <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> v add2l <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> v endm endr macro <ref refid="asm-macro-32-bit-mwdt_8h_1a9cb390b45f968e4859be09505e376ff6" kindref="member">ADD3R</ref> v add3l v endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1a1548d46b55a34b4830367a41995f6f48" kindref="member">SUBR</ref> v subl v endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1aa4129c1e4b6617f30740aada9bdd872d" kindref="member">BMSKNR</ref> v bmsknl v endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1a8667c7c46bc57aff0cac0ca728023ed5" kindref="member">LSRR</ref> v lsrl v endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1aaff8d26b5c5198b247467cb55a7df38b" kindref="member">ASLR</ref> v asll v endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1abf83bab508dfaea0c41d8093d7b1c551" kindref="member">ANDR</ref> v andl v endm macro v orl v endm irp eq macro <ref refid="asm-macro-32-bit-mwdt_8h_1a3b737f39fe46787abeecc3661fad4946" kindref="member">BRR</ref> <ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref> lbl br lbl endm endr macro <ref refid="asm-macro-32-bit-mwdt_8h_1abe3bac34bb316244a20ddc88ebc75937" kindref="member">BREQR</ref> lbl breql lbl endm macro <ref refid="asm-macro-32-bit-mwdt_8h_1a2914e6612b9957eba801ab818e2cbded" kindref="member">CMPR</ref></type>
        <definition>workaround assembler barfing for ST if else stl aa endif endm endr macro STR else if off STR as off else stl endif endif endm macro PUSHR r pushl r endm macro POPR r popl r endm macro LRR aux lrl aux endm macro SRR aux srl aux endm irp nz macro ADDR cc v addl cc v endm endr irp nz macro ADD2R cc v add2l cc v endm endr macro ADD3R v add3l v endm macro SUBR v subl v endm macro BMSKNR v bmsknl v endm macro LSRR v lsrl v endm macro ASLR v asll v endm macro ANDR v andl v endm macro v orl v endm irp eq macro BRR cc lbl br lbl endm endr macro BREQR lbl breql lbl endm macro CMPR op2 cmpl op1</definition>
        <argsstring></argsstring>
        <name>op1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" line="111" column="12" bodyfile="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2021<sp/>Synopsys,<sp/>Inc.<sp/>(www.synopsys.com)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Vineet<sp/>Gupta<sp/>&lt;vgupta@synopsys.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>pseudo-mnemonics<sp/>for<sp/>ALU/Memory<sp/>instructions<sp/>for<sp/>ARC64<sp/>ISA</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" refkind="member"><highlight class="normal">.irp<sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref>,,.hi,.nz</highlight></codeline>
<codeline lineno="11" refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" refkind="member"><highlight class="normal">.macro<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">MOVR\cc</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">movl\cc   \d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">\s</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="14"><highlight class="normal">.endr</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="asm-macro-64-bit-gnu_8h_1a8be979fed261ea1fe93f3bf629f3aa9b" refkind="member"><highlight class="normal">.irp<sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a8be979fed261ea1fe93f3bf629f3aa9b" kindref="member">aa</ref>,,.ab,.as,.aw</highlight></codeline>
<codeline lineno="17" refid="asm-macro-64-bit-gnu_8h_1adbc19a384ffe3a93866980a920b08394" refkind="member"><highlight class="normal">.macro<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a8be979fed261ea1fe93f3bf629f3aa9b" kindref="member">LDR\aa</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1adbc19a384ffe3a93866980a920b08394" kindref="member">off</ref>=0</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">ldl\aa \d</ref>,<sp/>[<ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">\s</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1adbc19a384ffe3a93866980a920b08394" kindref="member">\off</ref>]</highlight></codeline>
<codeline lineno="19"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="20"><highlight class="normal">.endr</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">.irp<sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a8be979fed261ea1fe93f3bf629f3aa9b" kindref="member">aa</ref>,.ab,.as,.aw</highlight></codeline>
<codeline lineno="23"><highlight class="normal">.macro<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a8be979fed261ea1fe93f3bf629f3aa9b" kindref="member">STR\aa</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1adbc19a384ffe3a93866980a920b08394" kindref="member">off</ref>=0</highlight></codeline>
<codeline lineno="24" refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>workaround<sp/>assembler<sp/>barfing<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ST<sp/><ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref>,<sp/>[@symb,<sp/>0]</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.if<sp/>\off<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">stl\aa \d</ref>,<sp/>[<ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">\s</ref>]</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.else</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">stl\aa \d</ref>,<sp/>[<ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">\s</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1adbc19a384ffe3a93866980a920b08394" kindref="member">\off</ref>]</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.endif</highlight></codeline>
<codeline lineno="30"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="31"><highlight class="normal">.endr</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">.macro<sp/><ref refid="asm-macro-32-bit-mwdt_8h_1a2559ca808b98187e087954aafba01ad1" kindref="member">STR</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1adbc19a384ffe3a93866980a920b08394" kindref="member">off</ref>=0</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.if<sp/>\off<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">stl \d</ref>,<sp/>[<ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">\s</ref>]</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.else</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.if<sp/>\off<sp/>&gt;<sp/>256</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-32-bit-mwdt_8h_1a2559ca808b98187e087954aafba01ad1" kindref="member">STR</ref>.as<sp/>\d,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">\s</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1adbc19a384ffe3a93866980a920b08394" kindref="member">\off</ref><sp/>/<sp/>8</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.else</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">stl    \d</ref>,<sp/>[<ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">\s</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1adbc19a384ffe3a93866980a920b08394" kindref="member">\off</ref>]</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.endif</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.endif</highlight></codeline>
<codeline lineno="43"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">.macro<sp/><ref refid="asm-macro-32-bit-mwdt_8h_1aaecb2f53890260a5b5518501ac4ae55b" kindref="member">PUSHR</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">pushl   \r</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">.macro<sp/><ref refid="asm-macro-32-bit-mwdt_8h_1a0f674b4d35f1df924883bff738f5c288" kindref="member">POPR</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">popl    \r</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">.macro<sp/><ref refid="asm-macro-32-bit-mwdt_8h_1af065467bfff1489bf1d38337a5d60988" kindref="member">LRR</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/>aux</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">lrl     \d</ref>,<sp/>\aux</highlight></codeline>
<codeline lineno="55"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">.macro<sp/><ref refid="asm-macro-32-bit-mwdt_8h_1a4ab637a402c195c93f2e5f1d0fcccf78" kindref="member">SRR</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/>aux</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">srl      \d</ref>,<sp/>\aux</highlight></codeline>
<codeline lineno="59"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">.irp<sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref>,,.nz</highlight></codeline>
<codeline lineno="62"><highlight class="normal">.macro<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">ADDR\cc</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>,<sp/>v</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">addl\cc  \d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">\s</ref>,<sp/>\v</highlight></codeline>
<codeline lineno="64"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="65"><highlight class="normal">.endr</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">.irp<sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref>,,.nz</highlight></codeline>
<codeline lineno="68"><highlight class="normal">.macro<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">ADD2R\cc</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>,<sp/>v</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">add2l\cc \d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">\s</ref>,<sp/>\v</highlight></codeline>
<codeline lineno="70"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="71"><highlight class="normal">.endr</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">.macro<sp/><ref refid="asm-macro-32-bit-mwdt_8h_1a9cb390b45f968e4859be09505e376ff6" kindref="member">ADD3R</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>,<sp/>v</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">add3l \d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">\s</ref>,<sp/>\v</highlight></codeline>
<codeline lineno="75"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">.macro<sp/><ref refid="asm-macro-32-bit-mwdt_8h_1a1548d46b55a34b4830367a41995f6f48" kindref="member">SUBR</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>,<sp/>v</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">subl     \d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">\s</ref>,<sp/>\v</highlight></codeline>
<codeline lineno="79"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">.macro<sp/><ref refid="asm-macro-32-bit-mwdt_8h_1aa4129c1e4b6617f30740aada9bdd872d" kindref="member">BMSKNR</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>,<sp/>v</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">bmsknl   \d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">\s</ref>,<sp/>\v</highlight></codeline>
<codeline lineno="83"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">.macro<sp/><ref refid="asm-macro-32-bit-mwdt_8h_1a8667c7c46bc57aff0cac0ca728023ed5" kindref="member">LSRR</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>,<sp/>v</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">lsrl	\d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">\s</ref>,<sp/>\v</highlight></codeline>
<codeline lineno="87"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">.macro<sp/><ref refid="asm-macro-32-bit-mwdt_8h_1aaff8d26b5c5198b247467cb55a7df38b" kindref="member">ASLR</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>,<sp/>v</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">asll \d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">\s</ref>,<sp/>\v</highlight></codeline>
<codeline lineno="91"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">.macro<sp/><ref refid="asm-macro-32-bit-mwdt_8h_1abf83bab508dfaea0c41d8093d7b1c551" kindref="member">ANDR</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>,<sp/>v</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">andl \d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">\s</ref>,<sp/>\v</highlight></codeline>
<codeline lineno="95"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="asm-macro-64-bit-gnu_8h_1a73772c29f6eea427991a6d445478808d" refkind="member"><highlight class="normal">.macro<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a73772c29f6eea427991a6d445478808d" kindref="member">ORR</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>,<sp/>v</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">orl \d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">\s</ref>,<sp/>\v</highlight></codeline>
<codeline lineno="99"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="asm-macro-64-bit-gnu_8h_1a69384ae28398c3f7eb9ffc42f9fb3df2" refkind="member"><highlight class="normal">.irp<sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">cc</ref>,<ref refid="asm-macro-64-bit-gnu_8h_1a69384ae28398c3f7eb9ffc42f9fb3df2" kindref="member">ne</ref>,eq</highlight></codeline>
<codeline lineno="102"><highlight class="normal">.macro<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">BRR\cc</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>,<sp/>lbl</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a542424a4ef87da5a865ce186a46d9c58" kindref="member">br\cc</ref>\()l<sp/><sp/>\<ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/>\<ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>,<sp/>\lbl</highlight></codeline>
<codeline lineno="104"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="105"><highlight class="normal">.endr</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">.macro<sp/><ref refid="asm-macro-32-bit-mwdt_8h_1abe3bac34bb316244a20ddc88ebc75937" kindref="member">BREQR</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/><ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>,<sp/>lbl</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>breql<sp/>\<ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>,<sp/>\<ref refid="asm-macro-64-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>,<sp/>\lbl</highlight></codeline>
<codeline lineno="109"><highlight class="normal">.endm</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="asm-macro-64-bit-gnu_8h_1a0f83c16c864dd25dbe54e81e22ea092a" refkind="member"><highlight class="normal">.macro<sp/><ref refid="asm-macro-32-bit-mwdt_8h_1a2914e6612b9957eba801ab818e2cbded" kindref="member">CMPR</ref><sp/><ref refid="asm-macro-64-bit-gnu_8h_1a0f83c16c864dd25dbe54e81e22ea092a" kindref="member">op1</ref>,<sp/>op2</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmpl<sp/>\<ref refid="asm-macro-64-bit-gnu_8h_1a0f83c16c864dd25dbe54e81e22ea092a" kindref="member">op1</ref>,<sp/>\op2</highlight></codeline>
<codeline lineno="113"><highlight class="normal">.endm</highlight></codeline>
    </programlisting>
    <location file="include/arch/arc/asm-compat/asm-macro-64-bit-gnu.h"/>
  </compounddef>
</doxygen>
