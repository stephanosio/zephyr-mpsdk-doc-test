<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="pipe_2pipe__api_2src_2main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes refid="ztest_8h" local="no">ztest.h</includes>
    <incdepgraph>
      <node id="17">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="66">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="65">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="29">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="36">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="38">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="34">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="32">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="40">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="41">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="37">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="35">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="39">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="75">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="45">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="51">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="28">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="42">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="23">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="4">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="19">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="86">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="87">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="13">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="8">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="11">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="64">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="88">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="81">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="2">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="15">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/pipe/pipe_api/src/main.c</label>
        <link refid="pipe_2pipe__api_2src_2main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>alloca.h</label>
      </node>
      <node id="68">
        <label>arch/cpu.h</label>
      </node>
      <node id="31">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="30">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="43">
        <label>kernel.h</label>
      </node>
      <node id="6">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="84">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="89">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="90">
        <label>tc_util.h</label>
      </node>
      <node id="9">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pipe_2pipe__api_2src_2main_8c_1aba6947cb772f106448aba1894b8da902" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__pipe" kindref="compound">k_pipe</ref> <ref refid="group__kernel__pipe__tests_1gaa4fbc828f262153e0dc676826872c0da" kindref="member">pipe</ref> kpipe khalfpipe</type>
        <definition>struct k_pipe pipe kpipe khalfpipe put_get_pipe</definition>
        <argsstring></argsstring>
        <name>put_get_pipe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="53" column="20" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_fail.c" bodystart="15" bodyend="-1" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="53" declcolumn="20"/>
      </memberdef>
      <memberdef kind="variable" id="pipe_2pipe__api_2src_2main_8c_1a37d12066b90b5226eb1895e59f5908e8" prot="public" static="no" mutable="no">
        <type>struct k_sem</type>
        <definition>struct k_sem end_sema</definition>
        <argsstring></argsstring>
        <name>end_sema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="54" column="19" bodyfile="tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c" bodystart="23" bodyend="-1" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="54" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" prot="public" static="no" mutable="no">
        <type>struct k_stack</type>
        <definition>struct k_stack tstack</definition>
        <argsstring></argsstring>
        <name>tstack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="55" column="21" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="55" declcolumn="21"/>
      </memberdef>
      <memberdef kind="variable" id="pipe_2pipe__api_2src_2main_8c_1aa15baae19d44279cac3d8bf47c9e707f" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread tdata</definition>
        <argsstring></argsstring>
        <name>tdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="56" column="22" bodyfile="tests/kernel/mem_heap/k_heap_api/src/test_kheap_api.c" bodystart="13" bodyend="-1" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="56" declcolumn="22"/>
      </memberdef>
      <memberdef kind="variable" id="pipe_2pipe__api_2src_2main_8c_1a4dc595a0cb08f33192e6b5519acd86b8" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__heap" kindref="compound">k_heap</ref></type>
        <definition>struct k_heap test_pool</definition>
        <argsstring></argsstring>
        <name>test_pool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="57" column="20" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="57" declcolumn="20"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__kernel__pipe__tests_1ga9f5f0800ee4c3148844d97f0341d48ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_thread2thread</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_thread2thread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test pipe data passing between threads. </para>
        </briefdescription>
        <detaileddescription>
<para>Test Objective:<itemizedlist>
<listitem><para>Verify data passing with &quot;pipe put/get&quot; APIs between threads</para>
</listitem></itemizedlist>
</para>
<para>Testing techniques:<itemizedlist>
<listitem><para>function and block box testing,Interface testing, Dynamic analysis and testing.</para>
</listitem></itemizedlist>
</para>
<para>Prerequisite Conditions:<itemizedlist>
<listitem><para>CONFIG_TEST_USERSPACE.</para>
</listitem></itemizedlist>
</para>
<para>Input Specifications:<itemizedlist>
<listitem><para>N/A</para>
</listitem></itemizedlist>
</para>
<para>Test Procedure:<orderedlist>
<listitem><para>Initialize a pipe, which is defined at run time.</para>
</listitem><listitem><para>Create a thread (A).</para>
</listitem><listitem><para>In A thread, check if it can get data, which is sent by main thread via the pipe.</para>
</listitem><listitem><para>In A thread, send data to main thread via the pipe.</para>
</listitem><listitem><para>In main thread, send data to A thread via the pipe.</para>
</listitem><listitem><para>In main thread, check if it can get data, which is sent by A thread.</para>
</listitem><listitem><para>Do the same testing with a pipe, which is defined at compile time</para>
</listitem></orderedlist>
</para>
<para>Expected Test Result:<itemizedlist>
<listitem><para>Data can be sent/received between threads.</para>
</listitem></itemizedlist>
</para>
<para>Pass/Fail Criteria:<itemizedlist>
<listitem><para>Successful if check points in test procedure are all passed, otherwise failure.</para>
</listitem></itemizedlist>
</para>
<para>Assumptions and Constraints:<itemizedlist>
<listitem><para>N/A</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1gae9e807fb63bb7186b87015664f2c762d" kindref="member">k_pipe_init()</ref>, <ref refid="group__pipe__apis_1ga5cfd4b75485c7d69f8614030914ad132" kindref="member">k_pipe_put()</ref>, <ref refid="group__pipe__apis_1gac2256aa00c59e78199be9bdefd61aa52" kindref="member">K_PIPE_DEFINE(x)</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: test k_pipe_init pipe</para>
<para>TESTPOINT: test K_PIPE_DEFINE pipe</para>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="15" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_contexts.c" bodystart="292" bodyend="300" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="15" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1ga565dd05ba929081bbd9e26e712a7c428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_put_fail</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_put_fail</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test pipe put failure scenario. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1gae9e807fb63bb7186b87015664f2c762d" kindref="member">k_pipe_init()</ref>, <ref refid="group__pipe__apis_1ga5cfd4b75485c7d69f8614030914ad132" kindref="member">k_pipe_put()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="16" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_fail.c" bodystart="41" bodyend="46" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="16" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1ga173e81cd9b57c73d0c356dece65870e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_get_fail</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_get_fail</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test pipe get failure scenario. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1gae9e807fb63bb7186b87015664f2c762d" kindref="member">k_pipe_init()</ref>, <ref refid="group__pipe__apis_1gada9aaf9a336d98a95441212f4223e9ef" kindref="member">k_pipe_get()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="17" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_fail.c" bodystart="90" bodyend="95" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="17" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="pipe_2pipe__api_2src_2main_8c_1a2e9403c21b8235816e50fdffe8f49b46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_block_put</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_block_put</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="18" column="13" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="18" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="pipe_2pipe__api_2src_2main_8c_1ad4fca6197f2d5605b37af40c9a039026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_block_put_sema</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_block_put_sema</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="19" column="13" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="19" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1gafc65cf58e8bcde78fc688d4ed20e84bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_get_put</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_get_put</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: thread-thread data passing via pipe</para>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="20" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_contexts.c" bodystart="381" bodyend="410" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="20" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1ga74fe0df1db9ec493e97f407c241ad315" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_get_large</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_get_large</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: thread-thread data passing via pipe</para>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="21" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_contexts.c" bodystart="412" bodyend="431" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="21" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1gaf2e86fbca58a7ae664fb4f528711ee15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_half_pipe_put_get</definition>
        <argsstring>(void)</argsstring>
        <name>test_half_pipe_put_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test put/get with smaller pipe buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1ga5cfd4b75485c7d69f8614030914ad132" kindref="member">k_pipe_put()</ref>, <ref refid="group__pipe__apis_1gada9aaf9a336d98a95441212f4223e9ef" kindref="member">k_pipe_get()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: thread-thread data passing via pipe</para>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="23" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_contexts.c" bodystart="350" bodyend="379" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="23" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="pipe_2pipe__api_2src_2main_8c_1a38b574e6c658f9ed8af5131ff1ad7f1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_half_pipe_saturating_block_put</definition>
        <argsstring>(void)</argsstring>
        <name>test_half_pipe_saturating_block_put</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="24" column="13" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="24" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="pipe_2pipe__api_2src_2main_8c_1a683795ed4c2d4201235a5908d9951ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_half_pipe_block_put_sema</definition>
        <argsstring>(void)</argsstring>
        <name>test_half_pipe_block_put_sema</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="25" column="13" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="25" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="pipe_2pipe__api_2src_2main_8c_1a3c1459b4f3485658ed43ede808a6562a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_alloc</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_alloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test Initialization and buffer allocation of pipe, with various parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1ga32a902a5d12ca54b17c2b58783214613" kindref="member">k_pipe_alloc_init()</ref>, <ref refid="group__pipe__apis_1gaad0ab1b97b537da408031e4bcbe04f36" kindref="member">k_pipe_cleanup()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="26" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_contexts.c" bodystart="187" bodyend="202" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="26" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1gafc62de28e1f1996d1961ef09a62da6d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_reader_wait</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_reader_wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test pending reader in pipe. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1ga5cfd4b75485c7d69f8614030914ad132" kindref="member">k_pipe_put()</ref>, <ref refid="group__pipe__apis_1gada9aaf9a336d98a95441212f4223e9ef" kindref="member">k_pipe_get()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: test k_pipe_block_put with semaphore</para>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="27" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_contexts.c" bodystart="438" bodyend="448" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="27" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="pipe_2pipe__api_2src_2main_8c_1a240f66cc9216ba69790da6cd1a01bd17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_block_writer_wait</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_block_writer_wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="28" column="13" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="28" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="pipe_2pipe__api_2src_2main_8c_1aed174ac0280d983e4ab670a566eb0efa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_cleanup</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_cleanup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: test if a dynamically allocated buffer can be freed</para>
<para>TESTPOINT: nothing to do with <ref refid="group__pipe__apis_1gaad0ab1b97b537da408031e4bcbe04f36" kindref="member">k_pipe_cleanup()</ref> for static buffer in pipe</para>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="29" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_contexts.c" bodystart="209" bodyend="235" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="29" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1gaec0aabe27966e4f4d9a4bc90f37fe5c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_user_thread2thread</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_user_thread2thread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test data passing using pipes between user threads. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1gae9e807fb63bb7186b87015664f2c762d" kindref="member">k_pipe_init()</ref>, <ref refid="group__pipe__apis_1ga5cfd4b75485c7d69f8614030914ad132" kindref="member">k_pipe_put()</ref>, <ref refid="group__pipe__apis_1gac2256aa00c59e78199be9bdefd61aa52" kindref="member">K_PIPE_DEFINE(x)</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: test k_object_alloc pipe</para>
<para>TESTPOINT: test k_pipe_alloc_init</para>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="31" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_contexts.c" bodystart="307" bodyend="318" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="31" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1ga55d88dcdd4477c3f809925e7f150d068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_user_put_fail</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_user_put_fail</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test pipe put by a user thread. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1ga5cfd4b75485c7d69f8614030914ad132" kindref="member">k_pipe_put()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="32" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_fail.c" bodystart="53" bodyend="65" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="32" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1ga10d17769b28b81a3f953ba26fcfd81d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_user_get_fail</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_user_get_fail</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test pipe get by a user thread. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1ga32a902a5d12ca54b17c2b58783214613" kindref="member">k_pipe_alloc_init()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="33" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_fail.c" bodystart="106" bodyend="114" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="33" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1gae4866a237984d4318f25f13bc5b82633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_resource_pool_auto_free</definition>
        <argsstring>(void)</argsstring>
        <name>test_resource_pool_auto_free</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test resource pool free. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__heap__apis_1ga22b83564e50ae6177388dfe63e32a512" kindref="member">k_heap_alloc()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="34" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_contexts.c" bodystart="326" bodyend="333" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="34" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1gaf50096df170967cc7e2fc27f917701df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_alloc_not_init</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_alloc_not_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__pipe__apis_1ga32a902a5d12ca54b17c2b58783214613" kindref="member">k_pipe_alloc_init()</ref> failure scenario. </para>
        </briefdescription>
        <detaileddescription>
<para>See what will happen if an uninitialized <ref refid="structk__pipe" kindref="compound">k_pipe</ref> is passed to <ref refid="group__pipe__apis_1ga32a902a5d12ca54b17c2b58783214613" kindref="member">k_pipe_alloc_init()</ref>.</para>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1ga32a902a5d12ca54b17c2b58783214613" kindref="member">k_pipe_alloc_init()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="35" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_fail.c" bodystart="126" bodyend="132" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="35" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1ga08fd01aa714d2d7a2d810f8b6244958f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_get_null</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_get_null</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__pipe__apis_1gada9aaf9a336d98a95441212f4223e9ef" kindref="member">k_pipe_get()</ref> failure scenario. </para>
        </briefdescription>
        <detaileddescription>
<para>See what will happen if an uninitialized <ref refid="structk__pipe" kindref="compound">k_pipe</ref> is passed to <ref refid="group__pipe__apis_1gada9aaf9a336d98a95441212f4223e9ef" kindref="member">k_pipe_get()</ref>.</para>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1gada9aaf9a336d98a95441212f4223e9ef" kindref="member">k_pipe_get()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="36" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_fail.c" bodystart="144" bodyend="152" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="36" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1ga1e0055eef14a99921822a3399e3013c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_get_unreach_data</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_get_unreach_data</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__pipe__apis_1gada9aaf9a336d98a95441212f4223e9ef" kindref="member">k_pipe_get()</ref> failure scenario. </para>
        </briefdescription>
        <detaileddescription>
<para>See what will happen if the parameter address is accessed deny to test k_pipe_get</para>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1gada9aaf9a336d98a95441212f4223e9ef" kindref="member">k_pipe_get()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="37" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_fail.c" bodystart="164" bodyend="176" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="37" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1ga1a223d7b04edd91fa4969cc85157443a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_get_unreach_size</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_get_unreach_size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__pipe__apis_1gada9aaf9a336d98a95441212f4223e9ef" kindref="member">k_pipe_get()</ref> failure scenario. </para>
        </briefdescription>
        <detaileddescription>
<para>See what will happen if the parameter address is accessed deny to test k_pipe_get</para>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1gada9aaf9a336d98a95441212f4223e9ef" kindref="member">k_pipe_get()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="38" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_fail.c" bodystart="188" bodyend="200" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="38" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1ga6a4ed12ff2c406895347bb06bd27d160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_put_null</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_put_null</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__pipe__apis_1ga5cfd4b75485c7d69f8614030914ad132" kindref="member">k_pipe_put()</ref> failure scenario. </para>
        </briefdescription>
        <detaileddescription>
<para>See what will happen if a null pointer is passed into the k_pipe_put as a parameter</para>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1ga5cfd4b75485c7d69f8614030914ad132" kindref="member">k_pipe_put()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="39" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_fail.c" bodystart="212" bodyend="220" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="39" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1ga28bf8cd0c9f2eb27f7d59973c4eb414b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_put_unreach_data</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_put_unreach_data</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__pipe__apis_1ga5cfd4b75485c7d69f8614030914ad132" kindref="member">k_pipe_put()</ref> failure scenario. </para>
        </briefdescription>
        <detaileddescription>
<para>See what will happen if the parameter address is accessed deny to test k_pipe_put</para>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1ga5cfd4b75485c7d69f8614030914ad132" kindref="member">k_pipe_put()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="40" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_fail.c" bodystart="232" bodyend="244" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="40" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1ga6120256b52268e0f6140229a9c9b338e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_put_unreach_size</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_put_unreach_size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__pipe__apis_1ga5cfd4b75485c7d69f8614030914ad132" kindref="member">k_pipe_put()</ref> failure scenario. </para>
        </briefdescription>
        <detaileddescription>
<para>See what will happen if the parameter address is accessed deny to test k_pipe_put</para>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1ga5cfd4b75485c7d69f8614030914ad132" kindref="member">k_pipe_put()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="41" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_fail.c" bodystart="256" bodyend="268" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="41" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1ga2d5d31bcc993c6bdc46a6308aff8c49b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_read_avail_null</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_read_avail_null</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__pipe__apis_1ga21849ebf856532de6e3ea38489071220" kindref="member">k_pipe_read_avail()</ref> failure scenario. </para>
        </briefdescription>
        <detaileddescription>
<para>See what will happen if a null pointer is passed into the k_pipe_read_avail as a parameter</para>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1ga21849ebf856532de6e3ea38489071220" kindref="member">k_pipe_read_avail()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="42" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_fail.c" bodystart="280" bodyend="284" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="42" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pipe__tests_1gafb08cb3e8962bd5d15e30d5fde85acad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_write_avail_null</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_write_avail_null</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__pipe__apis_1gaff3ed3e93591d72c60a3640d195998c3" kindref="member">k_pipe_write_avail()</ref> failure scenario. </para>
        </briefdescription>
        <detaileddescription>
<para>See what will happen if a null pointer is passed into the k_pipe_write_avail as a parameter</para>
<para><simplesect kind="see"><para><ref refid="group__pipe__apis_1gaff3ed3e93591d72c60a3640d195998c3" kindref="member">k_pipe_write_avail()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="43" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_fail.c" bodystart="296" bodyend="300" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="43" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="pipe_2pipe__api_2src_2main_8c_1a2c091cd42e8c0c37edc7094aa7d01c7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_avail_r_lt_w</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_avail_r_lt_w</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test available read / write space for r &lt; w. </para>
        </briefdescription>
        <detaileddescription>
<para>This test case is for buffered <ref refid="structk__pipe" kindref="compound">k_pipe</ref> objects and covers the case where <ref refid="structk__pipe_1ae40f81d9c1459fa42f179cbc728aadd0" kindref="member">k_pipe::read_index</ref> is less than <ref refid="structk__pipe_1a8f46bd01da0e52e4ee918d9ebe6ad739" kindref="member">k_pipe::write_index</ref>.</para>
<para>In this case, <ref refid="structk__pipe_1a91bedad65285546734b8724811dc6eb8" kindref="member">k_pipe::bytes_used</ref> is not relevant. <verbatim> r     w
|a|b|c|d|e|f|g|h|
|0|1|2|3|4|5|6|7|
</verbatim> As shown above, the pipe will be able to read 3 bytes without blocking and write 5 bytes without blocking.</para>
<para>Thus r_avail = w - r = 3 would read: a b c d</para>
<para>w_avail = N - (w - r) = 5 would overwrite: e f g h </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="46" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_avail.c" bodystart="83" bodyend="97" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="46" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="pipe_2pipe__api_2src_2main_8c_1a32f5729c631bfa4fd8f893bf002ae742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_avail_w_lt_r</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_avail_w_lt_r</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test available read / write space for w &lt; r. </para>
        </briefdescription>
        <detaileddescription>
<para>This test case is for buffered <ref refid="structk__pipe" kindref="compound">k_pipe</ref> objects and covers the case where <ref refid="structk__pipe_1a8f46bd01da0e52e4ee918d9ebe6ad739" kindref="member">k_pipe::write_index</ref> is less than <ref refid="structk__pipe_1ae40f81d9c1459fa42f179cbc728aadd0" kindref="member">k_pipe::read_index</ref>.</para>
<para>In this case, <ref refid="structk__pipe_1a91bedad65285546734b8724811dc6eb8" kindref="member">k_pipe::bytes_used</ref> is not relevant. <verbatim> w     r
|a|b|c|d|e|f|g|h|
|0|1|2|3|4|5|6|7|
</verbatim></para>
<para>As shown above, the pipe will fbe able to read 5 bytes without blocking and write 3 bytes without blocking.</para>
<para>Thus r_avail = N - (r - w) = 5 would read: e f g h</para>
<para>w_avail = r - w = 3 would overwrite: a b c d </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="47" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_avail.c" bodystart="122" bodyend="136" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="47" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="pipe_2pipe__api_2src_2main_8c_1a49ff4c6fc7350063ed424be560c594f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_avail_r_eq_w_full</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_avail_r_eq_w_full</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test available read / write space for <computeroutput>r == w</computeroutput> and a full buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>This test case is for buffered <ref refid="structk__pipe" kindref="compound">k_pipe</ref> objects and covers the case where <ref refid="structk__pipe_1ae40f81d9c1459fa42f179cbc728aadd0" kindref="member">k_pipe::read_index</ref> is equal to <ref refid="structk__pipe_1a8f46bd01da0e52e4ee918d9ebe6ad739" kindref="member">k_pipe::write_index</ref> and <ref refid="structk__pipe_1a91bedad65285546734b8724811dc6eb8" kindref="member">k_pipe::bytes_used</ref> is equal to <ref refid="structk__pipe_1aca3472fb8d68f01af4e26b0b88736d64" kindref="member">k_pipe::size</ref>.</para>
<para>In this case, <ref refid="structk__pipe_1a91bedad65285546734b8724811dc6eb8" kindref="member">k_pipe::bytes_used</ref> is relevant because the read and write indeces are equal. <verbatim>       r
       w
|a|b|c|d|e|f|g|h|
|0|1|2|3|4|5|6|7|
</verbatim> Regardless of whether the buffer is full or empty, the following holds: <verbatim>r_avail = bytes_used
w_avail = N - bytes_used
</verbatim> Thus r_avail = N = 8 would read: e f g h a b c d</para>
<para>w_avail = N - 8 = 0 would overwrite: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="48" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_avail.c" bodystart="208" bodyend="222" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="48" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="pipe_2pipe__api_2src_2main_8c_1a6d93684dce575130daa520d4178e554d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_avail_r_eq_w_empty</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_avail_r_eq_w_empty</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test available read / write space for <computeroutput>r == w</computeroutput> and an empty buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>This test case is for buffered <ref refid="structk__pipe" kindref="compound">k_pipe</ref> objects and covers the case where <ref refid="structk__pipe_1ae40f81d9c1459fa42f179cbc728aadd0" kindref="member">k_pipe::read_index</ref> is equal to <ref refid="structk__pipe_1a8f46bd01da0e52e4ee918d9ebe6ad739" kindref="member">k_pipe::write_index</ref> and <ref refid="structk__pipe_1a91bedad65285546734b8724811dc6eb8" kindref="member">k_pipe::bytes_used</ref> is zero.</para>
<para>In this case, <ref refid="structk__pipe_1a91bedad65285546734b8724811dc6eb8" kindref="member">k_pipe::bytes_used</ref> is relevant because the read and write indeces are equal. <verbatim>       r
       w
|a|b|c|d|e|f|g|h|
|0|1|2|3|4|5|6|7|
</verbatim> Regardless of whether the buffer is full or empty, the following holds: <verbatim>r_avail = bytes_used
w_avail = N - bytes_used
</verbatim> Thus: r_avail = 0 would read:</para>
<para>w_avail = N - 0 = 8 would overwrite: e f g h a b c d </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="49" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_avail.c" bodystart="165" bodyend="179" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="49" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="pipe_2pipe__api_2src_2main_8c_1a648e3f0e21e7ca863744932b847c2df9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pipe_avail_no_buffer</definition>
        <argsstring>(void)</argsstring>
        <name>test_pipe_avail_no_buffer</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Pipes with no buffer or size 0 should return 0 bytes available. </para>
        </briefdescription>
        <detaileddescription>
<para>Pipes can be created to be bufferless (i.e. <ref refid="structk__pipe_1acb78995d6b7df28a5452f5d2e88b4dfb" kindref="member">k_pipe::buffer</ref> is <computeroutput>NULL</computeroutput> or <ref refid="structk__pipe_1aca3472fb8d68f01af4e26b0b88736d64" kindref="member">k_pipe::size</ref> is 0).</para>
<para>If either of those conditions is true, then <ref refid="group__pipe__apis_1ga21849ebf856532de6e3ea38489071220" kindref="member">k_pipe_read_avail</ref> and <ref refid="group__pipe__apis_1gaff3ed3e93591d72c60a3640d195998c3" kindref="member">k_pipe_write_avail</ref> should return 0.</para>
<para><simplesect kind="note"><para>A distinction can be made between buffered and bufferless pipes in that <ref refid="group__pipe__apis_1ga21849ebf856532de6e3ea38489071220" kindref="member">k_pipe_read_avail</ref> and <ref refid="group__pipe__apis_1gaff3ed3e93591d72c60a3640d195998c3" kindref="member">k_pipe_write_avail</ref> will never simultaneously return 0 for a buffered pipe, but they will both return 0 for an unbuffered pipe. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="50" column="13" bodyfile="tests/kernel/pipe/pipe_api/src/test_pipe_avail.c" bodystart="43" bodyend="59" declfile="tests/kernel/pipe/pipe_api/src/main.c" declline="50" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="pipe_2pipe__api_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_main</definition>
        <argsstring>(void)</argsstring>
        <name>test_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>test case main entry </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pipe/pipe_api/src/main.c" line="82" column="6" bodyfile="tests/kernel/pipe/pipe_api/src/main.c" bodystart="82" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztest_8h" kindref="compound">ztest.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1ga9f5f0800ee4c3148844d97f0341d48ae" kindref="member">test_pipe_thread2thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1ga565dd05ba929081bbd9e26e712a7c428" kindref="member">test_pipe_put_fail</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1ga173e81cd9b57c73d0c356dece65870e1" kindref="member">test_pipe_get_fail</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a2e9403c21b8235816e50fdffe8f49b46" kindref="member">test_pipe_block_put</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1ad4fca6197f2d5605b37af40c9a039026" kindref="member">test_pipe_block_put_sema</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1gafc65cf58e8bcde78fc688d4ed20e84bb" kindref="member">test_pipe_get_put</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1ga74fe0df1db9ec493e97f407c241ad315" kindref="member">test_pipe_get_large</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1gaf2e86fbca58a7ae664fb4f528711ee15" kindref="member">test_half_pipe_put_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a38b574e6c658f9ed8af5131ff1ad7f1c" kindref="member">test_half_pipe_saturating_block_put</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a683795ed4c2d4201235a5908d9951ae0" kindref="member">test_half_pipe_block_put_sema</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a3c1459b4f3485658ed43ede808a6562a" kindref="member">test_pipe_alloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1gafc62de28e1f1996d1961ef09a62da6d2" kindref="member">test_pipe_reader_wait</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a240f66cc9216ba69790da6cd1a01bd17" kindref="member">test_pipe_block_writer_wait</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1aed174ac0280d983e4ab670a566eb0efa" kindref="member">test_pipe_cleanup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1gaec0aabe27966e4f4d9a4bc90f37fe5c1" kindref="member">test_pipe_user_thread2thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1ga55d88dcdd4477c3f809925e7f150d068" kindref="member">test_pipe_user_put_fail</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1ga10d17769b28b81a3f953ba26fcfd81d2" kindref="member">test_pipe_user_get_fail</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1gae4866a237984d4318f25f13bc5b82633" kindref="member">test_resource_pool_auto_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1gaf50096df170967cc7e2fc27f917701df" kindref="member">test_pipe_alloc_not_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1ga08fd01aa714d2d7a2d810f8b6244958f" kindref="member">test_pipe_get_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1ga1e0055eef14a99921822a3399e3013c5" kindref="member">test_pipe_get_unreach_data</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1ga1a223d7b04edd91fa4969cc85157443a" kindref="member">test_pipe_get_unreach_size</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1ga6a4ed12ff2c406895347bb06bd27d160" kindref="member">test_pipe_put_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1ga28bf8cd0c9f2eb27f7d59973c4eb414b" kindref="member">test_pipe_put_unreach_data</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1ga6120256b52268e0f6140229a9c9b338e" kindref="member">test_pipe_put_unreach_size</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1ga2d5d31bcc993c6bdc46a6308aff8c49b" kindref="member">test_pipe_read_avail_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pipe__tests_1gafb08cb3e8962bd5d15e30d5fde85acad" kindref="member">test_pipe_write_avail_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a2c091cd42e8c0c37edc7094aa7d01c7e" kindref="member">test_pipe_avail_r_lt_w</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a32f5729c631bfa4fd8f893bf002ae742" kindref="member">test_pipe_avail_w_lt_r</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a49ff4c6fc7350063ed424be560c594f4" kindref="member">test_pipe_avail_r_eq_w_full</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a6d93684dce575130daa520d4178e554d" kindref="member">test_pipe_avail_r_eq_w_empty</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a648e3f0e21e7ca863744932b847c2df9" kindref="member">test_pipe_avail_no_buffer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>k<sp/>objects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__pipe" kindref="compound">k_pipe</ref><sp/><ref refid="test__mutex__error_8c_1aa4fbc828f262153e0dc676826872c0da" kindref="member">pipe</ref>,<sp/>kpipe,<sp/>khalfpipe,<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1aba6947cb772f106448aba1894b8da902" kindref="member">put_get_pipe</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/><ref refid="msgq_2msgq__api_2src_2main_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_stack<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="msgq_2msgq__api_2src_2main_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__heap" kindref="compound">k_heap</ref><sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a4dc595a0cb08f33192e6b5519acd86b8" kindref="member">test_pool</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dummy_test(_name)<sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>void<sp/>_name(void)<sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ztest_test_skip();<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">dummy_test(<ref refid="group__kernel__pipe__tests_1gaec0aabe27966e4f4d9a4bc90f37fe5c1" kindref="member">test_pipe_user_thread2thread</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">dummy_test(<ref refid="group__kernel__pipe__tests_1ga55d88dcdd4477c3f809925e7f150d068" kindref="member">test_pipe_user_put_fail</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">dummy_test(<ref refid="group__kernel__pipe__tests_1ga10d17769b28b81a3f953ba26fcfd81d2" kindref="member">test_pipe_user_get_fail</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">dummy_test(<ref refid="group__kernel__pipe__tests_1gae4866a237984d4318f25f13bc5b82633" kindref="member">test_resource_pool_auto_free</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">dummy_test(<ref refid="group__kernel__pipe__tests_1gaf50096df170967cc7e2fc27f917701df" kindref="member">test_pipe_alloc_not_init</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">dummy_test(<ref refid="group__kernel__pipe__tests_1ga08fd01aa714d2d7a2d810f8b6244958f" kindref="member">test_pipe_get_null</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">dummy_test(<ref refid="group__kernel__pipe__tests_1ga1e0055eef14a99921822a3399e3013c5" kindref="member">test_pipe_get_unreach_data</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">dummy_test(<ref refid="group__kernel__pipe__tests_1ga1a223d7b04edd91fa4969cc85157443a" kindref="member">test_pipe_get_unreach_size</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">dummy_test(<ref refid="group__kernel__pipe__tests_1ga6a4ed12ff2c406895347bb06bd27d160" kindref="member">test_pipe_put_null</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">dummy_test(<ref refid="group__kernel__pipe__tests_1ga28bf8cd0c9f2eb27f7d59973c4eb414b" kindref="member">test_pipe_put_unreach_data</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">dummy_test(<ref refid="group__kernel__pipe__tests_1ga6120256b52268e0f6140229a9c9b338e" kindref="member">test_pipe_put_unreach_size</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">dummy_test(<ref refid="group__kernel__pipe__tests_1ga2d5d31bcc993c6bdc46a6308aff8c49b" kindref="member">test_pipe_read_avail_null</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">dummy_test(<ref refid="group__kernel__pipe__tests_1gafb08cb3e8962bd5d15e30d5fde85acad" kindref="member">test_pipe_write_avail_null</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!CONFIG_USERSPACE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*test<sp/>case<sp/>main<sp/>entry*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="common_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" kindref="member">test_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gafec540511e6d2e0a074a5bfb515c53b0" kindref="member">k_thread_access_grant</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>&amp;<ref refid="test__mutex__error_8c_1aa4fbc828f262153e0dc676826872c0da" kindref="member">pipe</ref>,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;kpipe,<sp/>&amp;<ref refid="msgq_2msgq__api_2src_2main_8c_1a37d12066b90b5226eb1895e59f5908e8" kindref="member">end_sema</ref>,<sp/>&amp;<ref refid="msgq_2msgq__api_2src_2main_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/>&amp;<ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;khalfpipe,<sp/>&amp;<ref refid="pipe_2pipe__api_2src_2main_8c_1aba6947cb772f106448aba1894b8da902" kindref="member">put_get_pipe</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga3f46c06833add2a2e0ddb7242f06702c" kindref="member">k_thread_heap_assign</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>&amp;<ref refid="pipe_2pipe__api_2src_2main_8c_1a4dc595a0cb08f33192e6b5519acd86b8" kindref="member">test_pool</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" kindref="member">ztest_test_suite</ref>(pipe_api,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1ga9f5f0800ee4c3148844d97f0341d48ae" kindref="member">test_pipe_thread2thread</ref>),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gab5438441a57724ddf51e6dda62e2681b" kindref="member">ztest_1cpu_user_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1gaec0aabe27966e4f4d9a4bc90f37fe5c1" kindref="member">test_pipe_user_thread2thread</ref>),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gab5438441a57724ddf51e6dda62e2681b" kindref="member">ztest_1cpu_user_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1ga55d88dcdd4477c3f809925e7f150d068" kindref="member">test_pipe_user_put_fail</ref>),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1ga10d17769b28b81a3f953ba26fcfd81d2" kindref="member">test_pipe_user_get_fail</ref>),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1gaf50096df170967cc7e2fc27f917701df" kindref="member">test_pipe_alloc_not_init</ref>),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1ga08fd01aa714d2d7a2d810f8b6244958f" kindref="member">test_pipe_get_null</ref>),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1ga1e0055eef14a99921822a3399e3013c5" kindref="member">test_pipe_get_unreach_data</ref>),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1ga1a223d7b04edd91fa4969cc85157443a" kindref="member">test_pipe_get_unreach_size</ref>),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1ga6a4ed12ff2c406895347bb06bd27d160" kindref="member">test_pipe_put_null</ref>),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1ga28bf8cd0c9f2eb27f7d59973c4eb414b" kindref="member">test_pipe_put_unreach_data</ref>),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1ga6120256b52268e0f6140229a9c9b338e" kindref="member">test_pipe_put_unreach_size</ref>),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1ga2d5d31bcc993c6bdc46a6308aff8c49b" kindref="member">test_pipe_read_avail_null</ref>),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1gafb08cb3e8962bd5d15e30d5fde85acad" kindref="member">test_pipe_write_avail_null</ref>),</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1gae4866a237984d4318f25f13bc5b82633" kindref="member">test_resource_pool_auto_free</ref>),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1ga565dd05ba929081bbd9e26e712a7c428" kindref="member">test_pipe_put_fail</ref>),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1ga173e81cd9b57c73d0c356dece65870e1" kindref="member">test_pipe_get_fail</ref>),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1gaf2e86fbca58a7ae664fb4f528711ee15" kindref="member">test_half_pipe_put_get</ref>),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1gafc65cf58e8bcde78fc688d4ed20e84bb" kindref="member">test_pipe_get_put</ref>),</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1ga74fe0df1db9ec493e97f407c241ad315" kindref="member">test_pipe_get_large</ref>),</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="pipe_2pipe__api_2src_2main_8c_1a3c1459b4f3485658ed43ede808a6562a" kindref="member">test_pipe_alloc</ref>),</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="pipe_2pipe__api_2src_2main_8c_1aed174ac0280d983e4ab670a566eb0efa" kindref="member">test_pipe_cleanup</ref>),</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="group__kernel__pipe__tests_1gafc62de28e1f1996d1961ef09a62da6d2" kindref="member">test_pipe_reader_wait</ref>),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="pipe_2pipe__api_2src_2main_8c_1a2c091cd42e8c0c37edc7094aa7d01c7e" kindref="member">test_pipe_avail_r_lt_w</ref>),</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="pipe_2pipe__api_2src_2main_8c_1a32f5729c631bfa4fd8f893bf002ae742" kindref="member">test_pipe_avail_w_lt_r</ref>),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="pipe_2pipe__api_2src_2main_8c_1a49ff4c6fc7350063ed424be560c594f4" kindref="member">test_pipe_avail_r_eq_w_full</ref>),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="pipe_2pipe__api_2src_2main_8c_1a6d93684dce575130daa520d4178e554d" kindref="member">test_pipe_avail_r_eq_w_empty</ref>),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="pipe_2pipe__api_2src_2main_8c_1a648e3f0e21e7ca863744932b847c2df9" kindref="member">test_pipe_avail_no_buffer</ref>));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" kindref="member">ztest_run_test_suite</ref>(pipe_api);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/kernel/pipe/pipe_api/src/main.c"/>
  </compounddef>
</doxygen>
