<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="gen__isr__table_2src_2main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes local="no">zephyr.h</includes>
    <includes refid="ztest_8h" local="no">ztest.h</includes>
    <includes local="no">irq.h</includes>
    <includes local="no">tc_util.h</includes>
    <includes refid="sw__isr__table_8h" local="no">sw_isr_table.h</includes>
    <includes local="no">interrupt_util.h</includes>
    <incdepgraph>
      <node id="17">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="66">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="65">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="29">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="36">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="38">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="34">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="32">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="40">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="41">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="37">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="35">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="39">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="75">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="45">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="51">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="28">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>sw_isr_table.h</label>
        <link refid="sw__isr__table_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="42">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="23">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="5">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="19">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="86">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="87">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="13">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="9">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="11">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="64">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="88">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="81">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="3">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="15">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/gen_isr_table/src/main.c</label>
        <link refid="gen__isr__table_2src_2main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>alloca.h</label>
      </node>
      <node id="68">
        <label>arch/cpu.h</label>
      </node>
      <node id="31">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="30">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="93">
        <label>interrupt_util.h</label>
      </node>
      <node id="91">
        <label>irq.h</label>
      </node>
      <node id="43">
        <label>kernel.h</label>
      </node>
      <node id="7">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="84">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="89">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="90">
        <label>tc_util.h</label>
      </node>
      <node id="2">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="gen__isr__table_2src_2main_8c_1a2a6ac06d0f2906ba4b4593079d5c18d9" prot="public" static="no">
        <name>ISR1_OFFSET</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="20" column="9" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__isr__table_2src_2main_8c_1ad6a5af362f9aef2eb1ccae731598fbe1" prot="public" static="no">
        <name>ISR2_OFFSET</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="21" column="9" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__isr__table_2src_2main_8c_1aa534609683fd36741b70802e763bfabf" prot="public" static="no">
        <name>ISR3_OFFSET</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="32" column="10" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__isr__table_2src_2main_8c_1a83e4ad2cceee7c7efae23db8b61851a6" prot="public" static="no">
        <name>ISR4_OFFSET</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="33" column="9" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__isr__table_2src_2main_8c_1aab75afdd0efdae1f24a2a0f2abeb790a" prot="public" static="no">
        <name>ISR5_OFFSET</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="34" column="9" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__isr__table_2src_2main_8c_1a93f1cf12419819b0c004cf97be790511" prot="public" static="no">
        <name>ISR6_OFFSET</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="35" column="9" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__isr__table_2src_2main_8c_1a6f90a9c1bee76d4a94f04f67285d453e" prot="public" static="no">
        <name>TEST_NUM_IRQS</name>
        <initializer><ref refid="arch_2xtensa_2irq_8h_1a8f2a902348157b3b8718b05df1b1e837" kindref="member">CONFIG_NUM_IRQS</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="69" column="10" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__isr__table_2src_2main_8c_1acf192a947d7c84fd62487b39ddbd7607" prot="public" static="no">
        <name>TEST_IRQ_TABLE_SIZE</name>
        <initializer>				 (<ref refid="sw__isr__table_8h_1af36594d0586be77420bfe6eaf9f96a2c" kindref="member">IRQ_TABLE_SIZE</ref> - \
				 (<ref refid="arch_2xtensa_2irq_8h_1a8f2a902348157b3b8718b05df1b1e837" kindref="member">CONFIG_NUM_IRQS</ref> - <ref refid="gen__isr__table_2src_2main_8c_1a6f90a9c1bee76d4a94f04f67285d453e" kindref="member">TEST_NUM_IRQS</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="72" column="9" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" prot="public" static="no">
        <name>IRQ_LINE</name>
        <param><defname>offset</defname></param>
        <initializer>(<ref refid="gen__isr__table_2src_2main_8c_1a6f90a9c1bee76d4a94f04f67285d453e" kindref="member">TEST_NUM_IRQS</ref> - ((offset) + 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="74" column="9" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__isr__table_2src_2main_8c_1a0980bc67e3ae425733ec4fdf0a48ff3b" prot="public" static="no">
        <name>TABLE_INDEX</name>
        <param><defname>offset</defname></param>
        <initializer>(<ref refid="gen__isr__table_2src_2main_8c_1acf192a947d7c84fd62487b39ddbd7607" kindref="member">TEST_IRQ_TABLE_SIZE</ref> - ((offset) + 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="75" column="9" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__isr__table_2src_2main_8c_1ace619f857a3ed5e807272ee307bc2f62" prot="public" static="no">
        <name>TRIG_CHECK_SIZE</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="76" column="9" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__isr__table_2src_2main_8c_1a9f20e8c7e859dd57f6179a48216713e0" prot="public" static="no">
        <name>ISR3_ARG</name>
        <initializer>0xb01dface</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="79" column="9" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__isr__table_2src_2main_8c_1a0558ae17075d0044b1387bded075bd58" prot="public" static="no">
        <name>ISR4_ARG</name>
        <initializer>0xca55e77e</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="80" column="9" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__isr__table_2src_2main_8c_1a3c5b831486ec7d9343f5895aa24dfc53" prot="public" static="no">
        <name>ISR5_ARG</name>
        <initializer>0xf0ccac1a</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="81" column="9" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__isr__table_2src_2main_8c_1afb82c49276b0b48877888a0c33a667d7" prot="public" static="no">
        <name>ISR6_ARG</name>
        <initializer>0xba5eba11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="82" column="9" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="gen__isr__table_2src_2main_8c_1a0e219540545db11aaacb8ce283ef2f59" prot="public" static="yes" mutable="no">
        <type>volatile int</type>
        <definition>volatile int trigger_check[6]</definition>
        <argsstring>[6]</argsstring>
        <name>trigger_check</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="84" column="21" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gen__isr__table_2src_2main_8c_1aab587a3bf2d557111ba0a8ece2871388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void isr3</definition>
        <argsstring>(const void *param)</argsstring>
        <name>isr3</name>
        <param>
          <type>const void *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="103" column="6" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="gen__isr__table_2src_2main_8c_1abc9118fd384a459097c8df7aa13ada57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void isr4</definition>
        <argsstring>(const void *param)</argsstring>
        <name>isr4</name>
        <param>
          <type>const void *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="110" column="6" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="110" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="gen__isr__table_2src_2main_8c_1af7d6ed285ca40e177383973dd6f13b71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void isr5</definition>
        <argsstring>(const void *param)</argsstring>
        <name>isr5</name>
        <param>
          <type>const void *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="117" column="6" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="117" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="gen__isr__table_2src_2main_8c_1a1de646249a59d66a69d361d6790d4ada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void isr6</definition>
        <argsstring>(const void *param)</argsstring>
        <name>isr6</name>
        <param>
          <type>const void *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="124" column="6" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="gen__isr__table_2src_2main_8c_1a9d7401681735cf4fb7a8e4f2c383f41f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__no_optimization int</type>
        <definition>__no_optimization int test_irq</definition>
        <argsstring>(int offset)</argsstring>
        <name>test_irq</name>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="142" column="5" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="142" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="gen__isr__table_2src_2main_8c_1ad9aac8068ff65d06e8a34e044115b5c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_build_time_direct_interrupt</definition>
        <argsstring>(void)</argsstring>
        <name>test_build_time_direct_interrupt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>test to validate direct interrupt </para>
        </briefdescription>
        <detaileddescription>
<para>initialize two direct interrupt handler using IRQ_DIRECT_CONNECT api at build time. For ‘direct’ interrupts, address of handler function will be placed in the irq vector table. And each entry contains the pointer to isr and the corresponding parameters.</para>
<para>At the end according to architecture, we manually trigger the interrupt. And all irq handler should get called.</para>
<para><simplesect kind="see"><para><ref refid="group__isr__apis_1gac6c8746ac28da6ce02b24714f4144ff3" kindref="member">IRQ_DIRECT_CONNECT()</ref>, <ref refid="group__isr__apis_1ga7ea700ee31e4ff036c997a554dbedfeb" kindref="member">irq_enable()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="236" column="6" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="236" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="gen__isr__table_2src_2main_8c_1a1a1790157ba9bf3cd4c625c1e3d554b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_build_time_interrupt</definition>
        <argsstring>(void)</argsstring>
        <name>test_build_time_interrupt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>test to validate gen_isr_table and interrupt </para>
        </briefdescription>
        <detaileddescription>
<para>initialize two normal interrupt handler using IRQ_CONNECT api at build time. For &apos;regular&apos; interrupts, the address of the common software isr table is placed in the irq vector table, and software ISR table is an array of struct _isr_table_entry. And each entry contains the pointer to isr and the corresponding parameters.</para>
<para>At the end according to architecture, we manually trigger the interrupt. And all irq handler should get called.</para>
<para><simplesect kind="see"><para><ref refid="group__isr__apis_1ga131739d1faf501a15590053817aba984" kindref="member">IRQ_CONNECT()</ref>, <ref refid="group__isr__apis_1ga7ea700ee31e4ff036c997a554dbedfeb" kindref="member">irq_enable()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="272" column="6" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="272" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="gen__isr__table_2src_2main_8c_1a9234ee033bb404c48a00d7af4def777e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_run_time_interrupt</definition>
        <argsstring>(void)</argsstring>
        <name>test_run_time_interrupt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>test to validate gen_isr_table and dynamic interrupt </para>
        </briefdescription>
        <detaileddescription>
<para>initialize two dynamic interrupt handler using irq_connect_dynamic api at run time. For dynamic interrupts, the address of the common software isr table is also placed in the irq vector table. Software ISR table is an array of struct _isr_table_entry. And each entry contains the pointer to isr and the corresponding parameters.</para>
<para>At the end according to architecture, we manually trigger the interrupt. And all irq handler should get called.</para>
<para><simplesect kind="see"><para><ref refid="group__isr__apis_1ga4e9915b92b09df49b99bc449f0cc31a1" kindref="member">irq_connect_dynamic()</ref>, <ref refid="group__isr__apis_1ga7ea700ee31e4ff036c997a554dbedfeb" kindref="member">irq_enable()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="315" column="6" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="315" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="gen__isr__table_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_main</definition>
        <argsstring>(void)</argsstring>
        <name>test_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/gen_isr_table/src/main.c" line="342" column="6" bodyfile="tests/kernel/gen_isr_table/src/main.c" bodystart="342" bodyend="357"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztest_8h" kindref="compound">ztest.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;irq.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tc_util.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="sw__isr__table_8h" kindref="compound">sw_isr_table.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;interrupt_util.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>_irq_vector_table[];</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ARCH_IRQ_DIRECT_CONNECT)<sp/>&amp;&amp;<sp/>defined(CONFIG_GEN_IRQ_VECTOR_TABLE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAS_DIRECT_IRQS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISR1_OFFSET<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISR2_OFFSET<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_RISCV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RISC-V<sp/>has<sp/>very<sp/>few<sp/>IRQ<sp/>lines<sp/>which<sp/>can<sp/>be<sp/>triggered<sp/>from<sp/>software<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISR3_OFFSET<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISR5_OFFSET<sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IRQ_LINE(offset)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TABLE_INDEX(offset)<sp/><sp/><sp/><sp/><sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRIG_CHECK_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISR3_OFFSET<sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISR4_OFFSET<sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISR5_OFFSET<sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISR6_OFFSET<sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_SOC_ARC_EMSDP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ARC<sp/>EMSDP&apos;<sp/>console<sp/>will<sp/>use<sp/>irq<sp/>108<sp/>/<sp/>irq<sp/>107,<sp/>will<sp/>conflict</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>with<sp/>isr<sp/>used<sp/>here,<sp/>so<sp/>add<sp/>a<sp/>workaround</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_NUM_IRQS<sp/><sp/><sp/>105</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_SOC_NRF5340_CPUAPP)<sp/>||<sp/>defined(CONFIG_SOC_NRF9160)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>In<sp/>nRF9160<sp/>and<sp/>application<sp/>core<sp/>in<sp/>nRF5340,<sp/>not<sp/>all<sp/>interrupts<sp/>with<sp/>highest</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>numbers<sp/>are<sp/>implemented.<sp/>Thus,<sp/>limit<sp/>the<sp/>number<sp/>of<sp/>interrupts<sp/>reported<sp/>to</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>the<sp/>test,<sp/>so<sp/>that<sp/>it<sp/>does<sp/>not<sp/>try<sp/>to<sp/>use<sp/>some<sp/>unavailable<sp/>ones.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_NUM_IRQS<sp/><sp/><sp/>33</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_SOC_STM32G071XX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>In<sp/>STM32G071XX<sp/>limit<sp/>the<sp/>number<sp/>of<sp/>interrupts<sp/>reported<sp/>to</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>the<sp/>test,<sp/>so<sp/>that<sp/>it<sp/>does<sp/>not<sp/>try<sp/>to<sp/>use<sp/>some<sp/>of<sp/>the<sp/>IRQs</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>vector<sp/>table<sp/>that<sp/>are<sp/>already<sp/>used<sp/>by</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>the<sp/>board.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_NUM_IRQS<sp/><sp/><sp/>26</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_SOC_SERIES_NPCX7)<sp/>||<sp/>defined(CONFIG_SOC_SERIES_NPCX9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Both<sp/>NPCX7<sp/>and<sp/>NPCX9<sp/>series<sp/>use<sp/>the<sp/>IRQs<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>vector<sp/>table,<sp/>for</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>example,<sp/>the<sp/>IRQ<sp/>60<sp/>and<sp/>61<sp/>used<sp/>for<sp/>Multi-Input<sp/>Wake-Up<sp/>Unit<sp/>(MIWU)<sp/>devices</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>by<sp/>default,<sp/>and<sp/>conflicts<sp/>with<sp/>ISR<sp/>used<sp/>for<sp/>testing.<sp/>Move<sp/>IRQs<sp/>for<sp/>this</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>test<sp/>suite<sp/>to<sp/>solve<sp/>the<sp/>issue.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_NUM_IRQS<sp/><sp/><sp/>44</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_SOC_LPC55S16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IRQ<sp/>57<sp/>is<sp/>reserved<sp/>in<sp/>the<sp/>NXP<sp/>LPC55S16<sp/>SoC.<sp/>Thus,<sp/>limit<sp/>the<sp/>number</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>of<sp/>interrupts<sp/>reported<sp/>to<sp/>the<sp/>test,<sp/>so<sp/>that<sp/>it<sp/>does<sp/>not<sp/>try<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>it.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_NUM_IRQS<sp/><sp/><sp/>57</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_NUM_IRQS<sp/><sp/><sp/>CONFIG_NUM_IRQS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_IRQ_TABLE_SIZE<sp/><sp/><sp/><sp/><sp/>(IRQ_TABLE_SIZE<sp/>-<sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(CONFIG_NUM_IRQS<sp/>-<sp/>TEST_NUM_IRQS))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IRQ_LINE(offset)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEST_NUM_IRQS<sp/>-<sp/>((offset)<sp/>+<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TABLE_INDEX(offset)<sp/><sp/><sp/><sp/><sp/>(TEST_IRQ_TABLE_SIZE<sp/>-<sp/>((offset)<sp/>+<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRIG_CHECK_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISR3_ARG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xb01dface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISR4_ARG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xca55e77e</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISR5_ARG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xf0ccac1a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISR6_ARG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xba5eba11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gen__isr__table_2src_2main_8c_1a0e219540545db11aaacb8ce283ef2f59" kindref="member">trigger_check</ref>[<ref refid="gen__isr__table_2src_2main_8c_1ace619f857a3ed5e807272ee307bc2f62" kindref="member">TRIG_CHECK_SIZE</ref>];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAS_DIRECT_IRQS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="group__isr__apis_1gaf86866cd07fd37f381d98866f8874ebf" kindref="member">ISR_DIRECT_DECLARE</ref>(isr1)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="printk_8h_1a768a7dff8592b69f327a08f96b00fa54" kindref="member">printk</ref>(</highlight><highlight class="stringliteral">&quot;isr1<sp/>ran\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gen__isr__table_2src_2main_8c_1a0e219540545db11aaacb8ce283ef2f59" kindref="member">trigger_check</ref>[<ref refid="gen__isr__table_2src_2main_8c_1a2a6ac06d0f2906ba4b4593079d5c18d9" kindref="member">ISR1_OFFSET</ref>]++;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="group__isr__apis_1gaf86866cd07fd37f381d98866f8874ebf" kindref="member">ISR_DIRECT_DECLARE</ref>(isr2)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="printk_8h_1a768a7dff8592b69f327a08f96b00fa54" kindref="member">printk</ref>(</highlight><highlight class="stringliteral">&quot;isr2<sp/>ran\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gen__isr__table_2src_2main_8c_1a0e219540545db11aaacb8ce283ef2f59" kindref="member">trigger_check</ref>[<ref refid="gen__isr__table_2src_2main_8c_1ad6a5af362f9aef2eb1ccae731598fbe1" kindref="member">ISR2_OFFSET</ref>]++;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gen__isr__table_2src_2main_8c_1aab587a3bf2d557111ba0a8ece2871388" kindref="member">isr3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*param)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="printk_8h_1a768a7dff8592b69f327a08f96b00fa54" kindref="member">printk</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>ran<sp/>with<sp/>parameter<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>param);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gen__isr__table_2src_2main_8c_1a0e219540545db11aaacb8ce283ef2f59" kindref="member">trigger_check</ref>[<ref refid="gen__isr__table_2src_2main_8c_1aa534609683fd36741b70802e763bfabf" kindref="member">ISR3_OFFSET</ref>]++;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ISR4_OFFSET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gen__isr__table_2src_2main_8c_1abc9118fd384a459097c8df7aa13ada57" kindref="member">isr4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*param)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="printk_8h_1a768a7dff8592b69f327a08f96b00fa54" kindref="member">printk</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>ran<sp/>with<sp/>parameter<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>param);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gen__isr__table_2src_2main_8c_1a0e219540545db11aaacb8ce283ef2f59" kindref="member">trigger_check</ref>[<ref refid="gen__isr__table_2src_2main_8c_1a83e4ad2cceee7c7efae23db8b61851a6" kindref="member">ISR4_OFFSET</ref>]++;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gen__isr__table_2src_2main_8c_1af7d6ed285ca40e177383973dd6f13b71" kindref="member">isr5</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*param)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="printk_8h_1a768a7dff8592b69f327a08f96b00fa54" kindref="member">printk</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>ran<sp/>with<sp/>parameter<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>param);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gen__isr__table_2src_2main_8c_1a0e219540545db11aaacb8ce283ef2f59" kindref="member">trigger_check</ref>[<ref refid="gen__isr__table_2src_2main_8c_1aab75afdd0efdae1f24a2a0f2abeb790a" kindref="member">ISR5_OFFSET</ref>]++;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ISR6_OFFSET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gen__isr__table_2src_2main_8c_1a1de646249a59d66a69d361d6790d4ada" kindref="member">isr6</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*param)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="printk_8h_1a768a7dff8592b69f327a08f96b00fa54" kindref="member">printk</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>ran<sp/>with<sp/>parameter<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>__func__,<sp/>param);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gen__isr__table_2src_2main_8c_1a0e219540545db11aaacb8ce283ef2f59" kindref="member">trigger_check</ref>[<ref refid="gen__isr__table_2src_2main_8c_1a93f1cf12419819b0c004cf97be790511" kindref="member">ISR6_OFFSET</ref>]++;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CONFIG_CPU_CORTEX_M</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Need<sp/>to<sp/>turn<sp/>optimization<sp/>off.<sp/>Otherwise<sp/>compiler<sp/>may<sp/>generate<sp/>incorrect</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>code,<sp/>not<sp/>knowing<sp/>that<sp/>trigger_irq()<sp/>affects<sp/>the<sp/>value<sp/>of<sp/>trigger_check,</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>even<sp/>if<sp/>declared<sp/>volatile.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>A<sp/>memory<sp/>barrier<sp/>does<sp/>not<sp/>help,<sp/>we<sp/>need<sp/>an<sp/>&apos;instruction<sp/>barrier&apos;<sp/>but<sp/>GCC</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>doesn&apos;t<sp/>support<sp/>this;<sp/>we<sp/>need<sp/>to<sp/>tell<sp/>the<sp/>compiler<sp/>not<sp/>to<sp/>reorder<sp/>memory</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>accesses<sp/>to<sp/>trigger_check<sp/>around<sp/>calls<sp/>to<sp/>trigger_irq.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">__no_optimization</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gen__isr__table_2src_2main_8c_1a9d7401681735cf4fb7a8e4f2c383f41f" kindref="member">test_irq</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_TRIGGER_FROM_SW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;triggering<sp/>irq<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(offset));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trigger_irq(<ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(offset));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_CPU_CORTEX_M</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__DSB();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ISB();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="gen__isr__table_2src_2main_8c_1a0e219540545db11aaacb8ce283ef2f59" kindref="member">trigger_check</ref>[offset]<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;interrupt<sp/>%d<sp/>didn&apos;t<sp/>run<sp/>once,<sp/>ran<sp/>%d<sp/>times\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(offset),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gen__isr__table_2src_2main_8c_1a0e219540545db11aaacb8ce283ef2f59" kindref="member">trigger_check</ref>[offset]);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>arch<sp/>doesn&apos;t<sp/>support<sp/>triggering<sp/>interrupts<sp/>from<sp/>software<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(offset);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAS_DIRECT_IRQS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>check_vector(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*isr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Checking<sp/>_irq_vector_table<sp/>entry<sp/>%d<sp/>for<sp/>irq<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gen__isr__table_2src_2main_8c_1a0980bc67e3ae425733ec4fdf0a48ff3b" kindref="member">TABLE_INDEX</ref>(offset),<sp/><ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(offset));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_irq_vector_table[<ref refid="gen__isr__table_2src_2main_8c_1a0980bc67e3ae425733ec4fdf0a48ff3b" kindref="member">TABLE_INDEX</ref>(offset)]<sp/>!=<sp/>(<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref>)isr)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;bad<sp/>entry<sp/>%d<sp/>in<sp/>vector<sp/>table\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a0980bc67e3ae425733ec4fdf0a48ff3b" kindref="member">TABLE_INDEX</ref>(offset));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="gen__isr__table_2src_2main_8c_1a9d7401681735cf4fb7a8e4f2c383f41f" kindref="member">test_irq</ref>(offset))<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_GEN_SW_ISR_TABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>check_sw_isr(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*isr,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_isr_table_entry<sp/>*e<sp/>=<sp/>&amp;_sw_isr_table[<ref refid="gen__isr__table_2src_2main_8c_1a0980bc67e3ae425733ec4fdf0a48ff3b" kindref="member">TABLE_INDEX</ref>(offset)];</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_GEN_IRQ_VECTOR_TABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*v<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)_irq_vector_table[<ref refid="gen__isr__table_2src_2main_8c_1a0980bc67e3ae425733ec4fdf0a48ff3b" kindref="member">TABLE_INDEX</ref>(offset)];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Checking<sp/>_sw_isr_table<sp/>entry<sp/>%d<sp/>for<sp/>irq<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gen__isr__table_2src_2main_8c_1a0980bc67e3ae425733ec4fdf0a48ff3b" kindref="member">TABLE_INDEX</ref>(offset),<sp/><ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(offset));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;arg<sp/>!=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)arg)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;bad<sp/>argument<sp/>in<sp/>SW<sp/>isr<sp/>table\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;expected<sp/>%p<sp/>got<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)arg,<sp/>e-&gt;arg);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;isr<sp/>!=<sp/>isr)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Bad<sp/>ISR<sp/>in<sp/>SW<sp/>isr<sp/>table\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;expected<sp/>%p<sp/>got<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)isr,<sp/>e-&gt;isr);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_GEN_IRQ_VECTOR_TABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>_isr_wrapper)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Vector<sp/>does<sp/>not<sp/>point<sp/>to<sp/>_isr_wrapper\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;expected<sp/>%p<sp/>got<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>_isr_wrapper,<sp/>v);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="gen__isr__table_2src_2main_8c_1a9d7401681735cf4fb7a8e4f2c383f41f" kindref="member">test_irq</ref>(offset))<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gen__isr__table_2src_2main_8c_1ad9aac8068ff65d06e8a34e044115b5c2" kindref="member">test_build_time_direct_interrupt</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAS_DIRECT_IRQS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1gac6c8746ac28da6ce02b24714f4144ff3" kindref="member">IRQ_DIRECT_CONNECT</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a2a6ac06d0f2906ba4b4593079d5c18d9" kindref="member">ISR1_OFFSET</ref>),<sp/>0,<sp/>isr1,<sp/>0);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1gac6c8746ac28da6ce02b24714f4144ff3" kindref="member">IRQ_DIRECT_CONNECT</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1ad6a5af362f9aef2eb1ccae731598fbe1" kindref="member">ISR2_OFFSET</ref>),<sp/>0,<sp/>isr2,<sp/>0);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1ga7ea700ee31e4ff036c997a554dbedfeb" kindref="member">irq_enable</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a2a6ac06d0f2906ba4b4593079d5c18d9" kindref="member">ISR1_OFFSET</ref>));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1ga7ea700ee31e4ff036c997a554dbedfeb" kindref="member">irq_enable</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1ad6a5af362f9aef2eb1ccae731598fbe1" kindref="member">ISR2_OFFSET</ref>));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;isr1<sp/>isr=%p<sp/>irq=%d\n&quot;</highlight><highlight class="normal">,<sp/>isr1,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a2a6ac06d0f2906ba4b4593079d5c18d9" kindref="member">ISR1_OFFSET</ref>));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;isr2<sp/>isr=%p<sp/>irq=%d\n&quot;</highlight><highlight class="normal">,<sp/>isr2,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1ad6a5af362f9aef2eb1ccae731598fbe1" kindref="member">ISR2_OFFSET</ref>));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga33a5902873c0ce3ac6eeda2e61cecef8" kindref="member">zassert_ok</ref>(check_vector(isr1,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a2a6ac06d0f2906ba4b4593079d5c18d9" kindref="member">ISR1_OFFSET</ref>),</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;check<sp/>direct<sp/>interrpt<sp/>isr1<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga33a5902873c0ce3ac6eeda2e61cecef8" kindref="member">zassert_ok</ref>(check_vector(isr2,<sp/><ref refid="gen__isr__table_2src_2main_8c_1ad6a5af362f9aef2eb1ccae731598fbe1" kindref="member">ISR2_OFFSET</ref>),</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;check<sp/>direct<sp/>interrpt<sp/>isr2<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gen__isr__table_2src_2main_8c_1a1a1790157ba9bf3cd4c625c1e3d554b9" kindref="member">test_build_time_interrupt</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CONFIG_GEN_SW_ISR_TABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;_sw_isr_table<sp/>at<sp/>location<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>_sw_isr_table);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1ga131739d1faf501a15590053817aba984" kindref="member">IRQ_CONNECT</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1aa534609683fd36741b70802e763bfabf" kindref="member">ISR3_OFFSET</ref>),<sp/>1,<sp/><ref refid="gen__isr__table_2src_2main_8c_1aab587a3bf2d557111ba0a8ece2871388" kindref="member">isr3</ref>,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a9f20e8c7e859dd57f6179a48216713e0" kindref="member">ISR3_ARG</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1ga7ea700ee31e4ff036c997a554dbedfeb" kindref="member">irq_enable</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1aa534609683fd36741b70802e763bfabf" kindref="member">ISR3_OFFSET</ref>));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;isr3<sp/>isr=%p<sp/>irq=%d<sp/>param=%p\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="gen__isr__table_2src_2main_8c_1aab587a3bf2d557111ba0a8ece2871388" kindref="member">isr3</ref>,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1aa534609683fd36741b70802e763bfabf" kindref="member">ISR3_OFFSET</ref>),</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="gen__isr__table_2src_2main_8c_1a9f20e8c7e859dd57f6179a48216713e0" kindref="member">ISR3_ARG</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga33a5902873c0ce3ac6eeda2e61cecef8" kindref="member">zassert_ok</ref>(check_sw_isr(<ref refid="gen__isr__table_2src_2main_8c_1aab587a3bf2d557111ba0a8ece2871388" kindref="member">isr3</ref>,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a9f20e8c7e859dd57f6179a48216713e0" kindref="member">ISR3_ARG</ref>,<sp/><ref refid="gen__isr__table_2src_2main_8c_1aa534609683fd36741b70802e763bfabf" kindref="member">ISR3_OFFSET</ref>),</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;check<sp/>interrupt<sp/>isr3<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ISR4_OFFSET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1ga131739d1faf501a15590053817aba984" kindref="member">IRQ_CONNECT</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a83e4ad2cceee7c7efae23db8b61851a6" kindref="member">ISR4_OFFSET</ref>),<sp/>1,<sp/><ref refid="gen__isr__table_2src_2main_8c_1abc9118fd384a459097c8df7aa13ada57" kindref="member">isr4</ref>,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a0558ae17075d0044b1387bded075bd58" kindref="member">ISR4_ARG</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1ga7ea700ee31e4ff036c997a554dbedfeb" kindref="member">irq_enable</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a83e4ad2cceee7c7efae23db8b61851a6" kindref="member">ISR4_OFFSET</ref>));</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;isr4<sp/>isr=%p<sp/>irq=%d<sp/>param=%p\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="gen__isr__table_2src_2main_8c_1abc9118fd384a459097c8df7aa13ada57" kindref="member">isr4</ref>,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a83e4ad2cceee7c7efae23db8b61851a6" kindref="member">ISR4_OFFSET</ref>),</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="gen__isr__table_2src_2main_8c_1a0558ae17075d0044b1387bded075bd58" kindref="member">ISR4_ARG</ref>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga33a5902873c0ce3ac6eeda2e61cecef8" kindref="member">zassert_ok</ref>(check_sw_isr(<ref refid="gen__isr__table_2src_2main_8c_1abc9118fd384a459097c8df7aa13ada57" kindref="member">isr4</ref>,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a0558ae17075d0044b1387bded075bd58" kindref="member">ISR4_ARG</ref>,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a83e4ad2cceee7c7efae23db8b61851a6" kindref="member">ISR4_OFFSET</ref>),</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;check<sp/>interrupt<sp/>isr4<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gen__isr__table_2src_2main_8c_1a9234ee033bb404c48a00d7af4def777e" kindref="member">test_run_time_interrupt</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CONFIG_GEN_SW_ISR_TABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1ga4e9915b92b09df49b99bc449f0cc31a1" kindref="member">irq_connect_dynamic</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1aab75afdd0efdae1f24a2a0f2abeb790a" kindref="member">ISR5_OFFSET</ref>),<sp/>1,<sp/><ref refid="gen__isr__table_2src_2main_8c_1af7d6ed285ca40e177383973dd6f13b71" kindref="member">isr5</ref>,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="gen__isr__table_2src_2main_8c_1a3c5b831486ec7d9343f5895aa24dfc53" kindref="member">ISR5_ARG</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1ga7ea700ee31e4ff036c997a554dbedfeb" kindref="member">irq_enable</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1aab75afdd0efdae1f24a2a0f2abeb790a" kindref="member">ISR5_OFFSET</ref>));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;isr5<sp/>isr=%p<sp/>irq=%d<sp/>param=%p\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="gen__isr__table_2src_2main_8c_1af7d6ed285ca40e177383973dd6f13b71" kindref="member">isr5</ref>,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1aab75afdd0efdae1f24a2a0f2abeb790a" kindref="member">ISR5_OFFSET</ref>),</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="gen__isr__table_2src_2main_8c_1a3c5b831486ec7d9343f5895aa24dfc53" kindref="member">ISR5_ARG</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga33a5902873c0ce3ac6eeda2e61cecef8" kindref="member">zassert_ok</ref>(check_sw_isr(<ref refid="gen__isr__table_2src_2main_8c_1af7d6ed285ca40e177383973dd6f13b71" kindref="member">isr5</ref>,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a3c5b831486ec7d9343f5895aa24dfc53" kindref="member">ISR5_ARG</ref>,<sp/><ref refid="gen__isr__table_2src_2main_8c_1aab75afdd0efdae1f24a2a0f2abeb790a" kindref="member">ISR5_OFFSET</ref>),</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;test<sp/>dynamic<sp/>interrupt<sp/>isr5<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ISR6_OFFSET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1ga4e9915b92b09df49b99bc449f0cc31a1" kindref="member">irq_connect_dynamic</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a93f1cf12419819b0c004cf97be790511" kindref="member">ISR6_OFFSET</ref>),<sp/>1,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a1de646249a59d66a69d361d6790d4ada" kindref="member">isr6</ref>,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="gen__isr__table_2src_2main_8c_1afb82c49276b0b48877888a0c33a667d7" kindref="member">ISR6_ARG</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1ga7ea700ee31e4ff036c997a554dbedfeb" kindref="member">irq_enable</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a93f1cf12419819b0c004cf97be790511" kindref="member">ISR6_OFFSET</ref>));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;isr6<sp/>isr=%p<sp/>irq=%d<sp/>param=%p\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a1de646249a59d66a69d361d6790d4ada" kindref="member">isr6</ref>,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a2183c90c26133b0677e2250b99e03d57" kindref="member">IRQ_LINE</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a93f1cf12419819b0c004cf97be790511" kindref="member">ISR6_OFFSET</ref>),</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="gen__isr__table_2src_2main_8c_1afb82c49276b0b48877888a0c33a667d7" kindref="member">ISR6_ARG</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga33a5902873c0ce3ac6eeda2e61cecef8" kindref="member">zassert_ok</ref>(check_sw_isr(<ref refid="gen__isr__table_2src_2main_8c_1a1de646249a59d66a69d361d6790d4ada" kindref="member">isr6</ref>,<sp/><ref refid="gen__isr__table_2src_2main_8c_1afb82c49276b0b48877888a0c33a667d7" kindref="member">ISR6_ARG</ref>,<sp/><ref refid="gen__isr__table_2src_2main_8c_1a93f1cf12419819b0c004cf97be790511" kindref="member">ISR6_OFFSET</ref>),</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;check<sp/>dynamic<sp/>interrupt<sp/>isr6<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="common_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" kindref="member">test_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_START(</highlight><highlight class="stringliteral">&quot;Test<sp/>gen_isr_tables&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;IRQ<sp/>configuration<sp/>(total<sp/>lines<sp/>%d):\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="arch_2xtensa_2irq_8h_1a8f2a902348157b3b8718b05df1b1e837" kindref="member">CONFIG_NUM_IRQS</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" kindref="member">ztest_test_suite</ref>(context,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="gen__isr__table_2src_2main_8c_1ad9aac8068ff65d06e8a34e044115b5c2" kindref="member">test_build_time_direct_interrupt</ref>),</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a1a1790157ba9bf3cd4c625c1e3d554b9" kindref="member">test_build_time_interrupt</ref>),</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="gen__isr__table_2src_2main_8c_1a9234ee033bb404c48a00d7af4def777e" kindref="member">test_run_time_interrupt</ref>)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" kindref="member">ztest_run_test_suite</ref>(context);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunused-label&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/kernel/gen_isr_table/src/main.c"/>
  </compounddef>
</doxygen>
