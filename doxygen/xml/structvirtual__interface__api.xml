<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structvirtual__interface__api" kind="struct" language="C++" prot="public">
    <compoundname>virtual_interface_api</compoundname>
    <includes refid="virtual_8h" local="no">virtual.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvirtual__interface__api_1aee1250773938536ab28e129113073ae7" prot="public" static="no" mutable="no">
        <type>struct net_if_api</type>
        <definition>struct net_if_api virtual_interface_api::iface_api</definition>
        <argsstring></argsstring>
        <name>iface_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The net_if_api must be placed in first position in this struct so that we are compatible with network interface API. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/virtual.h" line="77" column="17" bodyfile="include/net/virtual.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvirtual__interface__api_1a827cd13d885b7cc2f80eddd73e438e07" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__virtual_1ga8f188f5c2f19960d7113da52aefe8091" kindref="member">virtual_interface_caps</ref>(*</type>
        <definition>enum virtual_interface_caps(* virtual_interface_api::get_capabilities) (struct net_if *iface)</definition>
        <argsstring>)(struct net_if *iface)</argsstring>
        <name>get_capabilities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the virtual interface capabilities </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/virtual.h" line="77" column="17" bodyfile="include/net/virtual.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvirtual__interface__api_1af28a6ed36799006d185fab9129c6c120" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* virtual_interface_api::start) (const struct device *dev)</definition>
        <argsstring>)(const struct device *dev)</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start the device </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/virtual.h" line="83" column="1" bodyfile="include/net/virtual.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvirtual__interface__api_1a09a317009d31ac5e9340c3ca7d2191c4" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* virtual_interface_api::stop) (const struct device *dev)</definition>
        <argsstring>)(const struct device *dev)</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop the device </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/virtual.h" line="86" column="1" bodyfile="include/net/virtual.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvirtual__interface__api_1a6fbfa013374bbafaa610b0a054d3a415" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* virtual_interface_api::send) (struct net_if *iface, struct net_pkt *pkt)</definition>
        <argsstring>)(struct net_if *iface, struct net_pkt *pkt)</argsstring>
        <name>send</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a network packet </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/virtual.h" line="89" column="1" bodyfile="include/net/virtual.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvirtual__interface__api_1a6f21e33e39caa00d51cca900a26f7070" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__net__core_1ga8e5393f3bdd85491f221324e637c3896" kindref="member">net_verdict</ref>(*</type>
        <definition>enum net_verdict(* virtual_interface_api::recv) (struct net_if *iface, struct net_pkt *pkt)</definition>
        <argsstring>)(struct net_if *iface, struct net_pkt *pkt)</argsstring>
        <name>recv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Receive a network packet </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/virtual.h" line="89" column="1" bodyfile="include/net/virtual.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvirtual__interface__api_1a285f8f872420209107f73b6b268af7b2" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__net__core_1ga8e5393f3bdd85491f221324e637c3896" kindref="member">net_verdict</ref>(*</type>
        <definition>enum net_verdict(* virtual_interface_api::input) (struct net_if *input_iface, struct net_if *iface, struct net_addr *remote_addr, struct net_pkt *pkt)</definition>
        <argsstring>)(struct net_if *input_iface, struct net_if *iface, struct net_addr *remote_addr, struct net_pkt *pkt)</argsstring>
        <name>input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if this received network packet is for this interface. The callback returns NET_CONTINUE if this interface will accept the packet and pass it upper layers, NET_DROP if the packet is to be dropped and NET_OK to pass it to next interface. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/virtual.h" line="89" column="1" bodyfile="include/net/virtual.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvirtual__interface__api_1a753258a8929347877997ca5d6a76eb8c" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* virtual_interface_api::attach) (struct net_if *virtual_iface, struct net_if *iface)</definition>
        <argsstring>)(struct net_if *virtual_iface, struct net_if *iface)</argsstring>
        <name>attach</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pass the attachment information to virtual interface </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/virtual.h" line="105" column="1" bodyfile="include/net/virtual.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvirtual__interface__api_1a591f1b7df5313c4a225dceaa04b1eeae" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* virtual_interface_api::set_config) (struct net_if *iface, enum virtual_interface_config_type type, const struct virtual_interface_config *config)</definition>
        <argsstring>)(struct net_if *iface, enum virtual_interface_config_type type, const struct virtual_interface_config *config)</argsstring>
        <name>set_config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set specific L2 configuration </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/virtual.h" line="108" column="1" bodyfile="include/net/virtual.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvirtual__interface__api_1a4ff5b92897926616778eb6fb696ebb16" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* virtual_interface_api::get_config) (struct net_if *iface, enum virtual_interface_config_type type, struct virtual_interface_config *config)</definition>
        <argsstring>)(struct net_if *iface, enum virtual_interface_config_type type, struct virtual_interface_config *config)</argsstring>
        <name>get_config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get specific L2 configuration </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/virtual.h" line="113" column="1" bodyfile="include/net/virtual.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/net/virtual.h" line="72" column="1" bodyfile="include/net/virtual.h" bodystart="72" bodyend="116"/>
    <listofallmembers>
      <member refid="structvirtual__interface__api_1a753258a8929347877997ca5d6a76eb8c" prot="public" virt="non-virtual"><scope>virtual_interface_api</scope><name>attach</name></member>
      <member refid="structvirtual__interface__api_1a827cd13d885b7cc2f80eddd73e438e07" prot="public" virt="non-virtual"><scope>virtual_interface_api</scope><name>get_capabilities</name></member>
      <member refid="structvirtual__interface__api_1a4ff5b92897926616778eb6fb696ebb16" prot="public" virt="non-virtual"><scope>virtual_interface_api</scope><name>get_config</name></member>
      <member refid="structvirtual__interface__api_1aee1250773938536ab28e129113073ae7" prot="public" virt="non-virtual"><scope>virtual_interface_api</scope><name>iface_api</name></member>
      <member refid="structvirtual__interface__api_1a285f8f872420209107f73b6b268af7b2" prot="public" virt="non-virtual"><scope>virtual_interface_api</scope><name>input</name></member>
      <member refid="structvirtual__interface__api_1a6f21e33e39caa00d51cca900a26f7070" prot="public" virt="non-virtual"><scope>virtual_interface_api</scope><name>recv</name></member>
      <member refid="structvirtual__interface__api_1a6fbfa013374bbafaa610b0a054d3a415" prot="public" virt="non-virtual"><scope>virtual_interface_api</scope><name>send</name></member>
      <member refid="structvirtual__interface__api_1a591f1b7df5313c4a225dceaa04b1eeae" prot="public" virt="non-virtual"><scope>virtual_interface_api</scope><name>set_config</name></member>
      <member refid="structvirtual__interface__api_1af28a6ed36799006d185fab9129c6c120" prot="public" virt="non-virtual"><scope>virtual_interface_api</scope><name>start</name></member>
      <member refid="structvirtual__interface__api_1a09a317009d31ac5e9340c3ca7d2191c4" prot="public" virt="non-virtual"><scope>virtual_interface_api</scope><name>stop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
