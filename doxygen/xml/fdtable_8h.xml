<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="fdtable_8h" kind="file" language="C++">
    <compoundname>fdtable.h</compoundname>
    <includes local="no">stdarg.h</includes>
    <includes refid="lib_2libc_2minimal_2include_2sys_2types_8h" local="no">sys/types.h</includes>
    <includes refid="fs_8h" local="no">fs/fs.h</includes>
    <includedby refid="eventfd_8h" local="no">include/posix/sys/eventfd.h</includedby>
    <incdepgraph>
      <node id="6">
        <label>fs/fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>fs/fs_interface.h</label>
        <link refid="fs__interface_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/sys/fdtable.h</label>
        <link refid="fdtable_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="9">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="4">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="5">
        <label>sys/_types.h</label>
        <link refid="__types_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sys/types.h</label>
        <link refid="lib_2libc_2minimal_2include_2sys_2types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdarg.h</label>
      </node>
      <node id="8">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/posix/sys/eventfd.h</label>
        <link refid="eventfd_8h"/>
      </node>
      <node id="1">
        <label>include/sys/fdtable.h</label>
        <link refid="fdtable_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structfd__op__vtable" prot="public">fd_op_vtable</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="fdtable_8h_1a188c132f478fb544e0213ea0020585bc" prot="public" static="no" strong="no">
        <type></type>
        <name>@204</name>
        <enumvalue id="fdtable_8h_1a188c132f478fb544e0213ea0020585bca50a53736aa4724d43363b8b0b1986ca4" prot="public">
          <name>ZFD_IOCTL_FSYNC</name>
          <initializer>= 0x100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fdtable_8h_1a188c132f478fb544e0213ea0020585bca5b7369d570c761ce85e6bd50a17eb072" prot="public">
          <name>ZFD_IOCTL_LSEEK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fdtable_8h_1a188c132f478fb544e0213ea0020585bca41846852df9ee3d5dba7b0051e94945e" prot="public">
          <name>ZFD_IOCTL_POLL_PREPARE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fdtable_8h_1a188c132f478fb544e0213ea0020585bca9e7250eac0c568051f35ab086b560eaa" prot="public">
          <name>ZFD_IOCTL_POLL_UPDATE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fdtable_8h_1a188c132f478fb544e0213ea0020585bca901693ab4461b170c2da08c7518ddbbe" prot="public">
          <name>ZFD_IOCTL_POLL_OFFLOAD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fdtable_8h_1a188c132f478fb544e0213ea0020585bca2920c62c09c574b21a58a6cf98017b62" prot="public">
          <name>ZFD_IOCTL_SET_LOCK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request codes for <ref refid="structfd__op__vtable_1aff079f05422413a0df3394ddfecc0298" kindref="member">fd_op_vtable.ioctl()</ref>.</para>
<para>Note that these codes are internal Zephyr numbers, for internal Zephyr operations (and subject to change without notice, not part of &quot;stable ABI&quot;). These are however expected to co-exist with &quot;well-known&quot; POSIX/Linux ioctl numbers, and not clash with them. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/fdtable.h" line="142" column="1" bodyfile="include/sys/fdtable.h" bodystart="142" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Linaro<sp/>Limited</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_SYS_FDTABLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_SYS_FDTABLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h" kindref="compound">sys/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>For<sp/>native_posix<sp/>ssize_t,<sp/>off_t.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fs_8h" kindref="compound">fs/fs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="structfd__op__vtable" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfd__op__vtable" kindref="compound">fd_op_vtable</ref><sp/>{</highlight></codeline>
<codeline lineno="23" refid="structfd__op__vtable_1a8caad0c1e96cdb67ef02f918ab8aff17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref><sp/>(*<ref refid="structfd__op__vtable_1a8caad0c1e96cdb67ef02f918ab8aff17" kindref="member">read</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz);</highlight></codeline>
<codeline lineno="24" refid="structfd__op__vtable_1ac59ee326ff54a6a2324bf3425f4a3d5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref><sp/>(*<ref refid="structfd__op__vtable_1ac59ee326ff54a6a2324bf3425f4a3d5a" kindref="member">write</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz);</highlight></codeline>
<codeline lineno="25" refid="structfd__op__vtable_1a80704417dfe01e8289d1f7fca819f5f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structfd__op__vtable_1a80704417dfe01e8289d1f7fca819f5f1" kindref="member">close</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="26" refid="structfd__op__vtable_1aff079f05422413a0df3394ddfecc0298" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structfd__op__vtable_1aff079f05422413a0df3394ddfecc0298" kindref="member">ioctl</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>request,<sp/>va_list<sp/>args);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_reserve_fd(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_finalize_fd(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfd__op__vtable" kindref="compound">fd_op_vtable</ref><sp/>*vtable);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_alloc_fd(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfd__op__vtable" kindref="compound">fd_op_vtable</ref><sp/>*vtable);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_free_fd(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*z_get_fd_obj(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfd__op__vtable" kindref="compound">fd_op_vtable</ref><sp/>*vtable,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*z_get_fd_obj_and_vtable(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfd__op__vtable" kindref="compound">fd_op_vtable</ref><sp/>**vtable,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__mutex" kindref="compound">k_mutex</ref><sp/>**<ref refid="spinlock__error__case_8c_1a16a34769989160878f34fc5cb06ec9f5" kindref="member">lock</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_fdtable_call_ioctl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfd__op__vtable" kindref="compound">fd_op_vtable</ref><sp/>*vtable,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>request,<sp/>...)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(args,<sp/>request);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>vtable-&gt;<ref refid="structfd__op__vtable_1aff079f05422413a0df3394ddfecc0298" kindref="member">ioctl</ref>(obj,<sp/>request,<sp/>args);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Codes<sp/>below<sp/>0x100<sp/>are<sp/>reserved<sp/>for<sp/>fcntl()<sp/>codes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="fdtable_8h_1a188c132f478fb544e0213ea0020585bca50a53736aa4724d43363b8b0b1986ca4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fdtable_8h_1a188c132f478fb544e0213ea0020585bca50a53736aa4724d43363b8b0b1986ca4" kindref="member">ZFD_IOCTL_FSYNC</ref><sp/>=<sp/>0x100,</highlight></codeline>
<codeline lineno="145" refid="fdtable_8h_1a188c132f478fb544e0213ea0020585bca5b7369d570c761ce85e6bd50a17eb072" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fdtable_8h_1a188c132f478fb544e0213ea0020585bca5b7369d570c761ce85e6bd50a17eb072" kindref="member">ZFD_IOCTL_LSEEK</ref>,</highlight></codeline>
<codeline lineno="146" refid="fdtable_8h_1a188c132f478fb544e0213ea0020585bca41846852df9ee3d5dba7b0051e94945e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fdtable_8h_1a188c132f478fb544e0213ea0020585bca41846852df9ee3d5dba7b0051e94945e" kindref="member">ZFD_IOCTL_POLL_PREPARE</ref>,</highlight></codeline>
<codeline lineno="147" refid="fdtable_8h_1a188c132f478fb544e0213ea0020585bca9e7250eac0c568051f35ab086b560eaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fdtable_8h_1a188c132f478fb544e0213ea0020585bca9e7250eac0c568051f35ab086b560eaa" kindref="member">ZFD_IOCTL_POLL_UPDATE</ref>,</highlight></codeline>
<codeline lineno="148" refid="fdtable_8h_1a188c132f478fb544e0213ea0020585bca901693ab4461b170c2da08c7518ddbbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fdtable_8h_1a188c132f478fb544e0213ea0020585bca901693ab4461b170c2da08c7518ddbbe" kindref="member">ZFD_IOCTL_POLL_OFFLOAD</ref>,</highlight></codeline>
<codeline lineno="149" refid="fdtable_8h_1a188c132f478fb544e0213ea0020585bca2920c62c09c574b21a58a6cf98017b62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fdtable_8h_1a188c132f478fb544e0213ea0020585bca2920c62c09c574b21a58a6cf98017b62" kindref="member">ZFD_IOCTL_SET_LOCK</ref>,</highlight></codeline>
<codeline lineno="150"><highlight class="normal">};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_SYS_FDTABLE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/sys/fdtable.h"/>
  </compounddef>
</doxygen>
