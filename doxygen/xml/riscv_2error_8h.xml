<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="riscv_2error_8h" kind="file" language="C++">
    <compoundname>error.h</compoundname>
    <includes refid="arch_2riscv_2syscall_8h" local="no">arch/riscv/syscall.h</includes>
    <includes refid="riscv_2exp_8h" local="no">arch/riscv/exp.h</includes>
    <includes refid="stdbool_8h" local="no">stdbool.h</includes>
    <includes local="no">syscalls/error.h</includes>
    <includedby refid="riscv_2arch_8h" local="no">include/arch/riscv/arch.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/arch/riscv/error.h</label>
        <link refid="riscv_2error_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>arch/riscv/exp.h</label>
        <link refid="riscv_2exp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>arch/riscv/syscall.h</label>
        <link refid="arch_2riscv_2syscall_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="3">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="5">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>syscalls/error.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/arch/riscv/arch.h</label>
        <link refid="riscv_2arch_8h"/>
      </node>
      <node id="1">
        <label>include/arch/riscv/error.h</label>
        <link refid="riscv_2error_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="riscv_2error_8h_1a8d3604770d7735d229e7d2fef4ff590a" prot="public" static="no">
        <name>ARCH_EXCEPT</name>
        <param><defname>reason_p</defname></param>
        <initializer>		do {			\
		if (<ref refid="syscall_8h_1acd625881dd1a23de2573fa86d870df20" kindref="member">k_is_user_context</ref>()) {		\
			<ref refid="group__arch-userspace_1ga4cfb3b2b38e5afca889e8b9765d6c3df" kindref="member">arch_syscall_invoke1</ref>(reason_p,	\
				K_SYSCALL_USER_FAULT);	\
		} else {				\
			compiler_barrier();		\
			z_impl_user_fault(reason_p);	\
		}					\
		CODE_UNREACHABLE; /* LCOV_EXCL_LINE */	\
	} while (<ref refid="stdbool_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/riscv/error.h" line="38" column="9" bodyfile="include/arch/riscv/error.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="riscv_2error_8h_1a1389d40b6fee2cbe28523075139aad72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void user_fault</definition>
        <argsstring>(unsigned int reason)</argsstring>
        <name>user_fault</name>
        <param>
          <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/riscv/error.h" line="64" column="7" declfile="include/arch/riscv/error.h" declline="64" declcolumn="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>RISCV public error handling. </para>
    </briefdescription>
    <detaileddescription>
<para>RISCV-specific kernel error handling interface. Included by <ref refid="riscv_2arch_8h" kindref="compound">riscv/arch.h</ref>. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>BayLibre,<sp/>SAS</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_ARCH_RISCV_ERROR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_ARCH_RISCV_ERROR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="arch_2riscv_2syscall_8h" kindref="compound">arch/riscv/syscall.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="riscv_2exp_8h" kindref="compound">arch/riscv/exp.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdbool_8h" kindref="compound">stdbool.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>Kernel<sp/>features<sp/>like<sp/>canary<sp/>(software<sp/>stack<sp/>guard)<sp/>are<sp/>built</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>with<sp/>an<sp/>argument<sp/>to<sp/>bypass<sp/>the<sp/>test<sp/>before<sp/>syscall<sp/>(test<sp/>if<sp/>CPU</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>is<sp/>running<sp/>in<sp/>user<sp/>or<sp/>kernel)<sp/>and<sp/>directly<sp/>execute<sp/>the<sp/>function.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>Then<sp/>if<sp/>this<sp/>kind<sp/>of<sp/>code<sp/>wishes<sp/>to<sp/>trigger<sp/>a<sp/>CPU<sp/>exception,</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>the<sp/>implemented<sp/>syscall<sp/>is<sp/>useless<sp/>because<sp/><sp/>the<sp/>function<sp/>is<sp/>directly</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>called<sp/>even<sp/>if<sp/>the<sp/>CPU<sp/>is<sp/>running<sp/>in<sp/>user<sp/>(which<sp/>happens<sp/>during</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>sanity<sp/>check).<sp/>To<sp/>fix<sp/>that,<sp/>I<sp/>bypass<sp/>the<sp/>generated<sp/>test<sp/>code<sp/>by<sp/>writing</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>the<sp/>test<sp/>myself<sp/>to<sp/>remove<sp/>the<sp/>bypass<sp/>ability.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="riscv_2error_8h_1a8d3604770d7735d229e7d2fef4ff590a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_EXCEPT(reason_p)<sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(k_is_user_context())<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arch_syscall_invoke1(reason_p,<sp/><sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_SYSCALL_USER_FAULT);<sp/><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compiler_barrier();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_impl_user_fault(reason_p);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CODE_UNREACHABLE;<sp/></highlight><highlight class="comment">/*<sp/>LCOV_EXCL_LINE<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>Raise<sp/>an<sp/>illegal<sp/>instruction<sp/>exception<sp/>so<sp/>that<sp/>mepc<sp/>will<sp/>hold<sp/>expected<sp/>value<sp/>in</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>exception<sp/>handler,<sp/>and<sp/>generated<sp/>coredump<sp/>can<sp/>reconstruct<sp/>the<sp/>failing<sp/>stack.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>Store<sp/>reason_p<sp/>in<sp/>register<sp/>t6,<sp/>marker<sp/>in<sp/>t5</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_EXCEPT_MARKER<sp/>0x00DEAD00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_EXCEPT(reason_p)<sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>volatile(&quot;addi<sp/>t5,<sp/>%[marker],<sp/>0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>:<sp/>[marker]<sp/>&quot;r&quot;<sp/>(ARCH_EXCEPT_MARKER));<sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>volatile(&quot;addi<sp/>t6,<sp/>%[reason],<sp/>0&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>:<sp/>[reason]<sp/>&quot;r&quot;<sp/>(reason_p));<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>volatile(&quot;unimp&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(false)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="riscv_2error_8h_1a1389d40b6fee2cbe28523075139aad72" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="riscv_2error_8h_1a1389d40b6fee2cbe28523075139aad72" kindref="member">user_fault</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reason);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;syscalls/error.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_ARCH_RISCV_ERROR_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/arch/riscv/error.h"/>
  </compounddef>
</doxygen>
