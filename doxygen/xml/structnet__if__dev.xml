<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structnet__if__dev" kind="struct" language="C++" prot="public">
    <compoundname>net_if_dev</compoundname>
    <includes refid="net__if_8h" local="no">net_if.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnet__if__dev_1aab633a44f165f571910dc9fc9e131c50" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
        <definition>const struct device* net_if_dev::dev</definition>
        <argsstring></argsstring>
        <name>dev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The actually device driver instance the <ref refid="structnet__if" kindref="compound">net_if</ref> is related to </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_if.h" line="429" column="19" bodyfile="include/net/net_if.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__if__dev_1a85d713c62875f5fe9e3ec29773150797" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structnet__l2" kindref="compound">net_l2</ref> *const</type>
        <definition>const struct net_l2* const net_if_dev::l2</definition>
        <argsstring></argsstring>
        <name>l2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interface&apos;s L2 layer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_if.h" line="432" column="26" bodyfile="include/net/net_if.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__if__dev_1a8fec6a7f612fc1268ef486d8bdebe018" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* net_if_dev::l2_data</definition>
        <argsstring></argsstring>
        <name>l2_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interface&apos;s private L2 data pointer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_if.h" line="435" column="6" bodyfile="include/net/net_if.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__if__dev_1ab26af05f768371e05496c2632558e8c8" prot="public" static="no" mutable="no">
        <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref></type>
        <definition>atomic_t net_if_dev::flags[ATOMIC_BITMAP_SIZE( NET_IF_NUM_FLAGS)]</definition>
        <argsstring>[ATOMIC_BITMAP_SIZE(NET_IF_NUM_FLAGS)]</argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_if.h" line="438" column="12" bodyfile="include/net/net_if.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__if__dev_1aac6d5d341ab520e6aac7f7b03737c197" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structnet__linkaddr" kindref="compound">net_linkaddr</ref></type>
        <definition>struct net_linkaddr net_if_dev::link_addr</definition>
        <argsstring></argsstring>
        <name>link_addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The hardware link address </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_if.h" line="441" column="19" bodyfile="include/net/net_if.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__if__dev_1aa15ccca2eb67b8d2afca153ccacb3742" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t net_if_dev::mtu</definition>
        <argsstring></argsstring>
        <name>mtu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The hardware MTU </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_if.h" line="453" column="10" bodyfile="include/net/net_if.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Network Interface Device structure. </para>
    </briefdescription>
    <detaileddescription>
<para>Used to handle a network interface on top of a device driver instance. There can be many <ref refid="structnet__if__dev" kindref="compound">net_if_dev</ref> instance against the same device.</para>
<para>Such interface is mainly to be used by the link layer, but is also tight to a network context: it then makes the relation with a network context and the network device.</para>
<para>Because of the strong relationship between a device driver and such network interface, each <ref refid="structnet__if__dev" kindref="compound">net_if_dev</ref> should be instantiated by </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>device</label>
        <link refid="structdevice"/>
        <childnode refid="3" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>device_state</label>
        <link refid="structdevice__state"/>
      </node>
      <node id="1">
        <label>net_if_dev</label>
        <link refid="structnet__if__dev"/>
        <childnode refid="2" relation="usage">
          <edgelabel>dev</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>l2</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>link_addr</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>net_l2</label>
        <link refid="structnet__l2"/>
      </node>
      <node id="5">
        <label>net_linkaddr</label>
        <link refid="structnet__linkaddr"/>
      </node>
    </collaborationgraph>
    <location file="include/net/net_if.h" line="427" column="1" bodyfile="include/net/net_if.h" bodystart="427" bodyend="459"/>
    <listofallmembers>
      <member refid="structnet__if__dev_1aab633a44f165f571910dc9fc9e131c50" prot="public" virt="non-virtual"><scope>net_if_dev</scope><name>dev</name></member>
      <member refid="structnet__if__dev_1ab26af05f768371e05496c2632558e8c8" prot="public" virt="non-virtual"><scope>net_if_dev</scope><name>flags</name></member>
      <member refid="structnet__if__dev_1a85d713c62875f5fe9e3ec29773150797" prot="public" virt="non-virtual"><scope>net_if_dev</scope><name>l2</name></member>
      <member refid="structnet__if__dev_1a8fec6a7f612fc1268ef486d8bdebe018" prot="public" virt="non-virtual"><scope>net_if_dev</scope><name>l2_data</name></member>
      <member refid="structnet__if__dev_1aac6d5d341ab520e6aac7f7b03737c197" prot="public" virt="non-virtual"><scope>net_if_dev</scope><name>link_addr</name></member>
      <member refid="structnet__if__dev_1aa15ccca2eb67b8d2afca153ccacb3742" prot="public" virt="non-virtual"><scope>net_if_dev</scope><name>mtu</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
