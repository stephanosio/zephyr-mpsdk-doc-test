<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__sntp" kind="group">
    <compoundname>sntp</compoundname>
    <title>SNTP</title>
    <innerclass refid="structsntp__ctx" prot="public">sntp_ctx</innerclass>
    <innerclass refid="structsntp__time" prot="public">sntp_time</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__sntp_1ga945936e5164bbd959cfa666ceacdac13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sntp_init</definition>
        <argsstring>(struct sntp_ctx *ctx, struct sockaddr *addr, socklen_t addr_len)</argsstring>
        <name>sntp_init</name>
        <param>
          <type>struct <ref refid="structsntp__ctx" kindref="compound">sntp_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref></type>
          <declname>addr_len</declname>
        </param>
        <briefdescription>
<para>Initialize SNTP context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of sntp context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>IP address of NTP/SNTP server. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr_len</parametername>
</parameternamelist>
<parameterdescription>
<para>IP address length of NTP/SNTP server.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt;0 if error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/sntp.h" line="60" column="5" declfile="include/net/sntp.h" declline="60" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__sntp_1ga8a32571c1706fbe50d4e58e1cb7f38f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sntp_query</definition>
        <argsstring>(struct sntp_ctx *ctx, uint32_t timeout, struct sntp_time *time)</argsstring>
        <name>sntp_query</name>
        <param>
          <type>struct <ref refid="structsntp__ctx" kindref="compound">sntp_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>struct <ref refid="structsntp__time" kindref="compound">sntp_time</ref> *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Perform SNTP query. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of sntp context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout of waiting for sntp response (in milliseconds). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp including integer and fractional seconds since 1 Jan 1970 (output).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt;0 if error (-ETIMEDOUT if timeout). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/sntp.h" line="73" column="5" declfile="include/net/sntp.h" declline="73" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__sntp_1ga0cff25edb11ae944dd24a234450a2f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sntp_close</definition>
        <argsstring>(struct sntp_ctx *ctx)</argsstring>
        <name>sntp_close</name>
        <param>
          <type>struct <ref refid="structsntp__ctx" kindref="compound">sntp_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Release SNTP context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of sntp context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/sntp.h" line="81" column="6" declfile="include/net/sntp.h" declline="81" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sntp_1gab2fe2668477065f4c8c381e738324b51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sntp_simple</definition>
        <argsstring>(const char *server, uint32_t timeout, struct sntp_time *time)</argsstring>
        <name>sntp_simple</name>
        <param>
          <type>const char *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>struct <ref refid="structsntp__time" kindref="compound">sntp_time</ref> *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Convenience function to query SNTP in one-shot fashion. </para>
        </briefdescription>
        <detaileddescription>
<para>Convenience wrapper which calls <ref refid="netdb_8h_1a08be4218900930dcc3add7e03173a83c" kindref="member">getaddrinfo()</ref>, <ref refid="group__sntp_1ga945936e5164bbd959cfa666ceacdac13" kindref="member">sntp_init()</ref>, <ref refid="group__sntp_1ga8a32571c1706fbe50d4e58e1cb7f38f6" kindref="member">sntp_query()</ref>, and <ref refid="group__sntp_1ga0cff25edb11ae944dd24a234450a2f3d" kindref="member">sntp_close()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of server in format addr[:port] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Query timeout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp including integer and fractional seconds since 1 Jan 1970 (output).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt;0 if error (-ETIMEDOUT if timeout). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/sntp.h" line="96" column="5" declfile="include/net/sntp.h" declline="96" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Simple Network Time Protocol API. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
