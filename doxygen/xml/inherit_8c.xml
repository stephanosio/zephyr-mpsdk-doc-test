<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="inherit_8c" kind="file" language="C++">
    <compoundname>inherit.c</compoundname>
    <includes refid="mem__protect_8h" local="yes">mem_protect.h</includes>
    <includes refid="syscall__handler_8h" local="no">syscall_handler.h</includes>
    <includes local="no">syscalls/ret_resource_pool_ptr_mrsh.c</includes>
    <incdepgraph>
      <node id="18">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="67">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="66">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="30">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="37">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="39">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="35">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="33">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="41">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="42">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="38">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="36">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="40">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="76">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="46">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="52">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="29">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>logging/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>logging/log_core.h</label>
        <link refid="include_2logging_2log__core_8h"/>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>logging/log_instance.h</label>
        <link refid="log__instance_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>logging/log_msg.h</label>
        <link refid="log__msg_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>logging/log_msg2.h</label>
        <link refid="include_2logging_2log__msg2_8h"/>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="103">
        <label>sys/cbprintf.h</label>
        <link refid="cbprintf_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>sys/cbprintf_cxx.h</label>
        <link refid="cbprintf__cxx_8h"/>
      </node>
      <node id="104">
        <label>sys/cbprintf_internal.h</label>
        <link refid="cbprintf__internal_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>sys/math_extras.h</label>
        <link refid="math__extras_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>sys/math_extras_impl.h</label>
        <link refid="math__extras__impl_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>sys/mpsc_packet.h</label>
        <link refid="mpsc__packet_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="24">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>syscall_handler.h</label>
        <link refid="syscall__handler_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="6">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="20">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="87">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="88">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="14">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="10">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="12">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="65">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="89">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="82">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="108">
        <label>syscalls/log_core.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__core_8h"/>
      </node>
      <node id="106">
        <label>syscalls/log_msg2.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__msg2_8h"/>
      </node>
      <node id="4">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="16">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/mem_protect/mem_protect/src/inherit.c</label>
        <link refid="inherit_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>mem_protect.h</label>
        <link refid="mem__protect_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>alloca.h</label>
      </node>
      <node id="69">
        <label>arch/cpu.h</label>
      </node>
      <node id="32">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="31">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="109">
        <label>driver-validation.h</label>
      </node>
      <node id="44">
        <label>kernel.h</label>
      </node>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="107">
        <label>syscall.h</label>
      </node>
      <node id="85">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="93">
        <label>syscalls/mem_protect.h</label>
      </node>
      <node id="110">
        <label>syscalls/ret_resource_pool_ptr_mrsh.c</label>
      </node>
      <node id="90">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="91">
        <label>tc_util.h</label>
      </node>
      <node id="3">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="inherit_8c_1af0f1213380e22eb155ce059814cf2ae9" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref> test_1_tid parent_thr</type>
        <definition>struct k_thread test_1_tid parent_thr child_thr</definition>
        <argsstring></argsstring>
        <name>child_thr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="30" column="15" bodyfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="inherit_8c_1a51f2e35ca22968aeb9be81dbbc806c99" prot="public" static="no" mutable="no">
        <type><ref refid="kernel_2thread_8h_1a6379f5a1f19ffbc262a6877c4f6e3647" kindref="member">k_tid_t</ref></type>
        <definition>k_tid_t parent_tid</definition>
        <argsstring></argsstring>
        <name>parent_tid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="31" column="9" bodyfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="inherit_8c_1acda3602b961ed586717727ef989954de" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t inherit_buf[MEM_REGION_ALLOC]</definition>
        <argsstring>[MEM_REGION_ALLOC]</argsstring>
        <name>inherit_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="33" column="12" bodyfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="inherit_8c_1ad601eddb2032877cab335d95b8bd9dd2" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__mem__partition" kindref="compound">k_mem_partition</ref> *</type>
        <definition>struct k_mem_partition* inherit_memory_partition_array[]</definition>
        <argsstring>[]</argsstring>
        <name>inherit_memory_partition_array</name>
        <initializer>= {
	&amp;inherit_memory_partition,
	&amp;<ref refid="group__ztest__test_1ga3adced2fdda96833e6b1ecbf3d61d446" kindref="member">ztest_mem_partition</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="40" column="22" bodyfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="inherit_8c_1aa63cec95abfbf093cb5db4f445785ad8" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__mem__domain" kindref="compound">k_mem_domain</ref></type>
        <definition>struct k_mem_domain inherit_mem_domain</definition>
        <argsstring></argsstring>
        <name>inherit_mem_domain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="45" column="19" bodyfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="inherit_8c_1a84009e38e987ce27f663ea6334741fa3" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__heap" kindref="compound">k_heap</ref> *</type>
        <definition>struct k_heap* child_heap_mem_ptr</definition>
        <argsstring></argsstring>
        <name>child_heap_mem_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="141" column="13" bodyfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="inherit_8c_1a309df156f57c18def2a15ffa14259424" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__heap" kindref="compound">k_heap</ref> *</type>
        <definition>struct k_heap* parent_heap_mem_ptr</definition>
        <argsstring></argsstring>
        <name>parent_heap_mem_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="142" column="13" bodyfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="inherit_8c_1a3d6edb95802bb212f5f2de362e475a9a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dummy_start</definition>
        <argsstring>(struct k_timer *timer)</argsstring>
        <name>dummy_start</name>
        <param>
          <type>struct k_timer *</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="11" column="20" bodyfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1a520d73106ebc219011f670d691cd2b6c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dummy_end</definition>
        <argsstring>(struct k_timer *timer)</argsstring>
        <name>dummy_end</name>
        <param>
          <type>struct k_timer *</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="15" column="20" bodyfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1ab216f1e20074fe957058333360809d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_DEFINE</definition>
        <argsstring>(test_1_stack, CONFIG_MAIN_STACK_SIZE)</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>test_1_stack</type>
        </param>
        <param>
          <type>CONFIG_MAIN_STACK_SIZE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="21" column="1" declfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" declline="21" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1a5d3111196f282824250f0209072bb4ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_DEFINE</definition>
        <argsstring>(parent_thr_stack,(512+CONFIG_TEST_EXTRA_STACK_SIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>parent_thr_stack</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACK_SIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="22" column="1" declfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" declline="22" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1a3b9779dec4f1dfd7d8a865720b13ffee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_DEFINE</definition>
        <argsstring>(child_thr_stack,(512+CONFIG_TEST_EXTRA_STACK_SIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>child_thr_stack</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACK_SIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="23" column="1" declfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" declline="23" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1ae9132bb420a5dde9dc3c316ff488e44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_HEAP_DEFINE</definition>
        <argsstring>(heap_mem, 64 *2)</argsstring>
        <name>K_HEAP_DEFINE</name>
        <param>
          <type><ref refid="test__mheap__api_8c_1a3d889d326c91e50ff646d95a6ce22e29" kindref="member">heap_mem</ref></type>
        </param>
        <param>
          <type>64 *</type>
          <declname>2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="24" column="1" declfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" declline="24" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1a7c3fe1115bb69b0506f789e68d5e1a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_SEM_DEFINE</definition>
        <argsstring>(inherit_sem,(0),(10))</argsstring>
        <name>K_SEM_DEFINE</name>
        <param>
          <type>inherit_sem</type>
        </param>
        <param>
          <type>(0)</type>
        </param>
        <param>
          <type>(10)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="25" column="1" declfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" declline="25" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1a057147c07736de48716255efde3f9364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_SEM_DEFINE</definition>
        <argsstring>(sync_sem,(0U),(1U))</argsstring>
        <name>K_SEM_DEFINE</name>
        <param>
          <type><ref refid="workq_2work_2src_2main_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref></type>
        </param>
        <param>
          <type>(0U)</type>
        </param>
        <param>
          <type>(1U)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="26" column="1" declfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" declline="26" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1adc537c4888a5035cb7d4e2f66ff930a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_MUTEX_DEFINE</definition>
        <argsstring>(inherit_mutex)</argsstring>
        <name>K_MUTEX_DEFINE</name>
        <param>
          <type>inherit_mutex</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="27" column="1" declfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" declline="27" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1ae9bc90da2f79e3dbcda60965fc5b5988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_TIMER_DEFINE</definition>
        <argsstring>(inherit_timer, dummy_start, dummy_end)</argsstring>
        <name>K_TIMER_DEFINE</name>
        <param>
          <type>inherit_timer</type>
        </param>
        <param>
          <type><ref refid="inherit_8c_1a3d6edb95802bb212f5f2de362e475a9a" kindref="member">dummy_start</ref></type>
        </param>
        <param>
          <type><ref refid="inherit_8c_1a520d73106ebc219011f670d691cd2b6c" kindref="member">dummy_end</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="28" column="1" declfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" declline="28" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1a046f3cb4567146716d6fc00ad179e60b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_MSGQ_DEFINE</definition>
        <argsstring>(inherit_msgq,(10),(10),(2))</argsstring>
        <name>K_MSGQ_DEFINE</name>
        <param>
          <type>inherit_msgq</type>
        </param>
        <param>
          <type>(10)</type>
        </param>
        <param>
          <type>(10)</type>
        </param>
        <param>
          <type>(2)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="29" column="1" declfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" declline="29" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1ab671d5b66e7738120b980aceb8e752b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_MEM_PARTITION_DEFINE</definition>
        <argsstring>(inherit_memory_partition, inherit_buf, sizeof(inherit_buf), K_MEM_PARTITION_P_RW_U_RW)</argsstring>
        <name>K_MEM_PARTITION_DEFINE</name>
        <param>
          <type>inherit_memory_partition</type>
        </param>
        <param>
          <type><ref refid="inherit_8c_1acda3602b961ed586717727ef989954de" kindref="member">inherit_buf</ref></type>
        </param>
        <param>
          <type>sizeof(<ref refid="inherit_8c_1acda3602b961ed586717727ef989954de" kindref="member">inherit_buf</ref>)</type>
        </param>
        <param>
          <type><ref refid="mmustructs_8h_1a9b7cc3c51f518517031d76807470aa10" kindref="member">K_MEM_PARTITION_P_RW_U_RW</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="35" column="1" declfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" declline="35" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1a50065129f8c8cb6e4a865e7aa1481747" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void access_test</definition>
        <argsstring>(void)</argsstring>
        <name>access_test</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="48" column="13" bodyfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" bodystart="48" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1ae6b009f27184f047d6a3bc2e5cf438eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_thread_1_for_user</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>test_thread_1_for_user</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="61" column="13" bodyfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" bodystart="61" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1a624098d63952bc9ea4b05b5e8a7f5297" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_thread_1_for_SU</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>test_thread_1_for_SU</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="73" column="13" bodyfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" bodystart="73" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1a56ba85a91402ebff75f322475724d219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_permission_inheritance</definition>
        <argsstring>(void)</argsstring>
        <name>test_permission_inheritance</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test object permission inheritance except of the parent thread object. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>To the parent current thread grant permissions on kernel objects.</para>
</listitem><listitem><para>Create a child thread and check that it inherited permissions on that kernel objects.</para>
</listitem><listitem><para>Then check child thread can&apos;t access to the parent thread object using API command <ref refid="group__thread__apis_1ga3a46ed8ad2c3b12416fafe11325f82b3" kindref="member">k_thread_priority_get()</ref></para>
</listitem><listitem><para>At the same moment that test verifies that child thread was granted permission on a kernel objects. That meanis child user thread caller already has permission on the thread objects being granted.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__mem__domain__apis_1ga8a987bc85c02925685fe87213fe26c5a" kindref="member">k_mem_domain_init()</ref>, <ref refid="group__mem__domain__apis_1ga7b4d6148d9375f020a268961d5afde2d" kindref="member">k_mem_domain_add_thread()</ref>, <ref refid="group__thread__apis_1gafec540511e6d2e0a074a5bfb515c53b0" kindref="member">k_thread_access_grant()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="101" column="6" bodyfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" bodystart="101" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1a5336c771f806e7d16a7af1288a5a30a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void child_handler</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>child_handler</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="144" column="6" bodyfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" bodystart="144" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1aa064a141bd93ade496fabf7c81980166" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parent_handler</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>parent_handler</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="150" column="6" bodyfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" bodystart="150" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="inherit_8c_1ab37f929ccd6c4a6ec2b2f8d60606e100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_inherit_resource_pool</definition>
        <argsstring>(void)</argsstring>
        <name>test_inherit_resource_pool</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test child thread inherits parent&apos;s thread resource pool. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Create a memory heap heap_mem for the parent thread.</para>
</listitem><listitem><para>Then special system call <ref refid="mem__protect_8h_1a9b9a62d7516d3a56eaf2c6110dd9072d" kindref="member">ret_resource_pool_ptr()</ref> returns pointer to the resource pool of the current thread.</para>
</listitem><listitem><para>Call it in the <ref refid="inherit_8c_1aa064a141bd93ade496fabf7c81980166" kindref="member">parent_handler()</ref> and in the <ref refid="inherit_8c_1a5336c771f806e7d16a7af1288a5a30a1" kindref="member">child_handler()</ref></para>
</listitem><listitem><para>Then in the main test function <ref refid="inherit_8c_1ab37f929ccd6c4a6ec2b2f8d60606e100" kindref="member">test_inherit_resource_pool()</ref> compare returned addresses</para>
</listitem><listitem><para>If the addresses are the same, it means that child thread inherited resource pool of the parent&apos;s thread -test passed.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para>z_thread_heap_assign() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c" line="177" column="6" bodyfile="tests/kernel/mem_protect/mem_protect/src/inherit.c" bodystart="177" bodyend="191"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017,<sp/>2020<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mem__protect_8h" kindref="compound">mem_protect.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="syscall__handler_8h" kindref="compound">syscall_handler.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>function<sp/>prototypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inherit_8c_1a3d6edb95802bb212f5f2de362e475a9a" kindref="member">dummy_start</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_timer<sp/>*<ref refid="timeout__order_8c_1a1aea163f91df5b08c53c40e2cb68e242" kindref="member">timer</ref>)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(<ref refid="timeout__order_8c_1a1aea163f91df5b08c53c40e2cb68e242" kindref="member">timer</ref>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inherit_8c_1a520d73106ebc219011f670d691cd2b6c" kindref="member">dummy_end</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_timer<sp/>*<ref refid="timeout__order_8c_1a1aea163f91df5b08c53c40e2cb68e242" kindref="member">timer</ref>)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(<ref refid="timeout__order_8c_1a1aea163f91df5b08c53c40e2cb68e242" kindref="member">timer</ref>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Kernel<sp/>objects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="inherit_8c_1ab216f1e20074fe957058333360809d93" kindref="member">K_THREAD_STACK_DEFINE</ref>(test_1_stack,<sp/><ref refid="mem__protect_8h_1a8ee979cf43e9512235b230adb4ed40e5" kindref="member">INHERIT_STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="inherit_8c_1ab216f1e20074fe957058333360809d93" kindref="member">K_THREAD_STACK_DEFINE</ref>(parent_thr_stack,<sp/><ref refid="atomic_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="inherit_8c_1ab216f1e20074fe957058333360809d93" kindref="member">K_THREAD_STACK_DEFINE</ref>(child_thr_stack,<sp/><ref refid="atomic_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="inherit_8c_1ae9132bb420a5dde9dc3c316ff488e44d" kindref="member">K_HEAP_DEFINE</ref>(<ref refid="test__mheap__api_8c_1a3d889d326c91e50ff646d95a6ce22e29" kindref="member">heap_mem</ref>,<sp/><ref refid="test__mheap_8h_1a75341588e628cc8059088830880e11ce" kindref="member">BLK_SIZE_MAX</ref><sp/>*<sp/><ref refid="test__mheap_8h_1a178957a5641420997da764653ff30bc4" kindref="member">BLK_NUM_MAX</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="inherit_8c_1a7c3fe1115bb69b0506f789e68d5e1a61" kindref="member">K_SEM_DEFINE</ref>(inherit_sem,<sp/><ref refid="mem__protect_8h_1a19e7f3a6c7e2273e89f49db644350c55" kindref="member">SEMAPHORE_INIT_COUNT</ref>,<sp/><ref refid="mem__protect_8h_1a460c3954e5b249407aa0de9dad360025" kindref="member">SEMAPHORE_MAX_COUNT</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="inherit_8c_1a7c3fe1115bb69b0506f789e68d5e1a61" kindref="member">K_SEM_DEFINE</ref>(<ref refid="interrupt__offload_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="mem__protect_8h_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_8h_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="inherit_8c_1adc537c4888a5035cb7d4e2f66ff930a8" kindref="member">K_MUTEX_DEFINE</ref>(inherit_mutex);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="inherit_8c_1ae9bc90da2f79e3dbcda60965fc5b5988" kindref="member">K_TIMER_DEFINE</ref>(inherit_timer,<sp/><ref refid="inherit_8c_1a3d6edb95802bb212f5f2de362e475a9a" kindref="member">dummy_start</ref>,<sp/><ref refid="inherit_8c_1a520d73106ebc219011f670d691cd2b6c" kindref="member">dummy_end</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="inherit_8c_1a046f3cb4567146716d6fc00ad179e60b" kindref="member">K_MSGQ_DEFINE</ref>(inherit_msgq,<sp/><ref refid="mem__protect_8h_1ad26bfccbdcf95b9f58ac00c02999c2ea" kindref="member">MSG_Q_SIZE</ref>,<sp/><ref refid="mem__protect_8h_1a7f4e9e375c31bec11cf35f99a965bf2b" kindref="member">MSG_Q_MAX_NUM_MSGS</ref>,<sp/><ref refid="mem__protect_8h_1aa5428a7edeec43ef8e686940f221e780" kindref="member">MSG_Q_ALIGN</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/>test_1_tid,<sp/>parent_thr,<sp/><ref refid="inherit_8c_1af0f1213380e22eb155ce059814cf2ae9" kindref="member">child_thr</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="inherit_8c_1a51f2e35ca22968aeb9be81dbbc806c99" kindref="member">parent_tid</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="mem__protect_8h_1a3c2d0d295d142e2ad1dcfd544fd64ad9" kindref="member">MEM_DOMAIN_ALIGNMENT</ref><sp/><ref refid="inherit_8c_1acda3602b961ed586717727ef989954de" kindref="member">inherit_buf</ref>[MEM_REGION_ALLOC];<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>mem<sp/>domain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="inherit_8c_1ab671d5b66e7738120b980aceb8e752b9" kindref="member">K_MEM_PARTITION_DEFINE</ref>(inherit_memory_partition,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inherit_8c_1acda3602b961ed586717727ef989954de" kindref="member">inherit_buf</ref>,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="inherit_8c_1acda3602b961ed586717727ef989954de" kindref="member">inherit_buf</ref>),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arm__mpu__v7m_8h_1a9b7cc3c51f518517031d76807470aa10" kindref="member">K_MEM_PARTITION_P_RW_U_RW</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__mem__partition" kindref="compound">k_mem_partition</ref><sp/>*<ref refid="inherit_8c_1ad601eddb2032877cab335d95b8bd9dd2" kindref="member">inherit_memory_partition_array</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;inherit_memory_partition,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="group__ztest__test__deprecated_1ga3adced2fdda96833e6b1ecbf3d61d446" kindref="member">ztest_mem_partition</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__mem__domain" kindref="compound">k_mem_domain</ref><sp/><ref refid="inherit_8c_1aa63cec95abfbf093cb5db4f445785ad8" kindref="member">inherit_mem_domain</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>generic<sp/>function<sp/>to<sp/>do<sp/>check<sp/>the<sp/>access<sp/>permissions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inherit_8c_1a50065129f8c8cb6e4a865e7aa1481747" kindref="member">access_test</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>msg_q_data<sp/>=<sp/>0xA5A5;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>all<sp/>accesses<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;inherit_sem);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mutex__apis_1ga850549358645249c285669baa49c33b0" kindref="member">k_mutex_lock</ref>(&amp;inherit_mutex,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/><ref refid="group__timer__apis_1gad532f4834cd4cf8be27b089e6ea347ce" kindref="member">k_timer_status_get</ref>(&amp;inherit_timer);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__msgq__apis_1ga54e96aaaea5462a1f963b7fd5ca82bfe" kindref="member">k_msgq_put</ref>(&amp;inherit_msgq,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;msg_q_data,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mutex__apis_1ga360f4c0e7258b0d7030cdb1f452b2c31" kindref="member">k_mutex_unlock</ref>(&amp;inherit_mutex);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inherit_8c_1acda3602b961ed586717727ef989954de" kindref="member">inherit_buf</ref>[MEM_REGION_ALLOC-1]<sp/>=<sp/>0xA5;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inherit_8c_1ae6b009f27184f047d6a3bc2e5cf438eb" kindref="member">test_thread_1_for_user</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>that<sp/>child<sp/>thread<sp/>inherited<sp/>permissions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inherit_8c_1a50065129f8c8cb6e4a865e7aa1481747" kindref="member">access_test</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_8h_1a6bc9c5485934a1cb634735eebe320cfe" kindref="member">set_fault_valid</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>child<sp/>thread<sp/>can&apos;t<sp/>access<sp/>parent<sp/>thread<sp/>object*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Kernel<sp/>fault<sp/>in<sp/>that<sp/>place<sp/>will<sp/>happen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga3a46ed8ad2c3b12416fafe11325f82b3" kindref="member">k_thread_priority_get</ref>(<ref refid="inherit_8c_1a51f2e35ca22968aeb9be81dbbc806c99" kindref="member">parent_tid</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inherit_8c_1a624098d63952bc9ea4b05b5e8a7f5297" kindref="member">test_thread_1_for_SU</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_8h_1a6bc9c5485934a1cb634735eebe320cfe" kindref="member">set_fault_valid</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inherit_8c_1a50065129f8c8cb6e4a865e7aa1481747" kindref="member">access_test</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>user<sp/>mode<sp/>inherit<sp/>is<sp/>working<sp/>if<sp/>control<sp/>is<sp/>passed<sp/>from<sp/>SU<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga3fbe1c8a5f3ef1c25382c7d6fca35764" kindref="member">k_thread_user_mode_enter</ref>(<ref refid="inherit_8c_1ae6b009f27184f047d6a3bc2e5cf438eb" kindref="member">test_thread_1_for_user</ref>,<sp/>NULL,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inherit_8c_1a56ba85a91402ebff75f322475724d219" kindref="member">test_permission_inheritance</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__mem__domain__apis_1ga8a987bc85c02925685fe87213fe26c5a" kindref="member">k_mem_domain_init</ref>(&amp;<ref refid="inherit_8c_1aa63cec95abfbf093cb5db4f445785ad8" kindref="member">inherit_mem_domain</ref>,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(<ref refid="inherit_8c_1ad601eddb2032877cab335d95b8bd9dd2" kindref="member">inherit_memory_partition_array</ref>),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inherit_8c_1ad601eddb2032877cab335d95b8bd9dd2" kindref="member">inherit_memory_partition_array</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ztest__assert_8h_1acd6eb423f54dce8544f7c3b1618c0374" kindref="member">ztest_test_fail</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inherit_8c_1a51f2e35ca22968aeb9be81dbbc806c99" kindref="member">parent_tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mem__domain__apis_1ga7b4d6148d9375f020a268961d5afde2d" kindref="member">k_mem_domain_add_thread</ref>(&amp;<ref refid="inherit_8c_1aa63cec95abfbf093cb5db4f445785ad8" kindref="member">inherit_mem_domain</ref>,<sp/><ref refid="inherit_8c_1a51f2e35ca22968aeb9be81dbbc806c99" kindref="member">parent_tid</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gafec540511e6d2e0a074a5bfb515c53b0" kindref="member">k_thread_access_grant</ref>(<ref refid="inherit_8c_1a51f2e35ca22968aeb9be81dbbc806c99" kindref="member">parent_tid</ref>,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;inherit_sem,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;inherit_mutex,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;inherit_timer,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;inherit_msgq,<sp/>&amp;test_1_stack);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;test_1_tid,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_1_stack,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_8h_1a8ee979cf43e9512235b230adb4ed40e5" kindref="member">INHERIT_STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inherit_8c_1a624098d63952bc9ea4b05b5e8a7f5297" kindref="member">test_thread_1_for_SU</ref>,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(&amp;test_1_tid,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__heap" kindref="compound">k_heap</ref><sp/>*z_impl_ret_resource_pool_ptr(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_current-&gt;resource_pool;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__heap" kindref="compound">k_heap</ref><sp/>*z_vrfy_ret_resource_pool_ptr(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z_impl_ret_resource_pool_ptr();</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;syscalls/ret_resource_pool_ptr_mrsh.c&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__heap" kindref="compound">k_heap</ref><sp/>*<ref refid="inherit_8c_1a84009e38e987ce27f663ea6334741fa3" kindref="member">child_heap_mem_ptr</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__heap" kindref="compound">k_heap</ref><sp/>*<ref refid="inherit_8c_1a309df156f57c18def2a15ffa14259424" kindref="member">parent_heap_mem_ptr</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inherit_8c_1a5336c771f806e7d16a7af1288a5a30a1" kindref="member">child_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inherit_8c_1a84009e38e987ce27f663ea6334741fa3" kindref="member">child_heap_mem_ptr</ref><sp/>=<sp/><ref refid="mem__protect_8h_1a9b9a62d7516d3a56eaf2c6110dd9072d" kindref="member">ret_resource_pool_ptr</ref>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="interrupt__offload_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inherit_8c_1aa064a141bd93ade496fabf7c81980166" kindref="member">parent_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inherit_8c_1a309df156f57c18def2a15ffa14259424" kindref="member">parent_heap_mem_ptr</ref><sp/>=<sp/><ref refid="mem__protect_8h_1a9b9a62d7516d3a56eaf2c6110dd9072d" kindref="member">ret_resource_pool_ptr</ref>();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="inherit_8c_1af0f1213380e22eb155ce059814cf2ae9" kindref="member">child_thr</ref>,<sp/>child_thr_stack,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" kindref="member">K_THREAD_STACK_SIZEOF</ref>(child_thr_stack),</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inherit_8c_1a5336c771f806e7d16a7af1288a5a30a1" kindref="member">child_handler</ref>,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fatal_2exception_2src_2main_8c_1a25e7852941475e51c875632ac1985d8a" kindref="member">PRIORITY</ref>,<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inherit_8c_1ab37f929ccd6c4a6ec2b2f8d60606e100" kindref="member">test_inherit_resource_pool</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="interrupt__offload_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;parent_thr,<sp/>parent_thr_stack,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" kindref="member">K_THREAD_STACK_SIZEOF</ref>(parent_thr_stack),</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inherit_8c_1aa064a141bd93ade496fabf7c81980166" kindref="member">parent_handler</ref>,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fatal_2exception_2src_2main_8c_1a25e7852941475e51c875632ac1985d8a" kindref="member">PRIORITY</ref>,<sp/>0,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga3f46c06833add2a2e0ddb7242f06702c" kindref="member">k_thread_heap_assign</ref>(&amp;parent_thr,<sp/>&amp;<ref refid="test__mheap__api_8c_1a3d889d326c91e50ff646d95a6ce22e29" kindref="member">heap_mem</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga88031bd9fcfcd4305bae4029a4d8416f" kindref="member">k_thread_start</ref>(&amp;parent_thr);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="interrupt__offload_8c_1aedfbc833487b0689ac260f666283f629" kindref="member">sync_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="inherit_8c_1a309df156f57c18def2a15ffa14259424" kindref="member">parent_heap_mem_ptr</ref><sp/>==<sp/><ref refid="inherit_8c_1a84009e38e987ce27f663ea6334741fa3" kindref="member">child_heap_mem_ptr</ref>,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Resource<sp/>pool<sp/>of<sp/>the<sp/>parent<sp/>thread<sp/>not<sp/>inherited,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>by<sp/>child<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/kernel/mem_protect/mem_protect/src/inherit.c"/>
  </compounddef>
</doxygen>
