<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="atomic__c_8h" kind="file" language="C++">
    <compoundname>atomic_c.h</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="atomic__c_8h_1ab879da5aa1ffcc317adc664c016586f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool atomic_cas</definition>
        <argsstring>(atomic_t *target, atomic_val_t old_value, atomic_val_t new_value)</argsstring>
        <name>atomic_cas</name>
        <param>
          <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
          <declname>old_value</declname>
        </param>
        <param>
          <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/atomic_c.h" line="20" column="7" declfile="include/sys/atomic_c.h" declline="20" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="atomic__c_8h_1a98f03db5ef2b36ff3412506a7f6d9558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool atomic_ptr_cas</definition>
        <argsstring>(atomic_ptr_t *target, atomic_ptr_val_t old_value, atomic_ptr_val_t new_value)</argsstring>
        <name>atomic_ptr_cas</name>
        <param>
          <type><ref refid="atomic_8h_1acad6866fa4c844026cd9f8c3fb60ecd7" kindref="member">atomic_ptr_t</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="atomic_8h_1a374deb49b6dab1420a835b01433eb2f4" kindref="member">atomic_ptr_val_t</ref></type>
          <declname>old_value</declname>
        </param>
        <param>
          <type><ref refid="atomic_8h_1a374deb49b6dab1420a835b01433eb2f4" kindref="member">atomic_ptr_val_t</ref></type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/atomic_c.h" line="23" column="7" declfile="include/sys/atomic_c.h" declline="23" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="atomic__c_8h_1a518c07595daaca29a9e53071ed59c9c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
        <definition>atomic_val_t atomic_add</definition>
        <argsstring>(atomic_t *target, atomic_val_t value)</argsstring>
        <name>atomic_add</name>
        <param>
          <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/atomic_c.h" line="26" column="15" declfile="include/sys/atomic_c.h" declline="26" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="atomic__c_8h_1a84ab58fd0a6dbbf1bf675722b5900bd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
        <definition>atomic_val_t atomic_sub</definition>
        <argsstring>(atomic_t *target, atomic_val_t value)</argsstring>
        <name>atomic_sub</name>
        <param>
          <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/atomic_c.h" line="28" column="15" declfile="include/sys/atomic_c.h" declline="28" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="atomic__c_8h_1a66487deb6817076501dd9160537fc06a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
        <definition>static atomic_val_t atomic_inc</definition>
        <argsstring>(atomic_t *target)</argsstring>
        <name>atomic_inc</name>
        <param>
          <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/atomic_c.h" line="30" column="28" bodyfile="include/sys/atomic_c.h" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="atomic__c_8h_1a0adecd95c4d47987c404a31e87c1d5c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
        <definition>static atomic_val_t atomic_dec</definition>
        <argsstring>(atomic_t *target)</argsstring>
        <name>atomic_dec</name>
        <param>
          <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/atomic_c.h" line="36" column="28" bodyfile="include/sys/atomic_c.h" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="atomic__c_8h_1a33bb426a17535bd1022895a7e44b32fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
        <definition>atomic_val_t atomic_get</definition>
        <argsstring>(const atomic_t *target)</argsstring>
        <name>atomic_get</name>
        <param>
          <type>const <ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/atomic_c.h" line="42" column="21" declfile="include/sys/atomic_c.h" declline="42" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="atomic__c_8h_1a250c4672ce7749261bdb8b2f0c767da2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="atomic_8h_1a374deb49b6dab1420a835b01433eb2f4" kindref="member">atomic_ptr_val_t</ref></type>
        <definition>atomic_ptr_val_t atomic_ptr_get</definition>
        <argsstring>(const atomic_ptr_t *target)</argsstring>
        <name>atomic_ptr_get</name>
        <param>
          <type>const <ref refid="atomic_8h_1acad6866fa4c844026cd9f8c3fb60ecd7" kindref="member">atomic_ptr_t</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/atomic_c.h" line="44" column="25" declfile="include/sys/atomic_c.h" declline="44" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="atomic__c_8h_1a5f0555245d8932c2e7f7e94575e1a095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
        <definition>atomic_val_t atomic_set</definition>
        <argsstring>(atomic_t *target, atomic_val_t value)</argsstring>
        <name>atomic_set</name>
        <param>
          <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/atomic_c.h" line="46" column="15" declfile="include/sys/atomic_c.h" declline="46" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="atomic__c_8h_1a3a57fd7f76f84e0f5800878b8f81fc35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="atomic_8h_1a374deb49b6dab1420a835b01433eb2f4" kindref="member">atomic_ptr_val_t</ref></type>
        <definition>atomic_ptr_val_t atomic_ptr_set</definition>
        <argsstring>(atomic_ptr_t *target, atomic_ptr_val_t value)</argsstring>
        <name>atomic_ptr_set</name>
        <param>
          <type><ref refid="atomic_8h_1acad6866fa4c844026cd9f8c3fb60ecd7" kindref="member">atomic_ptr_t</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="atomic_8h_1a374deb49b6dab1420a835b01433eb2f4" kindref="member">atomic_ptr_val_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/atomic_c.h" line="48" column="19" declfile="include/sys/atomic_c.h" declline="48" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="atomic__c_8h_1a45ccf5a7d636206f0673139ac393946f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
        <definition>static atomic_val_t atomic_clear</definition>
        <argsstring>(atomic_t *target)</argsstring>
        <name>atomic_clear</name>
        <param>
          <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/atomic_c.h" line="50" column="28" bodyfile="include/sys/atomic_c.h" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="atomic__c_8h_1a8b511a7b5bccc7bc6b6e13526f87c0f3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="atomic_8h_1a374deb49b6dab1420a835b01433eb2f4" kindref="member">atomic_ptr_val_t</ref></type>
        <definition>static atomic_ptr_val_t atomic_ptr_clear</definition>
        <argsstring>(atomic_ptr_t *target)</argsstring>
        <name>atomic_ptr_clear</name>
        <param>
          <type><ref refid="atomic_8h_1acad6866fa4c844026cd9f8c3fb60ecd7" kindref="member">atomic_ptr_t</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/atomic_c.h" line="56" column="32" bodyfile="include/sys/atomic_c.h" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="atomic__c_8h_1a1564a44a260e7d0d02e30ae045a99764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
        <definition>atomic_val_t atomic_or</definition>
        <argsstring>(atomic_t *target, atomic_val_t value)</argsstring>
        <name>atomic_or</name>
        <param>
          <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/atomic_c.h" line="62" column="15" declfile="include/sys/atomic_c.h" declline="62" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="atomic__c_8h_1a18592bcf38d667fb9b428f81ea691bd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
        <definition>atomic_val_t atomic_xor</definition>
        <argsstring>(atomic_t *target, atomic_val_t value)</argsstring>
        <name>atomic_xor</name>
        <param>
          <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/atomic_c.h" line="64" column="15" declfile="include/sys/atomic_c.h" declline="64" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="atomic__c_8h_1a4bc1f6a6f5d98eef742b4541d235811d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
        <definition>atomic_val_t atomic_and</definition>
        <argsstring>(atomic_t *target, atomic_val_t value)</argsstring>
        <name>atomic_and</name>
        <param>
          <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/atomic_c.h" line="66" column="15" declfile="include/sys/atomic_c.h" declline="66" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="atomic__c_8h_1a3e954286e40de73e45598a00a0a2b864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
        <definition>atomic_val_t atomic_nand</definition>
        <argsstring>(atomic_t *target, atomic_val_t value)</argsstring>
        <name>atomic_nand</name>
        <param>
          <type><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/atomic_c.h" line="68" column="15" declfile="include/sys/atomic_c.h" declline="68" declcolumn="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1997-2015,<sp/>Wind<sp/>River<sp/>Systems,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_SYS_ATOMIC_C_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_SYS_ATOMIC_C_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Included<sp/>from<sp/>&lt;atomic.h&gt;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Simple<sp/>and<sp/>correct<sp/>(but<sp/>very<sp/>slow)<sp/>implementation<sp/>of<sp/>atomic</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>primitives<sp/>that<sp/>require<sp/>nothing<sp/>more<sp/>than<sp/>kernel<sp/>interrupt<sp/>locking.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="atomic__c_8h_1ab879da5aa1ffcc317adc664c016586f7" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="atomic__c_8h_1ab879da5aa1ffcc317adc664c016586f7" kindref="member">atomic_cas</ref>(<ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/>*<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>,<sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/>old_value,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/>new_value);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="atomic__c_8h_1a98f03db5ef2b36ff3412506a7f6d9558" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="atomic__c_8h_1a98f03db5ef2b36ff3412506a7f6d9558" kindref="member">atomic_ptr_cas</ref>(<ref refid="atomic_8h_1acad6866fa4c844026cd9f8c3fb60ecd7" kindref="member">atomic_ptr_t</ref><sp/>*<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>,<sp/><ref refid="atomic_8h_1a374deb49b6dab1420a835b01433eb2f4" kindref="member">atomic_ptr_val_t</ref><sp/>old_value,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic_8h_1a374deb49b6dab1420a835b01433eb2f4" kindref="member">atomic_ptr_val_t</ref><sp/>new_value);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="atomic__c_8h_1a518c07595daaca29a9e53071ed59c9c0" refkind="member"><highlight class="normal">__syscall<sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/><ref refid="atomic__c_8h_1a518c07595daaca29a9e53071ed59c9c0" kindref="member">atomic_add</ref>(<ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/>*<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>,<sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="atomic__c_8h_1a84ab58fd0a6dbbf1bf675722b5900bd7" refkind="member"><highlight class="normal">__syscall<sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/><ref refid="atomic__c_8h_1a84ab58fd0a6dbbf1bf675722b5900bd7" kindref="member">atomic_sub</ref>(<ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/>*<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>,<sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="atomic__c_8h_1a66487deb6817076501dd9160537fc06a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/><ref refid="atomic__c_8h_1a66487deb6817076501dd9160537fc06a" kindref="member">atomic_inc</ref>(<ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/>*<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="atomic__c_8h_1a518c07595daaca29a9e53071ed59c9c0" kindref="member">atomic_add</ref>(<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="atomic__c_8h_1a0adecd95c4d47987c404a31e87c1d5c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/><ref refid="atomic__c_8h_1a0adecd95c4d47987c404a31e87c1d5c5" kindref="member">atomic_dec</ref>(<ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/>*<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="atomic__c_8h_1a84ab58fd0a6dbbf1bf675722b5900bd7" kindref="member">atomic_sub</ref>(<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="atomic__c_8h_1a33bb426a17535bd1022895a7e44b32fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/><ref refid="atomic__c_8h_1a33bb426a17535bd1022895a7e44b32fa" kindref="member">atomic_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/>*<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="atomic__c_8h_1a250c4672ce7749261bdb8b2f0c767da2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="atomic_8h_1a374deb49b6dab1420a835b01433eb2f4" kindref="member">atomic_ptr_val_t</ref><sp/><ref refid="atomic__c_8h_1a250c4672ce7749261bdb8b2f0c767da2" kindref="member">atomic_ptr_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="atomic_8h_1acad6866fa4c844026cd9f8c3fb60ecd7" kindref="member">atomic_ptr_t</ref><sp/>*<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="atomic__c_8h_1a5f0555245d8932c2e7f7e94575e1a095" refkind="member"><highlight class="normal">__syscall<sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/><ref refid="atomic__c_8h_1a5f0555245d8932c2e7f7e94575e1a095" kindref="member">atomic_set</ref>(<ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/>*<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>,<sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="atomic__c_8h_1a3a57fd7f76f84e0f5800878b8f81fc35" refkind="member"><highlight class="normal">__syscall<sp/><ref refid="atomic_8h_1a374deb49b6dab1420a835b01433eb2f4" kindref="member">atomic_ptr_val_t</ref><sp/><ref refid="atomic__c_8h_1a3a57fd7f76f84e0f5800878b8f81fc35" kindref="member">atomic_ptr_set</ref>(<ref refid="atomic_8h_1acad6866fa4c844026cd9f8c3fb60ecd7" kindref="member">atomic_ptr_t</ref><sp/>*<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>,<sp/><ref refid="atomic_8h_1a374deb49b6dab1420a835b01433eb2f4" kindref="member">atomic_ptr_val_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="atomic__c_8h_1a45ccf5a7d636206f0673139ac393946f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/><ref refid="atomic__c_8h_1a45ccf5a7d636206f0673139ac393946f" kindref="member">atomic_clear</ref>(<ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/>*<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="atomic__c_8h_1a5f0555245d8932c2e7f7e94575e1a095" kindref="member">atomic_set</ref>(<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="atomic__c_8h_1a8b511a7b5bccc7bc6b6e13526f87c0f3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="atomic_8h_1a374deb49b6dab1420a835b01433eb2f4" kindref="member">atomic_ptr_val_t</ref><sp/><ref refid="atomic__c_8h_1a8b511a7b5bccc7bc6b6e13526f87c0f3" kindref="member">atomic_ptr_clear</ref>(<ref refid="atomic_8h_1acad6866fa4c844026cd9f8c3fb60ecd7" kindref="member">atomic_ptr_t</ref><sp/>*<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="atomic__c_8h_1a3a57fd7f76f84e0f5800878b8f81fc35" kindref="member">atomic_ptr_set</ref>(<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="atomic__c_8h_1a1564a44a260e7d0d02e30ae045a99764" refkind="member"><highlight class="normal">__syscall<sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/><ref refid="atomic__c_8h_1a1564a44a260e7d0d02e30ae045a99764" kindref="member">atomic_or</ref>(<ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/>*<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>,<sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="atomic__c_8h_1a18592bcf38d667fb9b428f81ea691bd4" refkind="member"><highlight class="normal">__syscall<sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/><ref refid="atomic__c_8h_1a18592bcf38d667fb9b428f81ea691bd4" kindref="member">atomic_xor</ref>(<ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/>*<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>,<sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="atomic__c_8h_1a4bc1f6a6f5d98eef742b4541d235811d" refkind="member"><highlight class="normal">__syscall<sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/><ref refid="atomic__c_8h_1a4bc1f6a6f5d98eef742b4541d235811d" kindref="member">atomic_and</ref>(<ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/>*<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>,<sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="atomic__c_8h_1a3e954286e40de73e45598a00a0a2b864" refkind="member"><highlight class="normal">__syscall<sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/><ref refid="atomic__c_8h_1a3e954286e40de73e45598a00a0a2b864" kindref="member">atomic_nand</ref>(<ref refid="atomic_8h_1a124f07c3a788e53c3a40e4e1c06d8af8" kindref="member">atomic_t</ref><sp/>*<ref refid="sched_2preempt_2src_2main_8c_1ae8aa5cb4faa95420993aad5d4f2e839f" kindref="member">target</ref>,<sp/><ref refid="atomic_8h_1a2df48927d9883550372b6e209b1997b1" kindref="member">atomic_val_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_ATOMIC_OPERATIONS_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;syscalls/atomic_c.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_SYS_ATOMIC_C_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/sys/atomic_c.h"/>
  </compounddef>
</doxygen>
