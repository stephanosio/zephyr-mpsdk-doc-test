<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structcrypto__driver__api" kind="struct" language="C++" prot="public">
    <compoundname>crypto_driver_api</compoundname>
    <includes refid="crypto_2crypto_8h" local="no">crypto.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structcrypto__driver__api_1a19859cdd9185f5d333fe6893efc27967" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* crypto_driver_api::query_hw_caps) (const struct device *dev)</definition>
        <argsstring>)(const struct device *dev)</argsstring>
        <name>query_hw_caps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/crypto.h" line="66" column="1" bodyfile="include/crypto/crypto.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcrypto__driver__api_1af2ddc3aa1447dbef500715e1ea4dd780" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* crypto_driver_api::cipher_begin_session) (const struct device *dev, struct cipher_ctx *ctx, enum cipher_algo algo, enum cipher_mode mode, enum cipher_op op_type)</definition>
        <argsstring>)(const struct device *dev, struct cipher_ctx *ctx, enum cipher_algo algo, enum cipher_mode mode, enum cipher_op op_type)</argsstring>
        <name>cipher_begin_session</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/crypto.h" line="69" column="1" bodyfile="include/crypto/crypto.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcrypto__driver__api_1a77f9e6ab2b527c4433ddf5cbcf6b8dca" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* crypto_driver_api::cipher_free_session) (const struct device *dev, struct cipher_ctx *ctx)</definition>
        <argsstring>)(const struct device *dev, struct cipher_ctx *ctx)</argsstring>
        <name>cipher_free_session</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/crypto.h" line="74" column="1" bodyfile="include/crypto/crypto.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcrypto__driver__api_1a2c59735e94df3e8740611937c6ed1c2f" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* crypto_driver_api::cipher_async_callback_set) (const struct device *dev, cipher_completion_cb cb)</definition>
        <argsstring>)(const struct device *dev, cipher_completion_cb cb)</argsstring>
        <name>cipher_async_callback_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/crypto.h" line="77" column="1" bodyfile="include/crypto/crypto.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcrypto__driver__api_1a48845d14ff94ff16633227d10f971f57" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* crypto_driver_api::hash_begin_session) (const struct device *dev, struct hash_ctx *ctx, enum hash_algo algo)</definition>
        <argsstring>)(const struct device *dev, struct hash_ctx *ctx, enum hash_algo algo)</argsstring>
        <name>hash_begin_session</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/crypto.h" line="81" column="1" bodyfile="include/crypto/crypto.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcrypto__driver__api_1aa3033ec374a10abd180af38f6fdc080b" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* crypto_driver_api::hash_free_session) (const struct device *dev, struct hash_ctx *ctx)</definition>
        <argsstring>)(const struct device *dev, struct hash_ctx *ctx)</argsstring>
        <name>hash_free_session</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/crypto.h" line="84" column="1" bodyfile="include/crypto/crypto.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcrypto__driver__api_1a87d5891e9ce4a76ed50c7591ae7a27ff" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* crypto_driver_api::hash_async_callback_set) (const struct device *dev, hash_completion_cb cb)</definition>
        <argsstring>)(const struct device *dev, hash_completion_cb cb)</argsstring>
        <name>hash_async_callback_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/crypto/crypto.h" line="86" column="1" bodyfile="include/crypto/crypto.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Crypto driver API definition. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/crypto/crypto.h" line="65" column="12" bodyfile="include/crypto/crypto.h" bodystart="65" bodyend="88"/>
    <listofallmembers>
      <member refid="structcrypto__driver__api_1a2c59735e94df3e8740611937c6ed1c2f" prot="public" virt="non-virtual"><scope>crypto_driver_api</scope><name>cipher_async_callback_set</name></member>
      <member refid="structcrypto__driver__api_1af2ddc3aa1447dbef500715e1ea4dd780" prot="public" virt="non-virtual"><scope>crypto_driver_api</scope><name>cipher_begin_session</name></member>
      <member refid="structcrypto__driver__api_1a77f9e6ab2b527c4433ddf5cbcf6b8dca" prot="public" virt="non-virtual"><scope>crypto_driver_api</scope><name>cipher_free_session</name></member>
      <member refid="structcrypto__driver__api_1a87d5891e9ce4a76ed50c7591ae7a27ff" prot="public" virt="non-virtual"><scope>crypto_driver_api</scope><name>hash_async_callback_set</name></member>
      <member refid="structcrypto__driver__api_1a48845d14ff94ff16633227d10f971f57" prot="public" virt="non-virtual"><scope>crypto_driver_api</scope><name>hash_begin_session</name></member>
      <member refid="structcrypto__driver__api_1aa3033ec374a10abd180af38f6fdc080b" prot="public" virt="non-virtual"><scope>crypto_driver_api</scope><name>hash_free_session</name></member>
      <member refid="structcrypto__driver__api_1a19859cdd9185f5d333fe6893efc27967" prot="public" virt="non-virtual"><scope>crypto_driver_api</scope><name>query_hw_caps</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
