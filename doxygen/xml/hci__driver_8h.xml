<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="hci__driver_8h" kind="file" language="C++">
    <compoundname>hci_driver.h</compoundname>
    <includes refid="stdbool_8h" local="no">stdbool.h</includes>
    <includes refid="net_2buf_8h" local="no">net/buf.h</includes>
    <includes refid="bluetooth_2buf_8h" local="no">bluetooth/buf.h</includes>
    <includes refid="hci__vs_8h" local="no">bluetooth/hci_vs.h</includes>
    <includes local="no">device.h</includes>
    <incdepgraph>
      <node id="16">
        <label>bluetooth/addr.h</label>
        <link refid="addr_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>bluetooth/bluetooth.h</label>
        <link refid="bluetooth_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>bluetooth/buf.h</label>
        <link refid="bluetooth_2buf_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>bluetooth/conn.h</label>
        <link refid="conn_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>bluetooth/crypto.h</label>
        <link refid="crypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>bluetooth/direction.h</label>
        <link refid="direction_8h"/>
      </node>
      <node id="23">
        <label>bluetooth/gap.h</label>
        <link refid="gap_8h"/>
      </node>
      <node id="13">
        <label>bluetooth/hci.h</label>
        <link refid="hci_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>bluetooth/hci_err.h</label>
        <link refid="hci__err_8h"/>
      </node>
      <node id="26">
        <label>bluetooth/hci_vs.h</label>
        <link refid="hci__vs_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/drivers/bluetooth/hci_driver.h</label>
        <link refid="hci__driver_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>net/buf.h</label>
        <link refid="net_2buf_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="8">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="5">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="6">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="15">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>device.h</label>
      </node>
      <node id="18">
        <label>stdarg.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="11">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structbt__hci__driver" prot="public">bt_hci_driver</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__hci__driver_1ga011e658a6ae4f947412b294cf423178f" prot="public" static="no">
        <name>IS_BT_QUIRK_NO_AUTO_DLE</name>
        <param><defname>bt_dev</defname></param>
        <initializer>((bt_dev)-&gt;drv-&gt;quirks &amp; <ref refid="group__bt__hci__driver_1gga29d44341ce767c5dfc737d622fc97ba1a7b8e6d2f5604015c92c623193b9fe1e4" kindref="member">BT_QUIRK_NO_AUTO_DLE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="40" column="9" bodyfile="include/drivers/bluetooth/hci_driver.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__hci__driver_1gaa7a28bc6e6a79128d3a95c3ccd3b1866" prot="public" static="no">
        <name>BT_HCI_EVT_FLAG_RECV_PRIO</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="43" column="9" bodyfile="include/drivers/bluetooth/hci_driver.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__hci__driver_1ga61e4e2d22dec695f53f5aed6ce809859" prot="public" static="no">
        <name>BT_HCI_EVT_FLAG_RECV</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="45" column="9" bodyfile="include/drivers/bluetooth/hci_driver.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__bt__hci__driver_1ga29d44341ce767c5dfc737d622fc97ba1" prot="public" static="no" strong="no">
        <type></type>
        <name>@109</name>
        <enumvalue id="group__bt__hci__driver_1gga29d44341ce767c5dfc737d622fc97ba1a18274691e4c0129f945e88304778a241" prot="public">
          <name>BT_QUIRK_NO_RESET</name>
          <initializer>= BIT(0)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__hci__driver_1gga29d44341ce767c5dfc737d622fc97ba1a7b8e6d2f5604015c92c623193b9fe1e4" prot="public">
          <name>BT_QUIRK_NO_AUTO_DLE</name>
          <initializer>= BIT(1)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="30" column="1" bodyfile="include/drivers/bluetooth/hci_driver.h" bodystart="30" bodyend="38"/>
      </memberdef>
      <memberdef kind="enum" id="group__bt__hci__driver_1gaa24c7d2d9e2c35d6cd9cfcf650fb65ef" prot="public" static="no" strong="no">
        <type></type>
        <name>bt_hci_driver_bus</name>
        <enumvalue id="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa885401f44dae9e39caf4a4838b547db9" prot="public">
          <name>BT_HCI_DRIVER_BUS_VIRTUAL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efac2b08e3e52f795deabffd3638a421b68" prot="public">
          <name>BT_HCI_DRIVER_BUS_USB</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa08bc821327d571bf9659eda7e06a5129" prot="public">
          <name>BT_HCI_DRIVER_BUS_PCCARD</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa39c5fca0c61c99db6541d01fb55e41f4" prot="public">
          <name>BT_HCI_DRIVER_BUS_UART</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa5790e933f10773e30da6c7b922a443fa" prot="public">
          <name>BT_HCI_DRIVER_BUS_RS232</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efab4c130c7862cbbd6be7827b6462dab90" prot="public">
          <name>BT_HCI_DRIVER_BUS_PCI</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efab572fbb186634bc08a3bce457cf38c74" prot="public">
          <name>BT_HCI_DRIVER_BUS_SDIO</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa49f2ba9eeaafa266d905a30b2caf015a" prot="public">
          <name>BT_HCI_DRIVER_BUS_SPI</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa0d8c310b05d2c982e8de720dbdc2d742" prot="public">
          <name>BT_HCI_DRIVER_BUS_I2C</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa8473c5abdf2f5839c9df54fc00ee3800" prot="public">
          <name>BT_HCI_DRIVER_BUS_IPM</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Possible values for the &apos;bus&apos; member of the <ref refid="structbt__hci__driver" kindref="compound">bt_hci_driver</ref> struct </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="127" column="1" bodyfile="include/drivers/bluetooth/hci_driver.h" bodystart="127" bodyend="138"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__hci__driver_1ga1f1b10f6d84f4a5cf4b895b6685874ef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>static uint8_t bt_hci_evt_get_flags</definition>
        <argsstring>(uint8_t evt)</argsstring>
        <name>bt_hci_evt_get_flags</name>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>evt</declname>
        </param>
        <briefdescription>
<para>Get HCI event flags. </para>
        </briefdescription>
        <detaileddescription>
<para>Helper for the HCI driver to get HCI event flags that describes rules that. must be followed.</para>
<para>When CONFIG_BT_RECV_IS_RX_THREAD is enabled the flags BT_HCI_EVT_FLAG_RECV and BT_HCI_EVT_FLAG_RECV_PRIO indicates if the event should be given to bt_recv or bt_recv_prio.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>evt</parametername>
</parameternamelist>
<parameterdescription>
<para>HCI event code.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HCI event flags for the specified event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="60" column="23" bodyfile="include/drivers/bluetooth/hci_driver.h" bodystart="60" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__hci__driver_1gaca80bc9dacc4fa44416bd545bd185ef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_recv</definition>
        <argsstring>(struct net_buf *buf)</argsstring>
        <name>bt_recv</name>
        <param>
          <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Receive data from the controller/HCI driver. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the main function through which the HCI driver provides the host with data from the controller. The buffer needs to have its type set with the help of <ref refid="group__bt__buf_1gaec645aec3d6fb845f214c07f2a864fec" kindref="member">bt_buf_set_type()</ref> before calling this API.</para>
<para>When CONFIG_BT_RECV_IS_RX_THREAD is defined then this API should not be used for so-called high priority HCI events, which should instead be delivered to the host stack through <ref refid="group__bt__hci__driver_1ga19c61df1660d6049ae6b03afe3554fee" kindref="member">bt_recv_prio()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Network buffer containing data from the controller.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or negative error number on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="96" column="5" declfile="include/drivers/bluetooth/hci_driver.h" declline="96" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__hci__driver_1ga19c61df1660d6049ae6b03afe3554fee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_recv_prio</definition>
        <argsstring>(struct net_buf *buf)</argsstring>
        <name>bt_recv_prio</name>
        <param>
          <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Receive high priority data from the controller/HCI driver. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the same as <ref refid="group__bt__hci__driver_1gaca80bc9dacc4fa44416bd545bd185ef7" kindref="member">bt_recv()</ref>, except that it should be used for so-called high priority HCI events. There&apos;s a separate <ref refid="group__bt__hci__driver_1ga1f1b10f6d84f4a5cf4b895b6685874ef" kindref="member">bt_hci_evt_get_flags()</ref> helper that can be used to identify which events have the BT_HCI_EVT_FLAG_RECV_PRIO flag set.</para>
<para>As with <ref refid="group__bt__hci__driver_1gaca80bc9dacc4fa44416bd545bd185ef7" kindref="member">bt_recv()</ref>, the buffer needs to have its type set with the help of <ref refid="group__bt__buf_1gaec645aec3d6fb845f214c07f2a864fec" kindref="member">bt_buf_set_type()</ref> before calling this API. The only exception is so called high priority HCI events which should be delivered to the host stack through <ref refid="group__bt__hci__driver_1ga19c61df1660d6049ae6b03afe3554fee" kindref="member">bt_recv_prio()</ref> instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Network buffer containing data from the controller.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or negative error number on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="115" column="5" declfile="include/drivers/bluetooth/hci_driver.h" declline="115" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__hci__driver_1ga502a6580da2e06f24f021c7bc4bff50f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_read_static_addr</definition>
        <argsstring>(struct bt_hci_vs_static_addr addrs[], uint8_t size)</argsstring>
        <name>bt_read_static_addr</name>
        <param>
          <type>struct <ref refid="structbt__hci__vs__static__addr" kindref="compound">bt_hci_vs_static_addr</ref></type>
          <declname>addrs</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Read static addresses from the controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>addrs</parametername>
</parameternamelist>
<parameterdescription>
<para>Random static address and Identity Root (IR) array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of array.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of addresses read. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="124" column="9" declfile="include/drivers/bluetooth/hci_driver.h" declline="124" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__hci__driver_1ga642d226772448dccbd14f2c287d687f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_hci_driver_register</definition>
        <argsstring>(const struct bt_hci_driver *drv)</argsstring>
        <name>bt_hci_driver_register</name>
        <param>
          <type>const struct <ref refid="structbt__hci__driver" kindref="compound">bt_hci_driver</ref> *</type>
          <declname>drv</declname>
        </param>
        <briefdescription>
<para>Register a new HCI driver to the Bluetooth stack. </para>
        </briefdescription>
        <detaileddescription>
<para>This needs to be called before any application code runs. The <ref refid="group__bt__gap_1gac45d16bfe21c3c38e834c293e5ebc42b" kindref="member">bt_enable()</ref> API will fail if there is no driver registered.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>drv</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="structbt__hci__driver" kindref="compound">bt_hci_driver</ref> struct representing the driver.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or negative error number on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="215" column="5" declfile="include/drivers/bluetooth/hci_driver.h" declline="215" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__hci__driver_1gadd813c1343955a7bb95135eb0fbe9cd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_hci_transport_setup</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>bt_hci_transport_setup</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Setup the HCI transport, which usually means to reset the Bluetooth IC. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>A weak version of this function is included in the H4 driver, so defining it is optional per board.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>The device structure for the bus connecting to the IC</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative error value on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="228" column="5" declfile="include/drivers/bluetooth/hci_driver.h" declline="228" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__hci__driver_1ga362df79e2f782159f7e85d63817421bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
        <definition>struct net_buf * bt_hci_evt_create</definition>
        <argsstring>(uint8_t evt, uint8_t len)</argsstring>
        <name>bt_hci_evt_create</name>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>evt</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate an HCI event buffer.</para>
<para>This function allocates a new buffer for an HCI event. It is given the avent code and the total length of the parameters. Upon successful return the buffer is ready to have the parameters encoded into it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>evt</parametername>
</parameternamelist>
<parameterdescription>
<para>Event OpCode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of event parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Newly allocated buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="241" column="14" declfile="include/drivers/bluetooth/hci_driver.h" declline="241" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__hci__driver_1ga8ab7dc7d38f3bc7be72e34d7a9f14212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
        <definition>struct net_buf * bt_hci_cmd_complete_create</definition>
        <argsstring>(uint16_t op, uint8_t plen)</argsstring>
        <name>bt_hci_cmd_complete_create</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>plen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate an HCI Command Complete event buffer.</para>
<para>This function allocates a new buffer for HCI Command Complete event. It is given the OpCode (encoded e.g. using the BT_OP macro) and the total length of the parameters. Upon successful return the buffer is ready to have the parameters encoded into it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>Command OpCode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of command parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Newly allocated buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="255" column="14" declfile="include/drivers/bluetooth/hci_driver.h" declline="255" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__hci__driver_1gab6b790e6dd0e8251d6cf10b0a7cce5f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
        <definition>struct net_buf * bt_hci_cmd_status_create</definition>
        <argsstring>(uint16_t op, uint8_t status)</argsstring>
        <name>bt_hci_cmd_status_create</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate an HCI Command Status event buffer.</para>
<para>This function allocates a new buffer for HCI Command Status event. It is given the OpCode (encoded e.g. using the BT_OP macro) and the status code. Upon successful return the buffer is ready to have the parameters encoded into it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>Command OpCode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Status code.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Newly allocated buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="269" column="14" declfile="include/drivers/bluetooth/hci_driver.h" declline="269" declcolumn="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Bluetooth HCI driver API. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_DRIVERS_BLUETOOTH_HCI_DRIVER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_DRIVERS_BLUETOOTH_HCI_DRIVER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdbool_8h" kindref="compound">stdbool.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net_2buf_8h" kindref="compound">net/buf.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="bluetooth_2buf_8h" kindref="compound">bluetooth/buf.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="hci__vs_8h" kindref="compound">bluetooth/hci_vs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;device.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>host<sp/>should<sp/>never<sp/>send<sp/>HCI_Reset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="group__bt__hci__driver_1gga29d44341ce767c5dfc737d622fc97ba1a18274691e4c0129f945e88304778a241" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__hci__driver_1gga29d44341ce767c5dfc737d622fc97ba1a18274691e4c0129f945e88304778a241" kindref="member">BT_QUIRK_NO_RESET</ref><sp/>=<sp/><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(0),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>controller<sp/>does<sp/>not<sp/>auto-initiate<sp/>a<sp/>DLE<sp/>procedure<sp/>when<sp/>the</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>initial<sp/>connection<sp/>data<sp/>length<sp/>parameters<sp/>are<sp/>not<sp/>equal<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>default<sp/>data<sp/>length<sp/>parameters.<sp/>Therefore<sp/>the<sp/>host<sp/>should<sp/>initiate</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>DLE<sp/>procedure<sp/>after<sp/>connection<sp/>establishment.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="group__bt__hci__driver_1gga29d44341ce767c5dfc737d622fc97ba1a7b8e6d2f5604015c92c623193b9fe1e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__hci__driver_1gga29d44341ce767c5dfc737d622fc97ba1a7b8e6d2f5604015c92c623193b9fe1e4" kindref="member">BT_QUIRK_NO_AUTO_DLE</ref><sp/>=<sp/><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(1),</highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="group__bt__hci__driver_1ga011e658a6ae4f947412b294cf423178f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_BT_QUIRK_NO_AUTO_DLE(bt_dev)<sp/>((bt_dev)-&gt;drv-&gt;quirks<sp/>&amp;<sp/>BT_QUIRK_NO_AUTO_DLE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>The<sp/>HCI<sp/>event<sp/>shall<sp/>be<sp/>given<sp/>to<sp/>bt_recv_prio<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="group__bt__hci__driver_1gaa7a28bc6e6a79128d3a95c3ccd3b1866" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_HCI_EVT_FLAG_RECV_PRIO<sp/>BIT(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/><sp/>The<sp/>HCI<sp/>event<sp/>shall<sp/>be<sp/>given<sp/>to<sp/>bt_recv.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="group__bt__hci__driver_1ga61e4e2d22dec695f53f5aed6ce809859" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_HCI_EVT_FLAG_RECV<sp/><sp/><sp/><sp/><sp/><sp/>BIT(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="group__bt__hci__driver_1ga1f1b10f6d84f4a5cf4b895b6685874ef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__bt__hci__driver_1ga1f1b10f6d84f4a5cf4b895b6685874ef" kindref="member">bt_hci_evt_get_flags</ref>(<ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>evt)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(evt)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="hci_8h_1a32e5051a114f8987b49c6957c84d60e2" kindref="member">BT_HCI_EVT_DISCONN_COMPLETE</ref>:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bt__hci__driver_1ga61e4e2d22dec695f53f5aed6ce809859" kindref="member">BT_HCI_EVT_FLAG_RECV</ref><sp/>|<sp/><ref refid="group__bt__hci__driver_1gaa7a28bc6e6a79128d3a95c3ccd3b1866" kindref="member">BT_HCI_EVT_FLAG_RECV_PRIO</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fallthrough<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_BT_CONN)<sp/>||<sp/>defined(CONFIG_BT_ISO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="hci_8h_1a883433c60959629a013d34cea21ab88f" kindref="member">BT_HCI_EVT_NUM_COMPLETED_PACKETS</ref>:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_BT_CONN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="hci_8h_1ae747b016101bc9e9614163288c5c0d15" kindref="member">BT_HCI_EVT_DATA_BUF_OVERFLOW</ref>:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__fallthrough;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(CONFIG_BT_CONN)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_BT_CONN<sp/>||<sp/><sp/>CONFIG_BT_ISO<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="hci_8h_1a06f6cf60885ac051cdc9b463fc3b7de7" kindref="member">BT_HCI_EVT_CMD_COMPLETE</ref>:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="hci_8h_1a2b35e7484351228243bb3564273c5bff" kindref="member">BT_HCI_EVT_CMD_STATUS</ref>:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bt__hci__driver_1gaa7a28bc6e6a79128d3a95c3ccd3b1866" kindref="member">BT_HCI_EVT_FLAG_RECV_PRIO</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bt__hci__driver_1ga61e4e2d22dec695f53f5aed6ce809859" kindref="member">BT_HCI_EVT_FLAG_RECV</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="group__bt__hci__driver_1gaca80bc9dacc4fa44416bd545bd185ef7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__hci__driver_1gaca80bc9dacc4fa44416bd545bd185ef7" kindref="member">bt_recv</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*buf);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="group__bt__hci__driver_1ga19c61df1660d6049ae6b03afe3554fee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__hci__driver_1ga19c61df1660d6049ae6b03afe3554fee" kindref="member">bt_recv_prio</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*buf);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="group__bt__hci__driver_1ga502a6580da2e06f24f021c7bc4bff50f" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__bt__hci__driver_1ga502a6580da2e06f24f021c7bc4bff50f" kindref="member">bt_read_static_addr</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__hci__vs__static__addr" kindref="compound">bt_hci_vs_static_addr</ref><sp/>addrs[],<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>size);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="group__bt__hci__driver_1gaa24c7d2d9e2c35d6cd9cfcf650fb65ef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__hci__driver_1gaa24c7d2d9e2c35d6cd9cfcf650fb65ef" kindref="member">bt_hci_driver_bus</ref><sp/>{</highlight></codeline>
<codeline lineno="128" refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa885401f44dae9e39caf4a4838b547db9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa885401f44dae9e39caf4a4838b547db9" kindref="member">BT_HCI_DRIVER_BUS_VIRTUAL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="129" refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efac2b08e3e52f795deabffd3638a421b68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efac2b08e3e52f795deabffd3638a421b68" kindref="member">BT_HCI_DRIVER_BUS_USB</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="130" refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa08bc821327d571bf9659eda7e06a5129" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa08bc821327d571bf9659eda7e06a5129" kindref="member">BT_HCI_DRIVER_BUS_PCCARD</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="131" refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa39c5fca0c61c99db6541d01fb55e41f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa39c5fca0c61c99db6541d01fb55e41f4" kindref="member">BT_HCI_DRIVER_BUS_UART</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="132" refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa5790e933f10773e30da6c7b922a443fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa5790e933f10773e30da6c7b922a443fa" kindref="member">BT_HCI_DRIVER_BUS_RS232</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="133" refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efab4c130c7862cbbd6be7827b6462dab90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efab4c130c7862cbbd6be7827b6462dab90" kindref="member">BT_HCI_DRIVER_BUS_PCI</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="134" refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efab572fbb186634bc08a3bce457cf38c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efab572fbb186634bc08a3bce457cf38c74" kindref="member">BT_HCI_DRIVER_BUS_SDIO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="135" refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa49f2ba9eeaafa266d905a30b2caf015a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa49f2ba9eeaafa266d905a30b2caf015a" kindref="member">BT_HCI_DRIVER_BUS_SPI</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="136" refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa0d8c310b05d2c982e8de720dbdc2d742" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa0d8c310b05d2c982e8de720dbdc2d742" kindref="member">BT_HCI_DRIVER_BUS_I2C</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="137" refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa8473c5abdf2f5839c9df54fc00ee3800" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__hci__driver_1ggaa24c7d2d9e2c35d6cd9cfcf650fb65efa8473c5abdf2f5839c9df54fc00ee3800" kindref="member">BT_HCI_DRIVER_BUS_IPM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="structbt__hci__driver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__hci__driver" kindref="compound">bt_hci_driver</ref><sp/>{</highlight></codeline>
<codeline lineno="148" refid="structbt__hci__driver_1a4036d2609565058a46b1a677fc7ec93e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbt__hci__driver_1a4036d2609565058a46b1a677fc7ec93e" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="structbt__hci__driver_1acd9a4d631da22b4638afd4593cff7d0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__hci__driver_1gaa24c7d2d9e2c35d6cd9cfcf650fb65ef" kindref="member">bt_hci_driver_bus</ref><sp/><ref refid="structbt__hci__driver_1acd9a4d631da22b4638afd4593cff7d0c" kindref="member">bus</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="structbt__hci__driver_1a0dd8d706ee7ded476a90b19a946226b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structbt__hci__driver_1a0dd8d706ee7ded476a90b19a946226b8" kindref="member">quirks</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="structbt__hci__driver_1aabacc7c98a08a8a53f6aca436fac87d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structbt__hci__driver_1aabacc7c98a08a8a53f6aca436fac87d0" kindref="member">open</ref>)(void);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="structbt__hci__driver_1abcfc79474fc44aae260d61ff99fdb666" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structbt__hci__driver_1abcfc79474fc44aae260d61ff99fdb666" kindref="member">send</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*buf);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_BT_HCI_SETUP)<sp/>||<sp/>defined(__DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="structbt__hci__driver_1a4384d5fde7a507fe54c738ade529020d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structbt__hci__driver_1a4384d5fde7a507fe54c738ade529020d" kindref="member">setup</ref>)(void);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(CONFIG_BT_HCI_SETUP)<sp/>||<sp/>defined(__DOXYGEN__)*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="group__bt__hci__driver_1ga642d226772448dccbd14f2c287d687f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__hci__driver_1ga642d226772448dccbd14f2c287d687f0" kindref="member">bt_hci_driver_register</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__hci__driver" kindref="compound">bt_hci_driver</ref><sp/>*drv);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="group__bt__hci__driver_1gadd813c1343955a7bb95135eb0fbe9cd5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__hci__driver_1gadd813c1343955a7bb95135eb0fbe9cd5" kindref="member">bt_hci_transport_setup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="group__bt__hci__driver_1ga362df79e2f782159f7e85d63817421bb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*<ref refid="group__bt__hci__driver_1ga362df79e2f782159f7e85d63817421bb" kindref="member">bt_hci_evt_create</ref>(<ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>evt,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structnet__buf_1ae75b7ca728fb7440ea483be8bf88bc38" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="group__bt__hci__driver_1ga8ab7dc7d38f3bc7be72e34d7a9f14212" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*<ref refid="group__bt__hci__driver_1ga8ab7dc7d38f3bc7be72e34d7a9f14212" kindref="member">bt_hci_cmd_complete_create</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>op,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>plen);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="group__bt__hci__driver_1gab6b790e6dd0e8251d6cf10b0a7cce5f7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*<ref refid="group__bt__hci__driver_1gab6b790e6dd0e8251d6cf10b0a7cce5f7" kindref="member">bt_hci_cmd_status_create</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>op,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>status);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_DRIVERS_BLUETOOTH_HCI_DRIVER_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/drivers/bluetooth/hci_driver.h"/>
  </compounddef>
</doxygen>
