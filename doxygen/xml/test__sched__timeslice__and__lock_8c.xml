<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="test__sched__timeslice__and__lock_8c" kind="file" language="C++">
    <compoundname>test_sched_timeslice_and_lock.c</compoundname>
    <includes refid="test__sched_8h" local="yes">test_sched.h</includes>
    <incdepgraph>
      <node id="18">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="67">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="66">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="30">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="37">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="39">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="35">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="33">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="41">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="42">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="38">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="36">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="40">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="76">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="46">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="52">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="29">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="43">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="24">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="6">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="20">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="87">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="88">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="14">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="10">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="12">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="65">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="89">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="82">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="4">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="16">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>test_sched.h</label>
        <link refid="test__sched_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c</label>
        <link refid="test__sched__timeslice__and__lock_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>alloca.h</label>
      </node>
      <node id="69">
        <label>arch/cpu.h</label>
      </node>
      <node id="32">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="31">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="44">
        <label>kernel.h</label>
      </node>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="85">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="90">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="91">
        <label>tc_util.h</label>
      </node>
      <node id="3">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="test__sched__timeslice__and__lock_8c_1a51e2e876217651c49f5dda708e3c54f3" prot="public" static="no">
        <name>THREADS_NUM</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="8" column="10" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__sched__timeslice__and__lock_8c_1aa312b7c3e9d9981fb0d98cc4428f17bf" prot="public" static="no">
        <name>DURATION</name>
        <initializer><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="9" column="9" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structthread__data" kindref="compound">thread_data</ref></type>
        <definition>struct thread_data tdata[3]</definition>
        <argsstring>[3]</argsstring>
        <name>tdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="13" column="25" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__sched__timeslice__and__lock_8c_1a80a47f4bd0ce762c701acace8207e2d8" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread tthread[3]</definition>
        <argsstring>[3]</argsstring>
        <name>tthread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="14" column="22" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__sched__timeslice__and__lock_8c_1a53a6460ab46277db22e6847e69c6a8a6" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int old_prio</definition>
        <argsstring></argsstring>
        <name>old_prio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="15" column="12" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__sched__timeslice__and__lock_8c_1aeb42338ae4548ede7fc2a53704df7882" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int init_prio</definition>
        <argsstring></argsstring>
        <name>init_prio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="15" column="21" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread t</definition>
        <argsstring></argsstring>
        <name>t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="17" column="15" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__sched__timeslice__and__lock_8c_1a4ced20aea8a1e880c43f684a920b85da" prot="public" static="no" mutable="no">
        <type>struct k_timer</type>
        <definition>struct k_timer timer</definition>
        <argsstring></argsstring>
        <name>timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="21" column="14" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int executed</definition>
        <argsstring></argsstring>
        <name>executed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="189" column="12" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="189" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__sched__timeslice__and__lock_8c_1a2012a37dc597afff432e24c02cd67056" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_SEM_DEFINE</definition>
        <argsstring>(pend_sema, 0, 1)</argsstring>
        <name>K_SEM_DEFINE</name>
        <param>
          <type>pend_sema</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="19" column="1" declfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" declline="19" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="test__sched__timeslice__and__lock_8c_1afbc781db8a6fdb7bf8ea18274c4c997e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_SEM_DEFINE</definition>
        <argsstring>(timer_sema, 0, 1)</argsstring>
        <name>K_SEM_DEFINE</name>
        <param>
          <type>timer_sema</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="20" column="1" declfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" declline="20" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="test__sched__timeslice__and__lock_8c_1ac8d72017cdde7fad33f88bae68426254" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void thread_entry</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>thread_entry</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="23" column="13" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="23" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="test__sched__timeslice__and__lock_8c_1a2fd6b5bff3b45dec3319f40e73b6a075" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void setup_threads</definition>
        <argsstring>(void)</argsstring>
        <name>setup_threads</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="36" column="13" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="36" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="test__sched__timeslice__and__lock_8c_1a67473a14b2a635c07447509433854d87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void spawn_threads</definition>
        <argsstring>(int sleep_sec)</argsstring>
        <name>spawn_threads</name>
        <param>
          <type>int</type>
          <declname>sleep_sec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="55" column="13" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="55" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="test__sched__timeslice__and__lock_8c_1a44b7f6537cda263d48701ed3aa4804c6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void teardown_threads</definition>
        <argsstring>(void)</argsstring>
        <name>teardown_threads</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="67" column="13" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="67" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="test__sched__timeslice__and__lock_8c_1a71b0db5d9a0f6f15dec62dcc5fcc550f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void timer_handler</definition>
        <argsstring>(struct k_timer *timer)</argsstring>
        <name>timer_handler</name>
        <param>
          <type>struct k_timer *</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="75" column="13" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="test__sched__timeslice__and__lock_8c_1a612737c5da9ece42b7145f41ef631e81" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void thread_handler</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>thread_handler</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="81" column="13" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="81" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__sched__tests_1ga224c79245d2b7fff8648fa4d94b75c46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_yield_cooperative</definition>
        <argsstring>(void)</argsstring>
        <name>test_yield_cooperative</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Validate the behavior of cooperative thread when it yields. </para>
        </briefdescription>
        <detaileddescription>
<para>Create 3 threads of priority -2, -1 and 0. Yield the main thread which is cooperative. Check if all the threads gets executed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="99" column="6" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="99" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__sched__tests_1ga0035834d2e4db3813ad4e8183e65fe32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sleep_cooperative</definition>
        <argsstring>(void)</argsstring>
        <name>test_sleep_cooperative</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Validate the behavior of cooperative thread when it sleeps. </para>
        </briefdescription>
        <detaileddescription>
<para>Create 3 threads of priority -2, -1 and 0. Put the main thread in timeout queue by calling <ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep()</ref> which is cooperative. Check if all the threads gets executed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="126" column="6" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="126" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="test__sched__timeslice__and__lock_8c_1a44baee856381f7b386368889abad43b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_busy_wait_cooperative</definition>
        <argsstring>(void)</argsstring>
        <name>test_busy_wait_cooperative</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="143" column="6" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="143" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__sched__tests_1ga2154e8dce668a294824c0a13edfc3739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sleep_wakeup_preemptible</definition>
        <argsstring>(void)</argsstring>
        <name>test_sleep_wakeup_preemptible</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Validate <ref refid="group__thread__apis_1ga9275a019c8ff3c7fe49a81f8c078157e" kindref="member">k_wakeup()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Create 3 threads with main thread with priority 0 and other threads with -1, 0 ,+1 priority. Now -1 priority thread gets executed and it is made to sleep for 10 sec. Now, wake up the -1 priority thread and check if it starts executing.</para>
<para><simplesect kind="see"><para><ref refid="group__thread__apis_1ga9275a019c8ff3c7fe49a81f8c078157e" kindref="member">k_wakeup()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="172" column="6" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="172" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="test__sched__timeslice__and__lock_8c_1afe51315330007115f788ae78c84c2b7a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void coop_thread</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>coop_thread</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="190" column="13" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="190" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__sched__tests_1gaf7dddee86d5a24ec7f8db1b0381c8970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pending_thread_wakeup</definition>
        <argsstring>(void)</argsstring>
        <name>test_pending_thread_wakeup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Verify <ref refid="group__thread__apis_1ga9275a019c8ff3c7fe49a81f8c078157e" kindref="member">k_wakeup()</ref> behavior on pending thread. </para>
        </briefdescription>
        <detaileddescription>
<para>The test creates a cooperative thread and let it wait for semaphore. Then calls <ref refid="group__thread__apis_1ga9275a019c8ff3c7fe49a81f8c078157e" kindref="member">k_wakeup()</ref>. The <ref refid="group__thread__apis_1ga9275a019c8ff3c7fe49a81f8c078157e" kindref="member">k_wakeup()</ref> call should return gracefully without waking up the thread</para>
<para><simplesect kind="see"><para><ref refid="group__thread__apis_1ga9275a019c8ff3c7fe49a81f8c078157e" kindref="member">k_wakeup()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="207" column="6" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="207" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__sched__tests_1ga29c073bdfd6c751628afe7ba9eda7502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_time_slicing_preemptible</definition>
        <argsstring>(void)</argsstring>
        <name>test_time_slicing_preemptible</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Validate preemptive thread behavior with time slice. </para>
        </briefdescription>
        <detaileddescription>
<para>Create 3 threads with -1, 0, and 1 as priority, setup time slice for threads with priority 0. Make sure the threads with equal priorities are executed in time slice. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="242" column="6" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="242" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__sched__tests_1gabb7c9c0f75ed7b62f3e03a4e267e65f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_time_slicing_disable_preemptible</definition>
        <argsstring>(void)</argsstring>
        <name>test_time_slicing_disable_preemptible</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check the behavior of preemptive thread with <ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Create 3 threads with -1, 0, and 1 as priority, setup time slice for threads with priority 0. Make sure the threads with equal priorities are executed in time slice. Also run <ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait()</ref> for 5 secs and check if other threads are not executed at that time.</para>
<para><simplesect kind="see"><para><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="281" column="6" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="281" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__sched__tests_1ga5747d604fdb0a85e0d45c6530058ef24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_lock_preemptible</definition>
        <argsstring>(void)</argsstring>
        <name>test_lock_preemptible</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Lock the scheduler when preemptive threads are running. </para>
        </briefdescription>
        <detaileddescription>
<para>Create 3 threads and lock the scheduler. Make sure that the threads are not executed. Call <ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep()</ref> and check if the threads have executed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="313" column="6" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="313" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__sched__tests_1ga7b6a31f45b525d56ad33131daaf8adee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_unlock_preemptible</definition>
        <argsstring>(void)</argsstring>
        <name>test_unlock_preemptible</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Validate <ref refid="group__thread__apis_1ga4f0c5d0b9f279b12a4ad97db0c116a5f" kindref="member">k_sched_lock()</ref> and <ref refid="group__thread__apis_1ga7b26f64523cc4c36522cc828ccf85580" kindref="member">k_sched_unlock()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Lock the scheduler and create 3 threads. Check that the threads are not executed. Call <ref refid="group__thread__apis_1ga7b26f64523cc4c36522cc828ccf85580" kindref="member">k_sched_unlock()</ref> and check if the threads have executed.</para>
<para><simplesect kind="see"><para><ref refid="group__thread__apis_1ga4f0c5d0b9f279b12a4ad97db0c116a5f" kindref="member">k_sched_lock()</ref>, <ref refid="group__thread__apis_1ga7b26f64523cc4c36522cc828ccf85580" kindref="member">k_sched_unlock()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="348" column="6" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="348" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__sched__tests_1ga4fcc88261fe2fb8292a5d8c059ce82ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_unlock_nested_sched_lock</definition>
        <argsstring>(void)</argsstring>
        <name>test_unlock_nested_sched_lock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Validate nested <ref refid="group__thread__apis_1ga4f0c5d0b9f279b12a4ad97db0c116a5f" kindref="member">k_sched_lock()</ref> and <ref refid="group__thread__apis_1ga7b26f64523cc4c36522cc828ccf85580" kindref="member">k_sched_unlock()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>In a preemptive thread, lock the scheduler twice and create a cooperative thread. Call <ref refid="group__thread__apis_1ga7b26f64523cc4c36522cc828ccf85580" kindref="member">k_sched_unlock()</ref> and check the cooperative thread haven&apos;t executed. Unlock it again to see the thread have executed this time.</para>
<para><simplesect kind="see"><para><ref refid="group__thread__apis_1ga4f0c5d0b9f279b12a4ad97db0c116a5f" kindref="member">k_sched_lock()</ref>, <ref refid="group__thread__apis_1ga7b26f64523cc4c36522cc828ccf85580" kindref="member">k_sched_unlock()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="385" column="6" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="385" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__sched__tests_1gab015586c36d9616495578d57be339631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_wakeup_expired_timer_thread</definition>
        <argsstring>(void)</argsstring>
        <name>test_wakeup_expired_timer_thread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>validate <ref refid="group__thread__apis_1ga9275a019c8ff3c7fe49a81f8c078157e" kindref="member">k_wakeup()</ref> in some corner scenario </para>
        </briefdescription>
        <detaileddescription>
<para>trigger a timer and after expiration of timer call <ref refid="group__thread__apis_1ga9275a019c8ff3c7fe49a81f8c078157e" kindref="member">k_wakeup()</ref>, even the thread is not in sleep state neither in pending state</para>
<para><simplesect kind="see"><para><ref refid="group__thread__apis_1ga9275a019c8ff3c7fe49a81f8c078157e" kindref="member">k_wakeup()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" line="434" column="6" bodyfile="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c" bodystart="434" bodyend="443"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="test__sched_8h" kindref="compound">test_sched.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREADS_NUM<sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DURATION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_MSEC(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">BUILD_ASSERT(<ref refid="test__sched__timeslice__and__lock_8c_1a51e2e876217651c49f5dda708e3c54f3" kindref="member">THREADS_NUM</ref><sp/>&lt;=<sp/><ref refid="test__sched_8h_1a009eccc38d82ae14211b7cbe51a879a5" kindref="member">MAX_NUM_THREAD</ref>);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structthread__data" kindref="compound">thread_data</ref><sp/><ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[<ref refid="test__sched__timeslice__and__lock_8c_1a51e2e876217651c49f5dda708e3c54f3" kindref="member">THREADS_NUM</ref>];</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a80a47f4bd0ce762c701acace8207e2d8" kindref="member">tthread</ref>[<ref refid="test__sched__timeslice__and__lock_8c_1a51e2e876217651c49f5dda708e3c54f3" kindref="member">THREADS_NUM</ref>];</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a53a6460ab46277db22e6847e69c6a8a6" kindref="member">old_prio</ref>,<sp/><ref refid="test__sched__timeslice__and__lock_8c_1aeb42338ae4548ede7fc2a53704df7882" kindref="member">init_prio</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="test__sched__timeslice__and__lock_8c_1a2012a37dc597afff432e24c02cd67056" kindref="member">K_SEM_DEFINE</ref>(pend_sema,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="test__sched__timeslice__and__lock_8c_1a2012a37dc597afff432e24c02cd67056" kindref="member">K_SEM_DEFINE</ref>(timer_sema,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_timer<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__sched__timeslice__and__lock_8c_1ac8d72017cdde7fad33f88bae68426254" kindref="member">thread_entry</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sleep_ms<sp/>=<sp/><ref refid="group__sys-util_1ga6e5ec9c46d0140315a7c1d80d1cc3c38" kindref="member">POINTER_TO_INT</ref>(p2);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sleep_ms<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(sleep_ms);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tnum<sp/>=<sp/><ref refid="group__sys-util_1ga6e5ec9c46d0140315a7c1d80d1cc3c38" kindref="member">POINTER_TO_INT</ref>(p1);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[tnum].<ref refid="structthread__data_1a235f54d704f19618551742108fe09978" kindref="member">executed</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a2fd6b5bff3b45dec3319f40e73b6a075" kindref="member">setup_threads</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a53a6460ab46277db22e6847e69c6a8a6" kindref="member">old_prio</ref><sp/>=<sp/><ref refid="group__thread__apis_1ga3a46ed8ad2c3b12416fafe11325f82b3" kindref="member">k_thread_priority_get</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a51e2e876217651c49f5dda708e3c54f3" kindref="member">THREADS_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>spawn<sp/>thread<sp/>with<sp/>higher<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[i].<ref refid="structthread__data_1ae6b7130c98646b61e108dcf53c3501e0" kindref="member">priority</ref><sp/>=<sp/><ref refid="test__sched__timeslice__and__lock_8c_1aeb42338ae4548ede7fc2a53704df7882" kindref="member">init_prio</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>spawn<sp/>thread<sp/>with<sp/>same<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[i].<ref refid="structthread__data_1ae6b7130c98646b61e108dcf53c3501e0" kindref="member">priority</ref><sp/>=<sp/><ref refid="test__sched__timeslice__and__lock_8c_1aeb42338ae4548ede7fc2a53704df7882" kindref="member">init_prio</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>spawn<sp/>thread<sp/>with<sp/>lower<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[i].<ref refid="structthread__data_1ae6b7130c98646b61e108dcf53c3501e0" kindref="member">priority</ref><sp/>=<sp/><ref refid="test__sched__timeslice__and__lock_8c_1aeb42338ae4548ede7fc2a53704df7882" kindref="member">init_prio</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[i].<ref refid="structthread__data_1a235f54d704f19618551742108fe09978" kindref="member">executed</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/><ref refid="test__sched__timeslice__and__lock_8c_1aeb42338ae4548ede7fc2a53704df7882" kindref="member">init_prio</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a67473a14b2a635c07447509433854d87" kindref="member">spawn_threads</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sleep_sec)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a51e2e876217651c49f5dda708e3c54f3" kindref="member">THREADS_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[i].<ref refid="structthread__data_1afd5f89c8eea492338c140f794643f3b9" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__sched__timeslice__and__lock_8c_1a80a47f4bd0ce762c701acace8207e2d8" kindref="member">tthread</ref>[i],<sp/>tstacks[i],</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="atomic_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,<sp/><ref refid="test__sched__timeslice__and__lock_8c_1ac8d72017cdde7fad33f88bae68426254" kindref="member">thread_entry</ref>,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1gae236ed18fe2ff18ab47c15d2e7eeb417" kindref="member">INT_TO_POINTER</ref>(i),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1gae236ed18fe2ff18ab47c15d2e7eeb417" kindref="member">INT_TO_POINTER</ref>(sleep_sec),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[i].priority,<sp/>0,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a44b7f6537cda263d48701ed3aa4804c6" kindref="member">teardown_threads</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a51e2e876217651c49f5dda708e3c54f3" kindref="member">THREADS_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga1f44bb0307bea7a97227764ecd7bf963" kindref="member">k_thread_abort</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[i].<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a53a6460ab46277db22e6847e69c6a8a6" kindref="member">old_prio</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a71b0db5d9a0f6f15dec62dcc5fcc550f" kindref="member">timer_handler</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_timer<sp/>*<ref refid="test__sched__timeslice__and__lock_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(<ref refid="test__sched__timeslice__and__lock_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;timer_sema);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a612737c5da9ece42b7145f41ef631e81" kindref="member">thread_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga318c846a740b901e5d56876a47ad7f61" kindref="member">k_timer_init</ref>(&amp;<ref refid="test__sched__timeslice__and__lock_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>,<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a71b0db5d9a0f6f15dec62dcc5fcc550f" kindref="member">timer_handler</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga3ba70e9f059ff52fd2057ab89ea7f2ee" kindref="member">k_timer_start</ref>(&amp;<ref refid="test__sched__timeslice__and__lock_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>,<sp/><ref refid="test__sched__timeslice__and__lock_8c_1aa312b7c3e9d9981fb0d98cc4428f17bf" kindref="member">DURATION</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>test<sp/>cases<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__sched__tests_1ga224c79245d2b7fff8648fa4d94b75c46" kindref="member">test_yield_cooperative</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>current<sp/>thread<sp/>to<sp/>a<sp/>cooperative<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1aeb42338ae4548ede7fc2a53704df7882" kindref="member">init_prio</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a2fd6b5bff3b45dec3319f40e73b6a075" kindref="member">setup_threads</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a67473a14b2a635c07447509433854d87" kindref="member">spawn_threads</ref>(0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>checkpoint:<sp/>only<sp/>higher<sp/>priority<sp/>thread<sp/>get<sp/>executed<sp/>when<sp/>yield<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield</ref>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[0].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[1].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a51e2e876217651c49f5dda708e3c54f3" kindref="member">THREADS_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[i].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>environment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a44b7f6537cda263d48701ed3aa4804c6" kindref="member">teardown_threads</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__sched__tests_1ga0035834d2e4db3813ad4e8183e65fe32" kindref="member">test_sleep_cooperative</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>current<sp/>thread<sp/>to<sp/>a<sp/>cooperative<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1aeb42338ae4548ede7fc2a53704df7882" kindref="member">init_prio</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a2fd6b5bff3b45dec3319f40e73b6a075" kindref="member">setup_threads</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a67473a14b2a635c07447509433854d87" kindref="member">spawn_threads</ref>(0);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>checkpoint:<sp/>all<sp/>ready<sp/>threads<sp/>get<sp/>executed<sp/>when<sp/>k_sleep<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(100));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a51e2e876217651c49f5dda708e3c54f3" kindref="member">THREADS_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[i].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>environment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a44b7f6537cda263d48701ed3aa4804c6" kindref="member">teardown_threads</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a44baee856381f7b386368889abad43b2" kindref="member">test_busy_wait_cooperative</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>current<sp/>thread<sp/>to<sp/>a<sp/>cooperative<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1aeb42338ae4548ede7fc2a53704df7882" kindref="member">init_prio</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a2fd6b5bff3b45dec3319f40e73b6a075" kindref="member">setup_threads</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a67473a14b2a635c07447509433854d87" kindref="member">spawn_threads</ref>(0);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait</ref>(100000);<sp/></highlight><highlight class="comment">/*<sp/>100<sp/>ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>checkpoint:<sp/>No<sp/>other<sp/>threads<sp/>get<sp/>executed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a51e2e876217651c49f5dda708e3c54f3" kindref="member">THREADS_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[i].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>environment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a44b7f6537cda263d48701ed3aa4804c6" kindref="member">teardown_threads</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__sched__tests_1ga2154e8dce668a294824c0a13edfc3739" kindref="member">test_sleep_wakeup_preemptible</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>current<sp/>thread<sp/>to<sp/>a<sp/>preemptible<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1aeb42338ae4548ede7fc2a53704df7882" kindref="member">init_prio</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a2fd6b5bff3b45dec3319f40e73b6a075" kindref="member">setup_threads</ref>();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a67473a14b2a635c07447509433854d87" kindref="member">spawn_threads</ref>(10<sp/>*<sp/>1000);<sp/></highlight><highlight class="comment">/*<sp/>10<sp/>second<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>checkpoint:<sp/>lower<sp/>threads<sp/>not<sp/>executed,<sp/>high<sp/>threads<sp/>are<sp/>in<sp/>sleep<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a51e2e876217651c49f5dda708e3c54f3" kindref="member">THREADS_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[i].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga9275a019c8ff3c7fe49a81f8c078157e" kindref="member">k_wakeup</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[0].<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[0].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>environment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a44b7f6537cda263d48701ed3aa4804c6" kindref="member">teardown_threads</ref>();</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__sched__timeslice__and__lock_8c_1afe51315330007115f788ae78c84c2b7a" kindref="member">coop_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;pend_sema,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(100));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__sched__tests_1gaf7dddee86d5a24ec7f8db1b0381c8970" kindref="member">test_pending_thread_wakeup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>current<sp/>thread<sp/>preemptible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(1));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>thread<sp/>which<sp/>waits<sp/>for<sp/>semaphore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">t</ref>,<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="atomic_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="arch__interface_8h_1af1bd193a26c6e6a8658140185cae42e1" kindref="member">k_thread_entry_t</ref>)<ref refid="test__sched__timeslice__and__lock_8c_1afe51315330007115f788ae78c84c2b7a" kindref="member">coop_thread</ref>,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1ac145d4747518572acfc8ee1579007d54" kindref="member">K_PRIO_COOP</ref>(1),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>thread<sp/>didn&apos;t<sp/>wait&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>semaphore<sp/>acquisition&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>wakeup<sp/>on<sp/>pending<sp/>thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga9275a019c8ff3c7fe49a81f8c078157e" kindref="member">k_wakeup</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TESTPOINT:<sp/>k_wakeup()<sp/>shouldn&apos;t<sp/>resume</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>execution<sp/>of<sp/>pending<sp/>thread</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>!=<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;k_wakeup<sp/>woke<sp/>up<sp/>a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>pending<sp/>thread!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga1f44bb0307bea7a97227764ecd7bf963" kindref="member">k_thread_abort</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__sched__tests_1ga29c073bdfd6c751628afe7ba9eda7502" kindref="member">test_time_slicing_preemptible</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_TIMESLICING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>current<sp/>thread<sp/>to<sp/>a<sp/>preemptible<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1aeb42338ae4548ede7fc2a53704df7882" kindref="member">init_prio</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a2fd6b5bff3b45dec3319f40e73b6a075" kindref="member">setup_threads</ref>();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga877c1bfeffbf8f097d1656f9e10a66e8" kindref="member">k_sched_time_slice_set</ref>(200,<sp/>0);<sp/></highlight><highlight class="comment">/*<sp/>200<sp/>ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a67473a14b2a635c07447509433854d87" kindref="member">spawn_threads</ref>(0);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>checkpoint:<sp/>higher<sp/>priority<sp/>threads<sp/>get<sp/>executed<sp/>immediately<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[0].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait</ref>(500000);<sp/></highlight><highlight class="comment">/*<sp/>500<sp/>ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>checkpoint:<sp/>equal<sp/>priority<sp/>threads<sp/>get<sp/>executed<sp/>every<sp/>time<sp/>slice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[1].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a51e2e876217651c49f5dda708e3c54f3" kindref="member">THREADS_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[i].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>environment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga877c1bfeffbf8f097d1656f9e10a66e8" kindref="member">k_sched_time_slice_set</ref>(0,<sp/>0);<sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>time<sp/>slice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a44b7f6537cda263d48701ed3aa4804c6" kindref="member">teardown_threads</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_TIMESLICING<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_TIMESLICING<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__sched__tests_1gabb7c9c0f75ed7b62f3e03a4e267e65f2" kindref="member">test_time_slicing_disable_preemptible</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_TIMESLICING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>current<sp/>thread<sp/>to<sp/>a<sp/>preemptible<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1aeb42338ae4548ede7fc2a53704df7882" kindref="member">init_prio</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a2fd6b5bff3b45dec3319f40e73b6a075" kindref="member">setup_threads</ref>();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a67473a14b2a635c07447509433854d87" kindref="member">spawn_threads</ref>(0);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>checkpoint:<sp/>higher<sp/>priority<sp/>threads<sp/>get<sp/>executed<sp/>immediately<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[0].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait</ref>(500000);<sp/></highlight><highlight class="comment">/*<sp/>500<sp/>ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>checkpoint:<sp/>equal<sp/>priority<sp/>threads<sp/>get<sp/>executed<sp/>every<sp/>time<sp/>slice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[1].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a51e2e876217651c49f5dda708e3c54f3" kindref="member">THREADS_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[i].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>environment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a44b7f6537cda263d48701ed3aa4804c6" kindref="member">teardown_threads</ref>();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_TIMESLICING<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_TIMESLICING<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__sched__tests_1ga5747d604fdb0a85e0d45c6530058ef24" kindref="member">test_lock_preemptible</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>current<sp/>thread<sp/>to<sp/>a<sp/>preemptible<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1aeb42338ae4548ede7fc2a53704df7882" kindref="member">init_prio</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a2fd6b5bff3b45dec3319f40e73b6a075" kindref="member">setup_threads</ref>();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga4f0c5d0b9f279b12a4ad97db0c116a5f" kindref="member">k_sched_lock</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a67473a14b2a635c07447509433854d87" kindref="member">spawn_threads</ref>(0);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>critical<sp/>thing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait</ref>(100000);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>checkpoint:<sp/>all<sp/>other<sp/>threads<sp/>not<sp/>been<sp/>executed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a51e2e876217651c49f5dda708e3c54f3" kindref="member">THREADS_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[i].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>current<sp/>thread<sp/>unready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(100));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>checkpoint:<sp/>all<sp/>other<sp/>threads<sp/>get<sp/>executed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a51e2e876217651c49f5dda708e3c54f3" kindref="member">THREADS_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[i].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>environment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a44b7f6537cda263d48701ed3aa4804c6" kindref="member">teardown_threads</ref>();</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__sched__tests_1ga7b6a31f45b525d56ad33131daaf8adee" kindref="member">test_unlock_preemptible</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>current<sp/>thread<sp/>to<sp/>a<sp/>preemptible<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1aeb42338ae4548ede7fc2a53704df7882" kindref="member">init_prio</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a2fd6b5bff3b45dec3319f40e73b6a075" kindref="member">setup_threads</ref>();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga4f0c5d0b9f279b12a4ad97db0c116a5f" kindref="member">k_sched_lock</ref>();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a67473a14b2a635c07447509433854d87" kindref="member">spawn_threads</ref>(0);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>critical<sp/>thing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait</ref>(100000);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga7b26f64523cc4c36522cc828ccf85580" kindref="member">k_sched_unlock</ref>();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ensure<sp/>threads<sp/>of<sp/>equal<sp/>priority<sp/>can<sp/>run<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield</ref>();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>checkpoint:<sp/>higher<sp/>and<sp/>equal<sp/>threads<sp/>get<sp/>executed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[0].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[1].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[2].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>environment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a44b7f6537cda263d48701ed3aa4804c6" kindref="member">teardown_threads</ref>();</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__sched__tests_1ga4fcc88261fe2fb8292a5d8c059ce82ef" kindref="member">test_unlock_nested_sched_lock</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>current<sp/>thread<sp/>to<sp/>a<sp/>preemptible<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1aeb42338ae4548ede7fc2a53704df7882" kindref="member">init_prio</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a2fd6b5bff3b45dec3319f40e73b6a075" kindref="member">setup_threads</ref>();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>take<sp/>the<sp/>scheduler<sp/>lock<sp/>twice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga4f0c5d0b9f279b12a4ad97db0c116a5f" kindref="member">k_sched_lock</ref>();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga4f0c5d0b9f279b12a4ad97db0c116a5f" kindref="member">k_sched_lock</ref>();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>spawn<sp/>threads<sp/>without<sp/>wait<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a67473a14b2a635c07447509433854d87" kindref="member">spawn_threads</ref>(0);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>critical<sp/>thing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait</ref>(100000);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unlock<sp/>once;<sp/>this<sp/>shouldn&apos;t<sp/>let<sp/>other<sp/>threads<sp/>to<sp/>run<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga7b26f64523cc4c36522cc828ccf85580" kindref="member">k_sched_unlock</ref>();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>checkpoint:<sp/>no<sp/>threads<sp/>get<sp/>executed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__sched__timeslice__and__lock_8c_1a51e2e876217651c49f5dda708e3c54f3" kindref="member">THREADS_NUM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[i].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unlock<sp/>another;<sp/>this<sp/>let<sp/>the<sp/>higher<sp/>thread<sp/>to<sp/>run<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga7b26f64523cc4c36522cc828ccf85580" kindref="member">k_sched_unlock</ref>();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>threads<sp/>of<sp/>equal<sp/>priority<sp/>run<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield</ref>();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>checkpoint:<sp/>higher<sp/>threads<sp/>NOT<sp/>get<sp/>executed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[0].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[1].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="test__sched__timeslice__and__lock_8c_1afa1a20a9219f1207acd4d07f5bb7860b" kindref="member">tdata</ref>[2].<ref refid="test__sched__timeslice__and__lock_8c_1a90990e07651e2d7a868bcbb786b7986a" kindref="member">executed</ref><sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>environment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a44b7f6537cda263d48701ed3aa4804c6" kindref="member">teardown_threads</ref>();</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__sched__tests_1gab015586c36d9616495578d57be339631" kindref="member">test_wakeup_expired_timer_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__sched__timeslice__and__lock_8c_1a80a47f4bd0ce762c701acace8207e2d8" kindref="member">tthread</ref>[0],<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="atomic_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__sched__timeslice__and__lock_8c_1a612737c5da9ece42b7145f41ef631e81" kindref="member">thread_handler</ref>,<sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(0),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;timer_sema,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wakeup<sp/>a<sp/>thread<sp/>if<sp/>the<sp/>timer<sp/>is<sp/>expired<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga9275a019c8ff3c7fe49a81f8c078157e" kindref="member">k_wakeup</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga1f44bb0307bea7a97227764ecd7bf963" kindref="member">k_thread_abort</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c"/>
  </compounddef>
</doxygen>
