<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structnet__traffic__class" kind="struct" language="C++" prot="public">
    <compoundname>net_traffic_class</compoundname>
    <includes refid="net__if_8h" local="no">net_if.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnet__traffic__class_1a94511ca12bad1687f5c7ca862c857ded" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__fifo" kindref="compound">k_fifo</ref></type>
        <definition>struct k_fifo net_traffic_class::fifo</definition>
        <argsstring></argsstring>
        <name>fifo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fifo for handling this Tx or Rx packet </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_if.h" line="405" column="13" bodyfile="include/net/net_if.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__traffic__class_1a8d0023588fee0a8ff1381bbc80ada143" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread net_traffic_class::handler</definition>
        <argsstring></argsstring>
        <name>handler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Traffic class handler thread </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_if.h" line="408" column="15" bodyfile="include/net/net_if.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__traffic__class_1a2d98bc68d38bdef649d645b8b52516c5" prot="public" static="no" mutable="no">
        <type><ref refid="arch__interface_8h_1a3e4bde3075edb41069b258d999333b0e" kindref="member">k_thread_stack_t</ref> *</type>
        <definition>k_thread_stack_t* net_traffic_class::stack</definition>
        <argsstring></argsstring>
        <name>stack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stack for this handler </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_if.h" line="411" column="18" bodyfile="include/net/net_if.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Network traffic class. </para>
    </briefdescription>
    <detaileddescription>
<para>Traffic classes are used when sending or receiving data that is classified with different priorities. So some traffic can be marked as high priority and it will be sent or received first. Each network packet that is transmitted or received goes through a fifo to a thread that will transmit it. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="7">
        <label>__thread_entry</label>
      </node>
      <node id="5">
        <label>_callee_saved</label>
      </node>
      <node id="9">
        <label>_mem_domain_info</label>
      </node>
      <node id="14">
        <label>_thread_arch</label>
      </node>
      <node id="4">
        <label>_thread_base</label>
      </node>
      <node id="8">
        <label>_thread_stack_info</label>
      </node>
      <node id="6">
        <label>_wait_q_t</label>
      </node>
      <node id="2">
        <label>k_fifo</label>
        <link refid="structk__fifo"/>
      </node>
      <node id="11">
        <label>k_heap</label>
        <link refid="structk__heap"/>
        <childnode refid="12" relation="usage">
          <edgelabel>heap</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>k_spinlock</label>
        <link refid="structk__spinlock"/>
      </node>
      <node id="3">
        <label>k_thread</label>
        <link refid="structk__thread"/>
        <childnode refid="4" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>callee_saved</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>join_queue</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>entry</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>next_thread</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>stack_info</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>mem_domain_info</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>stack_obj</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>resource_pool</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>arch</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>net_traffic_class</label>
        <link refid="structnet__traffic__class"/>
        <childnode refid="2" relation="usage">
          <edgelabel>fifo</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>handler</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>stack</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>sys_heap</label>
        <link refid="structsys__heap"/>
      </node>
      <node id="10">
        <label>z_thread_stack_element</label>
      </node>
    </collaborationgraph>
    <location file="include/net/net_if.h" line="403" column="1" bodyfile="include/net/net_if.h" bodystart="403" bodyend="412"/>
    <listofallmembers>
      <member refid="structnet__traffic__class_1a94511ca12bad1687f5c7ca862c857ded" prot="public" virt="non-virtual"><scope>net_traffic_class</scope><name>fifo</name></member>
      <member refid="structnet__traffic__class_1a8d0023588fee0a8ff1381bbc80ada143" prot="public" virt="non-virtual"><scope>net_traffic_class</scope><name>handler</name></member>
      <member refid="structnet__traffic__class_1a2d98bc68d38bdef649d645b8b52516c5" prot="public" virt="non-virtual"><scope>net_traffic_class</scope><name>stack</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
