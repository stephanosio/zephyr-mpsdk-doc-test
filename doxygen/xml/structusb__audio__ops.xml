<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structusb__audio__ops" kind="struct" language="C++" prot="public">
    <compoundname>usb_audio_ops</compoundname>
    <includes refid="usb__audio_8h" local="no">usb_audio.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structusb__audio__ops_1a6ee19a7aef47561f14981b7e7ebd8ac7" prot="public" static="no" mutable="no">
        <type><ref refid="usb__audio_8h_1a8f289f2b4d0a7d3accdc6308cb5661e8" kindref="member">usb_audio_data_request_cb_t</ref></type>
        <definition>usb_audio_data_request_cb_t usb_audio_ops::data_request_cb</definition>
        <argsstring></argsstring>
        <name>data_request_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/usb/class/usb_audio.h" line="218" column="29" bodyfile="include/usb/class/usb_audio.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structusb__audio__ops_1a2752018597ba5bd4e9a80d1ae650bf8b" prot="public" static="no" mutable="no">
        <type><ref refid="usb__audio_8h_1a57bc8c499f03323db38f5604f8ebcda2" kindref="member">usb_audio_data_completion_cb_t</ref></type>
        <definition>usb_audio_data_completion_cb_t usb_audio_ops::data_written_cb</definition>
        <argsstring></argsstring>
        <name>data_written_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/usb/class/usb_audio.h" line="224" column="32" bodyfile="include/usb/class/usb_audio.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structusb__audio__ops_1a483af21f54537bef1a6ae3be2cd3717d" prot="public" static="no" mutable="no">
        <type><ref refid="usb__audio_8h_1a57bc8c499f03323db38f5604f8ebcda2" kindref="member">usb_audio_data_completion_cb_t</ref></type>
        <definition>usb_audio_data_completion_cb_t usb_audio_ops::data_received_cb</definition>
        <argsstring></argsstring>
        <name>data_received_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/usb/class/usb_audio.h" line="230" column="32" bodyfile="include/usb/class/usb_audio.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structusb__audio__ops_1a861823185efb5c9a06b900799adb9efb" prot="public" static="no" mutable="no">
        <type><ref refid="usb__audio_8h_1a692362e834622532b7be71d5e0bdc219" kindref="member">usb_audio_feature_updated_cb_t</ref></type>
        <definition>usb_audio_feature_updated_cb_t usb_audio_ops::feature_update_cb</definition>
        <argsstring></argsstring>
        <name>feature_update_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/usb/class/usb_audio.h" line="233" column="32" bodyfile="include/usb/class/usb_audio.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Audio callbacks used to interact with audio devices by user App. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="structusb__audio__ops" kindref="compound">usb_audio_ops</ref> structure contains all relevant callbacks to interact with USB Audio devices. Each of this callbacks is optional and may be left NULL. This will not break the stack but could make USB Audio device useless. Depending on the device some of those callbacks are necessary to make USB device work as expected sending/receiving data. For more information refer to callback documentation above. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>device</label>
        <link refid="structdevice"/>
        <childnode refid="3" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>device_state</label>
        <link refid="structdevice__state"/>
      </node>
      <node id="1">
        <label>usb_audio_ops</label>
        <link refid="structusb__audio__ops"/>
        <childnode refid="2" relation="usage">
          <edgelabel>data_received_cb</edgelabel>
          <edgelabel>data_request_cb</edgelabel>
          <edgelabel>data_written_cb</edgelabel>
          <edgelabel>feature_update_cb</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/usb/class/usb_audio.h" line="216" column="1" bodyfile="include/usb/class/usb_audio.h" bodystart="216" bodyend="234"/>
    <listofallmembers>
      <member refid="structusb__audio__ops_1a483af21f54537bef1a6ae3be2cd3717d" prot="public" virt="non-virtual"><scope>usb_audio_ops</scope><name>data_received_cb</name></member>
      <member refid="structusb__audio__ops_1a6ee19a7aef47561f14981b7e7ebd8ac7" prot="public" virt="non-virtual"><scope>usb_audio_ops</scope><name>data_request_cb</name></member>
      <member refid="structusb__audio__ops_1a2752018597ba5bd4e9a80d1ae650bf8b" prot="public" virt="non-virtual"><scope>usb_audio_ops</scope><name>data_written_cb</name></member>
      <member refid="structusb__audio__ops_1a861823185efb5c9a06b900799adb9efb" prot="public" virt="non-virtual"><scope>usb_audio_ops</scope><name>feature_update_cb</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
