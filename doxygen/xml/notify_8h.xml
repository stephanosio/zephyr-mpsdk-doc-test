<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="notify_8h" kind="file" language="C++">
    <compoundname>notify.h</compoundname>
    <includes local="no">kernel.h</includes>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includedby refid="maxim__ds3231_8h" local="no">include/drivers/rtc/maxim_ds3231.h</includedby>
    <includedby refid="onoff_8h" local="no">include/sys/onoff.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/sys/notify.h</label>
        <link refid="notify_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="2">
        <label>kernel.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>include/drivers/clock_control/nrf_clock_control.h</label>
        <link refid="nrf__clock__control_8h"/>
      </node>
      <node id="5">
        <label>include/drivers/regulator.h</label>
        <link refid="regulator_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>include/drivers/regulator/consumer.h</label>
        <link refid="consumer_8h"/>
      </node>
      <node id="2">
        <label>include/drivers/rtc/maxim_ds3231.h</label>
        <link refid="maxim__ds3231_8h"/>
      </node>
      <node id="1">
        <label>include/sys/notify.h</label>
        <link refid="notify_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/sys/onoff.h</label>
        <link refid="onoff_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structsys__notify" prot="public">sys_notify</innerclass>
    <innerclass refid="unionsys__notify_1_1method" prot="public">sys_notify::method</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="notify_8h_1ad408b122f7f121c0739ac09e3399baa4" prot="public" static="no">
        <name>SYS_NOTIFY_METHOD_COMPLETED</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="24" column="9" bodyfile="include/sys/notify.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="notify_8h_1a36fc74f78d421ddf0fe3dfd48d0e5a99" prot="public" static="no">
        <name>SYS_NOTIFY_METHOD_SPINWAIT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="34" column="9" bodyfile="include/sys/notify.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="notify_8h_1aba2f89370639d6733ec8d75fadb44678" prot="public" static="no">
        <name>SYS_NOTIFY_METHOD_SIGNAL</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="41" column="9" bodyfile="include/sys/notify.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="notify_8h_1a541b0198e2425c4dfa0d3e7abbdb9c60" prot="public" static="no">
        <name>SYS_NOTIFY_METHOD_CALLBACK</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="48" column="9" bodyfile="include/sys/notify.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="notify_8h_1a5f13b732e247f2903dcd82dc52f9d797" prot="public" static="no">
        <name>SYS_NOTIFY_METHOD_MASK</name>
        <initializer>0x03U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="50" column="9" bodyfile="include/sys/notify.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="notify_8h_1a63af5c6773172a0f3881d11b7b2e58b6" prot="public" static="no">
        <name>SYS_NOTIFY_METHOD_POS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="51" column="9" bodyfile="include/sys/notify.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="notify_8h_1aa22143622004e478668cdd98a2e04357" prot="public" static="no">
        <name>SYS_NOTIFY_EXTENSION_POS</name>
        <initializer>2</initializer>
        <briefdescription>
<para>Identify the region of <ref refid="structsys__notify" kindref="compound">sys_notify</ref> flags available for containing services. </para>
        </briefdescription>
        <detaileddescription>
<para>Bits of the flags field of the <ref refid="structsys__notify" kindref="compound">sys_notify</ref> structure at and above this position may be used by extensions to the <ref refid="structsys__notify" kindref="compound">sys_notify</ref> structure.</para>
<para>These bits are intended for use by containing service implementations to record client-specific information. The bits are cleared by <ref refid="group__sys__notify__apis_1ga71a9ccb690151020a6abea2ec9ffc667" kindref="member">sys_notify_validate()</ref>. Use of these does not imply that the flags field becomes public API. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="66" column="9" bodyfile="include/sys/notify.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="notify_8h_1a87d3145d44e9638070131dcfb21c6636" prot="public" static="no">
        <name>SYS_NOTIFY_EXTENSION_MASK</name>
        <initializer>(~<ref refid="group__sys-util_1ga3c12c6d36ad0aa481a3436923d21f4f8" kindref="member">BIT_MASK</ref>(<ref refid="notify_8h_1aa22143622004e478668cdd98a2e04357" kindref="member">SYS_NOTIFY_EXTENSION_POS</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="72" column="9" bodyfile="include/sys/notify.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__sys__notify__apis_1ga2a9ffe35a5ad44fb7c5b00bb5c5c0499" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* sys_notify_generic_callback) ()</definition>
        <argsstring>)()</argsstring>
        <name>sys_notify_generic_callback</name>
        <briefdescription>
<para>Generic signature used to notify of result completion by callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Functions with this role may be invoked from any context including pre-kernel, ISR, or cooperative or pre-emptible threads. Compatible functions must be isr-ok and not sleep.</para>
<para>Parameters that should generally be passed to such functions include:</para>
<para><itemizedlist>
<listitem><para>a pointer to a specific client request structure, i.e. the one that contains the <ref refid="structsys__notify" kindref="compound">sys_notify</ref> structure.</para>
</listitem><listitem><para>the result of the operation, either as passed to <ref refid="group__sys__notify__apis_1ga424b1c94c1010bdc4170cf06c7f2ec72" kindref="member">sys_notify_finalize()</ref> or extracted afterwards using <ref refid="group__sys__notify__apis_1ga823397b1917e10593d606daf3ec06a65" kindref="member">sys_notify_fetch_result()</ref>. Expected values are service-specific, but the value shall be non-negative if the operation succeeded, and negative if the operation failed. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="98" column="9" bodyfile="include/sys/notify.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__sys__notify__apis_1ga19a2ca050ef4fcd4fac70e73c3fd3514" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>static uint32_t sys_notify_get_method</definition>
        <argsstring>(const struct sys_notify *notify)</argsstring>
        <name>sys_notify_get_method</name>
        <param>
          <type>const struct <ref refid="structsys__notify" kindref="compound">sys_notify</ref> *</type>
          <declname>notify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="178" column="24" bodyfile="include/sys/notify.h" bodystart="178" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="group__sys__notify__apis_1ga71a9ccb690151020a6abea2ec9ffc667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_notify_validate</definition>
        <argsstring>(struct sys_notify *notify)</argsstring>
        <name>sys_notify_validate</name>
        <param>
          <type>struct <ref refid="structsys__notify" kindref="compound">sys_notify</ref> *</type>
          <declname>notify</declname>
        </param>
        <briefdescription>
<para>Validate and initialize the notify structure. </para>
        </briefdescription>
        <detaileddescription>
<para>This should be invoked at the start of any service-specific configuration validation. It ensures that the basic asynchronous notification configuration is consistent, and clears the result.</para>
<para>Note that this function does not validate extension bits (zeroed by async notify API init functions like <ref refid="group__sys__notify__apis_1gaa9f31f78c03f48a3c649bbac15cc3a6c" kindref="member">sys_notify_init_callback()</ref>). It may fail to recognize that an uninitialized structure has been passed because only method bits of flags are tested against method settings. To reduce the chance of accepting an uninititalized operation service validation of structures that contain an <ref refid="structsys__notify" kindref="compound">sys_notify</ref> instance should confirm that the extension bits are set or cleared as expected.</para>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on successful validation and reinitialization </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>if the configuration is not valid. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="204" column="5" declfile="include/sys/notify.h" declline="204" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__sys__notify__apis_1ga424b1c94c1010bdc4170cf06c7f2ec72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__sys__notify__apis_1ga2a9ffe35a5ad44fb7c5b00bb5c5c0499" kindref="member">sys_notify_generic_callback</ref></type>
        <definition>sys_notify_generic_callback sys_notify_finalize</definition>
        <argsstring>(struct sys_notify *notify, int res)</argsstring>
        <name>sys_notify_finalize</name>
        <param>
          <type>struct <ref refid="structsys__notify" kindref="compound">sys_notify</ref> *</type>
          <declname>notify</declname>
        </param>
        <param>
          <type>int</type>
          <declname>res</declname>
        </param>
        <briefdescription>
<para>Record and signal the operation completion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>notify</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the notification state structure.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>the result of the operation. Expected values are service-specific, but the value shall be non-negative if the operation succeeded, and negative if the operation failed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the notification is to be done by callback this returns the generic version of the function to be invoked. The caller must immediately invoke that function with whatever arguments are expected by the callback. If notification is by spin-wait or signal, the notification has been completed by the point this function returns, and a null pointer is returned. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="222" column="29" declfile="include/sys/notify.h" declline="222" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group__sys__notify__apis_1ga823397b1917e10593d606daf3ec06a65" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int sys_notify_fetch_result</definition>
        <argsstring>(const struct sys_notify *notify, int *result)</argsstring>
        <name>sys_notify_fetch_result</name>
        <param>
          <type>const struct <ref refid="structsys__notify" kindref="compound">sys_notify</ref> *</type>
          <declname>notify</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Check for and read the result of an asynchronous operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>notify</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the object used to specify asynchronous function behavior and store completion information.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to storage for the result of the operation. The result is stored only if the operation has completed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if the operation has completed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>if the operation has not completed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="237" column="19" bodyfile="include/sys/notify.h" bodystart="237" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="group__sys__notify__apis_1gad1a5c3e58ff962ab3cac743dde8c6c1e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sys_notify_init_spinwait</definition>
        <argsstring>(struct sys_notify *notify)</argsstring>
        <name>sys_notify_init_spinwait</name>
        <param>
          <type>struct <ref refid="structsys__notify" kindref="compound">sys_notify</ref> *</type>
          <declname>notify</declname>
        </param>
        <briefdescription>
<para>Initialize a notify object for spin-wait notification. </para>
        </briefdescription>
        <detaileddescription>
<para>Clients that use this initialization receive no asynchronous notification, and instead must periodically check for completion using <ref refid="group__sys__notify__apis_1ga823397b1917e10593d606daf3ec06a65" kindref="member">sys_notify_fetch_result()</ref>.</para>
<para>On completion of the operation the client object must be reinitialized before it can be re-used.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>notify</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the notification configuration object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="264" column="20" bodyfile="include/sys/notify.h" bodystart="264" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="group__sys__notify__apis_1ga30f9eff4b20b7d637a3a1df5f4cb38f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sys_notify_init_signal</definition>
        <argsstring>(struct sys_notify *notify, struct k_poll_signal *sigp)</argsstring>
        <name>sys_notify_init_signal</name>
        <param>
          <type>struct <ref refid="structsys__notify" kindref="compound">sys_notify</ref> *</type>
          <declname>notify</declname>
        </param>
        <param>
          <type>struct <ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref> *</type>
          <declname>sigp</declname>
        </param>
        <briefdescription>
<para>Initialize a notify object for (k_poll) signal notification. </para>
        </briefdescription>
        <detaileddescription>
<para>Clients that use this initialization will be notified of the completion of operations through the provided signal.</para>
<para>On completion of the operation the client object must be reinitialized before it can be re-used.</para>
<para><simplesect kind="note"><para>This capability is available only when <verbatim>embed:rst:inline :kconfig:option:`CONFIG_POLL` </verbatim> is selected.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>notify</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the notification configuration object.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sigp</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the signal to use for notification. The value must not be null. The signal must be reset before the client object is passed to the on-off service API. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="292" column="20" bodyfile="include/sys/notify.h" bodystart="292" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="group__sys__notify__apis_1gaa9f31f78c03f48a3c649bbac15cc3a6c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sys_notify_init_callback</definition>
        <argsstring>(struct sys_notify *notify, sys_notify_generic_callback handler)</argsstring>
        <name>sys_notify_init_callback</name>
        <param>
          <type>struct <ref refid="structsys__notify" kindref="compound">sys_notify</ref> *</type>
          <declname>notify</declname>
        </param>
        <param>
          <type><ref refid="group__sys__notify__apis_1ga2a9ffe35a5ad44fb7c5b00bb5c5c0499" kindref="member">sys_notify_generic_callback</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize a notify object for callback notification. </para>
        </briefdescription>
        <detaileddescription>
<para>Clients that use this initialization will be notified of the completion of operations through the provided callback. Note that callbacks may be invoked from various contexts depending on the specific service; see <ref refid="group__sys__notify__apis_1ga2a9ffe35a5ad44fb7c5b00bb5c5c0499" kindref="member">sys_notify_generic_callback</ref>.</para>
<para>On completion of the operation the client object must be reinitialized before it can be re-used.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>notify</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the notification configuration object.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>a function pointer to use for notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="321" column="20" bodyfile="include/sys/notify.h" bodystart="321" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="group__sys__notify__apis_1ga9772f8b356685acd707bd905860a2ca7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool sys_notify_uses_callback</definition>
        <argsstring>(const struct sys_notify *notify)</argsstring>
        <name>sys_notify_uses_callback</name>
        <param>
          <type>const struct <ref refid="structsys__notify" kindref="compound">sys_notify</ref> *</type>
          <declname>notify</declname>
        </param>
        <briefdescription>
<para>Detect whether a particular notification uses a callback. </para>
        </briefdescription>
        <detaileddescription>
<para>The generic handler does not capture the signature expected by the callback, and the translation to a service-specific callback must be provided by the service. This check allows abstracted services to reject callback notification requests when the service doesn&apos;t provide a translation function.</para>
<para><simplesect kind="return"><para>true if and only if a callback is to be used for notification. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/notify.h" line="346" column="20" bodyfile="include/sys/notify.h" bodystart="346" bodyend="351"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Peter<sp/>Bigot<sp/>Consulting,<sp/>LLC</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_SYS_NOTIFY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_SYS_NOTIFY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__notify" kindref="compound">sys_notify</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Flag<sp/>value<sp/>that<sp/>overwrites<sp/>the<sp/>method<sp/>field<sp/>when<sp/>the<sp/>operation<sp/>has</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>completed.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="notify_8h_1ad408b122f7f121c0739ac09e3399baa4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_NOTIFY_METHOD_COMPLETED<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>Indicates<sp/>that<sp/>no<sp/>notification<sp/>will<sp/>be<sp/>provided.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>Callers<sp/>must<sp/>check<sp/>for<sp/>completions<sp/>using</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>sys_notify_fetch_result().</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>See<sp/>sys_notify_init_spinwait().</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="notify_8h_1a36fc74f78d421ddf0fe3dfd48d0e5a99" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_NOTIFY_METHOD_SPINWAIT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>Select<sp/>notification<sp/>through<sp/>@ref<sp/>k_poll<sp/>signal</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>See<sp/>sys_notify_init_signal().</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="notify_8h_1aba2f89370639d6733ec8d75fadb44678" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_NOTIFY_METHOD_SIGNAL<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>Select<sp/>notification<sp/>through<sp/>a<sp/>user-provided<sp/>callback.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>See<sp/>sys_notify_init_callback().</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="notify_8h_1a541b0198e2425c4dfa0d3e7abbdb9c60" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_NOTIFY_METHOD_CALLBACK<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="notify_8h_1a5f13b732e247f2903dcd82dc52f9d797" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_NOTIFY_METHOD_MASK<sp/>0x03U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="notify_8h_1a63af5c6773172a0f3881d11b7b2e58b6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_NOTIFY_METHOD_POS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="notify_8h_1aa22143622004e478668cdd98a2e04357" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_NOTIFY_EXTENSION_POS<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>Mask<sp/>isolating<sp/>the<sp/>bits<sp/>of<sp/>sys_notify::flags<sp/>that<sp/>are<sp/>available</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>for<sp/>extension.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="notify_8h_1a87d3145d44e9638070131dcfb21c6636" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_NOTIFY_EXTENSION_MASK<sp/>(~BIT_MASK(SYS_NOTIFY_EXTENSION_POS))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="group__sys__notify__apis_1ga2a9ffe35a5ad44fb7c5b00bb5c5c0499" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__sys__notify__apis_1ga2a9ffe35a5ad44fb7c5b00bb5c5c0499" kindref="member">sys_notify_generic_callback</ref>)();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="structsys__notify" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__notify" kindref="compound">sys_notify</ref><sp/>{</highlight></codeline>
<codeline lineno="139" refid="unionsys__notify_1_1method" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionsys__notify_1_1method" kindref="compound">method</ref><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>signal<sp/>used<sp/>to<sp/>notify<sp/>client.</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>signal<sp/>value<sp/>corresponds<sp/>to<sp/>the<sp/>res<sp/>parameter</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>sys_notify_callback.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="unionsys__notify_1_1method_1a6db217c9960d59b8046457d0503f56d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref><sp/>*<ref refid="unionsys__notify_1_1method_1a6db217c9960d59b8046457d0503f56d3" kindref="member">signal</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Generic<sp/>callback<sp/>function<sp/>for<sp/>callback<sp/>notification.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="unionsys__notify_1_1method_1abb9d173c53db24a5388327cf05110020" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys__notify__apis_1ga2a9ffe35a5ad44fb7c5b00bb5c5c0499" kindref="member">sys_notify_generic_callback</ref><sp/><ref refid="unionsys__notify_1_1method_1abb9d173c53db24a5388327cf05110020" kindref="member">callback</ref>;</highlight></codeline>
<codeline lineno="149" refid="structsys__notify_1a9c74bb70d56f0e5c809b26754c3b6fcd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structsys__notify_1a9c74bb70d56f0e5c809b26754c3b6fcd" kindref="member">method</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Flags<sp/>recording<sp/>information<sp/>about<sp/>the<sp/>operation.</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Bits<sp/>below<sp/>SYS_NOTIFY_EXTENSION_POS<sp/>are<sp/>initialized<sp/>by</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>async<sp/>notify<sp/>API<sp/>init<sp/>functions<sp/>like</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>sys_notify_init_callback(),<sp/>and<sp/>must<sp/>not<sp/>by<sp/>modified<sp/>by</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>extensions<sp/>or<sp/>client<sp/>code.</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Bits<sp/>at<sp/>and<sp/>above<sp/>SYS_NOTIFY_EXTENSION_POS<sp/>are<sp/>available</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>use<sp/>by<sp/>service<sp/>extensions<sp/>while<sp/>the<sp/>containing<sp/>object</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>managed<sp/>by<sp/>the<sp/>service.<sp/><sp/>They<sp/>are<sp/>not<sp/>for<sp/>client<sp/>use,</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>zeroed<sp/>by<sp/>the<sp/>async<sp/>notify<sp/>API<sp/>init<sp/>functions,<sp/>and<sp/>will</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>be<sp/>zeroed<sp/>by<sp/>sys_notify_finalize().</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="structsys__notify_1a0816d524409695b9b1480e7681507073" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structsys__notify_1a0816d524409695b9b1480e7681507073" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>result<sp/>of<sp/>the<sp/>operation.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>the<sp/>value<sp/>that<sp/>was<sp/>(or<sp/>would<sp/>be)<sp/>passed<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>async<sp/>infrastructure.<sp/><sp/>This<sp/>field<sp/>is<sp/>the<sp/>sole<sp/>record<sp/>of</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>success<sp/>or<sp/>failure<sp/>for<sp/>spin-wait<sp/>synchronous<sp/>operations.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="structsys__notify_1a6ea09c4e58d0eaaad3dd63ee4a311a21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structsys__notify_1a6ea09c4e58d0eaaad3dd63ee4a311a21" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="group__sys__notify__apis_1ga19a2ca050ef4fcd4fac70e73c3fd3514" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="group__sys__notify__apis_1ga19a2ca050ef4fcd4fac70e73c3fd3514" kindref="member">sys_notify_get_method</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsys__notify" kindref="compound">sys_notify</ref><sp/>*notify)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>method<sp/>=<sp/>notify-&gt;<ref refid="structsys__notify_1a0816d524409695b9b1480e7681507073" kindref="member">flags</ref><sp/>&gt;&gt;<sp/><ref refid="notify_8h_1a63af5c6773172a0f3881d11b7b2e58b6" kindref="member">SYS_NOTIFY_METHOD_POS</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>method<sp/>&amp;<sp/><ref refid="notify_8h_1a5f13b732e247f2903dcd82dc52f9d797" kindref="member">SYS_NOTIFY_METHOD_MASK</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="group__sys__notify__apis_1ga71a9ccb690151020a6abea2ec9ffc667" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__sys__notify__apis_1ga71a9ccb690151020a6abea2ec9ffc667" kindref="member">sys_notify_validate</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsys__notify" kindref="compound">sys_notify</ref><sp/>*notify);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="group__sys__notify__apis_1ga424b1c94c1010bdc4170cf06c7f2ec72" refkind="member"><highlight class="normal"><ref refid="group__sys__notify__apis_1ga2a9ffe35a5ad44fb7c5b00bb5c5c0499" kindref="member">sys_notify_generic_callback</ref><sp/><ref refid="group__sys__notify__apis_1ga424b1c94c1010bdc4170cf06c7f2ec72" kindref="member">sys_notify_finalize</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsys__notify" kindref="compound">sys_notify</ref><sp/>*notify,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="group__sys__notify__apis_1ga823397b1917e10593d606daf3ec06a65" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__sys__notify__apis_1ga823397b1917e10593d606daf3ec06a65" kindref="member">sys_notify_fetch_result</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsys__notify" kindref="compound">sys_notify</ref><sp/>*notify,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="structresult" kindref="compound">result</ref>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT_NO_MSG(notify<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT_NO_MSG(<ref refid="structresult" kindref="compound">result</ref><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fatal_2exception_2src_2main_8c_1ae3b62d25a3304d081b4272eeab42de09" kindref="member">rv</ref><sp/>=<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sys__notify__apis_1ga19a2ca050ef4fcd4fac70e73c3fd3514" kindref="member">sys_notify_get_method</ref>(notify)<sp/>==<sp/><ref refid="notify_8h_1ad408b122f7f121c0739ac09e3399baa4" kindref="member">SYS_NOTIFY_METHOD_COMPLETED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fatal_2exception_2src_2main_8c_1ae3b62d25a3304d081b4272eeab42de09" kindref="member">rv</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structresult" kindref="compound">result</ref><sp/>=<sp/>notify-&gt;<ref refid="structsys__notify_1a6ea09c4e58d0eaaad3dd63ee4a311a21" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fatal_2exception_2src_2main_8c_1ae3b62d25a3304d081b4272eeab42de09" kindref="member">rv</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="group__sys__notify__apis_1gad1a5c3e58ff962ab3cac743dde8c6c1e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sys__notify__apis_1gad1a5c3e58ff962ab3cac743dde8c6c1e" kindref="member">sys_notify_init_spinwait</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsys__notify" kindref="compound">sys_notify</ref><sp/>*notify)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT_NO_MSG(notify<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*notify<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__notify" kindref="compound">sys_notify</ref>){</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structsys__notify_1a0816d524409695b9b1480e7681507073" kindref="member">flags</ref><sp/>=<sp/><ref refid="notify_8h_1a36fc74f78d421ddf0fe3dfd48d0e5a99" kindref="member">SYS_NOTIFY_METHOD_SPINWAIT</ref>,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="group__sys__notify__apis_1ga30f9eff4b20b7d637a3a1df5f4cb38f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sys__notify__apis_1ga30f9eff4b20b7d637a3a1df5f4cb38f8" kindref="member">sys_notify_init_signal</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsys__notify" kindref="compound">sys_notify</ref><sp/>*notify,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__poll__signal" kindref="compound">k_poll_signal</ref><sp/>*sigp)</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT_NO_MSG(notify<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT_NO_MSG(sigp<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*notify<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__notify" kindref="compound">sys_notify</ref>){</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structsys__notify_1a9c74bb70d56f0e5c809b26754c3b6fcd" kindref="member">method</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="unionsys__notify_1_1method_1a6db217c9960d59b8046457d0503f56d3" kindref="member">signal</ref><sp/>=<sp/>sigp,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.flags<sp/>=<sp/><ref refid="notify_8h_1aba2f89370639d6733ec8d75fadb44678" kindref="member">SYS_NOTIFY_METHOD_SIGNAL</ref>,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="group__sys__notify__apis_1gaa9f31f78c03f48a3c649bbac15cc3a6c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__sys__notify__apis_1gaa9f31f78c03f48a3c649bbac15cc3a6c" kindref="member">sys_notify_init_callback</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsys__notify" kindref="compound">sys_notify</ref><sp/>*notify,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys__notify__apis_1ga2a9ffe35a5ad44fb7c5b00bb5c5c0499" kindref="member">sys_notify_generic_callback</ref><sp/><ref refid="timer_2starve_2src_2main_8c_1ab28ee8b6412d992f77f819e17b664869" kindref="member">handler</ref>)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT_NO_MSG(notify<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT_NO_MSG(<ref refid="timer_2starve_2src_2main_8c_1ab28ee8b6412d992f77f819e17b664869" kindref="member">handler</ref><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*notify<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__notify" kindref="compound">sys_notify</ref>){</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structsys__notify_1a9c74bb70d56f0e5c809b26754c3b6fcd" kindref="member">method</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="unionsys__notify_1_1method_1abb9d173c53db24a5388327cf05110020" kindref="member">callback</ref><sp/>=<sp/><ref refid="timer_2starve_2src_2main_8c_1ab28ee8b6412d992f77f819e17b664869" kindref="member">handler</ref>,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.flags<sp/>=<sp/><ref refid="notify_8h_1a541b0198e2425c4dfa0d3e7abbdb9c60" kindref="member">SYS_NOTIFY_METHOD_CALLBACK</ref>,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="group__sys__notify__apis_1ga9772f8b356685acd707bd905860a2ca7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__sys__notify__apis_1ga9772f8b356685acd707bd905860a2ca7" kindref="member">sys_notify_uses_callback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsys__notify" kindref="compound">sys_notify</ref><sp/>*notify)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT_NO_MSG(notify<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__sys__notify__apis_1ga19a2ca050ef4fcd4fac70e73c3fd3514" kindref="member">sys_notify_get_method</ref>(notify)<sp/>==<sp/><ref refid="notify_8h_1a541b0198e2425c4dfa0d3e7abbdb9c60" kindref="member">SYS_NOTIFY_METHOD_CALLBACK</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_SYS_NOTIFY_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/sys/notify.h"/>
  </compounddef>
</doxygen>
