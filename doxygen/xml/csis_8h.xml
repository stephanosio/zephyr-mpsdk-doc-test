<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="csis_8h" kind="file" language="C++">
    <compoundname>csis.h</compoundname>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includes refid="stdbool_8h" local="no">stdbool.h</includes>
    <includes refid="conn_8h" local="no">bluetooth/conn.h</includes>
    <incdepgraph>
      <node id="17">
        <label>bluetooth/addr.h</label>
        <link refid="addr_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/bluetooth/audio/csis.h</label>
        <link refid="csis_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>bluetooth/bluetooth.h</label>
        <link refid="bluetooth_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>bluetooth/conn.h</label>
        <link refid="conn_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>bluetooth/crypto.h</label>
        <link refid="crypto_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>bluetooth/direction.h</label>
        <link refid="direction_8h"/>
      </node>
      <node id="16">
        <label>bluetooth/gap.h</label>
        <link refid="gap_8h"/>
      </node>
      <node id="22">
        <label>bluetooth/hci_err.h</label>
        <link refid="hci__err_8h"/>
      </node>
      <node id="14">
        <label>net/buf.h</label>
        <link refid="net_2buf_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="11">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="2">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="4">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="8">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>stdarg.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="15">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structbt__csis__cb" prot="public">bt_csis_cb</innerclass>
    <innerclass refid="structbt__csis__register__param" prot="public">bt_csis_register_param</innerclass>
    <innerclass refid="structbt__csis__client__set__info" prot="public">bt_csis_client_set_info</innerclass>
    <innerclass refid="structbt__csis__client__csis__inst" prot="public">bt_csis_client_csis_inst</innerclass>
    <innerclass refid="structbt__csis__client__set__member" prot="public">bt_csis_client_set_member</innerclass>
    <innerclass refid="structbt__csis__client__cb" prot="public">bt_csis_client_cb</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__gatt__csis_1gae682d9f84db9c5f50c7e7733ad1d85e2" prot="public" static="no">
        <name>CSIS_CLIENT_DISCOVER_TIMER_VALUE</name>
        <initializer><ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Recommended timer for member discovery </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="30" column="9" bodyfile="include/bluetooth/audio/csis.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__csis_1ga50770e479146ce74e511cab03e633566" prot="public" static="no">
        <name>BT_CSIS_CLIENT_MAX_CSIS_INSTANCES</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="35" column="10" bodyfile="include/bluetooth/audio/csis.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__csis_1ga4ddba4cc91101f6320e13de81840cb90" prot="public" static="no">
        <name>BT_CSIS_MINIMUM_SET_SIZE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum size of a set </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="39" column="9" bodyfile="include/bluetooth/audio/csis.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__csis_1ga5649a8ff70dab87940d507c9b3c5eeea" prot="public" static="no">
        <name>BT_CSIS_READ_SIRK_REQ_RSP_ACCEPT</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accept the request to read the SIRK as plaintext </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="42" column="9" bodyfile="include/bluetooth/audio/csis.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__csis_1ga542f2d2ff2baa40102d3628c316a9c5d" prot="public" static="no">
        <name>BT_CSIS_READ_SIRK_REQ_RSP_ACCEPT_ENC</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accept the request to read the SIRK, but return encrypted SIRK </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="44" column="9" bodyfile="include/bluetooth/audio/csis.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__csis_1gad67f609de3a6a4f1bdb94012a5f2a692" prot="public" static="no">
        <name>BT_CSIS_READ_SIRK_REQ_RSP_REJECT</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reject the request to read the SIRK </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="46" column="9" bodyfile="include/bluetooth/audio/csis.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__csis_1gabbf62db1c8e3b6264f877741dc3c2431" prot="public" static="no">
        <name>BT_CSIS_READ_SIRK_REQ_RSP_OOB_ONLY</name>
        <initializer>0x03</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SIRK is available only via an OOB procedure </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="48" column="9" bodyfile="include/bluetooth/audio/csis.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__csis_1gad745b5dfe8bd40f456374905eec4910c" prot="public" static="no">
        <name>BT_CSIS_SET_SIRK_SIZE</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Size of the Set Identification Resolving Key (SIRK) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="51" column="9" bodyfile="include/bluetooth/audio/csis.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__csis_1ga9cc39c83836fabfd4cd467c358f848a5" prot="public" static="no">
        <name>BT_CSIS_ERROR_LOCK_DENIED</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Service is already locked </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="55" column="9" bodyfile="include/bluetooth/audio/csis.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__csis_1ga6ad9df41a6282dbdca7e2860f389cb68" prot="public" static="no">
        <name>BT_CSIS_ERROR_LOCK_RELEASE_DENIED</name>
        <initializer>0x81</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Service is not locked </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="57" column="9" bodyfile="include/bluetooth/audio/csis.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__csis_1gaf89bd1fffc4374209ecce812222e09e9" prot="public" static="no">
        <name>BT_CSIS_ERROR_LOCK_INVAL_VALUE</name>
        <initializer>0x82</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Invalid lock value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="59" column="9" bodyfile="include/bluetooth/audio/csis.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__csis_1ga12fb8640042d9e788f303fa6bf89aacc" prot="public" static="no">
        <name>BT_CSIS_ERROR_SIRK_OOB_ONLY</name>
        <initializer>0x83</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SIRK only available out-of-band </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="61" column="9" bodyfile="include/bluetooth/audio/csis.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__csis_1gacd7a7f4766621bb1f2eb2e4d6029de24" prot="public" static="no">
        <name>BT_CSIS_ERROR_LOCK_ALREADY_GRANTED</name>
        <initializer>0x84</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Client is already owner of the lock </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="63" column="9" bodyfile="include/bluetooth/audio/csis.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__bt__gatt__csis_1gaadd8a3d70fb3864f8e9bf074d651fa84" prot="public" static="no">
        <type>void(*</type>
        <definition>bt_csis_client_discover_cb</definition>
        <argsstring>)(struct bt_csis_client_set_member *member, int err, uint8_t set_count)</argsstring>
        <name>bt_csis_client_discover_cb</name>
        <briefdescription>
<para>Callback for discovering Coordinated Set Identification Services. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>member</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the set member. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>0 on success, or an errno value on error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>set_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of sets on the member. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="250" column="9" bodyfile="include/bluetooth/audio/csis.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__csis_1gad30c15a6875ce5ee2b65a33775b6b039" prot="public" static="no">
        <type>void(*</type>
        <definition>bt_csis_client_lock_set_cb</definition>
        <argsstring>)(int err)</argsstring>
        <name>bt_csis_client_lock_set_cb</name>
        <briefdescription>
<para>Callback for locking a set across one or more devices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>0 on success, or an errno value on error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="269" column="9" bodyfile="include/bluetooth/audio/csis.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__csis_1ga1efad8ba228ce92a2bdae7ac8c2a2a95" prot="public" static="no">
        <type>void(*</type>
        <definition>bt_csis_client_lock_changed_cb</definition>
        <argsstring>)(struct bt_csis_client_csis_inst *inst, bool locked)</argsstring>
        <name>bt_csis_client_lock_changed_cb</name>
        <briefdescription>
<para>Callback when the lock value on a set of a connected device changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>The Coordinated Set Identification Service instance that was changed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>locked</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the lock is locked or release.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int Return 0 on success, or an errno value on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="281" column="9" bodyfile="include/bluetooth/audio/csis.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__csis_1gac46c1a9ec28447d6edd4c5ea3084fea1" prot="public" static="no">
        <type>void(*</type>
        <definition>bt_csis_client_lock_state_read_cb</definition>
        <argsstring>)(const struct bt_csis_client_set_info *set_info, int err, bool locked)</argsstring>
        <name>bt_csis_client_lock_state_read_cb</name>
        <briefdescription>
<para>Callback for <ref refid="group__bt__gatt__csis_1gaafcd8ca875ecb3da2494e6896e7482f6" kindref="member">bt_csis_client_get_lock_state()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>If any of the set members supplied to <ref refid="group__bt__gatt__csis_1gaafcd8ca875ecb3da2494e6896e7482f6" kindref="member">bt_csis_client_get_lock_state()</ref> is in the locked state, this will be called with <computeroutput>locked</computeroutput> true. If any set member is in the locked state, the remaining (if any) won&apos;t be read. Likewise, if any error occurs, the procedure will also be aborted.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>set_info</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the a specific set_info struct. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>locked</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the lock is locked or release. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="297" column="9" bodyfile="include/bluetooth/audio/csis.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__gatt__csis_1ga10487787fab675a1154411e961003718" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * bt_csis_svc_decl_get</definition>
        <argsstring>(const struct bt_csis *csis)</argsstring>
        <name>bt_csis_svc_decl_get</name>
        <param>
          <type>const struct bt_csis *</type>
          <declname>csis</declname>
        </param>
        <briefdescription>
<para>Get the service declaration attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>The first service attribute can be included in any other GATT service.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>csis</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Coordinated Set Identification Service.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The first CSIS attribute instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="145" column="6" declfile="include/bluetooth/audio/csis.h" declline="145" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__csis_1ga786fc39e051e2446dc5d1a58e2a1f1ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_csis_register</definition>
        <argsstring>(const struct bt_csis_register_param *param, struct bt_csis **csis)</argsstring>
        <name>bt_csis_register</name>
        <param>
          <type>const struct <ref refid="structbt__csis__register__param" kindref="compound">bt_csis_register_param</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>struct bt_csis **</type>
          <declname>csis</declname>
        </param>
        <briefdescription>
<para>Register a Coordinated Set Identification Service instance. </para>
        </briefdescription>
        <detaileddescription>
<para>This will register and enable the service and make it discoverable by clients.</para>
<para>This shall only be done as a server.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinated Set Identification Service register parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">csis</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the registered Coordinated Set Identification Service.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="161" column="5" declfile="include/bluetooth/audio/csis.h" declline="161" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__csis_1gabb4536276332fcbed2ac554a578f9676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bt_csis_print_sirk</definition>
        <argsstring>(const struct bt_csis *csis)</argsstring>
        <name>bt_csis_print_sirk</name>
        <param>
          <type>const struct bt_csis *</type>
          <declname>csis</declname>
        </param>
        <briefdescription>
<para>Print the SIRK to the debug output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>csis</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Coordinated Set Identification Service. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="169" column="6" declfile="include/bluetooth/audio/csis.h" declline="169" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__csis_1ga85d13058d172411f8e8539dcdb224189" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_csis_advertise</definition>
        <argsstring>(struct bt_csis *csis, bool enable)</argsstring>
        <name>bt_csis_advertise</name>
        <param>
          <type>struct bt_csis *</type>
          <declname>csis</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Starts advertising the Resolveable Set Identifier value. </para>
        </briefdescription>
        <detaileddescription>
<para>This cannot be used with other connectable advertising sets.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>csis</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Coordinated Set Identification Service. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>If true start advertising, if false stop advertising</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int 0 if on success, errno on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="181" column="5" declfile="include/bluetooth/audio/csis.h" declline="181" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__csis_1gaa5f8165c01fecf1d4061f7148aa58c39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_csis_lock</definition>
        <argsstring>(struct bt_csis *csis, bool lock, bool force)</argsstring>
        <name>bt_csis_lock</name>
        <param>
          <type>struct bt_csis *</type>
          <declname>csis</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>lock</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Locks a specific Coordinated Set Identification Service instance on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>csis</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Coordinated Set Identification Service. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lock</parametername>
</parameternamelist>
<parameterdescription>
<para>If true lock the set, if false release the set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>This argument only have meaning when <computeroutput>lock</computeroutput> is false (release) and will force release the lock, regardless of who took the lock.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="194" column="5" declfile="include/bluetooth/audio/csis.h" declline="194" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__csis_1ga62cb1673bd834617eca622da5f2cbb18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_csis_client_discover</definition>
        <argsstring>(struct bt_csis_client_set_member *member)</argsstring>
        <name>bt_csis_client_discover</name>
        <param>
          <type>struct <ref refid="structbt__csis__client__set__member" kindref="compound">bt_csis_client_set_member</ref> *</type>
          <declname>member</declname>
        </param>
        <briefdescription>
<para>Initialise the csis_client instance for a connection. This will do a discovery on the device and prepare the instance for following commands. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>member</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a set member struct to store discovery results in.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int Return 0 on success, or an errno value on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="261" column="5" declfile="include/bluetooth/audio/csis.h" declline="261" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__csis_1gaa5625568454e503fc3257c706fc6d567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool bt_csis_client_is_set_member</definition>
        <argsstring>(uint8_t set_sirk[16], struct bt_data *data)</argsstring>
        <name>bt_csis_client_is_set_member</name>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>set_sirk</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>struct <ref refid="structbt__data" kindref="compound">bt_data</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Check if advertising data indicates a set member. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>set_sirk</parametername>
</parameternamelist>
<parameterdescription>
<para>The SIRK of the set to check against </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The advertising data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the advertising data indicates a set member, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="319" column="6" declfile="include/bluetooth/audio/csis.h" declline="319" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__csis_1gacaddcb85416980479b99dd24379f652c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bt_csis_client_register_cb</definition>
        <argsstring>(struct bt_csis_client_cb *cb)</argsstring>
        <name>bt_csis_client_register_cb</name>
        <param>
          <type>struct <ref refid="structbt__csis__client__cb" kindref="compound">bt_csis_client_cb</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Registers callbacks for csis_client. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the callback structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="327" column="6" declfile="include/bluetooth/audio/csis.h" declline="327" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__csis_1gaafcd8ca875ecb3da2494e6896e7482f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_csis_client_get_lock_state</definition>
        <argsstring>(const struct bt_csis_client_set_member **members, uint8_t count, const struct bt_csis_client_set_info *set_info)</argsstring>
        <name>bt_csis_client_get_lock_state</name>
        <param>
          <type>const struct <ref refid="structbt__csis__client__set__member" kindref="compound">bt_csis_client_set_member</ref> **</type>
          <declname>members</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>count</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__csis__client__set__info" kindref="compound">bt_csis_client_set_info</ref> *</type>
          <declname>set_info</declname>
        </param>
        <briefdescription>
<para>Check if an array of set members are unlocked. </para>
        </briefdescription>
        <detaileddescription>
<para>This will read the set lock value on all members and respond with a single state.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>members</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of set members to check lock state for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of set members in <computeroutput>members</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>set_info</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the a specific set_info struct, as a member may be part of multiple sets.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return 0 on success, or an errno value on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="342" column="5" declfile="include/bluetooth/audio/csis.h" declline="342" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__csis_1ga37ecd5b0e38eb595732e3e1b63ccea65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_csis_client_lock</definition>
        <argsstring>(const struct bt_csis_client_set_member **members, uint8_t count, const struct bt_csis_client_set_info *set_info)</argsstring>
        <name>bt_csis_client_lock</name>
        <param>
          <type>const struct <ref refid="structbt__csis__client__set__member" kindref="compound">bt_csis_client_set_member</ref> **</type>
          <declname>members</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>count</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__csis__client__set__info" kindref="compound">bt_csis_client_set_info</ref> *</type>
          <declname>set_info</declname>
        </param>
        <briefdescription>
<para>Lock an array of set members. </para>
        </briefdescription>
        <detaileddescription>
<para>The members will be locked starting from lowest rank going up.</para>
<para>TODO: If locking fails, the already locked members will not be unlocked.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>members</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of set members to lock. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of set members in <computeroutput>members</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>set_info</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the a specific set_info struct, as a member may be part of multiple sets.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return 0 on success, or an errno value on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="360" column="5" declfile="include/bluetooth/audio/csis.h" declline="360" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__csis_1gaa23ccf66df965bd49d1e2a9ea331a267" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_csis_client_release</definition>
        <argsstring>(const struct bt_csis_client_set_member **members, uint8_t count, const struct bt_csis_client_set_info *set_info)</argsstring>
        <name>bt_csis_client_release</name>
        <param>
          <type>const struct <ref refid="structbt__csis__client__set__member" kindref="compound">bt_csis_client_set_member</ref> **</type>
          <declname>members</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>count</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__csis__client__set__info" kindref="compound">bt_csis_client_set_info</ref> *</type>
          <declname>set_info</declname>
        </param>
        <briefdescription>
<para>Release an array of set members. </para>
        </briefdescription>
        <detaileddescription>
<para>The members will be released starting from highest rank going down.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>members</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of set members to lock. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of set members in <computeroutput>members</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>set_info</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the a specific set_info struct, as a member may be part of multiple sets.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return 0 on success, or an errno value on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/csis.h" line="376" column="5" declfile="include/bluetooth/audio/csis.h" declline="376" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_SUBSYS_BLUETOOTH_AUDIO_CSIS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_SUBSYS_BLUETOOTH_AUDIO_CSIS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdbool_8h" kindref="compound">stdbool.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="conn_8h" kindref="compound">bluetooth/conn.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="group__bt__gatt__csis_1gae682d9f84db9c5f50c7e7733ad1d85e2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSIS_CLIENT_DISCOVER_TIMER_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_SECONDS(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_BT_CSIS_CLIENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_CSIS_CLIENT_MAX_CSIS_INSTANCES<sp/>CONFIG_BT_CSIS_CLIENT_MAX_CSIS_INSTANCES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="group__bt__gatt__csis_1ga50770e479146ce74e511cab03e633566" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_CSIS_CLIENT_MAX_CSIS_INSTANCES<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_BT_CSIS_CLIENT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="group__bt__gatt__csis_1ga4ddba4cc91101f6320e13de81840cb90" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_CSIS_MINIMUM_SET_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="group__bt__gatt__csis_1ga5649a8ff70dab87940d507c9b3c5eeea" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_CSIS_READ_SIRK_REQ_RSP_ACCEPT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="group__bt__gatt__csis_1ga542f2d2ff2baa40102d3628c316a9c5d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_CSIS_READ_SIRK_REQ_RSP_ACCEPT_ENC<sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="group__bt__gatt__csis_1gad67f609de3a6a4f1bdb94012a5f2a692" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_CSIS_READ_SIRK_REQ_RSP_REJECT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group__bt__gatt__csis_1gabbf62db1c8e3b6264f877741dc3c2431" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_CSIS_READ_SIRK_REQ_RSP_OOB_ONLY<sp/><sp/><sp/><sp/><sp/><sp/>0x03</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="group__bt__gatt__csis_1gad745b5dfe8bd40f456374905eec4910c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_CSIS_SET_SIRK_SIZE<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Coordinate<sp/>Set<sp/>Identification<sp/>Service<sp/>Error<sp/>codes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="group__bt__gatt__csis_1ga9cc39c83836fabfd4cd467c358f848a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_CSIS_ERROR_LOCK_DENIED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="group__bt__gatt__csis_1ga6ad9df41a6282dbdca7e2860f389cb68" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_CSIS_ERROR_LOCK_RELEASE_DENIED<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x81</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="group__bt__gatt__csis_1gaf89bd1fffc4374209ecce812222e09e9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_CSIS_ERROR_LOCK_INVAL_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x82</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group__bt__gatt__csis_1ga12fb8640042d9e788f303fa6bf89aacc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_CSIS_ERROR_SIRK_OOB_ONLY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x83</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group__bt__gatt__csis_1gacd7a7f4766621bb1f2eb2e4d6029de24" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_CSIS_ERROR_LOCK_ALREADY_GRANTED<sp/><sp/><sp/><sp/><sp/><sp/>0x84</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_csis;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="structbt__csis__cb" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__csis__cb" kindref="compound">bt_csis_cb</ref><sp/>{</highlight></codeline>
<codeline lineno="80" refid="structbt__csis__cb_1a41dae8692221937afe271340cc30a682" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structbt__csis__cb_1a41dae8692221937afe271340cc30a682" kindref="member">lock_changed</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_conn<sp/>*conn,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_csis<sp/>*csis,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>locked);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="structbt__csis__cb_1a3b0e7fc402b391b888af88b2f813c800" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>(*<ref refid="structbt__csis__cb_1a3b0e7fc402b391b888af88b2f813c800" kindref="member">sirk_read_req</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_conn<sp/>*conn,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_csis<sp/>*csis);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="structbt__csis__register__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__csis__register__param" kindref="compound">bt_csis_register_param</ref><sp/>{</highlight></codeline>
<codeline lineno="106" refid="structbt__csis__register__param_1a915213ebc0bc976653253743856aef4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__csis__register__param_1a915213ebc0bc976653253743856aef4b" kindref="member">set_size</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="structbt__csis__register__param_1a06d170dd6d306fb4d67bacc3e1b6f210" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__csis__register__param_1a06d170dd6d306fb4d67bacc3e1b6f210" kindref="member">set_sirk</ref>[<ref refid="group__bt__gatt__csis_1gad745b5dfe8bd40f456374905eec4910c" kindref="member">BT_CSIS_SET_SIRK_SIZE</ref>];</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="structbt__csis__register__param_1a3b0b6095696ba341f15e09fa02907922" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structbt__csis__register__param_1a3b0b6095696ba341f15e09fa02907922" kindref="member">lockable</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="structbt__csis__register__param_1a0f1ae99a88321cb65ab5b8ccb70913ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__csis__register__param_1a0f1ae99a88321cb65ab5b8ccb70913ee" kindref="member">rank</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="structbt__csis__register__param_1a5531cb8383c0ca2449b846b2bce3a657" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__csis__cb" kindref="compound">bt_csis_cb</ref><sp/>*<ref refid="structbt__csis__register__param_1a5531cb8383c0ca2449b846b2bce3a657" kindref="member">cb</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="group__bt__gatt__csis_1ga10487787fab675a1154411e961003718" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__bt__gatt__csis_1ga10487787fab675a1154411e961003718" kindref="member">bt_csis_svc_decl_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_csis<sp/>*csis);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="group__bt__gatt__csis_1ga786fc39e051e2446dc5d1a58e2a1f1ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__csis_1ga786fc39e051e2446dc5d1a58e2a1f1ec" kindref="member">bt_csis_register</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__csis__register__param" kindref="compound">bt_csis_register_param</ref><sp/>*param,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_csis<sp/>**csis);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="group__bt__gatt__csis_1gabb4536276332fcbed2ac554a578f9676" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__csis_1gabb4536276332fcbed2ac554a578f9676" kindref="member">bt_csis_print_sirk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_csis<sp/>*csis);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="group__bt__gatt__csis_1ga85d13058d172411f8e8539dcdb224189" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__csis_1ga85d13058d172411f8e8539dcdb224189" kindref="member">bt_csis_advertise</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_csis<sp/>*csis,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="group__bt__gatt__csis_1gaa5f8165c01fecf1d4061f7148aa58c39" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__csis_1gaa5f8165c01fecf1d4061f7148aa58c39" kindref="member">bt_csis_lock</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_csis<sp/>*csis,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="spinlock__error__case_8c_1a16a34769989160878f34fc5cb06ec9f5" kindref="member">lock</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="structbt__csis__client__set__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__csis__client__set__info" kindref="compound">bt_csis_client_set_info</ref><sp/>{</highlight></codeline>
<codeline lineno="204" refid="structbt__csis__client__set__info_1a0c511ace69316737ff4e1120c345e273" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__csis__client__set__info_1a0c511ace69316737ff4e1120c345e273" kindref="member">set_sirk</ref>[<ref refid="group__bt__gatt__csis_1gad745b5dfe8bd40f456374905eec4910c" kindref="member">BT_CSIS_SET_SIRK_SIZE</ref>];</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="structbt__csis__client__set__info_1aa5699bc58d6eaebfca5fe9c81ece8b7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__csis__client__set__info_1aa5699bc58d6eaebfca5fe9c81ece8b7b" kindref="member">set_size</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="structbt__csis__client__set__info_1ad561118abb94b89767a1abc699fcb79d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__csis__client__set__info_1ad561118abb94b89767a1abc699fcb79d" kindref="member">rank</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="structbt__csis__client__csis__inst" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__csis__client__csis__inst" kindref="compound">bt_csis_client_csis_inst</ref><sp/>{</highlight></codeline>
<codeline lineno="228" refid="structbt__csis__client__csis__inst_1abe9a0736d601822bfe32fb3eccc7e17b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__csis__client__set__info" kindref="compound">bt_csis_client_set_info</ref><sp/><ref refid="structbt__csis__client__csis__inst_1abe9a0736d601822bfe32fb3eccc7e17b" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="structbt__csis__client__csis__inst_1a68807dbfdfb453482ddaeabc20c5bc18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_csis<sp/>*<ref refid="structbt__csis__client__csis__inst_1a68807dbfdfb453482ddaeabc20c5bc18" kindref="member">csis</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="structbt__csis__client__set__member" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__csis__client__set__member" kindref="compound">bt_csis_client_set_member</ref><sp/>{</highlight></codeline>
<codeline lineno="237" refid="structbt__csis__client__set__member_1a8d7e055a41db47c5d4290df3822b016b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_conn<sp/>*<ref refid="structbt__csis__client__set__member_1a8d7e055a41db47c5d4290df3822b016b" kindref="member">conn</ref>;</highlight></codeline>
<codeline lineno="239" refid="structbt__csis__client__set__member_1ac588a1971d696e9409a29faa4ead2e5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__csis__client__csis__inst" kindref="compound">bt_csis_client_csis_inst</ref><sp/><ref refid="structbt__csis__client__set__member_1ac588a1971d696e9409a29faa4ead2e5e" kindref="member">insts</ref>[<ref refid="group__bt__gatt__csis_1ga50770e479146ce74e511cab03e633566" kindref="member">BT_CSIS_CLIENT_MAX_CSIS_INSTANCES</ref>];</highlight></codeline>
<codeline lineno="240"><highlight class="normal">};</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="group__bt__gatt__csis_1gaadd8a3d70fb3864f8e9bf074d651fa84" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__gatt__csis_1gaadd8a3d70fb3864f8e9bf074d651fa84" kindref="member">bt_csis_client_discover_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__csis__client__set__member" kindref="compound">bt_csis_client_set_member</ref><sp/>*member,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>set_count);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="group__bt__gatt__csis_1ga62cb1673bd834617eca622da5f2cbb18" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__csis_1ga62cb1673bd834617eca622da5f2cbb18" kindref="member">bt_csis_client_discover</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__csis__client__set__member" kindref="compound">bt_csis_client_set_member</ref><sp/>*member);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="group__bt__gatt__csis_1gad30c15a6875ce5ee2b65a33775b6b039" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__gatt__csis_1gad30c15a6875ce5ee2b65a33775b6b039" kindref="member">bt_csis_client_lock_set_cb</ref>)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="group__bt__gatt__csis_1ga1efad8ba228ce92a2bdae7ac8c2a2a95" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__gatt__csis_1ga1efad8ba228ce92a2bdae7ac8c2a2a95" kindref="member">bt_csis_client_lock_changed_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__csis__client__csis__inst" kindref="compound">bt_csis_client_csis_inst</ref><sp/>*inst,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>locked);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="group__bt__gatt__csis_1gac46c1a9ec28447d6edd4c5ea3084fea1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__gatt__csis_1gac46c1a9ec28447d6edd4c5ea3084fea1" kindref="member">bt_csis_client_lock_state_read_cb</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__csis__client__set__info" kindref="compound">bt_csis_client_set_info</ref><sp/>*set_info,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>locked);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="structbt__csis__client__cb" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__csis__client__cb" kindref="compound">bt_csis_client_cb</ref><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>callbacks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="structbt__csis__client__cb_1ac65c68819e14b30980ad0e6290fdd18d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__csis_1gad30c15a6875ce5ee2b65a33775b6b039" kindref="member">bt_csis_client_lock_set_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__csis__client__cb_1ac65c68819e14b30980ad0e6290fdd18d" kindref="member">lock_set</ref>;</highlight></codeline>
<codeline lineno="303" refid="structbt__csis__client__cb_1a4ebef6707ada11de1b9b91400fc5be07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__csis_1gad30c15a6875ce5ee2b65a33775b6b039" kindref="member">bt_csis_client_lock_set_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__csis__client__cb_1a4ebef6707ada11de1b9b91400fc5be07" kindref="member">release_set</ref>;</highlight></codeline>
<codeline lineno="304" refid="structbt__csis__client__cb_1a578df30799ffdab95c33ce50f054948e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__csis_1ga1efad8ba228ce92a2bdae7ac8c2a2a95" kindref="member">bt_csis_client_lock_changed_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__csis__client__cb_1a578df30799ffdab95c33ce50f054948e" kindref="member">lock_changed</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Device<sp/>specific<sp/>callbacks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="structbt__csis__client__cb_1a9d041a3cbb15619fcf483de9fe950c48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__csis_1gaadd8a3d70fb3864f8e9bf074d651fa84" kindref="member">bt_csis_client_discover_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__csis__client__cb_1a9d041a3cbb15619fcf483de9fe950c48" kindref="member">discover</ref>;</highlight></codeline>
<codeline lineno="308" refid="structbt__csis__client__cb_1a60b4f92a296ebb6c9b53cc2cdebc2ced" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__csis_1gac46c1a9ec28447d6edd4c5ea3084fea1" kindref="member">bt_csis_client_lock_state_read_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__csis__client__cb_1a60b4f92a296ebb6c9b53cc2cdebc2ced" kindref="member">lock_state_read</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">};</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="group__bt__gatt__csis_1gaa5625568454e503fc3257c706fc6d567" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__csis_1gaa5625568454e503fc3257c706fc6d567" kindref="member">bt_csis_client_is_set_member</ref>(<ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>set_sirk[<ref refid="group__bt__gatt__csis_1gad745b5dfe8bd40f456374905eec4910c" kindref="member">BT_CSIS_SET_SIRK_SIZE</ref>],</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__data" kindref="compound">bt_data</ref><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="group__bt__gatt__csis_1gacaddcb85416980479b99dd24379f652c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__csis_1gacaddcb85416980479b99dd24379f652c" kindref="member">bt_csis_client_register_cb</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__csis__client__cb" kindref="compound">bt_csis_client_cb</ref><sp/>*cb);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="group__bt__gatt__csis_1gaafcd8ca875ecb3da2494e6896e7482f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__csis_1gaafcd8ca875ecb3da2494e6896e7482f6" kindref="member">bt_csis_client_get_lock_state</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__csis__client__set__member" kindref="compound">bt_csis_client_set_member</ref><sp/>**members,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref>,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__csis__client__set__info" kindref="compound">bt_csis_client_set_info</ref><sp/>*set_info);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="group__bt__gatt__csis_1ga37ecd5b0e38eb595732e3e1b63ccea65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__csis_1ga37ecd5b0e38eb595732e3e1b63ccea65" kindref="member">bt_csis_client_lock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__csis__client__set__member" kindref="compound">bt_csis_client_set_member</ref><sp/>**members,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref>,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__csis__client__set__info" kindref="compound">bt_csis_client_set_info</ref><sp/>*set_info);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="group__bt__gatt__csis_1gaa23ccf66df965bd49d1e2a9ea331a267" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__csis_1gaa23ccf66df965bd49d1e2a9ea331a267" kindref="member">bt_csis_client_release</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__csis__client__set__member" kindref="compound">bt_csis_client_set_member</ref><sp/>**members,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref>,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__csis__client__set__info" kindref="compound">bt_csis_client_set_info</ref><sp/>*set_info);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_SUBSYS_BLUETOOTH_AUDIO_CSIS_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/bluetooth/audio/csis.h"/>
  </compounddef>
</doxygen>
