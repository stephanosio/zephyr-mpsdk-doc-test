<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="coap__link__format_8h" kind="file" language="C++">
    <compoundname>coap_link_format.h</compoundname>
    <innerclass refid="structcoap__core__metadata" prot="public">coap_core_metadata</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__coap_1ga09d2c727fc6fc76aa9d908b759a3f40b" prot="public" static="no">
        <name>COAP_WELL_KNOWN_CORE_PATH</name>
        <initializer>	((const char * const[]) { &quot;.well-known&quot;, &quot;core&quot;, NULL })</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This resource should be added before all other resources that should be included in the responses of the .well-known/core resource. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap_link_format.h" line="29" column="9" bodyfile="include/net/coap_link_format.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__coap_1ga3289b384539ddf7bc962c69fbd816e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_well_known_core_get</definition>
        <argsstring>(struct coap_resource *resource, struct coap_packet *request, struct coap_packet *response, uint8_t *data, uint16_t len)</argsstring>
        <name>coap_well_known_core_get</name>
        <param>
          <type>struct <ref refid="structcoap__resource" kindref="compound">coap_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>response</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap_link_format.h" line="32" column="5" declfile="include/net/coap_link_format.h" declline="32" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>CoAP implementation for Zephyr. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_NET_COAP_LINK_FORMAT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_NET_COAP_LINK_FORMAT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="group__coap_1ga09d2c727fc6fc76aa9d908b759a3f40b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COAP_WELL_KNOWN_CORE_PATH<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((const<sp/>char<sp/>*<sp/>const[])<sp/>{<sp/>&quot;.well-known&quot;</highlight><highlight class="normal">,<sp/>&quot;core&quot;,<sp/>NULL<sp/>})</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="group__coap_1ga3289b384539ddf7bc962c69fbd816e65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga3289b384539ddf7bc962c69fbd816e65" kindref="member">coap_well_known_core_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__resource" kindref="compound">coap_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*request,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*response,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>len);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="structcoap__core__metadata" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__core__metadata" kindref="compound">coap_core_metadata</ref><sp/>{</highlight></codeline>
<codeline lineno="43" refid="structcoap__core__metadata_1aeb04ef8b47ecc144dd036007cccd2e59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="structcoap__core__metadata_1aeb04ef8b47ecc144dd036007cccd2e59" kindref="member">attributes</ref>;</highlight></codeline>
<codeline lineno="44" refid="structcoap__core__metadata_1a74e8a533d7f8596498d5d0ce2afc102f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structcoap__core__metadata_1a74e8a533d7f8596498d5d0ce2afc102f" kindref="member">user_data</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_NET_COAP_LINK_FORMAT_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/net/coap_link_format.h"/>
  </compounddef>
</doxygen>
