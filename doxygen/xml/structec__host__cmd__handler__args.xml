<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structec__host__cmd__handler__args" kind="struct" language="C++" prot="public">
    <compoundname>ec_host_cmd_handler_args</compoundname>
    <includes refid="ec__host__cmd_8h" local="no">ec_host_cmd.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structec__host__cmd__handler__args_1a8a9934316fa1003f327e57f00b8e3e2d" prot="public" static="no" mutable="no">
        <type>const void *const</type>
        <definition>const void* const ec_host_cmd_handler_args::input_buf</definition>
        <argsstring></argsstring>
        <name>input_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The incoming data that can be cast to the handlers request type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mgmt/ec_host_cmd.h" line="24" column="18" bodyfile="include/mgmt/ec_host_cmd.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structec__host__cmd__handler__args_1aed87e52aba8a0ac41a5e7d74e0900fdc" prot="public" static="no" mutable="no">
        <type>const <ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>const uint16_t ec_host_cmd_handler_args::input_buf_size</definition>
        <argsstring></argsstring>
        <name>input_buf_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of valid bytes that can be read from <emphasis>input_buf</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mgmt/ec_host_cmd.h" line="26" column="16" bodyfile="include/mgmt/ec_host_cmd.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structec__host__cmd__handler__args_1ab85a40d7156d51dec0cd8de8a64783ec" prot="public" static="no" mutable="no">
        <type>void *const</type>
        <definition>void* const ec_host_cmd_handler_args::output_buf</definition>
        <argsstring></argsstring>
        <name>output_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The data written to this buffer will be send to the host. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mgmt/ec_host_cmd.h" line="28" column="12" bodyfile="include/mgmt/ec_host_cmd.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structec__host__cmd__handler__args_1a1a6f9a7ba7faf810f7095b4c053dd3b2" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t ec_host_cmd_handler_args::output_buf_size</definition>
        <argsstring></argsstring>
        <name>output_buf_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>[in/out] Upon entry, this is the maximum number of bytes that can be written to the <emphasis>output_buf</emphasis>. Upon exit, this should be the number of bytes of <emphasis>output_buf</emphasis> to send to the host. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mgmt/ec_host_cmd.h" line="33" column="10" bodyfile="include/mgmt/ec_host_cmd.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structec__host__cmd__handler__args_1a420e093eeabc6e9c46cf8ea3c2010be6" prot="public" static="no" mutable="no">
        <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>const uint8_t ec_host_cmd_handler_args::version</definition>
        <argsstring></argsstring>
        <name>version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The version of the host command that is being requested. This will be a value that has been static registered as valid for the handler. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mgmt/ec_host_cmd.h" line="37" column="15" bodyfile="include/mgmt/ec_host_cmd.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Arguments passed into every installed host command handler. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/mgmt/ec_host_cmd.h" line="22" column="1" bodyfile="include/mgmt/ec_host_cmd.h" bodystart="22" bodyend="38"/>
    <listofallmembers>
      <member refid="structec__host__cmd__handler__args_1a8a9934316fa1003f327e57f00b8e3e2d" prot="public" virt="non-virtual"><scope>ec_host_cmd_handler_args</scope><name>input_buf</name></member>
      <member refid="structec__host__cmd__handler__args_1aed87e52aba8a0ac41a5e7d74e0900fdc" prot="public" virt="non-virtual"><scope>ec_host_cmd_handler_args</scope><name>input_buf_size</name></member>
      <member refid="structec__host__cmd__handler__args_1ab85a40d7156d51dec0cd8de8a64783ec" prot="public" virt="non-virtual"><scope>ec_host_cmd_handler_args</scope><name>output_buf</name></member>
      <member refid="structec__host__cmd__handler__args_1a1a6f9a7ba7faf810f7095b4c053dd3b2" prot="public" virt="non-virtual"><scope>ec_host_cmd_handler_args</scope><name>output_buf_size</name></member>
      <member refid="structec__host__cmd__handler__args_1a420e093eeabc6e9c46cf8ea3c2010be6" prot="public" virt="non-virtual"><scope>ec_host_cmd_handler_args</scope><name>version</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
