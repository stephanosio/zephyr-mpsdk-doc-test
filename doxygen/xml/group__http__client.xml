<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__http__client" kind="group">
    <compoundname>http_client</compoundname>
    <title>HTTP client API</title>
    <innerclass refid="structhttp__response" prot="public">http_response</innerclass>
    <innerclass refid="structhttp__client__internal__data" prot="public">http_client_internal_data</innerclass>
    <innerclass refid="structhttp__request" prot="public">http_request</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__http__client_1ga04fc31de51404e35b3dfab6261bb8e6d" prot="public" static="no" strong="no">
        <type></type>
        <name>http_final_call</name>
        <enumvalue id="group__http__client_1gga04fc31de51404e35b3dfab6261bb8e6da3f75fb095e40bfb4efd2c16059093359" prot="public">
          <name>HTTP_DATA_MORE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__http__client_1gga04fc31de51404e35b3dfab6261bb8e6da428633ff4a67c00c67fb5cbc23269d61" prot="public">
          <name>HTTP_DATA_FINAL</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/http_client.h" line="40" column="1" bodyfile="include/net/http_client.h" bodystart="40" bodyend="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__http__client_1ga303918010a594ce52e08dc9c9c66ba48" prot="public" static="no">
        <type>int(*</type>
        <definition>http_payload_cb_t</definition>
        <argsstring>)(int sock, struct http_request *req, void *user_data)</argsstring>
        <name>http_payload_cb_t</name>
        <briefdescription>
<para>Callback used when data needs to be sent to the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sock</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket id of the connection </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>HTTP request information </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>User specified data specified in <ref refid="group__http__client_1gaa38b6efb03f88d6959273a41b6acac81" kindref="member">http_client_req()</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;=0 amount of data sent, in this case <ref refid="group__http__client_1gaa38b6efb03f88d6959273a41b6acac81" kindref="member">http_client_req()</ref> should continue sending data, &lt;0 if <ref refid="group__http__client_1gaa38b6efb03f88d6959273a41b6acac81" kindref="member">http_client_req()</ref> should return the error code to the caller. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/http_client.h" line="61" column="9" bodyfile="include/net/http_client.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__http__client_1gad34656b7c3e6c2e77016b0613f1b4661" prot="public" static="no">
        <type>int(*</type>
        <definition>http_header_cb_t</definition>
        <argsstring>)(int sock, struct http_request *req, void *user_data)</argsstring>
        <name>http_header_cb_t</name>
        <briefdescription>
<para>Callback can be used if application wants to construct additional HTTP headers when the HTTP request is sent. Usage of this is optional. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sock</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket id of the connection </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>HTTP request information </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>User specified data specified in <ref refid="group__http__client_1gaa38b6efb03f88d6959273a41b6acac81" kindref="member">http_client_req()</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;=0 amount of data sent, in this case <ref refid="group__http__client_1gaa38b6efb03f88d6959273a41b6acac81" kindref="member">http_client_req()</ref> should continue sending data, &lt;0 if <ref refid="group__http__client_1gaa38b6efb03f88d6959273a41b6acac81" kindref="member">http_client_req()</ref> should return the error code to the caller. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/http_client.h" line="79" column="9" bodyfile="include/net/http_client.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__http__client_1ga89d05f5fdc0d4fa3a7cea390c027f2f8" prot="public" static="no">
        <type>void(*</type>
        <definition>http_response_cb_t</definition>
        <argsstring>)(struct http_response *rsp, enum http_final_call final_data, void *user_data)</argsstring>
        <name>http_response_cb_t</name>
        <briefdescription>
<para>Callback used when data is received from the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>HTTP response information </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>final_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Does this data buffer contain all the data or is there still more data to come. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>User specified data specified in <ref refid="group__http__client_1gaa38b6efb03f88d6959273a41b6acac81" kindref="member">http_client_req()</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/http_client.h" line="92" column="9" bodyfile="include/net/http_client.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__http__client_1gaa38b6efb03f88d6959273a41b6acac81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int http_client_req</definition>
        <argsstring>(int sock, struct http_request *req, int32_t timeout, void *user_data)</argsstring>
        <name>http_client_req</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>struct <ref refid="structhttp__request" kindref="compound">http_request</ref> *</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Do a HTTP request. The callback is called when data is received from the HTTP server. The caller must have created a connection to the server before calling this function so <ref refid="posix_2sys_2socket_8h_1adfa930dd3c38f6c287d64e1680dbf386" kindref="member">connect()</ref> call must have be done successfully for the socket. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sock</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket id of the connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>HTTP request information </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Max timeout to wait for the data. The timeout value cannot be 0 as there would be no time to receive the data. The timeout value is in milliseconds. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>User specified data that is passed to the callback.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&lt;0 if error, &gt;=0 amount of data sent to the server </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/http_client.h" line="290" column="5" declfile="include/net/http_client.h" declline="290" declcolumn="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__http__client_1gaca074be7a96314dfc8fd39e49b563977" prot="public" static="no">
        <name>HTTP_CRLF</name>
        <initializer>&quot;\r\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/http_client.h" line="32" column="9" bodyfile="include/net/http_client.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__http__client_1ga0a5dd25385eb7e6e76c39acc9331a388" prot="public" static="no">
        <name>HTTP_STATUS_STR_SIZE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/http_client.h" line="36" column="9" bodyfile="include/net/http_client.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>HTTP client API. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
