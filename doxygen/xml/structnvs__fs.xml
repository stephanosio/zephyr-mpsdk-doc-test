<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structnvs__fs" kind="struct" language="C++" prot="public">
    <compoundname>nvs_fs</compoundname>
    <includes refid="nvs_8h" local="no">nvs.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnvs__fs_1a793b43b069d5e7a42963d84423ab5717" prot="public" static="no" mutable="no">
        <type>off_t</type>
        <definition>off_t nvs_fs::offset</definition>
        <argsstring></argsstring>
        <name>offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/nvs.h" line="48" column="7" bodyfile="include/fs/nvs.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnvs__fs_1aba5caa7709d58fa018cbb91db085f140" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t nvs_fs::ate_wra</definition>
        <argsstring></argsstring>
        <name>ate_wra</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/nvs.h" line="49" column="10" bodyfile="include/fs/nvs.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnvs__fs_1ac6bc3719e803f27fc20de5ebc63d7707" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t nvs_fs::data_wra</definition>
        <argsstring></argsstring>
        <name>data_wra</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/nvs.h" line="50" column="10" bodyfile="include/fs/nvs.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnvs__fs_1a036af291edc8d389b56fcb532e6738df" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t nvs_fs::sector_size</definition>
        <argsstring></argsstring>
        <name>sector_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/nvs.h" line="51" column="10" bodyfile="include/fs/nvs.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnvs__fs_1abf8ffaea29e3357ca6e897902fd49a63" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t nvs_fs::sector_count</definition>
        <argsstring></argsstring>
        <name>sector_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/nvs.h" line="52" column="10" bodyfile="include/fs/nvs.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnvs__fs_1a2a167bd6a1698d2070dbe65b669ba0f4" prot="public" static="no" mutable="no">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool nvs_fs::ready</definition>
        <argsstring></argsstring>
        <name>ready</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/nvs.h" line="53" column="6" bodyfile="include/fs/nvs.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnvs__fs_1a6f49bb17819e3b78e0b3c1a1bc578f09" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__mutex" kindref="compound">k_mutex</ref></type>
        <definition>struct k_mutex nvs_fs::nvs_lock</definition>
        <argsstring></argsstring>
        <name>nvs_lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/nvs.h" line="54" column="14" bodyfile="include/fs/nvs.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnvs__fs_1a02381974223dfbd22fe50b2cfecb7da2" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
        <definition>const struct device* nvs_fs::flash_device</definition>
        <argsstring></argsstring>
        <name>flash_device</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/nvs.h" line="55" column="19" bodyfile="include/fs/nvs.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnvs__fs_1a34f769be6fed7c81254501af207147df" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structflash__parameters" kindref="compound">flash_parameters</ref> *</type>
        <definition>const struct flash_parameters* nvs_fs::flash_parameters</definition>
        <argsstring></argsstring>
        <name>flash_parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fs/nvs.h" line="56" column="29" bodyfile="include/fs/nvs.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Non-volatile Storage File system structure. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>File system offset in flash </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ate_wra</parametername>
</parameternamelist>
<parameterdescription>
<para>Allocation table entry write address. Addresses are stored as uint32_t: high 2 bytes correspond to the sector, low 2 bytes are the offset in the sector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_wra</parametername>
</parameternamelist>
<parameterdescription>
<para>Data write address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sector_size</parametername>
</parameternamelist>
<parameterdescription>
<para>File system is split into sectors, each sector must be multiple of pagesize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sector_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of sectors in the file systems </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ready</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating if the filesystem is initialized </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nvs_lock</parametername>
</parameternamelist>
<parameterdescription>
<para>Mutex </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flash_device</parametername>
</parameternamelist>
<parameterdescription>
<para>Flash Device runtime structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="structflash__parameters" kindref="compound">flash_parameters</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Flash memory parameters structure </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="7">
        <label>__thread_entry</label>
      </node>
      <node id="6">
        <label>_callee_saved</label>
      </node>
      <node id="9">
        <label>_mem_domain_info</label>
      </node>
      <node id="14">
        <label>_thread_arch</label>
      </node>
      <node id="5">
        <label>_thread_base</label>
      </node>
      <node id="8">
        <label>_thread_stack_info</label>
      </node>
      <node id="3">
        <label>_wait_q_t</label>
      </node>
      <node id="15">
        <label>device</label>
        <link refid="structdevice"/>
        <childnode refid="16" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>device_state</label>
        <link refid="structdevice__state"/>
      </node>
      <node id="17">
        <label>flash_parameters</label>
        <link refid="structflash__parameters"/>
      </node>
      <node id="11">
        <label>k_heap</label>
        <link refid="structk__heap"/>
        <childnode refid="12" relation="usage">
          <edgelabel>heap</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>k_mutex</label>
        <link refid="structk__mutex"/>
        <childnode refid="3" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>k_spinlock</label>
        <link refid="structk__spinlock"/>
      </node>
      <node id="4">
        <label>k_thread</label>
        <link refid="structk__thread"/>
        <childnode refid="5" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>callee_saved</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>join_queue</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>entry</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>next_thread</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>stack_info</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>mem_domain_info</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>stack_obj</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>resource_pool</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>arch</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>nvs_fs</label>
        <link refid="structnvs__fs"/>
        <childnode refid="2" relation="usage">
          <edgelabel>nvs_lock</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>flash_device</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>flash_parameters</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>sys_heap</label>
        <link refid="structsys__heap"/>
      </node>
      <node id="10">
        <label>z_thread_stack_element</label>
      </node>
    </collaborationgraph>
    <location file="include/fs/nvs.h" line="47" column="1" bodyfile="include/fs/nvs.h" bodystart="47" bodyend="57"/>
    <listofallmembers>
      <member refid="structnvs__fs_1aba5caa7709d58fa018cbb91db085f140" prot="public" virt="non-virtual"><scope>nvs_fs</scope><name>ate_wra</name></member>
      <member refid="structnvs__fs_1ac6bc3719e803f27fc20de5ebc63d7707" prot="public" virt="non-virtual"><scope>nvs_fs</scope><name>data_wra</name></member>
      <member refid="structnvs__fs_1a02381974223dfbd22fe50b2cfecb7da2" prot="public" virt="non-virtual"><scope>nvs_fs</scope><name>flash_device</name></member>
      <member refid="structnvs__fs_1a34f769be6fed7c81254501af207147df" prot="public" virt="non-virtual"><scope>nvs_fs</scope><name>flash_parameters</name></member>
      <member refid="structnvs__fs_1a6f49bb17819e3b78e0b3c1a1bc578f09" prot="public" virt="non-virtual"><scope>nvs_fs</scope><name>nvs_lock</name></member>
      <member refid="structnvs__fs_1a793b43b069d5e7a42963d84423ab5717" prot="public" virt="non-virtual"><scope>nvs_fs</scope><name>offset</name></member>
      <member refid="structnvs__fs_1a2a167bd6a1698d2070dbe65b669ba0f4" prot="public" virt="non-virtual"><scope>nvs_fs</scope><name>ready</name></member>
      <member refid="structnvs__fs_1abf8ffaea29e3357ca6e897902fd49a63" prot="public" virt="non-virtual"><scope>nvs_fs</scope><name>sector_count</name></member>
      <member refid="structnvs__fs_1a036af291edc8d389b56fcb532e6738df" prot="public" virt="non-virtual"><scope>nvs_fs</scope><name>sector_size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
