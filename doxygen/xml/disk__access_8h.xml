<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="disk__access_8h" kind="file" language="C++">
    <compoundname>disk_access.h</compoundname>
    <includes refid="disk_8h" local="no">drivers/disk.h</includes>
    <incdepgraph>
      <node id="2">
        <label>drivers/disk.h</label>
        <link refid="disk_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/storage/disk_access.h</label>
        <link refid="disk__access_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="4">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="6">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="3">
        <label>kernel.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__disk__access__interface_1gaba3fead8c0ce65945b440bf824fd4144" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int disk_access_init</definition>
        <argsstring>(const char *pdrv)</argsstring>
        <name>disk_access_init</name>
        <param>
          <type>const char *</type>
          <declname>pdrv</declname>
        </param>
        <briefdescription>
<para>perform any initialization </para>
        </briefdescription>
        <detaileddescription>
<para>This call is made by the consumer before doing any IO calls so that the disk or the backing device can do any initialization.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pdrv</parametername>
</parameternamelist>
<parameterdescription>
<para>Disk name</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative errno code on fail </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage/disk_access.h" line="39" column="5" declfile="include/storage/disk_access.h" declline="39" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__disk__access__interface_1gac5348a854fe68a607672118c91346133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int disk_access_status</definition>
        <argsstring>(const char *pdrv)</argsstring>
        <name>disk_access_status</name>
        <param>
          <type>const char *</type>
          <declname>pdrv</declname>
        </param>
        <briefdescription>
<para>Get the status of disk. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is used to get the status of the disk</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pdrv</parametername>
</parameternamelist>
<parameterdescription>
<para>Disk name</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DISK_STATUS_OK or other DISK_STATUS_*s </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage/disk_access.h" line="50" column="5" declfile="include/storage/disk_access.h" declline="50" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__disk__access__interface_1ga5152825bf2a70902e65dbc596a944a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int disk_access_read</definition>
        <argsstring>(const char *pdrv, uint8_t *data_buf, uint32_t start_sector, uint32_t num_sector)</argsstring>
        <name>disk_access_read</name>
        <param>
          <type>const char *</type>
          <declname>pdrv</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>data_buf</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>start_sector</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>num_sector</declname>
        </param>
        <briefdescription>
<para>read data from disk </para>
        </briefdescription>
        <detaileddescription>
<para>Function to read data from disk to a memory buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pdrv</parametername>
</parameternamelist>
<parameterdescription>
<para>Disk name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the memory buffer to put data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_sector</parametername>
</parameternamelist>
<parameterdescription>
<para>Start disk sector to read from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_sector</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of disk sectors to read</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative errno code on fail </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage/disk_access.h" line="64" column="5" declfile="include/storage/disk_access.h" declline="64" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__disk__access__interface_1gaa0495600320a71ea9e861fcf19da7184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int disk_access_write</definition>
        <argsstring>(const char *pdrv, const uint8_t *data_buf, uint32_t start_sector, uint32_t num_sector)</argsstring>
        <name>disk_access_write</name>
        <param>
          <type>const char *</type>
          <declname>pdrv</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>data_buf</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>start_sector</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>num_sector</declname>
        </param>
        <briefdescription>
<para>write data to disk </para>
        </briefdescription>
        <detaileddescription>
<para>Function write data from memory buffer to disk.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pdrv</parametername>
</parameternamelist>
<parameterdescription>
<para>Disk name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the memory buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_sector</parametername>
</parameternamelist>
<parameterdescription>
<para>Start disk sector to write to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_sector</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of disk sectors to write</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative errno code on fail </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage/disk_access.h" line="79" column="5" declfile="include/storage/disk_access.h" declline="79" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__disk__access__interface_1ga152d85821d73644fea7ffde27b7c953c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int disk_access_ioctl</definition>
        <argsstring>(const char *pdrv, uint8_t cmd, void *buff)</argsstring>
        <name>disk_access_ioctl</name>
        <param>
          <type>const char *</type>
          <declname>pdrv</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buff</declname>
        </param>
        <briefdescription>
<para>Get/Configure disk parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>Function to get disk parameters and make any special device requests.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pdrv</parametername>
</parameternamelist>
<parameterdescription>
<para>Disk name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>DISK_IOCTL_* code describing the request </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buff</parametername>
</parameternamelist>
<parameterdescription>
<para>Command data buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative errno code on fail </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/storage/disk_access.h" line="93" column="5" declfile="include/storage/disk_access.h" declline="93" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Disk Access layer API. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains APIs for disk access. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016<sp/>Intel<sp/>Corporation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_STORAGE_DISK_ACCESS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_STORAGE_DISK_ACCESS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="disk_8h" kindref="compound">drivers/disk.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="group__disk__access__interface_1gaba3fead8c0ce65945b440bf824fd4144" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__disk__access__interface_1gaba3fead8c0ce65945b440bf824fd4144" kindref="member">disk_access_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pdrv);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group__disk__access__interface_1gac5348a854fe68a607672118c91346133" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__disk__access__interface_1gac5348a854fe68a607672118c91346133" kindref="member">disk_access_status</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pdrv);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="group__disk__access__interface_1ga5152825bf2a70902e65dbc596a944a1b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__disk__access__interface_1ga5152825bf2a70902e65dbc596a944a1b" kindref="member">disk_access_read</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pdrv,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="targets_8c_1ae71d3f44a6939466cb08f83c4e9d517e" kindref="member">data_buf</ref>,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>start_sector,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>num_sector);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="group__disk__access__interface_1gaa0495600320a71ea9e861fcf19da7184" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__disk__access__interface_1gaa0495600320a71ea9e861fcf19da7184" kindref="member">disk_access_write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pdrv,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="targets_8c_1ae71d3f44a6939466cb08f83c4e9d517e" kindref="member">data_buf</ref>,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>start_sector,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>num_sector);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="group__disk__access__interface_1ga152d85821d73644fea7ffde27b7c953c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__disk__access__interface_1ga152d85821d73644fea7ffde27b7c953c" kindref="member">disk_access_ioctl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pdrv,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__ft8xx__reference__api_1gacde1ca3945cbe6c828f65051c5c3a615" kindref="member">cmd</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buff);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_STORAGE_DISK_ACCESS_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/storage/disk_access.h"/>
  </compounddef>
</doxygen>
