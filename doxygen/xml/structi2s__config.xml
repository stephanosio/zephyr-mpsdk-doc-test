<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structi2s__config" kind="struct" language="C++" prot="public">
    <compoundname>i2s_config</compoundname>
    <includes refid="i2s_8h" local="no">i2s.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structi2s__config_1a5a38a75f0b4a3356ed85495fb45d0cd2" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t i2s_config::word_size</definition>
        <argsstring></argsstring>
        <name>word_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/i2s.h" line="302" column="9" bodyfile="include/drivers/i2s.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structi2s__config_1acd9ff8b9a0e79e95a8deb19df145478d" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t i2s_config::channels</definition>
        <argsstring></argsstring>
        <name>channels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/i2s.h" line="303" column="9" bodyfile="include/drivers/i2s.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structi2s__config_1a9ab2e8fa330473be99ce0713aec60daf" prot="public" static="no" mutable="no">
        <type><ref refid="group__i2s__interface_1ga0939a3ba04a233d9d637fba8a42b0bbb" kindref="member">i2s_fmt_t</ref></type>
        <definition>i2s_fmt_t i2s_config::format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/i2s.h" line="304" column="11" bodyfile="include/drivers/i2s.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structi2s__config_1a56a9caaf8133ced8e47e3699e322fdab" prot="public" static="no" mutable="no">
        <type><ref refid="group__i2s__interface_1gad0ca475f9bf5edeecc7de65b4f56c119" kindref="member">i2s_opt_t</ref></type>
        <definition>i2s_opt_t i2s_config::options</definition>
        <argsstring></argsstring>
        <name>options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/i2s.h" line="305" column="11" bodyfile="include/drivers/i2s.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structi2s__config_1ab5b0556fcd113c6c645e265af4846b45" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t i2s_config::frame_clk_freq</definition>
        <argsstring></argsstring>
        <name>frame_clk_freq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/i2s.h" line="306" column="10" bodyfile="include/drivers/i2s.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structi2s__config_1a11991601fa180ead06a23b90a58136ff" prot="public" static="no" mutable="no">
        <type>struct k_mem_slab *</type>
        <definition>struct k_mem_slab* i2s_config::mem_slab</definition>
        <argsstring></argsstring>
        <name>mem_slab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/i2s.h" line="307" column="17" bodyfile="include/drivers/i2s.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structi2s__config_1a62f504e954fc42c343d142513bbaf4ef" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t i2s_config::block_size</definition>
        <argsstring></argsstring>
        <name>block_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/i2s.h" line="308" column="8" bodyfile="include/drivers/i2s.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structi2s__config_1a9bf6c6cb96cc9c3acd8efc3fad0cbca9" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
        <definition>int32_t i2s_config::timeout</definition>
        <argsstring></argsstring>
        <name>timeout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/i2s.h" line="309" column="9" bodyfile="include/drivers/i2s.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface configuration options. </para>
    </briefdescription>
    <detaileddescription>
<para>Memory slab pointed to by the mem_slab field has to be defined and initialized by the user. For I2S driver to function correctly number of memory blocks in a slab has to be at least 2 per queue. Size of the memory block should be multiple of frame_size where frame_size = (channels * word_size_bytes). As an example 16 bit word will occupy 2 bytes, 24 or 32 bit word will occupy 4 bytes.</para>
<para>Please check Zephyr Kernel Primer for more information on memory slabs.</para>
<para><simplesect kind="remark"><para>When I2S data format is selected parameter channels is ignored, number of words in a frame is always 2.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>word_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits representing one data word. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channels</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of words per frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Data stream format as defined by I2S_FMT_* constants. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration options as defined by I2S_OPT_* constants. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_clk_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame clock (WS) frequency, this is sampling rate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mem_slab</parametername>
</parameternamelist>
<parameterdescription>
<para>memory slab to store RX/TX data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of one RX/TX memory block (buffer) in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Read/Write timeout. Number of milliseconds to wait in case TX queue is full or RX queue is empty, or 0, or SYS_FOREVER_MS. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="include/drivers/i2s.h" line="301" column="1" bodyfile="include/drivers/i2s.h" bodystart="301" bodyend="310"/>
    <listofallmembers>
      <member refid="structi2s__config_1a62f504e954fc42c343d142513bbaf4ef" prot="public" virt="non-virtual"><scope>i2s_config</scope><name>block_size</name></member>
      <member refid="structi2s__config_1acd9ff8b9a0e79e95a8deb19df145478d" prot="public" virt="non-virtual"><scope>i2s_config</scope><name>channels</name></member>
      <member refid="structi2s__config_1a9ab2e8fa330473be99ce0713aec60daf" prot="public" virt="non-virtual"><scope>i2s_config</scope><name>format</name></member>
      <member refid="structi2s__config_1ab5b0556fcd113c6c645e265af4846b45" prot="public" virt="non-virtual"><scope>i2s_config</scope><name>frame_clk_freq</name></member>
      <member refid="structi2s__config_1a11991601fa180ead06a23b90a58136ff" prot="public" virt="non-virtual"><scope>i2s_config</scope><name>mem_slab</name></member>
      <member refid="structi2s__config_1a56a9caaf8133ced8e47e3699e322fdab" prot="public" virt="non-virtual"><scope>i2s_config</scope><name>options</name></member>
      <member refid="structi2s__config_1a9bf6c6cb96cc9c3acd8efc3fad0cbca9" prot="public" virt="non-virtual"><scope>i2s_config</scope><name>timeout</name></member>
      <member refid="structi2s__config_1a5a38a75f0b4a3356ed85495fb45d0cd2" prot="public" virt="non-virtual"><scope>i2s_config</scope><name>word_size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
