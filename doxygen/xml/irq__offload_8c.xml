<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="irq__offload_8c" kind="file" language="C++">
    <compoundname>irq_offload.c</compoundname>
    <includes local="no">zephyr.h</includes>
    <includes refid="ztest_8h" local="no">ztest.h</includes>
    <includes refid="kernel__structs_8h" local="no">kernel_structs.h</includes>
    <includes refid="irq__offload_8h" local="no">irq_offload.h</includes>
    <incdepgraph>
      <node id="17">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="66">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="65">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="29">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="36">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="38">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="34">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="32">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="40">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="41">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="37">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="35">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="39">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="75">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="45">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="51">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="28">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="42">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="23">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="5">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="19">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="86">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="87">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="13">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="9">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="11">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="64">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="88">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="81">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="3">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="15">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/common/src/irq_offload.c</label>
        <link refid="irq__offload_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>alloca.h</label>
      </node>
      <node id="68">
        <label>arch/cpu.h</label>
      </node>
      <node id="31">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="30">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="43">
        <label>kernel.h</label>
      </node>
      <node id="7">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="84">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="89">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="90">
        <label>tc_util.h</label>
      </node>
      <node id="2">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="irq__offload_8c_1a6b5b9168fb905dbd1ed62695fca85e90" prot="public" static="no">
        <name>SENTINEL_VALUE</name>
        <initializer>0xDEADBEEF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/irq_offload.c" line="21" column="9" bodyfile="tests/kernel/common/src/irq_offload.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="irq__offload_8c_1ae22ff0e3899b618db60665095afac672" prot="public" static="no" mutable="no">
        <type>volatile <ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>volatile uint32_t sentinel</definition>
        <argsstring></argsstring>
        <name>sentinel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/irq_offload.c" line="20" column="19" bodyfile="tests/kernel/common/src/irq_offload.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="irq__offload_8c_1ae1b080a0548d21ae418d6a21c08dd1ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void offload_function</definition>
        <argsstring>(const void *param)</argsstring>
        <name>offload_function</name>
        <param>
          <type>const void *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/irq_offload.c" line="23" column="13" bodyfile="tests/kernel/common/src/irq_offload.c" bodystart="23" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="irq__offload_8c_1a3e6eea47d4795cdb31d230fb0ab33044" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_irq_offload</definition>
        <argsstring>(void)</argsstring>
        <name>test_irq_offload</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Verify thread context. </para>
        </briefdescription>
        <detaileddescription>
<para>Check whether offloaded running function is in interrupt context, on the IRQ stack or not. </para>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: Offload to IRQ context</para>
        </inbodydescription>
        <location file="tests/kernel/common/src/irq_offload.c" line="41" column="6" bodyfile="tests/kernel/common/src/irq_offload.c" bodystart="41" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__common__tests_1ga0f504167b62d85064806318554a9d1ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__no_optimization void</type>
        <definition>__no_optimization void test_nop</definition>
        <argsstring>(void)</argsstring>
        <name>test_nop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test the <ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop()</ref> by invoking and measure it. </para>
        </briefdescription>
        <detaileddescription>
<para>This test is mainly for coverage of the code. <ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop()</ref> is a special implementation and it will behave differently on different platforms. By the way, this also measures how many cycles it spends for platforms that support it.</para>
<para>FYI: The potential uses of <ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop()</ref> could be:<itemizedlist>
<listitem><para>Code alignment: Although in this case it&apos;s much more likely the compiler doing so (or you&apos;re in an assembly file, in which case you&apos;re not calling <ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop()</ref> anyway). And this would require that <ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop()</ref> be ALWAYS_INLINE.</para>
</listitem><listitem><para>Giving you a guaranteed place to put a breakpoint / trace trigger / etc. when debugging. This is on main usage of <ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop()</ref>; it inherently is generally debugging code removed before actually pushing.</para>
</listitem><listitem><para>Giving you a guaranteed place to put a patchpoint. E.g. ARMv7 allows nop (and a few other instructions) to be modified concurrently with execution, but not most other instructions.</para>
</listitem><listitem><para>Delaying a few instructions, e.g. for tight timing loops on M-cores.</para>
</listitem></itemizedlist>
</para>
<para>Our test here mainly aims at the 4th scenario mentioned above but also potentially tests the 1st scenario. So no optimization here to prevent <ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop()</ref> has optimized by the compiler is necessary.</para>
<para><simplesect kind="see"><para><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/irq_offload.c" line="95" column="24" bodyfile="tests/kernel/common/src/irq_offload.c" bodystart="95" bodyend="201"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This test case verifies the correctness of <ref refid="irq__offload_8h_1a429859dd7ac3d88a4b7ae858835847ce" kindref="member">irq_offload()</ref>, an important routine used in many other test cases for running a function in interrupt context, on the IRQ stack. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztest_8h" kindref="compound">ztest.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="kernel__structs_8h" kindref="compound">kernel_structs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="irq__offload_8h" kindref="compound">irq_offload.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="irq__offload_8c_1ae22ff0e3899b618db60665095afac672" kindref="member">sentinel</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SENTINEL_VALUE<sp/>0xDEADBEEF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="irq__offload_8c_1ae1b080a0548d21ae418d6a21c08dd1ef" kindref="member">offload_function</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*param)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>x<sp/>=<sp/><ref refid="group__sys-util_1ga6e5ec9c46d0140315a7c1d80d1cc3c38" kindref="member">POINTER_TO_INT</ref>(param);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>we&apos;re<sp/>in<sp/>IRQ<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__isr__apis_1ga8482b0dd2283d12677a9ebe321667d16" kindref="member">k_is_in_isr</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>in<sp/>IRQ<sp/>context!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="irq__offload_8c_1ae22ff0e3899b618db60665095afac672" kindref="member">sentinel</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="irq__offload_8c_1a3e6eea47d4795cdb31d230fb0ab33044" kindref="member">test_irq_offload</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Simple<sp/>validation<sp/>of<sp/>nested<sp/>locking.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key1,<sp/>key2;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key1<sp/>=<sp/><ref refid="arch_2arc_2v2_2irq_8h_1a1496f4f860a99f42e1aee15ce5c9b3e2" kindref="member">arch_irq_lock</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="arch_2arc_2v2_2irq_8h_1adb441b26ed6818fea4ebba6b8853354b" kindref="member">arch_irq_unlocked</ref>(key1),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;IRQs<sp/>should<sp/>have<sp/>been<sp/>unlocked,<sp/>but<sp/>key<sp/>is<sp/>0x%x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key1);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key2<sp/>=<sp/><ref refid="arch_2arc_2v2_2irq_8h_1a1496f4f860a99f42e1aee15ce5c9b3e2" kindref="member">arch_irq_lock</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="arch_2arc_2v2_2irq_8h_1adb441b26ed6818fea4ebba6b8853354b" kindref="member">arch_irq_unlocked</ref>(key2),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;IRQs<sp/>should<sp/>have<sp/>been<sp/>locked,<sp/>but<sp/>key<sp/>is<sp/>0x%x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key2);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arch_2arc_2v2_2irq_8h_1a203e02b994beba0d006dad9f6d797c27" kindref="member">arch_irq_unlock</ref>(key2);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arch_2arc_2v2_2irq_8h_1a203e02b994beba0d006dad9f6d797c27" kindref="member">arch_irq_unlock</ref>(key1);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="irq__offload_8h_1a429859dd7ac3d88a4b7ae858835847ce" kindref="member">irq_offload</ref>(<ref refid="irq__offload_8c_1ae1b080a0548d21ae418d6a21c08dd1ef" kindref="member">offload_function</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="irq__offload_8c_1a6b5b9168fb905dbd1ed62695fca85e90" kindref="member">SENTINEL_VALUE</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="irq__offload_8c_1ae22ff0e3899b618db60665095afac672" kindref="member">sentinel</ref>,<sp/><ref refid="irq__offload_8c_1a6b5b9168fb905dbd1ed62695fca85e90" kindref="member">SENTINEL_VALUE</ref>,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;irq_offload()<sp/>didn&apos;t<sp/>work<sp/>properly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">__no_optimization<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__common__tests_1ga0f504167b62d85064806318554a9d1ef" kindref="member">test_nop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>t_get_time,<sp/>t_before,<sp/>t_after,<sp/>diff;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_before<sp/>=<sp/><ref refid="group__clock__apis_1ga208687de625e0036558343b4e66143d3" kindref="member">k_cycle_get_32</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_after<sp/>=<sp/><ref refid="group__clock__apis_1ga208687de625e0036558343b4e66143d3" kindref="member">k_cycle_get_32</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>time<sp/>spent<sp/>between<sp/>two<sp/>k_cycle_get_32()<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_get_time<sp/>=<sp/>t_after<sp/>-<sp/>t_before;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="printk_8h_1a768a7dff8592b69f327a08f96b00fa54" kindref="member">printk</ref>(</highlight><highlight class="stringliteral">&quot;time<sp/>k_cycle_get_32()<sp/>takes<sp/>%d<sp/>cycles\n&quot;</highlight><highlight class="normal">,<sp/>t_get_time);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>If<sp/>two<sp/>k_cycle_get_32()<sp/>call<sp/>take<sp/>zero<sp/>cycle<sp/>here,<sp/>this</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>means<sp/>it<sp/>cannot<sp/>comes<sp/>out<sp/>a<sp/>correct<sp/>result,<sp/>in<sp/>these</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>case,<sp/>we<sp/>skip<sp/>this<sp/>test,<sp/>such<sp/>as<sp/>native<sp/>posix.</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t_get_time<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_before<sp/>=<sp/><ref refid="group__clock__apis_1ga208687de625e0036558343b4e66143d3" kindref="member">k_cycle_get_32</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_RISCV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>2<sp/>nop<sp/>instructions<sp/>more<sp/>to<sp/>cost<sp/>cycles<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_RISCV_MACHINE_TIMER_SYSTEM_CLOCK_DIVIDER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>the<sp/>case<sp/>machine<sp/>timer<sp/>clock<sp/>uses<sp/>the<sp/>divided<sp/>system<sp/>clock,</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>k_cycle_get_32()<sp/>can&apos;t<sp/>measure<sp/>accurately<sp/>how<sp/>many<sp/>cycles<sp/>elapsed.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>For<sp/>example,<sp/>use<sp/>the<sp/>value<sp/>as<sp/>timer<sp/>clock<sp/>obtained<sp/>by<sp/>dividing</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>system<sp/>clock<sp/>by<sp/>4.</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>In<sp/>this<sp/>case,<sp/>measuring<sp/>a<sp/>duration<sp/>with<sp/>k_cycle_get32()<sp/>has<sp/>up<sp/>to<sp/>3</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(4-1)<sp/>cycles<sp/>systematic<sp/>error.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>To<sp/>run<sp/>this<sp/>test,<sp/>we<sp/>need<sp/>to<sp/>insert<sp/>an<sp/>appropriate<sp/>of<sp/>nops</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>with<sp/>consideration<sp/>for<sp/>the<sp/>errors.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>&apos;nop&apos;<sp/>can<sp/>not<sp/>repeat<sp/>with<sp/>for<sp/>loop.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Must<sp/>insert<sp/>as<sp/>separated<sp/>statement.</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>But<sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>convenient<sp/>function<sp/>such<sp/>as</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>BOOST_PP_REPEAT<sp/>in<sp/>C++.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>At<sp/>this<sp/>time,<sp/>Implementing<sp/>a<sp/>generic<sp/>test<sp/>is<sp/>a<sp/>bit<sp/>difficult.</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Skipping<sp/>this<sp/>test<sp/>in<sp/>the<sp/>case.</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ARMV6_M_ARMV8_M_BASELINE)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined(CONFIG_ARMV7_M_ARMV8_M_MAINLINE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>4<sp/>nop<sp/>instructions<sp/>more<sp/>to<sp/>cost<sp/>cycles<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ARC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>7<sp/>nop<sp/>instructions<sp/>more<sp/>to<sp/>cost<sp/>cycles<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_SPARC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>9<sp/>nop<sp/>instructions<sp/>more<sp/>to<sp/>cost<sp/>cycles<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arc_2arch_8h_1a0af98dc5138e02248173c30b8f07210f" kindref="member">arch_nop</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ARMV8_A)<sp/>||<sp/>defined(CONFIG_BOARD_EHL_CRB)<sp/><sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(CONFIG_BOARD_UP_SQUARED)<sp/>||<sp/>(CONFIG_SOC_FAMILY_INTEL_ADSP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>ARMv8-A<sp/>ARM<sp/>states<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>No<sp/>Operation<sp/>does<sp/>nothing,<sp/>other<sp/>than<sp/>advance<sp/>the<sp/>value<sp/>of</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>program<sp/>counter<sp/>by<sp/>4.<sp/>This<sp/>instruction<sp/>can<sp/>be<sp/>used<sp/>for</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>instruction<sp/>alignment<sp/>purposes.</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Note:<sp/>The<sp/>timing<sp/>effects<sp/>of<sp/>including<sp/>a<sp/>NOP<sp/>instruction<sp/>in</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>program<sp/>are<sp/>not<sp/>guaranteed.<sp/>It<sp/>can<sp/>increase<sp/>execution<sp/>time</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>,leave<sp/>it<sp/>unchanged,<sp/>or<sp/>even<sp/>reduce<sp/>it.<sp/>Therefore,<sp/>NOP</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>instructions<sp/>are<sp/>not<sp/>suitable<sp/>for<sp/>timing<sp/>loops.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>So<sp/>we<sp/>skip<sp/>this<sp/>test,<sp/>it<sp/>will<sp/>get<sp/>a<sp/>negative<sp/>cycles.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>And<sp/>on<sp/>physical<sp/>EHL_CRB,<sp/>up<sp/>squared<sp/>and<sp/>INTEL<sp/>ADSP<sp/>boards,</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>also<sp/>got<sp/>a<sp/>similar<sp/>situation,<sp/>we<sp/>skip<sp/>the<sp/>check<sp/>as<sp/>well.</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_after<sp/>=<sp/><ref refid="group__clock__apis_1ga208687de625e0036558343b4e66143d3" kindref="member">k_cycle_get_32</ref>();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>delta<sp/>time<sp/>of<sp/>arch_nop().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/>t_after<sp/>-<sp/>t_before<sp/>-<sp/>t_get_time;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="printk_8h_1a768a7dff8592b69f327a08f96b00fa54" kindref="member">printk</ref>(</highlight><highlight class="stringliteral">&quot;arch_nop()<sp/>takes<sp/>%d<sp/>cycles\n&quot;</highlight><highlight class="normal">,<sp/>diff);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>An<sp/>arch_nop()<sp/>call<sp/>should<sp/>spend<sp/>actual<sp/>cpu<sp/>cycles<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(diff<sp/>&gt;<sp/>0,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arch_nop()<sp/>takes<sp/>%d<sp/>cpu<sp/>cycles&quot;</highlight><highlight class="normal">,<sp/>diff);</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/kernel/common/src/irq_offload.c"/>
  </compounddef>
</doxygen>
