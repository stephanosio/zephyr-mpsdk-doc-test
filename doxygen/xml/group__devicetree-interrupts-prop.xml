<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__devicetree-interrupts-prop" kind="group">
    <compoundname>devicetree-interrupts-prop</compoundname>
    <title>interrupts property</title>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__devicetree-interrupts-prop_1ga2985e5d55d2d9dbbbe93ba855d5db320" prot="public" static="no">
        <name>DT_NUM_IRQS</name>
        <param><defname>node_id</defname></param>
        <initializer><ref refid="devicetree_8h_1a8c1e6c5301ff391563977e563117d0f6" kindref="member">DT_CAT</ref>(node_id, _IRQ_NUM)</initializer>
        <briefdescription>
<para>Get the number of interrupt sources for the node. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this instead of <ref refid="group__devicetree-generic-prop_1gaa7f5afcedd1f54be79a5337e8e28a5b6" kindref="member">DT_PROP_LEN(node_id, interrupts)</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of interrupt specifiers in the node&apos;s &quot;interrupts&quot; property. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="1639" column="9" bodyfile="include/devicetree.h" bodystart="1639" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__devicetree-interrupts-prop_1ga238a290dc6cea9479104ff8f95de1c4c" prot="public" static="no">
        <name>DT_IRQ_HAS_IDX</name>
        <param><defname>node_id</defname></param>
        <param><defname>idx</defname></param>
        <initializer>	<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(<ref refid="devicetree_8h_1a8c1e6c5301ff391563977e563117d0f6" kindref="member">DT_CAT</ref>(node_id, _IRQ_IDX_##idx##_EXISTS))</initializer>
        <briefdescription>
<para>Is &quot;idx&quot; a valid interrupt index? </para>
        </briefdescription>
        <detaileddescription>
<para>If this returns 1, then <ref refid="group__devicetree-interrupts-prop_1ga3779b2115eac60ab32adfc8d212e973f" kindref="member">DT_IRQ_BY_IDX(node_id, idx)</ref> is valid. If it returns 0, it is an error to use that macro with this index. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>index to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the idx is valid for the interrupt property 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="1651" column="9" bodyfile="include/devicetree.h" bodystart="1651" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__devicetree-interrupts-prop_1ga739ebdd4bd01d6b7beb75d915174206f" prot="public" static="no">
        <name>DT_IRQ_HAS_CELL_AT_IDX</name>
        <param><defname>node_id</defname></param>
        <param><defname>idx</defname></param>
        <param><defname>cell</defname></param>
        <initializer>	<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(<ref refid="devicetree_8h_1a8c1e6c5301ff391563977e563117d0f6" kindref="member">DT_CAT</ref>(node_id, _IRQ_IDX_##idx##_VAL_##cell##_EXISTS))</initializer>
        <briefdescription>
<para>Does an interrupts property have a named cell specifier at an index? If this returns 1, then <ref refid="group__devicetree-interrupts-prop_1ga3779b2115eac60ab32adfc8d212e973f" kindref="member">DT_IRQ_BY_IDX(node_id, idx, cell)</ref> is valid. If it returns 0, it is an error to use that macro. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>index to check </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>named cell value whose existence to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the named cell exists in the interrupt specifier at index idx 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="1664" column="9" bodyfile="include/devicetree.h" bodystart="1664" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__devicetree-interrupts-prop_1gab9c94ee39db7913598a755c6172fe036" prot="public" static="no">
        <name>DT_IRQ_HAS_CELL</name>
        <param><defname>node_id</defname></param>
        <param><defname>cell</defname></param>
        <initializer><ref refid="group__devicetree-interrupts-prop_1ga739ebdd4bd01d6b7beb75d915174206f" kindref="member">DT_IRQ_HAS_CELL_AT_IDX</ref>(node_id, 0, cell)</initializer>
        <briefdescription>
<para>Equivalent to <ref refid="group__devicetree-interrupts-prop_1ga739ebdd4bd01d6b7beb75d915174206f" kindref="member">DT_IRQ_HAS_CELL_AT_IDX(node_id, 0, cell)</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>named cell value whose existence to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the named cell exists in the interrupt specifier at index 0 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="1674" column="9" bodyfile="include/devicetree.h" bodystart="1674" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__devicetree-interrupts-prop_1ga1c757ff5e4d15f1b3020b30f72c0dd5d" prot="public" static="no">
        <name>DT_IRQ_HAS_NAME</name>
        <param><defname>node_id</defname></param>
        <param><defname>name</defname></param>
        <initializer>	<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(<ref refid="devicetree_8h_1a8c1e6c5301ff391563977e563117d0f6" kindref="member">DT_CAT</ref>(node_id, _IRQ_NAME_##name##_VAL_irq_EXISTS))</initializer>
        <briefdescription>
<para>Does an interrupts property have a named specifier value at an index? If this returns 1, then <ref refid="group__devicetree-interrupts-prop_1ga904917c0a407343ef0185e9e6fe96812" kindref="member">DT_IRQ_BY_NAME(node_id, name, cell)</ref> is valid. If it returns 0, it is an error to use that macro. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>lowercase-and-underscores interrupt specifier name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if &quot;name&quot; is a valid named specifier 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="1685" column="9" bodyfile="include/devicetree.h" bodystart="1685" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__devicetree-interrupts-prop_1ga3779b2115eac60ab32adfc8d212e973f" prot="public" static="no">
        <name>DT_IRQ_BY_IDX</name>
        <param><defname>node_id</defname></param>
        <param><defname>idx</defname></param>
        <param><defname>cell</defname></param>
        <initializer>	<ref refid="devicetree_8h_1a8c1e6c5301ff391563977e563117d0f6" kindref="member">DT_CAT</ref>(node_id, _IRQ_IDX_##idx##_VAL_##cell)</initializer>
        <briefdescription>
<para>Get a value within an interrupt specifier at an index. </para>
        </briefdescription>
        <detaileddescription>
<para>It might help to read the argument order as being similar to &quot;node-&gt;interrupts[index].cell&quot;.</para>
<para>This can be used to get information about an individual interrupt when a device generates more than one.</para>
<para>Example devicetree fragment: <verbatim>my-serial: serial@... {
        interrupts = &lt; 33 0 &gt;, &lt; 34 1 &gt;;
};
</verbatim> Assuming the node&apos;s interrupt domain has &quot;#interrupt-cells = &lt;2&gt;;&quot; and the individual cells in each interrupt specifier are named &quot;irq&quot; and &quot;priority&quot; by the node&apos;s binding, here are some examples: <verbatim>#define SERIAL DT_NODELABEL(my_serial)

Example usage                       Value
-------------                       -----
DT_IRQ_BY_IDX(SERIAL, 0, irq)          33
DT_IRQ_BY_IDX(SERIAL, 0, priority)      0
DT_IRQ_BY_IDX(SERIAL, 1, irq,          34
DT_IRQ_BY_IDX(SERIAL, 1, priority)      1
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>logical index into the interrupt specifier array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>cell name specifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the named value at the specifier given by the index </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="1721" column="9" bodyfile="include/devicetree.h" bodystart="1721" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__devicetree-interrupts-prop_1ga904917c0a407343ef0185e9e6fe96812" prot="public" static="no">
        <name>DT_IRQ_BY_NAME</name>
        <param><defname>node_id</defname></param>
        <param><defname>name</defname></param>
        <param><defname>cell</defname></param>
        <initializer>	<ref refid="devicetree_8h_1a8c1e6c5301ff391563977e563117d0f6" kindref="member">DT_CAT</ref>(node_id, _IRQ_NAME_##name##_VAL_##cell)</initializer>
        <briefdescription>
<para>Get a value within an interrupt specifier by name. </para>
        </briefdescription>
        <detaileddescription>
<para>It might help to read the argument order as being similar to &quot;node-&gt;interrupts.name.cell&quot;.</para>
<para>This can be used to get information about an individual interrupt when a device generates more than one, if the bindings give each interrupt specifier a name.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>lowercase-and-underscores interrupt specifier name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>cell name specifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the named value at the specifier given by the index </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="1739" column="9" bodyfile="include/devicetree.h" bodystart="1739" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__devicetree-interrupts-prop_1gabf60fbd528d300a26c0b4e66fe80a53f" prot="public" static="no">
        <name>DT_IRQ</name>
        <param><defname>node_id</defname></param>
        <param><defname>cell</defname></param>
        <initializer><ref refid="group__devicetree-interrupts-prop_1ga3779b2115eac60ab32adfc8d212e973f" kindref="member">DT_IRQ_BY_IDX</ref>(node_id, 0, cell)</initializer>
        <briefdescription>
<para>Get an interrupt specifier&apos;s value Equivalent to <ref refid="group__devicetree-interrupts-prop_1ga3779b2115eac60ab32adfc8d212e973f" kindref="member">DT_IRQ_BY_IDX(node_id, 0, cell)</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>cell name specifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the named value at that index </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="1749" column="9" bodyfile="include/devicetree.h" bodystart="1749" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__devicetree-interrupts-prop_1ga5e00c208388736ce9b5bc0088a77cd95" prot="public" static="no">
        <name>DT_IRQN</name>
        <param><defname>node_id</defname></param>
        <initializer><ref refid="group__devicetree-interrupts-prop_1gabf60fbd528d300a26c0b4e66fe80a53f" kindref="member">DT_IRQ</ref>(node_id, irq)</initializer>
        <briefdescription>
<para>Get a node&apos;s (only) irq number. </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="group__devicetree-interrupts-prop_1gabf60fbd528d300a26c0b4e66fe80a53f" kindref="member">DT_IRQ(node_id, irq)</ref>. This is provided as a convenience for the common case where a node generates exactly one interrupt, and the IRQ number is in a cell named &quot;irq&quot;.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the interrupt number for the node&apos;s only interrupt </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="1761" column="9" bodyfile="include/devicetree.h" bodystart="1761" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
