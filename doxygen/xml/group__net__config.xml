<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__net__config" kind="group">
    <compoundname>net_config</compoundname>
    <title>Network Configuration Library</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__net__config_1ga02a2b4fbac3eba68a175630293c91484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_config_init</definition>
        <argsstring>(const char *app_info, uint32_t flags, int32_t timeout)</argsstring>
        <name>net_config_init</name>
        <param>
          <type>const char *</type>
          <declname>app_info</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Initialize this network application. </para>
        </briefdescription>
        <detaileddescription>
<para>This will call <ref refid="group__net__config_1gab19ec1b3411f38d9bee5abcb25926ea0" kindref="member">net_config_init_by_iface()</ref> with NULL network interface.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>app_info</parametername>
</parameternamelist>
<parameterdescription>
<para>String describing this application. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags related to services needed by the client. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>How long to wait the network setup before continuing the startup.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt;0 if error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_config.h" line="62" column="5" declfile="include/net/net_config.h" declline="62" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__config_1gab19ec1b3411f38d9bee5abcb25926ea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_config_init_by_iface</definition>
        <argsstring>(struct net_if *iface, const char *app_info, uint32_t flags, int32_t timeout)</argsstring>
        <name>net_config_init_by_iface</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>app_info</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Initialize this network application using a specific network interface. </para>
        </briefdescription>
        <detaileddescription>
<para>If network interface is set to NULL, then the default one is used in the configuration.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialize networking using this network interface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>app_info</parametername>
</parameternamelist>
<parameterdescription>
<para>String describing this application. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags related to services needed by the client. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>How long to wait the network setup before continuing the startup.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt;0 if error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_config.h" line="79" column="5" declfile="include/net/net_config.h" declline="79" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__config_1ga49c6b4cd9d338f1b3d76225a9872c84c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_config_init_app</definition>
        <argsstring>(const struct device *dev, const char *app_info)</argsstring>
        <name>net_config_init_app</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>app_info</declname>
        </param>
        <briefdescription>
<para>Initialize this network application. </para>
        </briefdescription>
        <detaileddescription>
<para>If CONFIG_NET_CONFIG_AUTO_INIT is set, then this function is called automatically when the device boots. If that is not desired, unset the config option and call the function manually when the application starts.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Network device to use. The function will figure out what network interface to use based on the device. If the device is NULL, then default network interface is used by the function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>app_info</parametername>
</parameternamelist>
<parameterdescription>
<para>String describing this application.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt;0 if error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_config.h" line="97" column="5" declfile="include/net/net_config.h" declline="97" declcolumn="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__net__config_1ga5c1a321477ce072a964bc610aef805f1" prot="public" static="no">
        <name>NET_CONFIG_NEED_ROUTER</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
<para>Application needs routers to be set so that connectivity to remote network is possible. For IPv6 networks, this means that the device should receive IPv6 router advertisement message before continuing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_config.h" line="35" column="9" bodyfile="include/net/net_config.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__net__config_1ga469731c167f97b5df40b51ee0c87313c" prot="public" static="no">
        <name>NET_CONFIG_NEED_IPV6</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
<para>Application needs IPv6 subsystem configured and initialized. Typically this means that the device has IPv6 address set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_config.h" line="41" column="9" bodyfile="include/net/net_config.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__net__config_1ga4312efaa62093c93968c0ae81efc36dd" prot="public" static="no">
        <name>NET_CONFIG_NEED_IPV4</name>
        <initializer>0x00000004</initializer>
        <briefdescription>
<para>Application needs IPv4 subsystem configured and initialized. Typically this means that the device has IPv4 address set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_config.h" line="47" column="9" bodyfile="include/net/net_config.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Network configuration library. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
