<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__arch-smp" kind="group">
    <compoundname>arch-smp</compoundname>
    <title>Architecture-specific SMP APIs</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__arch-smp_1gacf11540c44fdc8e74b060007b7e5a456" prot="public" static="no">
        <type>FUNC_NORETURN void(*</type>
        <definition>typedef FUNC_NORETURN void(* arch_cpustart_t) (void *data)</definition>
        <argsstring>)(void *data)</argsstring>
        <name>arch_cpustart_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Per-cpu entry function</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>context parameter, implementation specific </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/arch_interface.h" line="202" column="23" bodyfile="include/sys/arch_interface.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__arch-smp_1gad25e65419116c6bb3e6d6362e780fb83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arch_start_cpu</definition>
        <argsstring>(int cpu_num, k_thread_stack_t *stack, int sz, arch_cpustart_t fn, void *arg)</argsstring>
        <name>arch_start_cpu</name>
        <param>
          <type>int</type>
          <declname>cpu_num</declname>
        </param>
        <param>
          <type><ref refid="arch__interface_8h_1a3e4bde3075edb41069b258d999333b0e" kindref="member">k_thread_stack_t</ref> *</type>
          <declname>stack</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sz</declname>
        </param>
        <param>
          <type><ref refid="group__arch-smp_1gacf11540c44fdc8e74b060007b7e5a456" kindref="member">arch_cpustart_t</ref></type>
          <declname>fn</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Start a numbered CPU on a MP-capable system. </para>
        </briefdescription>
        <detaileddescription>
<para>This starts and initializes a specific CPU. The main thread on startup is running on CPU zero, other processors are numbered sequentially. On return from this function, the CPU is known to have begun operating and will enter the provided function. Its interrupts will be initialized but disabled such that <ref refid="group__isr__apis_1ga646045943b3b2a130738bcc48867bf57" kindref="member">irq_unlock()</ref> with the provided key will work to enable them.</para>
<para>Normally, in SMP mode this function will be called by the kernel initialization and should not be used as a user API. But it is defined here for special-purpose apps which want Zephyr running on one core and to use others for design-specific processing.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpu_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer number of the CPU </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack memory for the CPU </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sz</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack buffer size, in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to begin running on the CPU. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>Untyped argument to be passed to &quot;fn&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/arch_interface.h" line="224" column="6" declfile="include/sys/arch_interface.h" declline="224" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__arch-smp_1ga5a7f0198ee061551c300129bffe64717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool arch_cpu_active</definition>
        <argsstring>(int cpu_num)</argsstring>
        <name>arch_cpu_active</name>
        <param>
          <type>int</type>
          <declname>cpu_num</declname>
        </param>
        <briefdescription>
<para>Return CPU power status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpu_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer number of the CPU </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/arch_interface.h" line="232" column="6" declfile="include/sys/arch_interface.h" declline="232" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__arch-smp_1gad42138d41dff6a4aad8abf7d77fcd8b2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>struct _cpu *</type>
        <definition>static struct _cpu * arch_curr_cpu</definition>
        <argsstring>(void)</argsstring>
        <name>arch_curr_cpu</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the CPU struct for the currently executing CPU </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/arch_interface.h" line="432" column="25" declfile="include/sys/arch_interface.h" declline="432" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="group__arch-smp_1gadd3d6c84e3c57babc859314718e0f231" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arch_sched_ipi</definition>
        <argsstring>(void)</argsstring>
        <name>arch_sched_ipi</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Broadcast an interrupt to all CPUs</para>
<para>This will invoke z_sched_ipi() on other CPUs in the system. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/arch_interface.h" line="439" column="6" declfile="include/sys/arch_interface.h" declline="439" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
