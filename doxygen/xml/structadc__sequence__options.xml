<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structadc__sequence__options" kind="struct" language="C++" prot="public">
    <compoundname>adc_sequence_options</compoundname>
    <includes refid="drivers_2adc_8h" local="no">adc.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structadc__sequence__options_1ad2f11727ab0eb7e32a5fbd07f04a85b2" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t adc_sequence_options::interval_us</definition>
        <argsstring></argsstring>
        <name>interval_us</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interval between consecutive samplings (in microseconds), 0 means sample as fast as possible, without involving any timer. The accuracy of this interval is dependent on the implementation of a given driver. The default routine that handles the intervals uses a kernel timer for this purpose, thus, it has the accuracy of the kernel&apos;s system clock. Particular drivers may use some dedicated hardware timers and achieve a better precision. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/adc.h" line="241" column="10" bodyfile="include/drivers/adc.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structadc__sequence__options_1a71bd082c14f01a1b5d1b491e7510aa91" prot="public" static="no" mutable="no">
        <type><ref refid="group__adc__interface_1ga9150eb6dc53d1c62b9fa225c0a371d6d" kindref="member">adc_sequence_callback</ref></type>
        <definition>adc_sequence_callback adc_sequence_options::callback</definition>
        <argsstring></argsstring>
        <name>callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback function to be called after each sampling is done. Optional - set to NULL if it is not needed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/adc.h" line="247" column="23" bodyfile="include/drivers/adc.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structadc__sequence__options_1a262fd6daefb22df02c726aafcddc6d47" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* adc_sequence_options::user_data</definition>
        <argsstring></argsstring>
        <name>user_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to user data. It can be used to associate the sequence with any other data that is needed in the callback function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/adc.h" line="253" column="6" bodyfile="include/drivers/adc.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structadc__sequence__options_1a29f8ac4cdf6740f56bcd70a0a027e56a" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t adc_sequence_options::extra_samplings</definition>
        <argsstring></argsstring>
        <name>extra_samplings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of extra samplings to perform (the total number of samplings is 1 + extra_samplings). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/adc.h" line="259" column="10" bodyfile="include/drivers/adc.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Structure defining additional options for an ADC sampling sequence. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>adc_sequence_options</label>
        <link refid="structadc__sequence__options"/>
        <childnode refid="2" relation="usage">
          <edgelabel>callback</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>device</label>
        <link refid="structdevice"/>
        <childnode refid="3" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>device_state</label>
        <link refid="structdevice__state"/>
      </node>
    </collaborationgraph>
    <location file="include/drivers/adc.h" line="231" column="1" bodyfile="include/drivers/adc.h" bodystart="231" bodyend="260"/>
    <listofallmembers>
      <member refid="structadc__sequence__options_1a71bd082c14f01a1b5d1b491e7510aa91" prot="public" virt="non-virtual"><scope>adc_sequence_options</scope><name>callback</name></member>
      <member refid="structadc__sequence__options_1a29f8ac4cdf6740f56bcd70a0a027e56a" prot="public" virt="non-virtual"><scope>adc_sequence_options</scope><name>extra_samplings</name></member>
      <member refid="structadc__sequence__options_1ad2f11727ab0eb7e32a5fbd07f04a85b2" prot="public" virt="non-virtual"><scope>adc_sequence_options</scope><name>interval_us</name></member>
      <member refid="structadc__sequence__options_1a262fd6daefb22df02c726aafcddc6d47" prot="public" virt="non-virtual"><scope>adc_sequence_options</scope><name>user_data</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
