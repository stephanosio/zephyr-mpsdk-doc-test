<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="arch_2arc_2v2_2irq_8h" kind="file" language="C++">
    <compoundname>irq.h</compoundname>
    <includes refid="aux__regs_8h" local="no">arch/arc/v2/aux_regs.h</includes>
    <includes refid="common_8h" local="no">toolchain/common.h</includes>
    <includes refid="arch_2arc_2v2_2irq_8h" local="no">irq.h</includes>
    <includes refid="util_8h" local="no">sys/util.h</includes>
    <includes refid="sw__isr__table_8h" local="no">sw_isr_table.h</includes>
    <includedby refid="arc_2arch_8h" local="no">include/arch/arc/arch.h</includedby>
    <includedby refid="arch_2arc_2v2_2irq_8h" local="no">include/arch/arc/v2/irq.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>arch/arc/v2/aux_regs.h</label>
        <link refid="aux__regs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/arch/arc/v2/irq.h</label>
        <link refid="arch_2arc_2v2_2irq_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sw_isr_table.h</label>
        <link refid="sw__isr__table_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="8">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="6">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="3">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="5">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/arch/arc/arch.h</label>
        <link refid="arc_2arch_8h"/>
      </node>
      <node id="1">
        <label>include/arch/arc/v2/irq.h</label>
        <link refid="arch_2arc_2v2_2irq_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="arch_2arc_2v2_2irq_8h_1accdf8a59e00ac1c1fcedc18b78be4b8a" prot="public" static="no">
        <name>ARCH_IRQ_CONNECT</name>
        <param><defname>irq_p</defname></param>
        <param><defname>priority_p</defname></param>
        <param><defname>isr_p</defname></param>
        <param><defname>isr_param_p</defname></param>
        <param><defname>flags_p</defname></param>
        <initializer>{ \
	Z_ISR_DECLARE(irq_p, 0, isr_p, isr_param_p); \
	z_irq_priority_set(irq_p, priority_p, flags_p); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/v2/irq.h" line="51" column="9" bodyfile="include/arch/arc/v2/irq.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arch_2arc_2v2_2irq_8h_1a875f2b1ca924721fe3854796bd96c2db" prot="public" static="no">
        <name>ARCH_IRQ_DIRECT_CONNECT</name>
        <param><defname>irq_p</defname></param>
        <param><defname>priority_p</defname></param>
        <param><defname>isr_p</defname></param>
        <param><defname>flags_p</defname></param>
        <initializer>{ \
	Z_ISR_DECLARE(irq_p, <ref refid="sw__isr__table_8h_1a1376eec61303fcd20e7656175ddbaf19" kindref="member">ISR_FLAG_DIRECT</ref>, isr_p, NULL); \
	BUILD_ASSERT(priority_p || !<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(CONFIG_ARC_FIRQ) || \
	(<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(CONFIG_ARC_FIRQ_STACK) &amp;&amp; \
	!<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(CONFIG_ARC_STACK_CHECKING)), \
	&quot;irq priority cannot be set to 0 when CONFIG_ARC_FIRQ_STACK&quot; \
	&quot;is not configured or CONFIG_ARC_FIRQ_STACK &quot; \
	&quot;and CONFIG_ARC_STACK_CHECKING are configured together&quot;); \
	z_irq_priority_set(irq_p, priority_p, flags_p); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure a &apos;direct&apos; static interrupt.</para>
<para>When firq has no separate stack(CONFIG_ARC_FIRQ_STACK=N), it&apos;s not safe to call C ISR handlers because sp will be switched to bank1&apos;s sp which is undefined value. So for this case, the priority cannot be set to 0 but next level 1</para>
<para>When firq has separate stack (CONFIG_ARC_FIRQ_STACK=y) but at the same time stack checking is enabled (CONFIG_ARC_STACK_CHECKING=y) the stack checking can raise stack check exception as sp is switched to firq&apos;s stack (bank1&apos;s sp). So for this case, the priority cannot be set to 0 but next level 1.</para>
<para>Note that for the above cases, if application still wants to use firq by setting priority to 0. Application can call z_irq_priority_set again. Then it&apos;s left to application to handle the details of firq</para>
<para>See <ref refid="irq_8h" kindref="compound">include/irq.h</ref> for details. All arguments must be computable at build time. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/v2/irq.h" line="78" column="9" bodyfile="include/arch/arc/v2/irq.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arch_2arc_2v2_2irq_8h_1a6c6d57983c066fe8ab21a78f86f7adb3" prot="public" static="no">
        <name>ARCH_ISR_DIRECT_HEADER</name>
        <param></param>
        <initializer><ref refid="x86_2ia32_2arch_8h_1ac8579cbf5edce72a6a4bfbbed3166683" kindref="member">arch_isr_direct_header</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/v2/irq.h" line="110" column="9" bodyfile="include/arch/arc/v2/irq.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arch_2arc_2v2_2irq_8h_1aa7c471213fa28b3685f153ea2a72cf9d" prot="public" static="no">
        <name>ARCH_ISR_DIRECT_FOOTER</name>
        <param><defname>swap</defname></param>
        <initializer><ref refid="x86_2ia32_2arch_8h_1a13a88acdff251283bf6f364e4393adaf" kindref="member">arch_isr_direct_footer</ref>(swap)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/v2/irq.h" line="113" column="9" bodyfile="include/arch/arc/v2/irq.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arch_2arc_2v2_2irq_8h_1a5279598e93dd914614a2ae52557be1a5" prot="public" static="no">
        <name>ARCH_ISR_DIRECT_DECLARE</name>
        <param><defname>name</defname></param>
        <initializer>	static inline int name##_body(void); \
	__attribute__ ((_ARC_DIRECT_ISR_FUNC_ATTRIBUTE))void name(void) \
	{ \
		<ref refid="group__isr__apis_1ga1ab99dbeb50b228001e1fca808cbaeea" kindref="member">ISR_DIRECT_HEADER</ref>(); \
		name##_body(); \
		<ref refid="group__isr__apis_1ga31581157c9dbacf935f0e6a8dd456335" kindref="member">ISR_DIRECT_FOOTER</ref>(0); \
	} \
	static inline int name##_body(void)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/v2/irq.h" line="125" column="9" bodyfile="include/arch/arc/v2/irq.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="arch_2arc_2v2_2irq_8h_1aa278d630653b33cb339621d725ed295a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arch_irq_enable</definition>
        <argsstring>(unsigned int irq)</argsstring>
        <name>arch_irq_enable</name>
        <param>
          <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
          <declname>irq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/v2/irq.h" line="30" column="13" declfile="include/arch/arc/v2/irq.h" declline="30" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="arch_2arc_2v2_2irq_8h_1a216d692e87bfba955a60f8e570e127df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arch_irq_disable</definition>
        <argsstring>(unsigned int irq)</argsstring>
        <name>arch_irq_disable</name>
        <param>
          <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
          <declname>irq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/v2/irq.h" line="31" column="13" declfile="include/arch/arc/v2/irq.h" declline="31" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="arch_2arc_2v2_2irq_8h_1a3bd8e963a124421bb372dab4bdc6cd83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int arch_irq_is_enabled</definition>
        <argsstring>(unsigned int irq)</argsstring>
        <name>arch_irq_is_enabled</name>
        <param>
          <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
          <declname>irq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/v2/irq.h" line="32" column="12" declfile="include/arch/arc/v2/irq.h" declline="32" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="arch_2arc_2v2_2irq_8h_1a5707c683cd09e9c45a77ac305d9a3513" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void arch_isr_direct_header</definition>
        <argsstring>(void)</argsstring>
        <name>arch_isr_direct_header</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/v2/irq.h" line="91" column="20" bodyfile="include/arch/arc/v2/irq.h" bodystart="91" bodyend="96" declfile="include/arch/arc/v2/irq.h" declline="111" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="arch_2arc_2v2_2irq_8h_1a678e87bf86d19e45c2fcb95ec969465b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void arch_isr_direct_footer</definition>
        <argsstring>(int maybe_swap)</argsstring>
        <name>arch_isr_direct_footer</name>
        <param>
          <type>int</type>
          <declname>maybe_swap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/v2/irq.h" line="98" column="20" bodyfile="include/arch/arc/v2/irq.h" bodystart="98" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="arch_2arc_2v2_2irq_8h_1a1496f4f860a99f42e1aee15ce5c9b3e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common_8h_1aa1dec568e79152c892dcf63f445cbd7a" kindref="member">ALWAYS_INLINE</ref> <ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
        <definition>static ALWAYS_INLINE unsigned int arch_irq_lock</definition>
        <argsstring>(void)</argsstring>
        <name>arch_irq_lock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Disable all interrupts on the local CPU. </para>
        </briefdescription>
        <detaileddescription>
<para>This routine disables interrupts. It can be called from either interrupt or thread level. This routine returns an architecture-dependent lock-out key representing the &quot;interrupt disable state&quot; prior to the call; this key can be passed to <ref refid="group__isr__apis_1ga646045943b3b2a130738bcc48867bf57" kindref="member">irq_unlock()</ref> to re-enable interrupts.</para>
<para>The lock-out key should only be used as the argument to the <ref refid="group__isr__apis_1ga646045943b3b2a130738bcc48867bf57" kindref="member">irq_unlock()</ref> API. It should never be used to manually re-enable interrupts or to inspect or manipulate the contents of the source register.</para>
<para>This function can be called recursively: it will return a key to return the state of interrupt locking to the previous level.</para>
<para>WARNINGS Invoking a kernel routine with interrupts locked may result in interrupts being re-enabled for an unspecified period of time. If the called routine blocks, interrupts will be re-enabled while another thread executes, or while the system is idle.</para>
<para>The &quot;interrupt disable state&quot; is an attribute of a thread. Thus, if a thread disables interrupts and subsequently invokes a kernel routine that causes the calling thread to block, the interrupt disable state will be restored when the thread is later rescheduled for execution.</para>
<para><simplesect kind="return"><para>An architecture-dependent lock-out key representing the &quot;interrupt disable state&quot; prior to the call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/v2/irq.h" line="168" column="35" bodyfile="include/arch/arc/v2/irq.h" bodystart="168" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="arch_2arc_2v2_2irq_8h_1a203e02b994beba0d006dad9f6d797c27" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common_8h_1aa1dec568e79152c892dcf63f445cbd7a" kindref="member">ALWAYS_INLINE</ref> void</type>
        <definition>static ALWAYS_INLINE void arch_irq_unlock</definition>
        <argsstring>(unsigned int key)</argsstring>
        <name>arch_irq_unlock</name>
        <param>
          <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/v2/irq.h" line="176" column="27" bodyfile="include/arch/arc/v2/irq.h" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="arch_2arc_2v2_2irq_8h_1adb441b26ed6818fea4ebba6b8853354b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common_8h_1aa1dec568e79152c892dcf63f445cbd7a" kindref="member">ALWAYS_INLINE</ref> <ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static ALWAYS_INLINE bool arch_irq_unlocked</definition>
        <argsstring>(unsigned int key)</argsstring>
        <name>arch_irq_unlocked</name>
        <param>
          <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/arc/v2/irq.h" line="181" column="27" bodyfile="include/arch/arc/v2/irq.h" bodystart="181" bodyend="188"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>ARCv2 public interrupt handling. </para>
    </briefdescription>
    <detaileddescription>
<para>ARCv2 kernel interrupt handling interface. Included by arc/arch.h. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2014<sp/>Wind<sp/>River<sp/>Systems,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_ARCH_ARC_V2_IRQ_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_ARCH_ARC_V2_IRQ_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="aux__regs_8h" kindref="compound">arch/arc/v2/aux_regs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="common_8h" kindref="compound">toolchain/common.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="irq_8h" kindref="compound">irq.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="util_8h" kindref="compound">sys/util.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="sw__isr__table_8h" kindref="compound">sw_isr_table.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_ASMLANGUAGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_arc_firq_stack_set(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30" refid="arch_2arc_2v2_2irq_8h_1aa278d630653b33cb339621d725ed295a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arch_2arc_2v2_2irq_8h_1aa278d630653b33cb339621d725ed295a" kindref="member">arch_irq_enable</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>irq);</highlight></codeline>
<codeline lineno="31" refid="arch_2arc_2v2_2irq_8h_1a216d692e87bfba955a60f8e570e127df" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arch_2arc_2v2_2irq_8h_1a216d692e87bfba955a60f8e570e127df" kindref="member">arch_irq_disable</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>irq);</highlight></codeline>
<codeline lineno="32" refid="arch_2arc_2v2_2irq_8h_1a3bd8e963a124421bb372dab4bdc6cd83" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="arch_2arc_2v2_2irq_8h_1a3bd8e963a124421bb372dab4bdc6cd83" kindref="member">arch_irq_is_enabled</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>irq);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_TRACING_ISR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__subsys__tracing__apis_1ga37f43a02961a847af3b7de6c474a8da4" kindref="member">sys_trace_isr_enter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__subsys__tracing__apis_1ga7113e2760b1a7ffb1bfa108ad9bfb4be" kindref="member">sys_trace_isr_exit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_irq_priority_set(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>irq,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prio,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_isr_wrapper(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_irq_spurious(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*unused);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Z_ISR_DECLARE<sp/>will<sp/>populate<sp/>the<sp/>.intList<sp/>section<sp/>with<sp/>the<sp/>interrupt&apos;s</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>parameters,<sp/>which<sp/>will<sp/>then<sp/>be<sp/>used<sp/>by<sp/>gen_irq_tables.py<sp/>to<sp/>create</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>the<sp/>vector<sp/>table<sp/>and<sp/>the<sp/>software<sp/>ISR<sp/>table.<sp/>This<sp/>is<sp/>all<sp/>done<sp/>at</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>build-time.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>We<sp/>additionally<sp/>set<sp/>the<sp/>priority<sp/>in<sp/>the<sp/>interrupt<sp/>controller<sp/>at</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>runtime.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="arch_2arc_2v2_2irq_8h_1accdf8a59e00ac1c1fcedc18b78be4b8a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_IRQ_CONNECT(irq_p,<sp/>priority_p,<sp/>isr_p,<sp/>isr_param_p,<sp/>flags_p)<sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_ISR_DECLARE(irq_p,<sp/>0,<sp/>isr_p,<sp/>isr_param_p);<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_irq_priority_set(irq_p,<sp/>priority_p,<sp/>flags_p);<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="arch_2arc_2v2_2irq_8h_1a875f2b1ca924721fe3854796bd96c2db" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_IRQ_DIRECT_CONNECT(irq_p,<sp/>priority_p,<sp/>isr_p,<sp/>flags_p)<sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_ISR_DECLARE(irq_p,<sp/>ISR_FLAG_DIRECT,<sp/>isr_p,<sp/>NULL);<sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BUILD_ASSERT(priority_p<sp/>||<sp/>!IS_ENABLED(CONFIG_ARC_FIRQ)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IS_ENABLED(CONFIG_ARC_FIRQ_STACK)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!IS_ENABLED(CONFIG_ARC_STACK_CHECKING)),<sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;irq<sp/>priority<sp/>cannot<sp/>be<sp/>set<sp/>to<sp/>0<sp/>when<sp/>CONFIG_ARC_FIRQ_STACK&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;is<sp/>not<sp/>configured<sp/>or<sp/>CONFIG_ARC_FIRQ_STACK<sp/>&quot;<sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;and<sp/>CONFIG_ARC_STACK_CHECKING<sp/>are<sp/>configured<sp/>together&quot;);<sp/>\</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_irq_priority_set(irq_p,<sp/>priority_p,<sp/>flags_p);<sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="arch_2arc_2v2_2irq_8h_1a5707c683cd09e9c45a77ac305d9a3513" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arch_2arc_2v2_2irq_8h_1a5707c683cd09e9c45a77ac305d9a3513" kindref="member">arch_isr_direct_header</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_TRACING_ISR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__subsys__tracing__apis_1ga37f43a02961a847af3b7de6c474a8da4" kindref="member">sys_trace_isr_enter</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="arch_2arc_2v2_2irq_8h_1a678e87bf86d19e45c2fcb95ec969465b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arch_2arc_2v2_2irq_8h_1a678e87bf86d19e45c2fcb95ec969465b" kindref="member">arch_isr_direct_footer</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maybe_swap)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>SW<sp/>generated<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z_arc_v2_aux_reg_read(_ARC_V2_ICAUSE)<sp/>==</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_arc_v2_aux_reg_read(_ARC_V2_AUX_IRQ_HINT))<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_arc_v2_aux_reg_write(_ARC_V2_AUX_IRQ_HINT,<sp/>0);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_TRACING_ISR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__subsys__tracing__apis_1ga7113e2760b1a7ffb1bfa108ad9bfb4be" kindref="member">sys_trace_isr_exit</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="arch_2arc_2v2_2irq_8h_1a6c6d57983c066fe8ab21a78f86f7adb3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_ISR_DIRECT_HEADER()<sp/>arch_isr_direct_header()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arch_2arc_2v2_2irq_8h_1a5707c683cd09e9c45a77ac305d9a3513" kindref="member">arch_isr_direct_header</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="arch_2arc_2v2_2irq_8h_1aa7c471213fa28b3685f153ea2a72cf9d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_ISR_DIRECT_FOOTER(swap)<sp/>arch_isr_direct_footer(swap)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__CCAC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_ARC_DIRECT_ISR_FUNC_ATTRIBUTE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__interrupt__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_ARC_DIRECT_ISR_FUNC_ATTRIBUTE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interrupt(&quot;ilink&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>Scheduling<sp/>can<sp/>not<sp/>be<sp/>done<sp/>in<sp/>direct<sp/>isr.<sp/>If<sp/>required,<sp/>please<sp/>use<sp/>kernel</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>aware<sp/>interrupt<sp/>handling</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="arch_2arc_2v2_2irq_8h_1a5279598e93dd914614a2ae52557be1a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_ISR_DIRECT_DECLARE(name)<sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>inline<sp/>int<sp/>name##_body(void);<sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((_ARC_DIRECT_ISR_FUNC_ATTRIBUTE))void<sp/>name(void)<sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ISR_DIRECT_HEADER();<sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name##_body();<sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ISR_DIRECT_FOOTER(0);<sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>inline<sp/>int<sp/>name##_body(void)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="arch_2arc_2v2_2irq_8h_1a1496f4f860a99f42e1aee15ce5c9b3e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="common_8h_1aa1dec568e79152c892dcf63f445cbd7a" kindref="member">ALWAYS_INLINE</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="arch_2arc_2v2_2irq_8h_1a1496f4f860a99f42e1aee15ce5c9b3e2" kindref="member">arch_irq_lock</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;clri<sp/>%0&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=r&quot;</highlight><highlight class="normal">(<ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>)::<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="arch_2arc_2v2_2irq_8h_1a203e02b994beba0d006dad9f6d797c27" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="common_8h_1aa1dec568e79152c892dcf63f445cbd7a" kindref="member">ALWAYS_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arch_2arc_2v2_2irq_8h_1a203e02b994beba0d006dad9f6d797c27" kindref="member">arch_irq_unlock</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;seti<sp/>%0&quot;</highlight><highlight class="normal"><sp/>:<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;ir&quot;</highlight><highlight class="normal">(<ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="arch_2arc_2v2_2irq_8h_1adb441b26ed6818fea4ebba6b8853354b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="common_8h_1aa1dec568e79152c892dcf63f445cbd7a" kindref="member">ALWAYS_INLINE</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="arch_2arc_2v2_2irq_8h_1adb441b26ed6818fea4ebba6b8853354b" kindref="member">arch_irq_unlocked</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ARC<sp/>irq<sp/>lock<sp/>uses<sp/>instruction<sp/>&quot;clri<sp/>r0&quot;,</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>r0<sp/>==<sp/><sp/>{26’d0,<sp/>1’b1,<sp/>STATUS32.IE,<sp/>STATUS32.E[3:0]<sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>bit4<sp/>is<sp/>used<sp/>to<sp/>record<sp/>IE<sp/>(Interrupt<sp/>Enable)<sp/>bit</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref><sp/>&amp;<sp/>0x10)<sp/><sp/>==<sp/><sp/>0x10;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_ASMLANGUAGE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_ARCH_ARC_V2_IRQ_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/arch/arc/v2/irq.h"/>
  </compounddef>
</doxygen>
