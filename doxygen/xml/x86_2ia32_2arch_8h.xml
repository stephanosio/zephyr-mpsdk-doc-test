<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="x86_2ia32_2arch_8h" kind="file" language="C++">
    <compoundname>arch.h</compoundname>
    <includes refid="arch_2x86_2ia32_2sys__io_8h" local="yes">sys_io.h</includes>
    <includes refid="stdbool_8h" local="no">stdbool.h</includes>
    <includes refid="kernel__structs_8h" local="no">kernel_structs.h</includes>
    <includes refid="ffs_8h" local="no">arch/common/ffs.h</includes>
    <includes refid="util_8h" local="no">sys/util.h</includes>
    <includes refid="arch_2x86_2ia32_2gdbstub_8h" local="no">arch/x86/ia32/gdbstub.h</includes>
    <includes refid="arch_2x86_2ia32_2thread_8h" local="no">arch/x86/ia32/thread.h</includes>
    <includes refid="arch_2x86_2ia32_2syscall_8h" local="no">arch/x86/ia32/syscall.h</includes>
    <includes local="no">stddef.h</includes>
    <includes refid="addr__types_8h" local="no">arch/common/addr_types.h</includes>
    <includes refid="segmentation_8h" local="no">arch/x86/ia32/segmentation.h</includes>
    <includes refid="pm_8h" local="no">pm/pm.h</includes>
    <includedby refid="x86_2arch_8h" local="no">include/arch/x86/arch.h</includedby>
    <incdepgraph>
      <node id="32">
        <label>arch/common/addr_types.h</label>
        <link refid="addr__types_8h"/>
      </node>
      <node id="23">
        <label>arch/common/ffs.h</label>
        <link refid="ffs_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="1">
        <label>include/arch/x86/ia32/arch.h</label>
        <link refid="x86_2ia32_2arch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>arch/x86/ia32/gdbstub.h</label>
        <link refid="arch_2x86_2ia32_2gdbstub_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>arch/x86/ia32/segmentation.h</label>
        <link refid="segmentation_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>sys_io.h</label>
        <link refid="arch_2x86_2ia32_2sys__io_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>arch/x86/ia32/syscall.h</label>
        <link refid="arch_2x86_2ia32_2syscall_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>arch/x86/ia32/thread.h</label>
        <link refid="arch_2x86_2ia32_2thread_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>arch/x86/mmustructs.h</label>
        <link refid="mmustructs_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="43">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="45">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="41">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="39">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="47">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="48">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="44">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="42">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="46">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="15">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>pm/pm.h</label>
        <link refid="pm_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>pm/state.h</label>
        <link refid="state_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="17">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sys/sys_io.h</label>
        <link refid="sys_2sys__io_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="11">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="4">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="6">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="19">
        <label>alloca.h</label>
      </node>
      <node id="38">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="37">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="51">
        <label>syscalls/errno_private.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/arch/x86/arch.h</label>
        <link refid="x86_2arch_8h"/>
      </node>
      <node id="1">
        <label>include/arch/x86/ia32/arch.h</label>
        <link refid="x86_2ia32_2arch_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structs__isrList" prot="public">s_isrList</innerclass>
    <innerclass refid="structnanoEsf" prot="public">nanoEsf</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1a01cd8f711fd0961b75a23e9d4642d7c3" prot="public" static="no">
        <name>CODE_SEG</name>
        <initializer>0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="36" column="9" bodyfile="include/arch/x86/ia32/arch.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1aee584332ca956b4e1167180bf9a456bb" prot="public" static="no">
        <name>DATA_SEG</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="37" column="9" bodyfile="include/arch/x86/ia32/arch.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1a5817f0b628919c0d0b092b2a961187e6" prot="public" static="no">
        <name>MAIN_TSS</name>
        <initializer>0x18</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="38" column="9" bodyfile="include/arch/x86/ia32/arch.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1a8f9b184e3ebb59e9ec8c62b187b5ad4d" prot="public" static="no">
        <name>DF_TSS</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="39" column="9" bodyfile="include/arch/x86/ia32/arch.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1abe9fa73b285cb69f2d541fbfd62923fc" prot="public" static="no">
        <name>GS_TLS_SEG</name>
        <initializer>(0x38 | 0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="47" column="9" bodyfile="include/arch/x86/ia32/arch.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1a9de710989afc64c692b4366e89c42e9b" prot="public" static="no">
        <name>MK_ISR_NAME</name>
        <param><defname>x</defname></param>
        <initializer>__isr__##x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro used internally by NANO_CPU_INT_REGISTER and NANO_CPU_INT_REGISTER_ASM. Not meant to be used explicitly by platform, driver or application code. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="58" column="9" bodyfile="include/arch/x86/ia32/arch.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1aa4db2c24f5de7f8bae4a0f290fb70456" prot="public" static="no">
        <name>NANO_CPU_INT_REGISTER</name>
        <param><defname>r</defname></param>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <param><defname>v</defname></param>
        <param><defname>d</defname></param>
        <initializer>	 static <ref refid="x86_2ia32_2arch_8h_1abd14415ccf779280bd7eac3974b6a378" kindref="member">ISR_LIST</ref> __attribute__((section(&quot;.intList&quot;))) \
			 __attribute__((used)) <ref refid="x86_2ia32_2arch_8h_1a9de710989afc64c692b4366e89c42e9b" kindref="member">MK_ISR_NAME</ref>(<ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref>) = \
			{ \
				.fnc = &amp;(<ref refid="asm-macro-64-bit-gnu_8h_1af16d2973cfd145a2ebdbf9528d5d9ae2" kindref="member">r</ref>), \
				.irq = (n), \
				.priority = (<ref refid="kobject_8c_1a5bf2789125fcfa98cff775cb82fbd3c9" kindref="member">p</ref>), \
				.vec = (v), \
				.dpl = (<ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>), \
				.tss = 0 \
			}</initializer>
        <briefdescription>
<para>Connect a routine to an interrupt vector. </para>
        </briefdescription>
        <detaileddescription>
<para>This macro &quot;connects&quot; the specified routine, <emphasis>r</emphasis>, to the specified interrupt vector, <emphasis>v</emphasis> using the descriptor privilege level <emphasis>d</emphasis>. On the IA-32 architecture, an interrupt vector is a value from 0 to 255. This macro populates the special intList section with the address of the routine, the vector number and the descriptor privilege level. The genIdt tool then picks up this information and generates an actual IDT entry with this information properly encoded.</para>
<para>The <emphasis>d</emphasis> argument specifies the privilege level for the interrupt-gate descriptor; (hardware) interrupts and exceptions should specify a level of 0, whereas handlers for user-mode software generated interrupts should specify 3. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>Routine to be connected </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>IRQ number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>IRQ priority </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt Vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>Descriptor Privilege Level </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="120" column="9" bodyfile="include/arch/x86/ia32/arch.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1a745054d50f7d95a9cfdb394521cb407f" prot="public" static="no">
        <name>IRQSTUBS_TEXT_SECTION</name>
        <initializer>&quot;.text.irqstubs&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="176" column="10" bodyfile="include/arch/x86/ia32/arch.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1accdf8a59e00ac1c1fcedc18b78be4b8a" prot="public" static="no">
        <name>ARCH_IRQ_CONNECT</name>
        <param><defname>irq_p</defname></param>
        <param><defname>priority_p</defname></param>
        <param><defname>isr_p</defname></param>
        <param><defname>isr_param_p</defname></param>
        <param><defname>flags_p</defname></param>
        <initializer>{ \
	__asm__ __volatile__(							\
		&quot;.pushsection .<ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">intList\n\t</ref>&quot; \
		&quot;.long %<ref refid="kobject_8c_1aa52df6052d1a8a5319a5c99bbc852281" kindref="member">c</ref>[isr]_irq%<ref refid="kobject_8c_1aa52df6052d1a8a5319a5c99bbc852281" kindref="member">c</ref>[irq]<ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">_stub\n\t</ref>&quot;	/* ISR_LIST.fnc */ \
		&quot;.long %<ref refid="kobject_8c_1aa52df6052d1a8a5319a5c99bbc852281" kindref="member">c</ref>[irq]\<ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">n\t</ref>&quot;		/* ISR_LIST.irq */ \
		&quot;.long %<ref refid="kobject_8c_1aa52df6052d1a8a5319a5c99bbc852281" kindref="member">c</ref>[priority]\<ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">n\t</ref>&quot;	/* ISR_LIST.priority */ \
		&quot;.long %<ref refid="kobject_8c_1aa52df6052d1a8a5319a5c99bbc852281" kindref="member">c</ref>[vector]\<ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">n\t</ref>&quot;		/* ISR_LIST.vec */ \
		&quot;.long 0\<ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">n\t</ref>&quot;			/* ISR_LIST.dpl */ \
		&quot;.long 0\<ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">n\t</ref>&quot;			/* ISR_LIST.tss */ \
		&quot;.popsection\n\t&quot; \
		&quot;.pushsection &quot; IRQSTUBS_TEXT_SECTION &quot;\n\t&quot; \
		&quot;.global %<ref refid="kobject_8c_1aa52df6052d1a8a5319a5c99bbc852281" kindref="member">c</ref>[isr]_irq%<ref refid="kobject_8c_1aa52df6052d1a8a5319a5c99bbc852281" kindref="member">c</ref>[irq]<ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">_stub\n\t</ref>&quot; \
		&quot;%<ref refid="kobject_8c_1aa52df6052d1a8a5319a5c99bbc852281" kindref="member">c</ref>[isr]_irq%<ref refid="kobject_8c_1aa52df6052d1a8a5319a5c99bbc852281" kindref="member">c</ref>[irq]<ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">_stub:\n\t</ref>&quot; \
		&quot;pushl %[isr_param]\<ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">n\t</ref>&quot; \
		&quot;pushl %[isr]\<ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">n\t</ref>&quot; \
		&quot;jmp <ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">_interrupt_enter\n\t</ref>&quot; \
		&quot;.<ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">popsection\n\t</ref>&quot; \
		: \
		: [isr] &quot;i&quot; (isr_p), \
		  [isr_param] &quot;i&quot; (isr_param_p), \
		  [priority] &quot;i&quot; (priority_p), \
		  [vector] &quot;i&quot; _VECTOR_ARG(irq_p), \
		  [irq] &quot;i&quot; (irq_p)); \
	z_irq_controller_irq_config(Z_IRQ_TO_INTERRUPT_VECTOR(irq_p), (irq_p), \
				   (flags_p)); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="197" column="9" bodyfile="include/arch/x86/ia32/arch.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1a875f2b1ca924721fe3854796bd96c2db" prot="public" static="no">
        <name>ARCH_IRQ_DIRECT_CONNECT</name>
        <param><defname>irq_p</defname></param>
        <param><defname>priority_p</defname></param>
        <param><defname>isr_p</defname></param>
        <param><defname>flags_p</defname></param>
        <initializer>{ \
	<ref refid="x86_2ia32_2arch_8h_1aa4db2c24f5de7f8bae4a0f290fb70456" kindref="member">NANO_CPU_INT_REGISTER</ref>(isr_p, irq_p, priority_p, -1, 0); \
	z_irq_controller_irq_config(Z_IRQ_TO_INTERRUPT_VECTOR(irq_p), (irq_p), \
				   (flags_p)); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="241" column="9" bodyfile="include/arch/x86/ia32/arch.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1a491cb79acec18c83b9a61b0b45dfab69" prot="public" static="no">
        <name>ARCH_ISR_DIRECT_PM</name>
        <param></param>
        <initializer>do { } while (<ref refid="stdbool_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="259" column="10" bodyfile="include/arch/x86/ia32/arch.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1a6c6d57983c066fe8ab21a78f86f7adb3" prot="public" static="no">
        <name>ARCH_ISR_DIRECT_HEADER</name>
        <param></param>
        <initializer><ref refid="x86_2ia32_2arch_8h_1ac8579cbf5edce72a6a4bfbbed3166683" kindref="member">arch_isr_direct_header</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="262" column="9" bodyfile="include/arch/x86/ia32/arch.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1aa7c471213fa28b3685f153ea2a72cf9d" prot="public" static="no">
        <name>ARCH_ISR_DIRECT_FOOTER</name>
        <param><defname>swap</defname></param>
        <initializer><ref refid="x86_2ia32_2arch_8h_1a13a88acdff251283bf6f364e4393adaf" kindref="member">arch_isr_direct_footer</ref>(swap)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="263" column="9" bodyfile="include/arch/x86/ia32/arch.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1a5279598e93dd914614a2ae52557be1a5" prot="public" static="no">
        <name>ARCH_ISR_DIRECT_DECLARE</name>
        <param><defname>name</defname></param>
        <initializer>	static inline int name##_body(void); \
	__attribute__ ((interrupt)) void name(void *stack_frame) \
	{ \
		ARG_UNUSED(stack_frame); \
		int check_reschedule; \
		<ref refid="group__isr__apis_1ga1ab99dbeb50b228001e1fca808cbaeea" kindref="member">ISR_DIRECT_HEADER</ref>(); \
		check_reschedule = name##_body(); \
		<ref refid="group__isr__apis_1ga31581157c9dbacf935f0e6a8dd456335" kindref="member">ISR_DIRECT_FOOTER</ref>(check_reschedule); \
	} \
	static inline int name##_body(void)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="323" column="9" bodyfile="include/arch/x86/ia32/arch.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1ae52cccc5fa73fafe5a7fb60accb11e35" prot="public" static="no">
        <name>NANO_SOFT_IRQ</name>
        <initializer>((<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int) (-1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The NANO_SOFT_IRQ macro must be used as the value for the <emphasis>irq</emphasis> parameter to NANO_CPU_INT_REGISTER when connecting to an interrupt that does not correspond to any IRQ line (such as spurious vector or SW IRQ) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="398" column="9" bodyfile="include/arch/x86/ia32/arch.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1a8d3604770d7735d229e7d2fef4ff590a" prot="public" static="no">
        <name>ARCH_EXCEPT</name>
        <param><defname>reason_p</defname></param>
        <initializer>	do { \
	__asm__ volatile( \
		&quot;push %[reason]\<ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">n\t</ref>&quot; \
		&quot;int %[vector]\<ref refid="test__sched__timeslice__and__lock_8c_1a858810a6da56663cf4e01aecb4f6e8aa" kindref="member">n\t</ref>&quot; \
		: \
		: [vector] &quot;i&quot; (Z_X86_OOPS_VECTOR), \
		  [reason] &quot;i&quot; (reason_p)); \
	CODE_UNREACHABLE; /* LCOV_EXCL_LINE */ \
} while (<ref refid="stdbool_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="416" column="9" bodyfile="include/arch/x86/ia32/arch.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="x86_2ia32_2arch_8h_1ad0a10d482624ef8d91859f5bcdc2f647" prot="public" static="no">
        <name>ARCH_DYNAMIC_OBJ_K_THREAD_ALIGNMENT</name>
        <initializer>(sizeof(void *))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="441" column="9" bodyfile="include/arch/x86/ia32/arch.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="x86_2ia32_2arch_8h_1abd14415ccf779280bd7eac3974b6a378" prot="public" static="no">
        <type>struct <ref refid="structs__isrList" kindref="compound">s_isrList</ref></type>
        <definition>typedef struct s_isrList ISR_LIST</definition>
        <argsstring></argsstring>
        <name>ISR_LIST</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="96" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="x86_2ia32_2arch_8h_1ac8579cbf5edce72a6a4bfbbed3166683" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void arch_isr_direct_header</definition>
        <argsstring>(void)</argsstring>
        <name>arch_isr_direct_header</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="273" column="20" bodyfile="include/arch/x86/ia32/arch.h" bodystart="273" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="x86_2ia32_2arch_8h_1a4ced4d5bdb1d0f3d069d9384615ed394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arch_isr_direct_footer_swap</definition>
        <argsstring>(unsigned int key)</argsstring>
        <name>arch_isr_direct_footer_swap</name>
        <param>
          <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="290" column="13" declfile="include/arch/x86/ia32/arch.h" declline="290" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="x86_2ia32_2arch_8h_1a13a88acdff251283bf6f364e4393adaf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void arch_isr_direct_footer</definition>
        <argsstring>(int swap)</argsstring>
        <name>arch_isr_direct_footer</name>
        <param>
          <type>int</type>
          <declname>swap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="292" column="20" bodyfile="include/arch/x86/ia32/arch.h" bodystart="292" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="x86_2ia32_2arch_8h_1a1496f4f860a99f42e1aee15ce5c9b3e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common_8h_1aa1dec568e79152c892dcf63f445cbd7a" kindref="member">ALWAYS_INLINE</ref> <ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
        <definition>static ALWAYS_INLINE unsigned int arch_irq_lock</definition>
        <argsstring>(void)</argsstring>
        <name>arch_irq_lock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/arch.h" line="383" column="35" bodyfile="include/arch/x86/ia32/arch.h" bodystart="383" bodyend="390"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>IA-32 specific kernel interface header This header contains the IA-32 specific kernel interface. It is included by the generic kernel interface header (include/arch/cpu.h) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2014<sp/>Wind<sp/>River<sp/>Systems,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_ARCH_X86_IA32_ARCH_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_ARCH_X86_IA32_ARCH_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sys_2sys__io_8h" kindref="compound">sys_io.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdbool_8h" kindref="compound">stdbool.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="kernel__structs_8h" kindref="compound">kernel_structs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ffs_8h" kindref="compound">arch/common/ffs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="util_8h" kindref="compound">sys/util.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="arch_2x86_2ia32_2gdbstub_8h" kindref="compound">arch/x86/ia32/gdbstub.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="arch_2x86_2ia32_2thread_8h" kindref="compound">arch/x86/ia32/thread.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="arch_2x86_2ia32_2syscall_8h" kindref="compound">arch/x86/ia32/syscall.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_ASMLANGUAGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>size_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="addr__types_8h" kindref="compound">arch/common/addr_types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="segmentation_8h" kindref="compound">arch/x86/ia32/segmentation.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="pm_8h" kindref="compound">pm/pm.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_ASMLANGUAGE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GDT<sp/>layout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="x86_2ia32_2arch_8h_1a01cd8f711fd0961b75a23e9d4642d7c3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CODE_SEG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="x86_2ia32_2arch_8h_1aee584332ca956b4e1167180bf9a456bb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DATA_SEG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="x86_2ia32_2arch_8h_1a5817f0b628919c0d0b092b2a961187e6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAIN_TSS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="x86_2ia32_2arch_8h_1a8f9b184e3ebb59e9ec8c62b187b5ad4d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DF_TSS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>Use<sp/>for<sp/>thread<sp/>local<sp/>storage.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>Match<sp/>these<sp/>to<sp/>gen_gdt.py.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>The<sp/>0x03<sp/>is<sp/>added<sp/>to<sp/>limit<sp/>privilege.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_USERSPACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="x86_2ia32_2arch_8h_1abe9fa73b285cb69f2d541fbfd62923fc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GS_TLS_SEG<sp/><sp/><sp/><sp/><sp/><sp/>(0x38<sp/>|<sp/>0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_HW_STACK_PROTECTION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GS_TLS_SEG<sp/><sp/><sp/><sp/><sp/><sp/>(0x28<sp/>|<sp/>0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GS_TLS_SEG<sp/><sp/><sp/><sp/><sp/><sp/>(0x18<sp/>|<sp/>0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="x86_2ia32_2arch_8h_1a9de710989afc64c692b4366e89c42e9b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MK_ISR_NAME(x)<sp/>__isr__##x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_DYN_STUB_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_DYN_STUB_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_DYN_STUB_LONG_JMP_EXTRA_SIZE<sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_DYN_STUB_PER_BLOCK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_ASMLANGUAGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>interrupt/exception/error<sp/>related<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="structs__isrList" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structs__isrList" kindref="compound">s_isrList</ref><sp/>{</highlight></codeline>
<codeline lineno="76" refid="structs__isrList_1a62299be9af7bf7d395c5ad34fdcc4f03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structs__isrList_1a62299be9af7bf7d395c5ad34fdcc4f03" kindref="member">fnc</ref>;</highlight></codeline>
<codeline lineno="81" refid="structs__isrList_1a885d8d1a26e11d2b6fb6b951da96550c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structs__isrList_1a885d8d1a26e11d2b6fb6b951da96550c" kindref="member">irq</ref>;</highlight></codeline>
<codeline lineno="83" refid="structs__isrList_1af8bdba11e6c31f4920b18c117bb93bf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structs__isrList_1af8bdba11e6c31f4920b18c117bb93bf9" kindref="member">priority</ref>;</highlight></codeline>
<codeline lineno="87" refid="structs__isrList_1af1bc7016fb72489f391db03a9fdf0fd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structs__isrList_1af1bc7016fb72489f391db03a9fdf0fd3" kindref="member">vec</ref>;</highlight></codeline>
<codeline lineno="89" refid="structs__isrList_1a6e70d162cb57609281f497ea5eb0321e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structs__isrList_1a6e70d162cb57609281f497ea5eb0321e" kindref="member">dpl</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="structs__isrList_1a2278f1081695c526ba30fa5f9f8aaecd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structs__isrList_1a2278f1081695c526ba30fa5f9f8aaecd" kindref="member">tss</ref>;</highlight></codeline>
<codeline lineno="96" refid="x86_2ia32_2arch_8h_1abd14415ccf779280bd7eac3974b6a378" refkind="member"><highlight class="normal">}<sp/><ref refid="x86_2ia32_2arch_8h_1abd14415ccf779280bd7eac3974b6a378" kindref="member">ISR_LIST</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="x86_2ia32_2arch_8h_1aa4db2c24f5de7f8bae4a0f290fb70456" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NANO_CPU_INT_REGISTER(r,<sp/>n,<sp/>p,<sp/>v,<sp/>d)<sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>ISR_LIST<sp/>__attribute__((section(&quot;.intList&quot;</highlight><highlight class="normal">)))<sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__((used))<sp/>MK_ISR_NAME(r)<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.fnc<sp/>=<sp/>&amp;(r),<sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.irq<sp/>=<sp/>(n),<sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.priority<sp/>=<sp/>(p),<sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.vec<sp/>=<sp/>(v),<sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dpl<sp/>=<sp/>(d),<sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tss<sp/>=<sp/>0<sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_X86_IDT_TSS_REGISTER(tss_p,<sp/>irq_p,<sp/>priority_p,<sp/>vec_p,<sp/>dpl_p)<sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>ISR_LIST<sp/>__attribute__((section(&quot;.intList&quot;</highlight><highlight class="normal">)))<sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__((used))<sp/>MK_ISR_NAME(r)<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.fnc<sp/>=<sp/>NULL,<sp/>\</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.irq<sp/>=<sp/>(irq_p),<sp/>\</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.priority<sp/>=<sp/>(priority_p),<sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.vec<sp/>=<sp/>(vec_p),<sp/>\</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dpl<sp/>=<sp/>(dpl_p),<sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tss<sp/>=<sp/>(tss_p)<sp/>\</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_VECTOR_ARG(irq_p)<sp/><sp/><sp/><sp/><sp/><sp/>(-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_LINKER_USE_PINNED_SECTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IRQSTUBS_TEXT_SECTION<sp/><sp/><sp/>&quot;.pinned_text.irqstubs&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="x86_2ia32_2arch_8h_1a745054d50f7d95a9cfdb394521cb407f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IRQSTUBS_TEXT_SECTION<sp/><sp/><sp/>&quot;.text.irqstubs&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Internally<sp/>this<sp/>function<sp/>does<sp/>a<sp/>few<sp/>things:</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>1.<sp/>There<sp/>is<sp/>a<sp/>declaration<sp/>of<sp/>the<sp/>interrupt<sp/>parameters<sp/>in<sp/>the<sp/>.intList</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>section,<sp/>used<sp/>by<sp/>gen_idt<sp/>to<sp/>create<sp/>the<sp/>IDT.<sp/>This<sp/>does<sp/>the<sp/>same<sp/>thing</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>as<sp/>the<sp/>NANO_CPU_INT_REGISTER()<sp/>macro,<sp/>but<sp/>is<sp/>done<sp/>in<sp/>assembly<sp/>as<sp/>we</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>need<sp/>to<sp/>populate<sp/>the<sp/>.fnc<sp/>member<sp/>with<sp/>the<sp/>address<sp/>of<sp/>the<sp/>assembly</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>IRQ<sp/>stub<sp/>that<sp/>we<sp/>generate<sp/>immediately<sp/>afterwards.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>2.<sp/>The<sp/>IRQ<sp/>stub<sp/>itself<sp/>is<sp/>declared.<sp/>The<sp/>code<sp/>will<sp/>go<sp/>in<sp/>its<sp/>own<sp/>named</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*<sp/>section<sp/>.text.irqstubs<sp/>section<sp/>(which<sp/>eventually<sp/>gets<sp/>linked<sp/>into<sp/>&apos;text&apos;)</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>and<sp/>the<sp/>stub<sp/>shall<sp/>be<sp/>named<sp/>(isr_name)_irq(irq_line)_stub</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*<sp/>3.<sp/>The<sp/>IRQ<sp/>stub<sp/>pushes<sp/>the<sp/>ISR<sp/>routine<sp/>and<sp/>its<sp/>argument<sp/>onto<sp/>the<sp/>stack</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/>and<sp/>then<sp/>jumps<sp/>to<sp/>the<sp/>common<sp/>interrupt<sp/>handling<sp/>code<sp/>in<sp/>_interrupt_enter().</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*<sp/>4.<sp/>z_irq_controller_irq_config()<sp/>is<sp/>called<sp/>at<sp/>runtime<sp/>to<sp/>set<sp/>the<sp/>mapping</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>between<sp/>the<sp/>vector<sp/>and<sp/>the<sp/>IRQ<sp/>line<sp/>as<sp/>well<sp/>as<sp/>triggering<sp/>flags</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="x86_2ia32_2arch_8h_1accdf8a59e00ac1c1fcedc18b78be4b8a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_IRQ_CONNECT(irq_p,<sp/>priority_p,<sp/>isr_p,<sp/>isr_param_p,<sp/>flags_p)<sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.pushsection<sp/>.intList\n\t&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.long<sp/>%c[isr]_irq%c[irq]_stub\n\t&quot;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ISR_LIST.fnc<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.long<sp/>%c[irq]\n\t&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ISR_LIST.irq<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.long<sp/>%c[priority]\n\t&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ISR_LIST.priority<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.long<sp/>%c[vector]\n\t&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ISR_LIST.vec<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.long<sp/>0\n\t&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ISR_LIST.dpl<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.long<sp/>0\n\t&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ISR_LIST.tss<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.popsection\n\t&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.pushsection<sp/>&quot;<sp/>IRQSTUBS_TEXT_SECTION<sp/>&quot;\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.global<sp/>%c[isr]_irq%c[irq]_stub\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;%c[isr]_irq%c[irq]_stub:\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;pushl<sp/>%[isr_param]\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;pushl<sp/>%[isr]\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;jmp<sp/>_interrupt_enter\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.popsection\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>[isr]<sp/>&quot;i&quot;<sp/>(isr_p),<sp/>\</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[isr_param]<sp/>&quot;i&quot;<sp/>(isr_param_p),<sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[priority]<sp/>&quot;i&quot;<sp/>(priority_p),<sp/>\</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[vector]<sp/>&quot;i&quot;<sp/>_VECTOR_ARG(irq_p),<sp/>\</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[irq]<sp/>&quot;i&quot;<sp/>(irq_p));<sp/>\</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_irq_controller_irq_config(Z_IRQ_TO_INTERRUPT_VECTOR(irq_p),<sp/>(irq_p),<sp/>\</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(flags_p));<sp/>\</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_PCIE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_PCIE_IRQ_CONNECT(bdf_p,<sp/>irq_p,<sp/>priority_p,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isr_p,<sp/>isr_param_p,<sp/>flags_p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARCH_IRQ_CONNECT(irq_p,<sp/>priority_p,<sp/>isr_p,<sp/>isr_param_p,<sp/>flags_p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_PCIE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Direct<sp/>interrupts<sp/>won&apos;t<sp/>work<sp/>as<sp/>expected<sp/>with<sp/>KPTI<sp/>turned<sp/>on,<sp/>because</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>all<sp/>non-user<sp/>accessible<sp/>pages<sp/>in<sp/>the<sp/>page<sp/>table<sp/>are<sp/>marked<sp/>non-present.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*<sp/>It&apos;s<sp/>likely<sp/>possible<sp/>to<sp/>add<sp/>logic<sp/>to<sp/>ARCH_ISR_DIRECT_HEADER/FOOTER<sp/>to<sp/>do</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/>the<sp/>necessary<sp/>trampolining<sp/>to<sp/>switch<sp/>page<sp/>tables<sp/>/<sp/>stacks,<sp/>but<sp/>this</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>probably<sp/>loses<sp/>all<sp/>the<sp/>latency<sp/>benefits<sp/>that<sp/>direct<sp/>interrupts<sp/>provide</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>and<sp/>one<sp/>might<sp/>as<sp/>well<sp/>use<sp/>a<sp/>regular<sp/>interrupt<sp/>anyway.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CONFIG_X86_KPTI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="x86_2ia32_2arch_8h_1a875f2b1ca924721fe3854796bd96c2db" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_IRQ_DIRECT_CONNECT(irq_p,<sp/>priority_p,<sp/>isr_p,<sp/>flags_p)<sp/>\</highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NANO_CPU_INT_REGISTER(isr_p,<sp/>irq_p,<sp/>priority_p,<sp/>-1,<sp/>0);<sp/>\</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_irq_controller_irq_config(Z_IRQ_TO_INTERRUPT_VECTOR(irq_p),<sp/>(irq_p),<sp/>\</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(flags_p));<sp/>\</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_PM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>arch_irq_direct_pm(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_kernel.idle)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_kernel.idle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_pm_save_idle_exit();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_ISR_DIRECT_PM()<sp/>arch_irq_direct_pm()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="x86_2ia32_2arch_8h_1a491cb79acec18c83b9a61b0b45dfab69" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_ISR_DIRECT_PM()<sp/>do<sp/>{<sp/>}<sp/>while<sp/>(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="x86_2ia32_2arch_8h_1a6c6d57983c066fe8ab21a78f86f7adb3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_ISR_DIRECT_HEADER()<sp/>arch_isr_direct_header()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="x86_2ia32_2arch_8h_1aa7c471213fa28b3685f153ea2a72cf9d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_ISR_DIRECT_FOOTER(swap)<sp/>arch_isr_direct_footer(swap)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FIXME:</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/>tracing/tracing.h<sp/>cannot<sp/>be<sp/>included<sp/>here<sp/>due<sp/>to<sp/>circular<sp/>dependency</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_TRACING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__subsys__tracing__apis_1ga37f43a02961a847af3b7de6c474a8da4" kindref="member">sys_trace_isr_enter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__subsys__tracing__apis_1ga7113e2760b1a7ffb1bfa108ad9bfb4be" kindref="member">sys_trace_isr_exit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="x86_2ia32_2arch_8h_1ac8579cbf5edce72a6a4bfbbed3166683" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="x86_2ia32_2arch_8h_1ac8579cbf5edce72a6a4bfbbed3166683" kindref="member">arch_isr_direct_header</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_TRACING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__subsys__tracing__apis_1ga37f43a02961a847af3b7de6c474a8da4" kindref="member">sys_trace_isr_enter</ref>();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>not<sp/>going<sp/>to<sp/>unlock<sp/>IRQs,<sp/>but<sp/>we<sp/>still<sp/>need<sp/>to<sp/>increment<sp/>this</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>that<sp/>arch_is_in_isr()<sp/>works</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++_kernel.cpus[0].nested;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*<sp/>FIXME:<sp/>z_swap_irqlock<sp/>is<sp/>an<sp/>inline<sp/>function<sp/>declared<sp/>in<sp/>a<sp/>private<sp/>header<sp/>and</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cannot<sp/>be<sp/>referenced<sp/>from<sp/>a<sp/>public<sp/>header,<sp/>so<sp/>we<sp/>move<sp/>it<sp/>to<sp/>an</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>external<sp/>function.</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="x86_2ia32_2arch_8h_1a4ced4d5bdb1d0f3d069d9384615ed394" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="x86_2ia32_2arch_8h_1a4ced4d5bdb1d0f3d069d9384615ed394" kindref="member">arch_isr_direct_footer_swap</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="x86_2ia32_2arch_8h_1a13a88acdff251283bf6f364e4393adaf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="x86_2ia32_2arch_8h_1a13a88acdff251283bf6f364e4393adaf" kindref="member">arch_isr_direct_footer</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swap)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_irq_controller_eoi();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_TRACING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__subsys__tracing__apis_1ga7113e2760b1a7ffb1bfa108ad9bfb4be" kindref="member">sys_trace_isr_exit</ref>();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--_kernel.cpus[0].nested;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>swap<sp/>if<sp/>all<sp/>the<sp/>following<sp/>is<sp/>true:</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1)<sp/>swap<sp/>argument<sp/>was<sp/>enabled<sp/>to<sp/>this<sp/>function</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>2)<sp/>We<sp/>are<sp/>not<sp/>in<sp/>a<sp/>nested<sp/>interrupt</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>3)<sp/>Next<sp/>thread<sp/>to<sp/>run<sp/>in<sp/>the<sp/>ready<sp/>queue<sp/>is<sp/>not<sp/>this<sp/>thread</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>_kernel.cpus[0].nested<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_kernel.ready_q.cache<sp/>!=<sp/>_current)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fetch<sp/>EFLAGS<sp/>argument<sp/>to<sp/>z_swap()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pushfl\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;popl<sp/>%0\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=g&quot;</highlight><highlight class="normal"><sp/>(<ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="x86_2ia32_2arch_8h_1a4ced4d5bdb1d0f3d069d9384615ed394" kindref="member">arch_isr_direct_footer_swap</ref>(<ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="x86_2ia32_2arch_8h_1a5279598e93dd914614a2ae52557be1a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_ISR_DIRECT_DECLARE(name)<sp/>\</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>inline<sp/>int<sp/>name##_body(void);<sp/>\</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((interrupt))<sp/>void<sp/>name(void<sp/>*stack_frame)<sp/>\</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(stack_frame);<sp/>\</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>check_reschedule;<sp/>\</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ISR_DIRECT_HEADER();<sp/>\</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_reschedule<sp/>=<sp/>name##_body();<sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ISR_DIRECT_FOOTER(check_reschedule);<sp/>\</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="333"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>inline<sp/>int<sp/>name##_body(void)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!CONFIG_X86_KPTI<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="structnanoEsf" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnanoEsf" kindref="compound">nanoEsf</ref><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_GDBSTUB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="structnanoEsf_1a4ae87af42cd376c493dccd3fd257e823" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1a4ae87af42cd376c493dccd3fd257e823" kindref="member">ss</ref>;</highlight></codeline>
<codeline lineno="352" refid="structnanoEsf_1a6f38a14fc76ee0ef99ef9ce5b7eb10fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1a6f38a14fc76ee0ef99ef9ce5b7eb10fe" kindref="member">gs</ref>;</highlight></codeline>
<codeline lineno="353" refid="structnanoEsf_1a8e2788e018d8ceb3b83cd889d86723d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1a8e2788e018d8ceb3b83cd889d86723d9" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="354" refid="structnanoEsf_1a61d97934f9586b15ef9082ff57317362" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1a61d97934f9586b15ef9082ff57317362" kindref="member">es</ref>;</highlight></codeline>
<codeline lineno="355" refid="structnanoEsf_1a6d5b8f4e7c220b804de0951294aaab95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1a6d5b8f4e7c220b804de0951294aaab95" kindref="member">ds</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="structnanoEsf_1ab872f78692b5e2145fc891880558238d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1ab872f78692b5e2145fc891880558238d" kindref="member">esp</ref>;</highlight></codeline>
<codeline lineno="358" refid="structnanoEsf_1a4a4c4ec64e8f01e8a6e3e14bde63aa8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1a4a4c4ec64e8f01e8a6e3e14bde63aa8c" kindref="member">ebp</ref>;</highlight></codeline>
<codeline lineno="359" refid="structnanoEsf_1afe46163b57c39529c3dce5284b0a7eb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1afe46163b57c39529c3dce5284b0a7eb8" kindref="member">ebx</ref>;</highlight></codeline>
<codeline lineno="360" refid="structnanoEsf_1aff8554d808df765988252674e89d7bef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1aff8554d808df765988252674e89d7bef" kindref="member">esi</ref>;</highlight></codeline>
<codeline lineno="361" refid="structnanoEsf_1a483a384f835722c4c99a70e3c690e37a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1a483a384f835722c4c99a70e3c690e37a" kindref="member">edi</ref>;</highlight></codeline>
<codeline lineno="362" refid="structnanoEsf_1a92a995abd01f4a5fd1a4f04a4e6400a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1a92a995abd01f4a5fd1a4f04a4e6400a4" kindref="member">edx</ref>;</highlight></codeline>
<codeline lineno="363" refid="structnanoEsf_1a1e72ac245fae9d8454ea572780fe6845" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1a1e72ac245fae9d8454ea572780fe6845" kindref="member">eax</ref>;</highlight></codeline>
<codeline lineno="364" refid="structnanoEsf_1a4741e6bc706a7489fe2b45c34f7bdbb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1a4741e6bc706a7489fe2b45c34f7bdbb6" kindref="member">ecx</ref>;</highlight></codeline>
<codeline lineno="365" refid="structnanoEsf_1ae3b485a947962361d91ee59786d46b93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1ae3b485a947962361d91ee59786d46b93" kindref="member">errorCode</ref>;</highlight></codeline>
<codeline lineno="366" refid="structnanoEsf_1af1f3d43a394af43c49caf59a8bd384ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1af1f3d43a394af43c49caf59a8bd384ab" kindref="member">eip</ref>;</highlight></codeline>
<codeline lineno="367" refid="structnanoEsf_1a8ed38e432a8ef09ee219d062802bcb78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1a8ed38e432a8ef09ee219d062802bcb78" kindref="member">cs</ref>;</highlight></codeline>
<codeline lineno="368" refid="structnanoEsf_1acfb5ead961181e179f31f92393517420" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnanoEsf_1acfb5ead961181e179f31f92393517420" kindref="member">eflags</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}<sp/>z_arch_esf_t;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_x86_exception_vector;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_x86_syscall_stack_frame<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>eip;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>cs;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>eflags;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>only<sp/>present<sp/>if<sp/>cs<sp/>=<sp/>USER_CODE_SEG<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>esp;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>ss;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">};</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="x86_2ia32_2arch_8h_1a1496f4f860a99f42e1aee15ce5c9b3e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="common_8h_1aa1dec568e79152c892dcf63f445cbd7a" kindref="member">ALWAYS_INLINE</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="x86_2ia32_2arch_8h_1a1496f4f860a99f42e1aee15ce5c9b3e2" kindref="member">arch_irq_lock</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;pushfl;<sp/>cli;<sp/>popl<sp/>%0&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=g&quot;</highlight><highlight class="normal"><sp/>(<ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>)<sp/>::<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="x86_2ia32_2arch_8h_1ae52cccc5fa73fafe5a7fb60accb11e35" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NANO_SOFT_IRQ<sp/><sp/><sp/>((unsigned<sp/>int)<sp/>(-1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_X86_ENABLE_TSS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtask__state__segment" kindref="compound">task_state_segment</ref><sp/>_main_tss;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="x86_2ia32_2arch_8h_1a8d3604770d7735d229e7d2fef4ff590a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_EXCEPT(reason_p)<sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>volatile(<sp/>\</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;push<sp/>%[reason]\n\t&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;int<sp/>%[vector]\n\t&quot;<sp/>\</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>[vector]<sp/>&quot;i&quot;<sp/>(Z_X86_OOPS_VECTOR),<sp/>\</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[reason]<sp/>&quot;i&quot;<sp/>(reason_p));<sp/>\</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CODE_UNREACHABLE;<sp/></highlight><highlight class="comment">/*<sp/>LCOV_EXCL_LINE<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="424"><highlight class="preprocessor">}<sp/>while<sp/>(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*<sp/>Dynamic<sp/>thread<sp/>object<sp/>memory<sp/>alignment.</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>*<sp/>If<sp/>support<sp/>for<sp/>SSEx<sp/>extensions<sp/>is<sp/>enabled<sp/>a<sp/>16<sp/>byte<sp/>boundary<sp/>is<sp/>required,</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>*<sp/>since<sp/>the<sp/>&apos;fxsave&apos;<sp/>and<sp/>&apos;fxrstor&apos;<sp/>instructions<sp/>require<sp/>this.<sp/>In<sp/>all<sp/>other</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/>*<sp/>cases<sp/>a<sp/>4<sp/>byte<sp/>boundary<sp/>is<sp/>sufficient.</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_EAGER_FPU_SHARING)<sp/>||<sp/>defined(CONFIG_LAZY_FPU_SHARING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_SSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_DYNAMIC_OBJ_K_THREAD_ALIGNMENT<sp/><sp/><sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_DYNAMIC_OBJ_K_THREAD_ALIGNMENT<sp/><sp/><sp/><sp/><sp/>(sizeof(void<sp/>*))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>No<sp/>special<sp/>alignment<sp/>requirements,<sp/>simply<sp/>align<sp/>on<sp/>pointer<sp/>size.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="x86_2ia32_2arch_8h_1ad0a10d482624ef8d91859f5bcdc2f647" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARCH_DYNAMIC_OBJ_K_THREAD_ALIGNMENT<sp/><sp/><sp/><sp/><sp/>(sizeof(void<sp/>*))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_*_FP_SHARING<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!_ASMLANGUAGE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_ARCH_X86_IA32_ARCH_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/arch/x86/ia32/arch.h"/>
  </compounddef>
</doxygen>
