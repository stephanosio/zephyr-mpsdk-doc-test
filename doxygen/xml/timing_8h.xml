<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="timing_8h" kind="file" language="C++">
    <compoundname>timing.h</compoundname>
    <includes refid="arch__interface_8h" local="no">sys/arch_interface.h</includes>
    <includes refid="include_2timing_2types_8h" local="no">timing/types.h</includes>
    <includedby refid="mem__protect_2demand__paging_2src_2main_8c" local="no">tests/kernel/mem_protect/demand_paging/src/main.c</includedby>
    <incdepgraph>
      <node id="10">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="8">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="2">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/timing/timing.h</label>
        <link refid="timing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="3">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="5">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="7">
        <label>arch/cpu.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/timing/timing.h</label>
        <link refid="timing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>tests/kernel/mem_protect/demand_paging/src/main.c</label>
        <link refid="mem__protect_2demand__paging_2src_2main_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="timing_8h_1a46359ee972c8af3540ffd866e1722fd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void soc_timing_init</definition>
        <argsstring>(void)</argsstring>
        <name>soc_timing_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="13" column="6" declfile="include/timing/timing.h" declline="13" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1a38bf58ad86707eba888ebf19b2bb3020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void soc_timing_start</definition>
        <argsstring>(void)</argsstring>
        <name>soc_timing_start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="14" column="6" declfile="include/timing/timing.h" declline="14" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1a1d05ea99038456ff1b6b2bf8c5289688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void soc_timing_stop</definition>
        <argsstring>(void)</argsstring>
        <name>soc_timing_stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="15" column="6" declfile="include/timing/timing.h" declline="15" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1a58abe336c243b2edb34d77b8247ac9e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref></type>
        <definition>timing_t soc_timing_counter_get</definition>
        <argsstring>(void)</argsstring>
        <name>soc_timing_counter_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="16" column="10" declfile="include/timing/timing.h" declline="16" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1a97f010f79b60089b982d60d543e07660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>uint64_t soc_timing_cycles_get</definition>
        <argsstring>(volatile timing_t *const start, volatile timing_t *const end)</argsstring>
        <name>soc_timing_cycles_get</name>
        <param>
          <type>volatile <ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref> *const</type>
          <declname>start</declname>
        </param>
        <param>
          <type>volatile <ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref> *const</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="17" column="10" declfile="include/timing/timing.h" declline="17" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1af9416f2d3438df707e883e4b4a212a7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>uint64_t soc_timing_freq_get</definition>
        <argsstring>(void)</argsstring>
        <name>soc_timing_freq_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="19" column="10" declfile="include/timing/timing.h" declline="19" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1aa6135848e3b4aa536d977fcbe8b71d5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>uint64_t soc_timing_cycles_to_ns</definition>
        <argsstring>(uint64_t cycles)</argsstring>
        <name>soc_timing_cycles_to_ns</name>
        <param>
          <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
          <declname>cycles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="20" column="10" declfile="include/timing/timing.h" declline="20" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1a54e65aedaaa3befce5ce1f2e92740fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>uint64_t soc_timing_cycles_to_ns_avg</definition>
        <argsstring>(uint64_t cycles, uint32_t count)</argsstring>
        <name>soc_timing_cycles_to_ns_avg</name>
        <param>
          <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
          <declname>cycles</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="21" column="10" declfile="include/timing/timing.h" declline="21" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1a7fecec11527b307c39467745912bd511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t soc_timing_freq_get_mhz</definition>
        <argsstring>(void)</argsstring>
        <name>soc_timing_freq_get_mhz</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="22" column="10" declfile="include/timing/timing.h" declline="22" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1a742db89830e823a804691d1946a8659c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void board_timing_init</definition>
        <argsstring>(void)</argsstring>
        <name>board_timing_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="24" column="6" declfile="include/timing/timing.h" declline="24" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1af086f6f6881fd1e530a91f56c7ca3972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void board_timing_start</definition>
        <argsstring>(void)</argsstring>
        <name>board_timing_start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="25" column="6" declfile="include/timing/timing.h" declline="25" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1a5cf801e99ca32b4dcb86d82c8d4c10d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void board_timing_stop</definition>
        <argsstring>(void)</argsstring>
        <name>board_timing_stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="26" column="6" declfile="include/timing/timing.h" declline="26" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1afda53aa3668e5a98d92d48eec6c6da3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref></type>
        <definition>timing_t board_timing_counter_get</definition>
        <argsstring>(void)</argsstring>
        <name>board_timing_counter_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="27" column="10" declfile="include/timing/timing.h" declline="27" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1a087f9f0a8915ec2f23e64c2e8b023ec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>uint64_t board_timing_cycles_get</definition>
        <argsstring>(volatile timing_t *const start, volatile timing_t *const end)</argsstring>
        <name>board_timing_cycles_get</name>
        <param>
          <type>volatile <ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref> *const</type>
          <declname>start</declname>
        </param>
        <param>
          <type>volatile <ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref> *const</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="28" column="10" declfile="include/timing/timing.h" declline="28" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1a905f59f65aae3802906274ff6d8ab1ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>uint64_t board_timing_freq_get</definition>
        <argsstring>(void)</argsstring>
        <name>board_timing_freq_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="30" column="10" declfile="include/timing/timing.h" declline="30" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1a05755593eaf5ab7c2cc9af3d33bea343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>uint64_t board_timing_cycles_to_ns</definition>
        <argsstring>(uint64_t cycles)</argsstring>
        <name>board_timing_cycles_to_ns</name>
        <param>
          <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
          <declname>cycles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="31" column="10" declfile="include/timing/timing.h" declline="31" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1a69ec0aee09f8492f293a3e90a49faa83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>uint64_t board_timing_cycles_to_ns_avg</definition>
        <argsstring>(uint64_t cycles, uint32_t count)</argsstring>
        <name>board_timing_cycles_to_ns_avg</name>
        <param>
          <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
          <declname>cycles</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="32" column="10" declfile="include/timing/timing.h" declline="32" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="timing_8h_1ac32edf3332275176d6fa7563da0e06ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t board_timing_freq_get_mhz</definition>
        <argsstring>(void)</argsstring>
        <name>board_timing_freq_get_mhz</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="33" column="10" declfile="include/timing/timing.h" declline="33" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1ga50ff9040b99d95c56f494014831e4b47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timing_init</definition>
        <argsstring>(void)</argsstring>
        <name>timing_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the timing subsystem. </para>
        </briefdescription>
        <detaileddescription>
<para>Perform the necessary steps to initialize the timing subsystem. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="49" column="6" declfile="include/timing/timing.h" declline="49" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1ga3c28bb4ced0467c284d33c800e070bde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timing_start</definition>
        <argsstring>(void)</argsstring>
        <name>timing_start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Signal the start of the timing information gathering. </para>
        </briefdescription>
        <detaileddescription>
<para>Signal to the timing subsystem that timing information will be gathered from this point forward. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="57" column="6" declfile="include/timing/timing.h" declline="57" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1gade1584bf683c9c61905513efa4d99cf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timing_stop</definition>
        <argsstring>(void)</argsstring>
        <name>timing_stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Signal the end of the timing information gathering. </para>
        </briefdescription>
        <detaileddescription>
<para>Signal to the timing subsystem that timing information is no longer being gathered from this point forward. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="65" column="6" declfile="include/timing/timing.h" declline="65" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1gaa5736c87362de09749af1d8ff30b8208" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref></type>
        <definition>static timing_t timing_counter_get</definition>
        <argsstring>(void)</argsstring>
        <name>timing_counter_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return timing counter. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Timing counter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="72" column="24" bodyfile="include/timing/timing.h" bodystart="72" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1gaa12074c7645b19578e7ca573c6aa2955" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>static uint64_t timing_cycles_get</definition>
        <argsstring>(volatile timing_t *const start, volatile timing_t *const end)</argsstring>
        <name>timing_cycles_get</name>
        <param>
          <type>volatile <ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref> *const</type>
          <declname>start</declname>
        </param>
        <param>
          <type>volatile <ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref> *const</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Get number of cycles between <computeroutput>start</computeroutput> and <computeroutput>end</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>For some architectures or SoCs, the raw numbers from counter need to be scaled to obtain actual number of cycles.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to counter at start of a measured execution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to counter at stop of a measured execution. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of cycles between start and end. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="93" column="24" bodyfile="include/timing/timing.h" bodystart="93" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1gab72ed08d19630cb4cbea4977f2e6723b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>static uint64_t timing_freq_get</definition>
        <argsstring>(void)</argsstring>
        <name>timing_freq_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get frequency of counter used (in Hz). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Frequency of counter used for timing in Hz. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="110" column="24" bodyfile="include/timing/timing.h" bodystart="110" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1ga14a85981068350f33c63c93c4b71afe2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>static uint64_t timing_cycles_to_ns</definition>
        <argsstring>(uint64_t cycles)</argsstring>
        <name>timing_cycles_to_ns</name>
        <param>
          <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
          <declname>cycles</declname>
        </param>
        <briefdescription>
<para>Convert number of <computeroutput>cycles</computeroutput> into nanoseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cycles</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of cycles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Converted time value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="127" column="24" bodyfile="include/timing/timing.h" bodystart="127" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1ga28b0252f3395b6e6b549cb03ea4dbef4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>static uint64_t timing_cycles_to_ns_avg</definition>
        <argsstring>(uint64_t cycles, uint32_t count)</argsstring>
        <name>timing_cycles_to_ns_avg</name>
        <param>
          <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
          <declname>cycles</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Convert number of <computeroutput>cycles</computeroutput> into nanoseconds with averaging. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cycles</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of cycles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Times of accumulated cycles to average over </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Converted time value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="145" column="24" bodyfile="include/timing/timing.h" bodystart="145" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="group__timing__api_1ga65370ad32eadf61c84b90dc04ecd1d56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>static uint32_t timing_freq_get_mhz</definition>
        <argsstring>(void)</argsstring>
        <name>timing_freq_get_mhz</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get frequency of counter used (in MHz). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Frequency of counter used for timing in MHz. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/timing/timing.h" line="161" column="24" bodyfile="include/timing/timing.h" bodystart="161" bodyend="170"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Intel<sp/>Corporation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_TIMING_TIMING_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_TIMING_TIMING_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="arch__interface_8h" kindref="compound">sys/arch_interface.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2timing_2types_8h" kindref="compound">timing/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="timing_8h_1a46359ee972c8af3540ffd866e1722fd0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1a46359ee972c8af3540ffd866e1722fd0" kindref="member">soc_timing_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14" refid="timing_8h_1a38bf58ad86707eba888ebf19b2bb3020" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1a38bf58ad86707eba888ebf19b2bb3020" kindref="member">soc_timing_start</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15" refid="timing_8h_1a1d05ea99038456ff1b6b2bf8c5289688" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1a1d05ea99038456ff1b6b2bf8c5289688" kindref="member">soc_timing_stop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16" refid="timing_8h_1a58abe336c243b2edb34d77b8247ac9e2" refkind="member"><highlight class="normal"><ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref><sp/><ref refid="timing_8h_1a58abe336c243b2edb34d77b8247ac9e2" kindref="member">soc_timing_counter_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17" refid="timing_8h_1a97f010f79b60089b982d60d543e07660" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="timing_8h_1a97f010f79b60089b982d60d543e07660" kindref="member">soc_timing_cycles_get</ref>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>end);</highlight></codeline>
<codeline lineno="19" refid="timing_8h_1af9416f2d3438df707e883e4b4a212a7f" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="timing_8h_1af9416f2d3438df707e883e4b4a212a7f" kindref="member">soc_timing_freq_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20" refid="timing_8h_1aa6135848e3b4aa536d977fcbe8b71d5e" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="timing_8h_1aa6135848e3b4aa536d977fcbe8b71d5e" kindref="member">soc_timing_cycles_to_ns</ref>(<ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/>cycles);</highlight></codeline>
<codeline lineno="21" refid="timing_8h_1a54e65aedaaa3befce5ce1f2e92740fdd" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="timing_8h_1a54e65aedaaa3befce5ce1f2e92740fdd" kindref="member">soc_timing_cycles_to_ns_avg</ref>(<ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/>cycles,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="22" refid="timing_8h_1a7fecec11527b307c39467745912bd511" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="timing_8h_1a7fecec11527b307c39467745912bd511" kindref="member">soc_timing_freq_get_mhz</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="timing_8h_1a742db89830e823a804691d1946a8659c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1a742db89830e823a804691d1946a8659c" kindref="member">board_timing_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25" refid="timing_8h_1af086f6f6881fd1e530a91f56c7ca3972" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1af086f6f6881fd1e530a91f56c7ca3972" kindref="member">board_timing_start</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26" refid="timing_8h_1a5cf801e99ca32b4dcb86d82c8d4c10d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1a5cf801e99ca32b4dcb86d82c8d4c10d8" kindref="member">board_timing_stop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27" refid="timing_8h_1afda53aa3668e5a98d92d48eec6c6da3a" refkind="member"><highlight class="normal"><ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref><sp/><ref refid="timing_8h_1afda53aa3668e5a98d92d48eec6c6da3a" kindref="member">board_timing_counter_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28" refid="timing_8h_1a087f9f0a8915ec2f23e64c2e8b023ec8" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="timing_8h_1a087f9f0a8915ec2f23e64c2e8b023ec8" kindref="member">board_timing_cycles_get</ref>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>end);</highlight></codeline>
<codeline lineno="30" refid="timing_8h_1a905f59f65aae3802906274ff6d8ab1ee" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="timing_8h_1a905f59f65aae3802906274ff6d8ab1ee" kindref="member">board_timing_freq_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31" refid="timing_8h_1a05755593eaf5ab7c2cc9af3d33bea343" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="timing_8h_1a05755593eaf5ab7c2cc9af3d33bea343" kindref="member">board_timing_cycles_to_ns</ref>(<ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/>cycles);</highlight></codeline>
<codeline lineno="32" refid="timing_8h_1a69ec0aee09f8492f293a3e90a49faa83" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="timing_8h_1a69ec0aee09f8492f293a3e90a49faa83" kindref="member">board_timing_cycles_to_ns_avg</ref>(<ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/>cycles,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="33" refid="timing_8h_1ac32edf3332275176d6fa7563da0e06ff" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="timing_8h_1ac32edf3332275176d6fa7563da0e06ff" kindref="member">board_timing_freq_get_mhz</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_TIMING_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="group__timing__api_1ga50ff9040b99d95c56f494014831e4b47" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__timing__api_1ga50ff9040b99d95c56f494014831e4b47" kindref="member">timing_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="group__timing__api_1ga3c28bb4ced0467c284d33c800e070bde" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__timing__api_1ga3c28bb4ced0467c284d33c800e070bde" kindref="member">timing_start</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group__timing__api_1gade1584bf683c9c61905513efa4d99cf2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__timing__api_1gade1584bf683c9c61905513efa4d99cf2" kindref="member">timing_stop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="group__timing__api_1gaa5736c87362de09749af1d8ff30b8208" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref><sp/><ref refid="group__timing__api_1gaa5736c87362de09749af1d8ff30b8208" kindref="member">timing_counter_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_BOARD_HAS_TIMING_FUNCTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1afda53aa3668e5a98d92d48eec6c6da3a" kindref="member">board_timing_counter_get</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_SOC_HAS_TIMING_FUNCTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1a58abe336c243b2edb34d77b8247ac9e2" kindref="member">soc_timing_counter_get</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__arch-timing_1gad7a709477650c8596a96fe080f583fdd" kindref="member">arch_timing_counter_get</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="group__timing__api_1gaa12074c7645b19578e7ca573c6aa2955" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="group__timing__api_1gaa12074c7645b19578e7ca573c6aa2955" kindref="member">timing_cycles_get</ref>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="include_2timing_2types_8h_1a08ae2ef7b1cd6f125db0cb548ea1f0e2" kindref="member">timing_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>end)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_BOARD_HAS_TIMING_FUNCTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1a087f9f0a8915ec2f23e64c2e8b023ec8" kindref="member">board_timing_cycles_get</ref>(start,<sp/>end);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_SOC_HAS_TIMING_FUNCTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1a97f010f79b60089b982d60d543e07660" kindref="member">soc_timing_cycles_get</ref>(start,<sp/>end);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__arch-timing_1ga44d3a7bd8b7008c9cd6c0524e97f128c" kindref="member">arch_timing_cycles_get</ref>(start,<sp/>end);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="group__timing__api_1gab72ed08d19630cb4cbea4977f2e6723b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="group__timing__api_1gab72ed08d19630cb4cbea4977f2e6723b" kindref="member">timing_freq_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_BOARD_HAS_TIMING_FUNCTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1a905f59f65aae3802906274ff6d8ab1ee" kindref="member">board_timing_freq_get</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_SOC_HAS_TIMING_FUNCTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1af9416f2d3438df707e883e4b4a212a7f" kindref="member">soc_timing_freq_get</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__arch-timing_1ga026409e1dc323ceddb82b2a6f1cc7ca2" kindref="member">arch_timing_freq_get</ref>();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="group__timing__api_1ga14a85981068350f33c63c93c4b71afe2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="group__timing__api_1ga14a85981068350f33c63c93c4b71afe2" kindref="member">timing_cycles_to_ns</ref>(<ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/>cycles)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_BOARD_HAS_TIMING_FUNCTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1a05755593eaf5ab7c2cc9af3d33bea343" kindref="member">board_timing_cycles_to_ns</ref>(cycles);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_SOC_HAS_TIMING_FUNCTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1aa6135848e3b4aa536d977fcbe8b71d5e" kindref="member">soc_timing_cycles_to_ns</ref>(cycles);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__arch-timing_1ga8424bc96c05dcae34b7ffd445e2916fe" kindref="member">arch_timing_cycles_to_ns</ref>(cycles);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="group__timing__api_1ga28b0252f3395b6e6b549cb03ea4dbef4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="group__timing__api_1ga28b0252f3395b6e6b549cb03ea4dbef4" kindref="member">timing_cycles_to_ns_avg</ref>(<ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/>cycles,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_BOARD_HAS_TIMING_FUNCTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1a69ec0aee09f8492f293a3e90a49faa83" kindref="member">board_timing_cycles_to_ns_avg</ref>(cycles,<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_SOC_HAS_TIMING_FUNCTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1a54e65aedaaa3befce5ce1f2e92740fdd" kindref="member">soc_timing_cycles_to_ns_avg</ref>(cycles,<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__arch-timing_1ga925b4caff80f1dbac36531b479b24364" kindref="member">arch_timing_cycles_to_ns_avg</ref>(cycles,<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="group__timing__api_1ga65370ad32eadf61c84b90dc04ecd1d56" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="group__timing__api_1ga65370ad32eadf61c84b90dc04ecd1d56" kindref="member">timing_freq_get_mhz</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_BOARD_HAS_TIMING_FUNCTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1ac32edf3332275176d6fa7563da0e06ff" kindref="member">board_timing_freq_get_mhz</ref>();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_SOC_HAS_TIMING_FUNCTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="timing_8h_1a7fecec11527b307c39467745912bd511" kindref="member">soc_timing_freq_get_mhz</ref>();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__arch-timing_1ga1f7bfb9ce0588f3b423c2a63933d40eb" kindref="member">arch_timing_freq_get_mhz</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_TIMING_FUNCTIONS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_TIMING_TIMING_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/timing/timing.h"/>
  </compounddef>
</doxygen>
