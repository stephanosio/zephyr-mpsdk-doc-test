<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="test__queue__user_8c" kind="file" language="C++">
    <compoundname>test_queue_user.c</compoundname>
    <includes refid="test__queue_8h" local="yes">test_queue.h</includes>
    <incdepgraph>
      <node id="18">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="67">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="66">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="30">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="37">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="39">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="35">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="33">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="41">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="42">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="38">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="36">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="40">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="76">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="46">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="52">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="29">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="43">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="24">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="5">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="20">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="87">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="88">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="14">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="9">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="12">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="65">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="89">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="82">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="3">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>ztest_error_hook.h</label>
        <link refid="ztest__error__hook_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="16">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>test_queue.h</label>
        <link refid="test__queue_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/queue/src/test_queue_user.c</label>
        <link refid="test__queue__user_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>alloca.h</label>
      </node>
      <node id="69">
        <label>arch/cpu.h</label>
      </node>
      <node id="32">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="31">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="44">
        <label>kernel.h</label>
      </node>
      <node id="7">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="85">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="90">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="91">
        <label>tc_util.h</label>
      </node>
      <node id="10">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="test__queue__user_8c_1a6423a880df59733d2d9b509c7718d3a9" prot="public" static="no">
        <name>STACK_SIZE</name>
        <initializer>(512 + CONFIG_TEST_EXTRA_STACK_SIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_user.c" line="11" column="9" bodyfile="tests/kernel/queue/src/test_queue_user.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__queue__user_8c_1aa0db7e0f64676a51b9d71faafae093cd" prot="public" static="no">
        <name>LIST_LEN</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_user.c" line="12" column="9" bodyfile="tests/kernel/queue/src/test_queue_user.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="test__queue__user_8c_1a15a127467b6a19f4cb0d47df2c636b82" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread child_thread</definition>
        <argsstring></argsstring>
        <name>child_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_user.c" line="15" column="22" bodyfile="tests/kernel/queue/src/test_queue_user.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__queue__user_8c_1aeb8db63c76587937d2d2be8ef84e5c10" prot="public" static="yes" mutable="no">
        <type><ref refid="group__ztest__test_1gac3de5965061b1164a8033712c9094e23" kindref="member">ZTEST_BMEM</ref> struct <ref refid="structqdata" kindref="compound">qdata</ref></type>
        <definition>ZTEST_BMEM struct qdata qdata[5 *2]</definition>
        <argsstring>[5 *2]</argsstring>
        <name>qdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_user.c" line="16" column="30" bodyfile="tests/kernel/queue/src/test_queue_user.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__queue__user_8c_1aafd6368b560d1dc20714366afcaa3e18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_DEFINE</definition>
        <argsstring>(child_stack,(512+CONFIG_TEST_EXTRA_STACK_SIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>child_stack</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACK_SIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_user.c" line="14" column="8" declfile="tests/kernel/queue/src/test_queue_user.c" declline="14" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="test__queue__user_8c_1aadcda5b12ed4dcd690ae06dd96f8b17b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void child_thread_get</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>child_thread_get</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_user.c" line="27" column="6" bodyfile="tests/kernel/queue/src/test_queue_user.c" bodystart="27" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__queue__tests_1ga8dbdde7179df55dbcfff1cbebae0901b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_queue_supv_to_user</definition>
        <argsstring>(void)</argsstring>
        <name>test_queue_supv_to_user</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Verify queue elements and cancel wait from a user thread. </para>
        </briefdescription>
        <detaileddescription>
<para>The test adds elements to queue and then verified by the child user thread. Get data from a empty queue,and use K_FORVER to wait for available And to cancel wait from current thread.</para>
<para><simplesect kind="see"><para><ref refid="group__queue__apis_1gaa84522a5ace6e7f8ba61033baca6972f" kindref="member">k_queue_append()</ref>, <ref refid="group__queue__apis_1ga690f3a1450e946d75f31b3e499d1d06a" kindref="member">k_queue_alloc_append()</ref>, <ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init()</ref>, <ref refid="group__queue__apis_1ga7c39d86cc6509f59ff9223cac3ea5071" kindref="member">k_queue_cancel_wait()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_user.c" line="73" column="6" bodyfile="tests/kernel/queue/src/test_queue_user.c" bodystart="73" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__queue__tests_1gacf4a07403bef6fa6caa29c0abbfbf960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_queue_alloc_prepend_user</definition>
        <argsstring>(void)</argsstring>
        <name>test_queue_alloc_prepend_user</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>verify allocate and feature &quot;Last In, First Out&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Create a new queue And allocated memory for the queue Initialize and insert data item in sequence. Verify the feather &quot;Last in,First out&quot;</para>
<para><simplesect kind="see"><para><ref refid="group__queue__apis_1gacf3dba40125073c11075e5a134919f88" kindref="member">k_queue_alloc_prepend()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_user.c" line="129" column="6" bodyfile="tests/kernel/queue/src/test_queue_user.c" bodystart="129" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__queue__tests_1gaa517a1497728197f4cada7f397ba6fee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_queue_alloc_append_user</definition>
        <argsstring>(void)</argsstring>
        <name>test_queue_alloc_append_user</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>verify feature of queue &quot;First In, First Out&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Create a new queue And allocated memory for the queue Initialize and insert data item in sequence. Verify the feather &quot;First in,First out&quot;</para>
<para><simplesect kind="see"><para><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init()</ref>, <ref refid="group__queue__apis_1ga690f3a1450e946d75f31b3e499d1d06a" kindref="member">k_queue_alloc_append()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_user.c" line="163" column="6" bodyfile="tests/kernel/queue/src/test_queue_user.c" bodystart="163" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__queue__tests_1gab194fe3b40e86eb2c6178e372cc8d8c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_auto_free</definition>
        <argsstring>(void)</argsstring>
        <name>test_auto_free</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test to verify free of allocated elements of queue. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/queue/src/test_queue_user.c" line="189" column="6" bodyfile="tests/kernel/queue/src/test_queue_user.c" bodystart="189" bodyend="205"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="test__queue_8h" kindref="compound">test_queue.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STACK_SIZE<sp/>(512<sp/>+<sp/>CONFIG_TEST_EXTRA_STACK_SIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="test__queue__user_8c_1aafd6368b560d1dc20714366afcaa3e18" kindref="member">K_THREAD_STACK_DEFINE</ref>(child_stack,<sp/><ref refid="test__queue__user_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="test__queue__user_8c_1a15a127467b6a19f4cb0d47df2c636b82" kindref="member">child_thread</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__ztest__test__deprecated_1gac3de5965061b1164a8033712c9094e23" kindref="member">ZTEST_BMEM</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqdata" kindref="compound">qdata</ref><sp/><ref refid="structqdata" kindref="compound">qdata</ref>[<ref refid="test__queue__user_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref><sp/>*<sp/>2];</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Higher<sp/>priority<sp/>than<sp/>the<sp/>thread<sp/>putting<sp/>stuff<sp/>in<sp/>the<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__queue__user_8c_1aadcda5b12ed4dcd690ae06dd96f8b17b" kindref="member">child_thread_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqdata" kindref="compound">qdata</ref><sp/>*qd;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_queue<sp/>*<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref><sp/>=<sp/>p1;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/>*<ref refid="timeout__order_8c_1a415c37e05febf68101d95d933a50c66b" kindref="member">sem</ref><sp/>=<sp/>p2;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__queue__apis_1gadb2bb8088868b3c5801c72b320389ca9" kindref="member">k_queue_is_empty</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd<sp/>=<sp/><ref refid="group__queue__apis_1ga8ccd5137690c127a0f7d67619b88a52b" kindref="member">k_queue_peek_head</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(qd-&gt;<ref refid="structqdata_1a5795db7bfb15a492c00bcfcc26da7da4" kindref="member">data</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd<sp/>=<sp/><ref refid="group__queue__apis_1ga27a460c42836d8b093ad9274c14bb176" kindref="member">k_queue_peek_tail</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(qd-&gt;<ref refid="structqdata_1a5795db7bfb15a492c00bcfcc26da7da4" kindref="member">data</ref>,<sp/>(<ref refid="test__queue__user_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref><sp/>*<sp/>2)<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;got<sp/>%d<sp/>expected<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>qd-&gt;<ref refid="structqdata_1a5795db7bfb15a492c00bcfcc26da7da4" kindref="member">data</ref>,<sp/>(<ref refid="test__queue__user_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref><sp/>*<sp/>2)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(<ref refid="test__queue__user_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref><sp/>*<sp/>2);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd<sp/>=<sp/><ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(qd-&gt;<ref refid="structqdata_1a5795db7bfb15a492c00bcfcc26da7da4" kindref="member">data</ref>,<sp/>i,<sp/>NULL);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qd-&gt;<ref refid="structqdata_1a8c934a64260963919ccf0552f164ffed" kindref="member">allocated</ref>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>snode<sp/>should<sp/>never<sp/>have<sp/>been<sp/>touched<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga0380ea00fa3775f9a8a05faaf4de71b7" kindref="member">zassert_is_null</ref>(qd-&gt;<ref refid="structqdata_1a1ae3d3014b38a4371a221fe5ec0f49fb" kindref="member">snode</ref>.next,<sp/>NULL);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__queue__apis_1gadb2bb8088868b3c5801c72b320389ca9" kindref="member">k_queue_is_empty</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>one<sp/>gets<sp/>canceled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd<sp/>=<sp/><ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga0380ea00fa3775f9a8a05faaf4de71b7" kindref="member">zassert_is_null</ref>(qd,<sp/>NULL);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(<ref refid="timeout__order_8c_1a415c37e05febf68101d95d933a50c66b" kindref="member">sem</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__queue__tests_1ga8dbdde7179df55dbcfff1cbebae0901b" kindref="member">test_queue_supv_to_user</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Supervisor<sp/>mode<sp/>will<sp/>add<sp/>a<sp/>bunch<sp/>of<sp/>data,<sp/>some<sp/>with<sp/>alloc</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>some<sp/>not</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_queue<sp/>*<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/>*<ref refid="timeout__order_8c_1a415c37e05febf68101d95d933a50c66b" kindref="member">sem</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref><sp/>=<sp/>k_object_alloc(K_OBJ_QUEUE);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gad78332e6bd37812e56ccc4af601542e4" kindref="member">zassert_not_null</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>allocated<sp/>queue<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timeout__order_8c_1a415c37e05febf68101d95d933a50c66b" kindref="member">sem</ref><sp/>=<sp/>k_object_alloc(K_OBJ_SEM);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gad78332e6bd37812e56ccc4af601542e4" kindref="member">zassert_not_null</ref>(<ref refid="timeout__order_8c_1a415c37e05febf68101d95d933a50c66b" kindref="member">sem</ref>,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>semaphore<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(<ref refid="timeout__order_8c_1a415c37e05febf68101d95d933a50c66b" kindref="member">sem</ref>,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(<ref refid="test__queue__user_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref><sp/>*<sp/>2);<sp/>i<sp/>=<sp/>i<sp/>+<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Just<sp/>for<sp/>test<sp/>purposes<sp/>--<sp/>not<sp/>safe<sp/>to<sp/>do<sp/>this<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>real<sp/>world<sp/>as<sp/>user<sp/>mode<sp/>shouldn&apos;t<sp/>have<sp/>any<sp/>access<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>snode<sp/>struct</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structqdata" kindref="compound">qdata</ref>[i].<ref refid="structqdata_1a5795db7bfb15a492c00bcfcc26da7da4" kindref="member">data</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structqdata" kindref="compound">qdata</ref>[i].<ref refid="structqdata_1a8c934a64260963919ccf0552f164ffed" kindref="member">allocated</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structqdata" kindref="compound">qdata</ref>[i].<ref refid="structqdata_1a1ae3d3014b38a4371a221fe5ec0f49fb" kindref="member">snode</ref>.next<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1gaa84522a5ace6e7f8ba61033baca6972f" kindref="member">k_queue_append</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/>&amp;<ref refid="structqdata" kindref="compound">qdata</ref>[i]);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structqdata" kindref="compound">qdata</ref>[i<sp/>+<sp/>1].<ref refid="structqdata_1a5795db7bfb15a492c00bcfcc26da7da4" kindref="member">data</ref><sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structqdata" kindref="compound">qdata</ref>[i<sp/>+<sp/>1].<ref refid="structqdata_1a8c934a64260963919ccf0552f164ffed" kindref="member">allocated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structqdata" kindref="compound">qdata</ref>[i<sp/>+<sp/>1].<ref refid="structqdata_1a1ae3d3014b38a4371a221fe5ec0f49fb" kindref="member">snode</ref>.next<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__queue__apis_1ga690f3a1450e946d75f31b3e499d1d06a" kindref="member">k_queue_alloc_append</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/>&amp;<ref refid="structqdata" kindref="compound">qdata</ref>[i<sp/>+<sp/>1]),<sp/>NULL);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="test__queue__user_8c_1a15a127467b6a19f4cb0d47df2c636b82" kindref="member">child_thread</ref>,<sp/>child_stack,<sp/><ref refid="test__queue__user_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__queue__user_8c_1aadcda5b12ed4dcd690ae06dd96f8b17b" kindref="member">child_thread_get</ref>,<sp/><ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/><ref refid="timeout__order_8c_1a415c37e05febf68101d95d933a50c66b" kindref="member">sem</ref>,<sp/>NULL,<sp/><ref refid="include_2kernel_8h_1a5fd4365cb6e8742e750b5e4950fb1e47" kindref="member">K_HIGHEST_THREAD_PRIO</ref>,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>child<sp/>thread<sp/>runs<sp/>until<sp/>blocking<sp/>on<sp/>the<sp/>last<sp/>k_queue_get()<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga7c39d86cc6509f59ff9223cac3ea5071" kindref="member">k_queue_cancel_wait</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(<ref refid="timeout__order_8c_1a415c37e05febf68101d95d933a50c66b" kindref="member">sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__queue__tests_1gacf4a07403bef6fa6caa29c0abbfbf960" kindref="member">test_queue_alloc_prepend_user</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_queue<sp/>*<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref><sp/>=<sp/>k_object_alloc(K_OBJ_QUEUE);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gad78332e6bd37812e56ccc4af601542e4" kindref="member">zassert_not_null</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>allocated<sp/>queue<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__queue__user_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref><sp/>*<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structqdata" kindref="compound">qdata</ref>[i].<ref refid="structqdata_1a5795db7bfb15a492c00bcfcc26da7da4" kindref="member">data</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__queue__apis_1gacf3dba40125073c11075e5a134919f88" kindref="member">k_queue_alloc_prepend</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/>&amp;<ref refid="structqdata" kindref="compound">qdata</ref>[i]),<sp/>NULL);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(<ref refid="test__queue__user_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref><sp/>*<sp/>2)<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqdata" kindref="compound">qdata</ref><sp/>*qd;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd<sp/>=<sp/><ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(qd<sp/>!=<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(qd-&gt;<ref refid="structqdata_1a5795db7bfb15a492c00bcfcc26da7da4" kindref="member">data</ref>,<sp/>i,<sp/>NULL);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__queue__tests_1gaa517a1497728197f4cada7f397ba6fee" kindref="member">test_queue_alloc_append_user</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_queue<sp/>*<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref><sp/>=<sp/>k_object_alloc(K_OBJ_QUEUE);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gad78332e6bd37812e56ccc4af601542e4" kindref="member">zassert_not_null</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>allocated<sp/>queue<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__queue__apis_1ga0236222d42768c2bf00942f328146c21" kindref="member">k_queue_init</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__queue__user_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref><sp/>*<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structqdata" kindref="compound">qdata</ref>[i].<ref refid="structqdata_1a5795db7bfb15a492c00bcfcc26da7da4" kindref="member">data</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__queue__apis_1ga690f3a1450e946d75f31b3e499d1d06a" kindref="member">k_queue_alloc_append</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/>&amp;<ref refid="structqdata" kindref="compound">qdata</ref>[i]),<sp/>NULL);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__queue__user_8c_1aa0db7e0f64676a51b9d71faafae093cd" kindref="member">LIST_LEN</ref><sp/>*<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqdata" kindref="compound">qdata</ref><sp/>*qd;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd<sp/>=<sp/><ref refid="group__queue__apis_1ga0a77d8556e7d253319275de034f01619" kindref="member">k_queue_get</ref>(<ref refid="kobject_8c_1af7f84481c2afe700dfbc23c96104af84" kindref="member">q</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(qd<sp/>!=<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(qd-&gt;<ref refid="structqdata_1a5795db7bfb15a492c00bcfcc26da7da4" kindref="member">data</ref>,<sp/>i,<sp/>NULL);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__queue__tests_1gab194fe3b40e86eb2c6178e372cc8d8c7" kindref="member">test_auto_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>any<sp/>resources<sp/>requested<sp/>by<sp/>the<sp/>previous<sp/>test<sp/>were<sp/>released</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>by<sp/>allocating<sp/>the<sp/>entire<sp/>pool.<sp/>It<sp/>would<sp/>have<sp/>allocated<sp/>two<sp/>kernel</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>objects<sp/>and<sp/>five<sp/>queue<sp/>elements.<sp/>The<sp/>queue<sp/>elements<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>auto-freed<sp/>when<sp/>they<sp/>are<sp/>de-queued,<sp/>and<sp/>the<sp/>objects<sp/>when<sp/>all</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>threads<sp/>with<sp/>permissions<sp/>exit.</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*b[4];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[i]<sp/>=<sp/><ref refid="group__heap__apis_1ga22b83564e50ae6177388dfe63e32a512" kindref="member">k_heap_alloc</ref>(&amp;<ref refid="pipe_2pipe__api_2src_2main_8c_1a4dc595a0cb08f33192e6b5519acd86b8" kindref="member">test_pool</ref>,<sp/>64,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(b[i]<sp/>!=<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;memory<sp/>not<sp/>auto<sp/>released!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_USERSPACE<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="tests/kernel/queue/src/test_queue_user.c"/>
  </compounddef>
</doxygen>
