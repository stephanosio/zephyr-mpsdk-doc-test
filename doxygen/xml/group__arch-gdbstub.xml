<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__arch-gdbstub" kind="group">
    <compoundname>arch-gdbstub</compoundname>
    <title>Architecture-specific gdbstub APIs</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__arch-gdbstub_1ga21c8a32d35c4d267b8306d595ff1d726" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arch_gdb_init</definition>
        <argsstring>(void)</argsstring>
        <name>arch_gdb_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Architecture layer debug start. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called by <computeroutput>gdb_init()</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/arch_interface.h" line="871" column="6" declfile="include/sys/arch_interface.h" declline="871" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__arch-gdbstub_1ga9c130421feeee919651828511743b346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arch_gdb_continue</definition>
        <argsstring>(void)</argsstring>
        <name>arch_gdb_continue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Continue running program. </para>
        </briefdescription>
        <detaileddescription>
<para>Continue software execution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/arch_interface.h" line="878" column="6" declfile="include/sys/arch_interface.h" declline="878" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__arch-gdbstub_1ga2aa577d5e55c8b739e2be6187336aaf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arch_gdb_step</definition>
        <argsstring>(void)</argsstring>
        <name>arch_gdb_step</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Continue with one step. </para>
        </briefdescription>
        <detaileddescription>
<para>Continue software execution until reaches the next statement. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/arch_interface.h" line="885" column="6" declfile="include/sys/arch_interface.h" declline="885" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__arch-gdbstub_1ga5317106a8022bea2a0d42af0789cc016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t arch_gdb_reg_readall</definition>
        <argsstring>(struct gdb_ctx *ctx, uint8_t *buf, size_t buflen)</argsstring>
        <name>arch_gdb_reg_readall</name>
        <param>
          <type>struct <ref refid="structgdb__ctx" kindref="compound">gdb_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buflen</declname>
        </param>
        <briefdescription>
<para>Read all registers, and outputs as hexadecimal string. </para>
        </briefdescription>
        <detaileddescription>
<para>This reads all CPU registers and outputs as hexadecimal string. The output string must be parsable by GDB.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>GDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to output hexadecimal string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buflen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Length of hexadecimal string written. Return 0 if error or not supported. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/arch_interface.h" line="900" column="8" declfile="include/sys/arch_interface.h" declline="900" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__arch-gdbstub_1ga0ef78d7e193e98549d9665632e53d5ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t arch_gdb_reg_writeall</definition>
        <argsstring>(struct gdb_ctx *ctx, uint8_t *hex, size_t hexlen)</argsstring>
        <name>arch_gdb_reg_writeall</name>
        <param>
          <type>struct <ref refid="structgdb__ctx" kindref="compound">gdb_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>hex</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>hexlen</declname>
        </param>
        <briefdescription>
<para>Take a hexadecimal string and update all registers. </para>
        </briefdescription>
        <detaileddescription>
<para>This takes in a hexadecimal string as presented from GDB, and updates all CPU registers with new values.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>GDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hex</parametername>
</parameternamelist>
<parameterdescription>
<para>Input hexadecimal string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hexlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of hexadecimal string.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Length of hexadecimal string parsed. Return 0 if error or not supported. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/arch_interface.h" line="915" column="8" declfile="include/sys/arch_interface.h" declline="915" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__arch-gdbstub_1gaa3216e9f381f974c374a6399af5cdba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t arch_gdb_reg_readone</definition>
        <argsstring>(struct gdb_ctx *ctx, uint8_t *buf, size_t buflen, uint32_t regno)</argsstring>
        <name>arch_gdb_reg_readone</name>
        <param>
          <type>struct <ref refid="structgdb__ctx" kindref="compound">gdb_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buflen</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>regno</declname>
        </param>
        <briefdescription>
<para>Read one register, and outputs as hexadecimal string. </para>
        </briefdescription>
        <detaileddescription>
<para>This reads one CPU register and outputs as hexadecimal string. The output string must be parsable by GDB.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>GDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to output hexadecimal string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buflen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>regno</parametername>
</parameternamelist>
<parameterdescription>
<para>Register number</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Length of hexadecimal string written. Return 0 if error or not supported. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/arch_interface.h" line="931" column="8" declfile="include/sys/arch_interface.h" declline="931" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__arch-gdbstub_1gad717b520d774294bbda78a56cddcaeff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t arch_gdb_reg_writeone</definition>
        <argsstring>(struct gdb_ctx *ctx, uint8_t *hex, size_t hexlen, uint32_t regno)</argsstring>
        <name>arch_gdb_reg_writeone</name>
        <param>
          <type>struct <ref refid="structgdb__ctx" kindref="compound">gdb_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>hex</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>hexlen</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>regno</declname>
        </param>
        <briefdescription>
<para>Take a hexadecimal string and update one register. </para>
        </briefdescription>
        <detaileddescription>
<para>This takes in a hexadecimal string as presented from GDB, and updates one CPU registers with new value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>GDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hex</parametername>
</parameternamelist>
<parameterdescription>
<para>Input hexadecimal string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hexlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of hexadecimal string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>regno</parametername>
</parameternamelist>
<parameterdescription>
<para>Register number</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Length of hexadecimal string parsed. Return 0 if error or not supported. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/arch_interface.h" line="948" column="8" declfile="include/sys/arch_interface.h" declline="948" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__arch-gdbstub_1gab6f42110cf2340132bf2b3916810c01d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int arch_gdb_add_breakpoint</definition>
        <argsstring>(struct gdb_ctx *ctx, uint8_t type, uintptr_t addr, uint32_t kind)</argsstring>
        <name>arch_gdb_add_breakpoint</name>
        <param>
          <type>struct <ref refid="structgdb__ctx" kindref="compound">gdb_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref></type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
<para>Add breakpoint or watchpoint. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>GDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Breakpoint or watchpoint type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of breakpoint or watchpoint </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of breakpoint/watchpoint in bytes</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation successful </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>Error encountered </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
</parameternamelist>
<parameterdescription>
<para>Not supported </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/arch_interface.h" line="963" column="5" declfile="include/sys/arch_interface.h" declline="963" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__arch-gdbstub_1ga734041433f69030ad98439d10ef56ad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int arch_gdb_remove_breakpoint</definition>
        <argsstring>(struct gdb_ctx *ctx, uint8_t type, uintptr_t addr, uint32_t kind)</argsstring>
        <name>arch_gdb_remove_breakpoint</name>
        <param>
          <type>struct <ref refid="structgdb__ctx" kindref="compound">gdb_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref></type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
<para>Remove breakpoint or watchpoint. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>GDB context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Breakpoint or watchpoint type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of breakpoint or watchpoint </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of breakpoint/watchpoint in bytes</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation successful </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>Error encountered </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
</parameternamelist>
<parameterdescription>
<para>Not supported </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/arch_interface.h" line="978" column="5" declfile="include/sys/arch_interface.h" declline="978" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
