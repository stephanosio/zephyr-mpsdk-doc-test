<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="ztest__mock_8h" kind="file" language="C++">
    <compoundname>ztest_mock.h</compoundname>
    <includedby refid="ztest_8h" local="no">subsys/testsuite/ztest/include/ztest.h</includedby>
    <invincdepgraph>
      <node id="2">
        <label>subsys/testsuite/ztest/include/ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>subsys/testsuite/ztest/include/ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>subsys/testsuite/ztest/include/ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>tests/kernel/common/src/atomic.c</label>
        <link refid="atomic_8c"/>
      </node>
      <node id="5">
        <label>tests/kernel/common/src/bitarray.c</label>
        <link refid="bitarray_8c"/>
      </node>
      <node id="6">
        <label>tests/kernel/common/src/bitfield.c</label>
        <link refid="bitfield_8c"/>
      </node>
      <node id="7">
        <label>tests/kernel/common/src/boot_delay.c</label>
        <link refid="boot__delay_8c"/>
      </node>
      <node id="8">
        <label>tests/kernel/common/src/byteorder.c</label>
        <link refid="byteorder_8c"/>
      </node>
      <node id="9">
        <label>tests/kernel/common/src/clock.c</label>
        <link refid="clock_8c"/>
      </node>
      <node id="10">
        <label>tests/kernel/common/src/errno.c</label>
        <link refid="errno_8c"/>
      </node>
      <node id="11">
        <label>tests/kernel/common/src/irq_offload.c</label>
        <link refid="irq__offload_8c"/>
      </node>
      <node id="12">
        <label>tests/kernel/common/src/main.c</label>
        <link refid="common_2src_2main_8c"/>
      </node>
      <node id="13">
        <label>tests/kernel/common/src/multilib.c</label>
        <link refid="multilib_8c"/>
      </node>
      <node id="14">
        <label>tests/kernel/common/src/printk.c</label>
        <link refid="printk_8c"/>
      </node>
      <node id="15">
        <label>tests/kernel/common/src/timeout_order.c</label>
        <link refid="timeout__order_8c"/>
      </node>
      <node id="16">
        <label>tests/kernel/condvar/condvar_api/src/main.c</label>
        <link refid="condvar_2condvar__api_2src_2main_8c"/>
      </node>
      <node id="17">
        <label>tests/kernel/context/src/main.c</label>
        <link refid="context_2src_2main_8c"/>
      </node>
      <node id="18">
        <label>tests/kernel/device/src/abstract_driver.c</label>
        <link refid="abstract__driver_8c"/>
      </node>
      <node id="19">
        <label>tests/kernel/device/src/abstract_driver.h</label>
        <link refid="abstract__driver_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>tests/kernel/device/src/main.c</label>
        <link refid="device_2src_2main_8c"/>
      </node>
      <node id="21">
        <label>tests/kernel/device/src/mmio.c</label>
        <link refid="mmio_8c"/>
      </node>
      <node id="22">
        <label>tests/kernel/device/src/test_driver_init.c</label>
        <link refid="test__driver__init_8c"/>
      </node>
      <node id="23">
        <label>tests/kernel/early_sleep/src/main.c</label>
        <link refid="early__sleep_2src_2main_8c"/>
      </node>
      <node id="24">
        <label>tests/kernel/events/event_api/src/main.c</label>
        <link refid="events_2event__api_2src_2main_8c"/>
      </node>
      <node id="25">
        <label>tests/kernel/events/event_api/src/test_event_apis.c</label>
        <link refid="test__event__apis_8c"/>
      </node>
      <node id="26">
        <label>tests/kernel/events/sys_event/src/main.c</label>
        <link refid="events_2sys__event_2src_2main_8c"/>
      </node>
      <node id="27">
        <label>tests/kernel/fatal/exception/src/main.c</label>
        <link refid="fatal_2exception_2src_2main_8c"/>
      </node>
      <node id="28">
        <label>tests/kernel/fatal/no-multithreading/src/main.c</label>
        <link refid="fatal_2no-multithreading_2src_2main_8c"/>
      </node>
      <node id="29">
        <label>tests/kernel/fifo/fifo_api/src/main.c</label>
        <link refid="fifo_2fifo__api_2src_2main_8c"/>
      </node>
      <node id="30">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo.h</label>
        <link refid="test__fifo_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_cancel.c</label>
        <link refid="test__fifo__cancel_8c"/>
      </node>
      <node id="32">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_contexts.c</label>
        <link refid="test__fifo__contexts_8c"/>
      </node>
      <node id="33">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_fail.c</label>
        <link refid="test__fifo__fail_8c"/>
      </node>
      <node id="34">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_loop.c</label>
        <link refid="test__fifo__loop_8c"/>
      </node>
      <node id="35">
        <label>tests/kernel/fifo/fifo_timeout/src/main.c</label>
        <link refid="fifo_2fifo__timeout_2src_2main_8c"/>
      </node>
      <node id="36">
        <label>tests/kernel/fifo/fifo_usage/src/main.c</label>
        <link refid="fifo_2fifo__usage_2src_2main_8c"/>
      </node>
      <node id="37">
        <label>tests/kernel/fpu_sharing/float_disable/src/k_float_disable.c</label>
        <link refid="k__float__disable_8c"/>
      </node>
      <node id="38">
        <label>tests/kernel/fpu_sharing/float_disable/src/main.c</label>
        <link refid="fpu__sharing_2float__disable_2src_2main_8c"/>
      </node>
      <node id="39">
        <label>tests/kernel/fpu_sharing/generic/src/load_store.c</label>
        <link refid="load__store_8c"/>
      </node>
      <node id="40">
        <label>tests/kernel/fpu_sharing/generic/src/main.c</label>
        <link refid="fpu__sharing_2generic_2src_2main_8c"/>
      </node>
      <node id="41">
        <label>tests/kernel/fpu_sharing/generic/src/pi.c</label>
        <link refid="pi_8c"/>
      </node>
      <node id="42">
        <label>tests/kernel/gen_isr_table/src/main.c</label>
        <link refid="gen__isr__table_2src_2main_8c"/>
      </node>
      <node id="43">
        <label>tests/kernel/interrupt/src/direct_isr.c</label>
        <link refid="direct__isr_8c"/>
      </node>
      <node id="44">
        <label>tests/kernel/interrupt/src/dynamic_isr.c</label>
        <link refid="dynamic__isr_8c"/>
      </node>
      <node id="45">
        <label>tests/kernel/interrupt/src/interrupt_offload.c</label>
        <link refid="interrupt__offload_8c"/>
      </node>
      <node id="46">
        <label>tests/kernel/interrupt/src/main.c</label>
        <link refid="interrupt_2src_2main_8c"/>
      </node>
      <node id="47">
        <label>tests/kernel/interrupt/src/nested_irq.c</label>
        <link refid="nested__irq_8c"/>
      </node>
      <node id="48">
        <label>tests/kernel/interrupt/src/prevent_irq.c</label>
        <link refid="prevent__irq_8c"/>
      </node>
      <node id="49">
        <label>tests/kernel/interrupt/src/regular_isr.c</label>
        <link refid="regular__isr_8c"/>
      </node>
      <node id="50">
        <label>tests/kernel/lifo/lifo_api/src/main.c</label>
        <link refid="lifo_2lifo__api_2src_2main_8c"/>
      </node>
      <node id="51">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo.h</label>
        <link refid="test__lifo_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo_contexts.c</label>
        <link refid="test__lifo__contexts_8c"/>
      </node>
      <node id="53">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo_fail.c</label>
        <link refid="test__lifo__fail_8c"/>
      </node>
      <node id="54">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo_loop.c</label>
        <link refid="test__lifo__loop_8c"/>
      </node>
      <node id="55">
        <label>tests/kernel/lifo/lifo_usage/src/main.c</label>
        <link refid="lifo_2lifo__usage_2src_2main_8c"/>
      </node>
      <node id="56">
        <label>tests/kernel/mbox/mbox_api/src/main.c</label>
        <link refid="mbox_2mbox__api_2src_2main_8c"/>
      </node>
      <node id="57">
        <label>tests/kernel/mbox/mbox_api/src/test_mbox_api.c</label>
        <link refid="test__mbox__api_8c"/>
      </node>
      <node id="58">
        <label>tests/kernel/mbox/mbox_usage/src/main.c</label>
        <link refid="mbox_2mbox__usage_2src_2main_8c"/>
      </node>
      <node id="59">
        <label>tests/kernel/mem_heap/k_heap_api/src/main.c</label>
        <link refid="mem__heap_2k__heap__api_2src_2main_8c"/>
      </node>
      <node id="60">
        <label>tests/kernel/mem_heap/k_heap_api/src/test_kheap_api.c</label>
        <link refid="test__kheap__api_8c"/>
      </node>
      <node id="61">
        <label>tests/kernel/mem_heap/mheap_api_concept/src/main.c</label>
        <link refid="mem__heap_2mheap__api__concept_2src_2main_8c"/>
      </node>
      <node id="62">
        <label>tests/kernel/mem_heap/mheap_api_concept/src/test_mheap_api.c</label>
        <link refid="test__mheap__api_8c"/>
      </node>
      <node id="63">
        <label>tests/kernel/mem_heap/mheap_api_concept/src/test_mheap_concept.c</label>
        <link refid="test__mheap__concept_8c"/>
      </node>
      <node id="64">
        <label>tests/kernel/mem_heap/shared_multi_heap/src/main.c</label>
        <link refid="mem__heap_2shared__multi__heap_2src_2main_8c"/>
      </node>
      <node id="65">
        <label>tests/kernel/mem_protect/demand_paging/src/main.c</label>
        <link refid="mem__protect_2demand__paging_2src_2main_8c"/>
      </node>
      <node id="66">
        <label>tests/kernel/mem_protect/futex/src/main.c</label>
        <link refid="mem__protect_2futex_2src_2main_8c"/>
      </node>
      <node id="67">
        <label>tests/kernel/mem_protect/mem_map/src/main.c</label>
        <link refid="mem__protect_2mem__map_2src_2main_8c"/>
      </node>
      <node id="68">
        <label>tests/kernel/mem_protect/mem_protect/src/common.c</label>
        <link refid="common_8c"/>
      </node>
      <node id="71">
        <label>tests/kernel/mem_protect/mem_protect/src/inherit.c</label>
        <link refid="inherit_8c"/>
      </node>
      <node id="72">
        <label>tests/kernel/mem_protect/mem_protect/src/kobject.c</label>
        <link refid="kobject_8c"/>
      </node>
      <node id="69">
        <label>tests/kernel/mem_protect/mem_protect/src/main.c</label>
        <link refid="mem__protect_2mem__protect_2src_2main_8c"/>
      </node>
      <node id="73">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_domain.c</label>
        <link refid="mem__domain_8c"/>
      </node>
      <node id="74">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_partition.c</label>
        <link refid="mem__partition_8c"/>
      </node>
      <node id="70">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_protect.h</label>
        <link refid="mem__protect_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>tests/kernel/mem_protect/obj_validation/src/main.c</label>
        <link refid="mem__protect_2obj__validation_2src_2main_8c"/>
      </node>
      <node id="76">
        <label>tests/kernel/mem_protect/protection/src/main.c</label>
        <link refid="mem__protect_2protection_2src_2main_8c"/>
      </node>
      <node id="77">
        <label>tests/kernel/mem_protect/stack_random/src/main.c</label>
        <link refid="mem__protect_2stack__random_2src_2main_8c"/>
      </node>
      <node id="78">
        <label>tests/kernel/mem_protect/stackprot/src/main.c</label>
        <link refid="mem__protect_2stackprot_2src_2main_8c"/>
      </node>
      <node id="79">
        <label>tests/kernel/mem_protect/sys_sem/src/main.c</label>
        <link refid="mem__protect_2sys__sem_2src_2main_8c"/>
      </node>
      <node id="80">
        <label>tests/kernel/mem_protect/syscalls/src/main.c</label>
        <link refid="mem__protect_2syscalls_2src_2main_8c"/>
      </node>
      <node id="81">
        <label>tests/kernel/mem_protect/userspace/src/main.c</label>
        <link refid="mem__protect_2userspace_2src_2main_8c"/>
      </node>
      <node id="82">
        <label>tests/kernel/mem_slab/mslab/src/main.c</label>
        <link refid="mem__slab_2mslab_2src_2main_8c"/>
      </node>
      <node id="83">
        <label>tests/kernel/mem_slab/mslab_api/src/main.c</label>
        <link refid="mem__slab_2mslab__api_2src_2main_8c"/>
      </node>
      <node id="84">
        <label>tests/kernel/mem_slab/mslab_api/src/test_mslab_api.c</label>
        <link refid="test__mslab__api_8c"/>
      </node>
      <node id="85">
        <label>tests/kernel/mem_slab/mslab_api/src/test_mslab_extern.c</label>
        <link refid="test__mslab__extern_8c"/>
      </node>
      <node id="86">
        <label>tests/kernel/mem_slab/mslab_concept/src/main.c</label>
        <link refid="mem__slab_2mslab__concept_2src_2main_8c"/>
      </node>
      <node id="87">
        <label>tests/kernel/mem_slab/mslab_concept/src/test_mslab_alloc_wait.c</label>
        <link refid="test__mslab__alloc__wait_8c"/>
      </node>
      <node id="88">
        <label>tests/kernel/mem_slab/mslab_threadsafe/src/main.c</label>
        <link refid="mem__slab_2mslab__threadsafe_2src_2main_8c"/>
      </node>
      <node id="89">
        <label>tests/kernel/mem_slab/mslab_threadsafe/src/test_mslab_threadsafe.c</label>
        <link refid="test__mslab__threadsafe_8c"/>
      </node>
      <node id="90">
        <label>tests/kernel/mp/src/main.c</label>
        <link refid="mp_2src_2main_8c"/>
      </node>
      <node id="91">
        <label>tests/kernel/msgq/msgq_api/src/main.c</label>
        <link refid="msgq_2msgq__api_2src_2main_8c"/>
      </node>
      <node id="92">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq.h</label>
        <link refid="test__msgq_8h"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_attrs.c</label>
        <link refid="test__msgq__attrs_8c"/>
      </node>
      <node id="94">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c</label>
        <link refid="test__msgq__contexts_8c"/>
      </node>
      <node id="95">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_fail.c</label>
        <link refid="test__msgq__fail_8c"/>
      </node>
      <node id="96">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_purge.c</label>
        <link refid="test__msgq__purge_8c"/>
      </node>
      <node id="97">
        <label>tests/kernel/msgq/msgq_usage/src/main.c</label>
        <link refid="msgq_2msgq__usage_2src_2main_8c"/>
      </node>
      <node id="98">
        <label>tests/kernel/mutex/mutex_api/src/test_mutex_apis.c</label>
        <link refid="test__mutex__apis_8c"/>
      </node>
      <node id="99">
        <label>tests/kernel/mutex/mutex_error_case/src/test_mutex_error.c</label>
        <link refid="test__mutex__error_8c"/>
      </node>
      <node id="100">
        <label>tests/kernel/mutex/sys_mutex/src/main.c</label>
        <link refid="mutex_2sys__mutex_2src_2main_8c"/>
      </node>
      <node id="101">
        <label>tests/kernel/mutex/sys_mutex/src/thread_competition.c</label>
        <link refid="thread__competition_8c"/>
      </node>
      <node id="102">
        <label>tests/kernel/obj_tracking/src/main.c</label>
        <link refid="obj__tracking_2src_2main_8c"/>
      </node>
      <node id="103">
        <label>tests/kernel/pending/src/main.c</label>
        <link refid="pending_2src_2main_8c"/>
      </node>
      <node id="104">
        <label>tests/kernel/pipe/pipe/src/main.c</label>
        <link refid="pipe_2pipe_2src_2main_8c"/>
      </node>
      <node id="105">
        <label>tests/kernel/pipe/pipe/src/test_pipe.c</label>
        <link refid="test__pipe_8c"/>
      </node>
      <node id="106">
        <label>tests/kernel/pipe/pipe_api/src/main.c</label>
        <link refid="pipe_2pipe__api_2src_2main_8c"/>
      </node>
      <node id="107">
        <label>tests/kernel/pipe/pipe_api/src/test_pipe_avail.c</label>
        <link refid="test__pipe__avail_8c"/>
      </node>
      <node id="108">
        <label>tests/kernel/pipe/pipe_api/src/test_pipe_contexts.c</label>
        <link refid="test__pipe__contexts_8c"/>
      </node>
      <node id="109">
        <label>tests/kernel/pipe/pipe_api/src/test_pipe_fail.c</label>
        <link refid="test__pipe__fail_8c"/>
      </node>
      <node id="110">
        <label>tests/kernel/poll/src/main.c</label>
        <link refid="poll_2src_2main_8c"/>
      </node>
      <node id="111">
        <label>tests/kernel/poll/src/test_poll.c</label>
        <link refid="test__poll_8c"/>
      </node>
      <node id="112">
        <label>tests/kernel/poll/src/test_poll_fail.c</label>
        <link refid="test__poll__fail_8c"/>
      </node>
      <node id="113">
        <label>tests/kernel/profiling/profiling_api/src/main.c</label>
        <link refid="profiling_2profiling__api_2src_2main_8c"/>
      </node>
      <node id="114">
        <label>tests/kernel/queue/src/main.c</label>
        <link refid="queue_2src_2main_8c"/>
      </node>
      <node id="115">
        <label>tests/kernel/queue/src/test_queue.h</label>
        <link refid="test__queue_8h"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>tests/kernel/queue/src/test_queue_contexts.c</label>
        <link refid="test__queue__contexts_8c"/>
      </node>
      <node id="117">
        <label>tests/kernel/queue/src/test_queue_fail.c</label>
        <link refid="test__queue__fail_8c"/>
      </node>
      <node id="118">
        <label>tests/kernel/queue/src/test_queue_loop.c</label>
        <link refid="test__queue__loop_8c"/>
      </node>
      <node id="119">
        <label>tests/kernel/queue/src/test_queue_user.c</label>
        <link refid="test__queue__user_8c"/>
      </node>
      <node id="120">
        <label>tests/kernel/sched/deadline/src/main.c</label>
        <link refid="sched_2deadline_2src_2main_8c"/>
      </node>
      <node id="121">
        <label>tests/kernel/sched/metairq/src/main.c</label>
        <link refid="sched_2metairq_2src_2main_8c"/>
      </node>
      <node id="122">
        <label>tests/kernel/sched/preempt/src/main.c</label>
        <link refid="sched_2preempt_2src_2main_8c"/>
      </node>
      <node id="125">
        <label>tests/kernel/sched/schedule_api/src/main.c</label>
        <link refid="sched_2schedule__api_2src_2main_8c"/>
      </node>
      <node id="123">
        <label>tests/kernel/sched/schedule_api/src/test_priority_scheduling.c</label>
        <link refid="test__priority__scheduling_8c"/>
      </node>
      <node id="124">
        <label>tests/kernel/sched/schedule_api/src/test_sched.h</label>
        <link refid="test__sched_8h"/>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>tests/kernel/sched/schedule_api/src/test_sched_is_preempt_thread.c</label>
        <link refid="test__sched__is__preempt__thread_8c"/>
      </node>
      <node id="127">
        <label>tests/kernel/sched/schedule_api/src/test_sched_priority.c</label>
        <link refid="test__sched__priority_8c"/>
      </node>
      <node id="128">
        <label>tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c</label>
        <link refid="test__sched__timeslice__and__lock_8c"/>
      </node>
      <node id="129">
        <label>tests/kernel/sched/schedule_api/src/test_sched_timeslice_reset.c</label>
        <link refid="test__sched__timeslice__reset_8c"/>
      </node>
      <node id="130">
        <label>tests/kernel/sched/schedule_api/src/test_slice_scheduling.c</label>
        <link refid="test__slice__scheduling_8c"/>
      </node>
      <node id="131">
        <label>tests/kernel/sched/schedule_api/src/user_api.c</label>
        <link refid="user__api_8c"/>
      </node>
      <node id="132">
        <label>tests/kernel/semaphore/semaphore/src/main.c</label>
        <link refid="semaphore_2semaphore_2src_2main_8c"/>
      </node>
      <node id="133">
        <label>tests/kernel/semaphore/sys_sem/src/main.c</label>
        <link refid="semaphore_2sys__sem_2src_2main_8c"/>
      </node>
      <node id="134">
        <label>tests/kernel/sleep/src/main.c</label>
        <link refid="sleep_2src_2main_8c"/>
      </node>
      <node id="135">
        <label>tests/kernel/sleep/src/usleep.c</label>
        <link refid="usleep_8c"/>
      </node>
      <node id="136">
        <label>tests/kernel/smp/src/main.c</label>
        <link refid="smp_2src_2main_8c"/>
      </node>
      <node id="137">
        <label>tests/kernel/smp_boot_delay/src/main.c</label>
        <link refid="smp__boot__delay_2src_2main_8c"/>
      </node>
      <node id="138">
        <label>tests/kernel/spinlock/src/main.c</label>
        <link refid="spinlock_2src_2main_8c"/>
      </node>
      <node id="139">
        <label>tests/kernel/spinlock/src/spinlock_error_case.c</label>
        <link refid="spinlock__error__case_8c"/>
      </node>
      <node id="140">
        <label>tests/kernel/stack/stack/src/main.c</label>
        <link refid="stack_2stack_2src_2main_8c"/>
      </node>
      <node id="141">
        <label>tests/kernel/stack/stack/src/test_stack_contexts.c</label>
        <link refid="test__stack__contexts_8c"/>
      </node>
      <node id="142">
        <label>tests/kernel/stack/stack/src/test_stack_fail.c</label>
        <link refid="test__stack__fail_8c"/>
      </node>
      <node id="143">
        <label>tests/kernel/threads/dynamic_thread/src/main.c</label>
        <link refid="threads_2dynamic__thread_2src_2main_8c"/>
      </node>
      <node id="144">
        <label>tests/kernel/threads/no-multithreading/src/main.c</label>
        <link refid="threads_2no-multithreading_2src_2main_8c"/>
      </node>
      <node id="145">
        <label>tests/kernel/threads/thread_apis/src/main.c</label>
        <link refid="threads_2thread__apis_2src_2main_8c"/>
      </node>
      <node id="146">
        <label>tests/kernel/threads/thread_apis/src/test_essential_thread.c</label>
        <link refid="test__essential__thread_8c"/>
      </node>
      <node id="147">
        <label>tests/kernel/threads/thread_apis/src/test_kthread_for_each.c</label>
        <link refid="test__kthread__for__each_8c"/>
      </node>
      <node id="148">
        <label>tests/kernel/threads/thread_apis/src/test_threads_cancel_abort.c</label>
        <link refid="test__threads__cancel__abort_8c"/>
      </node>
      <node id="149">
        <label>tests/kernel/threads/thread_apis/src/test_threads_cpu_mask.c</label>
        <link refid="test__threads__cpu__mask_8c"/>
      </node>
      <node id="150">
        <label>tests/kernel/threads/thread_apis/src/test_threads_set_priority.c</label>
        <link refid="test__threads__set__priority_8c"/>
      </node>
      <node id="151">
        <label>tests/kernel/threads/thread_apis/src/test_threads_spawn.c</label>
        <link refid="test__threads__spawn_8c"/>
      </node>
      <node id="152">
        <label>tests/kernel/threads/thread_apis/src/test_threads_suspend_resume.c</label>
        <link refid="test__threads__suspend__resume_8c"/>
      </node>
      <node id="153">
        <label>tests/kernel/threads/thread_error_case/src/main.c</label>
        <link refid="threads_2thread__error__case_2src_2main_8c"/>
      </node>
      <node id="154">
        <label>tests/kernel/threads/thread_init/src/main.c</label>
        <link refid="threads_2thread__init_2src_2main_8c"/>
      </node>
      <node id="155">
        <label>tests/kernel/threads/thread_stack/src/main.c</label>
        <link refid="threads_2thread__stack_2src_2main_8c"/>
      </node>
      <node id="156">
        <label>tests/kernel/threads/tls/src/main.c</label>
        <link refid="threads_2tls_2src_2main_8c"/>
      </node>
      <node id="157">
        <label>tests/kernel/tickless/tickless_concept/src/main.c</label>
        <link refid="tickless_2tickless__concept_2src_2main_8c"/>
      </node>
      <node id="158">
        <label>tests/kernel/timer/cycle64/src/main.c</label>
        <link refid="timer_2cycle64_2src_2main_8c"/>
      </node>
      <node id="159">
        <label>tests/kernel/timer/starve/src/main.c</label>
        <link refid="timer_2starve_2src_2main_8c"/>
      </node>
      <node id="160">
        <label>tests/kernel/timer/timer_api/src/main.c</label>
        <link refid="timer_2timer__api_2src_2main_8c"/>
      </node>
      <node id="161">
        <label>tests/kernel/timer/timer_api/src/timer_convert.c</label>
        <link refid="timer__convert_8c"/>
      </node>
      <node id="162">
        <label>tests/kernel/timer/timer_error_case/src/main.c</label>
        <link refid="timer_2timer__error__case_2src_2main_8c"/>
      </node>
      <node id="163">
        <label>tests/kernel/timer/timer_monotonic/src/main.c</label>
        <link refid="timer_2timer__monotonic_2src_2main_8c"/>
      </node>
      <node id="164">
        <label>tests/kernel/workq/critical/src/main.c</label>
        <link refid="workq_2critical_2src_2main_8c"/>
      </node>
      <node id="165">
        <label>tests/kernel/workq/user_work/src/main.c</label>
        <link refid="workq_2user__work_2src_2main_8c"/>
      </node>
      <node id="166">
        <label>tests/kernel/workq/work/src/main.c</label>
        <link refid="workq_2work_2src_2main_8c"/>
      </node>
      <node id="167">
        <label>tests/kernel/workq/work_queue/src/main.c</label>
        <link refid="workq_2work__queue_2src_2main_8c"/>
      </node>
      <node id="168">
        <label>tests/kernel/xip/src/main.c</label>
        <link refid="xip_2src_2main_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__ztest__mock_1ga58c2f0c0e628e73a2268a3d18b0440d6" prot="public" static="no">
        <name>ztest_expect_value</name>
        <param><defname>func</defname></param>
        <param><defname>param</defname></param>
        <param><defname>value</defname></param>
        <initializer>	z_ztest_expect_value(<ref refid="common_8h_1a4689212d5a549893cabb9d7782eecfb6" kindref="member">STRINGIFY</ref>(func), <ref refid="common_8h_1a4689212d5a549893cabb9d7782eecfb6" kindref="member">STRINGIFY</ref>(param),                \
			     (<ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref>)(value))</initializer>
        <briefdescription>
<para>Tell function <emphasis>func</emphasis> to expect the value <emphasis>value</emphasis> for <emphasis>param</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>When using <ref refid="group__ztest__mock_1gae9af6ba8e51738e938763c896f17ea8f" kindref="member">ztest_check_expected_value()</ref>, tell that the value of <emphasis>param</emphasis> should be <emphasis>value</emphasis>. The value will internally be stored as an <computeroutput>uintptr_t</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>Function in question </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter for which the value should be set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value for <emphasis>param</emphasis> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_mock.h" line="36" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_mock.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__mock_1gae9af6ba8e51738e938763c896f17ea8f" prot="public" static="no">
        <name>ztest_check_expected_value</name>
        <param><defname>param</defname></param>
        <initializer>	z_ztest_check_expected_value(__func__, <ref refid="common_8h_1a4689212d5a549893cabb9d7782eecfb6" kindref="member">STRINGIFY</ref>(param),               \
				     (<ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref>)(param))</initializer>
        <briefdescription>
<para>If <emphasis>param</emphasis> doesn&apos;t match the value set by <ref refid="group__ztest__mock_1ga58c2f0c0e628e73a2268a3d18b0440d6" kindref="member">ztest_expect_value()</ref>, fail the test. </para>
        </briefdescription>
        <detaileddescription>
<para>This will first check that does <emphasis>param</emphasis> have a value to be expected, and then checks whether the value of the parameter is equal to the expected value. If either of these checks fail, the current test will fail. This must be called from the called function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_mock.h" line="51" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_mock.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__mock_1gac1a64d8bf9c877e8666e0c6d93b0dbab" prot="public" static="no">
        <name>ztest_expect_data</name>
        <param><defname>func</defname></param>
        <param><defname>param</defname></param>
        <param><defname>data</defname></param>
        <initializer>	z_ztest_expect_data(<ref refid="common_8h_1a4689212d5a549893cabb9d7782eecfb6" kindref="member">STRINGIFY</ref>(func), <ref refid="common_8h_1a4689212d5a549893cabb9d7782eecfb6" kindref="member">STRINGIFY</ref>(param), (void *)(<ref refid="test__stack__fail_8c_1a4bb6fa6c719fd9021449009ab8befc04" kindref="member">data</ref>))</initializer>
        <briefdescription>
<para>Tell function <emphasis>func</emphasis> to expect the data <emphasis>data</emphasis> for <emphasis>param</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>When using <ref refid="group__ztest__mock_1ga805cf99272f147beeeee5ad6ca2553f5" kindref="member">ztest_check_expected_data()</ref>, the data pointed to by <emphasis>param</emphasis> should be same <emphasis>data</emphasis> in this function. Only data pointer is stored by this function, so it must still be valid when ztest_check_expected_data is called.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>Function in question </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter for which the data should be set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer for the data for parameter <emphasis>param</emphasis> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_mock.h" line="67" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_mock.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__mock_1ga805cf99272f147beeeee5ad6ca2553f5" prot="public" static="no">
        <name>ztest_check_expected_data</name>
        <param><defname>param</defname></param>
        <param><defname>length</defname></param>
        <initializer>	z_ztest_check_expected_data(__func__, <ref refid="common_8h_1a4689212d5a549893cabb9d7782eecfb6" kindref="member">STRINGIFY</ref>(param),                \
				    (void *)(param), (length))</initializer>
        <briefdescription>
<para>If data pointed by <emphasis>param</emphasis> don&apos;t match the data set by <ref refid="group__ztest__mock_1gac1a64d8bf9c877e8666e0c6d93b0dbab" kindref="member">ztest_expect_data()</ref>, fail the test. </para>
        </briefdescription>
        <detaileddescription>
<para>This will first check that <emphasis>param</emphasis> is expected to be null or non-null and then check whether the data pointed by parameter is equal to expected data. If either of these checks fail, the current test will fail. This must be called from the called function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter to check </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data to compare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_mock.h" line="82" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_mock.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__mock_1gac79d097a6b274b25286f2b0e80fbd6e9" prot="public" static="no">
        <name>ztest_return_data</name>
        <param><defname>func</defname></param>
        <param><defname>param</defname></param>
        <param><defname>data</defname></param>
        <initializer>	z_ztest_return_data(<ref refid="common_8h_1a4689212d5a549893cabb9d7782eecfb6" kindref="member">STRINGIFY</ref>(func), <ref refid="common_8h_1a4689212d5a549893cabb9d7782eecfb6" kindref="member">STRINGIFY</ref>(param), (void *)(<ref refid="test__stack__fail_8c_1a4bb6fa6c719fd9021449009ab8befc04" kindref="member">data</ref>))</initializer>
        <briefdescription>
<para>Tell function <emphasis>func</emphasis> to return the data <emphasis>data</emphasis> for <emphasis>param</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>When using <ref refid="group__ztest__mock_1gac79d097a6b274b25286f2b0e80fbd6e9" kindref="member">ztest_return_data()</ref>, the data pointed to by <emphasis>param</emphasis> should be same <emphasis>data</emphasis> in this function. Only data pointer is stored by this function, so it must still be valid when ztest_copy_return_data is called.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>Function in question </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter for which the data should be set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer for the data for parameter <emphasis>param</emphasis> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_mock.h" line="97" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_mock.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__mock_1ga12872a3d783d53d564ed94583bc490b0" prot="public" static="no">
        <name>ztest_copy_return_data</name>
        <param><defname>param</defname></param>
        <param><defname>length</defname></param>
        <initializer>	z_ztest_copy_return_data(__func__, <ref refid="common_8h_1a4689212d5a549893cabb9d7782eecfb6" kindref="member">STRINGIFY</ref>(param),                   \
				 (void *)(param), (length))</initializer>
        <briefdescription>
<para>Copy the data set by ztest_return_data to the memory pointed by <emphasis>param</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>This will first check that <emphasis>param</emphasis> is not null and then copy the data. This must be called from the called function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter to return data for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data to return </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_mock.h" line="110" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_mock.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__mock_1ga2ec539b4c0f3e4efb695213b4fd08c2c" prot="public" static="no">
        <name>ztest_returns_value</name>
        <param><defname>func</defname></param>
        <param><defname>value</defname></param>
        <initializer>	z_ztest_returns_value(<ref refid="common_8h_1a4689212d5a549893cabb9d7782eecfb6" kindref="member">STRINGIFY</ref>(func), (<ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref>)(value))</initializer>
        <briefdescription>
<para>Tell <emphasis>func</emphasis> that it should return <emphasis>value</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>Function that should return <emphasis>value</emphasis> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to return from <emphasis>func</emphasis> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_mock.h" line="119" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_mock.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__mock_1ga31dcd5b5a3596a7404a771a2d32f3a39" prot="public" static="no">
        <name>ztest_get_return_value</name>
        <param></param>
        <initializer>z_ztest_get_return_value(__func__)</initializer>
        <briefdescription>
<para>Get the return value for current function. </para>
        </briefdescription>
        <detaileddescription>
<para>The return value must have been set previously with <ref refid="group__ztest__mock_1ga2ec539b4c0f3e4efb695213b4fd08c2c" kindref="member">ztest_returns_value()</ref>. If no return value exists, the current test will fail.</para>
<para><simplesect kind="return"><para>The value the current function should return </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_mock.h" line="130" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_mock.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__mock_1gaa2df2eaeba49019b7a83ac769ea95968" prot="public" static="no">
        <name>ztest_get_return_value_ptr</name>
        <param></param>
        <initializer>	((void *)z_ztest_get_return_value(__func__))</initializer>
        <briefdescription>
<para>Get the return value as a pointer for current function. </para>
        </briefdescription>
        <detaileddescription>
<para>The return value must have been set previously with <ref refid="group__ztest__mock_1ga2ec539b4c0f3e4efb695213b4fd08c2c" kindref="member">ztest_returns_value()</ref>. If no return value exists, the current test will fail.</para>
<para><simplesect kind="return"><para>The value the current function should return as a <computeroutput>void *</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_mock.h" line="140" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_mock.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Ztest mocking support. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_TESTSUITE_ZTEST_MOCK_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_TESTSUITE_ZTEST_MOCK_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="group__ztest__mock_1ga58c2f0c0e628e73a2268a3d18b0440d6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_expect_value(func,<sp/>param,<sp/>value)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_ztest_expect_value(STRINGIFY(func),<sp/>STRINGIFY(param),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uintptr_t)(value))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="group__ztest__mock_1gae9af6ba8e51738e938763c896f17ea8f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_check_expected_value(param)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_ztest_check_expected_value(__func__,<sp/>STRINGIFY(param),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uintptr_t)(param))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="group__ztest__mock_1gac1a64d8bf9c877e8666e0c6d93b0dbab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_expect_data(func,<sp/>param,<sp/>data)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_ztest_expect_data(STRINGIFY(func),<sp/>STRINGIFY(param),<sp/>(void<sp/>*)(data))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="group__ztest__mock_1ga805cf99272f147beeeee5ad6ca2553f5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_check_expected_data(param,<sp/>length)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_ztest_check_expected_data(__func__,<sp/>STRINGIFY(param),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void<sp/>*)(param),<sp/>(length))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="group__ztest__mock_1gac79d097a6b274b25286f2b0e80fbd6e9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_return_data(func,<sp/>param,<sp/>data)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_ztest_return_data(STRINGIFY(func),<sp/>STRINGIFY(param),<sp/>(void<sp/>*)(data))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="group__ztest__mock_1ga12872a3d783d53d564ed94583bc490b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_copy_return_data(param,<sp/>length)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_ztest_copy_return_data(__func__,<sp/>STRINGIFY(param),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void<sp/>*)(param),<sp/>(length))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="group__ztest__mock_1ga2ec539b4c0f3e4efb695213b4fd08c2c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_returns_value(func,<sp/>value)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_ztest_returns_value(STRINGIFY(func),<sp/>(uintptr_t)(value))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="group__ztest__mock_1ga31dcd5b5a3596a7404a771a2d32f3a39" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_get_return_value()<sp/>z_ztest_get_return_value(__func__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="group__ztest__mock_1gaa2df2eaeba49019b7a83ac769ea95968" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_get_return_value_ptr()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((void<sp/>*)z_ztest_get_return_value(__func__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_ZTEST_MOCKING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_init_mock(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_cleanup_mock(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_ztest_expect_value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_ztest_check_expected_value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*param,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_ztest_expect_data(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*val);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_ztest_check_expected_data(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>length);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_ztest_return_data(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*val);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_ztest_copy_return_data(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>length);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z_ztest_returns_value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn,<sp/><ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref><sp/>z_ztest_get_return_value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!CONFIG_ZTEST_MOCKING<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>z_init_mock()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>z_cleanup_mock()<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_ZTEST_MOCKING<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_TESTSUITE_ZTEST_MOCK_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="subsys/testsuite/ztest/include/ztest_mock.h"/>
  </compounddef>
</doxygen>
