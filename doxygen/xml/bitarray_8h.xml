<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="bitarray_8h" kind="file" language="C++">
    <compoundname>bitarray.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes local="no">kernel.h</includes>
    <includedby refid="mem__blocks_8h" local="no">include/sys/mem_blocks.h</includedby>
    <includedby refid="bitarray_8c" local="no">tests/kernel/common/src/bitarray.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/sys/bitarray.h</label>
        <link refid="bitarray_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="4">
        <label>kernel.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/sys/bitarray.h</label>
        <link refid="bitarray_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/sys/mem_blocks.h</label>
        <link refid="mem__blocks_8h"/>
      </node>
      <node id="3">
        <label>tests/kernel/common/src/bitarray.c</label>
        <link refid="bitarray_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structsys__bitarray" prot="public">sys_bitarray</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="bitarray_8h_1abbe958c6b995023665651e4aa050aa62" prot="public" static="no">
        <name>SYS_BITARRAY_DEFINE</name>
        <param><defname>name</defname></param>
        <param><defname>total_bits</defname></param>
        <initializer>	_SYS_BITARRAY_DEFINE(name, total_bits,)</initializer>
        <briefdescription>
<para>Create a bitarray object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the bitarray object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>total_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Total number of bits in this bitarray object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/bitarray.h" line="64" column="9" bodyfile="include/sys/bitarray.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bitarray_8h_1a2c55680355b67fc25125299a35f604d1" prot="public" static="no">
        <name>SYS_BITARRAY_DEFINE_STATIC</name>
        <param><defname>name</defname></param>
        <param><defname>total_bits</defname></param>
        <initializer>	_SYS_BITARRAY_DEFINE(name, total_bits, static)</initializer>
        <briefdescription>
<para>Create a static bitarray object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the bitarray object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>total_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Total number of bits in this bitarray object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/bitarray.h" line="75" column="9" bodyfile="include/sys/bitarray.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="bitarray_8h_1a168a1da9ac2bee523bdc9778e94fd841" prot="public" static="no">
        <type>struct <ref refid="structsys__bitarray" kindref="compound">sys_bitarray</ref></type>
        <definition>typedef struct sys_bitarray sys_bitarray_t</definition>
        <argsstring></argsstring>
        <name>sys_bitarray_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/bitarray.h" line="33" column="27" bodyfile="include/sys/bitarray.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bitarray_8h_1a5fe657e79fee3e111284e4184eb6b681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_bitarray_set_bit</definition>
        <argsstring>(sys_bitarray_t *bitarray, size_t bit)</argsstring>
        <name>sys_bitarray_set_bit</name>
        <param>
          <type><ref refid="bitarray_8h_1a168a1da9ac2bee523bdc9778e94fd841" kindref="member">sys_bitarray_t</ref> *</type>
          <declname>bitarray</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a bit in a bit array</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bitarray</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitarray struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bit</parametername>
</parameternamelist>
<parameterdescription>
<para>The bit to be set</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation successful </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid argument (e.g. bit to set exceeds the number of bits in bit array, etc.) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/bitarray.h" line="88" column="5" declfile="include/sys/bitarray.h" declline="88" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bitarray_8h_1a795e8bf81f5717addf523cec124cde4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_bitarray_clear_bit</definition>
        <argsstring>(sys_bitarray_t *bitarray, size_t bit)</argsstring>
        <name>sys_bitarray_clear_bit</name>
        <param>
          <type><ref refid="bitarray_8h_1a168a1da9ac2bee523bdc9778e94fd841" kindref="member">sys_bitarray_t</ref> *</type>
          <declname>bitarray</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear a bit in a bit array</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bitarray</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitarray struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bit</parametername>
</parameternamelist>
<parameterdescription>
<para>The bit to be cleared</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation successful </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid argument (e.g. bit to clear exceeds the number of bits in bit array, etc.) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/bitarray.h" line="100" column="5" declfile="include/sys/bitarray.h" declline="100" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bitarray_8h_1ae024ace00949fe8c565081e62818449d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_bitarray_test_bit</definition>
        <argsstring>(sys_bitarray_t *bitarray, size_t bit, int *val)</argsstring>
        <name>sys_bitarray_test_bit</name>
        <param>
          <type><ref refid="bitarray_8h_1a168a1da9ac2bee523bdc9778e94fd841" kindref="member">sys_bitarray_t</ref> *</type>
          <declname>bitarray</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bit</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test whether a bit is set or not</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bitarray</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitarray struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bit</parametername>
</parameternamelist>
<parameterdescription>
<para>The bit to be tested </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">val</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the bit (0 or 1)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation successful </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid argument (e.g. bit to test exceeds the number of bits in bit array, etc.) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/bitarray.h" line="113" column="5" declfile="include/sys/bitarray.h" declline="113" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bitarray_8h_1ad1761b9eae8a1d9302893ce5f8591923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_bitarray_test_and_set_bit</definition>
        <argsstring>(sys_bitarray_t *bitarray, size_t bit, int *prev_val)</argsstring>
        <name>sys_bitarray_test_and_set_bit</name>
        <param>
          <type><ref refid="bitarray_8h_1a168a1da9ac2bee523bdc9778e94fd841" kindref="member">sys_bitarray_t</ref> *</type>
          <declname>bitarray</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bit</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>prev_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test the bit and set it</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bitarray</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitarray struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bit</parametername>
</parameternamelist>
<parameterdescription>
<para>The bit to be tested and set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">prev_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Previous value of the bit (0 or 1)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation successful </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid argument (e.g. bit to test exceeds the number of bits in bit array, etc.) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/bitarray.h" line="126" column="5" declfile="include/sys/bitarray.h" declline="126" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bitarray_8h_1a40fa4d37f1fb2da8789f70de50c599d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_bitarray_test_and_clear_bit</definition>
        <argsstring>(sys_bitarray_t *bitarray, size_t bit, int *prev_val)</argsstring>
        <name>sys_bitarray_test_and_clear_bit</name>
        <param>
          <type><ref refid="bitarray_8h_1a168a1da9ac2bee523bdc9778e94fd841" kindref="member">sys_bitarray_t</ref> *</type>
          <declname>bitarray</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bit</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>prev_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test the bit and clear it</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bitarray</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitarray struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bit</parametername>
</parameternamelist>
<parameterdescription>
<para>The bit to be tested and cleared </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">prev_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Previous value of the bit (0 or 1)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation successful </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid argument (e.g. bit to test exceeds the number of bits in bit array, etc.) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/bitarray.h" line="139" column="5" declfile="include/sys/bitarray.h" declline="139" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bitarray_8h_1ac96766d9441a3b143aa386e2ac79ffd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_bitarray_alloc</definition>
        <argsstring>(sys_bitarray_t *bitarray, size_t num_bits, size_t *offset)</argsstring>
        <name>sys_bitarray_alloc</name>
        <param>
          <type><ref refid="bitarray_8h_1a168a1da9ac2bee523bdc9778e94fd841" kindref="member">sys_bitarray_t</ref> *</type>
          <declname>bitarray</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_bits</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate bits in a bit array</para>
<para>This finds a number of bits (<computeroutput>num_bits</computeroutput>) in a contiguous of previosly unallocated region. If such a region exists, the bits are marked as allocated and the offset to the start of this region is returned via <computeroutput>offset</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bitarray</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitarray struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits to allocate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset to the start of allocated region if successful</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Allocation successful </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid argument (e.g. allocating more bits than the bitarray has, trying to allocate 0 bits, etc.) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOSPC</parametername>
</parameternamelist>
<parameterdescription>
<para>No contiguous region big enough to accommodate the allocation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/bitarray.h" line="160" column="5" declfile="include/sys/bitarray.h" declline="160" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bitarray_8h_1af9a2c34896d3b1866a5a60f78d4166b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_bitarray_free</definition>
        <argsstring>(sys_bitarray_t *bitarray, size_t num_bits, size_t offset)</argsstring>
        <name>sys_bitarray_free</name>
        <param>
          <type><ref refid="bitarray_8h_1a168a1da9ac2bee523bdc9778e94fd841" kindref="member">sys_bitarray_t</ref> *</type>
          <declname>bitarray</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_bits</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free bits in a bit array</para>
<para>This marks the number of bits (<computeroutput>num_bits</computeroutput>) starting from <computeroutput>offset</computeroutput> as no longer allocated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitarray</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitarray struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits to free </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting bit position to free</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Free is successful </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid argument (e.g. try to free more bits than the bitarray has, trying to free 0 bits, etc.) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EFAULT</parametername>
</parameternamelist>
<parameterdescription>
<para>The bits in the indicated region are not all allocated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/bitarray.h" line="178" column="5" declfile="include/sys/bitarray.h" declline="178" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bitarray_8h_1a2aa91a9be38b11e74dacbeb2fe5e6d6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool sys_bitarray_is_region_set</definition>
        <argsstring>(sys_bitarray_t *bitarray, size_t num_bits, size_t offset)</argsstring>
        <name>sys_bitarray_is_region_set</name>
        <param>
          <type><ref refid="bitarray_8h_1a168a1da9ac2bee523bdc9778e94fd841" kindref="member">sys_bitarray_t</ref> *</type>
          <declname>bitarray</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_bits</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test if bits in a region is all set.</para>
<para>This tests if the number of bits (<computeroutput>num_bits</computeroutput>) in region starting from <computeroutput>offset</computeroutput> are all set.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitarray</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitarray struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits to test </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting bit position to test</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>All bits are set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Not all bits are set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/bitarray.h" line="194" column="6" declfile="include/sys/bitarray.h" declline="194" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bitarray_8h_1a21cd833e7118f188ca3e06f8cfd13a49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool sys_bitarray_is_region_cleared</definition>
        <argsstring>(sys_bitarray_t *bitarray, size_t num_bits, size_t offset)</argsstring>
        <name>sys_bitarray_is_region_cleared</name>
        <param>
          <type><ref refid="bitarray_8h_1a168a1da9ac2bee523bdc9778e94fd841" kindref="member">sys_bitarray_t</ref> *</type>
          <declname>bitarray</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_bits</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test if bits in a region is all cleared.</para>
<para>This tests if the number of bits (<computeroutput>num_bits</computeroutput>) in region starting from <computeroutput>offset</computeroutput> are all cleared.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitarray</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitarray struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits to test </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting bit position to test</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>All bits are cleared. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Not all bits are cleared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/bitarray.h" line="210" column="6" declfile="include/sys/bitarray.h" declline="210" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bitarray_8h_1a94d1a547b9fe0a01d73acf4a5c4f308b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_bitarray_set_region</definition>
        <argsstring>(sys_bitarray_t *bitarray, size_t num_bits, size_t offset)</argsstring>
        <name>sys_bitarray_set_region</name>
        <param>
          <type><ref refid="bitarray_8h_1a168a1da9ac2bee523bdc9778e94fd841" kindref="member">sys_bitarray_t</ref> *</type>
          <declname>bitarray</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_bits</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set all bits in a region.</para>
<para>This sets the number of bits (<computeroutput>num_bits</computeroutput>) in region starting from <computeroutput>offset</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitarray</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitarray struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits to test </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting bit position to test</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation successful </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid argument (e.g. bit to set exceeds the number of bits in bit array, etc.) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/bitarray.h" line="227" column="5" declfile="include/sys/bitarray.h" declline="227" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bitarray_8h_1ad13bb2c37d0889807e026dbac6a2872d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_bitarray_clear_region</definition>
        <argsstring>(sys_bitarray_t *bitarray, size_t num_bits, size_t offset)</argsstring>
        <name>sys_bitarray_clear_region</name>
        <param>
          <type><ref refid="bitarray_8h_1a168a1da9ac2bee523bdc9778e94fd841" kindref="member">sys_bitarray_t</ref> *</type>
          <declname>bitarray</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_bits</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear all bits in a region.</para>
<para>This clears the number of bits (<computeroutput>num_bits</computeroutput>) in region starting from <computeroutput>offset</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitarray</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitarray struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits to test </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting bit position to test</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation successful </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid argument (e.g. bit to set exceeds the number of bits in bit array, etc.) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/bitarray.h" line="244" column="5" declfile="include/sys/bitarray.h" declline="244" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_SYS_BITARRAY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_SYS_BITARRAY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="structsys__bitarray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__bitarray" kindref="compound">sys_bitarray</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>bundles<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structsys__bitarray_1abbb992a8a0408ed431c5203110c3d9e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structsys__bitarray_1abbb992a8a0408ed431c5203110c3d9e0" kindref="member">num_bundles</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bundle<sp/>of<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>*<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Spinlock<sp/>guarding<sp/>access<sp/>to<sp/>this<sp/>bit<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structsys__bitarray_1a56a95b3c0889074845bc41b087e98864" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__spinlock" kindref="compound">k_spinlock</ref><sp/><ref refid="structsys__bitarray_1a56a95b3c0889074845bc41b087e98864" kindref="member">lock</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="bitarray_8h_1a168a1da9ac2bee523bdc9778e94fd841" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__bitarray" kindref="compound">sys_bitarray</ref><sp/><ref refid="structsys__bitarray" kindref="compound">sys_bitarray_t</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SYS_BITARRAY_DEFINE(name,<sp/>total_bits,<sp/>sba_mod)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sba_mod<sp/>uint32_t<sp/>_sys_bitarray_bundles_##name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[(((total_bits<sp/>+<sp/>8<sp/>-<sp/>1)<sp/>/<sp/>8)<sp/>+<sp/>sizeof(uint32_t)<sp/>-<sp/>1)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>sizeof(uint32_t)]<sp/>=<sp/>{0U};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sba_mod<sp/>sys_bitarray_t<sp/>name<sp/>=<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.num_bits<sp/>=<sp/>total_bits,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.num_bundles<sp/>=<sp/>(((total_bits<sp/>+<sp/>8<sp/>-<sp/>1)<sp/>/<sp/>8)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>sizeof(uint32_t)<sp/>-<sp/>1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>sizeof(uint32_t),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.bundles<sp/>=<sp/>_sys_bitarray_bundles_##name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="bitarray_8h_1abbe958c6b995023665651e4aa050aa62" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_BITARRAY_DEFINE(name,<sp/>total_bits)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SYS_BITARRAY_DEFINE(name,<sp/>total_bits,)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="bitarray_8h_1a2c55680355b67fc25125299a35f604d1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYS_BITARRAY_DEFINE_STATIC(name,<sp/>total_bits)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SYS_BITARRAY_DEFINE(name,<sp/>total_bits,<sp/>static)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="bitarray_8h_1a5fe657e79fee3e111284e4184eb6b681" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bitarray_8h_1a5fe657e79fee3e111284e4184eb6b681" kindref="member">sys_bitarray_set_bit</ref>(<ref refid="structsys__bitarray" kindref="compound">sys_bitarray_t</ref><sp/>*bitarray,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bit);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="bitarray_8h_1a795e8bf81f5717addf523cec124cde4e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bitarray_8h_1a795e8bf81f5717addf523cec124cde4e" kindref="member">sys_bitarray_clear_bit</ref>(<ref refid="structsys__bitarray" kindref="compound">sys_bitarray_t</ref><sp/>*bitarray,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bit);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="bitarray_8h_1ae024ace00949fe8c565081e62818449d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bitarray_8h_1ae024ace00949fe8c565081e62818449d" kindref="member">sys_bitarray_test_bit</ref>(<ref refid="structsys__bitarray" kindref="compound">sys_bitarray_t</ref><sp/>*bitarray,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*val);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="bitarray_8h_1ad1761b9eae8a1d9302893ce5f8591923" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bitarray_8h_1ad1761b9eae8a1d9302893ce5f8591923" kindref="member">sys_bitarray_test_and_set_bit</ref>(<ref refid="structsys__bitarray" kindref="compound">sys_bitarray_t</ref><sp/>*bitarray,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*prev_val);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="bitarray_8h_1a40fa4d37f1fb2da8789f70de50c599d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bitarray_8h_1a40fa4d37f1fb2da8789f70de50c599d5" kindref="member">sys_bitarray_test_and_clear_bit</ref>(<ref refid="structsys__bitarray" kindref="compound">sys_bitarray_t</ref><sp/>*bitarray,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*prev_val);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="bitarray_8h_1ac96766d9441a3b143aa386e2ac79ffd9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bitarray_8h_1ac96766d9441a3b143aa386e2ac79ffd9" kindref="member">sys_bitarray_alloc</ref>(<ref refid="structsys__bitarray" kindref="compound">sys_bitarray_t</ref><sp/>*bitarray,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref>,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*offset);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="bitarray_8h_1af9a2c34896d3b1866a5a60f78d4166b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bitarray_8h_1af9a2c34896d3b1866a5a60f78d4166b0" kindref="member">sys_bitarray_free</ref>(<ref refid="structsys__bitarray" kindref="compound">sys_bitarray_t</ref><sp/>*bitarray,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref>,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="bitarray_8h_1a2aa91a9be38b11e74dacbeb2fe5e6d6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="bitarray_8h_1a2aa91a9be38b11e74dacbeb2fe5e6d6d" kindref="member">sys_bitarray_is_region_set</ref>(<ref refid="structsys__bitarray" kindref="compound">sys_bitarray_t</ref><sp/>*bitarray,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref>,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="bitarray_8h_1a21cd833e7118f188ca3e06f8cfd13a49" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="bitarray_8h_1a21cd833e7118f188ca3e06f8cfd13a49" kindref="member">sys_bitarray_is_region_cleared</ref>(<ref refid="structsys__bitarray" kindref="compound">sys_bitarray_t</ref><sp/>*bitarray,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref>,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="bitarray_8h_1a94d1a547b9fe0a01d73acf4a5c4f308b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bitarray_8h_1a94d1a547b9fe0a01d73acf4a5c4f308b" kindref="member">sys_bitarray_set_region</ref>(<ref refid="structsys__bitarray" kindref="compound">sys_bitarray_t</ref><sp/>*bitarray,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref>,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="bitarray_8h_1ad13bb2c37d0889807e026dbac6a2872d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bitarray_8h_1ad13bb2c37d0889807e026dbac6a2872d" kindref="member">sys_bitarray_clear_region</ref>(<ref refid="structsys__bitarray" kindref="compound">sys_bitarray_t</ref><sp/>*bitarray,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref>,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_SYS_BITARRAY_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/sys/bitarray.h"/>
  </compounddef>
</doxygen>
