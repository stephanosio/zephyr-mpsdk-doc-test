<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__thread__analyzer" kind="group">
    <compoundname>thread_analyzer</compoundname>
    <title>Thread analyzer</title>
    <innerclass refid="structthread__analyzer__info" prot="public">thread_analyzer_info</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__thread__analyzer_1ga7ac3e88ca6d905ba0efe4afe5822485c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* thread_analyzer_cb) (struct thread_analyzer_info *info)</definition>
        <argsstring>)(struct thread_analyzer_info *info)</argsstring>
        <name>thread_analyzer_cb</name>
        <briefdescription>
<para>Thread analyzer stack size callback function. </para>
        </briefdescription>
        <detaileddescription>
<para>Callback function with thread analysis information.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread analysis information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/thread_analyzer.h" line="47" column="9" bodyfile="include/debug/thread_analyzer.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__thread__analyzer_1ga21ae4723422fb96bf4f20ddb3cc1bb8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void thread_analyzer_run</definition>
        <argsstring>(thread_analyzer_cb cb)</argsstring>
        <name>thread_analyzer_run</name>
        <param>
          <type><ref refid="group__thread__analyzer_1ga7ac3e88ca6d905ba0efe4afe5822485c" kindref="member">thread_analyzer_cb</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Run the thread analyzer and provide information to the callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This function analyzes the current state for all threads and calls a given callback on every thread found.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/thread_analyzer.h" line="56" column="6" declfile="include/debug/thread_analyzer.h" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__thread__analyzer_1ga9ff07e2eff100f4b8c79440483c89836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void thread_analyzer_print</definition>
        <argsstring>(void)</argsstring>
        <name>thread_analyzer_print</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Run the thread analyzer and print stack size statistics. </para>
        </briefdescription>
        <detaileddescription>
<para>This function runs the thread analyzer and prints the output in standard form. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/thread_analyzer.h" line="63" column="6" declfile="include/debug/thread_analyzer.h" declline="63" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Module for analyzing threads. </para>
    </briefdescription>
    <detaileddescription>
<para>This module implements functions and the configuration that simplifies thread analysis. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
