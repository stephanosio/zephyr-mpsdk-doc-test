<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="xcc_8h" kind="file" language="C++">
    <compoundname>xcc.h</compoundname>
    <includes refid="gcc_8h" local="no">toolchain/gcc.h</includes>
    <includes refid="stdbool_8h" local="no">stdbool.h</includes>
    <includes local="no">xtensa/config/core.h</includes>
    <incdepgraph>
      <node id="2">
        <label>toolchain/gcc.h</label>
        <link refid="gcc_8h"/>
      </node>
      <node id="1">
        <label>include/toolchain/xcc.h</label>
        <link refid="xcc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="4">
        <label>xtensa/config/core.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="xcc_8h_1a1eaa7db37089dcdfb60227725c9c1585" prot="public" static="no">
        <name>INT8_C</name>
        <param><defname>x</defname></param>
        <initializer>__INT8_C(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/toolchain/xcc.h" line="34" column="9" bodyfile="include/toolchain/xcc.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xcc_8h_1acd2aa09844a8a245cf7fdbb808e215e5" prot="public" static="no">
        <name>UINT8_C</name>
        <param><defname>x</defname></param>
        <initializer>__UINT8_C(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/toolchain/xcc.h" line="42" column="9" bodyfile="include/toolchain/xcc.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xcc_8h_1a838b261fec725cb0f5d5b6769d3521e7" prot="public" static="no">
        <name>INT16_C</name>
        <param><defname>x</defname></param>
        <initializer>__INT16_C(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/toolchain/xcc.h" line="50" column="9" bodyfile="include/toolchain/xcc.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xcc_8h_1a1cb39a2cfaf899fd38730c7637807708" prot="public" static="no">
        <name>UINT16_C</name>
        <param><defname>x</defname></param>
        <initializer>__UINT16_C(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/toolchain/xcc.h" line="58" column="9" bodyfile="include/toolchain/xcc.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xcc_8h_1ad78650fb7726f4e99205406569ef403d" prot="public" static="no">
        <name>INT32_C</name>
        <param><defname>x</defname></param>
        <initializer>__INT32_C(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/toolchain/xcc.h" line="66" column="9" bodyfile="include/toolchain/xcc.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xcc_8h_1a2451a7ede7ebd810357f1503e9898ea6" prot="public" static="no">
        <name>UINT32_C</name>
        <param><defname>x</defname></param>
        <initializer>__UINT32_C(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/toolchain/xcc.h" line="74" column="9" bodyfile="include/toolchain/xcc.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xcc_8h_1a93d102802b35d3b8abae9bbe7f0fed75" prot="public" static="no">
        <name>INT64_C</name>
        <param><defname>x</defname></param>
        <initializer>__INT64_C(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/toolchain/xcc.h" line="82" column="9" bodyfile="include/toolchain/xcc.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xcc_8h_1a134ae84400d184ed2570e3270d5472c2" prot="public" static="no">
        <name>UINT64_C</name>
        <param><defname>x</defname></param>
        <initializer>__UINT64_C(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/toolchain/xcc.h" line="90" column="9" bodyfile="include/toolchain/xcc.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xcc_8h_1a846429736de0233f6ecddedb21424ddd" prot="public" static="no">
        <name>INTMAX_C</name>
        <param><defname>x</defname></param>
        <initializer>__INTMAX_C(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/toolchain/xcc.h" line="98" column="9" bodyfile="include/toolchain/xcc.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="xcc_8h_1ad99c338b32fbeaa158cba21e532dfe5d" prot="public" static="no">
        <name>UINTMAX_C</name>
        <param><defname>x</defname></param>
        <initializer>__UINTMAX_C(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/toolchain/xcc.h" line="106" column="9" bodyfile="include/toolchain/xcc.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_TOOLCHAIN_XCC_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_TOOLCHAIN_XCC_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>toolchain/gcc.h<sp/>errors<sp/>out<sp/>if<sp/>__BYTE_ORDER__<sp/>cannot<sp/>be<sp/>determined</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>there.<sp/>However,<sp/>__BYTE_ORDER__<sp/>is<sp/>actually<sp/>being<sp/>defined<sp/>later<sp/>in</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>this<sp/>file.<sp/>So<sp/>define<sp/>__BYTE_ORDER__<sp/>to<sp/>skip<sp/>the<sp/>check<sp/>in<sp/>gcc.h</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>and<sp/>undefine<sp/>after<sp/>including<sp/>gcc.h.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Clang<sp/>has<sp/>it<sp/>defined<sp/>so<sp/>there<sp/>is<sp/>no<sp/>need<sp/>to<sp/>work<sp/>around.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__BYTE_ORDER__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gcc_8h" kindref="compound">toolchain/gcc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__BYTE_ORDER__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdbool_8h" kindref="compound">stdbool.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__INT8_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INT8_C(x)<sp/><sp/><sp/><sp/><sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INT8_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="xcc_8h_1a1eaa7db37089dcdfb60227725c9c1585" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT8_C(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>__INT8_C(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__UINT8_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__UINT8_C(x)<sp/><sp/><sp/><sp/>x<sp/>##<sp/>U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UINT8_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="xcc_8h_1acd2aa09844a8a245cf7fdbb808e215e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT8_C(x)<sp/><sp/><sp/><sp/><sp/><sp/>__UINT8_C(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__INT16_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INT16_C(x)<sp/><sp/><sp/><sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INT16_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="xcc_8h_1a838b261fec725cb0f5d5b6769d3521e7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT16_C(x)<sp/><sp/><sp/><sp/><sp/><sp/>__INT16_C(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__UINT16_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__UINT16_C(x)<sp/><sp/><sp/>x<sp/>##<sp/>U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UINT16_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="xcc_8h_1a1cb39a2cfaf899fd38730c7637807708" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT16_C(x)<sp/><sp/><sp/><sp/><sp/>__UINT16_C(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__INT32_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INT32_C(x)<sp/><sp/><sp/><sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INT32_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="xcc_8h_1ad78650fb7726f4e99205406569ef403d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT32_C(x)<sp/><sp/><sp/><sp/><sp/><sp/>__INT32_C(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__UINT32_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__UINT32_C(x)<sp/><sp/><sp/>x<sp/>##<sp/>U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UINT32_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="xcc_8h_1a2451a7ede7ebd810357f1503e9898ea6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_C(x)<sp/><sp/><sp/><sp/><sp/>__UINT32_C(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__INT64_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INT64_C(x)<sp/><sp/><sp/><sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INT64_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="xcc_8h_1a93d102802b35d3b8abae9bbe7f0fed75" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT64_C(x)<sp/><sp/><sp/><sp/><sp/><sp/>__INT64_C(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__UINT64_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__UINT64_C(x)<sp/><sp/><sp/>x<sp/>##<sp/>ULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UINT64_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="xcc_8h_1a134ae84400d184ed2570e3270d5472c2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT64_C(x)<sp/><sp/><sp/><sp/><sp/>__UINT64_C(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__INTMAX_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INTMAX_C(x)<sp/><sp/><sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INTMAX_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="xcc_8h_1a846429736de0233f6ecddedb21424ddd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INTMAX_C(x)<sp/><sp/><sp/><sp/><sp/>__INTMAX_C(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__UINTMAX_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__UINTMAX_C(x)<sp/><sp/>x<sp/>##<sp/>ULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UINTMAX_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="xcc_8h_1ad99c338b32fbeaa158cba21e532dfe5d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINTMAX_C(x)<sp/><sp/><sp/><sp/>__UINTMAX_C(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__COUNTER__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>XCC<sp/>(GCC-based<sp/>compiler)<sp/>doesn&apos;t<sp/>support<sp/>__COUNTER__</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>but<sp/>this<sp/>should<sp/>be<sp/>good<sp/>enough</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__COUNTER__<sp/>__LINE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__in_section_unique</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__in_section_unique(seg)<sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__((section(&quot;.&quot;</highlight><highlight class="normal"><sp/>STRINGIFY(seg)<sp/>&quot;.&quot;<sp/>STRINGIFY(__COUNTER__))))</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__in_section_unique_named</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__in_section_unique_named(seg,<sp/>name)<sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__((section(&quot;.&quot;</highlight><highlight class="normal"><sp/>STRINGIFY(seg)<sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.&quot;<sp/>STRINGIFY(__COUNTER__)<sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.&quot;<sp/>STRINGIFY(name))))</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__GCC_LINKER_CMD__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xtensa/config/core.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>XCC<sp/>does<sp/>not<sp/>define<sp/>the<sp/>following<sp/>macros<sp/>with<sp/>the<sp/>expected<sp/>names,<sp/>but<sp/>the</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>HAL<sp/>defines<sp/>similar<sp/>ones.<sp/>Thus<sp/>we<sp/>include<sp/>it<sp/>and<sp/>define<sp/>the<sp/>missing<sp/>macros</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>ourselves.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>XCHAL_MEMORY_ORDER<sp/>==<sp/>XTHAL_BIGENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__BYTE_ORDER__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ORDER_BIG_ENDIAN__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>XCHAL_MEMORY_ORDER<sp/>==<sp/>XTHAL_LITTLEENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__BYTE_ORDER__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ORDER_LITTLE_ENDIAN__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Cannot<sp/>determine<sp/>__BYTE_ORDER__&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__GCC_LINKER_CMD__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__builtin_unreachable()<sp/>do<sp/>{<sp/>__ASSERT(false,<sp/>&quot;Unreachable<sp/>code&quot;</highlight><highlight class="normal">);<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(true)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/>XCC<sp/>does<sp/>not<sp/>support<sp/>using<sp/>deprecated<sp/>attribute<sp/>in<sp/>enum,</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>so<sp/>just<sp/>nullify<sp/>it<sp/>here<sp/>to<sp/>avoid<sp/>compilation<sp/>errors.</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/toolchain/xcc.h"/>
  </compounddef>
</doxygen>
