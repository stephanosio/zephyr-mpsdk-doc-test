<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structgpio__callback" kind="struct" language="C++" prot="public">
    <compoundname>gpio_callback</compoundname>
    <includes refid="drivers_2gpio_8h" local="no">gpio.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgpio__callback_1ab60e7093072964bd818d536c746211e4" prot="public" static="no" mutable="no">
        <type><ref refid="slist_8h_1a69bf43aad81e3ee2d55250c59b857493" kindref="member">sys_snode_t</ref></type>
        <definition>sys_snode_t gpio_callback::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is meant to be used in the driver and the user should not mess with it (see drivers/gpio/gpio_utils.h) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/gpio.h" line="550" column="13" bodyfile="include/drivers/gpio.h" bodystart="550" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgpio__callback_1af89dc41cbd610d81ac03cae7ab764ceb" prot="public" static="no" mutable="no">
        <type><ref refid="group__gpio__interface_1ga2b400e2193e3899c63253d2f48ed90db" kindref="member">gpio_callback_handler_t</ref></type>
        <definition>gpio_callback_handler_t gpio_callback::handler</definition>
        <argsstring></argsstring>
        <name>handler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Actual callback function being called when relevant. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/gpio.h" line="553" column="25" bodyfile="include/drivers/gpio.h" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgpio__callback_1ace5c2b83f1d51f73877a1f2c54ba8c67" prot="public" static="no" mutable="no">
        <type><ref refid="group__gpio__interface_1ga7f40ed51f14fd8000e9b52ab347b273f" kindref="member">gpio_port_pins_t</ref></type>
        <definition>gpio_port_pins_t gpio_callback::pin_mask</definition>
        <argsstring></argsstring>
        <name>pin_mask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A mask of pins the callback is interested in, if 0 the callback will never be called. Such pin_mask can be modified whenever necessary by the owner, and thus will affect the handler being called or not. The selected pins must be configured to trigger an interrupt. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/gpio.h" line="561" column="18" bodyfile="include/drivers/gpio.h" bodystart="561" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>GPIO callback structure. </para>
    </briefdescription>
    <detaileddescription>
<para>Used to register a callback in the driver instance callback list. As many callbacks as needed can be added as long as each of them are unique pointers of struct <ref refid="structgpio__callback" kindref="compound">gpio_callback</ref>. Beware such structure should not be allocated on stack.</para>
<para>Note: To help setting it, see <ref refid="group__gpio__interface_1ga7a7dd7c1f3a2135a9f378e1c34b6232c" kindref="member">gpio_init_callback()</ref> below </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>_snode</label>
      </node>
      <node id="3">
        <label>device</label>
        <link refid="structdevice"/>
        <childnode refid="4" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>device_state</label>
        <link refid="structdevice__state"/>
      </node>
      <node id="1">
        <label>gpio_callback</label>
        <link refid="structgpio__callback"/>
        <childnode refid="2" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>handler</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/drivers/gpio.h" line="546" column="1" bodyfile="include/drivers/gpio.h" bodystart="546" bodyend="562"/>
    <listofallmembers>
      <member refid="structgpio__callback_1af89dc41cbd610d81ac03cae7ab764ceb" prot="public" virt="non-virtual"><scope>gpio_callback</scope><name>handler</name></member>
      <member refid="structgpio__callback_1ab60e7093072964bd818d536c746211e4" prot="public" virt="non-virtual"><scope>gpio_callback</scope><name>node</name></member>
      <member refid="structgpio__callback_1ace5c2b83f1d51f73877a1f2c54ba8c67" prot="public" virt="non-virtual"><scope>gpio_callback</scope><name>pin_mask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
