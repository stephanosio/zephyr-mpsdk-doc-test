<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structbt__iso__server" kind="struct" language="C++" prot="public">
    <compoundname>bt_iso_server</compoundname>
    <includes refid="iso_8h" local="no">iso.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structbt__iso__server_1a43b53fd63d4deaa1c5599499eec29c99" prot="public" static="no" mutable="no">
        <type><ref refid="group__bt__conn_1gaf0c56cd26c4147f6c9f0faa11fa01783" kindref="member">bt_security_t</ref></type>
        <definition>bt_security_t bt_iso_server::sec_level</definition>
        <argsstring></argsstring>
        <name>sec_level</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Required minimim security level </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="484" column="14" bodyfile="include/bluetooth/iso.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__iso__server_1ae67a000ae524cba53b6bda503568ba38" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* bt_iso_server::accept) (const struct bt_iso_accept_info *info, struct bt_iso_chan **chan)</definition>
        <argsstring>)(const struct bt_iso_accept_info *info, struct bt_iso_chan **chan)</argsstring>
        <name>accept</name>
        <briefdescription>
<para>Server accept callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This callback is called whenever a new incoming connection requires authorization.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>The ISO accept information structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to receive the allocated channel</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/iso.h" line="496" column="1" bodyfile="include/bluetooth/iso.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>ISO Server structure. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/bluetooth/iso.h" line="482" column="1" bodyfile="include/bluetooth/iso.h" bodystart="482" bodyend="498"/>
    <listofallmembers>
      <member refid="structbt__iso__server_1ae67a000ae524cba53b6bda503568ba38" prot="public" virt="non-virtual"><scope>bt_iso_server</scope><name>accept</name></member>
      <member refid="structbt__iso__server_1a43b53fd63d4deaa1c5599499eec29c99" prot="public" virt="non-virtual"><scope>bt_iso_server</scope><name>sec_level</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
