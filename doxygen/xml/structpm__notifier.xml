<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structpm__notifier" kind="struct" language="C++" prot="public">
    <compoundname>pm_notifier</compoundname>
    <includes refid="pm_8h" local="no">pm.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structpm__notifier_1ab84353bcc32f4262ea1a34f316d21278" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* pm_notifier::state_entry) (enum pm_state state)</definition>
        <argsstring>)(enum pm_state state)</argsstring>
        <name>state_entry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Application defined function for doing any target specific operations for power state entry. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/pm/pm.h" line="60" column="1" bodyfile="include/pm/pm.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpm__notifier_1aeb6bcf67d2d4c5342d8d81cea3728ec5" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* pm_notifier::state_exit) (enum pm_state state)</definition>
        <argsstring>)(enum pm_state state)</argsstring>
        <name>state_exit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Application defined function for doing any target specific operations for power state exit. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/pm/pm.h" line="65" column="1" bodyfile="include/pm/pm.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Power management notifier struct</para>
<para>This struct contains callbacks that are called when the target enters and exits power states.</para>
<para>As currently implemented the entry callback is invoked when transitioning from PM_STATE_ACTIVE to another state, and the exit callback is invoked when transitioning from a non-active state to PM_STATE_ACTIVE. This behavior may change in the future.</para>
<para><simplesect kind="note"><para>These callbacks can be called from the ISR of the event that caused the kernel exit from idling.</para>
</simplesect>
<simplesect kind="note"><para>It is not allowed to call <ref refid="group__subsys__pm__sys_1gab0856d662e50a3847a1b70cb8370849a" kindref="member">pm_notifier_unregister</ref> or <ref refid="group__subsys__pm__sys_1ga066945118b8f287ee56aacf41b677a78" kindref="member">pm_notifier_register</ref> from these callbacks because they are called with the spin locked in those functions. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="include/pm/pm.h" line="54" column="1" bodyfile="include/pm/pm.h" bodystart="54" bodyend="66"/>
    <listofallmembers>
      <member refid="structpm__notifier_1ab84353bcc32f4262ea1a34f316d21278" prot="public" virt="non-virtual"><scope>pm_notifier</scope><name>state_entry</name></member>
      <member refid="structpm__notifier_1aeb6bcf67d2d4c5342d8d81cea3728ec5" prot="public" virt="non-virtual"><scope>pm_notifier</scope><name>state_exit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
