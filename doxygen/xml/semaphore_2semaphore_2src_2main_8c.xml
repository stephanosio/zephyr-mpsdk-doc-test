<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="semaphore_2semaphore_2src_2main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes refid="ztest_8h" local="no">ztest.h</includes>
    <includes refid="irq__offload_8h" local="no">irq_offload.h</includes>
    <includes refid="ztest__error__hook_8h" local="no">ztest_error_hook.h</includes>
    <incdepgraph>
      <node id="17">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="66">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="65">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="29">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="36">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="38">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="34">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="32">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="40">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="41">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="37">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="35">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="39">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="75">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="45">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="51">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="28">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="42">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="23">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="4">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="19">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="86">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="87">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="13">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="8">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="11">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="64">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="88">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="81">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="2">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>ztest_error_hook.h</label>
        <link refid="ztest__error__hook_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="15">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/semaphore/semaphore/src/main.c</label>
        <link refid="semaphore_2semaphore_2src_2main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>alloca.h</label>
      </node>
      <node id="68">
        <label>arch/cpu.h</label>
      </node>
      <node id="31">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="30">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="43">
        <label>kernel.h</label>
      </node>
      <node id="6">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="84">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="89">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="90">
        <label>tc_util.h</label>
      </node>
      <node id="9">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structtimeout__info" prot="public">timeout_info</innerclass>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a0b569de6c3ca9ef6995ae9259585f0fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_k_sem_define</definition>
        <argsstring>(void)</argsstring>
        <name>test_k_sem_define</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test semaphore defined at compile time. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Get the semaphore count.</para>
</listitem><listitem><para>Verify the semaphore count equals to initialized value.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1ga58843b581e170a1811fc38eecbfd01f3" kindref="member">k_sem_count_get()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="239" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="239" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a90e0a8a183e6b9d8e224194d2262ca06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_thread2thread</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_thread2thread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test synchronization of threads with semaphore. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init()</ref>, <ref refid="group__semaphore__apis_1ga018a8aa43e02e704deee7b6341502946" kindref="member">K_SEM_DEFINE(x)</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: test k_sem_init sema</para>
<para>TESTPOINT: test K_SEM_DEFINE sema</para>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="251" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="251" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1ab04a6ee61b2bdf9191a207dcdaf7eb1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_thread2isr</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_thread2isr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test synchronization between thread and irq. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init()</ref>, <ref refid="group__semaphore__apis_1ga018a8aa43e02e704deee7b6341502946" kindref="member">K_SEM_DEFINE(x)</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: test k_sem_init sema</para>
<para>TESTPOINT: test K_SEM_DEFINE sema</para>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="266" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="266" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a90de1a3fcf50b4da020b0e09bb2b74a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_k_sem_init</definition>
        <argsstring>(void)</argsstring>
        <name>test_k_sem_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test semaphore initialization at running time. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Initialize a semaphore with valid count and max limit.</para>
</listitem><listitem><para>Initialize a semaphore with invalid max limit.</para>
</listitem><listitem><para>Initialize a semaphore with invalid count. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="285" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="285" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1abd0261e8b9f2b427c738fffcfaf67eee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_reset</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset()</ref> API. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: semaphore take return -EBUSY</para>
<para>TESTPOINT: semaphore take return -EAGAIN</para>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="304" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="304" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a9a806fa822d15627ba92ad163d4459e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_reset_waiting</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_reset_waiting</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="329" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="329" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1ad10ccd6017b12fe417daeca31600c4d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_count_get</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_count_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__semaphore__apis_1ga58843b581e170a1811fc38eecbfd01f3" kindref="member">k_sem_count_get()</ref> API. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1ga58843b581e170a1811fc38eecbfd01f3" kindref="member">k_sem_count_get()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: semaphore count get upon init</para>
<para>TESTPOINT: sem count get after give</para>
<para>TESTPOINT: sem count get after take</para>
<para>TESTPOINT: semaphore give above limit</para>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="358" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="358" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a228a36946d0244decae324234f229aaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_give_from_isr</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_give_from_isr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test whether a semaphore can be given by an ISR. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Reset an initialized semaphore&apos;s count to zero</para>
</listitem><listitem><para>Create a loop, in each loop, do follow steps</para>
</listitem><listitem><para>Give the semaphore from an ISR</para>
</listitem><listitem><para>Get the semaphore&apos;s count</para>
</listitem><listitem><para>Verify whether the semaphore&apos;s count as expected</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="390" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="390" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a1646510be803398ae3046c5da463d634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_give_from_thread</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_give_from_thread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test semaphore count when given by thread. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Reset an initialized semaphore&apos;s count to zero</para>
</listitem><listitem><para>Create a loop, in each loop, do follow steps</para>
</listitem><listitem><para>Give the semaphore from a thread</para>
</listitem><listitem><para>Get the semaphore&apos;s count</para>
</listitem><listitem><para>Verify whether the semaphore&apos;s count as expected</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="418" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="418" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1aa333e4cfd24bbf545462c51e215237ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_take_no_wait</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_take_no_wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test if <ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref> decreases semaphore count. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="440" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="440" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1aed85a39ac76cf3f9c7a85e9622409912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_take_no_wait_fails</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_take_no_wait_fails</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref> when there is no semaphore to take. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="462" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="462" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1ac3ac78bdf5fd008590f2997e15f0fafb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_take_timeout_fails</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_take_timeout_fails</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test a semaphore take operation with an unavailable semaphore. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Reset the semaphore&apos;s count to zero, let it unavailable.</para>
</listitem><listitem><para>Take an unavailable semaphore and wait it until timeout.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="486" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="486" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a4f32ec757c4bf9a27aee0bb354d2353b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_take_timeout</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_take_timeout</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test the semaphore take operation with specified timeout. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Create a new thread, it will give semaphore.</para>
</listitem><listitem><para>Reset the semaphore&apos;s count to zero.</para>
</listitem><listitem><para>Take semaphore and wait it given by other threads in specified timeout.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="509" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="509" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1adc45dac316741c4281efcacdf12ea52e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_take_timeout_forever</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_take_timeout_forever</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test the semaphore take operation with forever wait. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Create a new thread, it will give semaphore.</para>
</listitem><listitem><para>Reset the semaphore&apos;s count to zero.</para>
</listitem><listitem><para>Take semaphore, wait it given by other thread forever until it&apos;s available.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="545" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="545" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1ab307c87cb125b3eae98e4842886151d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_take_timeout_isr</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_take_timeout_isr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref> with timeout in ISR context. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="573" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="573" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1abc3e0aef2feca4251f8220aec4c4196b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_take_multiple</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_take_multiple</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test semaphore take operation by multiple threads. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="597" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="597" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a23c5ffa4dc2db4c19421e8835ca4b5c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_k_sem_correct_count_limit</definition>
        <argsstring>(void)</argsstring>
        <name>test_k_sem_correct_count_limit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test the max value a semaphore can be given and taken. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Reset an initialized semaphore&apos;s count to zero.</para>
</listitem><listitem><para>Give the semaphore by a thread and verify the semaphore&apos;s count is as expected.</para>
</listitem><listitem><para>Verify the max count a semaphore can reach.</para>
</listitem><listitem><para>Take the semaphore by a thread and verify the semaphore&apos;s count is as expected.</para>
</listitem><listitem><para>Verify the max times a semaphore can be taken.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1ga58843b581e170a1811fc38eecbfd01f3" kindref="member">k_sem_count_get()</ref>, <ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="740" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="740" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a7a0d165476689da2cba46564c8244e79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_give_take_from_isr</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_give_take_from_isr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test semaphore give and take and its count from ISR. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="787" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="787" bodyend="804"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" prot="public" static="no">
        <name>SEM_INIT_VAL</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="12" column="9" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" prot="public" static="no">
        <name>SEM_MAX_VAL</name>
        <initializer>(10U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="13" column="9" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="semaphore_2semaphore_2src_2main_8c_1a122fcce70e98e17966bab36f75ced5da" prot="public" static="no">
        <name>THREAD_TEST_PRIORITY</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="14" column="9" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="semaphore_2semaphore_2src_2main_8c_1a6a15a28596c45dcbffd74d5a4e21a7fa" prot="public" static="no">
        <name>sem_give_from_isr</name>
        <param><defname>sema</defname></param>
        <initializer><ref refid="irq__offload_8h_1a429859dd7ac3d88a4b7ae858835847ce" kindref="member">irq_offload</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a7f4a048a708101c3c0c27a5e9d46edbc" kindref="member">isr_sem_give</ref>, (const void *)sema)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="16" column="9" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="semaphore_2semaphore_2src_2main_8c_1a4c2d75ddf7fbd37f6274eabb084d53ec" prot="public" static="no">
        <name>sem_take_from_isr</name>
        <param><defname>sema</defname></param>
        <initializer><ref refid="irq__offload_8h_1a429859dd7ac3d88a4b7ae858835847ce" kindref="member">irq_offload</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1abc5d8bc024da19063ff31f02d811417a" kindref="member">isr_sem_take</ref>, (const void *)sema)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="17" column="9" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="semaphore_2semaphore_2src_2main_8c_1aed2079386fc07f630156be1bdd9db2a0" prot="public" static="no">
        <name>SEM_TIMEOUT</name>
        <initializer>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(100))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="19" column="9" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" prot="public" static="no">
        <name>STACK_SIZE</name>
        <initializer>(512 + CONFIG_TEST_EXTRA_STACKSIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="20" column="9" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="semaphore_2semaphore_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" prot="public" static="no">
        <name>TOTAL_THREADS_WAITING</name>
        <initializer>(5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="21" column="9" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="semaphore_2semaphore_2src_2main_8c_1aaa90a0dd577ebd375f7e0020b27b697a" prot="public" static="no">
        <name>SEC2MS</name>
        <param><defname>s</defname></param>
        <initializer>((<ref refid="kobject_8c_1ac3f4657537e42ff1fa877307841464af" kindref="member">s</ref>) * 1000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="23" column="9" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="semaphore_2semaphore_2src_2main_8c_1a43715f6819970ffa5670a41556822e1f" prot="public" static="no">
        <name>QSEC2MS</name>
        <param><defname>s</defname></param>
        <initializer>((<ref refid="kobject_8c_1ac3f4657537e42ff1fa877307841464af" kindref="member">s</ref>) * 250)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="24" column="9" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="semaphore_2semaphore_2src_2main_8c_1a8f02ff5bd19678b35db9cfced1166bc7" prot="public" static="no">
        <name>expect_k_sem_take</name>
        <param><defname>sem</defname></param>
        <param><defname>timeout</defname></param>
        <param><defname>exp</defname></param>
        <param><defname>str</defname></param>
        <initializer>	do { \
	int _act = <ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>((<ref refid="threads_2thread__apis_2src_2main_8c_1a989f6708d698cae205e01a2f6738767f" kindref="member">sem</ref>), (<ref refid="timer_2cycle64_2src_2main_8c_1a8f4b69a82b00d7baf3f1f7d480bb7fa0" kindref="member">timeout</ref>)); \
	int _exp = (exp); \
	<ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(_act, _exp, (str), _act, _exp); \
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="26" column="9" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="semaphore_2semaphore_2src_2main_8c_1a5cd056df1de7108e612b5df56ac1a9bc" prot="public" static="no">
        <name>expect_k_sem_init</name>
        <param><defname>sem</defname></param>
        <param><defname>init</defname></param>
        <param><defname>max</defname></param>
        <param><defname>exp</defname></param>
        <param><defname>str</defname></param>
        <initializer>	do { \
	int _act = <ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>((<ref refid="threads_2thread__apis_2src_2main_8c_1a989f6708d698cae205e01a2f6738767f" kindref="member">sem</ref>), (init), (max)); \
	int _exp = (exp); \
	<ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(_act, _exp, (str), _act, _exp); \
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="32" column="9" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" prot="public" static="no">
        <name>expect_k_sem_count_get</name>
        <param><defname>sem</defname></param>
        <param><defname>exp</defname></param>
        <param><defname>str</defname></param>
        <initializer>	do { \
	<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int _act = <ref refid="group__semaphore__apis_1ga58843b581e170a1811fc38eecbfd01f3" kindref="member">k_sem_count_get</ref>(<ref refid="threads_2thread__apis_2src_2main_8c_1a989f6708d698cae205e01a2f6738767f" kindref="member">sem</ref>); \
	<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int _exp = (exp); \
	<ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(_act, _exp, (str), _act, _exp); \
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="38" column="9" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" prot="public" static="no">
        <name>expect_k_sem_take_nomsg</name>
        <param><defname>sem</defname></param>
        <param><defname>timeout</defname></param>
        <param><defname>exp</defname></param>
        <initializer>	<ref refid="semaphore_2semaphore_2src_2main_8c_1a8f02ff5bd19678b35db9cfced1166bc7" kindref="member">expect_k_sem_take</ref>((<ref refid="threads_2thread__apis_2src_2main_8c_1a989f6708d698cae205e01a2f6738767f" kindref="member">sem</ref>), (<ref refid="timer_2cycle64_2src_2main_8c_1a8f4b69a82b00d7baf3f1f7d480bb7fa0" kindref="member">timeout</ref>), (exp), &quot;k_sem_take incorrect return value: %<ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref> != %<ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="44" column="9" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="semaphore_2semaphore_2src_2main_8c_1af8e99cd4ed50c287c7b47843f596a9f8" prot="public" static="no">
        <name>expect_k_sem_init_nomsg</name>
        <param><defname>sem</defname></param>
        <param><defname>init</defname></param>
        <param><defname>max</defname></param>
        <param><defname>exp</defname></param>
        <initializer>	<ref refid="semaphore_2semaphore_2src_2main_8c_1a5cd056df1de7108e612b5df56ac1a9bc" kindref="member">expect_k_sem_init</ref>((<ref refid="threads_2thread__apis_2src_2main_8c_1a989f6708d698cae205e01a2f6738767f" kindref="member">sem</ref>), (init), (max), (exp), \
					  &quot;k_sem_init incorrect return value: %<ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref> != %<ref refid="asm-macro-64-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="46" column="9" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" prot="public" static="no">
        <name>expect_k_sem_count_get_nomsg</name>
        <param><defname>sem</defname></param>
        <param><defname>exp</defname></param>
        <initializer>	<ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>((<ref refid="threads_2thread__apis_2src_2main_8c_1a989f6708d698cae205e01a2f6738767f" kindref="member">sem</ref>), (exp), &quot;k_sem_count_get incorrect return value: %u != %u&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="49" column="9" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="semaphore_2semaphore_2src_2main_8c_1acb8b644db1c9c3eb555489bc39c051ab" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t critical_var</definition>
        <argsstring></argsstring>
        <name>critical_var</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="60" column="10" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="semaphore_2semaphore_2src_2main_8c_1aa42ced64f54bb6230d0470ae1f37eb61" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref> sem_tid_1 <ref refid="mem__protect_2sys__sem_2src_2main_8c_1adbba1dc3054ec90bd75f0794fce7005a" kindref="member">sem_tid_2</ref> sem_tid_3</type>
        <definition>struct k_thread sem_tid_1 sem_tid_2 sem_tid_3 sem_tid_4</definition>
        <argsstring></argsstring>
        <name>sem_tid_4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="84" column="15" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="semaphore_2semaphore_2src_2main_8c_1af74d7616a68cb6d9ce147a98b39c0979" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread multiple_tid[(5)]</definition>
        <argsstring>[(5)]</argsstring>
        <name>multiple_tid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="85" column="15" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="semaphore_2semaphore_2src_2main_8c_1afbcf43d1a3208ce10a82130221cb3117" prot="public" static="no" mutable="no">
        <type>struct k_sem sema</type>
        <definition>struct k_sem sema mut_sem</definition>
        <argsstring></argsstring>
        <name>mut_sem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="88" column="12" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="semaphore_2semaphore_2src_2main_8c_1aa15baae19d44279cac3d8bf47c9e707f" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread tdata</definition>
        <argsstring></argsstring>
        <name>tdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="90" column="15" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a8239ac04699cb1db802c0a3a2350bb3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_give_null</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_give_null</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give()</ref> API. </para>
        </briefdescription>
        <detaileddescription>
<para>Create a thread and set <ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give()</ref> input to NULL</para>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="1152" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="1152" bodyend="1161" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="53" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1ab22b6531e77e3dd64b03054dfddb8d4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_init_null</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_init_null</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init()</ref> API. </para>
        </briefdescription>
        <detaileddescription>
<para>Create a thread and set <ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init()</ref> input to NULL</para>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="1189" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="1189" bodyend="1198" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="54" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1ac9f16c45c644d3528dff465aac973578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_take_null</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_take_null</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref> API. </para>
        </briefdescription>
        <detaileddescription>
<para>Create a thread and set <ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref> input to NULL</para>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="1226" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="1226" bodyend="1235" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="55" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1af103f0701fa3fa8176609f70235e04db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_reset_null</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_reset_null</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset()</ref> API. </para>
        </briefdescription>
        <detaileddescription>
<para>Create a thread and set <ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset()</ref> input to NULL</para>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="1263" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="1263" bodyend="1272" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="56" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1aa1fc945da5111a413d358a70f83557be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_count_get_null</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_count_get_null</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__semaphore__apis_1ga58843b581e170a1811fc38eecbfd01f3" kindref="member">k_sem_count_get()</ref> API. </para>
        </briefdescription>
        <detaileddescription>
<para>Create a thread and set <ref refid="group__semaphore__apis_1ga58843b581e170a1811fc38eecbfd01f3" kindref="member">k_sem_count_get()</ref> input to NULL</para>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1ga58843b581e170a1811fc38eecbfd01f3" kindref="member">k_sem_count_get()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="1300" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="1300" bodyend="1309" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="57" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a89b5265e7ab5d2161f2a199beed35f6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_SEM_DEFINE</definition>
        <argsstring>(simple_sem,(0U),(10U))</argsstring>
        <name>K_SEM_DEFINE</name>
        <param>
          <type><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref></type>
        </param>
        <param>
          <type>(0U)</type>
        </param>
        <param>
          <type>(10U)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="69" column="1" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="69" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a2025b34658ebe2c778253548e7721bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_SEM_DEFINE</definition>
        <argsstring>(low_prio_sem,(0U),(10U))</argsstring>
        <name>K_SEM_DEFINE</name>
        <param>
          <type><ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref></type>
        </param>
        <param>
          <type>(0U)</type>
        </param>
        <param>
          <type>(10U)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="70" column="1" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="70" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a97e69481031bf357392ac3efefcd5033" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_SEM_DEFINE</definition>
        <argsstring>(mid_prio_sem,(0U),(10U))</argsstring>
        <name>K_SEM_DEFINE</name>
        <param>
          <type><ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref></type>
        </param>
        <param>
          <type>(0U)</type>
        </param>
        <param>
          <type>(10U)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="71" column="1" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="71" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a1da80d55d5d7ea75fe78816324adcca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_SEM_DEFINE</definition>
        <argsstring>(high_prio_long_sem,(0U),(10U))</argsstring>
        <name>K_SEM_DEFINE</name>
        <param>
          <type>high_prio_long_sem</type>
        </param>
        <param>
          <type>(0U)</type>
        </param>
        <param>
          <type>(10U)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="72" column="1" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="72" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a1dd66c5c799898ff60e5e5464ba782e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_SEM_DEFINE</definition>
        <argsstring>(high_prio_sem,(0U),(10U))</argsstring>
        <name>K_SEM_DEFINE</name>
        <param>
          <type><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref></type>
        </param>
        <param>
          <type>(0U)</type>
        </param>
        <param>
          <type>(10U)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="73" column="1" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="73" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a56106a3f0bda7d9af0ffdaabba0270bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_SEM_DEFINE</definition>
        <argsstring>(multiple_thread_sem,(0U),(10U))</argsstring>
        <name>K_SEM_DEFINE</name>
        <param>
          <type>multiple_thread_sem</type>
        </param>
        <param>
          <type>(0U)</type>
        </param>
        <param>
          <type>(10U)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="74" column="1" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="74" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a9bda3e00bf96550334eadf74c9af316b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_DEFINE</definition>
        <argsstring>(stack_1,(512+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type><ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref></type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="76" column="1" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="76" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a6e0a3040923a786d0f4b029184aad5b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_DEFINE</definition>
        <argsstring>(stack_2,(512+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>stack_2</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="77" column="1" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="77" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a4b92389859362bc3df3831cdbcecb7b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_DEFINE</definition>
        <argsstring>(stack_3,(512+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>stack_3</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="78" column="1" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="78" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a970ce2dde4c0527c028522c336cfa26a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_DEFINE</definition>
        <argsstring>(stack_4,(512+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>stack_4</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="79" column="1" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="79" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a9ae1a26c884aab54771c291e067e4cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_ARRAY_DEFINE</definition>
        <argsstring>(multiple_stack,(5),(512+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_ARRAY_DEFINE</name>
        <param>
          <type>multiple_stack</type>
        </param>
        <param>
          <type>(5)</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="80" column="1" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="80" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a60a9ae449ed9f894443d6dc5426c4fd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_PIPE_DEFINE</definition>
        <argsstring>(timeout_info_pipe, sizeof(struct timeout_info) *(5), 4)</argsstring>
        <name>K_PIPE_DEFINE</name>
        <param>
          <type>timeout_info_pipe</type>
        </param>
        <param>
          <type>sizeof(struct <ref refid="structtimeout__info" kindref="compound">timeout_info</ref>) *(5)</type>
        </param>
        <param>
          <type>4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="81" column="1" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="81" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a87a9dfdb42a4de62f3ef3b905a1e48c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_SEM_DEFINE</definition>
        <argsstring>(ksema,(0U),(10U))</argsstring>
        <name>K_SEM_DEFINE</name>
        <param>
          <type>ksema</type>
        </param>
        <param>
          <type>(0U)</type>
        </param>
        <param>
          <type>(10U)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="87" column="1" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="87" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a5fdc5fb7330e19795cc524bb2650a6f3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_DEFINE</definition>
        <argsstring>(tstack,(512+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref></type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="89" column="8" declfile="tests/kernel/semaphore/semaphore/src/main.c" declline="89" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1afd876198e2e866b89f691179a66d2c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_give_task</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_give_task</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="95" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a8cc3189a66f4a2231191ae0b37b5c555" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_reset_take_task</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_reset_take_task</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="100" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a7f4a048a708101c3c0c27a5e9d46edbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void isr_sem_give</definition>
        <argsstring>(const void *semaphore)</argsstring>
        <name>isr_sem_give</name>
        <param>
          <type>const void *</type>
          <declname>semaphore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="106" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a99e316807f2883117a72fab6193e64c7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tsema_thread_thread</definition>
        <argsstring>(struct k_sem *psem)</argsstring>
        <name>tsema_thread_thread</name>
        <param>
          <type>struct k_sem *</type>
          <declname>psem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: thread-thread sync via sema</para>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="111" column="13" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="111" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1ab34c42d693ae8abc588213fbd32fb5f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tsema_thread_isr</definition>
        <argsstring>(struct k_sem *psem)</argsstring>
        <name>tsema_thread_isr</name>
        <param>
          <type>struct k_sem *</type>
          <declname>psem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TESTPOINT: thread-isr sync via sema</para>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="125" column="13" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="125" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1abc5d8bc024da19063ff31f02d811417a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void isr_sem_take</definition>
        <argsstring>(const void *semaphore)</argsstring>
        <name>isr_sem_take</name>
        <param>
          <type>const void *</type>
          <declname>semaphore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="134" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="134" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1aa14d9803e9c9b160fe0c195be505d0e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_take_timeout_forever_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_take_timeout_forever_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="145" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="145" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a5149954b359bd8232f3688869c906a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_take_timeout_isr_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_take_timeout_isr_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="151" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a19ed87835082b8303055035555a8c658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_take_multiple_low_prio_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_take_multiple_low_prio_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="156" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="156" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1ac06d782fe9ee207d6fa6ab9ef1e84ea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_take_multiple_mid_prio_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_take_multiple_mid_prio_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="164" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="164" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a778acd98817c2bca3325df496a87d283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_take_multiple_high_prio_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_take_multiple_high_prio_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="172" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="172" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a34760d4dfaca638c8decbd18be83622a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_queue_mutual_exclusion1</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_queue_mutual_exclusion1</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="182" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="182" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a6d5a2f868743798ce1d7ceef421e878f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_queue_mutual_exclusion2</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_queue_mutual_exclusion2</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="200" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="200" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a867191f33b0e4cca34bc139d4c948153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_take_multiple_high_prio_long_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_take_multiple_high_prio_long_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="217" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="217" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a7c1489db7cb35ec3a87dc87dcf08866e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_multiple_threads_wait_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_multiple_threads_wait_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="810" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="810" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1ac63b7e143bf87a695064128f34f7031c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_multiple_threads_wait</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_multiple_threads_wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test multiple semaphore take and give with wait. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref>, <ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="825" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="825" bodyend="864"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a39364b31a9502a30a530d8ceaab44d06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_measure_timeouts</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_measure_timeouts</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test semaphore timeout period. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref>, <ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give()</ref>, <ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="871" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="871" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1aac0ac2a3776f3ca4d55dcae44dc715bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_measure_timeout_from_thread_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_measure_timeout_from_thread_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="914" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="914" bodyend="921"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1adf3910fe68404a61e4a37bceb88d9f08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_measure_timeout_from_thread</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_measure_timeout_from_thread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test timeout of semaphore from thread. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give()</ref>, <ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset()</ref>, <ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="929" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="929" bodyend="959"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a7e542b83a5262324042d7470d97e33c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_multiple_take_and_timeouts_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_multiple_take_and_timeouts_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="961" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="961" bodyend="982"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a18dfb6008a7bdbde17a328c46e89c031" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_multiple_take_and_timeouts</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_multiple_take_and_timeouts</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test multiple semaphore take with timeouts. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref>, <ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="989" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="989" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1ac8e1da5c761d0cc60f5208b73e83e158" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_multi_take_timeout_diff_sem_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_multi_take_timeout_diff_sem_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="1025" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="1025" bodyend="1050"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1abdfe6475cfd75b96841880eeb172791c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_multi_take_timeout_diff_sem</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_multi_take_timeout_diff_sem</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test sequence of multiple semaphore timeouts. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take()</ref>, <ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="1057" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="1057" bodyend="1102"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a265d9e82ce540a038ed27e5d8a2561d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_queue_mutual_exclusion</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_queue_mutual_exclusion</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test thread mutual exclusion by semaphore. </para>
        </briefdescription>
        <detaileddescription>
<para>Test is using to see how mutual exclusion is made by semaphore Made two threads, with two functions which use common variable. That variable is a critical section and can&apos;t be changed by two threads at the same time. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="1112" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="1112" bodyend="1131"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a9812e8cc341778c3d7901145514ec4f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void thread_sem_give_null</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>thread_sem_give_null</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="1134" column="13" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="1134" bodyend="1141"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1ad6612b0091939519437d008345905016" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void thread_sem_init_null</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>thread_sem_init_null</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="1171" column="13" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="1171" bodyend="1178"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a1123a3cd514314f6e486cf4117129209" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void thread_sem_take_null</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>thread_sem_take_null</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="1208" column="13" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="1208" bodyend="1215"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a33bf7a4d3d6b835ea5f1c224edc1ddcb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void thread_sem_reset_null</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>thread_sem_reset_null</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="1245" column="13" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="1245" bodyend="1252"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a497e464828f204e43badb7deccb56fca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void thread_sem_count_get_null</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>thread_sem_count_get_null</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="1282" column="13" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="1282" bodyend="1289"/>
      </memberdef>
      <memberdef kind="function" id="semaphore_2semaphore_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_main</definition>
        <argsstring>(void)</argsstring>
        <name>test_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>test case main entry </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/semaphore/semaphore/src/main.c" line="1319" column="6" bodyfile="tests/kernel/semaphore/semaphore/src/main.c" bodystart="1319" bodyend="1362"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016,<sp/>2020<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztest_8h" kindref="compound">ztest.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="irq__offload_8h" kindref="compound">irq_offload.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztest__error__hook_8h" kindref="compound">ztest_error_hook.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macro<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEM_INIT_VAL<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEM_MAX_VAL<sp/><sp/>(10U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREAD_TEST_PRIORITY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>sem_give_from_isr(sema)<sp/>irq_offload(isr_sem_give,<sp/>(const<sp/>void<sp/>*)sema)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>sem_take_from_isr(sema)<sp/>irq_offload(isr_sem_take,<sp/>(const<sp/>void<sp/>*)sema)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEM_TIMEOUT<sp/>(K_MSEC(100))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STACK_SIZE<sp/>(512<sp/>+<sp/>CONFIG_TEST_EXTRA_STACKSIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_THREADS_WAITING<sp/>(5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEC2MS(s)<sp/>((s)<sp/>*<sp/>1000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QSEC2MS(s)<sp/>((s)<sp/>*<sp/>250)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>expect_k_sem_take(sem,<sp/>timeout,<sp/>exp,<sp/>str)<sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>_act<sp/>=<sp/>k_sem_take((sem),<sp/>(timeout));<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>_exp<sp/>=<sp/>(exp);<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zassert_equal(_act,<sp/>_exp,<sp/>(str),<sp/>_act,<sp/>_exp);<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>expect_k_sem_init(sem,<sp/>init,<sp/>max,<sp/>exp,<sp/>str)<sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>_act<sp/>=<sp/>k_sem_init((sem),<sp/>(init),<sp/>(max));<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>_exp<sp/>=<sp/>(exp);<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zassert_equal(_act,<sp/>_exp,<sp/>(str),<sp/>_act,<sp/>_exp);<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>expect_k_sem_count_get(sem,<sp/>exp,<sp/>str)<sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>int<sp/>_act<sp/>=<sp/>k_sem_count_get(sem);<sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>int<sp/>_exp<sp/>=<sp/>(exp);<sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zassert_equal(_act,<sp/>_exp,<sp/>(str),<sp/>_act,<sp/>_exp);<sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>expect_k_sem_take_nomsg(sem,<sp/>timeout,<sp/>exp)<sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_k_sem_take((sem),<sp/>(timeout),<sp/>(exp),<sp/>&quot;k_sem_take<sp/>incorrect<sp/>return<sp/>value:<sp/>%d<sp/>!=<sp/>%d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>expect_k_sem_init_nomsg(sem,<sp/>init,<sp/>max,<sp/>exp)<sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_k_sem_init((sem),<sp/>(init),<sp/>(max),<sp/>(exp),<sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;k_sem_init<sp/>incorrect<sp/>return<sp/>value:<sp/>%d<sp/>!=<sp/>%d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>expect_k_sem_count_get_nomsg(sem,<sp/>exp)<sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_k_sem_count_get((sem),<sp/>(exp),<sp/>&quot;k_sem_count_get<sp/>incorrect<sp/>return<sp/>value:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8239ac04699cb1db802c0a3a2350bb3c" kindref="member">test_sem_give_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1ab22b6531e77e3dd64b03054dfddb8d4c" kindref="member">test_sem_init_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1ac9f16c45c644d3528dff465aac973578" kindref="member">test_sem_take_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1af103f0701fa3fa8176609f70235e04db" kindref="member">test_sem_reset_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aa1fc945da5111a413d358a70f83557be" kindref="member">test_sem_count_get_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>global<sp/>variable<sp/>for<sp/>mutual<sp/>exclusion<sp/>test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1acb8b644db1c9c3eb555489bc39c051ab" kindref="member">critical_var</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="structtimeout__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeout__info" kindref="compound">timeout_info</ref><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structtimeout__info_1a6acda28d2ad3c3b62fbdcf1fa767eeca" kindref="member">timeout</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/>*<ref refid="structtimeout__info_1a57da992521d7fbf75dc8e536a5ef0dbd" kindref="member">sema</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Kobject<sp/>declaration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="mem__protect_2obj__validation_2src_2main_8c_1acccdee2c9edbab556b941bd865918c2a" kindref="member">K_SEM_DEFINE</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="mem__protect_2obj__validation_2src_2main_8c_1acccdee2c9edbab556b941bd865918c2a" kindref="member">K_SEM_DEFINE</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="mem__protect_2obj__validation_2src_2main_8c_1acccdee2c9edbab556b941bd865918c2a" kindref="member">K_SEM_DEFINE</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="mem__protect_2obj__validation_2src_2main_8c_1acccdee2c9edbab556b941bd865918c2a" kindref="member">K_SEM_DEFINE</ref>(high_prio_long_sem,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="mem__protect_2obj__validation_2src_2main_8c_1acccdee2c9edbab556b941bd865918c2a" kindref="member">K_SEM_DEFINE</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="mem__protect_2obj__validation_2src_2main_8c_1acccdee2c9edbab556b941bd865918c2a" kindref="member">K_SEM_DEFINE</ref>(multiple_thread_sem,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="condvar_2condvar__api_2src_2main_8c_1a9bda3e00bf96550334eadf74c9af316b" kindref="member">K_THREAD_STACK_DEFINE</ref>(<ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><ref refid="condvar_2condvar__api_2src_2main_8c_1a9bda3e00bf96550334eadf74c9af316b" kindref="member">K_THREAD_STACK_DEFINE</ref>(stack_2,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="condvar_2condvar__api_2src_2main_8c_1a9bda3e00bf96550334eadf74c9af316b" kindref="member">K_THREAD_STACK_DEFINE</ref>(stack_3,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="condvar_2condvar__api_2src_2main_8c_1a9bda3e00bf96550334eadf74c9af316b" kindref="member">K_THREAD_STACK_DEFINE</ref>(stack_4,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="condvar_2condvar__api_2src_2main_8c_1aab1dff2223c027ea2507228e7e040641" kindref="member">K_THREAD_STACK_ARRAY_DEFINE</ref>(multiple_stack,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="mem__protect_2userspace_2src_2main_8c_1a91edfc192fb825264b096556ac1daa36" kindref="member">K_PIPE_DEFINE</ref>(timeout_info_pipe,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtimeout__info" kindref="compound">timeout_info</ref>)<sp/>*<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/>sem_tid_1,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1adbba1dc3054ec90bd75f0794fce7005a" kindref="member">sem_tid_2</ref>,<sp/>sem_tid_3,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aa42ced64f54bb6230d0470ae1f37eb61" kindref="member">sem_tid_4</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1afbc137eb1a51f5df48f5fe7ec567c38e" kindref="member">multiple_tid</ref>[<ref refid="semaphore_2semaphore_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><ref refid="mem__protect_2obj__validation_2src_2main_8c_1acccdee2c9edbab556b941bd865918c2a" kindref="member">K_SEM_DEFINE</ref>(ksema,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/>sema,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1afbcf43d1a3208ce10a82130221cb3117" kindref="member">mut_sem</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a9bda3e00bf96550334eadf74c9af316b" kindref="member">K_THREAD_STACK_DEFINE</ref>(<ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="msgq_2msgq__api_2src_2main_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Helper<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1afd876198e2e866b89f691179a66d2c6c" kindref="member">sem_give_task</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_sem<sp/>*)p1);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8cc3189a66f4a2231191ae0b37b5c555" kindref="member">sem_reset_take_task</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_sem<sp/>*)p1);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_sem<sp/>*)p1,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a7f4a048a708101c3c0c27a5e9d46edbc" kindref="member">isr_sem_give</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*semaphore)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_sem<sp/>*)semaphore);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a99e316807f2883117a72fab6193e64c7" kindref="member">tsema_thread_thread</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_sem<sp/>*psem)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="msgq_2msgq__api_2src_2main_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1afd876198e2e866b89f691179a66d2c6c" kindref="member">sem_give_task</ref>,<sp/>psem,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(0),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(psem,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*clean<sp/>the<sp/>spawn<sp/>thread<sp/>avoid<sp/>side<sp/>effect<sp/>in<sp/>next<sp/>TC*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1ab34c42d693ae8abc588213fbd32fb5f6" kindref="member">tsema_thread_isr</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_sem<sp/>*psem)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="irq__offload_8h_1a429859dd7ac3d88a4b7ae858835847ce" kindref="member">irq_offload</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a7f4a048a708101c3c0c27a5e9d46edbc" kindref="member">isr_sem_give</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)psem);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(psem,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1abc5d8bc024da19063ff31f02d811417a" kindref="member">isr_sem_take</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*semaphore)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2stackprot_2src_2main_8c_1a32d6d77f170c7ee130ad8d8c32f928e1" kindref="member">ret</ref><sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_sem<sp/>*)semaphore,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mem__protect_2stackprot_2src_2main_8c_1a32d6d77f170c7ee130ad8d8c32f928e1" kindref="member">ret</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="mem__protect_2stackprot_2src_2main_8c_1a32d6d77f170c7ee130ad8d8c32f928e1" kindref="member">ret</ref><sp/>!=<sp/>-<ref refid="group__system__errno_1ga8368025077a0385849d6817b2007c095" kindref="member">EBUSY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;incorrect<sp/>k_sem_take<sp/>return:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="mem__protect_2stackprot_2src_2main_8c_1a32d6d77f170c7ee130ad8d8c32f928e1" kindref="member">ret</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1aa14d9803e9c9b160fe0c195be505d0e7" kindref="member">sem_take_timeout_forever_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(100));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5149954b359bd8232f3688869c906a05" kindref="member">sem_take_timeout_isr_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6a15a28596c45dcbffd74d5a4e21a7fa" kindref="member">sem_give_from_isr</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a19ed87835082b8303055035555a8c658" kindref="member">sem_take_multiple_low_prio_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;multiple_thread_sem,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1ac06d782fe9ee207d6fa6ab9ef1e84ea1" kindref="member">sem_take_multiple_mid_prio_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;multiple_thread_sem,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a778acd98817c2bca3325df496a87d283" kindref="member">sem_take_multiple_high_prio_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;multiple_thread_sem,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>First<sp/>function<sp/>for<sp/>mutual<sp/>exclusion<sp/>test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a34760d4dfaca638c8decbd18be83622a" kindref="member">sem_queue_mutual_exclusion1</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="semaphore_2semaphore_2src_2main_8c_1afbcf43d1a3208ce10a82130221cb3117" kindref="member">mut_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>that<sp/>function<sp/>critical<sp/>section<sp/>makes<sp/>critical<sp/>var<sp/>+1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1acb8b644db1c9c3eb555489bc39c051ab" kindref="member">critical_var</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>common<sp/>value<sp/>was<sp/>not<sp/>changed<sp/>by<sp/>another<sp/>thread,</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>when<sp/>semaphore<sp/>is<sp/>taken<sp/>by<sp/>current<sp/>thread,<sp/>and<sp/>no<sp/>other</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>thread<sp/>can<sp/>enter<sp/>the<sp/>critical<sp/>section</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1acb8b644db1c9c3eb555489bc39c051ab" kindref="member">critical_var</ref><sp/>==<sp/>1,<sp/>NULL);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="semaphore_2semaphore_2src_2main_8c_1afbcf43d1a3208ce10a82130221cb3117" kindref="member">mut_sem</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Second<sp/>function<sp/>for<sp/>mutual<sp/>exclusion<sp/>test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6d5a2f868743798ce1d7ceef421e878f" kindref="member">sem_queue_mutual_exclusion2</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="semaphore_2semaphore_2src_2main_8c_1afbcf43d1a3208ce10a82130221cb3117" kindref="member">mut_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>that<sp/>function<sp/>critical<sp/>section<sp/>makes<sp/>critical<sp/>var<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1acb8b644db1c9c3eb555489bc39c051ab" kindref="member">critical_var</ref><sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>common<sp/>value<sp/>was<sp/>not<sp/>changed<sp/>by<sp/>another<sp/>thread,</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>when<sp/>semaphore<sp/>is<sp/>taken<sp/>by<sp/>current<sp/>thread,<sp/>and<sp/>no<sp/>other</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>thread<sp/>can<sp/>enter<sp/>the<sp/>critical<sp/>section</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1acb8b644db1c9c3eb555489bc39c051ab" kindref="member">critical_var</ref><sp/>==<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="semaphore_2semaphore_2src_2main_8c_1afbcf43d1a3208ce10a82130221cb3117" kindref="member">mut_sem</ref>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a867191f33b0e4cca34bc139d4c948153" kindref="member">sem_take_multiple_high_prio_long_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;high_prio_long_sem,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;multiple_thread_sem,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;high_prio_long_sem);</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a0b569de6c3ca9ef6995ae9259585f0fd" kindref="member">test_k_sem_define</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>verify<sp/>the<sp/>semaphore<sp/>count<sp/>equals<sp/>to<sp/>initialized<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;semaphore<sp/>initialized<sp/>failed<sp/>at<sp/>compile<sp/>time&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-<sp/>got<sp/>%u,<sp/>expected<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a90e0a8a183e6b9d8e224194d2262ca06" kindref="member">test_sem_thread2thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1af8e99cd4ed50c287c7b47843f596a9f8" kindref="member">expect_k_sem_init_nomsg</ref>(&amp;sema,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a99e316807f2883117a72fab6193e64c7" kindref="member">tsema_thread_thread</ref>(&amp;sema);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a99e316807f2883117a72fab6193e64c7" kindref="member">tsema_thread_thread</ref>(&amp;ksema);</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1ab04a6ee61b2bdf9191a207dcdaf7eb1a" kindref="member">test_sem_thread2isr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1af8e99cd4ed50c287c7b47843f596a9f8" kindref="member">expect_k_sem_init_nomsg</ref>(&amp;sema,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1ab34c42d693ae8abc588213fbd32fb5f6" kindref="member">tsema_thread_isr</ref>(&amp;sema);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1ab34c42d693ae8abc588213fbd32fb5f6" kindref="member">tsema_thread_isr</ref>(&amp;ksema);</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a90de1a3fcf50b4da020b0e09bb2b74a3" kindref="member">test_k_sem_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>a<sp/>semaphore<sp/>with<sp/>valid<sp/>count<sp/>and<sp/>max<sp/>limit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1af8e99cd4ed50c287c7b47843f596a9f8" kindref="member">expect_k_sem_init_nomsg</ref>(&amp;sema,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;sema);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>a<sp/>semaphore<sp/>with<sp/>invalid<sp/>max<sp/>limit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1af8e99cd4ed50c287c7b47843f596a9f8" kindref="member">expect_k_sem_init_nomsg</ref>(&amp;sema,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/>0,<sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>a<sp/>semaphore<sp/>with<sp/>invalid<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1af8e99cd4ed50c287c7b47843f596a9f8" kindref="member">expect_k_sem_init_nomsg</ref>(&amp;sema,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref><sp/>+<sp/>1,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>,<sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1abd0261e8b9f2b427c738fffcfaf67eee" kindref="member">test_sem_reset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1af8e99cd4ed50c287c7b47843f596a9f8" kindref="member">expect_k_sem_init_nomsg</ref>(&amp;sema,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;sema,<sp/>0);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;sema);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;sema,<sp/>1);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;sema);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;sema,<sp/>0);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;sema,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>,<sp/>-<ref refid="group__system__errno_1ga8368025077a0385849d6817b2007c095" kindref="member">EBUSY</ref>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;sema,<sp/>0);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;sema,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aed2079386fc07f630156be1bdd9db2a0" kindref="member">SEM_TIMEOUT</ref>,<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;sema,<sp/>0);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;sema);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;sema,<sp/>1);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;sema,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;sema,<sp/>0);</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a9a806fa822d15627ba92ad163d4459e1" kindref="member">test_sem_reset_waiting</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>ret_value;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>a<sp/>new<sp/>thread.<sp/>It<sp/>will<sp/>reset<sp/>the<sp/>semaphore<sp/>in<sp/>1ms</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>then<sp/>wait<sp/>for<sp/>us.</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;sem_tid_1,<sp/><ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8cc3189a66f4a2231191ae0b37b5c555" kindref="member">sem_reset_take_task</ref>,<sp/>&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(0),<sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(1));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Take<sp/>semaphore<sp/>and<sp/>wait<sp/>for<sp/>the<sp/>abort.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>,<sp/></highlight><highlight class="stringliteral">&quot;k_sem_take<sp/>not<sp/>aborted:<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ensure<sp/>the<sp/>semaphore<sp/>is<sp/>still<sp/>functional<sp/>after.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1ad10ccd6017b12fe417daeca31600c4d8" kindref="member">test_sem_count_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1af8e99cd4ed50c287c7b47843f596a9f8" kindref="member">expect_k_sem_init_nomsg</ref>(&amp;sema,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;sema,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;sema);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;sema,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;sema,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;sema,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref><sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;sema);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;sema);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;sema,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a228a36946d0244decae324234f229aaa" kindref="member">test_sem_give_from_isr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Signal<sp/>the<sp/>semaphore<sp/>several<sp/>times<sp/>from<sp/>an<sp/>ISR.<sp/><sp/>After<sp/>each<sp/>signal,</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>check<sp/>the<sp/>signal<sp/>count.</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6a15a28596c45dcbffd74d5a4e21a7fa" kindref="member">sem_give_from_isr</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1646510be803398ae3046c5da463d634" kindref="member">test_sem_give_from_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="419"><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Signal<sp/>the<sp/>semaphore<sp/>several<sp/>times<sp/>from<sp/>a<sp/>task.<sp/><sp/>After<sp/>each<sp/>signal,</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>check<sp/>the<sp/>signal<sp/>count.</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1aa333e4cfd24bbf545462c51e215237ce" kindref="member">test_sem_take_no_wait</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Test<sp/>the<sp/>semaphore<sp/>without<sp/>wait.<sp/><sp/>Check<sp/>the<sp/>signal<sp/>count<sp/>after<sp/>each</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>attempt<sp/>(it<sp/>should<sp/>be<sp/>decrementing<sp/>by<sp/>1<sp/>each<sp/>time).</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>4;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1aed85a39ac76cf3f9c7a85e9622409912" kindref="member">test_sem_take_no_wait_fails</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Test<sp/>the<sp/>semaphore<sp/>without<sp/>wait.<sp/><sp/>Check<sp/>the<sp/>signal<sp/>count<sp/>after<sp/>each</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>attempt<sp/>(it<sp/>should<sp/>be<sp/>always<sp/>zero).</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>4;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>,<sp/>-<ref refid="group__system__errno_1ga8368025077a0385849d6817b2007c095" kindref="member">EBUSY</ref>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1ac3ac78bdf5fd008590f2997e15f0fafb" kindref="member">test_sem_take_timeout_fails</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Test<sp/>the<sp/>semaphore<sp/>with<sp/>timeout<sp/>without<sp/>a<sp/>k_sem_give.</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>take<sp/>an<sp/>unavailable<sp/>semaphore<sp/>and<sp/>wait<sp/>it<sp/>until<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>4;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aed2079386fc07f630156be1bdd9db2a0" kindref="member">SEM_TIMEOUT</ref>,<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a4f32ec757c4bf9a27aee0bb354d2353b" kindref="member">test_sem_take_timeout</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Signal<sp/>the<sp/>semaphore<sp/>upon<sp/>which<sp/>the<sp/>other<sp/>thread<sp/>is<sp/>waiting.</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>thread<sp/>(which<sp/>is<sp/>at<sp/>a<sp/>lower<sp/>priority)<sp/>will<sp/>cause<sp/>simple_sem</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>be<sp/>signalled,<sp/>thus<sp/>waking<sp/>up<sp/>this<sp/>task.</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>a<sp/>new<sp/>thread,<sp/>it<sp/>will<sp/>give<sp/>semaphore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;sem_tid_1,<sp/><ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1afd876198e2e866b89f691179a66d2c6c" kindref="member">sem_give_task</ref>,<sp/>&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(0),<sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga88031bd9fcfcd4305bae4029a4d8416f" kindref="member">k_thread_start</ref>(&amp;sem_tid_1);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Take<sp/>semaphore<sp/>and<sp/>wait<sp/>it<sp/>given<sp/>by<sp/>other<sp/>threads</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>specified<sp/>timeout</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aed2079386fc07f630156be1bdd9db2a0" kindref="member">SEM_TIMEOUT</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(&amp;sem_tid_1,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1adc45dac316741c4281efcacdf12ea52e" kindref="member">test_sem_take_timeout_forever</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="546"><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Signal<sp/>the<sp/>semaphore<sp/>upon<sp/>which<sp/>the<sp/>another<sp/>thread<sp/>is<sp/>waiting.<sp/><sp/>The</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>thread<sp/>(which<sp/>is<sp/>at<sp/>a<sp/>lower<sp/>priority)<sp/>will<sp/>cause<sp/>simple_sem</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>be<sp/>signalled,<sp/>thus<sp/>waking<sp/>this<sp/>task.</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;sem_tid_1,<sp/><ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1aa14d9803e9c9b160fe0c195be505d0e7" kindref="member">sem_take_timeout_forever_helper</ref>,<sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(0),<sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Take<sp/>semaphore<sp/>and<sp/>wait<sp/>it<sp/>given<sp/>by</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>other<sp/>threads<sp/>forever<sp/>until<sp/>it&apos;s<sp/>available</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(&amp;sem_tid_1,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1ab307c87cb125b3eae98e4842886151d0" kindref="member">test_sem_take_timeout_isr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Signal<sp/>the<sp/>semaphore<sp/>upon<sp/>which<sp/>the<sp/>another<sp/>thread<sp/>is<sp/>waiting.<sp/><sp/>The</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>thread<sp/>(which<sp/>is<sp/>at<sp/>a<sp/>lower<sp/>priority)<sp/>will<sp/>cause<sp/>simple_sem</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>be<sp/>signalled,<sp/>thus<sp/>waking<sp/>this<sp/>task.</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;sem_tid_1,<sp/><ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5149954b359bd8232f3688869c906a05" kindref="member">sem_take_timeout_isr_helper</ref>,<sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(0),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aed2079386fc07f630156be1bdd9db2a0" kindref="member">SEM_TIMEOUT</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(&amp;sem_tid_1,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1abc3e0aef2feca4251f8220aec4c4196b" kindref="member">test_sem_take_multiple</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;multiple_thread_sem);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;multiple_thread_sem,<sp/>0);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Signal<sp/>the<sp/>semaphore<sp/>upon<sp/>which<sp/>the<sp/>another<sp/>thread<sp/>is<sp/>waiting.</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>thread<sp/>(which<sp/>is<sp/>at<sp/>a<sp/>lower<sp/>priority)<sp/>will<sp/>cause<sp/>simple_sem</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>be<sp/>signalled,<sp/>thus<sp/>waking<sp/>this<sp/>task.</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;sem_tid_1,<sp/><ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a19ed87835082b8303055035555a8c658" kindref="member">sem_take_multiple_low_prio_helper</ref>,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(3),<sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1adbba1dc3054ec90bd75f0794fce7005a" kindref="member">sem_tid_2</ref>,<sp/>stack_2,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1ac06d782fe9ee207d6fa6ab9ef1e84ea1" kindref="member">sem_take_multiple_mid_prio_helper</ref>,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(2),<sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;sem_tid_3,<sp/>stack_3,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a867191f33b0e4cca34bc139d4c948153" kindref="member">sem_take_multiple_high_prio_long_helper</ref>,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(1),<sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>another<sp/>high<sp/>priority<sp/>thread,<sp/>the<sp/>same<sp/>priority<sp/>with<sp/>sem_tid_3</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>sem_tid_3<sp/>and<sp/>sem_tid_4<sp/>are<sp/>the<sp/>same<sp/>highest<sp/>priority,</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>the<sp/>waiting<sp/>time<sp/>of<sp/>sem_tid_3<sp/>is<sp/>longer<sp/>than<sp/>sem_tid_4.</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>some<sp/>threads<sp/>are<sp/>the<sp/>same<sp/>priority,<sp/>the<sp/>sem<sp/>given<sp/>operation</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>should<sp/>be<sp/>decided<sp/>according<sp/>to<sp/>waiting<sp/>time.</highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>That<sp/>thread<sp/>is<sp/>necessary<sp/>to<sp/>test<sp/>if<sp/>a<sp/>sem<sp/>is<sp/>available,</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>it<sp/>should<sp/>be<sp/>given<sp/>to<sp/>the<sp/>highest<sp/>priority<sp/>and<sp/>longest<sp/>waiting<sp/>thread</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="semaphore_2semaphore_2src_2main_8c_1aa42ced64f54bb6230d0470ae1f37eb61" kindref="member">sem_tid_4</ref>,<sp/>stack_4,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a778acd98817c2bca3325df496a87d283" kindref="member">sem_take_multiple_high_prio_helper</ref>,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(1),<sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>time<sp/>for<sp/>those<sp/>4<sp/>threads<sp/>to<sp/>complete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(20));</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Let<sp/>these<sp/>threads<sp/>proceed<sp/>to<sp/>take<sp/>the<sp/>multiple_sem</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>make<sp/>thread<sp/>1<sp/>to<sp/>3<sp/>waiting<sp/>on<sp/>multiple_thread_sem</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;high_prio_long_sem);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Delay<sp/>100ms<sp/>to<sp/>make<sp/>sem_tid_4<sp/>waiting<sp/>on<sp/>multiple_thread_sem,</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>then<sp/>waiting<sp/>time<sp/>of<sp/>sem_tid_4<sp/>is<sp/>shorter<sp/>than<sp/>sem_tid_3</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(100));</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(20));</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>the<sp/>high<sp/>prio<sp/>and<sp/>long<sp/>waiting<sp/>thread<sp/>sem_tid_3<sp/>to<sp/>run<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;multiple_thread_sem);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(200));</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>which<sp/>threads<sp/>completed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;high_prio_long_sem,<sp/>1,</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;High<sp/>priority<sp/>and<sp/>long<sp/>waiting<sp/>thread<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;don&apos;t<sp/>get<sp/>the<sp/>sem:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>,<sp/>0U,</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;High<sp/>priority<sp/>thread<sp/>shouldn&apos;t<sp/>get<sp/>the<sp/>sem:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>,<sp/>0U,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Medium<sp/>priority<sp/>threads<sp/>shouldn&apos;t<sp/>have<sp/>executed:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>,<sp/>0U,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Low<sp/>priority<sp/>threads<sp/>shouldn&apos;t<sp/>have<sp/>executed:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>the<sp/>high<sp/>prio<sp/>thread<sp/>sem_tid_4<sp/>to<sp/>run<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;multiple_thread_sem);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(200));</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>which<sp/>threads<sp/>completed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;high_prio_long_sem,<sp/>1U,</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;High<sp/>priority<sp/>and<sp/>long<sp/>waiting<sp/>thread<sp/>executed<sp/>again:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>,<sp/>1U,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Higher<sp/>priority<sp/>thread<sp/>did<sp/>not<sp/>get<sp/>the<sp/>sem:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>,<sp/>0U,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Medium<sp/>priority<sp/>thread<sp/>shouldn&apos;t<sp/>get<sp/>the<sp/>sem:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>,<sp/>0U,</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Low<sp/>priority<sp/>thread<sp/>shouldn&apos;t<sp/>get<sp/>the<sp/>sem:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>the<sp/>mid<sp/>prio<sp/>thread<sp/>sem_tid_2<sp/>to<sp/>run<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;multiple_thread_sem);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(200));</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>which<sp/>threads<sp/>completed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;high_prio_long_sem,<sp/>1U,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;High<sp/>priority<sp/>and<sp/>long<sp/>waiting<sp/>thread<sp/>executed<sp/>again:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>,<sp/>1U,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;High<sp/>priority<sp/>thread<sp/>executed<sp/>again:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>,<sp/>1U,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Medium<sp/>priority<sp/>thread<sp/>did<sp/>not<sp/>get<sp/>the<sp/>sem:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>,<sp/>0U,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Low<sp/>priority<sp/>thread<sp/>did<sp/>not<sp/>get<sp/>the<sp/>sem:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>the<sp/>low<sp/>prio<sp/>thread(thread_1)<sp/>to<sp/>run<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;multiple_thread_sem);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(200));</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>thread<sp/>completed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;high_prio_long_sem,<sp/>1U,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;High<sp/>priority<sp/>and<sp/>long<sp/>waiting<sp/>thread<sp/>executed<sp/>again:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>,<sp/>1U,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;High<sp/>priority<sp/>thread<sp/>executed<sp/>again:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>,<sp/>1U,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Mid<sp/>priority<sp/>thread<sp/>executed<sp/>again:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>,<sp/>1U,</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Low<sp/>priority<sp/>thread<sp/>did<sp/>not<sp/>get<sp/>the<sp/>sem:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a23c5ffa4dc2db4c19421e8835ca4b5c6" kindref="member">test_k_sem_correct_count_limit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>an<sp/>initialized<sp/>semaphore&apos;s<sp/>count<sp/>to<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8667b775cd1d9e1c9b5788db00edb5de" kindref="member">expect_k_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>0U,<sp/></highlight><highlight class="stringliteral">&quot;k_sem_reset<sp/>failed:<sp/>%u<sp/>!=<sp/>%u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Give<sp/>the<sp/>semaphore<sp/>by<sp/>a<sp/>thread<sp/>and<sp/>verify<sp/>the<sp/>semaphore&apos;s</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>count<sp/>is<sp/>as<sp/>expected</highlight></codeline>
<codeline lineno="749"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>the<sp/>max<sp/>count<sp/>a<sp/>semaphore<sp/>can<sp/>reach</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>continue<sp/>to<sp/>run<sp/>k_sem_give,</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>count<sp/>of<sp/>simple_sem<sp/>will<sp/>not<sp/>increase<sp/>anymore</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Take<sp/>the<sp/>semaphore<sp/>by<sp/>a<sp/>thread<sp/>and<sp/>verify<sp/>the<sp/>semaphore&apos;s</highlight></codeline>
<codeline lineno="765"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>count<sp/>is<sp/>as<sp/>expected</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref><sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>the<sp/>max<sp/>times<sp/>a<sp/>semaphore<sp/>can<sp/>be<sp/>taken</highlight></codeline>
<codeline lineno="773"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>continue<sp/>to<sp/>run<sp/>k_sem_take,<sp/>simple_sem<sp/>can<sp/>not<sp/>be<sp/>taken<sp/>and</highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>it&apos;s<sp/>count<sp/>will<sp/>be<sp/>zero</highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>,<sp/>-<ref refid="group__system__errno_1ga8368025077a0385849d6817b2007c095" kindref="member">EBUSY</ref>);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>0U);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a7a0d165476689da2cba46564c8244e79" kindref="member">test_sem_give_take_from_isr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>0U);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>give<sp/>semaphore<sp/>from<sp/>an<sp/>isr<sp/>and<sp/>do<sp/>a<sp/>check<sp/>for<sp/>the<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6a15a28596c45dcbffd74d5a4e21a7fa" kindref="member">sem_give_from_isr</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>take<sp/>semaphore<sp/>from<sp/>an<sp/>isr<sp/>and<sp/>do<sp/>a<sp/>check<sp/>for<sp/>the<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>;<sp/>i<sp/>&gt;<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a4c2d75ddf7fbd37f6274eabb084d53ec" kindref="member">sem_take_from_isr</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>i<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a7c1489db7cb35ec3a87dc87dcf08866e" kindref="member">sem_multiple_threads_wait_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>blocked<sp/>until<sp/>the<sp/>test<sp/>thread<sp/>gives<sp/>the<sp/>semaphore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;multiple_thread_sem,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>inform<sp/>the<sp/>test<sp/>thread<sp/>that<sp/>this<sp/>thread<sp/>has<sp/>got<sp/>multiple_thread_sem*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1ac63b7e143bf87a695064128f34f7031c" kindref="member">test_sem_multiple_threads_wait</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;multiple_thread_sem);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>a<sp/>wait<sp/>q<sp/>that<sp/>has<sp/>been<sp/>emptied<sp/>/<sp/>reset</highlight></codeline>
<codeline lineno="831"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>correctly<sp/>by<sp/>running<sp/>twice.</highlight></codeline>
<codeline lineno="832"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>repeat_count<sp/>=<sp/>0;<sp/>repeat_count<sp/>&lt;<sp/>2;<sp/>repeat_count++)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="condvar_2condvar__api_2src_2main_8c_1afbc137eb1a51f5df48f5fe7ec567c38e" kindref="member">multiple_tid</ref>[i],</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiple_stack[i],<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a7c1489db7cb35ec3a87dc87dcf08866e" kindref="member">sem_multiple_threads_wait_helper</ref>,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(1),</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>giving<sp/>time<sp/>for<sp/>the<sp/>other<sp/>threads<sp/>to<sp/>execute<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(500));</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>give<sp/>the<sp/>semaphores<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;multiple_thread_sem);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>giving<sp/>time<sp/>for<sp/>the<sp/>other<sp/>threads<sp/>to<sp/>execute<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(500));</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>if<sp/>all<sp/>the<sp/>threads<sp/>are<sp/>done.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8f02ff5bd19678b35db9cfced1166bc7" kindref="member">expect_k_sem_take</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Some<sp/>of<sp/>the<sp/>threads<sp/>did<sp/>not<sp/>get<sp/>multiple_thread_sem:<sp/>%d<sp/>!=<sp/>%d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>0U);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7f021133db255ae936581a4152ed12e3" kindref="member">expect_k_sem_count_get_nomsg</ref>(&amp;multiple_thread_sem,<sp/>0U);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a39364b31a9502a30a530d8ceaab44d06" kindref="member">test_sem_measure_timeouts</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="872"><highlight class="normal">{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref><sp/>start_ticks,<sp/>end_ticks,<sp/>diff_ticks;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>with<sp/>timeout<sp/>of<sp/>1<sp/>sec<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_ticks<sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>();</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(1),<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_ticks<sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>();</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_ticks<sp/>=<sp/>end_ticks<sp/>-<sp/>start_ticks;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>((diff_ticks<sp/>&gt;=<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aaa90a0dd577ebd375f7e0020b27b697a" kindref="member">SEC2MS</ref>(1)),</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;k_sem_take<sp/>returned<sp/>too<sp/>early:<sp/>%lld<sp/>&lt;<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_ticks,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aaa90a0dd577ebd375f7e0020b27b697a" kindref="member">SEC2MS</ref>(1));</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>subtest<sp/>could<sp/>fail<sp/>spuriously<sp/>if<sp/>we<sp/>happened<sp/>to<sp/>run<sp/>the<sp/>below<sp/>right<sp/>as</highlight></codeline>
<codeline lineno="891"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>tick<sp/>occurred.<sp/>Unfortunately,<sp/>we<sp/>cannot<sp/>actually<sp/>fix<sp/>this,<sp/>because<sp/>on<sp/>some</highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>emulated<sp/>platforms<sp/>time<sp/>does<sp/>not<sp/>advance<sp/>while<sp/>running<sp/>the<sp/>cpu,<sp/>so</highlight></codeline>
<codeline lineno="893"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>we<sp/>spin<sp/>and<sp/>wait<sp/>for<sp/>a<sp/>tick<sp/>boundary<sp/>we&apos;ll<sp/>spin<sp/>forever.</highlight></codeline>
<codeline lineno="894"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>hope<sp/>that<sp/>k_busy_wait<sp/>finishes<sp/>just<sp/>after<sp/>a<sp/>tick<sp/>boundary.</highlight></codeline>
<codeline lineno="895"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait</ref>(1);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_ticks<sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>();</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>,<sp/>-<ref refid="group__system__errno_1ga8368025077a0385849d6817b2007c095" kindref="member">EBUSY</ref>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_ticks<sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>();</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_ticks<sp/>=<sp/>end_ticks<sp/>-<sp/>start_ticks;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(end_ticks<sp/>&gt;=<sp/>start_ticks,</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;time<sp/>went<sp/>backwards:<sp/>%lld<sp/>-&gt;<sp/>%lld&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_ticks,<sp/>end_ticks);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(diff_ticks<sp/>&gt;=<sp/>0,</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;k_sem_take<sp/>took<sp/>too<sp/>long:<sp/>%lld<sp/>!=<sp/>0&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_ticks);</highlight></codeline>
<codeline lineno="912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aac0ac2a3776f3ca4d55dcae44dc715bf" kindref="member">sem_measure_timeout_from_thread_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="915"><highlight class="normal">{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>sync<sp/>the<sp/>2<sp/>threads<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>give<sp/>the<sp/>semaphore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;multiple_thread_sem);</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf3910fe68404a61e4a37bceb88d9f08" kindref="member">test_sem_measure_timeout_from_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref><sp/>start_ticks,<sp/>end_ticks,<sp/>diff_ticks;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;multiple_thread_sem);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>give<sp/>a<sp/>semaphore<sp/>from<sp/>a<sp/>thread<sp/>and<sp/>calculate<sp/>the<sp/>time<sp/>taken<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;sem_tid_1,<sp/><ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aac0ac2a3776f3ca4d55dcae44dc715bf" kindref="member">sem_measure_timeout_from_thread_helper</ref>,</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(3),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>sync<sp/>the<sp/>2<sp/>threads<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>with<sp/>timeout<sp/>of<sp/>1<sp/>sec<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_ticks<sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>();</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;multiple_thread_sem,<sp/><ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(1),<sp/>0);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_ticks<sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>();</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_ticks<sp/>=<sp/>end_ticks<sp/>-<sp/>start_ticks;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>((diff_ticks<sp/>&lt;<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aaa90a0dd577ebd375f7e0020b27b697a" kindref="member">SEC2MS</ref>(1)),</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;k_sem_take<sp/>took<sp/>too<sp/>long:<sp/>%d<sp/>&gt;=<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_ticks,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aaa90a0dd577ebd375f7e0020b27b697a" kindref="member">SEC2MS</ref>(1));</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal">}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7e542b83a5262324042d7470d97e33c6" kindref="member">sem_multiple_take_and_timeouts_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="962"><highlight class="normal">{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref><sp/>=<sp/><ref refid="group__sys-util_1ga6e5ec9c46d0140315a7c1d80d1cc3c38" kindref="member">POINTER_TO_INT</ref>(p1);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref><sp/>start_ticks,<sp/>end_ticks,<sp/>diff_ticks;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_ticks<sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>();</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>),<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_ticks<sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>();</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_ticks<sp/>=<sp/>end_ticks<sp/>-<sp/>start_ticks;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(diff_ticks<sp/>&gt;=<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;time<sp/>mismatch<sp/>-<sp/>expected<sp/>at<sp/>least<sp/>%d,<sp/>got<sp/>%lld&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,<sp/>diff_ticks);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__pipe__apis_1ga5cfd4b75485c7d69f8614030914ad132" kindref="member">k_pipe_put</ref>(&amp;timeout_info_pipe,<sp/>&amp;<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;bytes_written,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal">}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a18dfb6008a7bdbde17a328c46e89c031" kindref="member">test_sem_multiple_take_and_timeouts</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="990"><highlight class="normal">{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(CONFIG_KERNEL_COHERENCE))<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_read;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Multiple<sp/>threads<sp/>timeout<sp/>and<sp/>the<sp/>sequence<sp/>in<sp/>which<sp/>it<sp/>times<sp/>out</highlight></codeline>
<codeline lineno="1001"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>pushed<sp/>into<sp/>a<sp/>pipe<sp/>and<sp/>checked<sp/>later<sp/>on.</highlight></codeline>
<codeline lineno="1002"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="condvar_2condvar__api_2src_2main_8c_1afbc137eb1a51f5df48f5fe7ec567c38e" kindref="member">multiple_tid</ref>[i],</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiple_stack[i],<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a7e542b83a5262324042d7470d97e33c6" kindref="member">sem_multiple_take_and_timeouts_helper</ref>,</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1gae236ed18fe2ff18ab47c15d2e7eeb417" kindref="member">INT_TO_POINTER</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a43715f6819970ffa5670a41556822e1f" kindref="member">QSEC2MS</ref>(i<sp/>+<sp/>1)),<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(1),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__pipe__apis_1gada9aaf9a336d98a95441212f4223e9ef" kindref="member">k_pipe_get</ref>(&amp;timeout_info_pipe,<sp/>&amp;<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;bytes_read,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a43715f6819970ffa5670a41556822e1f" kindref="member">QSEC2MS</ref>(i<sp/>+<sp/>1),</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;timeout<sp/>did<sp/>not<sp/>occur<sp/>properly:<sp/>%d<sp/>!=<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a43715f6819970ffa5670a41556822e1f" kindref="member">QSEC2MS</ref>(i<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cleanup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(&amp;<ref refid="condvar_2condvar__api_2src_2main_8c_1afbc137eb1a51f5df48f5fe7ec567c38e" kindref="member">multiple_tid</ref>[i],<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1ac8e1da5c761d0cc60f5208b73e83e158" kindref="member">sem_multi_take_timeout_diff_sem_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref><sp/>=<sp/><ref refid="group__sys-util_1ga6e5ec9c46d0140315a7c1d80d1cc3c38" kindref="member">POINTER_TO_INT</ref>(p1);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/>*sema<sp/>=<sp/>p2;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref><sp/>start_ticks,<sp/>end_ticks,<sp/>diff_ticks;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeout__info" kindref="compound">timeout_info</ref><sp/>info<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structtimeout__info_1a6acda28d2ad3c3b62fbdcf1fa767eeca" kindref="member">timeout</ref><sp/>=<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sema<sp/>=<sp/><ref refid="structtimeout__info_1a57da992521d7fbf75dc8e536a5ef0dbd" kindref="member">sema</ref></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_ticks<sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>();</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1adf8604c925a2f500c8a4d75d8b35cf1a" kindref="member">expect_k_sem_take_nomsg</ref>(<ref refid="structtimeout__info_1a57da992521d7fbf75dc8e536a5ef0dbd" kindref="member">sema</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>),<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_ticks<sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>();</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_ticks<sp/>=<sp/>end_ticks<sp/>-<sp/>start_ticks;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(diff_ticks<sp/>&gt;=<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;time<sp/>mismatch<sp/>-<sp/>expected<sp/>at<sp/>least<sp/>%d,<sp/>got<sp/>%lld&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,<sp/>diff_ticks);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__pipe__apis_1ga5cfd4b75485c7d69f8614030914ad132" kindref="member">k_pipe_put</ref>(&amp;timeout_info_pipe,<sp/>&amp;info,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtimeout__info" kindref="compound">timeout_info</ref>),</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;bytes_written,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtimeout__info" kindref="compound">timeout_info</ref>),<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1abdfe6475cfd75b96841880eeb172791c" kindref="member">test_sem_multi_take_timeout_diff_sem</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1058"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(CONFIG_KERNEL_COHERENCE))<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_read;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeout__info" kindref="compound">timeout_info</ref><sp/>seq_info[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aaa90a0dd577ebd375f7e0020b27b697a" kindref="member">SEC2MS</ref>(2),<sp/>&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref><sp/>},</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aaa90a0dd577ebd375f7e0020b27b697a" kindref="member">SEC2MS</ref>(1),<sp/>&amp;multiple_thread_sem<sp/>},</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aaa90a0dd577ebd375f7e0020b27b697a" kindref="member">SEC2MS</ref>(3),<sp/>&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref><sp/>},</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aaa90a0dd577ebd375f7e0020b27b697a" kindref="member">SEC2MS</ref>(5),<sp/>&amp;multiple_thread_sem<sp/>},</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aaa90a0dd577ebd375f7e0020b27b697a" kindref="member">SEC2MS</ref>(4),<sp/>&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref><sp/>},</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeout__info" kindref="compound">timeout_info</ref><sp/>retrieved_info;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;multiple_thread_sem);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Multiple<sp/>threads<sp/>timeout<sp/>on<sp/>different<sp/>semaphores<sp/>and<sp/>the<sp/>sequence</highlight></codeline>
<codeline lineno="1078"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>which<sp/>it<sp/>times<sp/>out<sp/>is<sp/>pushed<sp/>into<sp/>a<sp/>pipe<sp/>and<sp/>checked<sp/>later<sp/>on.</highlight></codeline>
<codeline lineno="1079"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="condvar_2condvar__api_2src_2main_8c_1afbc137eb1a51f5df48f5fe7ec567c38e" kindref="member">multiple_tid</ref>[i],</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiple_stack[i],<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1ac8e1da5c761d0cc60f5208b73e83e158" kindref="member">sem_multi_take_timeout_diff_sem_helper</ref>,</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1gae236ed18fe2ff18ab47c15d2e7eeb417" kindref="member">INT_TO_POINTER</ref>(seq_info[i].<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>),</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seq_info[i].<ref refid="structtimeout__info_1a57da992521d7fbf75dc8e536a5ef0dbd" kindref="member">sema</ref>,<sp/>NULL,</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(1),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__pipe__apis_1gada9aaf9a336d98a95441212f4223e9ef" kindref="member">k_pipe_get</ref>(&amp;timeout_info_pipe,</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;retrieved_info,</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtimeout__info" kindref="compound">timeout_info</ref>),</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;bytes_read,</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtimeout__info" kindref="compound">timeout_info</ref>),</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(retrieved_info.timeout<sp/>==<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aaa90a0dd577ebd375f7e0020b27b697a" kindref="member">SEC2MS</ref>(i<sp/>+<sp/>1),</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;timeout<sp/>did<sp/>not<sp/>occur<sp/>properly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a265d9e82ce540a038ed27e5d8a2561d7" kindref="member">test_sem_queue_mutual_exclusion</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1acb8b644db1c9c3eb555489bc39c051ab" kindref="member">critical_var</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1af8e99cd4ed50c287c7b47843f596a9f8" kindref="member">expect_k_sem_init_nomsg</ref>(&amp;<ref refid="semaphore_2semaphore_2src_2main_8c_1afbcf43d1a3208ce10a82130221cb3117" kindref="member">mut_sem</ref>,<sp/>0,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;sem_tid_1,<sp/><ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a34760d4dfaca638c8decbd18be83622a" kindref="member">sem_queue_mutual_exclusion1</ref>,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1adbba1dc3054ec90bd75f0794fce7005a" kindref="member">sem_tid_2</ref>,<sp/>stack_2,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6d5a2f868743798ce1d7ceef421e878f" kindref="member">sem_queue_mutual_exclusion2</ref>,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(100));</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="semaphore_2semaphore_2src_2main_8c_1afbcf43d1a3208ce10a82130221cb3117" kindref="member">mut_sem</ref>);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a9812e8cc341778c3d7901145514ec4f7" kindref="member">thread_sem_give_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ztest_set_fault_valid(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(NULL);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>should<sp/>not<sp/>go<sp/>here*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ztest__assert_8h_1acd6eb423f54dce8544f7c3b1618c0374" kindref="member">ztest_test_fail</ref>();</highlight></codeline>
<codeline lineno="1141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8239ac04699cb1db802c0a3a2350bb3c" kindref="member">test_sem_give_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="msgq_2msgq__api_2src_2main_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="arch__interface_8h_1af1bd193a26c6e6a8658140185cae42e1" kindref="member">k_thread_entry_t</ref>)<ref refid="semaphore_2semaphore_2src_2main_8c_1a9812e8cc341778c3d7901145514ec4f7" kindref="member">thread_sem_give_null</ref>,</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a122fcce70e98e17966bab36f75ced5da" kindref="member">THREAD_TEST_PRIORITY</ref>),</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a8239ac04699cb1db802c0a3a2350bb3c" kindref="member">test_sem_give_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>those<sp/>platform<sp/>not<sp/>support<sp/>userspace,<sp/>we<sp/>skip<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1ad6612b0091939519437d008345905016" kindref="member">thread_sem_init_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ztest_set_fault_valid(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(NULL,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>should<sp/>not<sp/>go<sp/>here*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ztest__assert_8h_1acd6eb423f54dce8544f7c3b1618c0374" kindref="member">ztest_test_fail</ref>();</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1ab22b6531e77e3dd64b03054dfddb8d4c" kindref="member">test_sem_init_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="msgq_2msgq__api_2src_2main_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="arch__interface_8h_1af1bd193a26c6e6a8658140185cae42e1" kindref="member">k_thread_entry_t</ref>)<ref refid="semaphore_2semaphore_2src_2main_8c_1ad6612b0091939519437d008345905016" kindref="member">thread_sem_init_null</ref>,</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a122fcce70e98e17966bab36f75ced5da" kindref="member">THREAD_TEST_PRIORITY</ref>),</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1ab22b6531e77e3dd64b03054dfddb8d4c" kindref="member">test_sem_init_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>those<sp/>platform<sp/>not<sp/>support<sp/>userspace,<sp/>we<sp/>skip<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a1123a3cd514314f6e486cf4117129209" kindref="member">thread_sem_take_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ztest_set_fault_valid(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(NULL,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(1));</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>should<sp/>not<sp/>go<sp/>here*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ztest__assert_8h_1acd6eb423f54dce8544f7c3b1618c0374" kindref="member">ztest_test_fail</ref>();</highlight></codeline>
<codeline lineno="1215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1ac9f16c45c644d3528dff465aac973578" kindref="member">test_sem_take_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="msgq_2msgq__api_2src_2main_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="arch__interface_8h_1af1bd193a26c6e6a8658140185cae42e1" kindref="member">k_thread_entry_t</ref>)<ref refid="semaphore_2semaphore_2src_2main_8c_1a1123a3cd514314f6e486cf4117129209" kindref="member">thread_sem_take_null</ref>,</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a122fcce70e98e17966bab36f75ced5da" kindref="member">THREAD_TEST_PRIORITY</ref>),</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1ac9f16c45c644d3528dff465aac973578" kindref="member">test_sem_take_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>those<sp/>platform<sp/>not<sp/>support<sp/>userspace,<sp/>we<sp/>skip<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a33bf7a4d3d6b835ea5f1c224edc1ddcb" kindref="member">thread_sem_reset_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="1246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ztest_set_fault_valid(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(NULL);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>should<sp/>not<sp/>go<sp/>here*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ztest__assert_8h_1acd6eb423f54dce8544f7c3b1618c0374" kindref="member">ztest_test_fail</ref>();</highlight></codeline>
<codeline lineno="1252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1af103f0701fa3fa8176609f70235e04db" kindref="member">test_sem_reset_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="msgq_2msgq__api_2src_2main_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="arch__interface_8h_1af1bd193a26c6e6a8658140185cae42e1" kindref="member">k_thread_entry_t</ref>)<ref refid="semaphore_2semaphore_2src_2main_8c_1a33bf7a4d3d6b835ea5f1c224edc1ddcb" kindref="member">thread_sem_reset_null</ref>,</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a122fcce70e98e17966bab36f75ced5da" kindref="member">THREAD_TEST_PRIORITY</ref>),</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1af103f0701fa3fa8176609f70235e04db" kindref="member">test_sem_reset_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>those<sp/>platform<sp/>not<sp/>support<sp/>userspace,<sp/>we<sp/>skip<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="1278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a497e464828f204e43badb7deccb56fca" kindref="member">thread_sem_count_get_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="1283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ztest_set_fault_valid(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga58843b581e170a1811fc38eecbfd01f3" kindref="member">k_sem_count_get</ref>(NULL);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>should<sp/>not<sp/>go<sp/>here*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ztest__assert_8h_1acd6eb423f54dce8544f7c3b1618c0374" kindref="member">ztest_test_fail</ref>();</highlight></codeline>
<codeline lineno="1289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aa1fc945da5111a413d358a70f83557be" kindref="member">test_sem_count_get_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="msgq_2msgq__api_2src_2main_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/><ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="arch__interface_8h_1af1bd193a26c6e6a8658140185cae42e1" kindref="member">k_thread_entry_t</ref>)<ref refid="semaphore_2semaphore_2src_2main_8c_1a497e464828f204e43badb7deccb56fca" kindref="member">thread_sem_count_get_null</ref>,</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a122fcce70e98e17966bab36f75ced5da" kindref="member">THREAD_TEST_PRIORITY</ref>),</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(<ref refid="fifo_2fifo__timeout_2src_2main_8c_1af9be7b6fdbca696acdfc0d1cd2cf14e3" kindref="member">tid</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="semaphore_2semaphore_2src_2main_8c_1aa1fc945da5111a413d358a70f83557be" kindref="member">test_sem_count_get_null</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>those<sp/>platform<sp/>not<sp/>support<sp/>userspace,<sp/>we<sp/>skip<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="1315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ztest<sp/>main<sp/>entry*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="common_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" kindref="member">test_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gafec540511e6d2e0a074a5bfb515c53b0" kindref="member">k_thread_access_grant</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>&amp;multiple_thread_sem,<sp/>&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>,</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>,<sp/>&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>,<sp/>&amp;ksema,<sp/>&amp;<ref refid="structtimeout__info_1a57da992521d7fbf75dc8e536a5ef0dbd" kindref="member">sema</ref>,</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;high_prio_long_sem,<sp/>&amp;<ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref>,<sp/>&amp;stack_2,</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;stack_3,<sp/>&amp;stack_4,<sp/>&amp;timeout_info_pipe,</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sem_tid_1,<sp/>&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1adbba1dc3054ec90bd75f0794fce7005a" kindref="member">sem_tid_2</ref>,<sp/>&amp;sem_tid_3,<sp/>&amp;<ref refid="semaphore_2semaphore_2src_2main_8c_1aa42ced64f54bb6230d0470ae1f37eb61" kindref="member">sem_tid_4</ref>,</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="pipe_2pipe__api_2src_2main_8c_1a8b6a52348bfbfba409bf38688d31b8a8" kindref="member">tstack</ref>,<sp/>&amp;<ref refid="msgq_2msgq__api_2src_2main_8c_1aa15baae19d44279cac3d8bf47c9e707f" kindref="member">tdata</ref>,<sp/>&amp;<ref refid="semaphore_2semaphore_2src_2main_8c_1afbcf43d1a3208ce10a82130221cb3117" kindref="member">mut_sem</ref>);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" kindref="member">ztest_test_suite</ref>(test_semaphore,</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a0b569de6c3ca9ef6995ae9259585f0fd" kindref="member">test_k_sem_define</ref>),</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a90de1a3fcf50b4da020b0e09bb2b74a3" kindref="member">test_k_sem_init</ref>),</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a90e0a8a183e6b9d8e224194d2262ca06" kindref="member">test_sem_thread2thread</ref>),</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1ab04a6ee61b2bdf9191a207dcdaf7eb1a" kindref="member">test_sem_thread2isr</ref>),</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1abd0261e8b9f2b427c738fffcfaf67eee" kindref="member">test_sem_reset</ref>),</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a9a806fa822d15627ba92ad163d4459e1" kindref="member">test_sem_reset_waiting</ref>),</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1ad10ccd6017b12fe417daeca31600c4d8" kindref="member">test_sem_count_get</ref>),</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a228a36946d0244decae324234f229aaa" kindref="member">test_sem_give_from_isr</ref>),</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a1646510be803398ae3046c5da463d634" kindref="member">test_sem_give_from_thread</ref>),</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1aa333e4cfd24bbf545462c51e215237ce" kindref="member">test_sem_take_no_wait</ref>),</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1aed85a39ac76cf3f9c7a85e9622409912" kindref="member">test_sem_take_no_wait_fails</ref>),</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ac3ac78bdf5fd008590f2997e15f0fafb" kindref="member">test_sem_take_timeout_fails</ref>),</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a4f32ec757c4bf9a27aee0bb354d2353b" kindref="member">test_sem_take_timeout</ref>),</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1adc45dac316741c4281efcacdf12ea52e" kindref="member">test_sem_take_timeout_forever</ref>),</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ab307c87cb125b3eae98e4842886151d0" kindref="member">test_sem_take_timeout_isr</ref>),</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1abc3e0aef2feca4251f8220aec4c4196b" kindref="member">test_sem_take_multiple</ref>),</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a7a0d165476689da2cba46564c8244e79" kindref="member">test_sem_give_take_from_isr</ref>),</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a23c5ffa4dc2db4c19421e8835ca4b5c6" kindref="member">test_k_sem_correct_count_limit</ref>),</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ac63b7e143bf87a695064128f34f7031c" kindref="member">test_sem_multiple_threads_wait</ref>),</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a39364b31a9502a30a530d8ceaab44d06" kindref="member">test_sem_measure_timeouts</ref>),</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1adf3910fe68404a61e4a37bceb88d9f08" kindref="member">test_sem_measure_timeout_from_thread</ref>),</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a18dfb6008a7bdbde17a328c46e89c031" kindref="member">test_sem_multiple_take_and_timeouts</ref>),</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1abdfe6475cfd75b96841880eeb172791c" kindref="member">test_sem_multi_take_timeout_diff_sem</ref>),</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a8239ac04699cb1db802c0a3a2350bb3c" kindref="member">test_sem_give_null</ref>),</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1ab22b6531e77e3dd64b03054dfddb8d4c" kindref="member">test_sem_init_null</ref>),</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1ac9f16c45c644d3528dff465aac973578" kindref="member">test_sem_take_null</ref>),</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1af103f0701fa3fa8176609f70235e04db" kindref="member">test_sem_reset_null</ref>),</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1aa1fc945da5111a413d358a70f83557be" kindref="member">test_sem_count_get_null</ref>),</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="semaphore_2semaphore_2src_2main_8c_1a265d9e82ce540a038ed27e5d8a2561d7" kindref="member">test_sem_queue_mutual_exclusion</ref>));</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" kindref="member">ztest_run_test_suite</ref>(test_semaphore);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/kernel/semaphore/semaphore/src/main.c"/>
  </compounddef>
</doxygen>
