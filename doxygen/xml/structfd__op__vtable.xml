<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structfd__op__vtable" kind="struct" language="C++" prot="public">
    <compoundname>fd_op_vtable</compoundname>
    <includes refid="fdtable_8h" local="no">fdtable.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfd__op__vtable_1a8caad0c1e96cdb67ef02f918ab8aff17" prot="public" static="no" mutable="no">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref>(*</type>
        <definition>ssize_t(* fd_op_vtable::read) (void *obj, void *buf, size_t sz)</definition>
        <argsstring>)(void *obj, void *buf, size_t sz)</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/fdtable.h" line="23" column="1" bodyfile="include/sys/fdtable.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfd__op__vtable_1ac59ee326ff54a6a2324bf3425f4a3d5a" prot="public" static="no" mutable="no">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref>(*</type>
        <definition>ssize_t(* fd_op_vtable::write) (void *obj, const void *buf, size_t sz)</definition>
        <argsstring>)(void *obj, const void *buf, size_t sz)</argsstring>
        <name>write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/fdtable.h" line="24" column="1" bodyfile="include/sys/fdtable.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfd__op__vtable_1a80704417dfe01e8289d1f7fca819f5f1" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fd_op_vtable::close) (void *obj)</definition>
        <argsstring>)(void *obj)</argsstring>
        <name>close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/fdtable.h" line="25" column="1" bodyfile="include/sys/fdtable.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfd__op__vtable_1aff079f05422413a0df3394ddfecc0298" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* fd_op_vtable::ioctl) (void *obj, unsigned int request, va_list args)</definition>
        <argsstring>)(void *obj, unsigned int request, va_list args)</argsstring>
        <name>ioctl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/fdtable.h" line="26" column="1" bodyfile="include/sys/fdtable.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>File descriptor virtual method table. Currently all operations beyond read/write/close go thru ioctl method. </para>
    </detaileddescription>
    <location file="include/sys/fdtable.h" line="22" column="1" bodyfile="include/sys/fdtable.h" bodystart="22" bodyend="27"/>
    <listofallmembers>
      <member refid="structfd__op__vtable_1a80704417dfe01e8289d1f7fca819f5f1" prot="public" virt="non-virtual"><scope>fd_op_vtable</scope><name>close</name></member>
      <member refid="structfd__op__vtable_1aff079f05422413a0df3394ddfecc0298" prot="public" virt="non-virtual"><scope>fd_op_vtable</scope><name>ioctl</name></member>
      <member refid="structfd__op__vtable_1a8caad0c1e96cdb67ef02f918ab8aff17" prot="public" virt="non-virtual"><scope>fd_op_vtable</scope><name>read</name></member>
      <member refid="structfd__op__vtable_1ac59ee326ff54a6a2324bf3425f4a3d5a" prot="public" virt="non-virtual"><scope>fd_op_vtable</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
