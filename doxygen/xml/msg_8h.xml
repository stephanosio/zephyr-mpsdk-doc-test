<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="msg_8h" kind="file" language="C++">
    <compoundname>msg.h</compoundname>
    <includes local="no">zephyr.h</includes>
    <includes refid="net_2buf_8h" local="no">net/buf.h</includes>
    <includedby refid="mesh_8h" local="no">include/bluetooth/mesh.h</includedby>
    <includedby refid="access_8h" local="no">include/bluetooth/mesh/access.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/bluetooth/mesh/msg.h</label>
        <link refid="msg_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>net/buf.h</label>
        <link refid="net_2buf_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="8">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="6">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/bluetooth/mesh.h</label>
        <link refid="mesh_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/bluetooth/mesh/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/bluetooth/mesh/msg.h</label>
        <link refid="msg_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/bluetooth/mesh/shell.h</label>
        <link refid="bluetooth_2mesh_2shell_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structbt__mesh__msg__ctx" prot="public">bt_mesh_msg_ctx</innerclass>
    <innerclass refid="structbt__mesh__msg__ack__ctx" prot="public">bt_mesh_msg_ack_ctx</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__mesh__msg_1ga658d38a7be18355f6ecd5f7fb4dcabed" prot="public" static="no">
        <name>BT_MESH_MIC_SHORT</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Length of a short Mesh MIC. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/msg.h" line="28" column="9" bodyfile="include/bluetooth/mesh/msg.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__msg_1ga6e8fc0bb4ed35870c0f1652c18a8117d" prot="public" static="no">
        <name>BT_MESH_MIC_LONG</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Length of a long Mesh MIC. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/msg.h" line="30" column="9" bodyfile="include/bluetooth/mesh/msg.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__msg_1gad0b5f56cc9741fcd5dadf157c5e62701" prot="public" static="no">
        <name>BT_MESH_MODEL_OP_LEN</name>
        <param><defname>_op</defname></param>
        <initializer>((_op) &lt;= 0xff ? 1 : (_op) &lt;= 0xffff ? 2 : 3)</initializer>
        <briefdescription>
<para>Helper to determine the length of an opcode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_op</parametername>
</parameternamelist>
<parameterdescription>
<para>Opcode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/msg.h" line="38" column="9" bodyfile="include/bluetooth/mesh/msg.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__msg_1ga5352d6fa05808722eba8a76e2446eddb" prot="public" static="no">
        <name>BT_MESH_MODEL_BUF_LEN</name>
        <param><defname>_op</defname></param>
        <param><defname>_payload_len</defname></param>
        <initializer>	(<ref refid="group__bt__mesh__msg_1gad0b5f56cc9741fcd5dadf157c5e62701" kindref="member">BT_MESH_MODEL_OP_LEN</ref>(_op) + (_payload_len) + <ref refid="group__bt__mesh__msg_1ga658d38a7be18355f6ecd5f7fb4dcabed" kindref="member">BT_MESH_MIC_SHORT</ref>)</initializer>
        <briefdescription>
<para>Helper for model message buffer length. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the length of a Mesh model message buffer, including the opcode length and a short MIC.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_op</parametername>
</parameternamelist>
<parameterdescription>
<para>Opcode of the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_payload_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the model payload. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/msg.h" line="50" column="9" bodyfile="include/bluetooth/mesh/msg.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__msg_1gabb16a024db39706af46ad86e2b04b00d" prot="public" static="no">
        <name>BT_MESH_MODEL_BUF_LEN_LONG_MIC</name>
        <param><defname>_op</defname></param>
        <param><defname>_payload_len</defname></param>
        <initializer>	(<ref refid="group__bt__mesh__msg_1gad0b5f56cc9741fcd5dadf157c5e62701" kindref="member">BT_MESH_MODEL_OP_LEN</ref>(_op) + (_payload_len) + <ref refid="group__bt__mesh__msg_1ga6e8fc0bb4ed35870c0f1652c18a8117d" kindref="member">BT_MESH_MIC_LONG</ref>)</initializer>
        <briefdescription>
<para>Helper for model message buffer length. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the length of a Mesh model message buffer, including the opcode length and a long MIC.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_op</parametername>
</parameternamelist>
<parameterdescription>
<para>Opcode of the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_payload_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the model payload. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/msg.h" line="63" column="9" bodyfile="include/bluetooth/mesh/msg.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__msg_1ga6a61ace773e331d82860b343d51f62e7" prot="public" static="no">
        <name>BT_MESH_MODEL_BUF_DEFINE</name>
        <param><defname>_buf</defname></param>
        <param><defname>_op</defname></param>
        <param><defname>_payload_len</defname></param>
        <initializer>	<ref refid="group__net__buf_1gaf85aa0b705bb4fbe2630191fde802501" kindref="member">NET_BUF_SIMPLE_DEFINE</ref>(_buf, <ref refid="group__bt__mesh__msg_1ga5352d6fa05808722eba8a76e2446eddb" kindref="member">BT_MESH_MODEL_BUF_LEN</ref>(_op, (_payload_len)))</initializer>
        <briefdescription>
<para>Define a Mesh model message buffer using <ref refid="group__net__buf_1gaf85aa0b705bb4fbe2630191fde802501" kindref="member">NET_BUF_SIMPLE_DEFINE</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_op</parametername>
</parameternamelist>
<parameterdescription>
<para>Opcode of the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_payload_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the model message payload. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/msg.h" line="74" column="9" bodyfile="include/bluetooth/mesh/msg.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__mesh__msg_1gaa26850aebc9bfc97d1dafb66ba02021c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bt_mesh_model_msg_init</definition>
        <argsstring>(struct net_buf_simple *msg, uint32_t opcode)</argsstring>
        <name>bt_mesh_model_msg_init</name>
        <param>
          <type>struct <ref refid="structnet__buf__simple" kindref="compound">net_buf_simple</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>opcode</declname>
        </param>
        <briefdescription>
<para>Initialize a model message. </para>
        </briefdescription>
        <detaileddescription>
<para>Clears the message buffer contents, and encodes the given opcode. The message buffer will be ready for filling in payload data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Message buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opcode</parametername>
</parameternamelist>
<parameterdescription>
<para>Opcode to encode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/msg.h" line="112" column="6" declfile="include/bluetooth/mesh/msg.h" declline="112" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__msg_1gadd25e335133fe29f234243a39f4d7626" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void bt_mesh_msg_ack_ctx_init</definition>
        <argsstring>(struct bt_mesh_msg_ack_ctx *ack)</argsstring>
        <name>bt_mesh_msg_ack_ctx_init</name>
        <param>
          <type>struct <ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref> *</type>
          <declname>ack</declname>
        </param>
        <briefdescription>
<para>Initialize an acknowledged message context. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes semaphore used for synchronization between <ref refid="group__bt__mesh__msg_1ga83561f4d003c6c3c2b91a6afd180d1fd" kindref="member">bt_mesh_msg_ack_ctx_wait</ref> and <ref refid="group__bt__mesh__msg_1ga2b054f7dc01daeef067cd3d819a7c42c" kindref="member">bt_mesh_msg_ack_ctx_rx</ref> calls. Call this function before using <ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ack</parametername>
</parameternamelist>
<parameterdescription>
<para>Acknowledged message context to initialize. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/msg.h" line="131" column="20" bodyfile="include/bluetooth/mesh/msg.h" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__msg_1ga86d3803bde26f496b7de3fa348a04525" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void bt_mesh_msg_ack_ctx_reset</definition>
        <argsstring>(struct bt_mesh_msg_ack_ctx *ack)</argsstring>
        <name>bt_mesh_msg_ack_ctx_reset</name>
        <param>
          <type>struct <ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref> *</type>
          <declname>ack</declname>
        </param>
        <briefdescription>
<para>Reset the synchronization semaphore in an acknowledged message context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function aborts call to <ref refid="group__bt__mesh__msg_1ga83561f4d003c6c3c2b91a6afd180d1fd" kindref="member">bt_mesh_msg_ack_ctx_wait</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ack</parametername>
</parameternamelist>
<parameterdescription>
<para>Acknowledged message context to be reset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/msg.h" line="142" column="20" bodyfile="include/bluetooth/mesh/msg.h" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__msg_1ga3da92606640cdba69a676c2a03c72311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bt_mesh_msg_ack_ctx_clear</definition>
        <argsstring>(struct bt_mesh_msg_ack_ctx *ack)</argsstring>
        <name>bt_mesh_msg_ack_ctx_clear</name>
        <param>
          <type>struct <ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref> *</type>
          <declname>ack</declname>
        </param>
        <briefdescription>
<para>Clear parameters of an acknowledged message context. </para>
        </briefdescription>
        <detaileddescription>
<para>This function clears the opcode, remote address and user data set by <ref refid="group__bt__mesh__msg_1ga1bb34a904103933140e2159cb53d49f5" kindref="member">bt_mesh_msg_ack_ctx_prepare</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ack</parametername>
</parameternamelist>
<parameterdescription>
<para>Acknowledged message context to be cleared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/msg.h" line="154" column="6" declfile="include/bluetooth/mesh/msg.h" declline="154" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__msg_1ga1bb34a904103933140e2159cb53d49f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_msg_ack_ctx_prepare</definition>
        <argsstring>(struct bt_mesh_msg_ack_ctx *ack, uint32_t op, uint16_t dst, void *user_data)</argsstring>
        <name>bt_mesh_msg_ack_ctx_prepare</name>
        <param>
          <type>struct <ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref> *</type>
          <declname>ack</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>dst</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Prepare an acknowledged message context for the incoming message to wait. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the opcode, remote address of the incoming message and stores the user data. Use this function before calling <ref refid="group__bt__mesh__msg_1ga83561f4d003c6c3c2b91a6afd180d1fd" kindref="member">bt_mesh_msg_ack_ctx_wait</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ack</parametername>
</parameternamelist>
<parameterdescription>
<para>Acknowledged message context to prepare. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The message OpCode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination address of the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>User data for the acknowledged message context.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, or (negative) error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/msg.h" line="168" column="5" declfile="include/bluetooth/mesh/msg.h" declline="168" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__msg_1ga974ba5d7df597a21945b75ac5919debd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool bt_mesh_msg_ack_ctx_busy</definition>
        <argsstring>(struct bt_mesh_msg_ack_ctx *ack)</argsstring>
        <name>bt_mesh_msg_ack_ctx_busy</name>
        <param>
          <type>struct <ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref> *</type>
          <declname>ack</declname>
        </param>
        <briefdescription>
<para>Check if the acknowledged message context is initialized with an opcode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ack</parametername>
</parameternamelist>
<parameterdescription>
<para>Acknowledged message context.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the acknowledged message context is initialized with an opcode, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/msg.h" line="178" column="20" bodyfile="include/bluetooth/mesh/msg.h" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__msg_1ga83561f4d003c6c3c2b91a6afd180d1fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_msg_ack_ctx_wait</definition>
        <argsstring>(struct bt_mesh_msg_ack_ctx *ack, k_timeout_t timeout)</argsstring>
        <name>bt_mesh_msg_ack_ctx_wait</name>
        <param>
          <type>struct <ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref> *</type>
          <declname>ack</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Wait for a message acknowledge. </para>
        </briefdescription>
        <detaileddescription>
<para>This function blocks execution until <ref refid="group__bt__mesh__msg_1ga2b054f7dc01daeef067cd3d819a7c42c" kindref="member">bt_mesh_msg_ack_ctx_rx</ref> is called or by timeout.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ack</parametername>
</parameternamelist>
<parameterdescription>
<para>Acknowledged message context of the message to wait for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Wait timeout.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, or (negative) error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/msg.h" line="192" column="5" declfile="include/bluetooth/mesh/msg.h" declline="192" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__msg_1ga2b054f7dc01daeef067cd3d819a7c42c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void bt_mesh_msg_ack_ctx_rx</definition>
        <argsstring>(struct bt_mesh_msg_ack_ctx *ack)</argsstring>
        <name>bt_mesh_msg_ack_ctx_rx</name>
        <param>
          <type>struct <ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref> *</type>
          <declname>ack</declname>
        </param>
        <briefdescription>
<para>Mark a message as acknowledged. </para>
        </briefdescription>
        <detaileddescription>
<para>This function unblocks call to <ref refid="group__bt__mesh__msg_1ga83561f4d003c6c3c2b91a6afd180d1fd" kindref="member">bt_mesh_msg_ack_ctx_wait</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ack</parametername>
</parameternamelist>
<parameterdescription>
<para>Context of a message to be acknowledged. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/msg.h" line="200" column="20" bodyfile="include/bluetooth/mesh/msg.h" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__msg_1gae10c4229cabf7774684c99154d4ed8ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool bt_mesh_msg_ack_ctx_match</definition>
        <argsstring>(const struct bt_mesh_msg_ack_ctx *ack, uint32_t op, uint16_t addr, void **user_data)</argsstring>
        <name>bt_mesh_msg_ack_ctx_match</name>
        <param>
          <type>const struct <ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref> *</type>
          <declname>ack</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>addr</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Check if an opcode and address of a message matches the expected one. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ack</parametername>
</parameternamelist>
<parameterdescription>
<para>Acknowledged message context to be checked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>OpCode of the incoming message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Source address of the incoming message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>If not NULL, returns a user data stored in the acknowledged message context by <ref refid="group__bt__mesh__msg_1ga1bb34a904103933140e2159cb53d49f5" kindref="member">bt_mesh_msg_ack_ctx_prepare</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the incoming message matches the expected one, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/msg.h" line="215" column="6" declfile="include/bluetooth/mesh/msg.h" declline="215" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Message APIs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_BLUETOOTH_MESH_MSG_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_BLUETOOTH_MESH_MSG_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net_2buf_8h" kindref="compound">net/buf.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="group__bt__mesh__msg_1ga658d38a7be18355f6ecd5f7fb4dcabed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_MIC_SHORT<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="group__bt__mesh__msg_1ga6e8fc0bb4ed35870c0f1652c18a8117d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_MIC_LONG<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="group__bt__mesh__msg_1gad0b5f56cc9741fcd5dadf157c5e62701" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_MODEL_OP_LEN(_op)<sp/>((_op)<sp/>&lt;=<sp/>0xff<sp/>?<sp/>1<sp/>:<sp/>(_op)<sp/>&lt;=<sp/>0xffff<sp/>?<sp/>2<sp/>:<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group__bt__mesh__msg_1ga5352d6fa05808722eba8a76e2446eddb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_MODEL_BUF_LEN(_op,<sp/>_payload_len)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(BT_MESH_MODEL_OP_LEN(_op)<sp/>+<sp/>(_payload_len)<sp/>+<sp/>BT_MESH_MIC_SHORT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group__bt__mesh__msg_1gabb16a024db39706af46ad86e2b04b00d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_MODEL_BUF_LEN_LONG_MIC(_op,<sp/>_payload_len)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(BT_MESH_MODEL_OP_LEN(_op)<sp/>+<sp/>(_payload_len)<sp/>+<sp/>BT_MESH_MIC_LONG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="group__bt__mesh__msg_1ga6a61ace773e331d82860b343d51f62e7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_MODEL_BUF_DEFINE(_buf,<sp/>_op,<sp/>_payload_len)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_BUF_SIMPLE_DEFINE(_buf,<sp/>BT_MESH_MODEL_BUF_LEN(_op,<sp/>(_payload_len)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="structbt__mesh__msg__ctx" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__msg__ctx" kindref="compound">bt_mesh_msg_ctx</ref><sp/>{</highlight></codeline>
<codeline lineno="80" refid="structbt__mesh__msg__ctx_1a106a615ce13040e99413a15ff74bb0a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structbt__mesh__msg__ctx_1a106a615ce13040e99413a15ff74bb0a9" kindref="member">net_idx</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structbt__mesh__msg__ctx_1a58de4d7cef6a8236a6517fc0bd961917" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structbt__mesh__msg__ctx_1a58de4d7cef6a8236a6517fc0bd961917" kindref="member">app_idx</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="structbt__mesh__msg__ctx_1a2ead7791000e9a55ed1b92c40b84bc7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structbt__mesh__msg__ctx_1a2ead7791000e9a55ed1b92c40b84bc7a" kindref="member">addr</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="structbt__mesh__msg__ctx_1a682b192d416620a33a12b248b299b31e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structbt__mesh__msg__ctx_1a682b192d416620a33a12b248b299b31e" kindref="member">recv_dst</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="structbt__mesh__msg__ctx_1a1838579bb63c1976322e8eda039052db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref><sp/><sp/><ref refid="structbt__mesh__msg__ctx_1a1838579bb63c1976322e8eda039052db" kindref="member">recv_rssi</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="structbt__mesh__msg__ctx_1af8ff3238c184c541ff5417f37dd2c1e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><ref refid="structbt__mesh__msg__ctx_1af8ff3238c184c541ff5417f37dd2c1e4" kindref="member">recv_ttl</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="structbt__mesh__msg__ctx_1a21cfb308ed8c718303bb2bc414c50753" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><ref refid="structbt__mesh__msg__ctx_1a21cfb308ed8c718303bb2bc414c50753" kindref="member">send_rel</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structbt__mesh__msg__ctx_1a43b0ebfdc3c8018a02886d93dfe2f21b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><ref refid="structbt__mesh__msg__ctx_1a43b0ebfdc3c8018a02886d93dfe2f21b" kindref="member">send_ttl</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="group__bt__mesh__msg_1gaa26850aebc9bfc97d1dafb66ba02021c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__msg_1gaa26850aebc9bfc97d1dafb66ba02021c" kindref="member">bt_mesh_model_msg_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__buf__simple" kindref="compound">net_buf_simple</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>opcode);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="structbt__mesh__msg__ack__ctx" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref><sp/>{</highlight></codeline>
<codeline lineno="118" refid="structbt__mesh__msg__ack__ctx_1a53ce3e10f27da773c227de6d6eaba5e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__mesh__msg__ack__ctx_1a53ce3e10f27da773c227de6d6eaba5e3" kindref="member">sem</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119" refid="structbt__mesh__msg__ack__ctx_1a08f50fcae687026c45d891c9381bd9c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__mesh__msg__ack__ctx_1a08f50fcae687026c45d891c9381bd9c2" kindref="member">op</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120" refid="structbt__mesh__msg__ack__ctx_1ac83626299e197dbd0a9a36a6617c3b21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__mesh__msg__ack__ctx_1ac83626299e197dbd0a9a36a6617c3b21" kindref="member">dst</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121" refid="structbt__mesh__msg__ack__ctx_1a510baede03d53b2419ade8da6d02fa10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structbt__mesh__msg__ack__ctx_1a510baede03d53b2419ade8da6d02fa10" kindref="member">user_data</ref>;<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="group__bt__mesh__msg_1gadd25e335133fe29f234243a39f4d7626" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__msg_1gadd25e335133fe29f234243a39f4d7626" kindref="member">bt_mesh_msg_ack_ctx_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref><sp/>*ack)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;ack-&gt;<ref refid="structbt__mesh__msg__ack__ctx_1a53ce3e10f27da773c227de6d6eaba5e3" kindref="member">sem</ref>,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="group__bt__mesh__msg_1ga86d3803bde26f496b7de3fa348a04525" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__msg_1ga86d3803bde26f496b7de3fa348a04525" kindref="member">bt_mesh_msg_ack_ctx_reset</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref><sp/>*ack)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1ga1bd12d8d8c1b9c6be9b665d0fefe5562" kindref="member">k_sem_reset</ref>(&amp;ack-&gt;<ref refid="structbt__mesh__msg__ack__ctx_1a53ce3e10f27da773c227de6d6eaba5e3" kindref="member">sem</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="group__bt__mesh__msg_1ga3da92606640cdba69a676c2a03c72311" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__msg_1ga3da92606640cdba69a676c2a03c72311" kindref="member">bt_mesh_msg_ack_ctx_clear</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref><sp/>*ack);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="group__bt__mesh__msg_1ga1bb34a904103933140e2159cb53d49f5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__msg_1ga1bb34a904103933140e2159cb53d49f5" kindref="member">bt_mesh_msg_ack_ctx_prepare</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref><sp/>*ack,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>op,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>dst,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="group__bt__mesh__msg_1ga974ba5d7df597a21945b75ac5919debd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__msg_1ga974ba5d7df597a21945b75ac5919debd" kindref="member">bt_mesh_msg_ack_ctx_busy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref><sp/>*ack)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ack-&gt;<ref refid="structbt__mesh__msg__ack__ctx_1a08f50fcae687026c45d891c9381bd9c2" kindref="member">op</ref><sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="group__bt__mesh__msg_1ga83561f4d003c6c3c2b91a6afd180d1fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__msg_1ga83561f4d003c6c3c2b91a6afd180d1fd" kindref="member">bt_mesh_msg_ack_ctx_wait</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref><sp/>*ack,<sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="group__bt__mesh__msg_1ga2b054f7dc01daeef067cd3d819a7c42c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__msg_1ga2b054f7dc01daeef067cd3d819a7c42c" kindref="member">bt_mesh_msg_ack_ctx_rx</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref><sp/>*ack)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;ack-&gt;<ref refid="structbt__mesh__msg__ack__ctx_1a53ce3e10f27da773c227de6d6eaba5e3" kindref="member">sem</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="group__bt__mesh__msg_1gae10c4229cabf7774684c99154d4ed8ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__msg_1gae10c4229cabf7774684c99154d4ed8ae" kindref="member">bt_mesh_msg_ack_ctx_match</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__msg__ack__ctx" kindref="compound">bt_mesh_msg_ack_ctx</ref><sp/>*ack,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>op,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>addr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_BLUETOOTH_MESH_MSG_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/bluetooth/mesh/msg.h"/>
  </compounddef>
</doxygen>
