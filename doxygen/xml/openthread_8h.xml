<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="openthread_8h" kind="file" language="C++">
    <compoundname>openthread.h</compoundname>
    <includes local="no">kernel.h</includes>
    <includes refid="net__if_8h" local="no">net/net_if.h</includes>
    <includes local="no">openthread/instance.h</includes>
    <incdepgraph>
      <node id="18">
        <label>logging/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>logging/log_core.h</label>
        <link refid="include_2logging_2log__core_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>logging/log_instance.h</label>
        <link refid="log__instance_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>logging/log_msg.h</label>
        <link refid="log__msg_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>logging/log_msg2.h</label>
        <link refid="include_2logging_2log__msg2_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>net/buf.h</label>
        <link refid="net_2buf_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>net/capture.h</label>
        <link refid="capture_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>net/hostname.h</label>
        <link refid="hostname_8h"/>
      </node>
      <node id="15">
        <label>net/net_core.h</label>
        <link refid="net__core_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>net/net_event.h</label>
        <link refid="net__event_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>net/net_if.h</label>
        <link refid="net__if_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>net/net_ip.h</label>
        <link refid="net__ip_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>net/net_l2.h</label>
        <link refid="net__l2_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>net/net_linkaddr.h</label>
        <link refid="net__linkaddr_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>net/net_mgmt.h</label>
        <link refid="net__mgmt_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>net/net_stats.h</label>
        <link refid="net__stats_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>net/net_timeout.h</label>
        <link refid="net__timeout_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/net/openthread.h</label>
        <link refid="openthread_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="46">
        <label>sys/byteorder.h</label>
        <link refid="byteorder_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>sys/cbprintf.h</label>
        <link refid="cbprintf_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>sys/cbprintf_cxx.h</label>
        <link refid="cbprintf__cxx_8h"/>
      </node>
      <node id="29">
        <label>sys/cbprintf_internal.h</label>
        <link refid="cbprintf__internal_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sys/mpsc_packet.h</label>
        <link refid="mpsc__packet_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="10">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="13">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="7">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="14">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="28">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>syscalls/log_core.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__core_8h"/>
      </node>
      <node id="35">
        <label>syscalls/log_msg2.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__msg2_8h"/>
      </node>
      <node id="34">
        <label>alloca.h</label>
      </node>
      <node id="4">
        <label>device.h</label>
      </node>
      <node id="2">
        <label>kernel.h</label>
      </node>
      <node id="56">
        <label>openthread/instance.h</label>
      </node>
      <node id="27">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="36">
        <label>syscall.h</label>
      </node>
      <node id="32">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="55">
        <label>syscalls/net_if.h</label>
      </node>
      <node id="47">
        <label>syscalls/net_ip.h</label>
      </node>
      <node id="50">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__OpenThread_1ga586e2bad8582a747d79ed517eb820c7a" prot="public" static="no">
        <name>OPENTHREAD_L2_CTX_TYPE</name>
        <initializer>struct openthread_context</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/openthread.h" line="147" column="9" bodyfile="include/net/openthread.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__OpenThread_1gad097b10683a67500744763fab9028450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openthread_set_state_changed_cb</definition>
        <argsstring>(otStateChangedCallback cb)</argsstring>
        <name>openthread_set_state_changed_cb</name>
        <param>
          <type>otStateChangedCallback</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Sets function which will be called when certain configuration or state changes within OpenThread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>function to call in callback procedure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/openthread.h" line="82" column="6" declfile="include/net/openthread.h" declline="82" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__OpenThread_1ga9499c4c69a0094f0b7ef803ac05fb19a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="kernel_2thread_8h_1a6379f5a1f19ffbc262a6877c4f6e3647" kindref="member">k_tid_t</ref></type>
        <definition>k_tid_t openthread_thread_id_get</definition>
        <argsstring>(void)</argsstring>
        <name>openthread_thread_id_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get OpenThread thread identification. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/openthread.h" line="87" column="9" declfile="include/net/openthread.h" declline="87" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__OpenThread_1gad975528c91de66cd1054f3584bfcc957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct openthread_context *</type>
        <definition>struct openthread_context * openthread_get_default_context</definition>
        <argsstring>(void)</argsstring>
        <name>openthread_get_default_context</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get pointer to default OpenThread context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>On success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>On failure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/openthread.h" line="95" column="25" declfile="include/net/openthread.h" declline="95" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="group__OpenThread_1ga517a538fa32afac8ca8968ada2cea89d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct otInstance *</type>
        <definition>struct otInstance * openthread_get_default_instance</definition>
        <argsstring>(void)</argsstring>
        <name>openthread_get_default_instance</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get pointer to default OpenThread instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>On success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>On failure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/openthread.h" line="103" column="17" declfile="include/net/openthread.h" declline="103" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__OpenThread_1ga4674b60779f2fd0adaa9c96afb840265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int openthread_start</definition>
        <argsstring>(struct openthread_context *ot_context)</argsstring>
        <name>openthread_start</name>
        <param>
          <type>struct openthread_context *</type>
          <declname>ot_context</declname>
        </param>
        <briefdescription>
<para>Starts the OpenThread network. </para>
        </briefdescription>
        <detaileddescription>
<para>Depends on active settings: it uses stored network configuration, start joining procedure or uses default network configuration. Additionally when the device is MTD, it sets the SED mode to properly attach the network.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ot_context</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/openthread.h" line="114" column="5" declfile="include/net/openthread.h" declline="114" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__OpenThread_1ga1f702bb5768795bce5561efe457b1028" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openthread_api_mutex_lock</definition>
        <argsstring>(struct openthread_context *ot_context)</argsstring>
        <name>openthread_api_mutex_lock</name>
        <param>
          <type>struct openthread_context *</type>
          <declname>ot_context</declname>
        </param>
        <briefdescription>
<para>Lock internal mutex before accessing OT API. </para>
        </briefdescription>
        <detaileddescription>
<para>OpenThread API is not thread-safe, therefore before accessing any API function, it&apos;s needed to lock the internal mutex, to prevent the OpenThread thread from prempting the API call.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ot_context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context to lock. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/openthread.h" line="125" column="6" declfile="include/net/openthread.h" declline="125" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__OpenThread_1ga05c5792a8d2ceaf93336f62760c74862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int openthread_api_mutex_try_lock</definition>
        <argsstring>(struct openthread_context *ot_context)</argsstring>
        <name>openthread_api_mutex_try_lock</name>
        <param>
          <type>struct openthread_context *</type>
          <declname>ot_context</declname>
        </param>
        <briefdescription>
<para>Try to lock internal mutex before accessing OT API. </para>
        </briefdescription>
        <detaileddescription>
<para>This function behaves like <ref refid="group__OpenThread_1ga1f702bb5768795bce5561efe457b1028" kindref="member">openthread_api_mutex_lock()</ref> provided that the internal mutex is unlocked. Otherwise, it exists immediately and returns a negative value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ot_context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context to lock. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>On success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>On failure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/openthread.h" line="138" column="5" declfile="include/net/openthread.h" declline="138" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__OpenThread_1ga0c3cb86690f2b1b714ad655b7df23bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openthread_api_mutex_unlock</definition>
        <argsstring>(struct openthread_context *ot_context)</argsstring>
        <name>openthread_api_mutex_unlock</name>
        <param>
          <type>struct openthread_context *</type>
          <declname>ot_context</declname>
        </param>
        <briefdescription>
<para>Unlock internal mutex after accessing OT API. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ot_context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context to unlock. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/openthread.h" line="145" column="6" declfile="include/net/openthread.h" declline="145" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>OpenThread l2 stack public header. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_NET_OPENTHREAD_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_NET_OPENTHREAD_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net__if_8h" kindref="compound">net/net_if.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openthread/instance.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">pkt_list_elem<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__pkt" kindref="compound">net_pkt</ref><sp/>*pkt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">openthread_context<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otInstance<sp/>*instance;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>pkt_list_in_idx;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>pkt_list_out_idx;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>pkt_list_full;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">pkt_list_elem<sp/>pkt_list[CONFIG_OPENTHREAD_PKT_LIST_SIZE];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__mutex" kindref="compound">k_mutex</ref><sp/>api_lock;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work__q" kindref="compound">k_work_q</ref><sp/>work_q;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/>api_work;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="82" refid="group__OpenThread_1gad097b10683a67500744763fab9028450" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__OpenThread_1gad097b10683a67500744763fab9028450" kindref="member">openthread_set_state_changed_cb</ref>(otStateChangedCallback<sp/>cb);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="group__OpenThread_1ga9499c4c69a0094f0b7ef803ac05fb19a" refkind="member"><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/><ref refid="group__OpenThread_1ga9499c4c69a0094f0b7ef803ac05fb19a" kindref="member">openthread_thread_id_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="group__OpenThread_1gad975528c91de66cd1054f3584bfcc957" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">openthread_context<sp/>*<ref refid="group__OpenThread_1gad975528c91de66cd1054f3584bfcc957" kindref="member">openthread_get_default_context</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="group__OpenThread_1ga517a538fa32afac8ca8968ada2cea89d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">otInstance<sp/>*<ref refid="group__OpenThread_1ga517a538fa32afac8ca8968ada2cea89d" kindref="member">openthread_get_default_instance</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="group__OpenThread_1ga4674b60779f2fd0adaa9c96afb840265" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__OpenThread_1ga4674b60779f2fd0adaa9c96afb840265" kindref="member">openthread_start</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>openthread_context<sp/>*ot_context);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="group__OpenThread_1ga1f702bb5768795bce5561efe457b1028" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__OpenThread_1ga1f702bb5768795bce5561efe457b1028" kindref="member">openthread_api_mutex_lock</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>openthread_context<sp/>*ot_context);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="group__OpenThread_1ga05c5792a8d2ceaf93336f62760c74862" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__OpenThread_1ga05c5792a8d2ceaf93336f62760c74862" kindref="member">openthread_api_mutex_try_lock</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>openthread_context<sp/>*ot_context);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="group__OpenThread_1ga0c3cb86690f2b1b714ad655b7df23bf3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__OpenThread_1ga0c3cb86690f2b1b714ad655b7df23bf3" kindref="member">openthread_api_mutex_unlock</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>openthread_context<sp/>*ot_context);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="group__OpenThread_1ga586e2bad8582a747d79ed517eb820c7a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OPENTHREAD_L2_CTX_TYPE<sp/>struct<sp/>openthread_context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_NET_OPENTHREAD_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/net/openthread.h"/>
  </compounddef>
</doxygen>
