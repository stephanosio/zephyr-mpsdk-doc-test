<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="arch_2x86_2ia32_2thread_8h" kind="file" language="C++">
    <compoundname>thread.h</compoundname>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes refid="mmustructs_8h" local="no">arch/x86/mmustructs.h</includes>
    <includedby refid="x86_2ia32_2arch_8h" local="no">include/arch/x86/ia32/arch.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/arch/x86/ia32/thread.h</label>
        <link refid="arch_2x86_2ia32_2thread_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>arch/x86/mmustructs.h</label>
        <link refid="mmustructs_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="5">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="2">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="10">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>include/arch/x86/arch.h</label>
        <link refid="x86_2arch_8h"/>
      </node>
      <node id="2">
        <label>include/arch/x86/ia32/arch.h</label>
        <link refid="x86_2ia32_2arch_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/arch/x86/ia32/thread.h</label>
        <link refid="arch_2x86_2ia32_2thread_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structs__FpRegSet" prot="public">s_FpRegSet</innerclass>
    <innerclass refid="structs__FpRegSetEx" prot="public">s_FpRegSetEx</innerclass>
    <innerclass refid="structs__preempFloatReg" prot="public">s_preempFloatReg</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="arch_2x86_2ia32_2thread_8h_1af99d45d7fb31caf8f4abf9306fb654a3" prot="public" static="no">
        <name>FP_REG_SET_ALIGN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Floating point register set alignment.</para>
<para>If support for SSEx extensions is enabled a 16 byte boundary is required, since the &apos;fxsave&apos; and &apos;fxrstor&apos; instructions require this. In all other cases a 4 byte boundary is sufficient. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/thread.h" line="39" column="9" bodyfile="include/arch/x86/ia32/thread.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arch_2x86_2ia32_2thread_8h_1adb3b8047e5ebfc1305e7616991913818" prot="public" static="no">
        <name>X86_THREAD_FLAG_INT</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/thread.h" line="46" column="9" bodyfile="include/arch/x86/ia32/thread.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arch_2x86_2ia32_2thread_8h_1a01b9d81506f2cacafd8b5c1341d30207" prot="public" static="no">
        <name>X86_THREAD_FLAG_EXC</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/thread.h" line="47" column="9" bodyfile="include/arch/x86/ia32/thread.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="arch_2x86_2ia32_2thread_8h_1a9976b965d1010def5c40f40be6930461" prot="public" static="no">
        <name>X86_THREAD_FLAG_ALL</name>
        <initializer>(<ref refid="arch_2x86_2ia32_2thread_8h_1adb3b8047e5ebfc1305e7616991913818" kindref="member">X86_THREAD_FLAG_INT</ref> | <ref refid="arch_2x86_2ia32_2thread_8h_1a01b9d81506f2cacafd8b5c1341d30207" kindref="member">X86_THREAD_FLAG_EXC</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/thread.h" line="48" column="9" bodyfile="include/arch/x86/ia32/thread.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="arch_2x86_2ia32_2thread_8h_1ac6b7d0ab9f5986eb129f362e4dc39811" prot="public" static="no">
        <type>struct <ref refid="structs__FpRegSet" kindref="compound">s_FpRegSet</ref></type>
        <definition>typedef struct s_FpRegSet tFpRegSet</definition>
        <argsstring></argsstring>
        <name>tFpRegSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/thread.h" line="183" column="11"/>
      </memberdef>
      <memberdef kind="typedef" id="arch_2x86_2ia32_2thread_8h_1a9b38503997978c6dbfdb03448cb38967" prot="public" static="no">
        <type>struct <ref refid="structs__FpRegSetEx" kindref="compound">s_FpRegSetEx</ref></type>
        <definition>typedef struct s_FpRegSetEx tFpRegSetEx</definition>
        <argsstring></argsstring>
        <name>tFpRegSetEx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/thread.h" line="186" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="arch_2x86_2ia32_2thread_8h_1a559de7a9ab93bd874af8fd66a3851d01" prot="public" static="no">
        <type>struct <ref refid="structs__preempFloatReg" kindref="compound">s_preempFloatReg</ref></type>
        <definition>typedef struct s_preempFloatReg tPreempFloatReg</definition>
        <argsstring></argsstring>
        <name>tPreempFloatReg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/arch/x86/ia32/thread.h" line="205" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Per-arch thread definition. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains definitions for</para>
<para>struct _thread_arch struct _callee_saved</para>
<para>necessary to instantiate instances of struct <ref refid="structk__thread" kindref="compound">k_thread</ref>. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_ARCH_X86_IA32_THREAD_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_ARCH_X86_IA32_THREAD_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_EAGER_FPU_SHARING)<sp/>||<sp/>defined(CONFIG_LAZY_FPU_SHARING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_X86_SSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FP_REG_SET_ALIGN<sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FP_REG_SET_ALIGN<sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Unused,<sp/>no<sp/>special<sp/>alignment<sp/>requirements,<sp/>use<sp/>default<sp/>alignment<sp/>for</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>char<sp/>buffers<sp/>on<sp/>this<sp/>arch</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="arch_2x86_2ia32_2thread_8h_1af99d45d7fb31caf8f4abf9306fb654a3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FP_REG_SET_ALIGN<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_*_FP_SHARING<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>Bits<sp/>for<sp/>_thread_arch.flags,<sp/>see<sp/>their<sp/>use<sp/>in<sp/>intstub.S<sp/>et<sp/>al.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="arch_2x86_2ia32_2thread_8h_1adb3b8047e5ebfc1305e7616991913818" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_THREAD_FLAG_INT<sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="arch_2x86_2ia32_2thread_8h_1a01b9d81506f2cacafd8b5c1341d30207" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_THREAD_FLAG_EXC<sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="arch_2x86_2ia32_2thread_8h_1a9976b965d1010def5c40f40be6930461" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_THREAD_FLAG_ALL<sp/>(X86_THREAD_FLAG_INT<sp/>|<sp/>X86_THREAD_FLAG_EXC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_ASMLANGUAGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdint_8h" kindref="compound">stdint.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="mmustructs_8h" kindref="compound">arch/x86/mmustructs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>structure<sp/>defines<sp/>the<sp/>set<sp/>of<sp/>&apos;non-volatile&apos;<sp/>integer<sp/>registers.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>These<sp/>registers<sp/>must<sp/>be<sp/>preserved<sp/>by<sp/>a<sp/>called<sp/>C<sp/>function.<sp/><sp/>These<sp/>are<sp/>the</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>only<sp/>registers<sp/>that<sp/>need<sp/>to<sp/>be<sp/>saved/restored<sp/>when<sp/>a<sp/>cooperative<sp/>context</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>switch<sp/>occurs.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_callee_saved<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>esp;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>following<sp/>registers<sp/>are<sp/>considered<sp/>non-volatile,<sp/>i.e.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>callee-save,</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>their<sp/>values<sp/>are<sp/>pushed<sp/>onto<sp/>the<sp/>stack<sp/>rather<sp/>than<sp/>stored<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>TCS</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>structure:</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>unsigned<sp/>long<sp/>ebp;</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>unsigned<sp/>long<sp/>ebx;</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>unsigned<sp/>long<sp/>esi;</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>unsigned<sp/>long<sp/>edi;</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_callee_saved<sp/>_callee_saved_t;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>The<sp/>macros<sp/>CONFIG_{LAZY|EAGER}_FPU_SHARING<sp/>shall<sp/>be<sp/>set<sp/>to<sp/>indicate<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>saving/restoring<sp/>of<sp/>the<sp/>traditional<sp/>x87<sp/>floating<sp/>point<sp/>(and<sp/>MMX)<sp/>registers</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>are<sp/>supported<sp/>by<sp/>the<sp/>kernel&apos;s<sp/>context<sp/>swapping<sp/>code.<sp/>The<sp/>macro</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>CONFIG_X86_SSE<sp/>shall<sp/>_also_<sp/>be<sp/>set<sp/>if<sp/>saving/restoring<sp/>of<sp/>the<sp/>XMM</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>registers<sp/>is<sp/>also<sp/>supported<sp/>in<sp/>the<sp/>kernel&apos;s<sp/>context<sp/>swapping<sp/>code.</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_EAGER_FPU_SHARING)<sp/>||<sp/>defined(CONFIG_LAZY_FPU_SHARING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>definition<sp/>of<sp/>a<sp/>single<sp/>x87<sp/>(floating<sp/>point<sp/>/<sp/>MMX)<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">s_FpReg<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>[10];<sp/></highlight><highlight class="comment">/*<sp/>80<sp/>bits:<sp/>ST[0-7]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}<sp/>tFpReg;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>is<sp/>the<sp/>&quot;normal&quot;<sp/>floating<sp/>point<sp/>register<sp/>save<sp/>area,<sp/>or</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>more<sp/>accurately<sp/>the<sp/>save<sp/>area<sp/>required<sp/>by<sp/>the<sp/>&apos;fnsave&apos;<sp/>and<sp/>&apos;frstor&apos;</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>instructions.<sp/><sp/>The<sp/>structure<sp/>matches<sp/>the<sp/>layout<sp/>described<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>&quot;Intel(r)<sp/>64<sp/>and<sp/>IA-32<sp/>Architectures<sp/>Software<sp/>Developer&apos;s<sp/>Manual</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>Volume<sp/>1:<sp/>Basic<sp/>Architecture&quot;:<sp/>Protected<sp/>Mode<sp/>x87<sp/>FPU<sp/>State<sp/>Image<sp/>in</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>Memory,<sp/>32-Bit<sp/>Format.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structs__FpRegSet" kindref="compound">s_FpRegSet</ref><sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>#<sp/>of<sp/>bytes:<sp/>name<sp/>of<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>fcw;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>x87<sp/>FPU<sp/>control<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>pad1;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>N/A<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>fsw;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>x87<sp/>FPU<sp/>status<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>pad2;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>N/A<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>ftw;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>x87<sp/>FPU<sp/>tag<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>pad3;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>N/A<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fpuip;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>4<sp/><sp/>:<sp/>x87<sp/>FPU<sp/>instruction<sp/>pointer<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>cs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>x87<sp/>FPU<sp/>instruction<sp/>pointer<sp/>selector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>fop<sp/>:<sp/>11;<sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>x87<sp/>FPU<sp/>opcode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>pad4<sp/>:<sp/>5;<sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>:<sp/>5<sp/>bits<sp/>=<sp/>00000<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fpudp;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>4<sp/><sp/>:<sp/>x87<sp/>FPU<sp/>instr<sp/>operand<sp/>ptr<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>ds;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>x87<sp/>FPU<sp/>instr<sp/>operand<sp/>ptr<sp/>selector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>pad5;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>N/A<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tFpReg<sp/>fpReg[8];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>80<sp/>:<sp/>ST0<sp/>-&gt;<sp/>ST7<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}<sp/><ref refid="structs__FpRegSet" kindref="compound">tFpRegSet</ref><sp/>__aligned(<ref refid="arch_2x86_2ia32_2thread_8h_1af99d45d7fb31caf8f4abf9306fb654a3" kindref="member">FP_REG_SET_ALIGN</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_X86_SSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>definition<sp/>of<sp/>a<sp/>single<sp/>x87<sp/>(floating<sp/>point<sp/>/<sp/>MMX)<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">s_FpRegEx<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>[10];<sp/><sp/></highlight><highlight class="comment">/*<sp/>80<sp/>bits:<sp/>ST[0-7]<sp/>or<sp/>MM[0-7]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rsrvd[6];<sp/></highlight><highlight class="comment">/*<sp/>48<sp/>bits:<sp/>reserved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}<sp/>tFpRegEx;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>definition<sp/>of<sp/>a<sp/>single<sp/>XMM<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">s_XmmReg<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>[16];<sp/></highlight><highlight class="comment">/*<sp/>128<sp/>bits:<sp/>XMM[0-7]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">}<sp/>tXmmReg;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>is<sp/>the<sp/>&quot;extended&quot;<sp/>floating<sp/>point<sp/>register<sp/>save<sp/>area,<sp/>or</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>more<sp/>accurately<sp/>the<sp/>save<sp/>area<sp/>required<sp/>by<sp/>the<sp/>&apos;fxsave&apos;<sp/>and<sp/>&apos;fxrstor&apos;</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>instructions.<sp/><sp/>The<sp/>structure<sp/>matches<sp/>the<sp/>layout<sp/>described<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/>&quot;Intel<sp/>64<sp/>and<sp/>IA-32<sp/>Architectures<sp/>Software<sp/>Developer&apos;s<sp/>Manual</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/>Volume<sp/>2A:<sp/>Instruction<sp/>Set<sp/>Reference,<sp/>A-M&quot;,<sp/>except<sp/>for<sp/>the<sp/>bytes<sp/>from<sp/>offset</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>464<sp/>to<sp/>511<sp/>since<sp/>these<sp/>&quot;are<sp/>available<sp/>to<sp/>software<sp/>use.<sp/>The<sp/>processor<sp/>does</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/>not<sp/>write<sp/>to<sp/>bytes<sp/>464:511<sp/>of<sp/>an<sp/>FXSAVE<sp/>area&quot;.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/>This<sp/>structure<sp/>must<sp/>be<sp/>aligned<sp/>on<sp/>a<sp/>16<sp/>byte<sp/>boundary<sp/>when<sp/>the<sp/>instructions</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/>fxsave/fxrstor<sp/>are<sp/>used<sp/>to<sp/>write/read<sp/>the<sp/>data<sp/>to/from<sp/>the<sp/>structure.</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structs__FpRegSetEx" kindref="compound">s_FpRegSetEx</ref><sp/></highlight><highlight class="comment">/*<sp/>#<sp/>of<sp/>bytes:<sp/>name<sp/>of<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>fcw;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>x87<sp/>FPU<sp/>control<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>fsw;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>x87<sp/>FPU<sp/>status<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ftw;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1<sp/><sp/>:<sp/>x87<sp/>FPU<sp/>abridged<sp/>tag<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rsrvd0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1<sp/><sp/>:<sp/>reserved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>fop;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>x87<sp/>FPU<sp/>opcode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fpuip;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>4<sp/><sp/>:<sp/>x87<sp/>FPU<sp/>instruction<sp/>pointer<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>cs;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>x87<sp/>FPU<sp/>instruction<sp/>pointer<sp/>selector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>rsrvd1;<sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>reserved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fpudp;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>4<sp/><sp/>:<sp/>x87<sp/>FPU<sp/>instr<sp/>operand<sp/>ptr<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>ds;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>x87<sp/>FPU<sp/>instr<sp/>operand<sp/>ptr<sp/>selector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>rsrvd2;<sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/><sp/>:<sp/>reserved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mxcsr;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>4<sp/><sp/>:<sp/>MXCSR<sp/>register<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mxcsrMask;<sp/></highlight><highlight class="comment">/*<sp/>4<sp/><sp/>:<sp/>MXCSR<sp/>register<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tFpRegEx<sp/>fpReg[8];<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>128<sp/>:<sp/>x87<sp/>FPU/MMX<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tXmmReg<sp/>xmmReg[8];<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>128<sp/>:<sp/>XMM<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rsrvd3[176];<sp/></highlight><highlight class="comment">/*<sp/>176<sp/>:<sp/>reserved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">}<sp/><ref refid="structs__FpRegSetEx" kindref="compound">tFpRegSetEx</ref><sp/>__aligned(<ref refid="arch_2x86_2ia32_2thread_8h_1af99d45d7fb31caf8f4abf9306fb654a3" kindref="member">FP_REG_SET_ALIGN</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_X86_SSE<sp/>==<sp/>0<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structs__FpRegSetEx" kindref="compound">s_FpRegSetEx</ref><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}<sp/><ref refid="arch_2x86_2ia32_2thread_8h_1a9b38503997978c6dbfdb03448cb38967" kindref="member">tFpRegSetEx</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_X86_SSE<sp/>==<sp/>0<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!CONFIG_LAZY_FPU_SHARING<sp/>&amp;&amp;<sp/>!CONFIG_EAGER_FPU_SHARING<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>empty<sp/>floating<sp/>point<sp/>register<sp/>definition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="structs__FpRegSet" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structs__FpRegSet" kindref="compound">s_FpRegSet</ref><sp/>{</highlight></codeline>
<codeline lineno="183" refid="arch_2x86_2ia32_2thread_8h_1ac6b7d0ab9f5986eb129f362e4dc39811" refkind="member"><highlight class="normal">}<sp/><ref refid="arch_2x86_2ia32_2thread_8h_1ac6b7d0ab9f5986eb129f362e4dc39811" kindref="member">tFpRegSet</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="structs__FpRegSetEx" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structs__FpRegSetEx" kindref="compound">s_FpRegSetEx</ref><sp/>{</highlight></codeline>
<codeline lineno="186" refid="arch_2x86_2ia32_2thread_8h_1a9b38503997978c6dbfdb03448cb38967" refkind="member"><highlight class="normal">}<sp/><ref refid="arch_2x86_2ia32_2thread_8h_1a9b38503997978c6dbfdb03448cb38967" kindref="member">tFpRegSetEx</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_LAZY_FPU_SHARING<sp/>||<sp/>CONFIG_EAGER_FPU_SHARING<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>structure<sp/>defines<sp/>the<sp/>set<sp/>of<sp/>&apos;volatile&apos;<sp/>x87<sp/>FPU/MMX/SSE</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/>registers.<sp/><sp/>These<sp/>registers<sp/>need<sp/>not<sp/>be<sp/>preserved<sp/>by<sp/>a<sp/>called<sp/>C<sp/>function.</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>Given<sp/>that<sp/>they<sp/>are<sp/>not<sp/>preserved<sp/>across<sp/>function<sp/>calls,<sp/>they<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*<sp/>save/restored<sp/>(along<sp/>with<sp/>s_coopFloatReg)<sp/>when<sp/>a<sp/>preemptive<sp/>context</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>switch<sp/>occurs.</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="structs__preempFloatReg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structs__preempFloatReg" kindref="compound">s_preempFloatReg</ref><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>threads<sp/>with<sp/>K_FP_REGS<sp/>utilize<sp/>this<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="structs__preempFloatReg_1a4acaff08c1a51294d7c45e1144491d86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structs__FpRegSet" kindref="compound">tFpRegSet</ref><sp/><ref refid="structs__preempFloatReg_1a4acaff08c1a51294d7c45e1144491d86" kindref="member">fpRegs</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>threads<sp/>with<sp/>K_SSE_REGS<sp/>utilize<sp/>this<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="structs__preempFloatReg_1a295615b119006e286338175dcb2d2944" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structs__FpRegSetEx" kindref="compound">tFpRegSetEx</ref><sp/><ref refid="structs__preempFloatReg_1a295615b119006e286338175dcb2d2944" kindref="member">fpRegsEx</ref>;</highlight></codeline>
<codeline lineno="204" refid="structs__preempFloatReg_1aa49962d43914ad77112bcb6e4f377d95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structs__preempFloatReg_1aa49962d43914ad77112bcb6e4f377d95" kindref="member">floatRegsUnion</ref>;</highlight></codeline>
<codeline lineno="205" refid="arch_2x86_2ia32_2thread_8h_1a559de7a9ab93bd874af8fd66a3851d01" refkind="member"><highlight class="normal">}<sp/><ref refid="arch_2x86_2ia32_2thread_8h_1a559de7a9ab93bd874af8fd66a3851d01" kindref="member">tPreempFloatReg</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>The<sp/>thread<sp/>control<sp/>structure<sp/>definition.<sp/><sp/>It<sp/>contains<sp/>the</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>various<sp/>fields<sp/>to<sp/>manage<sp/>a<sp/>_single_<sp/>thread.<sp/>The<sp/>TCS<sp/>will<sp/>be<sp/>aligned</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/>to<sp/>the<sp/>appropriate<sp/>architecture<sp/>specific<sp/>boundary<sp/>via<sp/>the</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>arch_new_thread()<sp/>call.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_thread_arch<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CONFIG_X86_COMMON_PAGE_TABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Physical<sp/>address<sp/>of<sp/>the<sp/>page<sp/>tables<sp/>used<sp/>by<sp/>this<sp/>thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref><sp/>ptables;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_X86_COMMON_PAGE_TABLE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initial<sp/>privilege<sp/>mode<sp/>stack<sp/>pointer<sp/>when<sp/>doing<sp/>a<sp/>system<sp/>call.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Un-set<sp/>for<sp/>supervisor<sp/>threads.</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*psp;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_LAZY_FPU_SHARING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Nested<sp/>exception<sp/>count<sp/>to<sp/>maintain<sp/>setting<sp/>of<sp/>EXC_ACTIVE<sp/>flag<sp/>across</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>outermost<sp/>exception.<sp/><sp/>EXC_ACTIVE<sp/>is<sp/>used<sp/>by<sp/>z_swap()<sp/>lazy<sp/>FP</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>save/restore<sp/>and<sp/>by<sp/>debug<sp/>tools.</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>excNestCount;<sp/></highlight><highlight class="comment">/*<sp/>nested<sp/>exception<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_LAZY_FPU_SHARING<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structs__preempFloatReg" kindref="compound">tPreempFloatReg</ref><sp/>preempFloatReg;<sp/></highlight><highlight class="comment">/*<sp/>volatile<sp/>float<sp/>register<sp/>storage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">};</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_thread_arch<sp/>_thread_arch_t;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_ASMLANGUAGE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_ARCH_X86_IA32_THREAD_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/arch/x86/ia32/thread.h"/>
  </compounddef>
</doxygen>
