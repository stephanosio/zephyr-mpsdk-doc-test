<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="gna_8h" kind="file" language="C++">
    <compoundname>gna.h</compoundname>
    <innerclass refid="structgna__config" prot="public">gna_config</innerclass>
    <innerclass refid="structgna__model__header" prot="public">gna_model_header</innerclass>
    <innerclass refid="structgna__model__info" prot="public">gna_model_info</innerclass>
    <innerclass refid="structgna__inference__req" prot="public">gna_inference_req</innerclass>
    <innerclass refid="structgna__inference__stats" prot="public">gna_inference_stats</innerclass>
    <innerclass refid="structgna__inference__resp" prot="public">gna_inference_resp</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__gna__interface_1ga438bac13012dfd1b5fb40879ae4bb338" prot="public" static="no" strong="no">
        <type></type>
        <name>gna_result</name>
        <enumvalue id="group__gna__interface_1gga438bac13012dfd1b5fb40879ae4bb338a1b7f44ece1c841e1c20da678274dbfde" prot="public">
          <name>GNA_RESULT_INFERENCE_COMPLETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gna__interface_1gga438bac13012dfd1b5fb40879ae4bb338a1cdf041d73114fa63530237a3f669d20" prot="public">
          <name>GNA_RESULT_SATURATION_OCCURRED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gna__interface_1gga438bac13012dfd1b5fb40879ae4bb338a28b41ca571655027d806adf9823a8699" prot="public">
          <name>GNA_RESULT_OUTPUT_BUFFER_FULL_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gna__interface_1gga438bac13012dfd1b5fb40879ae4bb338a7e80b9737561a658f820c4d7dd6aa10c" prot="public">
          <name>GNA_RESULT_PARAM_OUT_OF_RANGE_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gna__interface_1gga438bac13012dfd1b5fb40879ae4bb338a813a9df9fe6d3096af2f651ba4845fb6" prot="public">
          <name>GNA_RESULT_GENERIC_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Result of an inference operation </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/gna.h" line="89" column="1" bodyfile="include/drivers/gna.h" bodystart="89" bodyend="95"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gna__interface_1gafcb6aea4dce9bd40182868444d93a024" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int gna_configure</definition>
        <argsstring>(const struct device *dev, struct gna_config *cfg)</argsstring>
        <name>gna_configure</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>struct <ref refid="structgna__config" kindref="compound">gna_config</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Configure the GNA device. </para>
        </briefdescription>
        <detaileddescription>
<para>Configure the GNA device. The GNA device must be configured before registering a model or performing inference</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Device configuration information</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the configuration is successful </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>negative error code in case of a failure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/gna.h" line="148" column="19" bodyfile="include/drivers/gna.h" bodystart="148" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="group__gna__interface_1gac227f92c5c9c5caf5e3553f7237a5aa8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int gna_register_model</definition>
        <argsstring>(const struct device *dev, struct gna_model_info *model, void **model_handle)</argsstring>
        <name>gna_register_model</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>struct <ref refid="structgna__model__info" kindref="compound">gna_model_info</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>model_handle</declname>
        </param>
        <briefdescription>
<para>Register a neural network model. </para>
        </briefdescription>
        <detaileddescription>
<para>Register a neural network model with the GNA device A model needs to be registered before it can be used to perform inference</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>Information about the neural network model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the registered model if registration succeeds</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If registration of the model is successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>negative error code in case of a failure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/gna.h" line="170" column="19" bodyfile="include/drivers/gna.h" bodystart="170" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="group__gna__interface_1ga647864b6df3ebc844d0181cf9fdf8130" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int gna_deregister_model</definition>
        <argsstring>(const struct device *dev, void *model)</argsstring>
        <name>gna_deregister_model</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>De-register a previously registered neural network model. </para>
        </briefdescription>
        <detaileddescription>
<para>De-register a previously registered neural network model from the GNA device De-registration may be done to free up memory for registering another model Once de-registered, the model can no longer be used to perform inference</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>Model handle output by gna_register_model API</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If de-registration of the model is successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>negative error code in case of a failure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/gna.h" line="193" column="19" bodyfile="include/drivers/gna.h" bodystart="193" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="group__gna__interface_1ga2c186fe0fed072f980bdac76b264bbbb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int gna_infer</definition>
        <argsstring>(const struct device *dev, struct gna_inference_req *req, gna_callback callback)</argsstring>
        <name>gna_infer</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>struct <ref refid="structgna__inference__req" kindref="compound">gna_inference_req</ref> *</type>
          <declname>req</declname>
        </param>
        <param>
          <type>gna_callback</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Perform inference on a model with input vectors. </para>
        </briefdescription>
        <detaileddescription>
<para>Make an inference request on a previously registered model with an of input data vector A callback is provided for notification of inference completion</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>Information required to perform inference on a neural network </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>A callback function to notify inference completion</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the request is accepted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>negative error code in case of a failure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/gna.h" line="215" column="19" bodyfile="include/drivers/gna.h" bodystart="215" bodyend="223"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Public API header file for Intel GNA driver. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Intel<sp/>Corporation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Sathish<sp/>Kuttan<sp/>&lt;sathish.k.kuttan@intel.com&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__INCLUDE_GNA__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INCLUDE_GNA__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structgna__config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgna__config" kindref="compound">gna_config</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structgna__model__header" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgna__model__header" kindref="compound">gna_model_header</ref><sp/>{</highlight></codeline>
<codeline lineno="42" refid="structgna__model__header_1a78a5f42dc311e3db59c67665f088d05c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgna__model__header_1a78a5f42dc311e3db59c67665f088d05c" kindref="member">labase_offset</ref>;</highlight></codeline>
<codeline lineno="43" refid="structgna__model__header_1a2367a709b0818d63d080e18f9b023622" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgna__model__header_1a2367a709b0818d63d080e18f9b023622" kindref="member">model_size</ref>;</highlight></codeline>
<codeline lineno="44" refid="structgna__model__header_1aeae780b955b2d572d2f538a2a8f3bcef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgna__model__header_1aeae780b955b2d572d2f538a2a8f3bcef" kindref="member">gna_mode</ref>;</highlight></codeline>
<codeline lineno="45" refid="structgna__model__header_1a0ed355fa2751bb020a39629a832d3fdf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgna__model__header_1a0ed355fa2751bb020a39629a832d3fdf" kindref="member">layer_count</ref>;</highlight></codeline>
<codeline lineno="46" refid="structgna__model__header_1a621ae31f1235bda71a8b69635e650d5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgna__model__header_1a621ae31f1235bda71a8b69635e650d5e" kindref="member">bytes_per_input</ref>;</highlight></codeline>
<codeline lineno="47" refid="structgna__model__header_1ad9abc93f889fc4133219b3f4eda4572e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgna__model__header_1ad9abc93f889fc4133219b3f4eda4572e" kindref="member">bytes_per_output</ref>;</highlight></codeline>
<codeline lineno="48" refid="structgna__model__header_1a510a894eebd9d8b39d5a1e2ce80af355" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgna__model__header_1a510a894eebd9d8b39d5a1e2ce80af355" kindref="member">num_input_nodes</ref>;</highlight></codeline>
<codeline lineno="49" refid="structgna__model__header_1a272cae4eebc9c5be91d54f138ba525ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgna__model__header_1a272cae4eebc9c5be91d54f138ba525ea" kindref="member">num_output_nodes</ref>;</highlight></codeline>
<codeline lineno="50" refid="structgna__model__header_1a46196d8ce2d47d2dc6a6c9e78de79e44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgna__model__header_1a46196d8ce2d47d2dc6a6c9e78de79e44" kindref="member">input_ptr_offset</ref>;</highlight></codeline>
<codeline lineno="51" refid="structgna__model__header_1ab9da0f24783c0949cf8b5548f01c1041" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgna__model__header_1ab9da0f24783c0949cf8b5548f01c1041" kindref="member">output_ptr_offset</ref>;</highlight></codeline>
<codeline lineno="52" refid="structgna__model__header_1a1733defc3d7add869489b2897add2af8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgna__model__header_1a1733defc3d7add869489b2897add2af8" kindref="member">rw_region_size</ref>;</highlight></codeline>
<codeline lineno="53" refid="structgna__model__header_1ac2e2629dca5f0f3b854ab84477d8b777" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgna__model__header_1ac2e2629dca5f0f3b854ab84477d8b777" kindref="member">input_scaling_factor</ref>;</highlight></codeline>
<codeline lineno="54" refid="structgna__model__header_1ab3d2f69ffcd5425333baf6ba96fbc717" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgna__model__header_1ab3d2f69ffcd5425333baf6ba96fbc717" kindref="member">output_scaling_factor</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structgna__model__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgna__model__info" kindref="compound">gna_model_info</ref><sp/>{</highlight></codeline>
<codeline lineno="62" refid="structgna__model__info_1a563aeac4979d30d34e37abc7e674b3cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgna__model__header" kindref="compound">gna_model_header</ref><sp/>*<ref refid="structgna__model__info_1a563aeac4979d30d34e37abc7e674b3cd" kindref="member">header</ref>;</highlight></codeline>
<codeline lineno="63" refid="structgna__model__info_1a25d2fb3300994cfa7ef1d4ace17f15e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structgna__model__info_1a25d2fb3300994cfa7ef1d4ace17f15e2" kindref="member">rw_region</ref>;</highlight></codeline>
<codeline lineno="64" refid="structgna__model__info_1a0512788c18a2077d4eaf241891a681eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structgna__model__info_1a0512788c18a2077d4eaf241891a681eb" kindref="member">ro_region</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structgna__inference__req" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgna__inference__req" kindref="compound">gna_inference_req</ref><sp/>{</highlight></codeline>
<codeline lineno="71" refid="structgna__inference__req_1a949572a48290a1fabe5f6ff7b34c8fe0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structgna__inference__req_1a949572a48290a1fabe5f6ff7b34c8fe0" kindref="member">model_handle</ref>;</highlight></codeline>
<codeline lineno="72" refid="structgna__inference__req_1af70bfc780bd0f1655c273f9eae5483d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structgna__inference__req_1af70bfc780bd0f1655c273f9eae5483d1" kindref="member">input</ref>;</highlight></codeline>
<codeline lineno="73" refid="structgna__inference__req_1aadd85f7d16012a00cdc68dd455707fc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structgna__inference__req_1aadd85f7d16012a00cdc68dd455707fc3" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="74" refid="structgna__inference__req_1a7b01df47939271163faa21aa817644a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structgna__inference__req_1a7b01df47939271163faa21aa817644a2" kindref="member">intermediate</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structgna__inference__stats" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgna__inference__stats" kindref="compound">gna_inference_stats</ref><sp/>{</highlight></codeline>
<codeline lineno="81" refid="structgna__inference__stats_1a2174f2578eb9fd2e17bef0da629016dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structgna__inference__stats_1a2174f2578eb9fd2e17bef0da629016dd" kindref="member">total_cycles</ref>;</highlight></codeline>
<codeline lineno="82" refid="structgna__inference__stats_1a32df8df5f556cdda5c874b578bf59dd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structgna__inference__stats_1a32df8df5f556cdda5c874b578bf59dd8" kindref="member">stall_cycles</ref>;</highlight></codeline>
<codeline lineno="83" refid="structgna__inference__stats_1a27eda18ae11179d7770c03c1e44cd8ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structgna__inference__stats_1a27eda18ae11179d7770c03c1e44cd8ab" kindref="member">cycles_per_sec</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="group__gna__interface_1ga438bac13012dfd1b5fb40879ae4bb338" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__gna__interface_1ga438bac13012dfd1b5fb40879ae4bb338" kindref="member">gna_result</ref><sp/>{</highlight></codeline>
<codeline lineno="90" refid="group__gna__interface_1gga438bac13012dfd1b5fb40879ae4bb338a1b7f44ece1c841e1c20da678274dbfde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gna__interface_1gga438bac13012dfd1b5fb40879ae4bb338a1b7f44ece1c841e1c20da678274dbfde" kindref="member">GNA_RESULT_INFERENCE_COMPLETE</ref>,</highlight></codeline>
<codeline lineno="91" refid="group__gna__interface_1gga438bac13012dfd1b5fb40879ae4bb338a1cdf041d73114fa63530237a3f669d20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gna__interface_1gga438bac13012dfd1b5fb40879ae4bb338a1cdf041d73114fa63530237a3f669d20" kindref="member">GNA_RESULT_SATURATION_OCCURRED</ref>,</highlight></codeline>
<codeline lineno="92" refid="group__gna__interface_1gga438bac13012dfd1b5fb40879ae4bb338a28b41ca571655027d806adf9823a8699" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gna__interface_1gga438bac13012dfd1b5fb40879ae4bb338a28b41ca571655027d806adf9823a8699" kindref="member">GNA_RESULT_OUTPUT_BUFFER_FULL_ERROR</ref>,</highlight></codeline>
<codeline lineno="93" refid="group__gna__interface_1gga438bac13012dfd1b5fb40879ae4bb338a7e80b9737561a658f820c4d7dd6aa10c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gna__interface_1gga438bac13012dfd1b5fb40879ae4bb338a7e80b9737561a658f820c4d7dd6aa10c" kindref="member">GNA_RESULT_PARAM_OUT_OF_RANGE_ERROR</ref>,</highlight></codeline>
<codeline lineno="94" refid="group__gna__interface_1gga438bac13012dfd1b5fb40879ae4bb338a813a9df9fe6d3096af2f651ba4845fb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gna__interface_1gga438bac13012dfd1b5fb40879ae4bb338a813a9df9fe6d3096af2f651ba4845fb6" kindref="member">GNA_RESULT_GENERIC_ERROR</ref>,</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="structgna__inference__resp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgna__inference__resp" kindref="compound">gna_inference_resp</ref><sp/>{</highlight></codeline>
<codeline lineno="101" refid="structgna__inference__resp_1a474d677e8225d8826aa486d076c958fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__gna__interface_1ga438bac13012dfd1b5fb40879ae4bb338" kindref="member">gna_result</ref><sp/><ref refid="structgna__inference__resp_1a474d677e8225d8826aa486d076c958fc" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="102" refid="structgna__inference__resp_1aa5fb431b7fd8dd7398504a5654f8bbe6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structgna__inference__resp_1aa5fb431b7fd8dd7398504a5654f8bbe6" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="103" refid="structgna__inference__resp_1a47dbefa17d26fea54fc105c55e047ea8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structgna__inference__resp_1a47dbefa17d26fea54fc105c55e047ea8" kindref="member">output_len</ref>;</highlight></codeline>
<codeline lineno="104" refid="structgna__inference__resp_1a8be1258a9007ec1048214bb185fdb714" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgna__inference__stats" kindref="compound">gna_inference_stats</ref><sp/><ref refid="structgna__inference__resp_1a8be1258a9007ec1048214bb185fdb714" kindref="member">stats</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*gna_callback)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgna__inference__resp" kindref="compound">gna_inference_resp</ref><sp/>*<ref refid="errno_8c_1a1bd85a6c09e3fbc49f7e810787317c5f" kindref="member">result</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*gna_api_config)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgna__config" kindref="compound">gna_config</ref><sp/>*cfg);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*gna_api_register)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgna__model__info" kindref="compound">gna_model_info</ref><sp/>*model,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**model_handle);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*gna_api_deregister)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*model_handle);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*gna_api_infer)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgna__inference__req" kindref="compound">gna_inference_req</ref><sp/>*req,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gna_callback<sp/>callback);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">gna_driver_api<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gna_api_config<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configure;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gna_api_register<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>register_model;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gna_api_deregister<sp/><sp/><sp/><sp/><sp/><sp/>deregister_model;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gna_api_infer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infer;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="group__gna__interface_1gafcb6aea4dce9bd40182868444d93a024" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__gna__interface_1gafcb6aea4dce9bd40182868444d93a024" kindref="member">gna_configure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structgna__config" kindref="compound">gna_config</ref><sp/>*cfg)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">gna_driver_api<sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">gna_driver_api<sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;configure(dev,<sp/>cfg);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="group__gna__interface_1gac227f92c5c9c5caf5e3553f7237a5aa8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__gna__interface_1gac227f92c5c9c5caf5e3553f7237a5aa8" kindref="member">gna_register_model</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structgna__model__info" kindref="compound">gna_model_info</ref><sp/>*model,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**model_handle)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">gna_driver_api<sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">gna_driver_api<sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;register_model(dev,<sp/>model,<sp/>model_handle);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="group__gna__interface_1ga647864b6df3ebc844d0181cf9fdf8130" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__gna__interface_1ga647864b6df3ebc844d0181cf9fdf8130" kindref="member">gna_deregister_model</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*model)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">gna_driver_api<sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">gna_driver_api<sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;deregister_model(dev,<sp/>model);</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="group__gna__interface_1ga2c186fe0fed072f980bdac76b264bbbb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__gna__interface_1ga2c186fe0fed072f980bdac76b264bbbb" kindref="member">gna_infer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structgna__inference__req" kindref="compound">gna_inference_req</ref><sp/>*req,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gna_callback<sp/>callback)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">gna_driver_api<sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">gna_driver_api<sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;infer(dev,<sp/>req,<sp/>callback);</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__INCLUDE_GNA__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/drivers/gna.h"/>
  </compounddef>
</doxygen>
