<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__settings__backend" kind="group">
    <compoundname>settings_backend</compoundname>
    <title>Settings backend interface</title>
    <innerclass refid="structsettings__store" prot="public">settings_store</innerclass>
    <innerclass refid="structsettings__load__arg" prot="public">settings_load_arg</innerclass>
    <innerclass refid="structsettings__store__itf" prot="public">settings_store_itf</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__settings__backend_1gad16bb70588cf69873f8872d7bf90e1c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void settings_src_register</definition>
        <argsstring>(struct settings_store *cs)</argsstring>
        <name>settings_src_register</name>
        <param>
          <type>struct <ref refid="structsettings__store" kindref="compound">settings_store</ref> *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a backend handler acting as source.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cs</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend handler node containing handler information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/settings/settings.h" line="460" column="6" declfile="include/settings/settings.h" declline="460" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__settings__backend_1ga37bcada0be44b023cd3759e519e69d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void settings_dst_register</definition>
        <argsstring>(struct settings_store *cs)</argsstring>
        <name>settings_dst_register</name>
        <param>
          <type>struct <ref refid="structsettings__store" kindref="compound">settings_store</ref> *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a backend handler acting as destination.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cs</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend handler node containing handler information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/settings/settings.h" line="468" column="6" declfile="include/settings/settings.h" declline="468" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__settings__backend_1gab03a10ed0b65809369b4b6f220aa3df6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structsettings__handler__static" kindref="compound">settings_handler_static</ref> *</type>
        <definition>struct settings_handler_static * settings_parse_and_lookup</definition>
        <argsstring>(const char *name, const char **next)</argsstring>
        <name>settings_parse_and_lookup</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses a key to an array of elements and locate corresponding module handler.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>in string format </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">next</parametername>
</parameternamelist>
<parameterdescription>
<para>remaining of name after matched handler</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structsettings__handler__static" kindref="compound">settings_handler_static</ref> on success, NULL on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/settings/settings.h" line="483" column="30" declfile="include/settings/settings.h" declline="483" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="group__settings__backend_1gaf94e311eba2b109cdbddd2767e502e77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int settings_call_set_handler</definition>
        <argsstring>(const char *name, size_t len, settings_read_cb read_cb, void *read_cb_arg, const struct settings_load_arg *load_arg)</argsstring>
        <name>settings_call_set_handler</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="group__settings_1ga51cdac276c1fb8cd27fc3eec42749a04" kindref="member">settings_read_cb</ref></type>
          <declname>read_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>read_cb_arg</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsettings__load__arg" kindref="compound">settings_load_arg</ref> *</type>
          <declname>load_arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calls settings handler.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the data found in the backend. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the data found in the backend. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">read_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Function provided to read the data from the backend. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">read_cb_arg</parametername>
</parameternamelist>
<parameterdescription>
<para>Arguments for the read function provided by the backend. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">load_arg</parametername>
</parameternamelist>
<parameterdescription>
<para>Arguments for data loading.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 or negative error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/settings/settings.h" line="499" column="5" declfile="include/settings/settings.h" declline="499" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>settings </para>
    </detaileddescription>
  </compounddef>
</doxygen>
