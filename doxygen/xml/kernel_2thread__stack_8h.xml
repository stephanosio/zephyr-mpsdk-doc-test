<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="kernel_2thread__stack_8h" kind="file" language="C++">
    <compoundname>thread_stack.h</compoundname>
    <includes local="no">arch/cpu.h</includes>
    <includes refid="util_8h" local="no">sys/util.h</includes>
    <includedby refid="kernel__includes_8h" local="no">include/kernel_includes.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="4">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="10">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="2">
        <label>arch/cpu.h</label>
      </node>
      <node id="9">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>include/cache.h</label>
        <link refid="cache_8h"/>
      </node>
      <node id="6">
        <label>include/device.h</label>
        <link refid="device_8h"/>
      </node>
      <node id="7">
        <label>include/drivers/pcie/endpoint/pcie_ep.h</label>
        <link refid="pcie__ep_8h"/>
      </node>
      <node id="5">
        <label>include/init.h</label>
        <link refid="init_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="182">
        <label>include/posix/pthread.h</label>
        <link refid="pthread_8h"/>
      </node>
      <node id="184">
        <label>include/smf.h</label>
        <link refid="smf_8h"/>
      </node>
      <node id="179">
        <label>include/syscall_handler.h</label>
        <link refid="syscall__handler_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
      </node>
      <node id="180">
        <label>include/timeout_q.h</label>
        <link refid="timeout__q_8h"/>
        <childnode refid="181" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>include/wait_q.h</label>
        <link refid="wait__q_8h"/>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>include/xen/console.h</label>
        <link refid="xen_2console_8h"/>
      </node>
      <node id="183">
        <label>include/zephyr.h</label>
        <link refid="zephyr_8h"/>
        <childnode refid="184" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>subsys/testsuite/ztest/include/ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>subsys/testsuite/ztest/include/ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>subsys/testsuite/ztest/include/ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>subsys/testsuite/ztest/include/ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="178">
        <label>subsys/testsuite/ztest/include/ztest_test_new.h</label>
        <link refid="ztest__test__new_8h"/>
      </node>
      <node id="13">
        <label>tests/kernel/common/src/atomic.c</label>
        <link refid="atomic_8c"/>
      </node>
      <node id="14">
        <label>tests/kernel/common/src/bitarray.c</label>
        <link refid="bitarray_8c"/>
      </node>
      <node id="15">
        <label>tests/kernel/common/src/bitfield.c</label>
        <link refid="bitfield_8c"/>
      </node>
      <node id="16">
        <label>tests/kernel/common/src/boot_delay.c</label>
        <link refid="boot__delay_8c"/>
      </node>
      <node id="17">
        <label>tests/kernel/common/src/byteorder.c</label>
        <link refid="byteorder_8c"/>
      </node>
      <node id="18">
        <label>tests/kernel/common/src/clock.c</label>
        <link refid="clock_8c"/>
      </node>
      <node id="19">
        <label>tests/kernel/common/src/errno.c</label>
        <link refid="errno_8c"/>
      </node>
      <node id="20">
        <label>tests/kernel/common/src/irq_offload.c</label>
        <link refid="irq__offload_8c"/>
      </node>
      <node id="21">
        <label>tests/kernel/common/src/main.c</label>
        <link refid="common_2src_2main_8c"/>
      </node>
      <node id="22">
        <label>tests/kernel/common/src/multilib.c</label>
        <link refid="multilib_8c"/>
      </node>
      <node id="23">
        <label>tests/kernel/common/src/printk.c</label>
        <link refid="printk_8c"/>
      </node>
      <node id="24">
        <label>tests/kernel/common/src/timeout_order.c</label>
        <link refid="timeout__order_8c"/>
      </node>
      <node id="25">
        <label>tests/kernel/condvar/condvar_api/src/main.c</label>
        <link refid="condvar_2condvar__api_2src_2main_8c"/>
      </node>
      <node id="26">
        <label>tests/kernel/context/src/main.c</label>
        <link refid="context_2src_2main_8c"/>
      </node>
      <node id="27">
        <label>tests/kernel/device/src/abstract_driver.c</label>
        <link refid="abstract__driver_8c"/>
      </node>
      <node id="28">
        <label>tests/kernel/device/src/abstract_driver.h</label>
        <link refid="abstract__driver_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>tests/kernel/device/src/main.c</label>
        <link refid="device_2src_2main_8c"/>
      </node>
      <node id="30">
        <label>tests/kernel/device/src/mmio.c</label>
        <link refid="mmio_8c"/>
      </node>
      <node id="31">
        <label>tests/kernel/device/src/test_driver_init.c</label>
        <link refid="test__driver__init_8c"/>
      </node>
      <node id="32">
        <label>tests/kernel/early_sleep/src/main.c</label>
        <link refid="early__sleep_2src_2main_8c"/>
      </node>
      <node id="33">
        <label>tests/kernel/events/event_api/src/main.c</label>
        <link refid="events_2event__api_2src_2main_8c"/>
      </node>
      <node id="34">
        <label>tests/kernel/events/event_api/src/test_event_apis.c</label>
        <link refid="test__event__apis_8c"/>
      </node>
      <node id="35">
        <label>tests/kernel/events/sys_event/src/main.c</label>
        <link refid="events_2sys__event_2src_2main_8c"/>
      </node>
      <node id="36">
        <label>tests/kernel/fatal/exception/src/main.c</label>
        <link refid="fatal_2exception_2src_2main_8c"/>
      </node>
      <node id="37">
        <label>tests/kernel/fatal/no-multithreading/src/main.c</label>
        <link refid="fatal_2no-multithreading_2src_2main_8c"/>
      </node>
      <node id="38">
        <label>tests/kernel/fifo/fifo_api/src/main.c</label>
        <link refid="fifo_2fifo__api_2src_2main_8c"/>
      </node>
      <node id="39">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo.h</label>
        <link refid="test__fifo_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_cancel.c</label>
        <link refid="test__fifo__cancel_8c"/>
      </node>
      <node id="41">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_contexts.c</label>
        <link refid="test__fifo__contexts_8c"/>
      </node>
      <node id="42">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_fail.c</label>
        <link refid="test__fifo__fail_8c"/>
      </node>
      <node id="43">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_loop.c</label>
        <link refid="test__fifo__loop_8c"/>
      </node>
      <node id="44">
        <label>tests/kernel/fifo/fifo_timeout/src/main.c</label>
        <link refid="fifo_2fifo__timeout_2src_2main_8c"/>
      </node>
      <node id="45">
        <label>tests/kernel/fifo/fifo_usage/src/main.c</label>
        <link refid="fifo_2fifo__usage_2src_2main_8c"/>
      </node>
      <node id="46">
        <label>tests/kernel/fpu_sharing/float_disable/src/k_float_disable.c</label>
        <link refid="k__float__disable_8c"/>
      </node>
      <node id="47">
        <label>tests/kernel/fpu_sharing/float_disable/src/main.c</label>
        <link refid="fpu__sharing_2float__disable_2src_2main_8c"/>
      </node>
      <node id="48">
        <label>tests/kernel/fpu_sharing/generic/src/load_store.c</label>
        <link refid="load__store_8c"/>
      </node>
      <node id="49">
        <label>tests/kernel/fpu_sharing/generic/src/main.c</label>
        <link refid="fpu__sharing_2generic_2src_2main_8c"/>
      </node>
      <node id="50">
        <label>tests/kernel/fpu_sharing/generic/src/pi.c</label>
        <link refid="pi_8c"/>
      </node>
      <node id="51">
        <label>tests/kernel/gen_isr_table/src/main.c</label>
        <link refid="gen__isr__table_2src_2main_8c"/>
      </node>
      <node id="52">
        <label>tests/kernel/interrupt/src/direct_isr.c</label>
        <link refid="direct__isr_8c"/>
      </node>
      <node id="53">
        <label>tests/kernel/interrupt/src/dynamic_isr.c</label>
        <link refid="dynamic__isr_8c"/>
      </node>
      <node id="54">
        <label>tests/kernel/interrupt/src/interrupt_offload.c</label>
        <link refid="interrupt__offload_8c"/>
      </node>
      <node id="55">
        <label>tests/kernel/interrupt/src/main.c</label>
        <link refid="interrupt_2src_2main_8c"/>
      </node>
      <node id="56">
        <label>tests/kernel/interrupt/src/nested_irq.c</label>
        <link refid="nested__irq_8c"/>
      </node>
      <node id="57">
        <label>tests/kernel/interrupt/src/prevent_irq.c</label>
        <link refid="prevent__irq_8c"/>
      </node>
      <node id="58">
        <label>tests/kernel/interrupt/src/regular_isr.c</label>
        <link refid="regular__isr_8c"/>
      </node>
      <node id="59">
        <label>tests/kernel/lifo/lifo_api/src/main.c</label>
        <link refid="lifo_2lifo__api_2src_2main_8c"/>
      </node>
      <node id="60">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo.h</label>
        <link refid="test__lifo_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo_contexts.c</label>
        <link refid="test__lifo__contexts_8c"/>
      </node>
      <node id="62">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo_fail.c</label>
        <link refid="test__lifo__fail_8c"/>
      </node>
      <node id="63">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo_loop.c</label>
        <link refid="test__lifo__loop_8c"/>
      </node>
      <node id="64">
        <label>tests/kernel/lifo/lifo_usage/src/main.c</label>
        <link refid="lifo_2lifo__usage_2src_2main_8c"/>
      </node>
      <node id="65">
        <label>tests/kernel/mbox/mbox_api/src/main.c</label>
        <link refid="mbox_2mbox__api_2src_2main_8c"/>
      </node>
      <node id="66">
        <label>tests/kernel/mbox/mbox_api/src/test_mbox_api.c</label>
        <link refid="test__mbox__api_8c"/>
      </node>
      <node id="67">
        <label>tests/kernel/mbox/mbox_usage/src/main.c</label>
        <link refid="mbox_2mbox__usage_2src_2main_8c"/>
      </node>
      <node id="68">
        <label>tests/kernel/mem_heap/k_heap_api/src/main.c</label>
        <link refid="mem__heap_2k__heap__api_2src_2main_8c"/>
      </node>
      <node id="69">
        <label>tests/kernel/mem_heap/k_heap_api/src/test_kheap_api.c</label>
        <link refid="test__kheap__api_8c"/>
      </node>
      <node id="70">
        <label>tests/kernel/mem_heap/mheap_api_concept/src/main.c</label>
        <link refid="mem__heap_2mheap__api__concept_2src_2main_8c"/>
      </node>
      <node id="71">
        <label>tests/kernel/mem_heap/mheap_api_concept/src/test_mheap_api.c</label>
        <link refid="test__mheap__api_8c"/>
      </node>
      <node id="72">
        <label>tests/kernel/mem_heap/mheap_api_concept/src/test_mheap_concept.c</label>
        <link refid="test__mheap__concept_8c"/>
      </node>
      <node id="73">
        <label>tests/kernel/mem_heap/shared_multi_heap/src/main.c</label>
        <link refid="mem__heap_2shared__multi__heap_2src_2main_8c"/>
      </node>
      <node id="74">
        <label>tests/kernel/mem_protect/demand_paging/src/main.c</label>
        <link refid="mem__protect_2demand__paging_2src_2main_8c"/>
      </node>
      <node id="75">
        <label>tests/kernel/mem_protect/futex/src/main.c</label>
        <link refid="mem__protect_2futex_2src_2main_8c"/>
      </node>
      <node id="76">
        <label>tests/kernel/mem_protect/mem_map/src/main.c</label>
        <link refid="mem__protect_2mem__map_2src_2main_8c"/>
      </node>
      <node id="77">
        <label>tests/kernel/mem_protect/mem_protect/src/common.c</label>
        <link refid="common_8c"/>
      </node>
      <node id="80">
        <label>tests/kernel/mem_protect/mem_protect/src/inherit.c</label>
        <link refid="inherit_8c"/>
      </node>
      <node id="81">
        <label>tests/kernel/mem_protect/mem_protect/src/kobject.c</label>
        <link refid="kobject_8c"/>
      </node>
      <node id="78">
        <label>tests/kernel/mem_protect/mem_protect/src/main.c</label>
        <link refid="mem__protect_2mem__protect_2src_2main_8c"/>
      </node>
      <node id="82">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_domain.c</label>
        <link refid="mem__domain_8c"/>
      </node>
      <node id="83">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_partition.c</label>
        <link refid="mem__partition_8c"/>
      </node>
      <node id="79">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_protect.h</label>
        <link refid="mem__protect_8h"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>tests/kernel/mem_protect/obj_validation/src/main.c</label>
        <link refid="mem__protect_2obj__validation_2src_2main_8c"/>
      </node>
      <node id="85">
        <label>tests/kernel/mem_protect/protection/src/main.c</label>
        <link refid="mem__protect_2protection_2src_2main_8c"/>
      </node>
      <node id="86">
        <label>tests/kernel/mem_protect/stack_random/src/main.c</label>
        <link refid="mem__protect_2stack__random_2src_2main_8c"/>
      </node>
      <node id="87">
        <label>tests/kernel/mem_protect/stackprot/src/main.c</label>
        <link refid="mem__protect_2stackprot_2src_2main_8c"/>
      </node>
      <node id="88">
        <label>tests/kernel/mem_protect/sys_sem/src/main.c</label>
        <link refid="mem__protect_2sys__sem_2src_2main_8c"/>
      </node>
      <node id="89">
        <label>tests/kernel/mem_protect/syscalls/src/main.c</label>
        <link refid="mem__protect_2syscalls_2src_2main_8c"/>
      </node>
      <node id="90">
        <label>tests/kernel/mem_protect/userspace/src/main.c</label>
        <link refid="mem__protect_2userspace_2src_2main_8c"/>
      </node>
      <node id="91">
        <label>tests/kernel/mem_slab/mslab/src/main.c</label>
        <link refid="mem__slab_2mslab_2src_2main_8c"/>
      </node>
      <node id="92">
        <label>tests/kernel/mem_slab/mslab_api/src/main.c</label>
        <link refid="mem__slab_2mslab__api_2src_2main_8c"/>
      </node>
      <node id="93">
        <label>tests/kernel/mem_slab/mslab_api/src/test_mslab_api.c</label>
        <link refid="test__mslab__api_8c"/>
      </node>
      <node id="94">
        <label>tests/kernel/mem_slab/mslab_api/src/test_mslab_extern.c</label>
        <link refid="test__mslab__extern_8c"/>
      </node>
      <node id="95">
        <label>tests/kernel/mem_slab/mslab_concept/src/main.c</label>
        <link refid="mem__slab_2mslab__concept_2src_2main_8c"/>
      </node>
      <node id="96">
        <label>tests/kernel/mem_slab/mslab_concept/src/test_mslab_alloc_wait.c</label>
        <link refid="test__mslab__alloc__wait_8c"/>
      </node>
      <node id="97">
        <label>tests/kernel/mem_slab/mslab_threadsafe/src/main.c</label>
        <link refid="mem__slab_2mslab__threadsafe_2src_2main_8c"/>
      </node>
      <node id="98">
        <label>tests/kernel/mem_slab/mslab_threadsafe/src/test_mslab_threadsafe.c</label>
        <link refid="test__mslab__threadsafe_8c"/>
      </node>
      <node id="99">
        <label>tests/kernel/mp/src/main.c</label>
        <link refid="mp_2src_2main_8c"/>
      </node>
      <node id="100">
        <label>tests/kernel/msgq/msgq_api/src/main.c</label>
        <link refid="msgq_2msgq__api_2src_2main_8c"/>
      </node>
      <node id="101">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq.h</label>
        <link refid="test__msgq_8h"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_attrs.c</label>
        <link refid="test__msgq__attrs_8c"/>
      </node>
      <node id="103">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c</label>
        <link refid="test__msgq__contexts_8c"/>
      </node>
      <node id="104">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_fail.c</label>
        <link refid="test__msgq__fail_8c"/>
      </node>
      <node id="105">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_purge.c</label>
        <link refid="test__msgq__purge_8c"/>
      </node>
      <node id="106">
        <label>tests/kernel/msgq/msgq_usage/src/main.c</label>
        <link refid="msgq_2msgq__usage_2src_2main_8c"/>
      </node>
      <node id="107">
        <label>tests/kernel/mutex/mutex_api/src/test_mutex_apis.c</label>
        <link refid="test__mutex__apis_8c"/>
      </node>
      <node id="108">
        <label>tests/kernel/mutex/mutex_error_case/src/test_mutex_error.c</label>
        <link refid="test__mutex__error_8c"/>
      </node>
      <node id="109">
        <label>tests/kernel/mutex/sys_mutex/src/main.c</label>
        <link refid="mutex_2sys__mutex_2src_2main_8c"/>
      </node>
      <node id="110">
        <label>tests/kernel/mutex/sys_mutex/src/thread_competition.c</label>
        <link refid="thread__competition_8c"/>
      </node>
      <node id="111">
        <label>tests/kernel/obj_tracking/src/main.c</label>
        <link refid="obj__tracking_2src_2main_8c"/>
      </node>
      <node id="112">
        <label>tests/kernel/pending/src/main.c</label>
        <link refid="pending_2src_2main_8c"/>
      </node>
      <node id="113">
        <label>tests/kernel/pipe/pipe/src/main.c</label>
        <link refid="pipe_2pipe_2src_2main_8c"/>
      </node>
      <node id="114">
        <label>tests/kernel/pipe/pipe/src/test_pipe.c</label>
        <link refid="test__pipe_8c"/>
      </node>
      <node id="115">
        <label>tests/kernel/pipe/pipe_api/src/main.c</label>
        <link refid="pipe_2pipe__api_2src_2main_8c"/>
      </node>
      <node id="116">
        <label>tests/kernel/pipe/pipe_api/src/test_pipe_avail.c</label>
        <link refid="test__pipe__avail_8c"/>
      </node>
      <node id="117">
        <label>tests/kernel/pipe/pipe_api/src/test_pipe_contexts.c</label>
        <link refid="test__pipe__contexts_8c"/>
      </node>
      <node id="118">
        <label>tests/kernel/pipe/pipe_api/src/test_pipe_fail.c</label>
        <link refid="test__pipe__fail_8c"/>
      </node>
      <node id="119">
        <label>tests/kernel/poll/src/main.c</label>
        <link refid="poll_2src_2main_8c"/>
      </node>
      <node id="120">
        <label>tests/kernel/poll/src/test_poll.c</label>
        <link refid="test__poll_8c"/>
      </node>
      <node id="121">
        <label>tests/kernel/poll/src/test_poll_fail.c</label>
        <link refid="test__poll__fail_8c"/>
      </node>
      <node id="122">
        <label>tests/kernel/profiling/profiling_api/src/main.c</label>
        <link refid="profiling_2profiling__api_2src_2main_8c"/>
      </node>
      <node id="123">
        <label>tests/kernel/queue/src/main.c</label>
        <link refid="queue_2src_2main_8c"/>
      </node>
      <node id="124">
        <label>tests/kernel/queue/src/test_queue.h</label>
        <link refid="test__queue_8h"/>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>tests/kernel/queue/src/test_queue_contexts.c</label>
        <link refid="test__queue__contexts_8c"/>
      </node>
      <node id="126">
        <label>tests/kernel/queue/src/test_queue_fail.c</label>
        <link refid="test__queue__fail_8c"/>
      </node>
      <node id="127">
        <label>tests/kernel/queue/src/test_queue_loop.c</label>
        <link refid="test__queue__loop_8c"/>
      </node>
      <node id="128">
        <label>tests/kernel/queue/src/test_queue_user.c</label>
        <link refid="test__queue__user_8c"/>
      </node>
      <node id="129">
        <label>tests/kernel/sched/deadline/src/main.c</label>
        <link refid="sched_2deadline_2src_2main_8c"/>
      </node>
      <node id="130">
        <label>tests/kernel/sched/metairq/src/main.c</label>
        <link refid="sched_2metairq_2src_2main_8c"/>
      </node>
      <node id="131">
        <label>tests/kernel/sched/preempt/src/main.c</label>
        <link refid="sched_2preempt_2src_2main_8c"/>
      </node>
      <node id="134">
        <label>tests/kernel/sched/schedule_api/src/main.c</label>
        <link refid="sched_2schedule__api_2src_2main_8c"/>
      </node>
      <node id="132">
        <label>tests/kernel/sched/schedule_api/src/test_priority_scheduling.c</label>
        <link refid="test__priority__scheduling_8c"/>
      </node>
      <node id="133">
        <label>tests/kernel/sched/schedule_api/src/test_sched.h</label>
        <link refid="test__sched_8h"/>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>tests/kernel/sched/schedule_api/src/test_sched_is_preempt_thread.c</label>
        <link refid="test__sched__is__preempt__thread_8c"/>
      </node>
      <node id="136">
        <label>tests/kernel/sched/schedule_api/src/test_sched_priority.c</label>
        <link refid="test__sched__priority_8c"/>
      </node>
      <node id="137">
        <label>tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c</label>
        <link refid="test__sched__timeslice__and__lock_8c"/>
      </node>
      <node id="138">
        <label>tests/kernel/sched/schedule_api/src/test_sched_timeslice_reset.c</label>
        <link refid="test__sched__timeslice__reset_8c"/>
      </node>
      <node id="139">
        <label>tests/kernel/sched/schedule_api/src/test_slice_scheduling.c</label>
        <link refid="test__slice__scheduling_8c"/>
      </node>
      <node id="140">
        <label>tests/kernel/sched/schedule_api/src/user_api.c</label>
        <link refid="user__api_8c"/>
      </node>
      <node id="141">
        <label>tests/kernel/semaphore/semaphore/src/main.c</label>
        <link refid="semaphore_2semaphore_2src_2main_8c"/>
      </node>
      <node id="142">
        <label>tests/kernel/semaphore/sys_sem/src/main.c</label>
        <link refid="semaphore_2sys__sem_2src_2main_8c"/>
      </node>
      <node id="143">
        <label>tests/kernel/sleep/src/main.c</label>
        <link refid="sleep_2src_2main_8c"/>
      </node>
      <node id="144">
        <label>tests/kernel/sleep/src/usleep.c</label>
        <link refid="usleep_8c"/>
      </node>
      <node id="145">
        <label>tests/kernel/smp/src/main.c</label>
        <link refid="smp_2src_2main_8c"/>
      </node>
      <node id="146">
        <label>tests/kernel/smp_boot_delay/src/main.c</label>
        <link refid="smp__boot__delay_2src_2main_8c"/>
      </node>
      <node id="147">
        <label>tests/kernel/spinlock/src/main.c</label>
        <link refid="spinlock_2src_2main_8c"/>
      </node>
      <node id="148">
        <label>tests/kernel/spinlock/src/spinlock_error_case.c</label>
        <link refid="spinlock__error__case_8c"/>
      </node>
      <node id="149">
        <label>tests/kernel/stack/stack/src/main.c</label>
        <link refid="stack_2stack_2src_2main_8c"/>
      </node>
      <node id="150">
        <label>tests/kernel/stack/stack/src/test_stack_contexts.c</label>
        <link refid="test__stack__contexts_8c"/>
      </node>
      <node id="151">
        <label>tests/kernel/stack/stack/src/test_stack_fail.c</label>
        <link refid="test__stack__fail_8c"/>
      </node>
      <node id="152">
        <label>tests/kernel/threads/dynamic_thread/src/main.c</label>
        <link refid="threads_2dynamic__thread_2src_2main_8c"/>
      </node>
      <node id="153">
        <label>tests/kernel/threads/no-multithreading/src/main.c</label>
        <link refid="threads_2no-multithreading_2src_2main_8c"/>
      </node>
      <node id="154">
        <label>tests/kernel/threads/thread_apis/src/main.c</label>
        <link refid="threads_2thread__apis_2src_2main_8c"/>
      </node>
      <node id="155">
        <label>tests/kernel/threads/thread_apis/src/test_essential_thread.c</label>
        <link refid="test__essential__thread_8c"/>
      </node>
      <node id="156">
        <label>tests/kernel/threads/thread_apis/src/test_kthread_for_each.c</label>
        <link refid="test__kthread__for__each_8c"/>
      </node>
      <node id="157">
        <label>tests/kernel/threads/thread_apis/src/test_threads_cancel_abort.c</label>
        <link refid="test__threads__cancel__abort_8c"/>
      </node>
      <node id="158">
        <label>tests/kernel/threads/thread_apis/src/test_threads_cpu_mask.c</label>
        <link refid="test__threads__cpu__mask_8c"/>
      </node>
      <node id="159">
        <label>tests/kernel/threads/thread_apis/src/test_threads_set_priority.c</label>
        <link refid="test__threads__set__priority_8c"/>
      </node>
      <node id="160">
        <label>tests/kernel/threads/thread_apis/src/test_threads_spawn.c</label>
        <link refid="test__threads__spawn_8c"/>
      </node>
      <node id="161">
        <label>tests/kernel/threads/thread_apis/src/test_threads_suspend_resume.c</label>
        <link refid="test__threads__suspend__resume_8c"/>
      </node>
      <node id="162">
        <label>tests/kernel/threads/thread_error_case/src/main.c</label>
        <link refid="threads_2thread__error__case_2src_2main_8c"/>
      </node>
      <node id="163">
        <label>tests/kernel/threads/thread_init/src/main.c</label>
        <link refid="threads_2thread__init_2src_2main_8c"/>
      </node>
      <node id="164">
        <label>tests/kernel/threads/thread_stack/src/main.c</label>
        <link refid="threads_2thread__stack_2src_2main_8c"/>
      </node>
      <node id="165">
        <label>tests/kernel/threads/tls/src/main.c</label>
        <link refid="threads_2tls_2src_2main_8c"/>
      </node>
      <node id="166">
        <label>tests/kernel/tickless/tickless_concept/src/main.c</label>
        <link refid="tickless_2tickless__concept_2src_2main_8c"/>
      </node>
      <node id="167">
        <label>tests/kernel/timer/cycle64/src/main.c</label>
        <link refid="timer_2cycle64_2src_2main_8c"/>
      </node>
      <node id="168">
        <label>tests/kernel/timer/starve/src/main.c</label>
        <link refid="timer_2starve_2src_2main_8c"/>
      </node>
      <node id="169">
        <label>tests/kernel/timer/timer_api/src/main.c</label>
        <link refid="timer_2timer__api_2src_2main_8c"/>
      </node>
      <node id="170">
        <label>tests/kernel/timer/timer_api/src/timer_convert.c</label>
        <link refid="timer__convert_8c"/>
      </node>
      <node id="171">
        <label>tests/kernel/timer/timer_error_case/src/main.c</label>
        <link refid="timer_2timer__error__case_2src_2main_8c"/>
      </node>
      <node id="172">
        <label>tests/kernel/timer/timer_monotonic/src/main.c</label>
        <link refid="timer_2timer__monotonic_2src_2main_8c"/>
      </node>
      <node id="173">
        <label>tests/kernel/workq/critical/src/main.c</label>
        <link refid="workq_2critical_2src_2main_8c"/>
      </node>
      <node id="174">
        <label>tests/kernel/workq/user_work/src/main.c</label>
        <link refid="workq_2user__work_2src_2main_8c"/>
      </node>
      <node id="175">
        <label>tests/kernel/workq/work/src/main.c</label>
        <link refid="workq_2work_2src_2main_8c"/>
      </node>
      <node id="176">
        <label>tests/kernel/workq/work_queue/src/main.c</label>
        <link refid="workq_2work__queue_2src_2main_8c"/>
      </node>
      <node id="177">
        <label>tests/kernel/xip/src/main.c</label>
        <link refid="xip_2src_2main_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="kernel_2thread__stack_8h_1aa66525a4ec83e91d97ec4699acaa72fd" prot="public" static="no">
        <name>K_KERNEL_STACK_RESERVED</name>
        <initializer>((size_t)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="94" column="10" bodyfile="include/kernel/thread_stack.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernel_2thread__stack_8h_1a41ae91aea84e16c2ccc93eaa00f4d522" prot="public" static="no">
        <name>K_KERNEL_STACK_EXTERN</name>
        <param><defname>sym</defname></param>
        <initializer>extern <ref refid="arch__interface_8h_1a3e4bde3075edb41069b258d999333b0e" kindref="member">k_thread_stack_t</ref> sym[]</initializer>
        <briefdescription>
<para>Obtain an extern reference to a stack. </para>
        </briefdescription>
        <detaileddescription>
<para>This macro properly brings the symbol of a thread stack declared elsewhere into scope.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread stack symbol name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="118" column="9" bodyfile="include/kernel/thread_stack.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__thread__stack__api_1gac2977b55bda99f931314aea5adb1bd2a" prot="public" static="no">
        <name>K_KERNEL_STACK_ARRAY_EXTERN</name>
        <param><defname>sym</defname></param>
        <param><defname>nmemb</defname></param>
        <param><defname>size</defname></param>
        <initializer>	extern struct z_thread_stack_element \
		sym[nmemb][Z_KERNEL_STACK_LEN(size)]</initializer>
        <briefdescription>
<para>Obtain an extern reference to a stack array. </para>
        </briefdescription>
        <detaileddescription>
<para>This macro properly brings the symbol of a stack array declared elsewhere into scope.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread stack symbol name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmemb</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of stacks to declare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the stack memory region </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="136" column="9" bodyfile="include/kernel/thread_stack.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__thread__stack__api_1ga110a3044827a3c5154479fbdc96ebf0c" prot="public" static="no">
        <name>K_KERNEL_PINNED_STACK_ARRAY_EXTERN</name>
        <param><defname>sym</defname></param>
        <param><defname>nmemb</defname></param>
        <param><defname>size</defname></param>
        <initializer>	extern struct z_thread_stack_element \
		sym[nmemb][Z_KERNEL_STACK_LEN(size)]</initializer>
        <briefdescription>
<para>Obtain an extern reference to a pinned stack array. </para>
        </briefdescription>
        <detaileddescription>
<para>This macro properly brings the symbol of a pinned stack array declared elsewhere into scope.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread stack symbol name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmemb</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of stacks to declare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the stack memory region </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="151" column="9" bodyfile="include/kernel/thread_stack.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__thread__stack__api_1ga9e05e3cb5aa5b72d6f19e2f327313271" prot="public" static="no">
        <name>K_KERNEL_STACK_DEFINE</name>
        <param><defname>sym</defname></param>
        <param><defname>size</defname></param>
        <initializer>	Z_KERNEL_STACK_DEFINE_IN(sym, size, __kstackmem)</initializer>
        <briefdescription>
<para>Define a toplevel kernel stack memory region. </para>
        </briefdescription>
        <detaileddescription>
<para>This declares a region of memory for use as a thread stack, for threads that exclusively run in supervisor mode. This is also suitable for declaring special stacks for interrupt or exception handling.</para>
<para>Stacks declared with this macro may not host user mode threads.</para>
<para>It is legal to precede this definition with the &apos;static&apos; keyword.</para>
<para>It is NOT legal to take the sizeof(sym) and pass that to the stackSize parameter of <ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create()</ref>, it may not be the same as the &apos;size&apos; parameter. Use <ref refid="group__thread__stack__api_1ga57b3824b117c634dbb6052d47dc4301c" kindref="member">K_KERNEL_STACK_SIZEOF()</ref> instead.</para>
<para>The total amount of memory allocated may be increased to accommodate fixed-size stack overflow guards.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread stack symbol name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the stack memory region </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="216" column="9" bodyfile="include/kernel/thread_stack.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__thread__stack__api_1ga7f6a9e1bd5f99b5240c69d372bfd4aa0" prot="public" static="no">
        <name>K_KERNEL_PINNED_STACK_DEFINE</name>
        <param><defname>sym</defname></param>
        <param><defname>size</defname></param>
        <initializer>	Z_KERNEL_STACK_DEFINE_IN(sym, size, __kstackmem)</initializer>
        <briefdescription>
<para>Define a toplevel kernel stack memory region in pinned section. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="group__thread__stack__api_1ga9e05e3cb5aa5b72d6f19e2f327313271" kindref="member">K_KERNEL_STACK_DEFINE()</ref> for more information and constraints.</para>
<para>This puts the stack into the pinned noinit linker section if CONFIG_LINKER_USE_PINNED_SECTION is enabled, or else it would put the stack into the same section as <ref refid="group__thread__stack__api_1ga9e05e3cb5aa5b72d6f19e2f327313271" kindref="member">K_KERNEL_STACK_DEFINE()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread stack symbol name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the stack memory region </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="236" column="10" bodyfile="include/kernel/thread_stack.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__thread__stack__api_1gaf05127bd2ab7e8a0aeb394f18cbd923a" prot="public" static="no">
        <name>K_KERNEL_STACK_ARRAY_DEFINE</name>
        <param><defname>sym</defname></param>
        <param><defname>nmemb</defname></param>
        <param><defname>size</defname></param>
        <initializer>	Z_KERNEL_STACK_ARRAY_DEFINE_IN(sym, nmemb, size, __kstackmem)</initializer>
        <briefdescription>
<para>Define a toplevel array of kernel stack memory regions. </para>
        </briefdescription>
        <detaileddescription>
<para>Stacks declared with this macro may not host user mode threads.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>Kernel stack array symbol name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmemb</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of stacks to declare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the stack memory region </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="250" column="9" bodyfile="include/kernel/thread_stack.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__thread__stack__api_1ga628f79ffde2cc43cf7b5525e5f4276df" prot="public" static="no">
        <name>K_KERNEL_PINNED_STACK_ARRAY_DEFINE</name>
        <param><defname>sym</defname></param>
        <param><defname>nmemb</defname></param>
        <param><defname>size</defname></param>
        <initializer>	Z_KERNEL_STACK_ARRAY_DEFINE_IN(sym, nmemb, size, __kstackmem)</initializer>
        <briefdescription>
<para>Define a toplevel array of kernel stack memory regions in pinned section. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="group__thread__stack__api_1gaf05127bd2ab7e8a0aeb394f18cbd923a" kindref="member">K_KERNEL_STACK_ARRAY_DEFINE()</ref> for more information and constraints.</para>
<para>This puts the stack into the pinned noinit linker section if CONFIG_LINKER_USE_PINNED_SECTION is enabled, or else it would put the stack into the same section as <ref refid="group__thread__stack__api_1gaf05127bd2ab7e8a0aeb394f18cbd923a" kindref="member">K_KERNEL_STACK_ARRAY_DEFINE()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>Kernel stack array symbol name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmemb</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of stacks to declare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the stack memory region </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="271" column="10" bodyfile="include/kernel/thread_stack.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__thread__stack__api_1ga600162959def399e70310b944834711f" prot="public" static="no">
        <name>K_KERNEL_STACK_MEMBER</name>
        <param><defname>sym</defname></param>
        <param><defname>size</defname></param>
        <initializer>	Z_KERNEL_STACK_DEFINE_IN(sym, size,)</initializer>
        <briefdescription>
<para>Declare an embedded stack memory region. </para>
        </briefdescription>
        <detaileddescription>
<para>Used for kernel stacks embedded within other data structures.</para>
<para>Stacks declared with this macro may not host user mode threads. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread stack symbol name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the stack memory region </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="285" column="9" bodyfile="include/kernel/thread_stack.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__thread__stack__api_1ga57b3824b117c634dbb6052d47dc4301c" prot="public" static="no">
        <name>K_KERNEL_STACK_SIZEOF</name>
        <param><defname>sym</defname></param>
        <initializer>(sizeof(sym) - <ref refid="kernel_2thread__stack_8h_1aa66525a4ec83e91d97ec4699acaa72fd" kindref="member">K_KERNEL_STACK_RESERVED</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="288" column="9" bodyfile="include/kernel/thread_stack.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernel_2thread__stack_8h_1a025b257739ad52fe7106585b51468e49" prot="public" static="no">
        <name>K_THREAD_STACK_RESERVED</name>
        <initializer>((size_t)0U)</initializer>
        <briefdescription>
<para>Indicate how much additional memory is reserved for stack objects. </para>
        </briefdescription>
        <detaileddescription>
<para>Any given stack declaration may have additional memory in it for guard areas, supervisor mode stacks, or platform-specific data. This macro indicates how much space is reserved for this.</para>
<para>This value only indicates memory that is permanently reserved in the stack object. Memory that is &quot;borrowed&quot; from the thread&apos;s stack buffer is never accounted for here.</para>
<para>Reserved memory is at the beginning of the stack object. The reserved area must be appropriately sized such that the stack buffer immediately following it is correctly aligned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="329" column="10" bodyfile="include/kernel/thread_stack.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernel_2thread__stack_8h_1a0288cef43210f1880dbe0c357f7fddac" prot="public" static="no">
        <name>K_THREAD_STACK_EXTERN</name>
        <param><defname>sym</defname></param>
        <initializer>extern <ref refid="arch__interface_8h_1a3e4bde3075edb41069b258d999333b0e" kindref="member">k_thread_stack_t</ref> sym[]</initializer>
        <briefdescription>
<para>Obtain an extern reference to a stack. </para>
        </briefdescription>
        <detaileddescription>
<para>This macro properly brings the symbol of a thread stack declared elsewhere into scope.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread stack symbol name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="406" column="9" bodyfile="include/kernel/thread_stack.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernel_2thread__stack_8h_1a0d891c8fa40fcfb43be6a0f0ae3fda46" prot="public" static="no">
        <name>K_THREAD_STACK_ARRAY_EXTERN</name>
        <param><defname>sym</defname></param>
        <param><defname>nmemb</defname></param>
        <param><defname>size</defname></param>
        <initializer>	extern struct z_thread_stack_element \
		sym[nmemb][<ref refid="group__thread__stack__api_1ga72fa31a9d8e28ccabd6e5e908a24ec00" kindref="member">K_THREAD_STACK_LEN</ref>(size)]</initializer>
        <briefdescription>
<para>Obtain an extern reference to a thread stack array. </para>
        </briefdescription>
        <detaileddescription>
<para>This macro properly brings the symbol of a stack array declared elsewhere into scope.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread stack symbol name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmemb</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of stacks to declare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the stack memory region </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="418" column="9" bodyfile="include/kernel/thread_stack.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" prot="public" static="no">
        <name>K_THREAD_STACK_SIZEOF</name>
        <param><defname>sym</defname></param>
        <initializer>(sizeof(sym) - <ref refid="kernel_2thread__stack_8h_1a025b257739ad52fe7106585b51468e49" kindref="member">K_THREAD_STACK_RESERVED</ref>)</initializer>
        <briefdescription>
<para>Return the size in bytes of a stack memory region. </para>
        </briefdescription>
        <detaileddescription>
<para>Convenience macro for passing the desired stack size to <ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create()</ref> since the underlying implementation may actually create something larger (for instance a guard area).</para>
<para>The value returned here is not guaranteed to match the &apos;size&apos; parameter passed to K_THREAD_STACK_DEFINE and may be larger, but is always safe to pass to <ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create()</ref> for the associated stack object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack memory symbol </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Size of the stack buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="441" column="9" bodyfile="include/kernel/thread_stack.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__thread__stack__api_1gac5368ce24fdeab3863b5c8dee2ebd955" prot="public" static="no">
        <name>K_THREAD_STACK_DEFINE</name>
        <param><defname>sym</defname></param>
        <param><defname>size</defname></param>
        <initializer>	Z_THREAD_STACK_DEFINE_IN(sym, size, __stackmem)</initializer>
        <briefdescription>
<para>Declare a toplevel thread stack memory region. </para>
        </briefdescription>
        <detaileddescription>
<para>This declares a region of memory suitable for use as a thread&apos;s stack.</para>
<para>This is the generic, historical definition. Align to Z_THREAD_STACK_OBJ_ALIGN and put in &apos;noinit&apos; section so that it isn&apos;t zeroed at boot</para>
<para>The declared symbol will always be a k_thread_stack_t which can be passed to <ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create()</ref>, but should otherwise not be manipulated. If the buffer inside needs to be examined, examine thread-&gt;stack_info for the associated thread object to obtain the boundaries.</para>
<para>It is legal to precede this definition with the &apos;static&apos; keyword.</para>
<para>It is NOT legal to take the sizeof(sym) and pass that to the stackSize parameter of <ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create()</ref>, it may not be the same as the &apos;size&apos; parameter. Use <ref refid="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" kindref="member">K_THREAD_STACK_SIZEOF()</ref> instead.</para>
<para>Some arches may round the size of the usable stack region up to satisfy alignment constraints. <ref refid="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" kindref="member">K_THREAD_STACK_SIZEOF()</ref> will return the aligned size.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread stack symbol name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the stack memory region </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="521" column="9" bodyfile="include/kernel/thread_stack.h" bodystart="521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__thread__stack__api_1ga7227f78410cf126deb5b185a0534f7f3" prot="public" static="no">
        <name>K_THREAD_PINNED_STACK_DEFINE</name>
        <param><defname>sym</defname></param>
        <param><defname>size</defname></param>
        <initializer>	<ref refid="workq_2work__queue_2src_2main_8c_1aea43146399d79961f9fc8020163c997d" kindref="member">K_THREAD_STACK_DEFINE</ref>(sym, size)</initializer>
        <briefdescription>
<para>Define a toplevel thread stack memory region in pinned section. </para>
        </briefdescription>
        <detaileddescription>
<para>This declares a region of memory suitable for use as a thread&apos;s stack.</para>
<para>This is the generic, historical definition. Align to Z_THREAD_STACK_OBJ_ALIGN and put in &apos;noinit&apos; section so that it isn&apos;t zeroed at boot</para>
<para>The declared symbol will always be a k_thread_stack_t which can be passed to <ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create()</ref>, but should otherwise not be manipulated. If the buffer inside needs to be examined, examine thread-&gt;stack_info for the associated thread object to obtain the boundaries.</para>
<para>It is legal to precede this definition with the &apos;static&apos; keyword.</para>
<para>It is NOT legal to take the sizeof(sym) and pass that to the stackSize parameter of <ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create()</ref>, it may not be the same as the &apos;size&apos; parameter. Use <ref refid="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" kindref="member">K_THREAD_STACK_SIZEOF()</ref> instead.</para>
<para>Some arches may round the size of the usable stack region up to satisfy alignment constraints. <ref refid="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" kindref="member">K_THREAD_STACK_SIZEOF()</ref> will return the aligned size.</para>
<para>This puts the stack into the pinned noinit linker section if CONFIG_LINKER_USE_PINNED_SECTION is enabled, or else it would put the stack into the same section as <ref refid="group__thread__stack__api_1gac5368ce24fdeab3863b5c8dee2ebd955" kindref="member">K_THREAD_STACK_DEFINE()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread stack symbol name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the stack memory region </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="558" column="10" bodyfile="include/kernel/thread_stack.h" bodystart="558" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__thread__stack__api_1ga72fa31a9d8e28ccabd6e5e908a24ec00" prot="public" static="no">
        <name>K_THREAD_STACK_LEN</name>
        <param><defname>size</defname></param>
        <initializer>	<ref refid="group__sys-util_1gaada5610108b15d85c65d863b0c646ef3" kindref="member">ROUND_UP</ref>(Z_THREAD_STACK_SIZE_ADJUST(size), \
		 Z_THREAD_STACK_OBJ_ALIGN(Z_THREAD_STACK_SIZE_ADJUST(size)))</initializer>
        <briefdescription>
<para>Calculate size of stacks to be allocated in a stack array. </para>
        </briefdescription>
        <detaileddescription>
<para>This macro calculates the size to be allocated for the stacks inside a stack array. It accepts the indicated &quot;size&quot; as a parameter and if required, pads some extra bytes (e.g. for MPU scenarios). Refer K_THREAD_STACK_ARRAY_DEFINE definition to see how this is used. The returned size ensures each array member will be aligned to the required stack base alignment.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the stack memory region </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Appropriate size for an array member </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="575" column="9" bodyfile="include/kernel/thread_stack.h" bodystart="575" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__thread__stack__api_1gaae2471b24bdc574382f083163fb42597" prot="public" static="no">
        <name>K_THREAD_STACK_ARRAY_DEFINE</name>
        <param><defname>sym</defname></param>
        <param><defname>nmemb</defname></param>
        <param><defname>size</defname></param>
        <initializer>	Z_THREAD_STACK_ARRAY_DEFINE_IN(sym, nmemb, size, __stackmem)</initializer>
        <briefdescription>
<para>Declare a toplevel array of thread stack memory regions. </para>
        </briefdescription>
        <detaileddescription>
<para>Create an array of equally sized stacks. See K_THREAD_STACK_DEFINE definition for additional details and constraints.</para>
<para>This is the generic, historical definition. Align to Z_THREAD_STACK_OBJ_ALIGN and put in &apos;noinit&apos; section so that it isn&apos;t zeroed at boot</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread stack symbol name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmemb</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of stacks to declare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the stack memory region </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="592" column="9" bodyfile="include/kernel/thread_stack.h" bodystart="592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__thread__stack__api_1gaa2e5014926e11e2241141cdd82888b09" prot="public" static="no">
        <name>K_THREAD_PINNED_STACK_ARRAY_DEFINE</name>
        <param><defname>sym</defname></param>
        <param><defname>nmemb</defname></param>
        <param><defname>size</defname></param>
        <initializer>	<ref refid="tickless_2tickless__concept_2src_2main_8c_1a8b49fec2a8d9b46c26588f772665bafa" kindref="member">K_THREAD_STACK_ARRAY_DEFINE</ref>(sym, nmemb, size)</initializer>
        <briefdescription>
<para>Declare a toplevel array of thread stack memory regions in pinned section. </para>
        </briefdescription>
        <detaileddescription>
<para>Create an array of equally sized stacks. See K_THREAD_STACK_DEFINE definition for additional details and constraints.</para>
<para>This is the generic, historical definition. Align to Z_THREAD_STACK_OBJ_ALIGN and put in &apos;noinit&apos; section so that it isn&apos;t zeroed at boot</para>
<para>This puts the stack into the pinned noinit linker section if CONFIG_LINKER_USE_PINNED_SECTION is enabled, or else it would put the stack into the same section as <ref refid="group__thread__stack__api_1gac5368ce24fdeab3863b5c8dee2ebd955" kindref="member">K_THREAD_STACK_DEFINE()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread stack symbol name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmemb</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of stacks to declare </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the stack memory region </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="616" column="10" bodyfile="include/kernel/thread_stack.h" bodystart="616" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__thread__stack__api_1ga753188e7f124f0ee03ed0fa1dad8ecfb" prot="public" static="no">
        <name>K_THREAD_STACK_MEMBER</name>
        <param><defname>sym</defname></param>
        <param><defname>size</defname></param>
        <initializer>	Z_THREAD_STACK_DEFINE_IN(sym, size,)</initializer>
        <briefdescription>
<para>Declare an embedded stack memory region. </para>
        </briefdescription>
        <detaileddescription>
<para>Used for stacks embedded within other data structures. Use is highly discouraged but in some cases necessary. For memory protection scenarios, it is very important that any RAM preceding this member not be writable by threads else a stack overflow will lead to silent corruption. In other words, the containing data structure should live in RAM owned by the kernel.</para>
<para>A user thread can only be started with a stack defined in this way if the thread starting it is in supervisor mode.</para>
<para>This is now deprecated, as stacks defined in this way are not usable from user mode. Use K_KERNEL_STACK_MEMBER.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread stack symbol name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the stack memory region </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread_stack.h" line="638" column="9" bodyfile="include/kernel/thread_stack.h" bodystart="638" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Macros for declaring thread stacks. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_SYS_THREAD_STACK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_SYS_THREAD_STACK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_ASMLANGUAGE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arch/cpu.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="util_8h" kindref="compound">sys/util.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Using<sp/>typedef<sp/>deliberately<sp/>here,<sp/>this<sp/>is<sp/>quite<sp/>intended<sp/>to<sp/>be<sp/>an<sp/>opaque</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>type.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>The<sp/>purpose<sp/>of<sp/>this<sp/>data<sp/>type<sp/>is<sp/>to<sp/>clearly<sp/>distinguish<sp/>between<sp/>the</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>declared<sp/>symbol<sp/>for<sp/>a<sp/>stack<sp/>(of<sp/>type<sp/>k_thread_stack_t)<sp/>and<sp/>the<sp/>underlying</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>buffer<sp/>which<sp/>composes<sp/>the<sp/>stack<sp/>data<sp/>actually<sp/>used<sp/>by<sp/>the<sp/>underlying</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>thread;<sp/>they<sp/>cannot<sp/>be<sp/>used<sp/>interchangeably<sp/>as<sp/>some<sp/>arches<sp/>precede<sp/>the</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>stack<sp/>buffer<sp/>region<sp/>with<sp/>guard<sp/>areas<sp/>that<sp/>trigger<sp/>a<sp/>MPU<sp/>or<sp/>MMU<sp/>fault</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>if<sp/>written<sp/>to.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>APIs<sp/>that<sp/>want<sp/>to<sp/>work<sp/>with<sp/>the<sp/>buffer<sp/>inside<sp/>should<sp/>continue<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>char<sp/>*.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>Stacks<sp/>should<sp/>always<sp/>be<sp/>created<sp/>with<sp/>K_THREAD_STACK_DEFINE().</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__packed<sp/>z_thread_stack_element<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*z_stack_ptr_align(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="printk_8c_1add9af9569af79ec26dd741fb226b38ba" kindref="member">ptr</ref>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="group__sys-util_1gad8d2389dbe7ea135eccf237dbafb76dd" kindref="member">ROUND_DOWN</ref>(<ref refid="printk_8c_1add9af9569af79ec26dd741fb226b38ba" kindref="member">ptr</ref>,<sp/><ref refid="arch_2arm64_2thread__stack_8h_1af0f8ad93611d93cd0626914837e761d3" kindref="member">ARCH_STACK_PTR_ALIGN</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_STACK_PTR_ALIGN(ptr)<sp/>((uintptr_t)z_stack_ptr_align((char<sp/>*)(ptr)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_STACK_PTR_TO_FRAME(type,<sp/>ptr)<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(type<sp/>*)((ptr)<sp/>-<sp/>sizeof(type))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ARCH_KERNEL_STACK_RESERVED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_KERNEL_STACK_RESERVED<sp/>((size_t)ARCH_KERNEL_STACK_RESERVED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="kernel_2thread__stack_8h_1aa66525a4ec83e91d97ec4699acaa72fd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_KERNEL_STACK_RESERVED<sp/>((size_t)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_KERNEL_STACK_SIZE_ADJUST(size)<sp/>(ROUND_UP(size,<sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARCH_STACK_PTR_ALIGN)<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_KERNEL_STACK_RESERVED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ARCH_KERNEL_STACK_OBJ_ALIGN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_KERNEL_STACK_OBJ_ALIGN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARCH_KERNEL_STACK_OBJ_ALIGN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_KERNEL_STACK_OBJ_ALIGN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARCH_STACK_PTR_ALIGN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_KERNEL_STACK_LEN(size)<sp/>\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROUND_UP(Z_KERNEL_STACK_SIZE_ADJUST(size),<sp/>Z_KERNEL_STACK_OBJ_ALIGN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="kernel_2thread__stack_8h_1a41ae91aea84e16c2ccc93eaa00f4d522" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_KERNEL_STACK_EXTERN(sym)<sp/>extern<sp/>k_thread_stack_t<sp/>sym[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="group__thread__stack__api_1gac2977b55bda99f931314aea5adb1bd2a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_KERNEL_STACK_ARRAY_EXTERN(sym,<sp/>nmemb,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extern<sp/>struct<sp/>z_thread_stack_element<sp/>\</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sym[nmemb][Z_KERNEL_STACK_LEN(size)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="group__thread__stack__api_1ga110a3044827a3c5154479fbdc96ebf0c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_KERNEL_PINNED_STACK_ARRAY_EXTERN(sym,<sp/>nmemb,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extern<sp/>struct<sp/>z_thread_stack_element<sp/>\</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sym[nmemb][Z_KERNEL_STACK_LEN(size)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_KERNEL_STACK_DEFINE_IN(sym,<sp/>size,<sp/>lsect)<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>z_thread_stack_element<sp/>lsect<sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__aligned(Z_KERNEL_STACK_OBJ_ALIGN)<sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sym[Z_KERNEL_STACK_SIZE_ADJUST(size)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_KERNEL_STACK_ARRAY_DEFINE_IN(sym,<sp/>nmemb,<sp/>size,<sp/>lsect)<sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>z_thread_stack_element<sp/>lsect<sp/>\</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__aligned(Z_KERNEL_STACK_OBJ_ALIGN)<sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sym[nmemb][Z_KERNEL_STACK_LEN(size)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="group__thread__stack__api_1ga9e05e3cb5aa5b72d6f19e2f327313271" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_KERNEL_STACK_DEFINE(sym,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_KERNEL_STACK_DEFINE_IN(sym,<sp/>size,<sp/>__kstackmem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_LINKER_USE_PINNED_SECTION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_KERNEL_PINNED_STACK_DEFINE(sym,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_KERNEL_STACK_DEFINE_IN(sym,<sp/>size,<sp/>__pinned_noinit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="group__thread__stack__api_1ga7f6a9e1bd5f99b5240c69d372bfd4aa0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_KERNEL_PINNED_STACK_DEFINE(sym,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_KERNEL_STACK_DEFINE_IN(sym,<sp/>size,<sp/>__kstackmem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="group__thread__stack__api_1gaf05127bd2ab7e8a0aeb394f18cbd923a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_KERNEL_STACK_ARRAY_DEFINE(sym,<sp/>nmemb,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_KERNEL_STACK_ARRAY_DEFINE_IN(sym,<sp/>nmemb,<sp/>size,<sp/>__kstackmem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_LINKER_USE_PINNED_SECTION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_KERNEL_PINNED_STACK_ARRAY_DEFINE(sym,<sp/>nmemb,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_KERNEL_STACK_ARRAY_DEFINE_IN(sym,<sp/>nmemb,<sp/>size,<sp/>__pinned_noinit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="group__thread__stack__api_1ga628f79ffde2cc43cf7b5525e5f4276df" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_KERNEL_PINNED_STACK_ARRAY_DEFINE(sym,<sp/>nmemb,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_KERNEL_STACK_ARRAY_DEFINE_IN(sym,<sp/>nmemb,<sp/>size,<sp/>__kstackmem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="group__thread__stack__api_1ga600162959def399e70310b944834711f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_KERNEL_STACK_MEMBER(sym,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_KERNEL_STACK_DEFINE_IN(sym,<sp/>size,)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="group__thread__stack__api_1ga57b3824b117c634dbb6052d47dc4301c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_KERNEL_STACK_SIZEOF(sym)<sp/>(sizeof(sym)<sp/>-<sp/>K_KERNEL_STACK_RESERVED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Z_KERNEL_STACK_BUFFER(<ref refid="arch__interface_8h_1a3e4bde3075edb41069b258d999333b0e" kindref="member">k_thread_stack_t</ref><sp/>*sym)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)sym<sp/>+<sp/><ref refid="kernel_2thread__stack_8h_1aa66525a4ec83e91d97ec4699acaa72fd" kindref="member">K_KERNEL_STACK_RESERVED</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_KERNEL_STACK_RESERVED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_SIZEOF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_KERNEL_STACK_SIZEOF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_KERNEL_STACK_LEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_DEFINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_KERNEL_STACK_DEFINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_ARRAY_DEFINE<sp/><sp/><sp/><sp/><sp/>K_KERNEL_STACK_ARRAY_DEFINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_MEMBER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_KERNEL_STACK_MEMBER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_THREAD_STACK_BUFFER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_KERNEL_STACK_BUFFER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_EXTERN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_KERNEL_STACK_EXTERN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_ARRAY_EXTERN<sp/><sp/><sp/><sp/><sp/>K_KERNEL_STACK_ARRAY_EXTERN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_PINNED_STACK_DEFINE<sp/><sp/><sp/><sp/>K_KERNEL_PINNED_STACK_DEFINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_PINNED_STACK_ARRAY_DEFINE<sp/>\</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_KERNEL_PINNED_STACK_ARRAY_DEFINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ARCH_THREAD_STACK_RESERVED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((size_t)(ARCH_THREAD_STACK_RESERVED))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="kernel_2thread__stack_8h_1a025b257739ad52fe7106585b51468e49" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((size_t)0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ARCH_THREAD_STACK_OBJ_ALIGN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_THREAD_STACK_OBJ_ALIGN(size)<sp/><sp/>ARCH_THREAD_STACK_OBJ_ALIGN(size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_THREAD_STACK_OBJ_ALIGN(size)<sp/><sp/>ARCH_STACK_PTR_ALIGN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ARCH_THREAD_STACK_OBJ_ALIGN<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ARCH_THREAD_STACK_SIZE_ADJUST)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_THREAD_STACK_SIZE_ADJUST(size)<sp/>\</highlight></codeline>
<codeline lineno="392"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ARCH_THREAD_STACK_SIZE_ADJUST(size)<sp/>+<sp/>K_THREAD_STACK_RESERVED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_THREAD_STACK_SIZE_ADJUST(size)<sp/>\</highlight></codeline>
<codeline lineno="395"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ROUND_UP((size),<sp/>ARCH_STACK_PTR_ALIGN)<sp/>+<sp/>K_THREAD_STACK_RESERVED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ARCH_THREAD_STACK_SIZE_ADJUST<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="kernel_2thread__stack_8h_1a0288cef43210f1880dbe0c357f7fddac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_EXTERN(sym)<sp/>extern<sp/>k_thread_stack_t<sp/>sym[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="kernel_2thread__stack_8h_1a0d891c8fa40fcfb43be6a0f0ae3fda46" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_ARRAY_EXTERN(sym,<sp/>nmemb,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extern<sp/>struct<sp/>z_thread_stack_element<sp/>\</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sym[nmemb][K_THREAD_STACK_LEN(size)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_SIZEOF(sym)<sp/><sp/><sp/><sp/><sp/><sp/>(sizeof(sym)<sp/>-<sp/>K_THREAD_STACK_RESERVED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_THREAD_STACK_DEFINE_IN(sym,<sp/>size,<sp/>lsect)<sp/>\</highlight></codeline>
<codeline lineno="472"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>z_thread_stack_element<sp/>lsect<sp/>\</highlight></codeline>
<codeline lineno="473"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__aligned(Z_THREAD_STACK_OBJ_ALIGN(size))<sp/>\</highlight></codeline>
<codeline lineno="474"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sym[Z_THREAD_STACK_SIZE_ADJUST(size)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Z_THREAD_STACK_ARRAY_DEFINE_IN(sym,<sp/>nmemb,<sp/>size,<sp/>lsect)<sp/>\</highlight></codeline>
<codeline lineno="491"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>z_thread_stack_element<sp/>lsect<sp/>\</highlight></codeline>
<codeline lineno="492"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__aligned(Z_THREAD_STACK_OBJ_ALIGN(size))<sp/>\</highlight></codeline>
<codeline lineno="493"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sym[nmemb][K_THREAD_STACK_LEN(size)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="521" refid="group__thread__stack__api_1gac5368ce24fdeab3863b5c8dee2ebd955" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_DEFINE(sym,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="522"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_THREAD_STACK_DEFINE_IN(sym,<sp/>size,<sp/>__stackmem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_LINKER_USE_PINNED_SECTION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_PINNED_STACK_DEFINE(sym,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="556"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_THREAD_STACK_DEFINE_IN(sym,<sp/>size,<sp/>__pinned_noinit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558" refid="group__thread__stack__api_1ga7227f78410cf126deb5b185a0534f7f3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_PINNED_STACK_DEFINE(sym,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="559"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_THREAD_STACK_DEFINE(sym,<sp/>size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="group__thread__stack__api_1ga72fa31a9d8e28ccabd6e5e908a24ec00" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_LEN(size)<sp/>\</highlight></codeline>
<codeline lineno="576"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROUND_UP(Z_THREAD_STACK_SIZE_ADJUST(size),<sp/>\</highlight></codeline>
<codeline lineno="577"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_THREAD_STACK_OBJ_ALIGN(Z_THREAD_STACK_SIZE_ADJUST(size)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="group__thread__stack__api_1gaae2471b24bdc574382f083163fb42597" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_ARRAY_DEFINE(sym,<sp/>nmemb,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="593"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_THREAD_STACK_ARRAY_DEFINE_IN(sym,<sp/>nmemb,<sp/>size,<sp/>__stackmem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_LINKER_USE_PINNED_SECTION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_PINNED_STACK_ARRAY_DEFINE(sym,<sp/>nmemb,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="614"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_THREAD_PINNED_STACK_DEFINE_IN(sym,<sp/>nmemb,<sp/>size,<sp/>__pinned_noinit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616" refid="group__thread__stack__api_1gaa2e5014926e11e2241141cdd82888b09" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_PINNED_STACK_ARRAY_DEFINE(sym,<sp/>nmemb,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="617"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_THREAD_STACK_ARRAY_DEFINE(sym,<sp/>nmemb,<sp/>size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="638" refid="group__thread__stack__api_1ga753188e7f124f0ee03ed0fa1dad8ecfb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K_THREAD_STACK_MEMBER(sym,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="639"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_THREAD_STACK_DEFINE_IN(sym,<sp/>size,)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Z_THREAD_STACK_BUFFER(<ref refid="arch__interface_8h_1a3e4bde3075edb41069b258d999333b0e" kindref="member">k_thread_stack_t</ref><sp/>*sym)</highlight></codeline>
<codeline lineno="658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)sym<sp/>+<sp/><ref refid="kernel_2thread__stack_8h_1a025b257739ad52fe7106585b51468e49" kindref="member">K_THREAD_STACK_RESERVED</ref>;</highlight></codeline>
<codeline lineno="660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_USERSPACE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_ASMLANGUAGE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_SYS_THREAD_STACK_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/kernel/thread_stack.h"/>
  </compounddef>
</doxygen>
