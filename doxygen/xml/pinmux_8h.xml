<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="pinmux_8h" kind="file" language="C++">
    <compoundname>pinmux.h</compoundname>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includes local="no">device.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/drivers/pinmux.h</label>
        <link refid="pinmux_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="5">
        <label>device.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structpinmux__driver__api" prot="public">pinmux_driver_api</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__pinmux__interface_1ga98cfa6f81cd2d924b4b8410cc58dcced" prot="public" static="no">
        <name>PINMUX_FUNC_A</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="29" column="9" bodyfile="include/drivers/pinmux.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1ga1f94697f2a9f866e751fad5fa50ac54a" prot="public" static="no">
        <name>PINMUX_FUNC_B</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="30" column="9" bodyfile="include/drivers/pinmux.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1gad65d0f30a98080f3e21e2db0d6f63e90" prot="public" static="no">
        <name>PINMUX_FUNC_C</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="31" column="9" bodyfile="include/drivers/pinmux.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1gabcab76c799f9fefa55d8814c820f212a" prot="public" static="no">
        <name>PINMUX_FUNC_D</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="32" column="9" bodyfile="include/drivers/pinmux.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1ga91037775d3a5534ebd06f13631419773" prot="public" static="no">
        <name>PINMUX_FUNC_E</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="33" column="9" bodyfile="include/drivers/pinmux.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1ga4545af61cc191f7c9b53a7c2bd6efce8" prot="public" static="no">
        <name>PINMUX_FUNC_F</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="34" column="9" bodyfile="include/drivers/pinmux.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1ga26a7183a9a7f4b19306e4e497f07804a" prot="public" static="no">
        <name>PINMUX_FUNC_G</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="35" column="9" bodyfile="include/drivers/pinmux.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1ga780316d37117380d257e1280bdddc80a" prot="public" static="no">
        <name>PINMUX_FUNC_H</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="36" column="9" bodyfile="include/drivers/pinmux.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1gae900563f48de8e05ff4c1678de4f25b1" prot="public" static="no">
        <name>PINMUX_FUNC_I</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="37" column="9" bodyfile="include/drivers/pinmux.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1ga679bd0cd61067e444d27df05c2b2d8a3" prot="public" static="no">
        <name>PINMUX_FUNC_J</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="38" column="9" bodyfile="include/drivers/pinmux.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1gab7b45213fb252d04ca76638b7b6e3453" prot="public" static="no">
        <name>PINMUX_FUNC_K</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="39" column="9" bodyfile="include/drivers/pinmux.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1ga8bc0c983b9b3e1be9ebc78dd79839dff" prot="public" static="no">
        <name>PINMUX_FUNC_L</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="40" column="9" bodyfile="include/drivers/pinmux.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1ga02d9d70f1296c8866cc83d894cc50fcc" prot="public" static="no">
        <name>PINMUX_FUNC_M</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="41" column="9" bodyfile="include/drivers/pinmux.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1ga5689712d6b4e0c0a04a52c5c928e605f" prot="public" static="no">
        <name>PINMUX_FUNC_N</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="42" column="9" bodyfile="include/drivers/pinmux.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1gabcc9415a1170474b30c34f7a19091d71" prot="public" static="no">
        <name>PINMUX_FUNC_O</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="43" column="9" bodyfile="include/drivers/pinmux.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1gac8af06303acd7811ddc98666c47e058b" prot="public" static="no">
        <name>PINMUX_FUNC_P</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="44" column="9" bodyfile="include/drivers/pinmux.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1ga8dc656edabddd2ce6235734929ca286d" prot="public" static="no">
        <name>PINMUX_PULLUP_ENABLE</name>
        <initializer>(0x1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="46" column="9" bodyfile="include/drivers/pinmux.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1gade55cf3295ee85713135cb9ac8d65172" prot="public" static="no">
        <name>PINMUX_PULLUP_DISABLE</name>
        <initializer>(0x0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="47" column="9" bodyfile="include/drivers/pinmux.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1ga5069cd0df03a8b025bb450cfbc68ec9d" prot="public" static="no">
        <name>PINMUX_INPUT_ENABLED</name>
        <initializer>(0x1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="49" column="9" bodyfile="include/drivers/pinmux.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pinmux__interface_1gac7b6ef9a7d226dcacc308225a74da3f7" prot="public" static="no">
        <name>PINMUX_OUTPUT_ENABLED</name>
        <initializer>(0x0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="50" column="9" bodyfile="include/drivers/pinmux.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__pinmux__interface_1ga3794003259d7588cb0969fa27562092d" prot="public" static="no">
        <type>int(*</type>
        <definition>pmux_set</definition>
        <argsstring>)(const struct device *dev, uint32_t pin, uint32_t func)</argsstring>
        <name>pmux_set</name>
        <briefdescription>
<para>Callback API upon setting a PIN&apos;s function See <ref refid="group__pinmux__interface_1ga6c00892519c29aab488169fe3ebae5ce" kindref="member">pinmux_pin_set()</ref> for argument description. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="57" column="9" bodyfile="include/drivers/pinmux.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pinmux__interface_1ga42dfbf99e469beafe9258e4dfb6c2384" prot="public" static="no">
        <type>int(*</type>
        <definition>pmux_get</definition>
        <argsstring>)(const struct device *dev, uint32_t pin, uint32_t *func)</argsstring>
        <name>pmux_get</name>
        <briefdescription>
<para>Callback API upon getting a PIN&apos;s function See <ref refid="group__pinmux__interface_1ga650875ff6bc51e0a321886cc967d137f" kindref="member">pinmux_pin_get()</ref> for argument description. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="63" column="9" bodyfile="include/drivers/pinmux.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pinmux__interface_1ga98b09868145eaa3580d9a77e3fdfaccb" prot="public" static="no">
        <type>int(*</type>
        <definition>pmux_pullup</definition>
        <argsstring>)(const struct device *dev, uint32_t pin, uint8_t func)</argsstring>
        <name>pmux_pullup</name>
        <briefdescription>
<para>Callback API upon setting a PIN&apos;s pullup See pinmix_pin_pullup() for argument description. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="70" column="9" bodyfile="include/drivers/pinmux.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pinmux__interface_1ga527bc40d9df441ec79463d0ce8b69a82" prot="public" static="no">
        <type>int(*</type>
        <definition>pmux_input</definition>
        <argsstring>)(const struct device *dev, uint32_t pin, uint8_t func)</argsstring>
        <name>pmux_input</name>
        <briefdescription>
<para>Callback API upon setting a PIN&apos;s input function See pinmux_input() for argument description. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="77" column="9" bodyfile="include/drivers/pinmux.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__pinmux__interface_1ga6c00892519c29aab488169fe3ebae5ce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int pinmux_pin_set</definition>
        <argsstring>(const struct device *dev, uint32_t pin, uint32_t func)</argsstring>
        <name>pinmux_pin_set</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>pin</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="87" column="19" bodyfile="include/drivers/pinmux.h" bodystart="87" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="group__pinmux__interface_1ga650875ff6bc51e0a321886cc967d137f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int pinmux_pin_get</definition>
        <argsstring>(const struct device *dev, uint32_t pin, uint32_t *func)</argsstring>
        <name>pinmux_pin_get</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>pin</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="96" column="19" bodyfile="include/drivers/pinmux.h" bodystart="96" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="group__pinmux__interface_1ga6cde3b5db19672c38998a0cccd94ae6b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int pinmux_pin_pullup</definition>
        <argsstring>(const struct device *dev, uint32_t pin, uint8_t func)</argsstring>
        <name>pinmux_pin_pullup</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>pin</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="105" column="19" bodyfile="include/drivers/pinmux.h" bodystart="105" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="group__pinmux__interface_1ga263a5ce6a868711b65b7de5dd915a2b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int pinmux_pin_input_enable</definition>
        <argsstring>(const struct device *dev, uint32_t pin, uint8_t func)</argsstring>
        <name>pinmux_pin_input_enable</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>pin</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/pinmux.h" line="114" column="19" bodyfile="include/drivers/pinmux.h" bodystart="114" bodyend="122"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Public APIs for Pinmux drivers </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_DRIVERS_PINMUX_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_DRIVERS_PINMUX_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;device.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="group__pinmux__interface_1ga98cfa6f81cd2d924b4b8410cc58dcced" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_FUNC_A<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="group__pinmux__interface_1ga1f94697f2a9f866e751fad5fa50ac54a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_FUNC_B<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="group__pinmux__interface_1gad65d0f30a98080f3e21e2db0d6f63e90" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_FUNC_C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="group__pinmux__interface_1gabcab76c799f9fefa55d8814c820f212a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_FUNC_D<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="group__pinmux__interface_1ga91037775d3a5534ebd06f13631419773" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_FUNC_E<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="group__pinmux__interface_1ga4545af61cc191f7c9b53a7c2bd6efce8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_FUNC_F<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="group__pinmux__interface_1ga26a7183a9a7f4b19306e4e497f07804a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_FUNC_G<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="group__pinmux__interface_1ga780316d37117380d257e1280bdddc80a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_FUNC_H<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="group__pinmux__interface_1gae900563f48de8e05ff4c1678de4f25b1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_FUNC_I<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="group__pinmux__interface_1ga679bd0cd61067e444d27df05c2b2d8a3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_FUNC_J<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="group__pinmux__interface_1gab7b45213fb252d04ca76638b7b6e3453" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_FUNC_K<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="group__pinmux__interface_1ga8bc0c983b9b3e1be9ebc78dd79839dff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_FUNC_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="group__pinmux__interface_1ga02d9d70f1296c8866cc83d894cc50fcc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_FUNC_M<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="group__pinmux__interface_1ga5689712d6b4e0c0a04a52c5c928e605f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_FUNC_N<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="group__pinmux__interface_1gabcc9415a1170474b30c34f7a19091d71" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_FUNC_O<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="group__pinmux__interface_1gac8af06303acd7811ddc98666c47e058b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_FUNC_P<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="group__pinmux__interface_1ga8dc656edabddd2ce6235734929ca286d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_PULLUP_ENABLE<sp/><sp/><sp/><sp/>(0x1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group__pinmux__interface_1gade55cf3295ee85713135cb9ac8d65172" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_PULLUP_DISABLE<sp/><sp/><sp/>(0x0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="group__pinmux__interface_1ga5069cd0df03a8b025bb450cfbc68ec9d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_INPUT_ENABLED<sp/><sp/><sp/><sp/>(0x1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group__pinmux__interface_1gac7b6ef9a7d226dcacc308225a74da3f7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINMUX_OUTPUT_ENABLED<sp/><sp/><sp/>(0x0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="group__pinmux__interface_1ga3794003259d7588cb0969fa27562092d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__pinmux__interface_1ga3794003259d7588cb0969fa27562092d" kindref="member">pmux_set</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>pin,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>func);</highlight></codeline>
<codeline lineno="63" refid="group__pinmux__interface_1ga42dfbf99e469beafe9258e4dfb6c2384" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__pinmux__interface_1ga42dfbf99e469beafe9258e4dfb6c2384" kindref="member">pmux_get</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>pin,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>*func);</highlight></codeline>
<codeline lineno="70" refid="group__pinmux__interface_1ga98b09868145eaa3580d9a77e3fdfaccb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__pinmux__interface_1ga98b09868145eaa3580d9a77e3fdfaccb" kindref="member">pmux_pullup</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>pin,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>func);</highlight></codeline>
<codeline lineno="77" refid="group__pinmux__interface_1ga527bc40d9df441ec79463d0ce8b69a82" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__pinmux__interface_1ga527bc40d9df441ec79463d0ce8b69a82" kindref="member">pmux_input</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>pin,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>func);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structpinmux__driver__api" refkind="compound"><highlight class="normal">__subsystem<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpinmux__driver__api" kindref="compound">pinmux_driver_api</ref><sp/>{</highlight></codeline>
<codeline lineno="81" refid="structpinmux__driver__api_1a23983515d5005441c71ea684e82cce99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__pinmux__interface_1ga3794003259d7588cb0969fa27562092d" kindref="member">pmux_set</ref><sp/><ref refid="structpinmux__driver__api_1a23983515d5005441c71ea684e82cce99" kindref="member">set</ref>;</highlight></codeline>
<codeline lineno="82" refid="structpinmux__driver__api_1a871e4c3e31b8bce4259b2dcf5972a6c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__pinmux__interface_1ga42dfbf99e469beafe9258e4dfb6c2384" kindref="member">pmux_get</ref><sp/><ref refid="structpinmux__driver__api_1a871e4c3e31b8bce4259b2dcf5972a6c6" kindref="member">get</ref>;</highlight></codeline>
<codeline lineno="83" refid="structpinmux__driver__api_1aa881913041ab8173177c88e0dee85d82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__pinmux__interface_1ga98b09868145eaa3580d9a77e3fdfaccb" kindref="member">pmux_pullup</ref><sp/><ref refid="structpinmux__driver__api_1aa881913041ab8173177c88e0dee85d82" kindref="member">pullup</ref>;</highlight></codeline>
<codeline lineno="84" refid="structpinmux__driver__api_1a3e3eb9d61aad212d6ed25e6477761ed7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__pinmux__interface_1ga527bc40d9df441ec79463d0ce8b69a82" kindref="member">pmux_input</ref><sp/><ref refid="structpinmux__driver__api_1a3e3eb9d61aad212d6ed25e6477761ed7" kindref="member">input</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="group__pinmux__interface_1ga6c00892519c29aab488169fe3ebae5ce" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__pinmux__interface_1ga6c00892519c29aab488169fe3ebae5ce" kindref="member">pinmux_pin_set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>pin,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>func)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpinmux__driver__api" kindref="compound">pinmux_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpinmux__driver__api" kindref="compound">pinmux_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structpinmux__driver__api_1a23983515d5005441c71ea684e82cce99" kindref="member">set</ref>(dev,<sp/>pin,<sp/>func);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="group__pinmux__interface_1ga650875ff6bc51e0a321886cc967d137f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__pinmux__interface_1ga650875ff6bc51e0a321886cc967d137f" kindref="member">pinmux_pin_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>pin,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>*func)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpinmux__driver__api" kindref="compound">pinmux_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpinmux__driver__api" kindref="compound">pinmux_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structpinmux__driver__api_1a871e4c3e31b8bce4259b2dcf5972a6c6" kindref="member">get</ref>(dev,<sp/>pin,<sp/>func);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="group__pinmux__interface_1ga6cde3b5db19672c38998a0cccd94ae6b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__pinmux__interface_1ga6cde3b5db19672c38998a0cccd94ae6b" kindref="member">pinmux_pin_pullup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>pin,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>func)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpinmux__driver__api" kindref="compound">pinmux_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpinmux__driver__api" kindref="compound">pinmux_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structpinmux__driver__api_1aa881913041ab8173177c88e0dee85d82" kindref="member">pullup</ref>(dev,<sp/>pin,<sp/>func);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="group__pinmux__interface_1ga263a5ce6a868711b65b7de5dd915a2b3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__pinmux__interface_1ga263a5ce6a868711b65b7de5dd915a2b3" kindref="member">pinmux_pin_input_enable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>pin,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>func)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpinmux__driver__api" kindref="compound">pinmux_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpinmux__driver__api" kindref="compound">pinmux_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structpinmux__driver__api_1a3e3eb9d61aad212d6ed25e6477761ed7" kindref="member">input</ref>(dev,<sp/>pin,<sp/>func);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_DRIVERS_PINMUX_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/drivers/pinmux.h"/>
  </compounddef>
</doxygen>
