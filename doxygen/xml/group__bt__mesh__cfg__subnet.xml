<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__bt__mesh__cfg__subnet" kind="group">
    <compoundname>bt_mesh_cfg_subnet</compoundname>
    <title>Subnet Configuration</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1ga6a6ba6ac1dcbe5f6cfce9bbf38c1851f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_subnet_add</definition>
        <argsstring>(uint16_t net_idx, const uint8_t key[16])</argsstring>
        <name>bt_mesh_subnet_add</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>key</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
<para>Add a Subnet. </para>
        </briefdescription>
        <detaileddescription>
<para>Adds a subnet with the given network index and network key to the list of known Subnets. All messages sent on the given Subnet will be processed by this node, and the node may send and receive Network Beacons on the given Subnet.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Root network key of the Subnet. All other keys are derived from this.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The Subnet was successfully added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INSUFF_RESOURCES</parametername>
</parameternamelist>
<parameterdescription>
<para>No room for this Subnet. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_UNSPECIFIED</parametername>
</parameternamelist>
<parameterdescription>
<para>The Subnet couldn&apos;t be created for some reason. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="230" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="230" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1ga47236f48940303be27fa6af4797424c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_subnet_update</definition>
        <argsstring>(uint16_t net_idx, const uint8_t key[16])</argsstring>
        <name>bt_mesh_subnet_update</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>key</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
<para>Update the given Subnet. </para>
        </briefdescription>
        <detaileddescription>
<para>Starts the Key Refresh procedure for this Subnet by adding a second set of encryption keys. The Subnet will continue sending with the old key (but receiving messages using both) until the Subnet enters Key Refresh phase 2.</para>
<para>This allows a network configurator to replace old network and application keys for the entire network, effectively removing access for all nodes that aren&apos;t given the new keys.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>New root network key of the Subnet.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The Subnet was updated with a second key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_NETKEY</parametername>
</parameternamelist>
<parameterdescription>
<para>The NetIdx is unknown. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_IDX_ALREADY_STORED</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>key</computeroutput> value is the same as the current key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_CANNOT_UPDATE</parametername>
</parameternamelist>
<parameterdescription>
<para>The Subnet cannot be updated for some reason. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="251" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="251" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1gaec9d827d5f026b473f3ac88988d3c842" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_subnet_del</definition>
        <argsstring>(uint16_t net_idx)</argsstring>
        <name>bt_mesh_subnet_del</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <briefdescription>
<para>Delete a Subnet. </para>
        </briefdescription>
        <detaileddescription>
<para>Removes the Subnet with the given network index from the node. The node will stop sending Network Beacons with the given Subnet, and can no longer process messages on this Subnet.</para>
<para>All Applications bound to this Subnet are also deleted.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The Subnet was deleted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_NETKEY</parametername>
</parameternamelist>
<parameterdescription>
<para>The NetIdx is unknown. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="266" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="266" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1gad48780acaae085350a8b48d033717bfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool bt_mesh_subnet_exists</definition>
        <argsstring>(uint16_t net_idx)</argsstring>
        <name>bt_mesh_subnet_exists</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <briefdescription>
<para>Check whether a Subnet is known. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if a Subnet with the given index exists, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="274" column="6" declfile="include/bluetooth/mesh/cfg.h" declline="274" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1gaef15af43e74e3c71590c63c5f1e3ea55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_subnet_kr_phase_set</definition>
        <argsstring>(uint16_t net_idx, uint8_t *phase)</argsstring>
        <name>bt_mesh_subnet_kr_phase_set</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Set the Subnet&apos;s Key Refresh phase. </para>
        </briefdescription>
        <detaileddescription>
<para>The Key Refresh procedure is started by updating the Subnet keys through <ref refid="group__bt__mesh__cfg__subnet_1ga47236f48940303be27fa6af4797424c2" kindref="member">bt_mesh_subnet_update</ref>. This puts the Subnet in Key Refresh Phase 1. Once all nodes have received the new Subnet key, Key Refresh Phase 2 can be activated through this function to start transmitting with the new network key. Finally, to revoke the old key, set the Key Refresh Phase to 3. This removes the old keys from the node, and returns the Subnet back to normal single-key operation with the new key set.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phase</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the new Key Refresh phase. Will return the actual Key Refresh phase after updating.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The Key Refresh phase of the Subnet was successfully changed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_NETKEY</parametername>
</parameternamelist>
<parameterdescription>
<para>The NetIdx is unknown. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_CANNOT_UPDATE</parametername>
</parameternamelist>
<parameterdescription>
<para>The given phase change is invalid. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="295" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="295" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1gad251907892150649f3f1ae6b4112cd84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_subnet_kr_phase_get</definition>
        <argsstring>(uint16_t net_idx, uint8_t *phase)</argsstring>
        <name>bt_mesh_subnet_kr_phase_get</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Get the Subnet&apos;s Key Refresh phase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phase</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Key Refresh variable to fill.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully populated the <computeroutput>phase</computeroutput> variable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_NETKEY</parametername>
</parameternamelist>
<parameterdescription>
<para>The NetIdx is unknown. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="305" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="305" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1ga59bf9f022665edc0ad03267e4bd16632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_subnet_node_id_set</definition>
        <argsstring>(uint16_t net_idx, enum bt_mesh_feat_state node_id)</argsstring>
        <name>bt_mesh_subnet_node_id_set</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <param>
          <type>enum <ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref></type>
          <declname>node_id</declname>
        </param>
        <briefdescription>
<para>Set the Node Identity state of the Subnet. </para>
        </briefdescription>
        <detaileddescription>
<para>The Node Identity state of a Subnet determines whether the Subnet advertises connectable Node Identity beacons for Proxy Clients to connect to. Once started, the Node Identity beacon runs for 60 seconds, or until it is stopped.</para>
<para>This function serves the same purpose as <ref refid="group__bt__mesh__proxy_1ga7fb3c76f1be6943dd4a18f26e8dd18e7" kindref="member">bt_mesh_proxy_identity_enable</ref>, but only acts on a single Subnet.</para>
<para>GATT Proxy support must be enabled through <verbatim>embed:rst:inline :kconfig:option:`CONFIG_BT_MESH_GATT_PROXY` </verbatim>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>New Node Identity state, must be either <ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedbabff35d6447ab5608292065f20d1e5275" kindref="member">BT_MESH_FEATURE_ENABLED</ref> or <ref refid="group__bt__mesh__cfg_1gga0a3557a71597885a31cf209c6b83cedba17b0aabc3d26da41aab09f009004f729" kindref="member">BT_MESH_FEATURE_DISABLED</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully set the Node Identity state of the Subnet. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_NETKEY</parametername>
</parameternamelist>
<parameterdescription>
<para>The NetIdx is unknown. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_FEAT_NOT_SUPP</parametername>
</parameternamelist>
<parameterdescription>
<para>The Node Identity feature is not supported. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_CANNOT_SET</parametername>
</parameternamelist>
<parameterdescription>
<para>Couldn&apos;t set the Node Identity state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="330" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="330" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1ga683d1f9abe82649a774b3d53dcaced8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_subnet_node_id_get</definition>
        <argsstring>(uint16_t net_idx, enum bt_mesh_feat_state *node_id)</argsstring>
        <name>bt_mesh_subnet_node_id_get</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idx</declname>
        </param>
        <param>
          <type>enum <ref refid="group__bt__mesh__cfg_1ga0a3557a71597885a31cf209c6b83cedb" kindref="member">bt_mesh_feat_state</ref> *</type>
          <declname>node_id</declname>
        </param>
        <briefdescription>
<para>Get the Node Identity state of the Subnet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Network index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Node Identity variable to fill.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully populated the <computeroutput>node_id</computeroutput> variable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>STATUS_INVALID_NETKEY</parametername>
</parameternamelist>
<parameterdescription>
<para>The NetIdx is unknown. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="341" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="341" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__cfg__subnet_1ga0fd04bff5423a36b013089a4ba351d67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>ssize_t bt_mesh_subnets_get</definition>
        <argsstring>(uint16_t net_idxs[], size_t max, off_t skip)</argsstring>
        <name>bt_mesh_subnets_get</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>net_idxs</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>max</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>skip</declname>
        </param>
        <briefdescription>
<para>Get a list of all known Subnet indexes. </para>
        </briefdescription>
        <detaileddescription>
<para>Builds a list of all known Subnet indexes in the <computeroutput>net_idxs</computeroutput> array. If the <computeroutput>net_idxs</computeroutput> array is smaller than the list of known Subnets, this function fills all available entries and returns <computeroutput>-ENOMEM</computeroutput>. In this case, the next <computeroutput>max</computeroutput> entries of the list can be read out by calling <programlisting><codeline><highlight class="normal">bt_mesh_subnets_get(list,<sp/>max,<sp/>max);</highlight></codeline>
</programlisting></para>
<para>Note that any changes to the Subnet list between calls to this function could change the order and number of entries in the list.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net_idxs</parametername>
</parameternamelist>
<parameterdescription>
<para>Array to fill. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>Max number of indexes to return. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>skip</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of indexes to skip. Enables batched processing of the list.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of indexes added to the <computeroutput>net_idxs</computeroutput> array, or <computeroutput>-ENOMEM</computeroutput> if the number of known Subnets exceeds the <computeroutput>max</computeroutput> parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/cfg.h" line="365" column="9" declfile="include/bluetooth/mesh/cfg.h" declline="365" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Subnet Configuration. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
