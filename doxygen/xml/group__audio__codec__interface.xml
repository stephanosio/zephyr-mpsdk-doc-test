<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__audio__codec__interface" kind="group">
    <compoundname>audio_codec_interface</compoundname>
    <title>Audio Codec Interface</title>
    <innerclass refid="unionaudio__dai__cfg__t" prot="public">audio_dai_cfg_t</innerclass>
    <innerclass refid="structaudio__codec__cfg" prot="public">audio_codec_cfg</innerclass>
    <innerclass refid="unionaudio__property__value__t" prot="public">audio_property_value_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__audio__codec__interface_1ga8fd2079e6128c8a6da59c2dee58101ca" prot="public" static="no" strong="no">
        <type></type>
        <name>audio_pcm_rate_t</name>
        <enumvalue id="group__audio__codec__interface_1gga8fd2079e6128c8a6da59c2dee58101caaaf78ccdda2de8de5e8978f5cc42318b8" prot="public">
          <name>AUDIO_PCM_RATE_8K</name>
          <initializer>= 8000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga8fd2079e6128c8a6da59c2dee58101caae86fe5a3fc91eb2a7d93aaec8fb1f2d3" prot="public">
          <name>AUDIO_PCM_RATE_16K</name>
          <initializer>= 16000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga8fd2079e6128c8a6da59c2dee58101caafaf9fdd89c698681685ee371ea834945" prot="public">
          <name>AUDIO_PCM_RATE_24K</name>
          <initializer>= 24000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga8fd2079e6128c8a6da59c2dee58101caa29ebb75bd5be524a7e60470b20fdee90" prot="public">
          <name>AUDIO_PCM_RATE_32K</name>
          <initializer>= 32000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga8fd2079e6128c8a6da59c2dee58101caae25d14c7f06f75b59407c1f881f1afad" prot="public">
          <name>AUDIO_PCM_RATE_44P1K</name>
          <initializer>= 44100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga8fd2079e6128c8a6da59c2dee58101caad9d6a01be714fc4b72ef03266b7cc913" prot="public">
          <name>AUDIO_PCM_RATE_48K</name>
          <initializer>= 48000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga8fd2079e6128c8a6da59c2dee58101caae682830b296e838f90dcff0689ae1811" prot="public">
          <name>AUDIO_PCM_RATE_96K</name>
          <initializer>= 96000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga8fd2079e6128c8a6da59c2dee58101caa526109e4c13be490c6977b5ec56624e9" prot="public">
          <name>AUDIO_PCM_RATE_192K</name>
          <initializer>= 192000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PCM audio sample rates </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audio/codec.h" line="34" column="1" bodyfile="include/audio/codec.h" bodystart="34" bodyend="43"/>
      </memberdef>
      <memberdef kind="enum" id="group__audio__codec__interface_1ga1898dae0fac2e2bf34596453037bff7e" prot="public" static="no" strong="no">
        <type></type>
        <name>audio_pcm_width_t</name>
        <enumvalue id="group__audio__codec__interface_1gga1898dae0fac2e2bf34596453037bff7ea222459c644bc02cb5edb07628de4c78e" prot="public">
          <name>AUDIO_PCM_WIDTH_16_BITS</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga1898dae0fac2e2bf34596453037bff7eae27896441250bb17791c1f7bb90d5638" prot="public">
          <name>AUDIO_PCM_WIDTH_20_BITS</name>
          <initializer>= 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga1898dae0fac2e2bf34596453037bff7eaf26a8f2a5e72586771f6e0fc84cf5daa" prot="public">
          <name>AUDIO_PCM_WIDTH_24_BITS</name>
          <initializer>= 24</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga1898dae0fac2e2bf34596453037bff7eab81e15d64e83e7e2371186fcd0e7fa0f" prot="public">
          <name>AUDIO_PCM_WIDTH_32_BITS</name>
          <initializer>= 32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PCM audio sample bit widths </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audio/codec.h" line="48" column="1" bodyfile="include/audio/codec.h" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="enum" id="group__audio__codec__interface_1ga147094be4c7c5d62df695673d293f12d" prot="public" static="no" strong="no">
        <type></type>
        <name>audio_dai_type_t</name>
        <enumvalue id="group__audio__codec__interface_1gga147094be4c7c5d62df695673d293f12da13b981200501719efb95e15effacafac" prot="public">
          <name>AUDIO_DAI_TYPE_I2S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga147094be4c7c5d62df695673d293f12da7e794ea660c9953b621f56d14e25103c" prot="public">
          <name>AUDIO_DAI_TYPE_INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Digital Audio Interface (DAI) type </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audio/codec.h" line="58" column="1" bodyfile="include/audio/codec.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="enum" id="group__audio__codec__interface_1ga5411b79fa217b0f9c63dc6890323804c" prot="public" static="no" strong="no">
        <type></type>
        <name>audio_property_t</name>
        <enumvalue id="group__audio__codec__interface_1gga5411b79fa217b0f9c63dc6890323804ca3a386a4b7bfe9ae97a9ffdd7740d73d8" prot="public">
          <name>AUDIO_PROPERTY_OUTPUT_VOLUME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga5411b79fa217b0f9c63dc6890323804cafc7d548769874638f28a782ea4b10bdb" prot="public">
          <name>AUDIO_PROPERTY_OUTPUT_MUTE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Codec properties that can be set by <ref refid="group__audio__codec__interface_1ga6d28af0279eb8e4b693ea35f5235f189" kindref="member">audio_codec_set_property()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audio/codec.h" line="66" column="1" bodyfile="include/audio/codec.h" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="enum" id="group__audio__codec__interface_1ga966cf980ce24855830e24b5de4d884d6" prot="public" static="no" strong="no">
        <type></type>
        <name>audio_channel_t</name>
        <enumvalue id="group__audio__codec__interface_1gga966cf980ce24855830e24b5de4d884d6a0419483310bfc5abe46a0c586070ed18" prot="public">
          <name>AUDIO_CHANNEL_FRONT_LEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga966cf980ce24855830e24b5de4d884d6a05525a25c5912eda05e9a8786a743a75" prot="public">
          <name>AUDIO_CHANNEL_FRONT_RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga966cf980ce24855830e24b5de4d884d6a6dfca2cc579d6619f87f38c90d0633e6" prot="public">
          <name>AUDIO_CHANNEL_LFE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga966cf980ce24855830e24b5de4d884d6a9fc77d8958944d029fc2f056774b1be8" prot="public">
          <name>AUDIO_CHANNEL_FRONT_CENTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga966cf980ce24855830e24b5de4d884d6a4ab25a6492626c6634c41b39cf9462bc" prot="public">
          <name>AUDIO_CHANNEL_REAR_LEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga966cf980ce24855830e24b5de4d884d6a370fed729325e3f3f79cc920f8fe37a9" prot="public">
          <name>AUDIO_CHANNEL_REAR_RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga966cf980ce24855830e24b5de4d884d6af354197a57c321b4f966a33adf499b04" prot="public">
          <name>AUDIO_CHANNEL_REAR_CENTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga966cf980ce24855830e24b5de4d884d6ada91a4234b3d7b115768ba08f39482ba" prot="public">
          <name>AUDIO_CHANNEL_SIDE_LEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga966cf980ce24855830e24b5de4d884d6a7eac9f339583f2ce9f9a1a30c02555ec" prot="public">
          <name>AUDIO_CHANNEL_SIDE_RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__audio__codec__interface_1gga966cf980ce24855830e24b5de4d884d6a16fbc4bf16306517d21264188f447878" prot="public">
          <name>AUDIO_CHANNEL_ALL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Audio channel identifiers to use in <ref refid="group__audio__codec__interface_1ga6d28af0279eb8e4b693ea35f5235f189" kindref="member">audio_codec_set_property()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audio/codec.h" line="74" column="1" bodyfile="include/audio/codec.h" bodystart="74" bodyend="85"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__audio__codec__interface_1ga0c3344ea62fe994203315a0a7c20616c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int audio_codec_configure</definition>
        <argsstring>(const struct device *dev, struct audio_codec_cfg *cfg)</argsstring>
        <name>audio_codec_configure</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>struct <ref refid="structaudio__codec__cfg" kindref="compound">audio_codec_cfg</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Configure the audio codec. </para>
        </briefdescription>
        <detaileddescription>
<para>Configure the audio codec device according to the configuration parameters provided as input</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for codec driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing the codec configuration.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative error code on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audio/codec.h" line="144" column="19" bodyfile="include/audio/codec.h" bodystart="144" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="group__audio__codec__interface_1ga186e9c63c792072280558b953ced1cf7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void audio_codec_start_output</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>audio_codec_start_output</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Set codec to start output audio playback. </para>
        </briefdescription>
        <detaileddescription>
<para>Setup the audio codec device to start the audio playback</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for codec driver instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audio/codec.h" line="160" column="20" bodyfile="include/audio/codec.h" bodystart="160" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="group__audio__codec__interface_1ga6faba1d52c8d93e5ab5ec9954bf52f4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void audio_codec_stop_output</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>audio_codec_stop_output</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Set codec to stop output audio playback. </para>
        </briefdescription>
        <detaileddescription>
<para>Setup the audio codec device to stop the audio playback</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for codec driver instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audio/codec.h" line="175" column="20" bodyfile="include/audio/codec.h" bodystart="175" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="group__audio__codec__interface_1ga6d28af0279eb8e4b693ea35f5235f189" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int audio_codec_set_property</definition>
        <argsstring>(const struct device *dev, audio_property_t property, audio_channel_t channel, audio_property_value_t val)</argsstring>
        <name>audio_codec_set_property</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="group__audio__codec__interface_1ga5411b79fa217b0f9c63dc6890323804c" kindref="member">audio_property_t</ref></type>
          <declname>property</declname>
        </param>
        <param>
          <type><ref refid="group__audio__codec__interface_1ga966cf980ce24855830e24b5de4d884d6" kindref="member">audio_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="unionaudio__property__value__t" kindref="compound">audio_property_value_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set a codec property defined by audio_property_t. </para>
        </briefdescription>
        <detaileddescription>
<para>Set a property such as volume level, clock configuration etc.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for codec driver instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>The codec property to set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The audio channel for which the property has to be set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a property value of type audio_codec_property_value_t</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative error code on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audio/codec.h" line="195" column="19" bodyfile="include/audio/codec.h" bodystart="195" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="group__audio__codec__interface_1gadd16956b1160388a17c23d6cc84218b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int audio_codec_apply_properties</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>audio_codec_apply_properties</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Atomically apply any cached properties. </para>
        </briefdescription>
        <detaileddescription>
<para>Following one or more invocations of audio_codec_set_property, that may have been cached by the driver, audio_codec_apply_properties can be invoked to apply all the properties as atomic as possible</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for codec driver instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative error code on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audio/codec.h" line="217" column="19" bodyfile="include/audio/codec.h" bodystart="217" bodyend="223"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstraction for audio codecs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
