<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="shell__dummy_8h" kind="file" language="C++">
    <compoundname>shell_dummy.h</compoundname>
    <includes refid="shell_2shell_8h" local="no">shell/shell.h</includes>
    <incdepgraph>
      <node id="43">
        <label>logging/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>logging/log_backend.h</label>
        <link refid="log__backend_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>logging/log_core.h</label>
        <link refid="include_2logging_2log__core_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>logging/log_instance.h</label>
        <link refid="log__instance_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>logging/log_msg.h</label>
        <link refid="log__msg_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>logging/log_msg2.h</label>
        <link refid="include_2logging_2log__msg2_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>logging/log_output.h</label>
        <link refid="log__output_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>shell/shell.h</label>
        <link refid="shell_2shell_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/shell/shell_dummy.h</label>
        <link refid="shell__dummy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>shell/shell_fprintf.h</label>
        <link refid="shell__fprintf_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>shell/shell_history.h</label>
        <link refid="shell__history_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>shell/shell_log_backend.h</label>
        <link refid="shell__log__backend_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>shell/shell_types.h</label>
        <link refid="shell__types_8h"/>
      </node>
      <node id="38">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="31">
        <label>sys/cbprintf.h</label>
        <link refid="cbprintf_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>sys/cbprintf_cxx.h</label>
        <link refid="cbprintf__cxx_8h"/>
      </node>
      <node id="34">
        <label>sys/cbprintf_internal.h</label>
        <link refid="cbprintf__internal_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>sys/mpsc_packet.h</label>
        <link refid="mpsc__packet_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>sys/mpsc_pbuf.h</label>
        <link refid="mpsc__pbuf_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>sys/ring_buffer.h</label>
        <link refid="ring__buffer_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="7">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="11">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="13">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="33">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>syscalls/log_core.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__core_8h"/>
      </node>
      <node id="37">
        <label>syscalls/log_msg2.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__msg2_8h"/>
      </node>
      <node id="36">
        <label>alloca.h</label>
      </node>
      <node id="17">
        <label>kernel.h</label>
      </node>
      <node id="32">
        <label>stdarg.h</label>
      </node>
      <node id="12">
        <label>stddef.h</label>
      </node>
      <node id="45">
        <label>syscall.h</label>
      </node>
      <node id="20">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="3">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structshell__dummy" prot="public">shell_dummy</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="shell__dummy_8h_1ab54399f9fbe08aafb9a7bdf540ff1c70" prot="public" static="no">
        <name>SHELL_DUMMY_DEFINE</name>
        <param><defname>_name</defname></param>
        <initializer>	static struct <ref refid="structshell__dummy" kindref="compound">shell_dummy</ref> _name##_shell_dummy;			\
	struct <ref refid="structshell__transport" kindref="compound">shell_transport</ref> _name = {				\
		.api = &amp;<ref refid="shell__dummy_8h_1a26384803c3ef08c2c357f2c383f837e6" kindref="member">shell_dummy_transport_api</ref>,			\
		.ctx = (struct <ref refid="structshell__dummy" kindref="compound">shell_dummy</ref> *)&amp;_name##_shell_dummy	\
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell_dummy.h" line="30" column="9" bodyfile="include/shell/shell_dummy.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="shell__dummy_8h_1a26384803c3ef08c2c357f2c383f837e6" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structshell__transport__api" kindref="compound">shell_transport_api</ref></type>
        <definition>const struct shell_transport_api shell_dummy_transport_api</definition>
        <argsstring></argsstring>
        <name>shell_dummy_transport_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell_dummy.h" line="18" column="39" declfile="include/shell/shell_dummy.h" declline="18" declcolumn="39"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="shell__dummy_8h_1a12827fc2f644eb4748408807d763419e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct <ref refid="structshell" kindref="compound">shell</ref> *</type>
        <definition>const struct shell * shell_backend_dummy_get_ptr</definition>
        <argsstring>(void)</argsstring>
        <name>shell_backend_dummy_get_ptr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function shall not be used directly. It provides pointer to shell dummy backend instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Function returns pointer to the shell dummy instance. This instance can be next used with shell_execute_cmd function in order to test commands behavior.</para>
<para><simplesect kind="return"><para>Pointer to the shell instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell_dummy.h" line="46" column="18" declfile="include/shell/shell_dummy.h" declline="46" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="shell__dummy_8h_1ad2885029f958d62819a7df0d74116c71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * shell_backend_dummy_get_output</definition>
        <argsstring>(const struct shell *shell, size_t *sizep)</argsstring>
        <name>shell_backend_dummy_get_output</name>
        <param>
          <type>const struct <ref refid="structshell" kindref="compound">shell</ref> *</type>
          <declname>shell</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>sizep</declname>
        </param>
        <briefdescription>
<para>Returns the buffered output in the shell and resets the pointer. </para>
        </briefdescription>
        <detaileddescription>
<para>The returned data is always followed by a nul character at position *sizep</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shell</parametername>
</parameternamelist>
<parameterdescription>
<para>Shell pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sizep</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns size of data in shell buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to buffer containing shell output </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell_dummy.h" line="57" column="12" declfile="include/shell/shell_dummy.h" declline="57" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="shell__dummy_8h_1a8c740c0465fca1df77f581a3469352cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shell_backend_dummy_clear_output</definition>
        <argsstring>(const struct shell *shell)</argsstring>
        <name>shell_backend_dummy_clear_output</name>
        <param>
          <type>const struct <ref refid="structshell" kindref="compound">shell</ref> *</type>
          <declname>shell</declname>
        </param>
        <briefdescription>
<para>Clears the output buffer in the shell backend. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shell</parametername>
</parameternamelist>
<parameterdescription>
<para>Shell pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shell/shell_dummy.h" line="65" column="6" declfile="include/shell/shell_dummy.h" declline="65" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Shell<sp/>backend<sp/>used<sp/>for<sp/>testing</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SHELL_DUMMY_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHELL_DUMMY_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="shell_2shell_8h" kindref="compound">shell/shell.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshell__transport__api" kindref="compound">shell_transport_api</ref><sp/><ref refid="shell__dummy_8h_1a26384803c3ef08c2c357f2c383f837e6" kindref="member">shell_dummy_transport_api</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="structshell__dummy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshell__dummy" kindref="compound">shell_dummy</ref><sp/>{</highlight></codeline>
<codeline lineno="21" refid="structshell__dummy_1a18b0aa67864bbb1bedb0af574d433cc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structshell__dummy_1a18b0aa67864bbb1bedb0af574d433cc8" kindref="member">initialized</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structshell__dummy_1a2eb3c3976f7d0d22318ba376ca3617c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structshell__dummy_1a2eb3c3976f7d0d22318ba376ca3617c9" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="structshell__dummy_1a3d227470504d3c565cdd5ff3408b69d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structshell__dummy_1a3d227470504d3c565cdd5ff3408b69d3" kindref="member">buf</ref>[CONFIG_SHELL_BACKEND_DUMMY_BUF_SIZE];</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="shell__dummy_8h_1ab54399f9fbe08aafb9a7bdf540ff1c70" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHELL_DUMMY_DEFINE(_name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>struct<sp/>shell_dummy<sp/>_name##_shell_dummy;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>shell_transport<sp/>_name<sp/>=<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.api<sp/>=<sp/>&amp;shell_dummy_transport_api,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ctx<sp/>=<sp/>(struct<sp/>shell_dummy<sp/>*)&amp;_name##_shell_dummy<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="shell__dummy_8h_1a12827fc2f644eb4748408807d763419e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshell" kindref="compound">shell</ref><sp/>*<ref refid="shell__dummy_8h_1a12827fc2f644eb4748408807d763419e" kindref="member">shell_backend_dummy_get_ptr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="shell__dummy_8h_1ad2885029f958d62819a7df0d74116c71" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="shell__dummy_8h_1ad2885029f958d62819a7df0d74116c71" kindref="member">shell_backend_dummy_get_output</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structshell" kindref="compound">shell</ref><sp/>*<ref refid="structshell" kindref="compound">shell</ref>,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*sizep);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="shell__dummy_8h_1a8c740c0465fca1df77f581a3469352cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="shell__dummy_8h_1a8c740c0465fca1df77f581a3469352cd" kindref="member">shell_backend_dummy_clear_output</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structshell" kindref="compound">shell</ref><sp/>*<ref refid="structshell" kindref="compound">shell</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SHELL_DUMMY_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/shell/shell_dummy.h"/>
  </compounddef>
</doxygen>
