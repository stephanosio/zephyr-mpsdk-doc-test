<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structnet__timeout" kind="struct" language="C++" prot="public">
    <compoundname>net_timeout</compoundname>
    <includes refid="net__timeout_8h" local="no">net_timeout.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnet__timeout_1aad22be1aa3cdc73fbb14a436fc778282" prot="public" static="no" mutable="no">
        <type><ref refid="slist_8h_1a69bf43aad81e3ee2d55250c59b857493" kindref="member">sys_snode_t</ref></type>
        <definition>sys_snode_t net_timeout::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to link multiple timeouts that share a common timer infrastructure.</para>
<para>For examples a set of related timers may use a single delayed work structure, which is always scheduled at the shortest time to a timeout event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_timeout.h" line="62" column="13" bodyfile="include/net/net_timeout.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__timeout_1af4cdf7a22fea4da9bb68105850c2f1ad" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t net_timeout::timer_start</definition>
        <argsstring></argsstring>
        <name>timer_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_timeout.h" line="67" column="10" bodyfile="include/net/net_timeout.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__timeout_1a05142cac2404dc31bf068a439ed309e1" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t net_timeout::timer_timeout</definition>
        <argsstring></argsstring>
        <name>timer_timeout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_timeout.h" line="75" column="10" bodyfile="include/net/net_timeout.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnet__timeout_1a35b1f793d3f1432123093ca48220426b" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t net_timeout::wrap_counter</definition>
        <argsstring></argsstring>
        <name>wrap_counter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_timeout.h" line="83" column="10" bodyfile="include/net/net_timeout.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Generic struct for handling network timeouts.</para>
<para>Except for the linking node, all access to state from these objects must go through the defined API. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>_snode</label>
      </node>
      <node id="1">
        <label>net_timeout</label>
        <link refid="structnet__timeout"/>
        <childnode refid="2" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/net/net_timeout.h" line="55" column="1" bodyfile="include/net/net_timeout.h" bodystart="55" bodyend="84"/>
    <listofallmembers>
      <member refid="structnet__timeout_1aad22be1aa3cdc73fbb14a436fc778282" prot="public" virt="non-virtual"><scope>net_timeout</scope><name>node</name></member>
      <member refid="structnet__timeout_1af4cdf7a22fea4da9bb68105850c2f1ad" prot="public" virt="non-virtual"><scope>net_timeout</scope><name>timer_start</name></member>
      <member refid="structnet__timeout_1a05142cac2404dc31bf068a439ed309e1" prot="public" virt="non-virtual"><scope>net_timeout</scope><name>timer_timeout</name></member>
      <member refid="structnet__timeout_1a35b1f793d3f1432123093ca48220426b" prot="public" virt="non-virtual"><scope>net_timeout</scope><name>wrap_counter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
