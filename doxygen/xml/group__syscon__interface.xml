<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__syscon__interface" kind="group">
    <compoundname>syscon_interface</compoundname>
    <title>SYSCON Interface</title>
    <innerclass refid="structsyscon__driver__api" prot="public">syscon_driver_api</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__syscon__interface_1ga51cf97235e40c0fa63d5c91fcee62819" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* syscon_api_get_base) (const struct device *dev, uintptr_t *addr)</definition>
        <argsstring>)(const struct device *dev, uintptr_t *addr)</argsstring>
        <name>syscon_api_get_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>API template to get the base address of the syscon region.</para>
<para><simplesect kind="see"><para><ref refid="group__syscon__interface_1ga14c9c3bb09cec4c297a22f1ec751ceff" kindref="member">syscon_get_base</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/syscon.h" line="34" column="9" bodyfile="include/drivers/syscon.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__syscon__interface_1gab23dbb591174dcb5944ce534c851eea8" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* syscon_api_read_reg) (const struct device *dev, uint16_t reg, uint32_t *val)</definition>
        <argsstring>)(const struct device *dev, uint16_t reg, uint32_t *val)</argsstring>
        <name>syscon_api_read_reg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>API template to read a single register.</para>
<para><simplesect kind="see"><para><ref refid="group__syscon__interface_1ga2b912d694cce403011212b83e98a7426" kindref="member">syscon_read_reg</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/syscon.h" line="41" column="9" bodyfile="include/drivers/syscon.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__syscon__interface_1ga1939885e191dbf49ef1698425085ee56" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* syscon_api_write_reg) (const struct device *dev, uint16_t reg, uint32_t val)</definition>
        <argsstring>)(const struct device *dev, uint16_t reg, uint32_t val)</argsstring>
        <name>syscon_api_write_reg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>API template to write a single register.</para>
<para><simplesect kind="see"><para><ref refid="group__syscon__interface_1gad38b74cf372f8cdeb0439d6524af7da8" kindref="member">syscon_write_reg</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/syscon.h" line="48" column="9" bodyfile="include/drivers/syscon.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__syscon__interface_1gae09207fe29a18f32f9e52a77c8c1695f" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* syscon_api_get_size) (const struct device *dev, size_t *size)</definition>
        <argsstring>)(const struct device *dev, size_t *size)</argsstring>
        <name>syscon_api_get_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>API template to get the size of the syscon register.</para>
<para><simplesect kind="see"><para><ref refid="group__syscon__interface_1ga431adee943fe536fc0c4abe7e169bdf5" kindref="member">syscon_get_size</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/syscon.h" line="55" column="9" bodyfile="include/drivers/syscon.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__syscon__interface_1ga14c9c3bb09cec4c297a22f1ec751ceff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int syscon_get_base</definition>
        <argsstring>(const struct device *dev, uintptr_t *addr)</argsstring>
        <name>syscon_get_base</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref> *</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Get the syscon base address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>The device to get the register size for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to write the base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 When addr was written to. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/syscon.h" line="74" column="6" declfile="include/drivers/syscon.h" declline="74" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__syscon__interface_1ga2b912d694cce403011212b83e98a7426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int syscon_read_reg</definition>
        <argsstring>(const struct device *dev, uint16_t reg, uint32_t *val)</argsstring>
        <name>syscon_read_reg</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>reg</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Read from syscon register. </para>
        </briefdescription>
        <detaileddescription>
<para>This function reads from a specific register in the syscon area</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>The device to get the register size for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>The register offset </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The returned value read from the syscon register</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/syscon.h" line="99" column="6" declfile="include/drivers/syscon.h" declline="99" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__syscon__interface_1gad38b74cf372f8cdeb0439d6524af7da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int syscon_write_reg</definition>
        <argsstring>(const struct device *dev, uint16_t reg, uint32_t val)</argsstring>
        <name>syscon_write_reg</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>reg</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Write to syscon register. </para>
        </briefdescription>
        <detaileddescription>
<para>This function writes to a specific register in the syscon area</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>The device to get the register size for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>The register offset </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be written in the register</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/syscon.h" line="124" column="6" declfile="include/drivers/syscon.h" declline="124" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__syscon__interface_1ga431adee943fe536fc0c4abe7e169bdf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int syscon_get_size</definition>
        <argsstring>(const struct device *dev, size_t *size)</argsstring>
        <name>syscon_get_size</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of the syscon register in bytes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>The device to get the register size for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to write the size to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/syscon.h" line="144" column="6" declfile="include/drivers/syscon.h" declline="144" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>SYSCON Interface. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
