<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="log__output__dict_8h" kind="file" language="C++">
    <compoundname>log_output_dict.h</compoundname>
    <includes refid="log__output_8h" local="no">logging/log_output.h</includes>
    <includes refid="include_2logging_2log__msg2_8h" local="no">logging/log_msg2.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes refid="toolchain_8h" local="no">toolchain.h</includes>
    <includes refid="util_8h" local="no">sys/util.h</includes>
    <incdepgraph>
      <node id="17">
        <label>logging/log_instance.h</label>
        <link refid="log__instance_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>logging/log_msg.h</label>
        <link refid="log__msg_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>logging/log_msg2.h</label>
        <link refid="include_2logging_2log__msg2_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>logging/log_output.h</label>
        <link refid="log__output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/logging/log_output_dict.h</label>
        <link refid="log__output__dict_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="19">
        <label>sys/cbprintf.h</label>
        <link refid="cbprintf_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>sys/cbprintf_cxx.h</label>
        <link refid="cbprintf__cxx_8h"/>
      </node>
      <node id="22">
        <label>sys/cbprintf_internal.h</label>
        <link refid="cbprintf__internal_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>sys/mpsc_packet.h</label>
        <link refid="mpsc__packet_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="10">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="8">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="9">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="21">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>syscalls/log_msg2.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__msg2_8h"/>
      </node>
      <node id="27">
        <label>alloca.h</label>
      </node>
      <node id="20">
        <label>stdarg.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="25">
        <label>syscalls/errno_private.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structlog__dict__output__normal__msg__hdr__t" prot="public">log_dict_output_normal_msg_hdr_t</innerclass>
    <innerclass refid="structlog__dict__output__dropped__msg__t" prot="public">log_dict_output_dropped_msg_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="log__output__dict_8h_1a754616ab4233be81726614f64d5d4031" prot="public" static="no" strong="no">
        <type></type>
        <name>log_dict_output_msg_type</name>
        <enumvalue id="log__output__dict_8h_1a754616ab4233be81726614f64d5d4031a812d08168eae9c7ebbe7dfda459b1304" prot="public">
          <name>MSG_NORMAL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="log__output__dict_8h_1a754616ab4233be81726614f64d5d4031ab620d227e5d1704bf479bee5e650e1cd" prot="public">
          <name>MSG_DROPPED_MSG</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Log message type </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_output_dict.h" line="23" column="1" bodyfile="include/logging/log_output_dict.h" bodystart="23" bodyend="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="log__output__dict_8h_1a530336d6a715041fe805d4df6616fda3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void log_dict_output_msg2_process</definition>
        <argsstring>(const struct log_output *log_output, struct log_msg2 *msg, uint32_t flags)</argsstring>
        <name>log_dict_output_msg2_process</name>
        <param>
          <type>const struct <ref refid="structlog__output" kindref="compound">log_output</ref> *</type>
          <declname>log_output</declname>
        </param>
        <param>
          <type>struct <ref refid="structlog__msg2" kindref="compound">log_msg2</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Process log messages v2 for dictionary-based logging. </para>
        </briefdescription>
        <detaileddescription>
<para>Function is using provided context with the buffer and output function to process formatted string and output the data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="structlog__output" kindref="compound">log_output</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the log output instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Log message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_output_dict.h" line="59" column="6" declfile="include/logging/log_output_dict.h" declline="59" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="log__output__dict_8h_1a52364c7c9f15b9b69c5c83010758faa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void log_dict_output_dropped_process</definition>
        <argsstring>(const struct log_output *output, uint32_t cnt)</argsstring>
        <name>log_dict_output_dropped_process</name>
        <param>
          <type>const struct <ref refid="structlog__output" kindref="compound">log_output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
<para>Process dropped messages indication for dictionary-based logging. </para>
        </briefdescription>
        <detaileddescription>
<para>Function prints error message indicating lost log messages.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the log output instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of dropped messages. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/log_output_dict.h" line="69" column="6" declfile="include/logging/log_output_dict.h" declline="69" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_LOGGING_LOG_OUTPUT_DICT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_LOGGING_LOG_OUTPUT_DICT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="log__output_8h" kindref="compound">logging/log_output.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2logging_2log__msg2_8h" kindref="compound">logging/log_msg2.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="toolchain_8h" kindref="compound">toolchain.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="util_8h" kindref="compound">sys/util.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="log__output__dict_8h_1a754616ab4233be81726614f64d5d4031" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="log__output__dict_8h_1a754616ab4233be81726614f64d5d4031" kindref="member">log_dict_output_msg_type</ref><sp/>{</highlight></codeline>
<codeline lineno="24" refid="log__output__dict_8h_1a754616ab4233be81726614f64d5d4031a812d08168eae9c7ebbe7dfda459b1304" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log__output__dict_8h_1a754616ab4233be81726614f64d5d4031a812d08168eae9c7ebbe7dfda459b1304" kindref="member">MSG_NORMAL</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="25" refid="log__output__dict_8h_1a754616ab4233be81726614f64d5d4031ab620d227e5d1704bf479bee5e650e1cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log__output__dict_8h_1a754616ab4233be81726614f64d5d4031ab620d227e5d1704bf479bee5e650e1cd" kindref="member">MSG_DROPPED_MSG</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="structlog__dict__output__normal__msg__hdr__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__dict__output__normal__msg__hdr__t" kindref="compound">log_dict_output_normal_msg_hdr_t</ref><sp/>{</highlight></codeline>
<codeline lineno="32" refid="structlog__dict__output__normal__msg__hdr__t_1a5c2916995965e12d5504d5f9ae3ea04f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structlog__dict__output__normal__msg__hdr__t_1a5c2916995965e12d5504d5f9ae3ea04f" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="33" refid="structlog__dict__output__normal__msg__hdr__t_1ac70bc70b6c59d6905b86ddb94f0f8f11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structlog__dict__output__normal__msg__hdr__t_1ac70bc70b6c59d6905b86ddb94f0f8f11" kindref="member">domain</ref>:3;</highlight></codeline>
<codeline lineno="34" refid="structlog__dict__output__normal__msg__hdr__t_1a41b40465b8d86d25cfdf61fd8067c60f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structlog__dict__output__normal__msg__hdr__t_1a41b40465b8d86d25cfdf61fd8067c60f" kindref="member">level</ref>:3;</highlight></codeline>
<codeline lineno="35" refid="structlog__dict__output__normal__msg__hdr__t_1a207adee5780cc0c33adc4a3e9b28d2ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structlog__dict__output__normal__msg__hdr__t_1a207adee5780cc0c33adc4a3e9b28d2ed" kindref="member">package_len</ref>:10;</highlight></codeline>
<codeline lineno="36" refid="structlog__dict__output__normal__msg__hdr__t_1a7fb4f8934358565646f35c20238a1289" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structlog__dict__output__normal__msg__hdr__t_1a7fb4f8934358565646f35c20238a1289" kindref="member">data_len</ref>:12;</highlight></codeline>
<codeline lineno="37" refid="structlog__dict__output__normal__msg__hdr__t_1a6570a840284fee5b84dacc746ce838fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref><sp/><ref refid="structlog__dict__output__normal__msg__hdr__t_1a6570a840284fee5b84dacc746ce838fc" kindref="member">source</ref>;</highlight></codeline>
<codeline lineno="38" refid="structlog__dict__output__normal__msg__hdr__t_1adb10537b51af8632dd9d9e18e18f15e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2logging_2log__msg2_8h_1acbc134e9ee5f3768a534d95a4c8335e8" kindref="member">log_timestamp_t</ref><sp/><ref refid="structlog__dict__output__normal__msg__hdr__t_1adb10537b51af8632dd9d9e18e18f15e4" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}<sp/>__packed;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="structlog__dict__output__dropped__msg__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog__dict__output__dropped__msg__t" kindref="compound">log_dict_output_dropped_msg_t</ref><sp/>{</highlight></codeline>
<codeline lineno="46" refid="structlog__dict__output__dropped__msg__t_1a253ff870422b308bb1454ea55251d1f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structlog__dict__output__dropped__msg__t_1a253ff870422b308bb1454ea55251d1f1" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="47" refid="structlog__dict__output__dropped__msg__t_1a893e9d78bde12f6130a55962bb78c0b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structlog__dict__output__dropped__msg__t_1a893e9d78bde12f6130a55962bb78c0b1" kindref="member">num_dropped_messages</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}<sp/>__packed;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="log__output__dict_8h_1a530336d6a715041fe805d4df6616fda3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="log__output__dict_8h_1a530336d6a715041fe805d4df6616fda3" kindref="member">log_dict_output_msg2_process</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlog__output" kindref="compound">log_output</ref><sp/>*<ref refid="structlog__output" kindref="compound">log_output</ref>,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlog__msg2" kindref="compound">log_msg2</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="log__output__dict_8h_1a52364c7c9f15b9b69c5c83010758faa2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="log__output__dict_8h_1a52364c7c9f15b9b69c5c83010758faa2" kindref="member">log_dict_output_dropped_process</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlog__output" kindref="compound">log_output</ref><sp/>*output,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>cnt);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_LOGGING_LOG_OUTPUT_DICT_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/logging/log_output_dict.h"/>
  </compounddef>
</doxygen>
