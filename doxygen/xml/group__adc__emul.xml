<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__adc__emul" kind="group">
    <compoundname>adc_emul</compoundname>
    <title>Emulated ADC</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__adc__emul_1ga8047a2a3700e085df84dc1dbc2ca155f" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* adc_emul_value_func) (const struct device *dev, unsigned int chan, void *data, uint32_t *result)</definition>
        <argsstring>)(const struct device *dev, unsigned int chan, void *data, uint32_t *result)</argsstring>
        <name>adc_emul_value_func</name>
        <briefdescription>
<para>Type definition of the function which is used to obtain ADC mV input values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the device structure for the driver instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC channel to sample </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>User data which was passed on <ref refid="group__adc__emul_1gae5036c155341dd61d37558c311d3c554" kindref="member">adc_emul_value_func_set</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The result value which will be set as input for ADC <computeroutput>chan</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>other as error code which ends ADC context </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/adc/adc_emul.h" line="59" column="9" bodyfile="include/drivers/adc/adc_emul.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__adc__emul_1ga564c588b71ec63aedb32f0c6221abd69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int adc_emul_const_value_set</definition>
        <argsstring>(const struct device *dev, unsigned int chan, uint32_t value)</argsstring>
        <name>adc_emul_const_value_set</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
          <declname>chan</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set constant mV value input for emulated ADC <computeroutput>chan</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>The emulated ADC device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel of ADC which input is assigned </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>New voltage in mV to assign to <computeroutput>chan</computeroutput> input</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EINVAL if an invalid argument is provided </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/adc/adc_emul.h" line="72" column="5" declfile="include/drivers/adc/adc_emul.h" declline="72" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__adc__emul_1gae5036c155341dd61d37558c311d3c554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int adc_emul_value_func_set</definition>
        <argsstring>(const struct device *dev, unsigned int chan, adc_emul_value_func func, void *data)</argsstring>
        <name>adc_emul_value_func_set</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
          <declname>chan</declname>
        </param>
        <param>
          <type><ref refid="group__adc__emul_1ga8047a2a3700e085df84dc1dbc2ca155f" kindref="member">adc_emul_value_func</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Set function used to obtain voltage for input of emulated ADC <computeroutput>chan</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>The emulated ADC device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel of ADC to which <computeroutput>func</computeroutput> is assigned </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>New function to assign to <computeroutput>chan</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data passed to <computeroutput>func</computeroutput> on call</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EINVAL if an invalid argument is provided </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/adc/adc_emul.h" line="87" column="5" declfile="include/drivers/adc/adc_emul.h" declline="87" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__adc__emul_1ga53179798ec576b329927e5b6c845aa04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int adc_emul_ref_voltage_set</definition>
        <argsstring>(const struct device *dev, enum adc_reference ref, uint16_t value)</argsstring>
        <name>adc_emul_ref_voltage_set</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__adc__interface_1ga91b0f997d73739cf9f7349b7581e1f56" kindref="member">adc_reference</ref></type>
          <declname>ref</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set reference voltage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>The emulated ADC device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference config which is changed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>New reference voltage in mV</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EINVAL if an invalid argument is provided </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/adc/adc_emul.h" line="100" column="5" declfile="include/drivers/adc/adc_emul.h" declline="100" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Emulated ADC backend API. </para>
    </briefdescription>
    <detaileddescription>
<para>Behaviour of emulated ADC is application-defined. As-such, each application may</para>
<para><itemizedlist>
<listitem><para>define a Device Tree overlay file to indicate the number of ADC controllers as well as the number of channels for each controller</para>
</listitem><listitem><para>set default reference voltages in Device Tree or using <ref refid="group__adc__emul_1ga53179798ec576b329927e5b6c845aa04" kindref="member">adc_emul_ref_voltage_set</ref></para>
</listitem><listitem><para>asynchronously call <ref refid="group__adc__emul_1ga564c588b71ec63aedb32f0c6221abd69" kindref="member">adc_emul_const_value_set</ref> in order to set constant mV value on emulated ADC input</para>
</listitem><listitem><para>asynchronously call <ref refid="group__adc__emul_1gae5036c155341dd61d37558c311d3c554" kindref="member">adc_emul_value_func_set</ref> in order to assign function which will be used to obtain voltage on emulated ADC input</para>
</listitem></itemizedlist>
</para>
<para>An example of an appropriate Device Tree overlay file is in tests/drivers/adc/adc_api/boards/native_posix.overlay</para>
<para>An example of using emulated ADC backend API is in the file tests/drivers/adc/adc_emul/src/main.c </para>
    </detaileddescription>
  </compounddef>
</doxygen>
