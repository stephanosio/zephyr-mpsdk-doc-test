<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structmqtt__publish__param" kind="struct" language="C++" prot="public">
    <compoundname>mqtt_publish_param</compoundname>
    <includes refid="mqtt_8h" local="no">mqtt.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structmqtt__publish__param_1a9841a4fbb30b597a9710863ce6034688" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structmqtt__publish__message" kindref="compound">mqtt_publish_message</ref></type>
        <definition>struct mqtt_publish_message mqtt_publish_param::message</definition>
        <argsstring></argsstring>
        <name>message</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Messages including topic, QoS and its payload (if any) to be published. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="244" column="27" bodyfile="include/net/mqtt.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__publish__param_1aac4c6ba605506c183d2d5bdd7e550b3e" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t mqtt_publish_param::message_id</definition>
        <argsstring></argsstring>
        <name>message_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message id used for the publish message. Redundant for QoS 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="247" column="10" bodyfile="include/net/mqtt.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__publish__param_1a2c2062c2b3ad027d5dfea56cb81c48e7" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t mqtt_publish_param::dup_flag</definition>
        <argsstring></argsstring>
        <name>dup_flag</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Duplicate flag. If 1, it indicates the message is being retransmitted. Has no meaning with QoS 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="252" column="9" bodyfile="include/net/mqtt.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__publish__param_1a9b2c6fad5bf830276d8d3f6b5ab04210" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t mqtt_publish_param::retain_flag</definition>
        <argsstring></argsstring>
        <name>retain_flag</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retain flag. If 1, the message shall be stored persistently by the broker. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="257" column="9" bodyfile="include/net/mqtt.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Parameters for a publish message. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>mqtt_binstr</label>
        <link refid="structmqtt__binstr"/>
      </node>
      <node id="2">
        <label>mqtt_publish_message</label>
        <link refid="structmqtt__publish__message"/>
        <childnode refid="3" relation="usage">
          <edgelabel>topic</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>payload</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>mqtt_publish_param</label>
        <link refid="structmqtt__publish__param"/>
        <childnode refid="2" relation="usage">
          <edgelabel>message</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>mqtt_topic</label>
        <link refid="structmqtt__topic"/>
        <childnode refid="4" relation="usage">
          <edgelabel>topic</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>mqtt_utf8</label>
        <link refid="structmqtt__utf8"/>
      </node>
    </collaborationgraph>
    <location file="include/net/mqtt.h" line="240" column="1" bodyfile="include/net/mqtt.h" bodystart="240" bodyend="258"/>
    <listofallmembers>
      <member refid="structmqtt__publish__param_1a2c2062c2b3ad027d5dfea56cb81c48e7" prot="public" virt="non-virtual"><scope>mqtt_publish_param</scope><name>dup_flag</name></member>
      <member refid="structmqtt__publish__param_1a9841a4fbb30b597a9710863ce6034688" prot="public" virt="non-virtual"><scope>mqtt_publish_param</scope><name>message</name></member>
      <member refid="structmqtt__publish__param_1aac4c6ba605506c183d2d5bdd7e550b3e" prot="public" virt="non-virtual"><scope>mqtt_publish_param</scope><name>message_id</name></member>
      <member refid="structmqtt__publish__param_1a9b2c6fad5bf830276d8d3f6b5ab04210" prot="public" virt="non-virtual"><scope>mqtt_publish_param</scope><name>retain_flag</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
