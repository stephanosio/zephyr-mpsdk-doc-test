<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="exti__stm32_8h" kind="file" language="C++">
    <compoundname>exti_stm32.h</compoundname>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/drivers/interrupt_controller/exti_stm32.h</label>
        <link refid="exti__stm32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="exti__stm32_8h_1a2caf7f256985537368b079f565adb9e7" prot="public" static="no" strong="no">
        <type></type>
        <name>stm32_exti_trigger</name>
        <enumvalue id="exti__stm32_8h_1a2caf7f256985537368b079f565adb9e7aa44b00e6dd732140f0c152ec6a5ad0e0" prot="public">
          <name>STM32_EXTI_TRIG_NONE</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="exti__stm32_8h_1a2caf7f256985537368b079f565adb9e7ac1ab9fda0db1fb1a852bfe358c7e6485" prot="public">
          <name>STM32_EXTI_TRIG_RISING</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="exti__stm32_8h_1a2caf7f256985537368b079f565adb9e7a8a53325045c0825c5fd379d83a04f5e4" prot="public">
          <name>STM32_EXTI_TRIG_FALLING</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="exti__stm32_8h_1a2caf7f256985537368b079f565adb9e7a013afe4b3bfc4921f30dad835e7f87cc" prot="public">
          <name>STM32_EXTI_TRIG_BOTH</name>
          <initializer>= 0x3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>EXTI trigger flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/interrupt_controller/exti_stm32.h" line="43" column="1" bodyfile="include/drivers/interrupt_controller/exti_stm32.h" bodystart="43" bodyend="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="exti__stm32_8h_1a7ee31db62548a8e6977ede220fc3fce9" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* stm32_exti_callback_t) (int line, void *user)</definition>
        <argsstring>)(int line, void *user)</argsstring>
        <name>stm32_exti_callback_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/interrupt_controller/exti_stm32.h" line="63" column="9" bodyfile="include/drivers/interrupt_controller/exti_stm32.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="exti__stm32_8h_1af40d4b71f65e3fc1b6bd3f353e58eaae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stm32_exti_enable</definition>
        <argsstring>(int line)</argsstring>
        <name>stm32_exti_enable</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Driver for External interrupt/event controller in STM32 MCUs. </para>
        </briefdescription>
        <detaileddescription>
<para>Based on reference manuals: RM0008 Reference Manual: STM32F101xx, STM32F102xx, STM32F103xx, STM32F105xx and STM32F107xx advanced ARM(r)-based 32-bit MCUs and RM0368 Reference manual STM32F401xB/C and STM32F401xD/E advanced ARM(r)-based 32-bit MCUs</para>
<para>Chapter 10.2: External interrupt/event controller (EXTI)</para>
<para>enable EXTI interrupt for specific line</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>EXTI# line </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/interrupt_controller/exti_stm32.h" line="31" column="6" declfile="include/drivers/interrupt_controller/exti_stm32.h" declline="31" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="exti__stm32_8h_1a77ed08c11acc54d4d00544b862383ec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stm32_exti_disable</definition>
        <argsstring>(int line)</argsstring>
        <name>stm32_exti_disable</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>disable EXTI interrupt for specific line </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>EXTI# line </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/interrupt_controller/exti_stm32.h" line="38" column="6" declfile="include/drivers/interrupt_controller/exti_stm32.h" declline="38" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="exti__stm32_8h_1aefb5e5f4a048cc233df749df9e45ac8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stm32_exti_trigger</definition>
        <argsstring>(int line, int trg)</argsstring>
        <name>stm32_exti_trigger</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>trg</declname>
        </param>
        <briefdescription>
<para>set EXTI interrupt line triggers </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>EXTI# line </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trg</parametername>
</parameternamelist>
<parameterdescription>
<para>OR&apos;ed stm32_exti_trigger flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/interrupt_controller/exti_stm32.h" line="60" column="6" declfile="include/drivers/interrupt_controller/exti_stm32.h" declline="60" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="exti__stm32_8h_1ac9f5b3e69ef25b3f0855f9bad22c826a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stm32_exti_set_callback</definition>
        <argsstring>(int line, stm32_exti_callback_t cb, void *data)</argsstring>
        <name>stm32_exti_set_callback</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type><ref refid="exti__stm32_8h_1a7ee31db62548a8e6977ede220fc3fce9" kindref="member">stm32_exti_callback_t</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>set EXTI interrupt callback </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>EXI# line </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>user callback </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>user data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/interrupt_controller/exti_stm32.h" line="72" column="5" declfile="include/drivers/interrupt_controller/exti_stm32.h" declline="72" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="exti__stm32_8h_1a1cf8d3d58087960e3f570369172e3015" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stm32_exti_unset_callback</definition>
        <argsstring>(int line)</argsstring>
        <name>stm32_exti_unset_callback</name>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>unset EXTI interrupt callback </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>EXI# line </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/interrupt_controller/exti_stm32.h" line="79" column="6" declfile="include/drivers/interrupt_controller/exti_stm32.h" declline="79" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016<sp/>Open-RnD<sp/>Sp.<sp/>z<sp/>o.o.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_DRIVERS_INTERRUPT_CONTROLLER_INTC_EXTI_STM32_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_DRIVERS_INTERRUPT_CONTROLLER_INTC_EXTI_STM32_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="exti__stm32_8h_1af40d4b71f65e3fc1b6bd3f353e58eaae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="exti__stm32_8h_1af40d4b71f65e3fc1b6bd3f353e58eaae" kindref="member">stm32_exti_enable</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="exti__stm32_8h_1a77ed08c11acc54d4d00544b862383ec2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="exti__stm32_8h_1a77ed08c11acc54d4d00544b862383ec2" kindref="member">stm32_exti_disable</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="exti__stm32_8h_1a2caf7f256985537368b079f565adb9e7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="exti__stm32_8h_1a2caf7f256985537368b079f565adb9e7" kindref="member">stm32_exti_trigger</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>trigger<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="exti__stm32_8h_1a2caf7f256985537368b079f565adb9e7aa44b00e6dd732140f0c152ec6a5ad0e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="exti__stm32_8h_1a2caf7f256985537368b079f565adb9e7aa44b00e6dd732140f0c152ec6a5ad0e0" kindref="member">STM32_EXTI_TRIG_NONE</ref><sp/><sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>trigger<sp/>on<sp/>rising<sp/>edge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="exti__stm32_8h_1a2caf7f256985537368b079f565adb9e7ac1ab9fda0db1fb1a852bfe358c7e6485" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="exti__stm32_8h_1a2caf7f256985537368b079f565adb9e7ac1ab9fda0db1fb1a852bfe358c7e6485" kindref="member">STM32_EXTI_TRIG_RISING</ref><sp/><sp/>=<sp/>0x1,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>trigger<sp/>on<sp/>falling<sp/>endge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="exti__stm32_8h_1a2caf7f256985537368b079f565adb9e7a8a53325045c0825c5fd379d83a04f5e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="exti__stm32_8h_1a2caf7f256985537368b079f565adb9e7a8a53325045c0825c5fd379d83a04f5e4" kindref="member">STM32_EXTI_TRIG_FALLING</ref><sp/>=<sp/>0x2,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>trigger<sp/>on<sp/>falling<sp/>endge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="exti__stm32_8h_1a2caf7f256985537368b079f565adb9e7a013afe4b3bfc4921f30dad835e7f87cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="exti__stm32_8h_1a2caf7f256985537368b079f565adb9e7a013afe4b3bfc4921f30dad835e7f87cc" kindref="member">STM32_EXTI_TRIG_BOTH</ref><sp/>=<sp/>0x3,</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="exti__stm32_8h_1aefb5e5f4a048cc233df749df9e45ac8a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="exti__stm32_8h_1a2caf7f256985537368b079f565adb9e7" kindref="member">stm32_exti_trigger</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trg);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>callback<sp/>for<sp/>exti<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="exti__stm32_8h_1a7ee31db62548a8e6977ede220fc3fce9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="exti__stm32_8h_1a7ee31db62548a8e6977ede220fc3fce9" kindref="member">stm32_exti_callback_t</ref>)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="exti__stm32_8h_1ac9f5b3e69ef25b3f0855f9bad22c826a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="exti__stm32_8h_1ac9f5b3e69ef25b3f0855f9bad22c826a" kindref="member">stm32_exti_set_callback</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/><ref refid="exti__stm32_8h_1a7ee31db62548a8e6977ede220fc3fce9" kindref="member">stm32_exti_callback_t</ref><sp/>cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="exti__stm32_8h_1a1cf8d3d58087960e3f570369172e3015" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="exti__stm32_8h_1a1cf8d3d58087960e3f570369172e3015" kindref="member">stm32_exti_unset_callback</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_DRIVERS_INTERRUPT_CONTROLLER_INTC_EXTI_STM32_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/drivers/interrupt_controller/exti_stm32.h"/>
  </compounddef>
</doxygen>
