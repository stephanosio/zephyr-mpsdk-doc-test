<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structk__mem__domain" kind="struct" language="C++" prot="public">
    <compoundname>k_mem_domain</compoundname>
    <includes refid="mem__domain_8h" local="no">mem_domain.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structk__mem__domain_1a48cbffd5f2e85bee1b4b5b02b753980e" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__mem__partition" kindref="compound">k_mem_partition</ref></type>
        <definition>struct k_mem_partition k_mem_domain::partitions[CONFIG_MAX_DOMAIN_PARTITIONS]</definition>
        <argsstring>[CONFIG_MAX_DOMAIN_PARTITIONS]</argsstring>
        <name>partitions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>partitions in the domain </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/app_memory/mem_domain.h" line="85" column="22" bodyfile="include/app_memory/mem_domain.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__mem__domain_1afc3d3a778e84fe98d778f548d707929a" prot="public" static="no" mutable="no">
        <type><ref refid="group__doubly-linked-list__apis_1gaa03f9557215b486fee1039dd4c07e683" kindref="member">sys_dlist_t</ref></type>
        <definition>sys_dlist_t k_mem_domain::mem_domain_q</definition>
        <argsstring></argsstring>
        <name>mem_domain_q</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Doubly linked list of member threads </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/app_memory/mem_domain.h" line="87" column="13" bodyfile="include/app_memory/mem_domain.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__mem__domain_1abc876ea435863315f66631e28e49ab8a" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t k_mem_domain::num_partitions</definition>
        <argsstring></argsstring>
        <name>num_partitions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>number of active partitions in the domain </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/app_memory/mem_domain.h" line="89" column="9" bodyfile="include/app_memory/mem_domain.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Memory Domain. </para>
    </briefdescription>
    <detaileddescription>
<para>A memory domain is a collection of memory partitions, used to represent a user thread&apos;s access policy for the linear addresss space. A thread may be a member of only one memory domain, but any memory domain may have multiple threads that are members.</para>
<para>Supervisor threads may also be a member of a memory domain; this has no implications on their memory access but can be useful as any child threads inherit the memory domain membership of the parent.</para>
<para>A user thread belonging to a memory domain with no active partitions will have guaranteed access to its own stack buffer, program text, and read-only data. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>_dnode</label>
      </node>
      <node id="1">
        <label>k_mem_domain</label>
        <link refid="structk__mem__domain"/>
        <childnode refid="2" relation="usage">
          <edgelabel>partitions</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>mem_domain_q</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>k_mem_partition</label>
        <link refid="structk__mem__partition"/>
      </node>
    </collaborationgraph>
    <location file="include/app_memory/mem_domain.h" line="80" column="1" bodyfile="include/app_memory/mem_domain.h" bodystart="80" bodyend="90"/>
    <listofallmembers>
      <member refid="structk__mem__domain_1afc3d3a778e84fe98d778f548d707929a" prot="public" virt="non-virtual"><scope>k_mem_domain</scope><name>mem_domain_q</name></member>
      <member refid="structk__mem__domain_1abc876ea435863315f66631e28e49ab8a" prot="public" virt="non-virtual"><scope>k_mem_domain</scope><name>num_partitions</name></member>
      <member refid="structk__mem__domain_1a48cbffd5f2e85bee1b4b5b02b753980e" prot="public" virt="non-virtual"><scope>k_mem_domain</scope><name>partitions</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
