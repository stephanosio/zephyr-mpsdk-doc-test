<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="float__context_8h" kind="file" language="C++">
    <compoundname>float_context.h</compoundname>
    <includedby refid="float__regs__arc__gcc_8h" local="yes">tests/kernel/fpu_sharing/generic/src/float_regs_arc_gcc.h</includedby>
    <includedby refid="float__regs__arm64__gcc_8h" local="yes">tests/kernel/fpu_sharing/generic/src/float_regs_arm64_gcc.h</includedby>
    <includedby refid="float__regs__arm__gcc_8h" local="yes">tests/kernel/fpu_sharing/generic/src/float_regs_arm_gcc.h</includedby>
    <includedby refid="float__regs__riscv__gcc_8h" local="yes">tests/kernel/fpu_sharing/generic/src/float_regs_riscv_gcc.h</includedby>
    <includedby refid="float__regs__sparc_8h" local="yes">tests/kernel/fpu_sharing/generic/src/float_regs_sparc.h</includedby>
    <includedby refid="float__regs__x86__gcc_8h" local="yes">tests/kernel/fpu_sharing/generic/src/float_regs_x86_gcc.h</includedby>
    <includedby refid="load__store_8c" local="yes">tests/kernel/fpu_sharing/generic/src/load_store.c</includedby>
    <includedby refid="pi_8c" local="yes">tests/kernel/fpu_sharing/generic/src/pi.c</includedby>
    <invincdepgraph>
      <node id="1">
        <label>tests/kernel/fpu_sharing/generic/src/float_context.h</label>
        <link refid="float__context_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>tests/kernel/fpu_sharing/generic/src/float_regs_arc_gcc.h</label>
        <link refid="float__regs__arc__gcc_8h"/>
      </node>
      <node id="3">
        <label>tests/kernel/fpu_sharing/generic/src/float_regs_arm64_gcc.h</label>
        <link refid="float__regs__arm64__gcc_8h"/>
      </node>
      <node id="4">
        <label>tests/kernel/fpu_sharing/generic/src/float_regs_arm_gcc.h</label>
        <link refid="float__regs__arm__gcc_8h"/>
      </node>
      <node id="5">
        <label>tests/kernel/fpu_sharing/generic/src/float_regs_riscv_gcc.h</label>
        <link refid="float__regs__riscv__gcc_8h"/>
      </node>
      <node id="6">
        <label>tests/kernel/fpu_sharing/generic/src/float_regs_sparc.h</label>
        <link refid="float__regs__sparc_8h"/>
      </node>
      <node id="7">
        <label>tests/kernel/fpu_sharing/generic/src/float_regs_x86_gcc.h</label>
        <link refid="float__regs__x86__gcc_8h"/>
      </node>
      <node id="8">
        <label>tests/kernel/fpu_sharing/generic/src/load_store.c</label>
        <link refid="load__store_8c"/>
      </node>
      <node id="9">
        <label>tests/kernel/fpu_sharing/generic/src/pi.c</label>
        <link refid="pi_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structfp__register__set" prot="public">fp_register_set</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="float__context_8h_1adaf5b9be0572c6093a9d881d837e777e" prot="public" static="no">
        <name>SIZEOF_FP_REGISTER_SET</name>
        <initializer>	(SIZEOF_FP_VOLATILE_REGISTER_SET + SIZEOF_FP_NON_VOLATILE_REGISTER_SET)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/fpu_sharing/generic/src/float_context.h" line="169" column="9" bodyfile="tests/kernel/fpu_sharing/generic/src/float_context.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="float__context_8h_1aef6aeb8fab9e0881d9c5bd3b3a449c64" prot="public" static="no">
        <name>MAIN_FLOAT_REG_CHECK_BYTE</name>
        <initializer>((<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> char)0xe5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/fpu_sharing/generic/src/float_context.h" line="177" column="9" bodyfile="tests/kernel/fpu_sharing/generic/src/float_context.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="float__context_8h_1a228fca26d9999defc688966bfa6b3887" prot="public" static="no">
        <name>FIBER_FLOAT_REG_CHECK_BYTE</name>
        <initializer>((<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> char)0xf9)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/fpu_sharing/generic/src/float_context.h" line="178" column="9" bodyfile="tests/kernel/fpu_sharing/generic/src/float_context.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>common definitions for the FPU sharing test application </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2011-2014<sp/>Wind<sp/>River<sp/>Systems,<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_FLOATCONTEXT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_FLOATCONTEXT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Each<sp/>architecture<sp/>must<sp/>define<sp/>the<sp/>following<sp/>structures<sp/>(which<sp/>may<sp/>be<sp/>empty):</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&apos;struct<sp/>fp_volatile_register_set&apos;</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&apos;struct<sp/>fp_non_volatile_register_set&apos;</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Each<sp/>architecture<sp/>must<sp/>also<sp/>define<sp/>the<sp/>following<sp/>macros:</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>SIZEOF_FP_VOLATILE_REGISTER_SET</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>SIZEOF_FP_NON_VOLATILE_REGISTER_SET</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Those<sp/>macros<sp/>are<sp/>used<sp/>as<sp/>sizeof(&lt;an<sp/>empty<sp/>structure&gt;)<sp/>is<sp/>compiler<sp/>specific;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>that<sp/>is,<sp/>it<sp/>may<sp/>evaluate<sp/>to<sp/>a<sp/>non-zero<sp/>value.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>Each<sp/>architecture<sp/>shall<sp/>also<sp/>have<sp/>custom<sp/>implementations<sp/>of:</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_load_all_float_registers()</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_load_then_store_all_float_registers()</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>_store_all_float_registers()</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_X86)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FP_OPTION<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>In<sp/>the<sp/>future,<sp/>the<sp/>struct<sp/>definitions<sp/>may<sp/>need<sp/>to<sp/>be<sp/>refined<sp/>based<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>specific<sp/>IA-32<sp/>processor,<sp/>but<sp/>for<sp/>now<sp/>only<sp/>the<sp/>Pentium4<sp/>is<sp/>supported:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8<sp/>x<sp/>80<sp/>bit<sp/>floating<sp/>point<sp/>registers<sp/>(ST[0]<sp/>-&gt;<sp/>ST[7])</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8<sp/>x<sp/>128<sp/>bit<sp/>XMM<sp/>registers<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(XMM[0]<sp/>-&gt;<sp/>XMM[7])</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>All<sp/>these<sp/>registers<sp/>are<sp/>considered<sp/>volatile<sp/>across<sp/>a<sp/>function<sp/>invocation.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fp_register<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>[10];</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xmm_register<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>[16];</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fp_volatile_register_set<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xmm_register<sp/>xmm[8];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XMM[0]<sp/>-&gt;<sp/>XMM[7]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fp_register<sp/>st[8];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ST[0]<sp/>-&gt;<sp/>ST[7]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fp_non_volatile_register_set<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>non-volatile<sp/>floating<sp/>point<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZEOF_FP_VOLATILE_REGISTER_SET<sp/>sizeof(struct<sp/>fp_volatile_register_set)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZEOF_FP_NON_VOLATILE_REGISTER_SET<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ARMV7_M_ARMV8_M_FP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FP_OPTION<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>Registers<sp/>s0..s15<sp/>are<sp/>volatile<sp/>and<sp/>do<sp/>not</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>need<sp/>to<sp/>be<sp/>preserved<sp/>across<sp/>function<sp/>calls.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fp_volatile_register_set<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="asm-macro-32-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>[16];</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>Registers<sp/>s16..s31<sp/>are<sp/>non-volatile<sp/>and</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>need<sp/>to<sp/>be<sp/>preserved<sp/>across<sp/>function<sp/>calls.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fp_non_volatile_register_set<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="asm-macro-32-bit-gnu_8h_1a39e110111e0f42a0d4fb025a96888293" kindref="member">s</ref>[16];</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZEOF_FP_VOLATILE_REGISTER_SET<sp/>\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(struct<sp/>fp_volatile_register_set)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZEOF_FP_NON_VOLATILE_REGISTER_SET<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(struct<sp/>fp_non_volatile_register_set)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ARM64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fp_volatile_register_set<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__int128<sp/>regs[16];<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>q0..q15<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fp_non_volatile_register_set<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__int128<sp/>regs[16];<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>q16..q31<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZEOF_FP_VOLATILE_REGISTER_SET<sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(struct<sp/>fp_volatile_register_set)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZEOF_FP_NON_VOLATILE_REGISTER_SET<sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(struct<sp/>fp_non_volatile_register_set)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ISA_ARCV2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fp_volatile_register_set<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_FP_FPU_DA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>dpfp2h;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>dpfp2l;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>dpfp1h;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>dpfp1l;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fp_non_volatile_register_set<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>non-volatile<sp/>floating<sp/>point<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZEOF_FP_VOLATILE_REGISTER_SET<sp/>sizeof(struct<sp/>fp_volatile_register_set)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZEOF_FP_NON_VOLATILE_REGISTER_SET<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_RISCV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fp_volatile_register_set<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_CPU_HAS_FPU_DOUBLE_PRECISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/>fp[32];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>fp[32];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fp_non_volatile_register_set<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>non-volatile<sp/>floating<sp/>point<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZEOF_FP_VOLATILE_REGISTER_SET<sp/>sizeof(struct<sp/>fp_volatile_register_set)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZEOF_FP_NON_VOLATILE_REGISTER_SET<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_SPARC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fp_volatile_register_set<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="asm-macro-32-bit-gnu_8h_1a6b6a358e951559f7fd95cb1da716005c" kindref="member">d</ref>[16];</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fp_non_volatile_register_set<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal">};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZEOF_FP_VOLATILE_REGISTER_SET<sp/>sizeof(struct<sp/>fp_volatile_register_set)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZEOF_FP_NON_VOLATILE_REGISTER_SET<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/><sp/>&quot;Architecture<sp/>must<sp/>provide<sp/>the<sp/>following<sp/>definitions:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="structfp__register__set" refkind="compound"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;\t&apos;struct<sp/>fp_volatile_registers&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;\t&apos;struct<sp/>fp_non_volatile_registers&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;\t&apos;SIZEOF_FP_VOLATILE_REGISTER_SET&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;\t&apos;SIZEOF_FP_NON_VOLATILE_REGISTER_SET&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_X86<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>the<sp/>set<sp/>of<sp/>ALL<sp/>floating<sp/>point<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfp__register__set" kindref="compound">fp_register_set</ref><sp/>{</highlight></codeline>
<codeline lineno="165" refid="structfp__register__set_1a759b476e123dc13528e31d47c6023427" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fp_volatile_register_set<sp/><ref refid="structfp__register__set_1a759b476e123dc13528e31d47c6023427" kindref="member">fp_volatile</ref>;</highlight></codeline>
<codeline lineno="166" refid="structfp__register__set_1a3b07bce6dc765b1f3735d3d422efe439" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fp_non_volatile_register_set<sp/><ref refid="structfp__register__set_1a3b07bce6dc765b1f3735d3d422efe439" kindref="member">fp_non_volatile</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="float__context_8h_1adaf5b9be0572c6093a9d881d837e777e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZEOF_FP_REGISTER_SET<sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SIZEOF_FP_VOLATILE_REGISTER_SET<sp/>+<sp/>SIZEOF_FP_NON_VOLATILE_REGISTER_SET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>constants<sp/>define<sp/>the<sp/>initial<sp/>byte<sp/>value<sp/>used<sp/>by<sp/>the<sp/>background</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>task,<sp/>and<sp/>the<sp/>thread<sp/>when<sp/>loading<sp/>up<sp/>the<sp/>floating<sp/>point<sp/>registers.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="float__context_8h_1aef6aeb8fab9e0881d9c5bd3b3a449c64" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAIN_FLOAT_REG_CHECK_BYTE<sp/>((unsigned<sp/>char)0xe5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="float__context_8h_1a228fca26d9999defc688966bfa6b3887" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIBER_FLOAT_REG_CHECK_BYTE<sp/>((unsigned<sp/>char)0xf9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_FLOATCONTEXT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="tests/kernel/fpu_sharing/generic/src/float_context.h"/>
  </compounddef>
</doxygen>
