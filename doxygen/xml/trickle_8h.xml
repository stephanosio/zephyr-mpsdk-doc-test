<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="trickle_8h" kind="file" language="C++">
    <compoundname>trickle.h</compoundname>
    <includes refid="stdbool_8h" local="no">stdbool.h</includes>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includes local="no">kernel.h</includes>
    <includes refid="net__core_8h" local="no">net/net_core.h</includes>
    <incdepgraph>
      <node id="10">
        <label>logging/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>logging/log_core.h</label>
        <link refid="include_2logging_2log__core_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>logging/log_instance.h</label>
        <link refid="log__instance_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>logging/log_msg.h</label>
        <link refid="log__msg_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>logging/log_msg2.h</label>
        <link refid="include_2logging_2log__msg2_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>net/net_core.h</label>
        <link refid="net__core_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>net/net_timeout.h</label>
        <link refid="net__timeout_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/net/trickle.h</label>
        <link refid="trickle_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="22">
        <label>sys/cbprintf.h</label>
        <link refid="cbprintf_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>sys/cbprintf_cxx.h</label>
        <link refid="cbprintf__cxx_8h"/>
      </node>
      <node id="25">
        <label>sys/cbprintf_internal.h</label>
        <link refid="cbprintf__internal_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>sys/mpsc_packet.h</label>
        <link refid="mpsc__packet_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="15">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="3">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="2">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="5">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="24">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>syscalls/log_core.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__core_8h"/>
      </node>
      <node id="31">
        <label>syscalls/log_msg2.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__msg2_8h"/>
      </node>
      <node id="30">
        <label>alloca.h</label>
      </node>
      <node id="6">
        <label>kernel.h</label>
      </node>
      <node id="23">
        <label>stdarg.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="32">
        <label>syscall.h</label>
      </node>
      <node id="28">
        <label>syscalls/errno_private.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structnet__trickle" prot="public">net_trickle</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__trickle_1ga36e3856ac2e9b596984d4817e580ef42" prot="public" static="no">
        <type>void(*</type>
        <definition>net_trickle_cb_t</definition>
        <argsstring>)(struct net_trickle *trickle, bool do_suppress, void *user_data)</argsstring>
        <name>net_trickle_cb_t</name>
        <briefdescription>
<para>Trickle timer callback. </para>
        </briefdescription>
        <detaileddescription>
<para>The callback is called after Trickle timeout expires.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trickle</parametername>
</parameternamelist>
<parameterdescription>
<para>The trickle context to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>do_suppress</parametername>
</parameternamelist>
<parameterdescription>
<para>Is TX allowed (true) or not (false). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>The user data given in <ref refid="group__trickle_1ga6674fac118a187320d73dc742f0e216f" kindref="member">net_trickle_start()</ref> call. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="45" column="9" bodyfile="include/net/trickle.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__trickle_1gac412d65ad2a8483920de32c1e0ae6be5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_trickle_create</definition>
        <argsstring>(struct net_trickle *trickle, uint32_t Imin, uint8_t Imax, uint8_t k)</argsstring>
        <name>net_trickle_create</name>
        <param>
          <type>struct <ref refid="structnet__trickle" kindref="compound">net_trickle</ref> *</type>
          <declname>trickle</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>Imin</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>Imax</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Create a Trickle timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trickle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Trickle struct. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Imin</parametername>
</parameternamelist>
<parameterdescription>
<para>Imin configuration parameter in ms. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Imax</parametername>
</parameternamelist>
<parameterdescription>
<para>Max number of doublings. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Redundancy constant parameter. See RFC 6206 for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return 0 if ok and &lt;0 if error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="84" column="5" declfile="include/net/trickle.h" declline="84" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__trickle_1ga6674fac118a187320d73dc742f0e216f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_trickle_start</definition>
        <argsstring>(struct net_trickle *trickle, net_trickle_cb_t cb, void *user_data)</argsstring>
        <name>net_trickle_start</name>
        <param>
          <type>struct <ref refid="structnet__trickle" kindref="compound">net_trickle</ref> *</type>
          <declname>trickle</declname>
        </param>
        <param>
          <type><ref refid="group__trickle_1ga36e3856ac2e9b596984d4817e580ef42" kindref="member">net_trickle_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Start a Trickle timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trickle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Trickle struct. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>User callback to call at time T within the current trickle interval </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>User pointer that is passed to callback.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return 0 if ok and &lt;0 if error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="99" column="5" declfile="include/net/trickle.h" declline="99" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__trickle_1ga8477e45a95abccfb714e3f3369686c6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_trickle_stop</definition>
        <argsstring>(struct net_trickle *trickle)</argsstring>
        <name>net_trickle_stop</name>
        <param>
          <type>struct <ref refid="structnet__trickle" kindref="compound">net_trickle</ref> *</type>
          <declname>trickle</declname>
        </param>
        <briefdescription>
<para>Stop a Trickle timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trickle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Trickle struct.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return 0 if ok and &lt;0 if error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="110" column="5" declfile="include/net/trickle.h" declline="110" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__trickle_1gacefb4b5ba518fd1e3f776df012998a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void net_trickle_consistency</definition>
        <argsstring>(struct net_trickle *trickle)</argsstring>
        <name>net_trickle_consistency</name>
        <param>
          <type>struct <ref refid="structnet__trickle" kindref="compound">net_trickle</ref> *</type>
          <declname>trickle</declname>
        </param>
        <briefdescription>
<para>To be called by the protocol handler when it hears a consistent network transmission. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trickle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Trickle struct. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="118" column="6" declfile="include/net/trickle.h" declline="118" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__trickle_1gad0815f9368a17532c8b5293a122cd8a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void net_trickle_inconsistency</definition>
        <argsstring>(struct net_trickle *trickle)</argsstring>
        <name>net_trickle_inconsistency</name>
        <param>
          <type>struct <ref refid="structnet__trickle" kindref="compound">net_trickle</ref> *</type>
          <declname>trickle</declname>
        </param>
        <briefdescription>
<para>To be called by the protocol handler when it hears an inconsistent network transmission. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trickle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Trickle struct. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="126" column="6" declfile="include/net/trickle.h" declline="126" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__trickle_1ga95ceb01a7d56ce5a9d9128a42e1f8eb9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool net_trickle_is_running</definition>
        <argsstring>(struct net_trickle *trickle)</argsstring>
        <name>net_trickle_is_running</name>
        <param>
          <type>struct <ref refid="structnet__trickle" kindref="compound">net_trickle</ref> *</type>
          <declname>trickle</declname>
        </param>
        <briefdescription>
<para>Check if the Trickle timer is running or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trickle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Trickle struct.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return True if timer is running and False if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/trickle.h" line="135" column="20" bodyfile="include/net/trickle.h" bodystart="135" bodyend="140"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Trickle timer library. </para>
    </briefdescription>
    <detaileddescription>
<para>This implements Trickle timer as specified in RFC 6206 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_NET_TRICKLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_NET_TRICKLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdbool_8h" kindref="compound">stdbool.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net__core_8h" kindref="compound">net/net_core.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__trickle" kindref="compound">net_trickle</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="group__trickle_1ga36e3856ac2e9b596984d4817e580ef42" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__trickle_1ga36e3856ac2e9b596984d4817e580ef42" kindref="member">net_trickle_cb_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__trickle" kindref="compound">net_trickle</ref><sp/>*trickle,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_suppress,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structnet__trickle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__trickle" kindref="compound">net_trickle</ref><sp/>{</highlight></codeline>
<codeline lineno="54" refid="structnet__trickle_1aaf14e013a0fa74488a26cd7ff476f6e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structnet__trickle_1aaf14e013a0fa74488a26cd7ff476f6e7" kindref="member">Imin</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="structnet__trickle_1a01ffd968b645bb66db67c759520298aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structnet__trickle_1a01ffd968b645bb66db67c759520298aa" kindref="member">Imax</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="structnet__trickle_1a7c3399e45f85874cec48434d605066d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structnet__trickle_1a7c3399e45f85874cec48434d605066d9" kindref="member">k</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="structnet__trickle_1a6186d8e41cce5193851587d1c72162ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structnet__trickle_1a6186d8e41cce5193851587d1c72162ea" kindref="member">I</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="structnet__trickle_1aab8a98c8a918528db6f2ddec85df4796" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structnet__trickle_1aab8a98c8a918528db6f2ddec85df4796" kindref="member">Istart</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60" refid="structnet__trickle_1aaa03f7763e6bd335b932896ee4433b3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structnet__trickle_1aaa03f7763e6bd335b932896ee4433b3b" kindref="member">c</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="structnet__trickle_1ae9f7ecd9b9730cd1c232ead5d21fec05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structnet__trickle_1ae9f7ecd9b9730cd1c232ead5d21fec05" kindref="member">Imax_abs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="structnet__trickle_1a2a1fb8ad04123ebcb781bc3e0173d8be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structnet__trickle_1a2a1fb8ad04123ebcb781bc3e0173d8be" kindref="member">double_to</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structnet__trickle_1a2dde5d732f009a85a27ff6fa0c778636" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work__delayable" kindref="compound">k_work_delayable</ref><sp/><ref refid="structnet__trickle_1a2dde5d732f009a85a27ff6fa0c778636" kindref="member">timer</ref>;</highlight></codeline>
<codeline lineno="66" refid="structnet__trickle_1a63a3cbf019c99def91e3a9dde7c2f9b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__trickle_1ga36e3856ac2e9b596984d4817e580ef42" kindref="member">net_trickle_cb_t</ref><sp/><ref refid="structnet__trickle_1a63a3cbf019c99def91e3a9dde7c2f9b4" kindref="member">cb</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="structnet__trickle_1a40f69e10d41e34541ca88c092d6a3341" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structnet__trickle_1a40f69e10d41e34541ca88c092d6a3341" kindref="member">user_data</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_TRICKLE_INFINITE_REDUNDANCY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="group__trickle_1gac412d65ad2a8483920de32c1e0ae6be5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__trickle_1gac412d65ad2a8483920de32c1e0ae6be5" kindref="member">net_trickle_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__trickle" kindref="compound">net_trickle</ref><sp/>*trickle,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>Imin,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>Imax,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>k);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="group__trickle_1ga6674fac118a187320d73dc742f0e216f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__trickle_1ga6674fac118a187320d73dc742f0e216f" kindref="member">net_trickle_start</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__trickle" kindref="compound">net_trickle</ref><sp/>*trickle,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__trickle_1ga36e3856ac2e9b596984d4817e580ef42" kindref="member">net_trickle_cb_t</ref><sp/>cb,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="group__trickle_1ga8477e45a95abccfb714e3f3369686c6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__trickle_1ga8477e45a95abccfb714e3f3369686c6d" kindref="member">net_trickle_stop</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__trickle" kindref="compound">net_trickle</ref><sp/>*trickle);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="group__trickle_1gacefb4b5ba518fd1e3f776df012998a9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__trickle_1gacefb4b5ba518fd1e3f776df012998a9b" kindref="member">net_trickle_consistency</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__trickle" kindref="compound">net_trickle</ref><sp/>*trickle);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="group__trickle_1gad0815f9368a17532c8b5293a122cd8a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__trickle_1gad0815f9368a17532c8b5293a122cd8a9" kindref="member">net_trickle_inconsistency</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__trickle" kindref="compound">net_trickle</ref><sp/>*trickle);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="group__trickle_1ga95ceb01a7d56ce5a9d9128a42e1f8eb9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__trickle_1ga95ceb01a7d56ce5a9d9128a42e1f8eb9" kindref="member">net_trickle_is_running</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__trickle" kindref="compound">net_trickle</ref><sp/>*trickle)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_ASSERT(trickle);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trickle-&gt;<ref refid="structnet__trickle_1a6186d8e41cce5193851587d1c72162ea" kindref="member">I</ref><sp/>!=<sp/>0U;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_NET_TRICKLE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/net/trickle.h"/>
  </compounddef>
</doxygen>
