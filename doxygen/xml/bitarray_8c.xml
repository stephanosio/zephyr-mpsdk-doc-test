<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="bitarray_8c" kind="file" language="C++">
    <compoundname>bitarray.c</compoundname>
    <includes local="no">zephyr.h</includes>
    <includes refid="ztest_8h" local="no">ztest.h</includes>
    <includes local="no">arch/cpu.h</includes>
    <includes local="no">tc_util.h</includes>
    <includes refid="bitarray_8h" local="no">sys/bitarray.h</includes>
    <includes refid="util_8h" local="no">sys/util.h</includes>
    <incdepgraph>
      <node id="17">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="66">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="65">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="29">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="36">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="38">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="34">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="32">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="40">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="41">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="37">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="35">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="39">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="75">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="45">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="51">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="28">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="91">
        <label>sys/bitarray.h</label>
        <link refid="bitarray_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="23">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="5">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="19">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="86">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="87">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="13">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="9">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="11">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="64">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="88">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="81">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="3">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="15">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/common/src/bitarray.c</label>
        <link refid="bitarray_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>alloca.h</label>
      </node>
      <node id="68">
        <label>arch/cpu.h</label>
      </node>
      <node id="31">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="30">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="43">
        <label>kernel.h</label>
      </node>
      <node id="7">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="84">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="89">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="90">
        <label>tc_util.h</label>
      </node>
      <node id="2">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="bitarray_8c_1a3bd693d140625951a3b2d423ca080b0e" prot="public" static="no">
        <name>BIT_INDEX</name>
        <param><defname>bit</defname></param>
        <initializer>(bit &gt;&gt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="18" column="10" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bitarray_8c_1a93f1fd48012a177e3fdce618fb797562" prot="public" static="no">
        <name>BIT_VAL</name>
        <param><defname>bit</defname></param>
        <initializer>(1 &lt;&lt; (bit &amp; 0x7))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="20" column="10" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bitarray_8c_1aa5811ea4a875ae783ada354dfff27284" prot="public" static="no">
        <name>BITFIELD_SIZE</name>
        <initializer>512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="21" column="9" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__kernel__common__tests_1ga6b40459f5abb61b9b9c017c92d9c3560" prot="public" static="no">
        <name>FAIL_ALLOC_MSG_FMT</name>
        <initializer>&quot;sys_bitarray_alloc with region size %i allocated incorrectly&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="46" column="9" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__kernel__common__tests_1gadd6c34cb90fde4698063a97f00d32a60" prot="public" static="no">
        <name>FAIL_ALLOC_RET_MSG_FMT</name>
        <initializer>&quot;sys_bitarray_alloc with region size %i returned incorrect <ref refid="structresult" kindref="compound">result</ref>&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="47" column="9" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__kernel__common__tests_1gacd42d732d1f3a131ffac3f7d8dd9898d" prot="public" static="no">
        <name>FAIL_ALLOC_OFFSET_MSG_FMT</name>
        <initializer>&quot;sys_bitarray_alloc with region size %i gave incorrect offset&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="48" column="9" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__kernel__common__tests_1ga17e55c3d4b9947a11191510e3f52c2f6" prot="public" static="no">
        <name>FAIL_FREE_MSG_FMT</name>
        <initializer>&quot;sys_bitarray_free with region size %i and offset %i failed&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="49" column="9" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__kernel__common__tests_1ga9a8e700d56e7d858108b755ad3edb52e" prot="public" static="no">
        <name>FREE</name>
        <initializer>0U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="50" column="9" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool cmp_u32_arrays</definition>
        <argsstring>(uint32_t *a1, uint32_t *a2, size_t sz)</argsstring>
        <name>cmp_u32_arrays</name>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> *</type>
          <declname>a1</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> *</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="29" column="13" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="29" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__common__tests_1ga039bb1108b5cd0c222be4508109aac16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void validate_bitarray_define</definition>
        <argsstring>(sys_bitarray_t *ba, size_t num_bits)</argsstring>
        <name>validate_bitarray_define</name>
        <param>
          <type><ref refid="bitarray_8h_1a168a1da9ac2bee523bdc9778e94fd841" kindref="member">sys_bitarray_t</ref> *</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="52" column="6" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="52" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__common__tests_1ga766d7b312892be18a1ce35dd5eeef8a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_bitarray_declare</definition>
        <argsstring>(void)</argsstring>
        <name>test_bitarray_declare</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test defining of bitarrays. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="bitarray_8h_1abbe958c6b995023665651e4aa050aa62" kindref="member">SYS_BITARRAY_DEFINE()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="80" column="6" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="80" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__common__tests_1ga7f8744fbe1d7e11f685b346784f3b6f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool bitarray_bundles_is_zero</definition>
        <argsstring>(sys_bitarray_t *ba)</argsstring>
        <name>bitarray_bundles_is_zero</name>
        <param>
          <type><ref refid="bitarray_8h_1a168a1da9ac2bee523bdc9778e94fd841" kindref="member">sys_bitarray_t</ref> *</type>
          <declname>ba</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="103" column="6" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="103" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__common__tests_1gae430ada0f7131bb9b523f9a4ae491d63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_bitarray_set_clear</definition>
        <argsstring>(void)</argsstring>
        <name>test_bitarray_set_clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test bitarrays set and clear. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="bitarray_8h_1a5fe657e79fee3e111284e4184eb6b681" kindref="member">sys_bitarray_set_bit()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="bitarray_8h_1a795e8bf81f5717addf523cec124cde4e" kindref="member">sys_bitarray_clear_bit()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="bitarray_8h_1ae024ace00949fe8c565081e62818449d" kindref="member">sys_bitarray_test_bit()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="bitarray_8h_1ad1761b9eae8a1d9302893ce5f8591923" kindref="member">sys_bitarray_test_and_set_bit()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="bitarray_8h_1a40fa4d37f1fb2da8789f70de50c599d5" kindref="member">sys_bitarray_test_and_clear_bit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="127" column="6" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="127" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__common__tests_1gabcbe08c8508b4c30f7c3f950d6f3e782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void alloc_and_free_predefined</definition>
        <argsstring>(void)</argsstring>
        <name>alloc_and_free_predefined</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="279" column="6" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="279" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__common__tests_1ga88c1c186b920700ee59fb98aad38cf25" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t count_bits</definition>
        <argsstring>(uint32_t val)</argsstring>
        <name>count_bits</name>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="340" column="22" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="340" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__common__tests_1ga9040453080ce45df8a02c9227adbce93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t get_bitarray_popcnt</definition>
        <argsstring>(sys_bitarray_t *ba)</argsstring>
        <name>get_bitarray_popcnt</name>
        <param>
          <type><ref refid="bitarray_8h_1a168a1da9ac2bee523bdc9778e94fd841" kindref="member">sys_bitarray_t</ref> *</type>
          <declname>ba</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="356" column="8" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="356" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__common__tests_1gaf68e220db3cae89dc9dee344eb1d65a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void alloc_and_free_loop</definition>
        <argsstring>(int divisor)</argsstring>
        <name>alloc_and_free_loop</name>
        <param>
          <type>int</type>
          <declname>divisor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="368" column="6" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="368" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__common__tests_1gaab4aa973b69686dd30cf4bc9335984e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void alloc_and_free_interval</definition>
        <argsstring>(void)</argsstring>
        <name>alloc_and_free_interval</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="427" column="6" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="427" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__common__tests_1ga6f425be5d73db7bee1196ad703361bad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_bitarray_alloc_free</definition>
        <argsstring>(void)</argsstring>
        <name>test_bitarray_alloc_free</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test bitarrays allocation and free. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="bitarray_8h_1ac96766d9441a3b143aa386e2ac79ffd9" kindref="member">sys_bitarray_alloc()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="bitarray_8h_1af9a2c34896d3b1866a5a60f78d4166b0" kindref="member">sys_bitarray_free()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="484" column="6" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="484" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__common__tests_1gad421f39eb6fd767b9d5721bed2076f61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_bitarray_region_set_clear</definition>
        <argsstring>(void)</argsstring>
        <name>test_bitarray_region_set_clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="505" column="6" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="505" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__common__tests_1ga2cbd1f795436828558d522a1ee09e512" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_ffs</definition>
        <argsstring>(void)</argsstring>
        <name>test_ffs</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test find MSB and LSB operations. </para>
        </briefdescription>
        <detaileddescription>
<para>Verify the functions that find out the most significiant bit and least significiant bit work as expected.</para>
<para><simplesect kind="see"><para><ref refid="ffs_8h_1a088db7d02e8f1fc559cbe1ec048494e8" kindref="member">find_msb_set()</ref>, <ref refid="ffs_8h_1a860b01217c1d5eb5f416272c3b719113" kindref="member">find_lsb_set()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/common/src/bitarray.c" line="626" column="6" bodyfile="tests/kernel/common/src/bitarray.c" bodystart="626" bodyend="667"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016,2021<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztest_8h" kindref="compound">ztest.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arch/cpu.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tc_util.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="bitarray_8h" kindref="compound">sys/bitarray.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="util_8h" kindref="compound">sys/util.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_BIG_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BIT_INDEX(bit)<sp/><sp/>((3<sp/>-<sp/>((bit<sp/>&gt;&gt;<sp/>3)<sp/>&amp;<sp/>0x3))<sp/>+<sp/>4*(bit<sp/>&gt;&gt;<sp/>5))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BIT_INDEX(bit)<sp/><sp/>(bit<sp/>&gt;&gt;<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BIT_VAL(bit)<sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>(bit<sp/>&amp;<sp/>0x7))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BITFIELD_SIZE<sp/><sp/><sp/>512</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Helper<sp/>function<sp/>to<sp/>compare<sp/>two<sp/>bitarrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" kindref="member">cmp_u32_arrays</ref>(<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>*a1,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>*a2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>are_equal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sz;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a1[i]<sp/>!=<sp/>a2[i])<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>are_equal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="printk_8h_1a768a7dff8592b69f327a08f96b00fa54" kindref="member">printk</ref>(</highlight><highlight class="stringliteral">&quot;%s:<sp/>[%zu]<sp/>0x%x<sp/>!=<sp/>0x%x&quot;</highlight><highlight class="normal">,<sp/>__func__,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>a1[i],<sp/>a2[i]);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>are_equal;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAIL_ALLOC_MSG_FMT<sp/>&quot;sys_bitarray_alloc<sp/>with<sp/>region<sp/>size<sp/>%i<sp/>allocated<sp/>incorrectly&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAIL_ALLOC_RET_MSG_FMT<sp/>&quot;sys_bitarray_alloc<sp/>with<sp/>region<sp/>size<sp/>%i<sp/>returned<sp/>incorrect<sp/>result&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAIL_ALLOC_OFFSET_MSG_FMT<sp/>&quot;sys_bitarray_alloc<sp/>with<sp/>region<sp/>size<sp/>%i<sp/>gave<sp/>incorrect<sp/>offset&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAIL_FREE_MSG_FMT<sp/>&quot;sys_bitarray_free<sp/>with<sp/>region<sp/>size<sp/>%i<sp/>and<sp/>offset<sp/>%i<sp/>failed&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FREE<sp/>0U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__common__tests_1ga039bb1108b5cd0c222be4508109aac16" kindref="member">validate_bitarray_define</ref>(<ref refid="structsys__bitarray" kindref="compound">sys_bitarray_t</ref><sp/>*ba,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_bits)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_bundles;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_bundles<sp/>=<sp/><ref refid="group__sys-util_1gaada5610108b15d85c65d863b0c646ef3" kindref="member">ROUND_UP</ref>(<ref refid="group__sys-util_1gaada5610108b15d85c65d863b0c646ef3" kindref="member">ROUND_UP</ref>(num_bits,<sp/>8)<sp/>/<sp/>8,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref>))</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(ba-&gt;<ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref>,<sp/>num_bits,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYS_BITARRAY_DEFINE<sp/>num_bits<sp/>expected<sp/>%u,<sp/>got<sp/>%u&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_bits,<sp/>ba-&gt;<ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(ba-&gt;<ref refid="structsys__bitarray_1abbb992a8a0408ed431c5203110c3d9e0" kindref="member">num_bundles</ref>,<sp/>num_bundles,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYS_BITARRAY_DEFINE<sp/>num_bundles<sp/>expected<sp/>%u,<sp/>got<sp/>%u&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_bundles,<sp/>ba-&gt;<ref refid="structsys__bitarray_1abbb992a8a0408ed431c5203110c3d9e0" kindref="member">num_bundles</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_bundles;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(ba-&gt;<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[i],<sp/><ref refid="group__kernel__common__tests_1ga9a8e700d56e7d858108b755ad3edb52e" kindref="member">FREE</ref>,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SYS_BITARRAY_DEFINE<sp/>bundles[%u]<sp/>not<sp/>free<sp/>for<sp/>num_bits<sp/>%u&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>num_bits);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__common__tests_1ga766d7b312892be18a1ce35dd5eeef8a2" kindref="member">test_bitarray_declare</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitarray_8h_1abbe958c6b995023665651e4aa050aa62" kindref="member">SYS_BITARRAY_DEFINE</ref>(ba_1_bit,<sp/>1);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitarray_8h_1abbe958c6b995023665651e4aa050aa62" kindref="member">SYS_BITARRAY_DEFINE</ref>(ba_32_bit,<sp/>32);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitarray_8h_1abbe958c6b995023665651e4aa050aa62" kindref="member">SYS_BITARRAY_DEFINE</ref>(ba_33_bit,<sp/>33);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitarray_8h_1abbe958c6b995023665651e4aa050aa62" kindref="member">SYS_BITARRAY_DEFINE</ref>(ba_64_bit,<sp/>64);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitarray_8h_1abbe958c6b995023665651e4aa050aa62" kindref="member">SYS_BITARRAY_DEFINE</ref>(ba_65_bit,<sp/>65);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitarray_8h_1abbe958c6b995023665651e4aa050aa62" kindref="member">SYS_BITARRAY_DEFINE</ref>(ba_128_bit,<sp/>128);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitarray_8h_1abbe958c6b995023665651e4aa050aa62" kindref="member">SYS_BITARRAY_DEFINE</ref>(ba_129_bit,<sp/>129);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>SYS_BITFIELD_DECLARE<sp/>by<sp/>asserting<sp/>that<sp/>a<sp/>sufficent<sp/>number<sp/>of<sp/>uint32_t</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>the<sp/>declared<sp/>array<sp/>are<sp/>set<sp/>as<sp/>free<sp/>to<sp/>represent<sp/>the<sp/>number<sp/>of<sp/>bits</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__common__tests_1ga039bb1108b5cd0c222be4508109aac16" kindref="member">validate_bitarray_define</ref>(&amp;ba_1_bit,<sp/>1);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__common__tests_1ga039bb1108b5cd0c222be4508109aac16" kindref="member">validate_bitarray_define</ref>(&amp;ba_32_bit,<sp/>32);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__common__tests_1ga039bb1108b5cd0c222be4508109aac16" kindref="member">validate_bitarray_define</ref>(&amp;ba_33_bit,<sp/>33);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__common__tests_1ga039bb1108b5cd0c222be4508109aac16" kindref="member">validate_bitarray_define</ref>(&amp;ba_64_bit,<sp/>64);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__common__tests_1ga039bb1108b5cd0c222be4508109aac16" kindref="member">validate_bitarray_define</ref>(&amp;ba_65_bit,<sp/>65);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__common__tests_1ga039bb1108b5cd0c222be4508109aac16" kindref="member">validate_bitarray_define</ref>(&amp;ba_128_bit,<sp/>128);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__common__tests_1ga039bb1108b5cd0c222be4508109aac16" kindref="member">validate_bitarray_define</ref>(&amp;ba_129_bit,<sp/>129);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__kernel__common__tests_1ga7f8744fbe1d7e11f685b346784f3b6f4" kindref="member">bitarray_bundles_is_zero</ref>(<ref refid="structsys__bitarray" kindref="compound">sys_bitarray_t</ref><sp/>*ba)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ba-&gt;<ref refid="structsys__bitarray_1abbb992a8a0408ed431c5203110c3d9e0" kindref="member">num_bundles</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ba-&gt;<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[i]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__common__tests_1gae430ada0f7131bb9b523f9a4ae491d63" kindref="member">test_bitarray_set_clear</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_val;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bit,<sp/>bundle_idx,<sp/>bit_idx_in_bundle;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bitarrays<sp/>have<sp/>embedded<sp/>spinlocks<sp/>and<sp/>can&apos;t<sp/>on<sp/>the<sp/>stack.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(CONFIG_KERNEL_COHERENCE))<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitarray_8h_1abbe958c6b995023665651e4aa050aa62" kindref="member">SYS_BITARRAY_DEFINE</ref>(ba,<sp/>234);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bit<sp/>=<sp/>0U;<sp/>bit<sp/>&lt;<sp/>ba.<ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref>;<sp/>++bit)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle_idx<sp/>=<sp/>bit<sp/>/<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[0])<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_idx_in_bundle<sp/>=<sp/>bit<sp/>%<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[0])<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1a5fe657e79fee3e111284e4184eb6b681" kindref="member">sys_bitarray_set_bit</ref>(&amp;ba,<sp/>bit);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_bit<sp/>failed<sp/>on<sp/>bit<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[bundle_idx],<sp/><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(bit_idx_in_bundle),</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_bit<sp/>did<sp/>not<sp/>set<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="x86_2arch_8h_1a6547612936cc24eae4ff0217ea654c4d" kindref="member">sys_bitfield_test_bit</ref>((<ref refid="sys_2sys__io_8h_1adacf6eae8ec8c6a835ec0b2953a3470d" kindref="member">mem_addr_t</ref>)ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>,<sp/>bit),</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_bit<sp/>did<sp/>not<sp/>set<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1ae024ace00949fe8c565081e62818449d" kindref="member">sys_bitarray_test_bit</ref>(&amp;ba,<sp/>bit,<sp/>&amp;bit_val);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_bit<sp/>failed<sp/>at<sp/>bit<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(bit_val,<sp/>1,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_bit<sp/>did<sp/>not<sp/>detect<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1a795e8bf81f5717addf523cec124cde4e" kindref="member">sys_bitarray_clear_bit</ref>(&amp;ba,<sp/>bit);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_clear_bit<sp/>failed<sp/>at<sp/>bit<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[bundle_idx],<sp/>0,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_clear_bit<sp/>did<sp/>not<sp/>clear<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="x86_2arch_8h_1a6547612936cc24eae4ff0217ea654c4d" kindref="member">sys_bitfield_test_bit</ref>((<ref refid="sys_2sys__io_8h_1adacf6eae8ec8c6a835ec0b2953a3470d" kindref="member">mem_addr_t</ref>)ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>,<sp/>bit),</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_bit<sp/>did<sp/>not<sp/>set<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1ae024ace00949fe8c565081e62818449d" kindref="member">sys_bitarray_test_bit</ref>(&amp;ba,<sp/>bit,<sp/>&amp;bit_val);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_bit<sp/>failed<sp/>at<sp/>bit<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(bit_val,<sp/>0,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_bit<sp/>erroneously<sp/>detected<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1ad1761b9eae8a1d9302893ce5f8591923" kindref="member">sys_bitarray_test_and_set_bit</ref>(&amp;ba,<sp/>bit,<sp/>&amp;bit_val);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_set_bit<sp/>failed<sp/>at<sp/>bit<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(bit_val,<sp/>0,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_set_bit<sp/>erroneously<sp/>detected<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[bundle_idx],<sp/><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(bit_idx_in_bundle),</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_set_bit<sp/>did<sp/>not<sp/>set<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="x86_2arch_8h_1a6547612936cc24eae4ff0217ea654c4d" kindref="member">sys_bitfield_test_bit</ref>((<ref refid="sys_2sys__io_8h_1adacf6eae8ec8c6a835ec0b2953a3470d" kindref="member">mem_addr_t</ref>)ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>,<sp/>bit),</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_bit<sp/>did<sp/>not<sp/>set<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1ad1761b9eae8a1d9302893ce5f8591923" kindref="member">sys_bitarray_test_and_set_bit</ref>(&amp;ba,<sp/>bit,<sp/>&amp;bit_val);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_set_bit<sp/>failed<sp/>at<sp/>bit<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(bit_val,<sp/>1,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_set_bit<sp/>did<sp/>not<sp/>detect<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[bundle_idx],<sp/><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(bit_idx_in_bundle),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_set_bit<sp/>cleared<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="x86_2arch_8h_1a6547612936cc24eae4ff0217ea654c4d" kindref="member">sys_bitfield_test_bit</ref>((<ref refid="sys_2sys__io_8h_1adacf6eae8ec8c6a835ec0b2953a3470d" kindref="member">mem_addr_t</ref>)ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>,<sp/>bit),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_bit<sp/>did<sp/>not<sp/>set<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1a40fa4d37f1fb2da8789f70de50c599d5" kindref="member">sys_bitarray_test_and_clear_bit</ref>(&amp;ba,<sp/>bit,<sp/>&amp;bit_val);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_clear_bit<sp/>failed<sp/>at<sp/>bit<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(bit_val,<sp/>1,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_clear_bit<sp/>did<sp/>not<sp/>detect<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[bundle_idx],<sp/>0,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_clear_bit<sp/>did<sp/>not<sp/>clear<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="x86_2arch_8h_1a6547612936cc24eae4ff0217ea654c4d" kindref="member">sys_bitfield_test_bit</ref>((<ref refid="sys_2sys__io_8h_1adacf6eae8ec8c6a835ec0b2953a3470d" kindref="member">mem_addr_t</ref>)ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>,<sp/>bit),</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_bit<sp/>did<sp/>not<sp/>set<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1a40fa4d37f1fb2da8789f70de50c599d5" kindref="member">sys_bitarray_test_and_clear_bit</ref>(&amp;ba,<sp/>bit,<sp/>&amp;bit_val);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_clear_bit<sp/>failed<sp/>at<sp/>bit<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(bit_val,<sp/>0,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_clear_bit<sp/>erroneously<sp/>detected<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[bundle_idx],<sp/>0,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_clear_bit<sp/>set<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="x86_2arch_8h_1a6547612936cc24eae4ff0217ea654c4d" kindref="member">sys_bitfield_test_bit</ref>((<ref refid="sys_2sys__io_8h_1adacf6eae8ec8c6a835ec0b2953a3470d" kindref="member">mem_addr_t</ref>)ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>,<sp/>bit),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_bit<sp/>did<sp/>not<sp/>set<sp/>bit<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>bit);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>this<sp/>should<sp/>fail<sp/>because<sp/>we<sp/>go<sp/>outside<sp/>of</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>total<sp/>bits<sp/>in<sp/>bit<sp/>array.<sp/>Also<sp/>needs<sp/>to<sp/>make<sp/>sure<sp/>bits</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>not<sp/>changed.</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1a5fe657e79fee3e111284e4184eb6b681" kindref="member">sys_bitarray_set_bit</ref>(&amp;ba,<sp/>ba.<ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_bit()<sp/>should<sp/>fail<sp/>but<sp/>not&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga7f8744fbe1d7e11f685b346784f3b6f4" kindref="member">bitarray_bundles_is_zero</ref>(&amp;ba),</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_bit()<sp/>erroneously<sp/>changed<sp/>bitarray&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1a795e8bf81f5717addf523cec124cde4e" kindref="member">sys_bitarray_clear_bit</ref>(&amp;ba,<sp/>ba.<ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_clear_bit()<sp/>should<sp/>fail<sp/>but<sp/>not&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga7f8744fbe1d7e11f685b346784f3b6f4" kindref="member">bitarray_bundles_is_zero</ref>(&amp;ba),</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_clear_bit()<sp/>erroneously<sp/>changed<sp/>bitarray&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1ae024ace00949fe8c565081e62818449d" kindref="member">sys_bitarray_test_bit</ref>(&amp;ba,<sp/>ba.<ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref>,<sp/>&amp;bit_val);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_bit()<sp/>should<sp/>fail<sp/>but<sp/>not&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga7f8744fbe1d7e11f685b346784f3b6f4" kindref="member">bitarray_bundles_is_zero</ref>(&amp;ba),</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_bit()<sp/>erroneously<sp/>changed<sp/>bitarray&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1ad1761b9eae8a1d9302893ce5f8591923" kindref="member">sys_bitarray_test_and_set_bit</ref>(&amp;ba,<sp/>ba.<ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref>,<sp/>&amp;bit_val);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_set_bit()<sp/>should<sp/>fail<sp/>but<sp/>not&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga7f8744fbe1d7e11f685b346784f3b6f4" kindref="member">bitarray_bundles_is_zero</ref>(&amp;ba),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_set_bit()<sp/>erroneously<sp/>changed<sp/>bitarray&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1a40fa4d37f1fb2da8789f70de50c599d5" kindref="member">sys_bitarray_test_and_clear_bit</ref>(&amp;ba,<sp/>ba.<ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref>,<sp/>&amp;bit_val);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_clear_bit()<sp/>should<sp/>fail<sp/>but<sp/>not&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga7f8744fbe1d7e11f685b346784f3b6f4" kindref="member">bitarray_bundles_is_zero</ref>(&amp;ba),</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_clear_bit()<sp/>erroneously<sp/>changed<sp/>bitarray&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1a5fe657e79fee3e111284e4184eb6b681" kindref="member">sys_bitarray_set_bit</ref>(&amp;ba,<sp/>-1);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_bit()<sp/>should<sp/>fail<sp/>but<sp/>not&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga7f8744fbe1d7e11f685b346784f3b6f4" kindref="member">bitarray_bundles_is_zero</ref>(&amp;ba),</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_bit()<sp/>erroneously<sp/>changed<sp/>bitarray&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1a795e8bf81f5717addf523cec124cde4e" kindref="member">sys_bitarray_clear_bit</ref>(&amp;ba,<sp/>-1);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_clear_bit()<sp/>should<sp/>fail<sp/>but<sp/>not&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga7f8744fbe1d7e11f685b346784f3b6f4" kindref="member">bitarray_bundles_is_zero</ref>(&amp;ba),</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_clear_bit()<sp/>erroneously<sp/>changed<sp/>bitarray&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1ae024ace00949fe8c565081e62818449d" kindref="member">sys_bitarray_test_bit</ref>(&amp;ba,<sp/>-1,<sp/>&amp;bit_val);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_bit()<sp/>should<sp/>fail<sp/>but<sp/>not&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga7f8744fbe1d7e11f685b346784f3b6f4" kindref="member">bitarray_bundles_is_zero</ref>(&amp;ba),</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_bit()<sp/>erroneously<sp/>changed<sp/>bitarray&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1ad1761b9eae8a1d9302893ce5f8591923" kindref="member">sys_bitarray_test_and_set_bit</ref>(&amp;ba,<sp/>-1,<sp/>&amp;bit_val);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_set_bit()<sp/>should<sp/>fail<sp/>but<sp/>not&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga7f8744fbe1d7e11f685b346784f3b6f4" kindref="member">bitarray_bundles_is_zero</ref>(&amp;ba),</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_set_bit()<sp/>erroneously<sp/>changed<sp/>bitarray&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1a40fa4d37f1fb2da8789f70de50c599d5" kindref="member">sys_bitarray_test_and_clear_bit</ref>(&amp;ba,<sp/>-1,<sp/>&amp;bit_val);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_clear_bit()<sp/>should<sp/>fail<sp/>but<sp/>not&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga7f8744fbe1d7e11f685b346784f3b6f4" kindref="member">bitarray_bundles_is_zero</ref>(&amp;ba),</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_test_and_clear_bit()<sp/>erroneously<sp/>changed<sp/>bitarray&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__common__tests_1gabcbe08c8508b4c30f7c3f950d6f3e782" kindref="member">alloc_and_free_predefined</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>ba_128_expected[4];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitarray_8h_1abbe958c6b995023665651e4aa050aa62" kindref="member">SYS_BITARRAY_DEFINE</ref>(ba_128,<sp/>128);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="printk_8h_1a768a7dff8592b69f327a08f96b00fa54" kindref="member">printk</ref>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>bit<sp/>array<sp/>alloc<sp/>and<sp/>free<sp/>with<sp/>predefined<sp/>patterns\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pre-populate<sp/>the<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_128.bundles[0]<sp/>=<sp/>0x0F0F070F;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_128.bundles[1]<sp/>=<sp/>0x0F0F0F0F;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_128.bundles[2]<sp/>=<sp/>0x0F0F0F0F;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_128.bundles[3]<sp/>=<sp/>0x0F0F0000;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expected<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_128_expected[0]<sp/>=<sp/>0x0F0FFF0F;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_128_expected[1]<sp/>=<sp/>0x0F0F0F0F;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_128_expected[2]<sp/>=<sp/>0x0F0F0F0F;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_128_expected[3]<sp/>=<sp/>0x0F0F0000;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1ac96766d9441a3b143aa386e2ac79ffd9" kindref="member">sys_bitarray_alloc</ref>(&amp;ba_128,<sp/>5,<sp/>&amp;offset);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_alloc()<sp/>failed:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(offset,<sp/>11,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_alloc()<sp/>offset<sp/>expected<sp/>%d,<sp/>got<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>11,<sp/>offset);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" kindref="member">cmp_u32_arrays</ref>(ba_128.bundles,<sp/>ba_128_expected,<sp/>ba_128.num_bundles),</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_alloc()<sp/>failed<sp/>bits<sp/>comparison&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1ac96766d9441a3b143aa386e2ac79ffd9" kindref="member">sys_bitarray_alloc</ref>(&amp;ba_128,<sp/>16,<sp/>&amp;offset);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_128_expected[2]<sp/>=<sp/>0xFF0F0F0F;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_128_expected[3]<sp/>=<sp/>0x0F0F0FFF;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_alloc()<sp/>failed:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(offset,<sp/>92,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_alloc()<sp/>offset<sp/>expected<sp/>%d,<sp/>got<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>92,<sp/>offset);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" kindref="member">cmp_u32_arrays</ref>(ba_128.bundles,<sp/>ba_128_expected,<sp/>ba_128.num_bundles),</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_alloc()<sp/>failed<sp/>bits<sp/>comparison&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1af9a2c34896d3b1866a5a60f78d4166b0" kindref="member">sys_bitarray_free</ref>(&amp;ba_128,<sp/>5,<sp/>11);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_128_expected[0]<sp/>=<sp/>0x0F0F070F;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_free()<sp/>failed:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" kindref="member">cmp_u32_arrays</ref>(ba_128.bundles,<sp/>ba_128_expected,<sp/>ba_128.num_bundles),</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_free()<sp/>failed<sp/>bits<sp/>comparison&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1af9a2c34896d3b1866a5a60f78d4166b0" kindref="member">sys_bitarray_free</ref>(&amp;ba_128,<sp/>5,<sp/>0);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_free()<sp/>should<sp/>fail<sp/>but<sp/>not&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" kindref="member">cmp_u32_arrays</ref>(ba_128.bundles,<sp/>ba_128_expected,<sp/>ba_128.num_bundles),</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_free()<sp/>failed<sp/>bits<sp/>comparison&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1af9a2c34896d3b1866a5a60f78d4166b0" kindref="member">sys_bitarray_free</ref>(&amp;ba_128,<sp/>24,<sp/>92);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_free()<sp/>should<sp/>fail<sp/>but<sp/>not&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" kindref="member">cmp_u32_arrays</ref>(ba_128.bundles,<sp/>ba_128_expected,<sp/>ba_128.num_bundles),</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_free()<sp/>failed<sp/>bits<sp/>comparison&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1af9a2c34896d3b1866a5a60f78d4166b0" kindref="member">sys_bitarray_free</ref>(&amp;ba_128,<sp/>16,<sp/>92);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_128_expected[2]<sp/>=<sp/>0x0F0F0F0F;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_128_expected[3]<sp/>=<sp/>0x0F0F0000;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_free()<sp/>failed:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" kindref="member">cmp_u32_arrays</ref>(ba_128.bundles,<sp/>ba_128_expected,<sp/>ba_128.num_bundles),</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_free()<sp/>failed<sp/>bits<sp/>comparison&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__kernel__common__tests_1ga88c1c186b920700ee59fb98aad38cf25" kindref="member">count_bits</ref>(<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>val)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Implements<sp/>Brian<sp/>Kernighan’s<sp/>Algorithm</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>count<sp/>bits.</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(val<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>val<sp/>&amp;<sp/>(val<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnt++;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__kernel__common__tests_1ga9040453080ce45df8a02c9227adbce93" kindref="member">get_bitarray_popcnt</ref>(<ref refid="structsys__bitarray" kindref="compound">sys_bitarray_t</ref><sp/>*ba)</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>popcnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>ba-&gt;<ref refid="structsys__bitarray_1abbb992a8a0408ed431c5203110c3d9e0" kindref="member">num_bundles</ref>;<sp/>idx++)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popcnt<sp/>+=<sp/><ref refid="group__kernel__common__tests_1ga88c1c186b920700ee59fb98aad38cf25" kindref="member">count_bits</ref>(ba-&gt;<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[idx]);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>popcnt;</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__common__tests_1gaf68e220db3cae89dc9dee344eb1d65a5" kindref="member">alloc_and_free_loop</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>divisor)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bit;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_bits;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cur_popcnt;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>expected_popcnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitarray_8h_1abbe958c6b995023665651e4aa050aa62" kindref="member">SYS_BITARRAY_DEFINE</ref>(ba,<sp/>234);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="printk_8h_1a768a7dff8592b69f327a08f96b00fa54" kindref="member">printk</ref>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>bit<sp/>array<sp/>alloc<sp/>and<sp/>free<sp/>with<sp/>divisor<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>divisor);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bit<sp/>=<sp/>0U;<sp/>bit<sp/>&lt;<sp/>ba.<ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref>;<sp/>++bit)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_popcnt<sp/>=<sp/><ref refid="group__kernel__common__tests_1ga9040453080ce45df8a02c9227adbce93" kindref="member">get_bitarray_popcnt</ref>(&amp;ba);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(cur_popcnt,<sp/>expected_popcnt,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;bit<sp/>count<sp/>expeceted<sp/>%u,<sp/>got<sp/>%u<sp/>(at<sp/>bit<sp/>%u)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_popcnt,<sp/>cur_popcnt,<sp/>bit);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>half<sp/>of<sp/>remaining<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_bits<sp/>=<sp/>(ba.<ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref><sp/>-<sp/>bit)<sp/>/<sp/>divisor;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1ac96766d9441a3b143aa386e2ac79ffd9" kindref="member">sys_bitarray_alloc</ref>(&amp;ba,<sp/>num_bits,<sp/>&amp;offset);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_bits<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_free()<sp/>should<sp/>fail<sp/>but<sp/>not<sp/>(bit<sp/>%u)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_alloc()<sp/>failed<sp/>(%d)<sp/>at<sp/>bit<sp/>%u&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>bit);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(offset,<sp/>bit,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_alloc()<sp/>offset<sp/>expected<sp/>%d,<sp/>got<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit,<sp/>offset);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_popcnt<sp/>+=<sp/>num_bits;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_popcnt<sp/>=<sp/><ref refid="group__kernel__common__tests_1ga9040453080ce45df8a02c9227adbce93" kindref="member">get_bitarray_popcnt</ref>(&amp;ba);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(cur_popcnt,<sp/>expected_popcnt,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;bit<sp/>count<sp/>expeceted<sp/>%u,<sp/>got<sp/>%u<sp/>(at<sp/>bit<sp/>%u)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_popcnt,<sp/>cur_popcnt,<sp/>bit);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>all<sp/>but<sp/>the<sp/>first<sp/>bit<sp/>of<sp/>allocated<sp/>region<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1af9a2c34896d3b1866a5a60f78d4166b0" kindref="member">sys_bitarray_free</ref>(&amp;ba,<sp/>(num_bits<sp/>-<sp/>1),<sp/>(bit<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((num_bits<sp/>==<sp/>0)<sp/>||<sp/>((num_bits<sp/>-<sp/>1)<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_free()<sp/>should<sp/>fail<sp/>but<sp/>not<sp/>(bit<sp/>%u)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_free()<sp/>failed<sp/>(%d)<sp/>at<sp/>bit<sp/>%u&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>(bit<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_popcnt<sp/>-=<sp/>num_bits<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__common__tests_1gaab4aa973b69686dd30cf4bc9335984e2" kindref="member">alloc_and_free_interval</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>expected_offset;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>expected_popcnt,<sp/>cur_popcnt;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>number<sp/>of<sp/>bits<sp/>is<sp/>multiple<sp/>of<sp/>8<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitarray_8h_1abbe958c6b995023665651e4aa050aa62" kindref="member">SYS_BITARRAY_DEFINE</ref>(ba,<sp/>152);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="printk_8h_1a768a7dff8592b69f327a08f96b00fa54" kindref="member">printk</ref>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>bit<sp/>array<sp/>interval<sp/>alloc<sp/>and<sp/>free\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pre-populate<sp/>the<sp/>bits<sp/>so<sp/>that<sp/>4-bit<sp/>already<sp/>allocated,</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>then<sp/>4<sp/>free<sp/>bits,<sp/>and<sp/>repeat.</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cnt<sp/>=<sp/>0;<sp/>cnt<sp/>&lt;<sp/>ba.<ref refid="structsys__bitarray_1abbb992a8a0408ed431c5203110c3d9e0" kindref="member">num_bundles</ref>;<sp/>cnt++)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[cnt]<sp/>=<sp/>0x0F0F0F0F;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_offset<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_popcnt<sp/>=<sp/><ref refid="group__kernel__common__tests_1ga9040453080ce45df8a02c9227adbce93" kindref="member">get_bitarray_popcnt</ref>(&amp;ba);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cnt<sp/>=<sp/>0;<sp/>cnt<sp/>&lt;=<sp/>(ba.<ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref><sp/>/<sp/>8);<sp/>cnt++)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1ac96766d9441a3b143aa386e2ac79ffd9" kindref="member">sys_bitarray_alloc</ref>(&amp;ba,<sp/>4,<sp/>&amp;offset);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnt<sp/>==<sp/>(ba.<ref refid="structsys__bitarray_1a1b0d7a25bc3e07a555e9a6fdc7304bac" kindref="member">num_bits</ref><sp/>/<sp/>8))<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_free()<sp/>should<sp/>fail<sp/>but<sp/>not<sp/>(cnt<sp/>%u)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnt);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_alloc()<sp/>failed<sp/>(%d)<sp/>(cnt<sp/>%u)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>cnt);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(offset,<sp/>expected_offset,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;offset<sp/>expeceted<sp/>%u,<sp/>got<sp/>%u<sp/>(cnt<sp/>%u)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_offset,<sp/>offset,<sp/>cnt);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_popcnt<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_popcnt<sp/>=<sp/><ref refid="group__kernel__common__tests_1ga9040453080ce45df8a02c9227adbce93" kindref="member">get_bitarray_popcnt</ref>(&amp;ba);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(cur_popcnt,<sp/>expected_popcnt,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;bit<sp/>count<sp/>expeceted<sp/>%u,<sp/>got<sp/>%u<sp/>(cnt<sp/>%u)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_popcnt,<sp/>cur_popcnt,<sp/>cnt);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_offset<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__common__tests_1ga6f425be5d73db7bee1196ad703361bad" kindref="member">test_bitarray_alloc_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bitarrays<sp/>have<sp/>embedded<sp/>spinlocks<sp/>and<sp/>can&apos;t<sp/>on<sp/>the<sp/>stack.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(CONFIG_KERNEL_COHERENCE))<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__common__tests_1gabcbe08c8508b4c30f7c3f950d6f3e782" kindref="member">alloc_and_free_predefined</ref>();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>65)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__common__tests_1gaf68e220db3cae89dc9dee344eb1d65a5" kindref="member">alloc_and_free_loop</ref>(i);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__kernel__common__tests_1gaab4aa973b69686dd30cf4bc9335984e2" kindref="member">alloc_and_free_interval</ref>();</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__common__tests_1gad421f39eb6fd767b9d5721bed2076f61" kindref="member">test_bitarray_region_set_clear</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bitarrays<sp/>have<sp/>embedded<sp/>spinlocks<sp/>and<sp/>can&apos;t<sp/>on<sp/>the<sp/>stack.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(CONFIG_KERNEL_COHERENCE))<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>ba_expected[4];</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitarray_8h_1abbe958c6b995023665651e4aa050aa62" kindref="member">SYS_BITARRAY_DEFINE</ref>(ba,<sp/>64);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="printk_8h_1a768a7dff8592b69f327a08f96b00fa54" kindref="member">printk</ref>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>bit<sp/>array<sp/>region<sp/>bit<sp/>tests\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pre-populate<sp/>the<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[0]<sp/>=<sp/>0xFF0F0F0F;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[1]<sp/>=<sp/>0x0F0F0FFF;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="bitarray_8h_1a2aa91a9be38b11e74dacbeb2fe5e6d6d" kindref="member">sys_bitarray_is_region_set</ref>(&amp;ba,<sp/><sp/>4,<sp/><sp/>0),<sp/>NULL);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="bitarray_8h_1a2aa91a9be38b11e74dacbeb2fe5e6d6d" kindref="member">sys_bitarray_is_region_set</ref>(&amp;ba,<sp/>12,<sp/>32),<sp/>NULL);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="bitarray_8h_1a2aa91a9be38b11e74dacbeb2fe5e6d6d" kindref="member">sys_bitarray_is_region_set</ref>(&amp;ba,<sp/><sp/>8,<sp/>32),<sp/>NULL);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="bitarray_8h_1a2aa91a9be38b11e74dacbeb2fe5e6d6d" kindref="member">sys_bitarray_is_region_set</ref>(&amp;ba,<sp/>14,<sp/>30),<sp/>NULL);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="bitarray_8h_1a2aa91a9be38b11e74dacbeb2fe5e6d6d" kindref="member">sys_bitarray_is_region_set</ref>(&amp;ba,<sp/>20,<sp/>24),<sp/>NULL);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="bitarray_8h_1a21cd833e7118f188ca3e06f8cfd13a49" kindref="member">sys_bitarray_is_region_cleared</ref>(&amp;ba,<sp/><sp/>4,<sp/><sp/>0),<sp/>NULL);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="bitarray_8h_1a21cd833e7118f188ca3e06f8cfd13a49" kindref="member">sys_bitarray_is_region_cleared</ref>(&amp;ba,<sp/>12,<sp/>32),<sp/>NULL);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="bitarray_8h_1a21cd833e7118f188ca3e06f8cfd13a49" kindref="member">sys_bitarray_is_region_cleared</ref>(&amp;ba,<sp/><sp/>8,<sp/>32),<sp/>NULL);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="bitarray_8h_1a21cd833e7118f188ca3e06f8cfd13a49" kindref="member">sys_bitarray_is_region_cleared</ref>(&amp;ba,<sp/>14,<sp/>30),<sp/>NULL);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="bitarray_8h_1a21cd833e7118f188ca3e06f8cfd13a49" kindref="member">sys_bitarray_is_region_cleared</ref>(&amp;ba,<sp/>20,<sp/>24),<sp/>NULL);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[0]<sp/>=<sp/>~ba.bundles[0];</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[1]<sp/>=<sp/>~ba.bundles[1];</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="bitarray_8h_1a21cd833e7118f188ca3e06f8cfd13a49" kindref="member">sys_bitarray_is_region_cleared</ref>(&amp;ba,<sp/><sp/>4,<sp/><sp/>0),<sp/>NULL);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="bitarray_8h_1a21cd833e7118f188ca3e06f8cfd13a49" kindref="member">sys_bitarray_is_region_cleared</ref>(&amp;ba,<sp/>12,<sp/>32),<sp/>NULL);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="bitarray_8h_1a21cd833e7118f188ca3e06f8cfd13a49" kindref="member">sys_bitarray_is_region_cleared</ref>(&amp;ba,<sp/><sp/>8,<sp/>32),<sp/>NULL);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="bitarray_8h_1a21cd833e7118f188ca3e06f8cfd13a49" kindref="member">sys_bitarray_is_region_cleared</ref>(&amp;ba,<sp/>14,<sp/>30),<sp/>NULL);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="bitarray_8h_1a21cd833e7118f188ca3e06f8cfd13a49" kindref="member">sys_bitarray_is_region_cleared</ref>(&amp;ba,<sp/>20,<sp/>24),<sp/>NULL);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="bitarray_8h_1a2aa91a9be38b11e74dacbeb2fe5e6d6d" kindref="member">sys_bitarray_is_region_set</ref>(&amp;ba,<sp/><sp/>4,<sp/><sp/>0),<sp/>NULL);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="bitarray_8h_1a2aa91a9be38b11e74dacbeb2fe5e6d6d" kindref="member">sys_bitarray_is_region_set</ref>(&amp;ba,<sp/>12,<sp/>32),<sp/>NULL);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="bitarray_8h_1a2aa91a9be38b11e74dacbeb2fe5e6d6d" kindref="member">sys_bitarray_is_region_set</ref>(&amp;ba,<sp/><sp/>8,<sp/>32),<sp/>NULL);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="bitarray_8h_1a2aa91a9be38b11e74dacbeb2fe5e6d6d" kindref="member">sys_bitarray_is_region_set</ref>(&amp;ba,<sp/>14,<sp/>30),<sp/>NULL);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="bitarray_8h_1a2aa91a9be38b11e74dacbeb2fe5e6d6d" kindref="member">sys_bitarray_is_region_set</ref>(&amp;ba,<sp/>20,<sp/>24),<sp/>NULL);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="bitarray_8h_1a2aa91a9be38b11e74dacbeb2fe5e6d6d" kindref="member">sys_bitarray_is_region_set</ref>(&amp;ba,<sp/>10,<sp/>60),<sp/>NULL);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="bitarray_8h_1a21cd833e7118f188ca3e06f8cfd13a49" kindref="member">sys_bitarray_is_region_cleared</ref>(&amp;ba,<sp/>10,<sp/>60),<sp/>NULL);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="bitarray_8h_1a2aa91a9be38b11e74dacbeb2fe5e6d6d" kindref="member">sys_bitarray_is_region_set</ref>(&amp;ba,<sp/>8,<sp/>120),<sp/>NULL);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="bitarray_8h_1a21cd833e7118f188ca3e06f8cfd13a49" kindref="member">sys_bitarray_is_region_cleared</ref>(&amp;ba,<sp/>8,<sp/>120),<sp/>NULL);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="printk_8h_1a768a7dff8592b69f327a08f96b00fa54" kindref="member">printk</ref>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>bit<sp/>array<sp/>region<sp/>bit<sp/>manipulations\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pre-populate<sp/>the<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[0]<sp/>=<sp/>0xFF0F0F0F;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>[1]<sp/>=<sp/>0x0F0F0FFF;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expected<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_expected[0]<sp/>=<sp/>0xFF0F0F0F;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_expected[1]<sp/>=<sp/>0x0F0F0FFF;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1a94d1a547b9fe0a01d73acf4a5c4f308b" kindref="member">sys_bitarray_set_region</ref>(&amp;ba,<sp/>4,<sp/>0);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_region()<sp/>failed:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" kindref="member">cmp_u32_arrays</ref>(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>,<sp/>ba_expected,<sp/>ba.<ref refid="structsys__bitarray_1abbb992a8a0408ed431c5203110c3d9e0" kindref="member">num_bundles</ref>),</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_region()<sp/>failed<sp/>bits<sp/>comparison&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1a94d1a547b9fe0a01d73acf4a5c4f308b" kindref="member">sys_bitarray_set_region</ref>(&amp;ba,<sp/>4,<sp/>4);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_expected[0]<sp/>=<sp/>0xFF0F0FFF;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_region()<sp/>failed:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" kindref="member">cmp_u32_arrays</ref>(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>,<sp/>ba_expected,<sp/>ba.<ref refid="structsys__bitarray_1abbb992a8a0408ed431c5203110c3d9e0" kindref="member">num_bundles</ref>),</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_region()<sp/>failed<sp/>bits<sp/>comparison&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1ad13bb2c37d0889807e026dbac6a2872d" kindref="member">sys_bitarray_clear_region</ref>(&amp;ba,<sp/>4,<sp/>4);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_expected[0]<sp/>=<sp/>0xFF0F0F0F;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_clear_region()<sp/>failed:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" kindref="member">cmp_u32_arrays</ref>(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>,<sp/>ba_expected,<sp/>ba.<ref refid="structsys__bitarray_1abbb992a8a0408ed431c5203110c3d9e0" kindref="member">num_bundles</ref>),</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_clear_region()<sp/>failed<sp/>bits<sp/>comparison&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1ad13bb2c37d0889807e026dbac6a2872d" kindref="member">sys_bitarray_clear_region</ref>(&amp;ba,<sp/>14,<sp/>30);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_expected[0]<sp/>=<sp/>0x3F0F0F0F;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_expected[1]<sp/>=<sp/>0x0F0F0000;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_clear_region()<sp/>failed:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" kindref="member">cmp_u32_arrays</ref>(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>,<sp/>ba_expected,<sp/>ba.<ref refid="structsys__bitarray_1abbb992a8a0408ed431c5203110c3d9e0" kindref="member">num_bundles</ref>),</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_clear_region()<sp/>failed<sp/>bits<sp/>comparison&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1a94d1a547b9fe0a01d73acf4a5c4f308b" kindref="member">sys_bitarray_set_region</ref>(&amp;ba,<sp/>14,<sp/>30);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_expected[0]<sp/>=<sp/>0xFF0F0F0F;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba_expected[1]<sp/>=<sp/>0x0F0F0FFF;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_region()<sp/>failed:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" kindref="member">cmp_u32_arrays</ref>(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>,<sp/>ba_expected,<sp/>ba.<ref refid="structsys__bitarray_1abbb992a8a0408ed431c5203110c3d9e0" kindref="member">num_bundles</ref>),</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_region()<sp/>failed<sp/>bits<sp/>comparison&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1a94d1a547b9fe0a01d73acf4a5c4f308b" kindref="member">sys_bitarray_set_region</ref>(&amp;ba,<sp/>10,<sp/>60);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_region()<sp/>should<sp/>fail<sp/>but<sp/>not&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" kindref="member">cmp_u32_arrays</ref>(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>,<sp/>ba_expected,<sp/>ba.<ref refid="structsys__bitarray_1abbb992a8a0408ed431c5203110c3d9e0" kindref="member">num_bundles</ref>),</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_region()<sp/>failed<sp/>bits<sp/>comparison&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1a94d1a547b9fe0a01d73acf4a5c4f308b" kindref="member">sys_bitarray_set_region</ref>(&amp;ba,<sp/>8,<sp/>120);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_region()<sp/>should<sp/>fail<sp/>but<sp/>not&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" kindref="member">cmp_u32_arrays</ref>(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>,<sp/>ba_expected,<sp/>ba.<ref refid="structsys__bitarray_1abbb992a8a0408ed431c5203110c3d9e0" kindref="member">num_bundles</ref>),</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_set_region()<sp/>failed<sp/>bits<sp/>comparison&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1ad13bb2c37d0889807e026dbac6a2872d" kindref="member">sys_bitarray_clear_region</ref>(&amp;ba,<sp/>10,<sp/>60);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_clear_region()<sp/>should<sp/>fail<sp/>but<sp/>not&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" kindref="member">cmp_u32_arrays</ref>(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>,<sp/>ba_expected,<sp/>ba.<ref refid="structsys__bitarray_1abbb992a8a0408ed431c5203110c3d9e0" kindref="member">num_bundles</ref>),</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_clear_region()<sp/>failed<sp/>bits<sp/>comparison&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref><sp/>=<sp/><ref refid="bitarray_8h_1ad13bb2c37d0889807e026dbac6a2872d" kindref="member">sys_bitarray_clear_region</ref>(&amp;ba,<sp/>8,<sp/>120);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="k__float__disable_8c_1a706ddfa9be3cb7727dd680308a7e62e0" kindref="member">ret</ref>,<sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_clear_region()<sp/>should<sp/>fail<sp/>but<sp/>not&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(<ref refid="group__kernel__common__tests_1ga9304658012875412c13d0026ce930787" kindref="member">cmp_u32_arrays</ref>(ba.<ref refid="structsys__bitarray_1a930cd4aa9489b835d548160a1f068395" kindref="member">bundles</ref>,<sp/>ba_expected,<sp/>ba.<ref refid="structsys__bitarray_1abbb992a8a0408ed431c5203110c3d9e0" kindref="member">num_bundles</ref>),</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_bitarray_clear_region()<sp/>failed<sp/>bits<sp/>comparison&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__common__tests_1ga2cbd1f795436828558d522a1ee09e512" kindref="member">test_ffs</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>value;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>boundary<sp/>test,<sp/>input<sp/>is<sp/>min<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="ffs_8h_1a088db7d02e8f1fc559cbe1ec048494e8" kindref="member">find_msb_set</ref>(value),<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;MSB<sp/>is<sp/>not<sp/>matched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="ffs_8h_1a860b01217c1d5eb5f416272c3b719113" kindref="member">find_lsb_set</ref>(value),<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;LSB<sp/>is<sp/>not<sp/>matched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>boundary<sp/>test,<sp/>input<sp/>is<sp/>min<sp/>+<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>0x00000001;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="ffs_8h_1a088db7d02e8f1fc559cbe1ec048494e8" kindref="member">find_msb_set</ref>(value),<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;MSB<sp/>is<sp/>not<sp/>matched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="ffs_8h_1a860b01217c1d5eb5f416272c3b719113" kindref="member">find_lsb_set</ref>(value),<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;LSB<sp/>is<sp/>not<sp/>matched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>average<sp/>value<sp/>test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>0x80000000;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="ffs_8h_1a088db7d02e8f1fc559cbe1ec048494e8" kindref="member">find_msb_set</ref>(value),<sp/>32,<sp/></highlight><highlight class="stringliteral">&quot;MSB<sp/>is<sp/>not<sp/>matched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="ffs_8h_1a860b01217c1d5eb5f416272c3b719113" kindref="member">find_lsb_set</ref>(value),<sp/>32,<sp/></highlight><highlight class="stringliteral">&quot;LSB<sp/>is<sp/>not<sp/>matched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mediate<sp/>value<sp/>test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>0x000FF000;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="ffs_8h_1a088db7d02e8f1fc559cbe1ec048494e8" kindref="member">find_msb_set</ref>(value),<sp/>20,<sp/></highlight><highlight class="stringliteral">&quot;MSB<sp/>is<sp/>not<sp/>matched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="ffs_8h_1a860b01217c1d5eb5f416272c3b719113" kindref="member">find_lsb_set</ref>(value),<sp/>13,<sp/></highlight><highlight class="stringliteral">&quot;LSB<sp/>is<sp/>not<sp/>matched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>boundary<sp/>test,<sp/>input<sp/>is<sp/>max<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="ffs_8h_1a088db7d02e8f1fc559cbe1ec048494e8" kindref="member">find_msb_set</ref>(value),<sp/>32,<sp/></highlight><highlight class="stringliteral">&quot;MSB<sp/>is<sp/>not<sp/>matched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="ffs_8h_1a860b01217c1d5eb5f416272c3b719113" kindref="member">find_lsb_set</ref>(value),<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;LSB<sp/>is<sp/>not<sp/>matched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>boundary<sp/>test,<sp/>input<sp/>is<sp/>max<sp/>-<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>0xfffffffe;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="ffs_8h_1a088db7d02e8f1fc559cbe1ec048494e8" kindref="member">find_msb_set</ref>(value),<sp/>32,<sp/></highlight><highlight class="stringliteral">&quot;MSB<sp/>is<sp/>not<sp/>matched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="ffs_8h_1a860b01217c1d5eb5f416272c3b719113" kindref="member">find_lsb_set</ref>(value),<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;LSB<sp/>is<sp/>not<sp/>matched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>equivalent<sp/>class<sp/>testing,<sp/>each<sp/>bit<sp/>means<sp/>a<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bit<sp/>=<sp/>0;<sp/>bit<sp/>&lt;<sp/>32<sp/>;<sp/>bit++)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>1UL<sp/>&lt;&lt;<sp/>bit;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="ffs_8h_1a088db7d02e8f1fc559cbe1ec048494e8" kindref="member">find_msb_set</ref>(value),<sp/>bit<sp/>+<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;MSB<sp/>is<sp/>not<sp/>matched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="ffs_8h_1a860b01217c1d5eb5f416272c3b719113" kindref="member">find_lsb_set</ref>(value),<sp/>bit<sp/>+<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;LSB<sp/>is<sp/>not<sp/>matched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tests/kernel/common/src/bitarray.c"/>
  </compounddef>
</doxygen>
