<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="smp_8h" kind="file" language="C++">
    <compoundname>smp.h</compoundname>
    <includes local="no">kernel.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/mgmt/mcumgr/smp.h</label>
        <link refid="smp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structzephyr__smp__transport" prot="public">zephyr_smp_transport</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="smp_8h_1a5c47cbd334cbc74f0b4e359f5d851ed7" prot="public" static="no">
        <type>int</type>
        <definition>zephyr_smp_transport_out_fn</definition>
        <argsstring>(struct zephyr_smp_transport *zst, struct net_buf *nb)</argsstring>
        <name>zephyr_smp_transport_out_fn</name>
        <briefdescription>
<para>SMP transmit function for Zephyr. </para>
        </briefdescription>
        <detaileddescription>
<para>The supplied <ref refid="structnet__buf" kindref="compound">net_buf</ref> is always consumed, regardless of return code.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>zst</parametername>
</parameternamelist>
<parameterdescription>
<para>The transport to send via. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structnet__buf" kindref="compound">net_buf</ref> to transmit.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, MGMT_ERR_[...] code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mgmt/mcumgr/smp.h" line="29" column="13" bodyfile="include/mgmt/mcumgr/smp.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="smp_8h_1aed0d8dbaae3616ad2b19ce275cd33a3b" prot="public" static="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>zephyr_smp_transport_get_mtu_fn</definition>
        <argsstring>(const struct net_buf *nb)</argsstring>
        <name>zephyr_smp_transport_get_mtu_fn</name>
        <briefdescription>
<para>SMP MTU query function for Zephyr. </para>
        </briefdescription>
        <detaileddescription>
<para>The supplied <ref refid="structnet__buf" kindref="compound">net_buf</ref> should contain a request received from the peer whose MTU is being queried. This function takes a <ref refid="structnet__buf" kindref="compound">net_buf</ref> parameter because some transports store connection-specific information in the <ref refid="structnet__buf" kindref="compound">net_buf</ref> user header (e.g., the BLE transport stores the peer address).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nb</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains a request from the relevant peer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The transport&apos;s MTU; 0 if transmission is currently not possible. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mgmt/mcumgr/smp.h" line="45" column="18" bodyfile="include/mgmt/mcumgr/smp.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="smp_8h_1aa20e3fc0746f16f7b2290c24811c9331" prot="public" static="no">
        <type>int</type>
        <definition>zephyr_smp_transport_ud_copy_fn</definition>
        <argsstring>(struct net_buf *dst, const struct net_buf *src)</argsstring>
        <name>zephyr_smp_transport_ud_copy_fn</name>
        <briefdescription>
<para>SMP copy buffer user_data function for Zephyr. </para>
        </briefdescription>
        <detaileddescription>
<para>The supplied src <ref refid="structnet__buf" kindref="compound">net_buf</ref> should contain a user_data that cannot be copied using regular memcpy function (e.g., the BLE transport <ref refid="structnet__buf" kindref="compound">net_buf</ref> user_data stores the connection reference that has to be incremented when is going to be used by another buffer).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Source buffer user_data pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination buffer user_data pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, MGMT_ERR_[...] code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mgmt/mcumgr/smp.h" line="60" column="13" bodyfile="include/mgmt/mcumgr/smp.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="smp_8h_1a1aedcfa9d4541b7551eab8fcae598f4f" prot="public" static="no">
        <type>void</type>
        <definition>zephyr_smp_transport_ud_free_fn</definition>
        <argsstring>(void *ud)</argsstring>
        <name>zephyr_smp_transport_ud_free_fn</name>
        <briefdescription>
<para>SMP free buffer user_data function for Zephyr. </para>
        </briefdescription>
        <detaileddescription>
<para>This function frees <ref refid="structnet__buf" kindref="compound">net_buf</ref> user data, because some transports store connection-specific information in the <ref refid="structnet__buf" kindref="compound">net_buf</ref> user data (e.g., the BLE transport stores the connection reference that has to be decreased).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ud</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains a user_data pointer to be freed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mgmt/mcumgr/smp.h" line="72" column="14" bodyfile="include/mgmt/mcumgr/smp.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="smp_8h_1ac35c7e1f04f7ec638f0237afc3425cd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zephyr_smp_transport_init</definition>
        <argsstring>(struct zephyr_smp_transport *zst, zephyr_smp_transport_out_fn *output_func, zephyr_smp_transport_get_mtu_fn *get_mtu_func, zephyr_smp_transport_ud_copy_fn *ud_copy_func, zephyr_smp_transport_ud_free_fn *ud_free_func)</argsstring>
        <name>zephyr_smp_transport_init</name>
        <param>
          <type>struct <ref refid="structzephyr__smp__transport" kindref="compound">zephyr_smp_transport</ref> *</type>
          <declname>zst</declname>
        </param>
        <param>
          <type><ref refid="smp_8h_1a5c47cbd334cbc74f0b4e359f5d851ed7" kindref="member">zephyr_smp_transport_out_fn</ref> *</type>
          <declname>output_func</declname>
        </param>
        <param>
          <type><ref refid="smp_8h_1aed0d8dbaae3616ad2b19ce275cd33a3b" kindref="member">zephyr_smp_transport_get_mtu_fn</ref> *</type>
          <declname>get_mtu_func</declname>
        </param>
        <param>
          <type><ref refid="smp_8h_1aa20e3fc0746f16f7b2290c24811c9331" kindref="member">zephyr_smp_transport_ud_copy_fn</ref> *</type>
          <declname>ud_copy_func</declname>
        </param>
        <param>
          <type><ref refid="smp_8h_1a1aedcfa9d4541b7551eab8fcae598f4f" kindref="member">zephyr_smp_transport_ud_free_fn</ref> *</type>
          <declname>ud_free_func</declname>
        </param>
        <briefdescription>
<para>Initializes a Zephyr SMP transport object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>zst</parametername>
</parameternamelist>
<parameterdescription>
<para>The transport to construct. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_func</parametername>
</parameternamelist>
<parameterdescription>
<para>The transport&apos;s send function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>get_mtu_func</parametername>
</parameternamelist>
<parameterdescription>
<para>The transport&apos;s get-MTU function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ud_copy_func</parametername>
</parameternamelist>
<parameterdescription>
<para>The transport buffer user_data copy function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ud_free_func</parametername>
</parameternamelist>
<parameterdescription>
<para>The transport buffer user_data free function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mgmt/mcumgr/smp.h" line="99" column="6" declfile="include/mgmt/mcumgr/smp.h" declline="99" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="smp_8h_1a0f94725477ed07937cfca3d659f76014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zephyr_smp_rx_req</definition>
        <argsstring>(struct zephyr_smp_transport *zst, struct net_buf *nb)</argsstring>
        <name>zephyr_smp_rx_req</name>
        <param>
          <type>struct <ref refid="structzephyr__smp__transport" kindref="compound">zephyr_smp_transport</ref> *</type>
          <declname>zst</declname>
        </param>
        <param>
          <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
          <declname>nb</declname>
        </param>
        <briefdescription>
<para>Enqueues an incoming SMP request packet for processing. </para>
        </briefdescription>
        <detaileddescription>
<para>This function always consumes the supplied <ref refid="structnet__buf" kindref="compound">net_buf</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>zst</parametername>
</parameternamelist>
<parameterdescription>
<para>The transport to use to send the corresponding response(s). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb</parametername>
</parameternamelist>
<parameterdescription>
<para>The request packet to process. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mgmt/mcumgr/smp.h" line="114" column="6" declfile="include/mgmt/mcumgr/smp.h" declline="114" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>Runtime.io<sp/>2018.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_MGMT_SMP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_MGMT_SMP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzephyr__smp__transport" kindref="compound">zephyr_smp_transport</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__buf" kindref="compound">net_buf</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="smp_8h_1a5c47cbd334cbc74f0b4e359f5d851ed7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smp_8h_1a5c47cbd334cbc74f0b4e359f5d851ed7" kindref="member">zephyr_smp_transport_out_fn</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structzephyr__smp__transport" kindref="compound">zephyr_smp_transport</ref><sp/>*zst,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*nb);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="smp_8h_1aed0d8dbaae3616ad2b19ce275cd33a3b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="smp_8h_1aed0d8dbaae3616ad2b19ce275cd33a3b" kindref="member">zephyr_smp_transport_get_mtu_fn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*nb);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="smp_8h_1aa20e3fc0746f16f7b2290c24811c9331" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="smp_8h_1aa20e3fc0746f16f7b2290c24811c9331" kindref="member">zephyr_smp_transport_ud_copy_fn</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*dst,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*src);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="smp_8h_1a1aedcfa9d4541b7551eab8fcae598f4f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="smp_8h_1a1aedcfa9d4541b7551eab8fcae598f4f" kindref="member">zephyr_smp_transport_ud_free_fn</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ud);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structzephyr__smp__transport" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzephyr__smp__transport" kindref="compound">zephyr_smp_transport</ref><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Must<sp/>be<sp/>the<sp/>first<sp/>member.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="structzephyr__smp__transport_1a000ca519fb828b7d03937e62a2ac147f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/><ref refid="structzephyr__smp__transport_1a000ca519fb828b7d03937e62a2ac147f" kindref="member">zst_work</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIFO<sp/>containing<sp/>incoming<sp/>requests<sp/>to<sp/>be<sp/>processed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="structzephyr__smp__transport_1a15ffa53af73151d0d4564fda29c35a02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__fifo" kindref="compound">k_fifo</ref><sp/><ref refid="structzephyr__smp__transport_1a15ffa53af73151d0d4564fda29c35a02" kindref="member">zst_fifo</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="structzephyr__smp__transport_1ab19c8dfb83edef1cd7598036d663500e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smp_8h_1a5c47cbd334cbc74f0b4e359f5d851ed7" kindref="member">zephyr_smp_transport_out_fn</ref><sp/>*<ref refid="structzephyr__smp__transport_1ab19c8dfb83edef1cd7598036d663500e" kindref="member">zst_output</ref>;</highlight></codeline>
<codeline lineno="85" refid="structzephyr__smp__transport_1a5b4e8c13ad0ca37bd6ea443ab7d59300" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smp_8h_1aed0d8dbaae3616ad2b19ce275cd33a3b" kindref="member">zephyr_smp_transport_get_mtu_fn</ref><sp/>*<ref refid="structzephyr__smp__transport_1a5b4e8c13ad0ca37bd6ea443ab7d59300" kindref="member">zst_get_mtu</ref>;</highlight></codeline>
<codeline lineno="86" refid="structzephyr__smp__transport_1a7ba5197595814b83ecfe37da182c4995" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smp_8h_1aa20e3fc0746f16f7b2290c24811c9331" kindref="member">zephyr_smp_transport_ud_copy_fn</ref><sp/>*<ref refid="structzephyr__smp__transport_1a7ba5197595814b83ecfe37da182c4995" kindref="member">zst_ud_copy</ref>;</highlight></codeline>
<codeline lineno="87" refid="structzephyr__smp__transport_1a83130e44bb744db99a2b5e74aa2c000e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smp_8h_1a1aedcfa9d4541b7551eab8fcae598f4f" kindref="member">zephyr_smp_transport_ud_free_fn</ref><sp/>*<ref refid="structzephyr__smp__transport_1a83130e44bb744db99a2b5e74aa2c000e" kindref="member">zst_ud_free</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="smp_8h_1ac35c7e1f04f7ec638f0237afc3425cd8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="smp_8h_1ac35c7e1f04f7ec638f0237afc3425cd8" kindref="member">zephyr_smp_transport_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structzephyr__smp__transport" kindref="compound">zephyr_smp_transport</ref><sp/>*zst,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smp_8h_1a5c47cbd334cbc74f0b4e359f5d851ed7" kindref="member">zephyr_smp_transport_out_fn</ref><sp/>*output_func,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smp_8h_1aed0d8dbaae3616ad2b19ce275cd33a3b" kindref="member">zephyr_smp_transport_get_mtu_fn</ref><sp/>*get_mtu_func,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smp_8h_1aa20e3fc0746f16f7b2290c24811c9331" kindref="member">zephyr_smp_transport_ud_copy_fn</ref><sp/>*ud_copy_func,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="smp_8h_1a1aedcfa9d4541b7551eab8fcae598f4f" kindref="member">zephyr_smp_transport_ud_free_fn</ref><sp/>*ud_free_func);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="smp_8h_1a0f94725477ed07937cfca3d659f76014" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="smp_8h_1a0f94725477ed07937cfca3d659f76014" kindref="member">zephyr_smp_rx_req</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structzephyr__smp__transport" kindref="compound">zephyr_smp_transport</ref><sp/>*zst,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*nb);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/mgmt/mcumgr/smp.h"/>
  </compounddef>
</doxygen>
