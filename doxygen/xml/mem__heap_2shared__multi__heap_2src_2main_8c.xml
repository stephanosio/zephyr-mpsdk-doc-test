<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="mem__heap_2shared__multi__heap_2src_2main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes local="no">zephyr.h</includes>
    <includes refid="ztest_8h" local="no">ztest.h</includes>
    <includes refid="linker-defs_8h" local="no">linker/linker-defs.h</includes>
    <includes refid="mem__manage_8h" local="no">sys/mem_manage.h</includes>
    <includes refid="shared__multi__heap_8h" local="no">multi_heap/shared_multi_heap.h</includes>
    <incdepgraph>
      <node id="17">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="66">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="65">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="29">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="36">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="38">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="34">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="32">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="40">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="41">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="37">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="35">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="39">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="75">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="45">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="51">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="28">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>multi_heap/shared_multi_heap.h</label>
        <link refid="shared__multi__heap_8h"/>
      </node>
      <node id="74">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="42">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>sys/mem_manage.h</label>
        <link refid="mem__manage_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="23">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="5">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="19">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="86">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="87">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="13">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="9">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="11">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="64">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="88">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="81">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="3">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="15">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/mem_heap/shared_multi_heap/src/main.c</label>
        <link refid="mem__heap_2shared__multi__heap_2src_2main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>alloca.h</label>
      </node>
      <node id="68">
        <label>arch/cpu.h</label>
      </node>
      <node id="31">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="30">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="43">
        <label>kernel.h</label>
      </node>
      <node id="7">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="84">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="92">
        <label>syscalls/mem_manage.h</label>
      </node>
      <node id="89">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="90">
        <label>tc_util.h</label>
      </node>
      <node id="2">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="mem__heap_2shared__multi__heap_2src_2main_8c_1a0ed6296c3d53a3dba7048e82fc94b999" prot="public" static="no">
        <name>MAX_REGIONS</name>
        <initializer>(3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_heap/shared_multi_heap/src/main.c" line="14" column="9" bodyfile="tests/kernel/mem_heap/shared_multi_heap/src/main.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structshared__multi__heap__region" kindref="compound">shared_multi_heap_region</ref> *</type>
        <definition>struct shared_multi_heap_region* reg</definition>
        <argsstring></argsstring>
        <name>reg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_heap/shared_multi_heap/src/main.c" line="17" column="31" bodyfile="tests/kernel/mem_heap/shared_multi_heap/src/main.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mem__heap_2shared__multi__heap_2src_2main_8c_1ae392315a60a2a6743596eaa8dc276977" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
        <definition>uint8_t* v_addr</definition>
        <argsstring></argsstring>
        <name>v_addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_heap/shared_multi_heap/src/main.c" line="18" column="9" bodyfile="tests/kernel/mem_heap/shared_multi_heap/src/main.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mem__heap_2shared__multi__heap_2src_2main_8c_1a6752b8d9061d70fd9e7eb09e54ba8958" prot="public" static="yes" mutable="no">
        <type>struct @214</type>
        <definition>struct @214 map[ (3) ]</definition>
        <argsstring>[(3)]</argsstring>
        <name>map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_heap/shared_multi_heap/src/main.c" line="19" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="mem__heap_2shared__multi__heap_2src_2main_8c_1a0e3b9706f330586b43c26aac9a47a408" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool smh_reg_init</definition>
        <argsstring>(struct shared_multi_heap_region *reg, uint8_t **v_addr, size_t *size)</argsstring>
        <name>smh_reg_init</name>
        <param>
          <type>struct <ref refid="structshared__multi__heap__region" kindref="compound">shared_multi_heap_region</ref> *</type>
          <declname>reg</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> **</type>
          <declname>v_addr</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_heap/shared_multi_heap/src/main.c" line="21" column="13" bodyfile="tests/kernel/mem_heap/shared_multi_heap/src/main.c" bodystart="21" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="mem__heap_2shared__multi__heap_2src_2main_8c_1a7a534ff791130701cba8b05ecca55382" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structshared__multi__heap__region" kindref="compound">shared_multi_heap_region</ref> *</type>
        <definition>static struct shared_multi_heap_region * get_reg_addr</definition>
        <argsstring>(uint8_t *v_addr)</argsstring>
        <name>get_reg_addr</name>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>v_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_heap/shared_multi_heap/src/main.c" line="42" column="38" bodyfile="tests/kernel/mem_heap/shared_multi_heap/src/main.c" bodystart="42" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="mem__heap_2shared__multi__heap_2src_2main_8c_1a7578fb4245b9f5ff20611717b06cd1b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_shared_multi_heap</definition>
        <argsstring>(void)</argsstring>
        <name>test_shared_multi_heap</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_heap/shared_multi_heap/src/main.c" line="53" column="6" bodyfile="tests/kernel/mem_heap/shared_multi_heap/src/main.c" bodystart="53" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="mem__heap_2shared__multi__heap_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_main</definition>
        <argsstring>(void)</argsstring>
        <name>test_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>test case main entry </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_heap/shared_multi_heap/src/main.c" line="124" column="6" bodyfile="tests/kernel/mem_heap/shared_multi_heap/src/main.c" bodystart="124" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Carlo<sp/>Caione<sp/>&lt;ccaione@baylibre.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztest_8h" kindref="compound">ztest.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="linker-defs_8h" kindref="compound">linker/linker-defs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="mem__manage_8h" kindref="compound">sys/mem_manage.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="shared__multi__heap_8h" kindref="compound">multi_heap/shared_multi_heap.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_REGIONS<sp/>(3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshared__multi__heap__region" kindref="compound">shared_multi_heap_region</ref><sp/>*<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1ae392315a60a2a6743596eaa8dc276977" kindref="member">v_addr</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a6752b8d9061d70fd9e7eb09e54ba8958" kindref="member">map</ref>[<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a0ed6296c3d53a3dba7048e82fc94b999" kindref="member">MAX_REGIONS</ref>];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a0e3b9706f330586b43c26aac9a47a408" kindref="member">smh_reg_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structshared__multi__heap__region" kindref="compound">shared_multi_heap_region</ref><sp/>*<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>**<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1ae392315a60a2a6743596eaa8dc276977" kindref="member">v_addr</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<ref refid="structshared__multi__heap__region_1a3f6565062f70b2c8d25c3a0be579482c" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reg_idx;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>mem_attr;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem_attr<sp/>=<sp/>(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;<ref refid="structshared__multi__heap__region_1a9e6389b1c7ed71faa345e11ef42f22b8" kindref="member">attr</ref><sp/>==<sp/><ref refid="group__shared__multi__heap_1ggad3617533a50c35c71f7c476b13061ae1afb2e0bb04859ff231dee953279b8bf3a" kindref="member">SMH_REG_ATTR_CACHEABLE</ref>)<sp/>?<sp/><ref refid="mem__manage_8h_1a802a69d7a53cafcf357861ab50258c99" kindref="member">K_MEM_CACHE_WB</ref><sp/>:<sp/><ref refid="mem__manage_8h_1aae7605452be94d1bd6e0364e9db113c6" kindref="member">K_MEM_CACHE_NONE</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem_attr<sp/>|=<sp/><ref refid="mem__manage_8h_1ab9ea94b7155e276f0b653bc1a081866e" kindref="member">K_MEM_PERM_RW</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_phys_map(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1ae392315a60a2a6743596eaa8dc276977" kindref="member">v_addr</ref>,<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;<ref refid="structshared__multi__heap__region_1a905df61648eaa18cebf53bb10dcde91d" kindref="member">addr</ref>,<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;<ref refid="structshared__multi__heap__region_1a3f6565062f70b2c8d25c3a0be579482c" kindref="member">size</ref>,<sp/>mem_attr);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structshared__multi__heap__region_1a3f6565062f70b2c8d25c3a0be579482c" kindref="member">size</ref><sp/>=<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;<ref refid="structshared__multi__heap__region_1a3f6565062f70b2c8d25c3a0be579482c" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>the<sp/>mapping<sp/>to<sp/>retrieve<sp/>the<sp/>region<sp/>from<sp/>the<sp/>vaddr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a6752b8d9061d70fd9e7eb09e54ba8958" kindref="member">map</ref>[reg_idx].reg<sp/>=<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a6752b8d9061d70fd9e7eb09e54ba8958" kindref="member">map</ref>[reg_idx].v_addr<sp/>=<sp/>*<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1ae392315a60a2a6743596eaa8dc276977" kindref="member">v_addr</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_idx++;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshared__multi__heap__region" kindref="compound">shared_multi_heap_region</ref><sp/>*<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a7a534ff791130701cba8b05ecca55382" kindref="member">get_reg_addr</ref>(<ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1ae392315a60a2a6743596eaa8dc276977" kindref="member">v_addr</ref>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref><sp/>=<sp/>0;<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref><sp/>&lt;<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a0ed6296c3d53a3dba7048e82fc94b999" kindref="member">MAX_REGIONS</ref>;<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1ae392315a60a2a6743596eaa8dc276977" kindref="member">v_addr</ref><sp/>&gt;=<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a6752b8d9061d70fd9e7eb09e54ba8958" kindref="member">map</ref>[<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>].<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1ae392315a60a2a6743596eaa8dc276977" kindref="member">v_addr</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1ae392315a60a2a6743596eaa8dc276977" kindref="member">v_addr</ref><sp/>&lt;<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a6752b8d9061d70fd9e7eb09e54ba8958" kindref="member">map</ref>[<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>].<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1ae392315a60a2a6743596eaa8dc276977" kindref="member">v_addr</ref><sp/>+<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a6752b8d9061d70fd9e7eb09e54ba8958" kindref="member">map</ref>[<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>].<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;<ref refid="structshared__multi__heap__region_1a3f6565062f70b2c8d25c3a0be579482c" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a6752b8d9061d70fd9e7eb09e54ba8958" kindref="member">map</ref>[<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>].reg;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a7578fb4245b9f5ff20611717b06cd1b9" kindref="member">test_shared_multi_heap</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshared__multi__heap__region" kindref="compound">shared_multi_heap_region</ref><sp/>*<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__shared__multi__heap_1ga59c5c0d6bb27c49bf58d31485bb23e04" kindref="member">shared_multi_heap_pool_init</ref>(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a0e3b9706f330586b43c26aac9a47a408" kindref="member">smh_reg_init</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Request<sp/>a<sp/>small<sp/>cacheable<sp/>chunk.<sp/>It<sp/>should<sp/>be<sp/>allocated<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>smaller<sp/>region<sp/>(@<sp/>0x42000000)</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref><sp/>=<sp/><ref refid="group__shared__multi__heap_1gadfe601d1fe68d1833c97b078381d680a" kindref="member">shared_multi_heap_alloc</ref>(<ref refid="group__shared__multi__heap_1ggad3617533a50c35c71f7c476b13061ae1afb2e0bb04859ff231dee953279b8bf3a" kindref="member">SMH_REG_ATTR_CACHEABLE</ref>,<sp/>0x40);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref><sp/>=<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a7a534ff791130701cba8b05ecca55382" kindref="member">get_reg_addr</ref>(<ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;<ref refid="structshared__multi__heap__region_1a905df61648eaa18cebf53bb10dcde91d" kindref="member">addr</ref>,<sp/>0x42000000,<sp/></highlight><highlight class="stringliteral">&quot;block<sp/>in<sp/>the<sp/>wrong<sp/>memory<sp/>region&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;<ref refid="structshared__multi__heap__region_1a9e6389b1c7ed71faa345e11ef42f22b8" kindref="member">attr</ref>,<sp/><ref refid="group__shared__multi__heap_1ggad3617533a50c35c71f7c476b13061ae1afb2e0bb04859ff231dee953279b8bf3a" kindref="member">SMH_REG_ATTR_CACHEABLE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;wrong<sp/>memery<sp/>attribute&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Request<sp/>another<sp/>small<sp/>cacheable<sp/>chunk.<sp/>It<sp/>should<sp/>be<sp/>allocated<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>smaller<sp/>cacheable<sp/>region<sp/>(@<sp/>0x42000000)</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref><sp/>=<sp/><ref refid="group__shared__multi__heap_1gadfe601d1fe68d1833c97b078381d680a" kindref="member">shared_multi_heap_alloc</ref>(<ref refid="group__shared__multi__heap_1ggad3617533a50c35c71f7c476b13061ae1afb2e0bb04859ff231dee953279b8bf3a" kindref="member">SMH_REG_ATTR_CACHEABLE</ref>,<sp/>0x80);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref><sp/>=<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a7a534ff791130701cba8b05ecca55382" kindref="member">get_reg_addr</ref>(<ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;<ref refid="structshared__multi__heap__region_1a905df61648eaa18cebf53bb10dcde91d" kindref="member">addr</ref>,<sp/>0x42000000,<sp/></highlight><highlight class="stringliteral">&quot;block<sp/>in<sp/>the<sp/>wrong<sp/>memory<sp/>region&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;<ref refid="structshared__multi__heap__region_1a9e6389b1c7ed71faa345e11ef42f22b8" kindref="member">attr</ref>,<sp/><ref refid="group__shared__multi__heap_1ggad3617533a50c35c71f7c476b13061ae1afb2e0bb04859ff231dee953279b8bf3a" kindref="member">SMH_REG_ATTR_CACHEABLE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;wrong<sp/>memory<sp/>attribute&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Request<sp/>a<sp/>big<sp/>cacheable<sp/>chunk.<sp/>It<sp/>should<sp/>be<sp/>allocated<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>bigger<sp/>cacheable<sp/>region<sp/>(@<sp/>0x44000000)</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref><sp/>=<sp/><ref refid="group__shared__multi__heap_1gadfe601d1fe68d1833c97b078381d680a" kindref="member">shared_multi_heap_alloc</ref>(<ref refid="group__shared__multi__heap_1ggad3617533a50c35c71f7c476b13061ae1afb2e0bb04859ff231dee953279b8bf3a" kindref="member">SMH_REG_ATTR_CACHEABLE</ref>,<sp/>0x1200);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref><sp/>=<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a7a534ff791130701cba8b05ecca55382" kindref="member">get_reg_addr</ref>(<ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;<ref refid="structshared__multi__heap__region_1a905df61648eaa18cebf53bb10dcde91d" kindref="member">addr</ref>,<sp/>0x44000000,<sp/></highlight><highlight class="stringliteral">&quot;block<sp/>in<sp/>the<sp/>wrong<sp/>memory<sp/>region&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;<ref refid="structshared__multi__heap__region_1a9e6389b1c7ed71faa345e11ef42f22b8" kindref="member">attr</ref>,<sp/><ref refid="group__shared__multi__heap_1ggad3617533a50c35c71f7c476b13061ae1afb2e0bb04859ff231dee953279b8bf3a" kindref="member">SMH_REG_ATTR_CACHEABLE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;wrong<sp/>memory<sp/>attribute&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Request<sp/>a<sp/>non-cacheable<sp/>chunk.<sp/>It<sp/>should<sp/>be<sp/>allocated<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>non-cacheable<sp/>region<sp/>(@<sp/>0x43000000)</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref><sp/>=<sp/><ref refid="group__shared__multi__heap_1gadfe601d1fe68d1833c97b078381d680a" kindref="member">shared_multi_heap_alloc</ref>(<ref refid="group__shared__multi__heap_1ggad3617533a50c35c71f7c476b13061ae1a2625b9b8aea429ab748f9e39d55f0dff" kindref="member">SMH_REG_ATTR_NON_CACHEABLE</ref>,<sp/>0x100);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref><sp/>=<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a7a534ff791130701cba8b05ecca55382" kindref="member">get_reg_addr</ref>(<ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;<ref refid="structshared__multi__heap__region_1a905df61648eaa18cebf53bb10dcde91d" kindref="member">addr</ref>,<sp/>0x43000000,<sp/></highlight><highlight class="stringliteral">&quot;block<sp/>in<sp/>the<sp/>wrong<sp/>memory<sp/>region&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;<ref refid="structshared__multi__heap__region_1a9e6389b1c7ed71faa345e11ef42f22b8" kindref="member">attr</ref>,<sp/><ref refid="group__shared__multi__heap_1ggad3617533a50c35c71f7c476b13061ae1a2625b9b8aea429ab748f9e39d55f0dff" kindref="member">SMH_REG_ATTR_NON_CACHEABLE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;wrong<sp/>memory<sp/>attribute&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Request<sp/>again<sp/>a<sp/>non-cacheable<sp/>chunk.<sp/>It<sp/>should<sp/>be<sp/>allocated<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>non-cacheable<sp/>region<sp/>(@<sp/>0x43000000)</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref><sp/>=<sp/><ref refid="group__shared__multi__heap_1gadfe601d1fe68d1833c97b078381d680a" kindref="member">shared_multi_heap_alloc</ref>(<ref refid="group__shared__multi__heap_1ggad3617533a50c35c71f7c476b13061ae1a2625b9b8aea429ab748f9e39d55f0dff" kindref="member">SMH_REG_ATTR_NON_CACHEABLE</ref>,<sp/>0x100);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref><sp/>=<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a7a534ff791130701cba8b05ecca55382" kindref="member">get_reg_addr</ref>(<ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;<ref refid="structshared__multi__heap__region_1a905df61648eaa18cebf53bb10dcde91d" kindref="member">addr</ref>,<sp/>0x43000000,<sp/></highlight><highlight class="stringliteral">&quot;block<sp/>in<sp/>the<sp/>wrong<sp/>memory<sp/>region&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;<ref refid="structshared__multi__heap__region_1a9e6389b1c7ed71faa345e11ef42f22b8" kindref="member">attr</ref>,<sp/><ref refid="group__shared__multi__heap_1ggad3617533a50c35c71f7c476b13061ae1a2625b9b8aea429ab748f9e39d55f0dff" kindref="member">SMH_REG_ATTR_NON_CACHEABLE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;wrong<sp/>memory<sp/>attribute&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Request<sp/>a<sp/>block<sp/>too<sp/>big<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref><sp/>=<sp/><ref refid="group__shared__multi__heap_1gadfe601d1fe68d1833c97b078381d680a" kindref="member">shared_multi_heap_alloc</ref>(<ref refid="group__shared__multi__heap_1ggad3617533a50c35c71f7c476b13061ae1a2625b9b8aea429ab748f9e39d55f0dff" kindref="member">SMH_REG_ATTR_NON_CACHEABLE</ref>,<sp/>0x10000);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga0380ea00fa3775f9a8a05faaf4de71b7" kindref="member">zassert_is_null</ref>(<ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref>,<sp/></highlight><highlight class="stringliteral">&quot;allocated<sp/>buffer<sp/>too<sp/>big<sp/>for<sp/>the<sp/>region&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Request<sp/>a<sp/>0-sized<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref><sp/>=<sp/><ref refid="group__shared__multi__heap_1gadfe601d1fe68d1833c97b078381d680a" kindref="member">shared_multi_heap_alloc</ref>(<ref refid="group__shared__multi__heap_1ggad3617533a50c35c71f7c476b13061ae1a2625b9b8aea429ab748f9e39d55f0dff" kindref="member">SMH_REG_ATTR_NON_CACHEABLE</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga0380ea00fa3775f9a8a05faaf4de71b7" kindref="member">zassert_is_null</ref>(<ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref>,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>size<sp/>accepted<sp/>as<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Request<sp/>a<sp/>non-existent<sp/>attribute<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref><sp/>=<sp/><ref refid="group__shared__multi__heap_1gadfe601d1fe68d1833c97b078381d680a" kindref="member">shared_multi_heap_alloc</ref>(<ref refid="group__shared__multi__heap_1ggad3617533a50c35c71f7c476b13061ae1a0a41317e94fcdf459708be4a78b74c91" kindref="member">SMH_REG_ATTR_NUM</ref><sp/>+<sp/>1,<sp/>0x100);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga0380ea00fa3775f9a8a05faaf4de71b7" kindref="member">zassert_is_null</ref>(<ref refid="test__threads__cancel__abort_8c_1ad9dc995b581e61d5b3a7f92a0a600526" kindref="member">block</ref>,<sp/></highlight><highlight class="stringliteral">&quot;wrong<sp/>attribute<sp/>accepted<sp/>as<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="common_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" kindref="member">test_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" kindref="member">ztest_test_suite</ref>(shared_multi_heap,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a7578fb4245b9f5ff20611717b06cd1b9" kindref="member">test_shared_multi_heap</ref>));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" kindref="member">ztest_run_test_suite</ref>(shared_multi_heap);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/kernel/mem_heap/shared_multi_heap/src/main.c"/>
  </compounddef>
</doxygen>
