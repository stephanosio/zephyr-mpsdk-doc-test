<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__regulator__interface" kind="group">
    <compoundname>regulator_interface</compoundname>
    <title>Regulator Interface</title>
    <innerclass refid="structregulator__driver__api" prot="public">regulator_driver_api</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__regulator__interface_1ga4497407d231cce49b17151e99cd4a2ce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int regulator_enable</definition>
        <argsstring>(const struct device *reg, struct onoff_client *cli)</argsstring>
        <name>regulator_enable</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>struct <ref refid="structonoff__client" kindref="compound">onoff_client</ref> *</type>
          <declname>cli</declname>
        </param>
        <briefdescription>
<para>Enable a regulator. </para>
        </briefdescription>
        <detaileddescription>
<para>Reference-counted request that a regulator be turned on. This is an asynchronous operation; if successfully initiated the result will be communicated through the <computeroutput>cli</computeroutput> parameter.</para>
<para>A regulator is considered &quot;on&quot; when it has reached a stable/usable state.</para>
<para><simplesect kind="note"><para>This function is <emphasis>isr-ok</emphasis> and <emphasis>pre-kernel-ok</emphasis>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>a regulator device</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cli</parametername>
</parameternamelist>
<parameterdescription>
<para>used to notify the caller when the attempt to turn on the regulator has completed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>non-negative on successful initiation of the request. Negative values indicate failures from <ref refid="group__resource__mgmt__onoff__apis_1ga20dcb358e405deb87b7fbb7846ef9d68" kindref="member">onoff_request()</ref> or individual regulator drivers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/regulator.h" line="58" column="19" bodyfile="include/drivers/regulator.h" bodystart="58" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="group__regulator__interface_1ga1f9ec9766986b920ec1f2bbf17c75f6e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int regulator_disable</definition>
        <argsstring>(const struct device *reg)</argsstring>
        <name>regulator_disable</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>reg</declname>
        </param>
        <briefdescription>
<para>Disable a regulator. </para>
        </briefdescription>
        <detaileddescription>
<para>Release a regulator after a previous <ref refid="group__regulator__interface_1ga4497407d231cce49b17151e99cd4a2ce" kindref="member">regulator_enable()</ref> completed successfully.</para>
<para>If the release removes the last dependency on the regulator it will begin a transition to its &quot;off&quot; state. There is currently no mechanism to notify when the regulator has completely turned off.</para>
<para>This must be invoked at most once for each successful <ref refid="group__regulator__interface_1ga4497407d231cce49b17151e99cd4a2ce" kindref="member">regulator_enable()</ref>.</para>
<para><simplesect kind="note"><para>This function is <emphasis>isr-ok</emphasis>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>a regulator device</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>non-negative on successful completion of the release request. Negative values indicate failures from <ref refid="group__resource__mgmt__onoff__apis_1ga19da5359f10fa2e2eb034d1e72235ea6" kindref="member">onoff_release()</ref> or individual regulator drivers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/regulator.h" line="88" column="19" bodyfile="include/drivers/regulator.h" bodystart="88" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Regulator Interface. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
