<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="coap_8h" kind="file" language="C++">
    <compoundname>coap.h</compoundname>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includes local="no">stddef.h</includes>
    <includes refid="stdbool_8h" local="no">stdbool.h</includes>
    <includes refid="net__ip_8h" local="no">net/net_ip.h</includes>
    <includes refid="slist_8h" local="no">sys/slist.h</includes>
    <includedby refid="lwm2m_8h" local="no">include/net/lwm2m.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/net/coap.h</label>
        <link refid="coap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>net/net_ip.h</label>
        <link refid="net__ip_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>net/net_linkaddr.h</label>
        <link refid="net__linkaddr_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>sys/byteorder.h</label>
        <link refid="byteorder_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="10">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="2">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="4">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="7">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>stdarg.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="21">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="22">
        <label>syscalls/net_ip.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/net/coap.h</label>
        <link refid="coap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/net/lwm2m.h</label>
        <link refid="lwm2m_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structcoap__resource" prot="public">coap_resource</innerclass>
    <innerclass refid="structcoap__observer" prot="public">coap_observer</innerclass>
    <innerclass refid="structcoap__packet" prot="public">coap_packet</innerclass>
    <innerclass refid="structcoap__option" prot="public">coap_option</innerclass>
    <innerclass refid="structcoap__pending" prot="public">coap_pending</innerclass>
    <innerclass refid="structcoap__reply" prot="public">coap_reply</innerclass>
    <innerclass refid="structcoap__block__context" prot="public">coap_block_context</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__coap_1gad61166d12586d72e44c6e53a1064032a" prot="public" static="no">
        <name>COAP_REQUEST_MASK</name>
        <initializer>0x07</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="81" column="9" bodyfile="include/net/coap.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__coap_1ga1c4e268d39446075243c2713bc68aa0c" prot="public" static="no">
        <name>COAP_VERSION_1</name>
        <initializer>1U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="83" column="9" bodyfile="include/net/coap.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" prot="public" static="no">
        <name>coap_make_response_code</name>
        <param><defname>class</defname></param>
        <param><defname>det</defname></param>
        <initializer>((class &lt;&lt; 5) | (det))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="118" column="9" bodyfile="include/net/coap.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__coap_1ga61fe5f43b386a3cd5ceb5b15280bfdca" prot="public" static="no">
        <name>COAP_CODE_EMPTY</name>
        <initializer>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="157" column="9" bodyfile="include/net/coap.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__coap_1ga69fbb7a145ce60fc4f3765c590e4808c" prot="public" static="no">
        <name>COAP_TOKEN_MAX_LEN</name>
        <initializer>8UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="159" column="9" bodyfile="include/net/coap.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__coap_1ga54bed49d5081d423d0600bb84dd44a75" prot="public" static="no">
        <name>GET_BLOCK_NUM</name>
        <param><defname>v</defname></param>
        <initializer>((v) &gt;&gt; 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="179" column="9" bodyfile="include/net/coap.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__coap_1gaf8f67659f780c91f04eac97e8eb59fdd" prot="public" static="no">
        <name>GET_BLOCK_SIZE</name>
        <param><defname>v</defname></param>
        <initializer>(((v) &amp; 0x7))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="180" column="9" bodyfile="include/net/coap.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__coap_1ga8bfd808b8828458887383f50833d80ed" prot="public" static="no">
        <name>GET_MORE</name>
        <param><defname>v</defname></param>
        <initializer>(!!((v) &amp; 0x08))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="181" column="9" bodyfile="include/net/coap.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__coap_1ga7574b8b96be63292723bab49f11386bc" prot="public" static="no">
        <name>COAP_DEFAULT_MAX_RETRANSMIT</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="267" column="9" bodyfile="include/net/coap.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__coap_1ga4fcd70b1558aeb7fea1cd734a53589e0" prot="public" static="no">
        <name>COAP_DEFAULT_ACK_RANDOM_FACTOR</name>
        <initializer>1.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="268" column="9" bodyfile="include/net/coap.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__coap_1ga7b8b3041e2f4ae26e663ff7431a6e6e3" prot="public" static="no" strong="no">
        <type></type>
        <name>coap_option_num</name>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a4c61e26d11841c76debe2f99de5e9756" prot="public">
          <name>COAP_OPTION_IF_MATCH</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a402bb0a642a07d951c35d69736fd3f33" prot="public">
          <name>COAP_OPTION_URI_HOST</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a0efdc30ce5551daffd093b2a8466978a" prot="public">
          <name>COAP_OPTION_ETAG</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a07ea6f395818a7019bb9e6a6e34d2d74" prot="public">
          <name>COAP_OPTION_IF_NONE_MATCH</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a06e91bbb4fa2144543d4148d3245ad25" prot="public">
          <name>COAP_OPTION_OBSERVE</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a344707b9f4cb71310f2ccf5e8050d17a" prot="public">
          <name>COAP_OPTION_URI_PORT</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3ae82be3591d43f0d1c7e89ab764d969bd" prot="public">
          <name>COAP_OPTION_LOCATION_PATH</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a96b5a15937e875b3087307cc5faab1af" prot="public">
          <name>COAP_OPTION_URI_PATH</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3ac3166e67b5f5bf3cefee58c8ff58e5b8" prot="public">
          <name>COAP_OPTION_CONTENT_FORMAT</name>
          <initializer>= 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3ab4cda4d3732fd12b9f203a2475c20981" prot="public">
          <name>COAP_OPTION_MAX_AGE</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3adb4d27052247b9a79ad7fcc0cc30c71c" prot="public">
          <name>COAP_OPTION_URI_QUERY</name>
          <initializer>= 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3afd0725f0ceb5ce22a6c7b390ca7efc9d" prot="public">
          <name>COAP_OPTION_ACCEPT</name>
          <initializer>= 17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3ac728800fc8f0d80e37dcf322e75eb27d" prot="public">
          <name>COAP_OPTION_LOCATION_QUERY</name>
          <initializer>= 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a4aa7cdfa66bd89f21f592eaf3ebe0972" prot="public">
          <name>COAP_OPTION_BLOCK2</name>
          <initializer>= 23</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a8aaa54af114fd1db631566afa69f162d" prot="public">
          <name>COAP_OPTION_BLOCK1</name>
          <initializer>= 27</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a26c1bcd7af4fccd949e3de35fc2d88e6" prot="public">
          <name>COAP_OPTION_SIZE2</name>
          <initializer>= 28</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3ae4d2c93b545708926813217cd36a96ac" prot="public">
          <name>COAP_OPTION_PROXY_URI</name>
          <initializer>= 35</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a30da986503e1e15243b74a16b161901c" prot="public">
          <name>COAP_OPTION_PROXY_SCHEME</name>
          <initializer>= 39</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a53169a1c7b07c9e97f79dfc06af3eb51" prot="public">
          <name>COAP_OPTION_SIZE1</name>
          <initializer>= 60</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Set of CoAP packet options we are aware of. </para>
        </briefdescription>
        <detaileddescription>
<para>Users may add options other than these to their packets, provided they know how to format them correctly. The only restriction is that all options must be added to a packet in numeric order.</para>
<para>Refer to RFC 7252, section 12.2 for more information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="44" column="1" bodyfile="include/net/coap.h" bodystart="44" bodyend="64"/>
      </memberdef>
      <memberdef kind="enum" id="group__coap_1ga6a6547e3c755cf7a5033302c8294e0b7" prot="public" static="no" strong="no">
        <type></type>
        <name>coap_method</name>
        <enumvalue id="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7a025300cb0dc4c4de8eb0b0e0b4eb5317" prot="public">
          <name>COAP_METHOD_GET</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7aba51bcab79bf75080ccf75c1ec38a3d6" prot="public">
          <name>COAP_METHOD_POST</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7a91637ef7c9f57cdcc65d0118008251db" prot="public">
          <name>COAP_METHOD_PUT</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7adccbea1fe9a43433cf8471e32208a5ac" prot="public">
          <name>COAP_METHOD_DELETE</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7afa4070fed5c01b28bb1a59e3f0c021f4" prot="public">
          <name>COAP_METHOD_FETCH</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7adca55e3d2b4b41b249f6b2f67074d708" prot="public">
          <name>COAP_METHOD_PATCH</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7a78f97b895f29819bf3f8b0314967f20e" prot="public">
          <name>COAP_METHOD_IPATCH</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Available request methods. </para>
        </briefdescription>
        <detaileddescription>
<para>To be used when creating a request or a response. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="71" column="1" bodyfile="include/net/coap.h" bodystart="71" bodyend="79"/>
      </memberdef>
      <memberdef kind="enum" id="group__coap_1ga3b375b7580246d1266293d09902f3d9f" prot="public" static="no" strong="no">
        <type></type>
        <name>coap_msgtype</name>
        <enumvalue id="group__coap_1gga3b375b7580246d1266293d09902f3d9fa65c04ee4847d0c595238079ac9564e8d" prot="public">
          <name>COAP_TYPE_CON</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Confirmable message.</para>
<para>The packet is a request or response the destination end-point must acknowledge. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga3b375b7580246d1266293d09902f3d9fa629a304bea0c85c7b2bf746b26216a4f" prot="public">
          <name>COAP_TYPE_NON_CON</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Non-confirmable message.</para>
<para>The packet is a request or response that doesn&apos;t require acknowledgements. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga3b375b7580246d1266293d09902f3d9fa7b2fe2187018bce9132af2763b57307d" prot="public">
          <name>COAP_TYPE_ACK</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge.</para>
<para>Response to a confirmable message. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga3b375b7580246d1266293d09902f3d9fa287b951159fd51b84a2e0491b012f84c" prot="public">
          <name>COAP_TYPE_RESET</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset.</para>
<para>Rejecting a packet for any reason is done by sending a message of this type. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>CoAP packets may be of one of these types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="88" column="1" bodyfile="include/net/coap.h" bodystart="88" bodyend="116"/>
      </memberdef>
      <memberdef kind="enum" id="group__coap_1ga1ea81a365834e96f43ab7be573069d26" prot="public" static="no" strong="no">
        <type></type>
        <name>coap_response_code</name>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26a0629da1898b934c3f699b98ff808c717" prot="public">
          <name>COAP_RESPONSE_CODE_OK</name>
          <initializer>= (( 2  &lt;&lt; 5) | ( 0 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26ad2d9fe8dd5beda74b522377c0b76275b" prot="public">
          <name>COAP_RESPONSE_CODE_CREATED</name>
          <initializer>= (( 2  &lt;&lt; 5) | ( 1 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26abf324915aa498c64a733a0098de4a082" prot="public">
          <name>COAP_RESPONSE_CODE_DELETED</name>
          <initializer>= (( 2  &lt;&lt; 5) | ( 2 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26aecaac4a0e9c821dfc20536951409dd48" prot="public">
          <name>COAP_RESPONSE_CODE_VALID</name>
          <initializer>= (( 2  &lt;&lt; 5) | ( 3 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26a3ffb3632c37c22cee901760753c8d0d3" prot="public">
          <name>COAP_RESPONSE_CODE_CHANGED</name>
          <initializer>= (( 2  &lt;&lt; 5) | ( 4 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26adfd3e5e3c6ad5715127bb444c205fbce" prot="public">
          <name>COAP_RESPONSE_CODE_CONTENT</name>
          <initializer>= (( 2  &lt;&lt; 5) | ( 5 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26ae4e3ff451c626421b9b329790f019dd8" prot="public">
          <name>COAP_RESPONSE_CODE_CONTINUE</name>
          <initializer>= (( 2  &lt;&lt; 5) | ( 31 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26a603e60d2314bde36adf505f446c907c5" prot="public">
          <name>COAP_RESPONSE_CODE_BAD_REQUEST</name>
          <initializer>= (( 4  &lt;&lt; 5) | ( 0 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26acb76dbf11b47477144cc4ece3357283c" prot="public">
          <name>COAP_RESPONSE_CODE_UNAUTHORIZED</name>
          <initializer>= (( 4  &lt;&lt; 5) | ( 1 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26a989a6528edc653c0b693ed875481e82d" prot="public">
          <name>COAP_RESPONSE_CODE_BAD_OPTION</name>
          <initializer>= (( 4  &lt;&lt; 5) | ( 2 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26afeee555ef54f138db58b14ad2c328d04" prot="public">
          <name>COAP_RESPONSE_CODE_FORBIDDEN</name>
          <initializer>= (( 4  &lt;&lt; 5) | ( 3 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26a86c2bff8add69428d164431b3091a8e9" prot="public">
          <name>COAP_RESPONSE_CODE_NOT_FOUND</name>
          <initializer>= (( 4  &lt;&lt; 5) | ( 4 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26a301eb722445472dba93d5accd6e0dd31" prot="public">
          <name>COAP_RESPONSE_CODE_NOT_ALLOWED</name>
          <initializer>= (( 4  &lt;&lt; 5) | ( 5 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26a4d77322514521e8dfea01f4a1a6e5886" prot="public">
          <name>COAP_RESPONSE_CODE_NOT_ACCEPTABLE</name>
          <initializer>= (( 4  &lt;&lt; 5) | ( 6 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26a671730c6d2f1a339fcd557c5452150af" prot="public">
          <name>COAP_RESPONSE_CODE_INCOMPLETE</name>
          <initializer>= (( 4  &lt;&lt; 5) | ( 8 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26ab447505d233aed9fd8ad28070d317544" prot="public">
          <name>COAP_RESPONSE_CODE_CONFLICT</name>
          <initializer>= (( 4  &lt;&lt; 5) | ( 9 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26a289ade02833b57bffd915e648e050e52" prot="public">
          <name>COAP_RESPONSE_CODE_PRECONDITION_FAILED</name>
          <initializer>= (( 4  &lt;&lt; 5) | ( 12 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26aaa43062a8146c1e2e09183228a540d2e" prot="public">
          <name>COAP_RESPONSE_CODE_REQUEST_TOO_LARGE</name>
          <initializer>= (( 4  &lt;&lt; 5) | ( 13 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26aef6b165b9d3f8f4b477431058815c16b" prot="public">
          <name>COAP_RESPONSE_CODE_UNSUPPORTED_CONTENT_FORMAT</name>
          <initializer>=
						(( 4  &lt;&lt; 5) | ( 15 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26a5e5e31cc4647d5e0fdd1c8fe6cfa2661" prot="public">
          <name>COAP_RESPONSE_CODE_UNPROCESSABLE_ENTITY</name>
          <initializer>= (( 4  &lt;&lt; 5) | ( 22 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26aabd72cff6669d382aa04c53e764d0b49" prot="public">
          <name>COAP_RESPONSE_CODE_TOO_MANY_REQUESTS</name>
          <initializer>= (( 4  &lt;&lt; 5) | ( 29 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26a07b00dba944e55c4dcde798da667b499" prot="public">
          <name>COAP_RESPONSE_CODE_INTERNAL_ERROR</name>
          <initializer>= (( 5  &lt;&lt; 5) | ( 0 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26a85c04541bc8580c2ae915946fd677c15" prot="public">
          <name>COAP_RESPONSE_CODE_NOT_IMPLEMENTED</name>
          <initializer>= (( 5  &lt;&lt; 5) | ( 1 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26a8de29a7ee6bb960a97d6b415217b4640" prot="public">
          <name>COAP_RESPONSE_CODE_BAD_GATEWAY</name>
          <initializer>= (( 5  &lt;&lt; 5) | ( 2 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26afebd274586351951ffe9c8f26b270dec" prot="public">
          <name>COAP_RESPONSE_CODE_SERVICE_UNAVAILABLE</name>
          <initializer>= (( 5  &lt;&lt; 5) | ( 3 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26af6d379fef704c269406b782c60772ecd" prot="public">
          <name>COAP_RESPONSE_CODE_GATEWAY_TIMEOUT</name>
          <initializer>= (( 5  &lt;&lt; 5) | ( 4 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga1ea81a365834e96f43ab7be573069d26a5f49a566d37b2cda0c624d76aee08bd1" prot="public">
          <name>COAP_RESPONSE_CODE_PROXYING_NOT_SUPPORTED</name>
          <initializer>=
						(( 5  &lt;&lt; 5) | ( 5 ))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Set of response codes available for a response packet. </para>
        </briefdescription>
        <detaileddescription>
<para>To be used when creating a response. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="125" column="1" bodyfile="include/net/coap.h" bodystart="125" bodyend="155"/>
      </memberdef>
      <memberdef kind="enum" id="group__coap_1ga94a8f9956742d3928fc3c63b8d01ae73" prot="public" static="no" strong="no">
        <type></type>
        <name>coap_content_format</name>
        <enumvalue id="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73af068aa8d09032352799bc60868607997" prot="public">
          <name>COAP_CONTENT_FORMAT_TEXT_PLAIN</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a1fbd90fd5cb309e2de6954f46174dc4f" prot="public">
          <name>COAP_CONTENT_FORMAT_APP_LINK_FORMAT</name>
          <initializer>= 40</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73adb96bf55e914f4852e92dc65752c372a" prot="public">
          <name>COAP_CONTENT_FORMAT_APP_XML</name>
          <initializer>= 41</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a88d952174bb3e4ffb9ab11a599952760" prot="public">
          <name>COAP_CONTENT_FORMAT_APP_OCTET_STREAM</name>
          <initializer>= 42</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a483a382550b38468cc66bdce9f4743ea" prot="public">
          <name>COAP_CONTENT_FORMAT_APP_EXI</name>
          <initializer>= 47</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a975381d286c1e9b998e41ef0a234d17a" prot="public">
          <name>COAP_CONTENT_FORMAT_APP_JSON</name>
          <initializer>= 50</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a141f183724ad6da14c3992c0990d6239" prot="public">
          <name>COAP_CONTENT_FORMAT_APP_JSON_PATCH_JSON</name>
          <initializer>= 51</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a2797149fb3811d706dab291e9edc9436" prot="public">
          <name>COAP_CONTENT_FORMAT_APP_MERGE_PATCH_JSON</name>
          <initializer>= 52</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a7ca73ff57a6c7fb1517b44f2ce17d3f9" prot="public">
          <name>COAP_CONTENT_FORMAT_APP_CBOR</name>
          <initializer>= 60</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Set of Content-Format option values for CoAP. </para>
        </briefdescription>
        <detaileddescription>
<para>To be used when encoding or decoding a Content-Format option. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="166" column="1" bodyfile="include/net/coap.h" bodystart="166" bodyend="176"/>
      </memberdef>
      <memberdef kind="enum" id="group__coap_1ga712c1468f936a3af7dc39a86a5961922" prot="public" static="no" strong="no">
        <type></type>
        <name>coap_block_size</name>
        <enumvalue id="group__coap_1gga712c1468f936a3af7dc39a86a5961922a834d479806b513818e2237f3f1c56968" prot="public">
          <name>COAP_BLOCK_16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga712c1468f936a3af7dc39a86a5961922a1aaf8f841c18e281b176793bb331993d" prot="public">
          <name>COAP_BLOCK_32</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga712c1468f936a3af7dc39a86a5961922a7266f448a391ea2a2763f1ded5397520" prot="public">
          <name>COAP_BLOCK_64</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga712c1468f936a3af7dc39a86a5961922a147ddf4b0e5d1a8c11f0da2c71dee4d8" prot="public">
          <name>COAP_BLOCK_128</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga712c1468f936a3af7dc39a86a5961922acfc37f84eabccdde4bd84b06c6a5e753" prot="public">
          <name>COAP_BLOCK_256</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga712c1468f936a3af7dc39a86a5961922ad2052905aff08c58585dcf6c6caddc19" prot="public">
          <name>COAP_BLOCK_512</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__coap_1gga712c1468f936a3af7dc39a86a5961922a6998c79e63cf65e7f86ddd5713d48dce" prot="public">
          <name>COAP_BLOCK_1024</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Represents the size of each block that will be transferred using block-wise transfers [RFC7959]:</para>
<para>Each entry maps directly to the value that is used in the wire.</para>
<para><ulink url="https://tools.ietf.org/html/rfc7959">https://tools.ietf.org/html/rfc7959</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="533" column="1" bodyfile="include/net/coap.h" bodystart="533" bodyend="541"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__coap_1ga77053a199941c0cea41c497b4196f2cf" prot="public" static="no">
        <type>int(*</type>
        <definition>coap_method_t</definition>
        <argsstring>)(struct coap_resource *resource, struct coap_packet *request, struct sockaddr *addr, socklen_t addr_len)</argsstring>
        <name>coap_method_t</name>
        <briefdescription>
<para>Type of the callback being called when a resource&apos;s method is invoked by the remote entity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="194" column="9" bodyfile="include/net/coap.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__coap_1gaa91527b86e20a107f18637e5bed7125b" prot="public" static="no">
        <type>void(*</type>
        <definition>coap_notify_t</definition>
        <argsstring>)(struct coap_resource *resource, struct coap_observer *observer)</argsstring>
        <name>coap_notify_t</name>
        <briefdescription>
<para>Type of the callback being called when a resource&apos;s has observers to be informed when an update happens. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="203" column="9" bodyfile="include/net/coap.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__coap_1ga46d987451046a7260b56b9701752ba39" prot="public" static="no">
        <type>int(*</type>
        <definition>coap_reply_t</definition>
        <argsstring>)(const struct coap_packet *response, struct coap_reply *reply, const struct sockaddr *from)</argsstring>
        <name>coap_reply_t</name>
        <briefdescription>
<para>Helper function to be called when a response matches the a pending request. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="263" column="9" bodyfile="include/net/coap.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__coap_1gafd01c39fac8f173edc04337161e92264" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t coap_header_get_version</definition>
        <argsstring>(const struct coap_packet *cpkt)</argsstring>
        <name>coap_header_get_version</name>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <briefdescription>
<para>Returns the version present in a CoAP packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP packet representation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the CoAP version in packet </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="303" column="9" declfile="include/net/coap.h" declline="303" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1gaed883ea6cec3acc5eb570e152dc52e25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t coap_header_get_type</definition>
        <argsstring>(const struct coap_packet *cpkt)</argsstring>
        <name>coap_header_get_type</name>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <briefdescription>
<para>Returns the type of the CoAP packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP packet representation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the type of the packet </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="312" column="9" declfile="include/net/coap.h" declline="312" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga6a5049accfa0cd7106a3a6593c598545" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t coap_header_get_token</definition>
        <argsstring>(const struct coap_packet *cpkt, uint8_t *token)</argsstring>
        <name>coap_header_get_token</name>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
<para>Returns the token (if any) in the CoAP packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP packet representation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the token, must point to a buffer containing at least COAP_TOKEN_MAX_LEN bytes</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Token length in the CoAP packet (0 - COAP_TOKEN_MAX_LEN). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="323" column="9" declfile="include/net/coap.h" declline="323" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1gae4bf952fdf9e3d03ab0b0df4c3c0d054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t coap_header_get_code</definition>
        <argsstring>(const struct coap_packet *cpkt)</argsstring>
        <name>coap_header_get_code</name>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <briefdescription>
<para>Returns the code of the CoAP packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP packet representation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the code present in the packet </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="332" column="9" declfile="include/net/coap.h" declline="332" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga63388c629da5370d2e711cdc9aabd837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t coap_header_get_id</definition>
        <argsstring>(const struct coap_packet *cpkt)</argsstring>
        <name>coap_header_get_id</name>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <briefdescription>
<para>Returns the message id associated with the CoAP packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP packet representation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the message id present in the packet </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="341" column="10" declfile="include/net/coap.h" declline="341" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga28ccf00fb1f5f13f747e61c2e3008b5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
        <definition>const uint8_t * coap_packet_get_payload</definition>
        <argsstring>(const struct coap_packet *cpkt, uint16_t *len)</argsstring>
        <name>coap_packet_get_payload</name>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref> *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Returns the data pointer and length of the CoAP packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP packet representation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Total length of CoAP payload</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>data pointer and length if payload exists NULL pointer and length set to 0 in case there is no payload </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="352" column="15" declfile="include/net/coap.h" declline="352" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga27a58a69f632551aa7a2394ae2badacf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_packet_parse</definition>
        <argsstring>(struct coap_packet *cpkt, uint8_t *data, uint16_t len, struct coap_option *options, uint8_t opt_num)</argsstring>
        <name>coap_packet_parse</name>
        <param>
          <type>struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__option" kindref="compound">coap_option</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>opt_num</declname>
        </param>
        <briefdescription>
<para>Parses the CoAP packet in data, validating it and initializing <emphasis>cpkt</emphasis>. <emphasis>data</emphasis> must remain valid while <emphasis>cpkt</emphasis> is used. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet to be initialized from received <emphasis>data</emphasis>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data containing a CoAP packet, its <emphasis>data</emphasis> pointer is positioned on the start of the CoAP packet. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Parse options and cache its details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opt_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of options</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="368" column="5" declfile="include/net/coap.h" declline="368" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga90e6aab174f8977f0a3b5fbe1a20297c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_packet_init</definition>
        <argsstring>(struct coap_packet *cpkt, uint8_t *data, uint16_t max_len, uint8_t ver, uint8_t type, uint8_t token_len, const uint8_t *token, uint8_t code, uint16_t id)</argsstring>
        <name>coap_packet_init</name>
        <param>
          <type>struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>max_len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>ver</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>token_len</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Creates a new CoAP Packet from input data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>New packet to be initialized using the storage from <emphasis>data</emphasis>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data that will contain a CoAP packet information </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum allowable length of data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ver</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP header version </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP header type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>token_len</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP header token length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP header token </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP header code </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP header message id</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="386" column="5" declfile="include/net/coap.h" declline="386" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1gae6d93b1f93734302be75ee417813e5d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_ack_init</definition>
        <argsstring>(struct coap_packet *cpkt, const struct coap_packet *req, uint8_t *data, uint16_t max_len, uint8_t code)</argsstring>
        <name>coap_ack_init</name>
        <param>
          <type>struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>req</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>max_len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Create a new CoAP Acknowledgment message for given request. </para>
        </briefdescription>
        <detaileddescription>
<para>This function works like <ref refid="group__coap_1ga90e6aab174f8977f0a3b5fbe1a20297c" kindref="member">coap_packet_init</ref>, filling CoAP header type, CoAP header token, and CoAP header message id fields according to acknowledgment rules.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>New packet to be initialized using the storage from <emphasis>data</emphasis>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP request packet that is being acknowledged </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data that will contain a CoAP packet information </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum allowable length of data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP header code</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="405" column="5" declfile="include/net/coap.h" declline="405" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga66f986f8a1157236bea27133c2a2538b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
        <definition>uint8_t * coap_next_token</definition>
        <argsstring>(void)</argsstring>
        <name>coap_next_token</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns a randomly generated array of 8 bytes, that can be used as a message&apos;s token. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a 8-byte pseudo-random token. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="414" column="9" declfile="include/net/coap.h" declline="414" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1gade5f4995c6419db03ce3e7ff7ca1cfcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t coap_next_id</definition>
        <argsstring>(void)</argsstring>
        <name>coap_next_id</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Helper to generate message ids. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a new message id </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="421" column="10" declfile="include/net/coap.h" declline="421" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1gaf006c8048ed7b863e70dbdd64bc3d608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_find_options</definition>
        <argsstring>(const struct coap_packet *cpkt, uint16_t code, struct coap_option *options, uint16_t veclen)</argsstring>
        <name>coap_find_options</name>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__option" kindref="compound">coap_option</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>veclen</declname>
        </param>
        <briefdescription>
<para>Return the values associated with the option of value <emphasis>code</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP packet representation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>Option number to look for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of <ref refid="structcoap__option" kindref="compound">coap_option</ref> where to store the value of the options found </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>veclen</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in the options array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of options found in packet matching code, negative on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="436" column="5" declfile="include/net/coap.h" declline="436" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga2aa4140ee83ca4090a5604e34d1f1446" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_packet_append_option</definition>
        <argsstring>(struct coap_packet *cpkt, uint16_t code, const uint8_t *value, uint16_t len)</argsstring>
        <name>coap_packet_append_option</name>
        <param>
          <type>struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Appends an option to the packet. </para>
        </briefdescription>
        <detaileddescription>
<para>Note: options must be added in numeric order of their codes. Otherwise error will be returned. TODO: Add support for placing options according to its delta value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet to be updated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>Option code to add to the packet, see <ref refid="group__coap_1ga7b8b3041e2f4ae26e663ff7431a6e6e3" kindref="member">coap_option_num</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the value of the option, will be copied to the packet </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the data to be added</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="454" column="5" declfile="include/net/coap.h" declline="454" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga2fd0613e61274ec4b9b7bab3ab11ccce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
        <definition>unsigned int coap_option_value_to_int</definition>
        <argsstring>(const struct coap_option *option)</argsstring>
        <name>coap_option_value_to_int</name>
        <param>
          <type>const struct <ref refid="structcoap__option" kindref="compound">coap_option</ref> *</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Converts an option to its integer representation. </para>
        </briefdescription>
        <detaileddescription>
<para>Assumes that the number is encoded in the network byte order in the option.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the option value, retrieved by <ref refid="group__coap_1gaf006c8048ed7b863e70dbdd64bc3d608" kindref="member">coap_find_options()</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The integer representation of the option </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="468" column="14" declfile="include/net/coap.h" declline="468" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga6bec94992ac450dca03436a6ad74efb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_append_option_int</definition>
        <argsstring>(struct coap_packet *cpkt, uint16_t code, unsigned int val)</argsstring>
        <name>coap_append_option_int</name>
        <param>
          <type>struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a4089fb16419d359081465355db05f846" kindref="member">unsigned</ref> int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Appends an integer value option to the packet. </para>
        </briefdescription>
        <detaileddescription>
<para>The option must be added in numeric order of their codes, and the least amount of bytes will be used to encode the value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet to be updated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>Option code to add to the packet, see <ref refid="group__coap_1ga7b8b3041e2f4ae26e663ff7431a6e6e3" kindref="member">coap_option_num</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer value to be added</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="482" column="5" declfile="include/net/coap.h" declline="482" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga24000def8534acdcd2c61836dc690367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_packet_append_payload_marker</definition>
        <argsstring>(struct coap_packet *cpkt)</argsstring>
        <name>coap_packet_append_payload_marker</name>
        <param>
          <type>struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <briefdescription>
<para>Append payload marker to CoAP packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet to append the payload marker (0xFF)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="492" column="5" declfile="include/net/coap.h" declline="492" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1gadcd3a93a702a2a0b428f39b71dd67954" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_packet_append_payload</definition>
        <argsstring>(struct coap_packet *cpkt, const uint8_t *payload, uint16_t payload_len)</argsstring>
        <name>coap_packet_append_payload</name>
        <param>
          <type>struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>payload</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>payload_len</declname>
        </param>
        <briefdescription>
<para>Append payload to CoAP packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet to append the payload </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP packet payload </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_len</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP packet payload len</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="503" column="5" declfile="include/net/coap.h" declline="503" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga88a5f2c3915ef109eadfebaf82b53186" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_handle_request</definition>
        <argsstring>(struct coap_packet *cpkt, struct coap_resource *resources, struct coap_option *options, uint8_t opt_num, struct sockaddr *addr, socklen_t addr_len)</argsstring>
        <name>coap_handle_request</name>
        <param>
          <type>struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__resource" kindref="compound">coap_resource</ref> *</type>
          <declname>resources</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__option" kindref="compound">coap_option</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>opt_num</declname>
        </param>
        <param>
          <type>struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref></type>
          <declname>addr_len</declname>
        </param>
        <briefdescription>
<para>When a request is received, call the appropriate methods of the matching resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet received </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resources</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of known resources </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Parsed options from <ref refid="group__coap_1ga27a58a69f632551aa7a2394ae2badacf" kindref="member">coap_packet_parse()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opt_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of options </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Peer address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Peer address length</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="519" column="5" declfile="include/net/coap.h" declline="519" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1gafffadd4a837e48fd72af20468ccd86f2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>static uint16_t coap_block_size_to_bytes</definition>
        <argsstring>(enum coap_block_size block_size)</argsstring>
        <name>coap_block_size_to_bytes</name>
        <param>
          <type>enum <ref refid="group__coap_1ga712c1468f936a3af7dc39a86a5961922" kindref="member">coap_block_size</ref></type>
          <declname>block_size</declname>
        </param>
        <briefdescription>
<para>Helper for converting the enumeration to the size expressed in bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The block size to be converted</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size in bytes that the block_size represents </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="551" column="24" bodyfile="include/net/coap.h" bodystart="551" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga57486e764f0feb6544fa3b0d19935afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_block_transfer_init</definition>
        <argsstring>(struct coap_block_context *ctx, enum coap_block_size block_size, size_t total_size)</argsstring>
        <name>coap_block_transfer_init</name>
        <param>
          <type>struct <ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>enum <ref refid="group__coap_1ga712c1468f936a3af7dc39a86a5961922" kindref="member">coap_block_size</ref></type>
          <declname>block_size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>total_size</declname>
        </param>
        <briefdescription>
<para>Initializes the context of a block-wise transfer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The context to be initialized </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the block </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>total_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The total size of the transfer, if known</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="575" column="5" declfile="include/net/coap.h" declline="575" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga518d5f4422ff45f2b4a296f249da89cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_append_block1_option</definition>
        <argsstring>(struct coap_packet *cpkt, struct coap_block_context *ctx)</argsstring>
        <name>coap_append_block1_option</name>
        <param>
          <type>struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Append BLOCK1 option to the packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet to be updated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Block context from which to retrieve the information for the Block1 option</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="588" column="5" declfile="include/net/coap.h" declline="588" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga361c17b698bdaa0fc529b7338efefd8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_append_block2_option</definition>
        <argsstring>(struct coap_packet *cpkt, struct coap_block_context *ctx)</argsstring>
        <name>coap_append_block2_option</name>
        <param>
          <type>struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Append BLOCK2 option to the packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet to be updated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Block context from which to retrieve the information for the Block2 option</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="600" column="5" declfile="include/net/coap.h" declline="600" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga3f66d5935dcacfeebcac2b3001d7b57a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_append_size1_option</definition>
        <argsstring>(struct coap_packet *cpkt, struct coap_block_context *ctx)</argsstring>
        <name>coap_append_size1_option</name>
        <param>
          <type>struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Append SIZE1 option to the packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet to be updated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Block context from which to retrieve the information for the Size1 option</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="612" column="5" declfile="include/net/coap.h" declline="612" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1gafbc8c15ef03b762f9411c38b03aa403b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_append_size2_option</definition>
        <argsstring>(struct coap_packet *cpkt, struct coap_block_context *ctx)</argsstring>
        <name>coap_append_size2_option</name>
        <param>
          <type>struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Append SIZE2 option to the packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet to be updated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Block context from which to retrieve the information for the Size2 option</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="624" column="5" declfile="include/net/coap.h" declline="624" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga21b8f4ffeecc7900f6bf299836d2b5b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_get_option_int</definition>
        <argsstring>(const struct coap_packet *cpkt, uint16_t code)</argsstring>
        <name>coap_get_option_int</name>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Get the integer representation of a CoAP option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet to be inspected </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP option code</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Integer value &gt;= 0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="636" column="5" declfile="include/net/coap.h" declline="636" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga3b0cc9bfabdddeffd98f36d7f15dd416" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_update_from_block</definition>
        <argsstring>(const struct coap_packet *cpkt, struct coap_block_context *ctx)</argsstring>
        <name>coap_update_from_block</name>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Retrieves BLOCK{1,2} and SIZE{1,2} from <emphasis>cpkt</emphasis> and updates <emphasis>ctx</emphasis> accordingly. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet in which to look for block-wise transfers options </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Block context to be updated</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="647" column="5" declfile="include/net/coap.h" declline="647" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga50f7837da003601479dbc470ba9898ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_next_block_for_option</definition>
        <argsstring>(const struct coap_packet *cpkt, struct coap_block_context *ctx, enum coap_option_num option)</argsstring>
        <name>coap_next_block_for_option</name>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>enum <ref refid="group__coap_1ga7b8b3041e2f4ae26e663ff7431a6e6e3" kindref="member">coap_option_num</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Updates <emphasis>ctx</emphasis> according to <emphasis>option</emphasis> set in <emphasis>cpkt</emphasis> so after this is called the current entry indicates the correct offset in the body of data being transferred. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet in which to look for block-wise transfers options </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Block context to be updated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>Either COAP_OPTION_BLOCK1 or COAP_OPTION_BLOCK2</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The offset in the block-wise transfer, 0 if the transfer has finished or a negative value in case of an error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="662" column="5" declfile="include/net/coap.h" declline="662" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga1244716ecf06fad1013131c42eab8c5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t coap_next_block</definition>
        <argsstring>(const struct coap_packet *cpkt, struct coap_block_context *ctx)</argsstring>
        <name>coap_next_block</name>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>cpkt</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Updates <emphasis>ctx</emphasis> so after this is called the current entry indicates the correct offset in the body of data being transferred. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet in which to look for block-wise transfers options </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Block context to be updated</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The offset in the block-wise transfer, 0 if the transfer has finished. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="677" column="8" declfile="include/net/coap.h" declline="677" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga3d720b0d222cc35ce56cc260df1609a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coap_observer_init</definition>
        <argsstring>(struct coap_observer *observer, const struct coap_packet *request, const struct sockaddr *addr)</argsstring>
        <name>coap_observer_init</name>
        <param>
          <type>struct <ref refid="structcoap__observer" kindref="compound">coap_observer</ref> *</type>
          <declname>observer</declname>
        </param>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Indicates that the remote device referenced by <emphasis>addr</emphasis>, with <emphasis>request</emphasis>, wants to observe a resource. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observer</parametername>
</parameternamelist>
<parameterdescription>
<para>Observer to be initialized </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>Request on which the observer will be based </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the remote device </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="688" column="6" declfile="include/net/coap.h" declline="688" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga3c42861f8442e548f560acf3deca6baa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool coap_register_observer</definition>
        <argsstring>(struct coap_resource *resource, struct coap_observer *observer)</argsstring>
        <name>coap_register_observer</name>
        <param>
          <type>struct <ref refid="structcoap__resource" kindref="compound">coap_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__observer" kindref="compound">coap_observer</ref> *</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
<para>After the observer is initialized, associate the observer with an resource. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resource</parametername>
</parameternamelist>
<parameterdescription>
<para>Resource to add an observer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>observer</parametername>
</parameternamelist>
<parameterdescription>
<para>Observer to be added</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if this is the first observer added to this resource. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="701" column="6" declfile="include/net/coap.h" declline="701" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga673718725e2fe23d321b785c795df703" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coap_remove_observer</definition>
        <argsstring>(struct coap_resource *resource, struct coap_observer *observer)</argsstring>
        <name>coap_remove_observer</name>
        <param>
          <type>struct <ref refid="structcoap__resource" kindref="compound">coap_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__observer" kindref="compound">coap_observer</ref> *</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
<para>Remove this observer from the list of registered observers of that resource. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resource</parametername>
</parameternamelist>
<parameterdescription>
<para>Resource in which to remove the observer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>observer</parametername>
</parameternamelist>
<parameterdescription>
<para>Observer to be removed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="711" column="6" declfile="include/net/coap.h" declline="711" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga427167161529c24f5cf8c9ed2023e321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structcoap__observer" kindref="compound">coap_observer</ref> *</type>
        <definition>struct coap_observer * coap_find_observer_by_addr</definition>
        <argsstring>(struct coap_observer *observers, size_t len, const struct sockaddr *addr)</argsstring>
        <name>coap_find_observer_by_addr</name>
        <param>
          <type>struct <ref refid="structcoap__observer" kindref="compound">coap_observer</ref> *</type>
          <declname>observers</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Returns the observer that matches address <emphasis>addr</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observers</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of observers </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the array of observers </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the endpoint observing a resource</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to a observer if a match is found, NULL otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="724" column="20" declfile="include/net/coap.h" declline="724" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga2410e973bf3192244426df346230608b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structcoap__observer" kindref="compound">coap_observer</ref> *</type>
        <definition>struct coap_observer * coap_observer_next_unused</definition>
        <argsstring>(struct coap_observer *observers, size_t len)</argsstring>
        <name>coap_observer_next_unused</name>
        <param>
          <type>struct <ref refid="structcoap__observer" kindref="compound">coap_observer</ref> *</type>
          <declname>observers</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Returns the next available observer representation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observers</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of observers </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the array of observers</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to a observer if there&apos;s an available observer, NULL otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="737" column="20" declfile="include/net/coap.h" declline="737" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1gacfe30c84434dc8adbf3d399ec0e51bec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coap_reply_init</definition>
        <argsstring>(struct coap_reply *reply, const struct coap_packet *request)</argsstring>
        <name>coap_reply_init</name>
        <param>
          <type>struct <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> *</type>
          <declname>reply</declname>
        </param>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
<para>Indicates that a reply is expected for <emphasis>request</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reply</parametername>
</parameternamelist>
<parameterdescription>
<para>Reply structure to be initialized </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>Request from which <emphasis>reply</emphasis> will be based </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="746" column="6" declfile="include/net/coap.h" declline="746" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1gaa4a0ed5238edbd01a54a787f29bae1aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_pending_init</definition>
        <argsstring>(struct coap_pending *pending, const struct coap_packet *request, const struct sockaddr *addr, uint8_t retries)</argsstring>
        <name>coap_pending_init</name>
        <param>
          <type>struct <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> *</type>
          <declname>pending</declname>
        </param>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>retries</declname>
        </param>
        <briefdescription>
<para>Initialize a pending request with a request. </para>
        </briefdescription>
        <detaileddescription>
<para>The request&apos;s fields are copied into the pending struct, so <emphasis>request</emphasis> doesn&apos;t have to live for as long as the pending struct lives, but &quot;data&quot; that needs to live for at least that long.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>Structure representing the waiting for a confirmation message, initialized with data from <emphasis>request</emphasis> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>Message waiting for confirmation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address to send the retransmission </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>retries</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of retransmissions of the message.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="764" column="5" declfile="include/net/coap.h" declline="764" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga800831ddfe19b1a5637a5edd9e78c470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> *</type>
        <definition>struct coap_pending * coap_pending_next_unused</definition>
        <argsstring>(struct coap_pending *pendings, size_t len)</argsstring>
        <name>coap_pending_next_unused</name>
        <param>
          <type>struct <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> *</type>
          <declname>pendings</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Returns the next available pending struct, that can be used to track the retransmission status of a request. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pendings</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> structures </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the array of <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> structures</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to a free <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> structure, NULL in case none could be found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="779" column="19" declfile="include/net/coap.h" declline="779" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga65cb5f7ac01ea5ebe1c6e30a7c70ad4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> *</type>
        <definition>struct coap_reply * coap_reply_next_unused</definition>
        <argsstring>(struct coap_reply *replies, size_t len)</argsstring>
        <name>coap_reply_next_unused</name>
        <param>
          <type>struct <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> *</type>
          <declname>replies</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Returns the next available reply struct, so it can be used to track replies and notifications received. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>replies</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> structures </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the array of <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> structures</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to a free <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> structure, NULL in case none could be found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="792" column="17" declfile="include/net/coap.h" declline="792" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga94ceba78cbd2440f91d9b30d6b06594d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> *</type>
        <definition>struct coap_pending * coap_pending_received</definition>
        <argsstring>(const struct coap_packet *response, struct coap_pending *pendings, size_t len)</argsstring>
        <name>coap_pending_received</name>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>response</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> *</type>
          <declname>pendings</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>After a response is received, returns if there is any matching pending request exits. User has to clear all pending retransmissions related to that response by calling <ref refid="group__coap_1ga03287eb3187aa28e0e83e0e0c72e2631" kindref="member">coap_pending_clear()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>The received response </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pendings</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> structures </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the array of <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> structures</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the associated <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> structure, NULL in case none could be found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="808" column="19" declfile="include/net/coap.h" declline="808" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga3da23a809504025a24bf03daea3e606b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> *</type>
        <definition>struct coap_reply * coap_response_received</definition>
        <argsstring>(const struct coap_packet *response, const struct sockaddr *from, struct coap_reply *replies, size_t len)</argsstring>
        <name>coap_response_received</name>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>response</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>struct <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> *</type>
          <declname>replies</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>After a response is received, call coap_reply_t handler registered in <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>A response received </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>Address from which the response was received </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>replies</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> structures </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the array of <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> structures</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the reply matching the packet received, NULL if none could be found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="824" column="17" declfile="include/net/coap.h" declline="824" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga9d63518c701ebdb4c7f65c5368d00d27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> *</type>
        <definition>struct coap_pending * coap_pending_next_to_expire</definition>
        <argsstring>(struct coap_pending *pendings, size_t len)</argsstring>
        <name>coap_pending_next_to_expire</name>
        <param>
          <type>struct <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> *</type>
          <declname>pendings</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Returns the next pending about to expire, pending-&gt;timeout informs how many ms to next expiration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pendings</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> structures </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the array of <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> structures</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The next <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> to expire, NULL if none is about to expire. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="839" column="19" declfile="include/net/coap.h" declline="839" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga2bcfc7340ed2347862b0f003e1b00a4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool coap_pending_cycle</definition>
        <argsstring>(struct coap_pending *pending)</argsstring>
        <name>coap_pending_cycle</name>
        <param>
          <type>struct <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>After a request is sent, user may want to cycle the pending retransmission so the timeout is updated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>Pending representation to have its timeout updated</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if this is the last retransmission. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="850" column="6" declfile="include/net/coap.h" declline="850" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga03287eb3187aa28e0e83e0e0c72e2631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coap_pending_clear</definition>
        <argsstring>(struct coap_pending *pending)</argsstring>
        <name>coap_pending_clear</name>
        <param>
          <type>struct <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> *</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
<para>Cancels the pending retransmission, so it again becomes available. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pending</parametername>
</parameternamelist>
<parameterdescription>
<para>Pending representation to be canceled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="858" column="6" declfile="include/net/coap.h" declline="858" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga6e0947048052e733a3571fdc8955b2d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coap_pendings_clear</definition>
        <argsstring>(struct coap_pending *pendings, size_t len)</argsstring>
        <name>coap_pendings_clear</name>
        <param>
          <type>struct <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> *</type>
          <declname>pendings</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Cancels all pending retransmissions, so they become available again. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pendings</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> structures </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the array of <ref refid="structcoap__pending" kindref="compound">coap_pending</ref> structures </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="867" column="6" declfile="include/net/coap.h" declline="867" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga37b58c38c150751d31207ece416529d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coap_reply_clear</definition>
        <argsstring>(struct coap_reply *reply)</argsstring>
        <name>coap_reply_clear</name>
        <param>
          <type>struct <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> *</type>
          <declname>reply</declname>
        </param>
        <briefdescription>
<para>Cancels awaiting for this reply, so it becomes available again. User responsibility to free the memory associated with data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reply</parametername>
</parameternamelist>
<parameterdescription>
<para>The reply to be canceled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="875" column="6" declfile="include/net/coap.h" declline="875" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1gaddb02509934f5bac20b7c7f83aea4cd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coap_replies_clear</definition>
        <argsstring>(struct coap_reply *replies, size_t len)</argsstring>
        <name>coap_replies_clear</name>
        <param>
          <type>struct <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> *</type>
          <declname>replies</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Cancels all replies, so they become available again. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>replies</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> structures </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the array of <ref refid="structcoap__reply" kindref="compound">coap_reply</ref> structures </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="883" column="6" declfile="include/net/coap.h" declline="883" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1gad0c738d308f9cca8ea5cdb79449282cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coap_resource_notify</definition>
        <argsstring>(struct coap_resource *resource)</argsstring>
        <name>coap_resource_notify</name>
        <param>
          <type>struct <ref refid="structcoap__resource" kindref="compound">coap_resource</ref> *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
<para>Indicates that this resource was updated and that the <emphasis>notify</emphasis> callback should be called for every registered observer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resource</parametername>
</parameternamelist>
<parameterdescription>
<para>Resource that was updated</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="893" column="5" declfile="include/net/coap.h" declline="893" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__coap_1ga46b315c30b642eec65bcb84e9c937ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool coap_request_is_observe</definition>
        <argsstring>(const struct coap_packet *request)</argsstring>
        <name>coap_request_is_observe</name>
        <param>
          <type>const struct <ref refid="structcoap__packet" kindref="compound">coap_packet</ref> *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
<para>Returns if this request is enabling observing a resource. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>Request to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the request is enabling observing a resource, False otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/coap.h" line="903" column="6" declfile="include/net/coap.h" declline="903" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>CoAP implementation for Zephyr. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Nordic<sp/>Semiconductor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_NET_COAP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_NET_COAP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdbool_8h" kindref="compound">stdbool.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net__ip_8h" kindref="compound">net/net_ip.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="slist_8h" kindref="compound">sys/slist.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="group__coap_1ga7b8b3041e2f4ae26e663ff7431a6e6e3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga7b8b3041e2f4ae26e663ff7431a6e6e3" kindref="member">coap_option_num</ref><sp/>{</highlight></codeline>
<codeline lineno="45" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a4c61e26d11841c76debe2f99de5e9756" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a4c61e26d11841c76debe2f99de5e9756" kindref="member">COAP_OPTION_IF_MATCH</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="46" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a402bb0a642a07d951c35d69736fd3f33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a402bb0a642a07d951c35d69736fd3f33" kindref="member">COAP_OPTION_URI_HOST</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="47" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a0efdc30ce5551daffd093b2a8466978a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a0efdc30ce5551daffd093b2a8466978a" kindref="member">COAP_OPTION_ETAG</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="48" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a07ea6f395818a7019bb9e6a6e34d2d74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a07ea6f395818a7019bb9e6a6e34d2d74" kindref="member">COAP_OPTION_IF_NONE_MATCH</ref><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="49" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a06e91bbb4fa2144543d4148d3245ad25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a06e91bbb4fa2144543d4148d3245ad25" kindref="member">COAP_OPTION_OBSERVE</ref><sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="50" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a344707b9f4cb71310f2ccf5e8050d17a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a344707b9f4cb71310f2ccf5e8050d17a" kindref="member">COAP_OPTION_URI_PORT</ref><sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="51" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3ae82be3591d43f0d1c7e89ab764d969bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3ae82be3591d43f0d1c7e89ab764d969bd" kindref="member">COAP_OPTION_LOCATION_PATH</ref><sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="52" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a96b5a15937e875b3087307cc5faab1af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a96b5a15937e875b3087307cc5faab1af" kindref="member">COAP_OPTION_URI_PATH</ref><sp/>=<sp/>11,</highlight></codeline>
<codeline lineno="53" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3ac3166e67b5f5bf3cefee58c8ff58e5b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3ac3166e67b5f5bf3cefee58c8ff58e5b8" kindref="member">COAP_OPTION_CONTENT_FORMAT</ref><sp/>=<sp/>12,</highlight></codeline>
<codeline lineno="54" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3ab4cda4d3732fd12b9f203a2475c20981" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3ab4cda4d3732fd12b9f203a2475c20981" kindref="member">COAP_OPTION_MAX_AGE</ref><sp/>=<sp/>14,</highlight></codeline>
<codeline lineno="55" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3adb4d27052247b9a79ad7fcc0cc30c71c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3adb4d27052247b9a79ad7fcc0cc30c71c" kindref="member">COAP_OPTION_URI_QUERY</ref><sp/>=<sp/>15,</highlight></codeline>
<codeline lineno="56" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3afd0725f0ceb5ce22a6c7b390ca7efc9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3afd0725f0ceb5ce22a6c7b390ca7efc9d" kindref="member">COAP_OPTION_ACCEPT</ref><sp/>=<sp/>17,</highlight></codeline>
<codeline lineno="57" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3ac728800fc8f0d80e37dcf322e75eb27d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3ac728800fc8f0d80e37dcf322e75eb27d" kindref="member">COAP_OPTION_LOCATION_QUERY</ref><sp/>=<sp/>20,</highlight></codeline>
<codeline lineno="58" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a4aa7cdfa66bd89f21f592eaf3ebe0972" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a4aa7cdfa66bd89f21f592eaf3ebe0972" kindref="member">COAP_OPTION_BLOCK2</ref><sp/>=<sp/>23,</highlight></codeline>
<codeline lineno="59" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a8aaa54af114fd1db631566afa69f162d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a8aaa54af114fd1db631566afa69f162d" kindref="member">COAP_OPTION_BLOCK1</ref><sp/>=<sp/>27,</highlight></codeline>
<codeline lineno="60" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a26c1bcd7af4fccd949e3de35fc2d88e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a26c1bcd7af4fccd949e3de35fc2d88e6" kindref="member">COAP_OPTION_SIZE2</ref><sp/>=<sp/>28,</highlight></codeline>
<codeline lineno="61" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3ae4d2c93b545708926813217cd36a96ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3ae4d2c93b545708926813217cd36a96ac" kindref="member">COAP_OPTION_PROXY_URI</ref><sp/>=<sp/>35,</highlight></codeline>
<codeline lineno="62" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a30da986503e1e15243b74a16b161901c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a30da986503e1e15243b74a16b161901c" kindref="member">COAP_OPTION_PROXY_SCHEME</ref><sp/>=<sp/>39,</highlight></codeline>
<codeline lineno="63" refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a53169a1c7b07c9e97f79dfc06af3eb51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga7b8b3041e2f4ae26e663ff7431a6e6e3a53169a1c7b07c9e97f79dfc06af3eb51" kindref="member">COAP_OPTION_SIZE1</ref><sp/>=<sp/>60,</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="group__coap_1ga6a6547e3c755cf7a5033302c8294e0b7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga6a6547e3c755cf7a5033302c8294e0b7" kindref="member">coap_method</ref><sp/>{</highlight></codeline>
<codeline lineno="72" refid="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7a025300cb0dc4c4de8eb0b0e0b4eb5317" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7a025300cb0dc4c4de8eb0b0e0b4eb5317" kindref="member">COAP_METHOD_GET</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="73" refid="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7aba51bcab79bf75080ccf75c1ec38a3d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7aba51bcab79bf75080ccf75c1ec38a3d6" kindref="member">COAP_METHOD_POST</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="74" refid="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7a91637ef7c9f57cdcc65d0118008251db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7a91637ef7c9f57cdcc65d0118008251db" kindref="member">COAP_METHOD_PUT</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="75" refid="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7adccbea1fe9a43433cf8471e32208a5ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7adccbea1fe9a43433cf8471e32208a5ac" kindref="member">COAP_METHOD_DELETE</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="76" refid="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7afa4070fed5c01b28bb1a59e3f0c021f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7afa4070fed5c01b28bb1a59e3f0c021f4" kindref="member">COAP_METHOD_FETCH</ref><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="77" refid="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7adca55e3d2b4b41b249f6b2f67074d708" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7adca55e3d2b4b41b249f6b2f67074d708" kindref="member">COAP_METHOD_PATCH</ref><sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="78" refid="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7a78f97b895f29819bf3f8b0314967f20e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga6a6547e3c755cf7a5033302c8294e0b7a78f97b895f29819bf3f8b0314967f20e" kindref="member">COAP_METHOD_IPATCH</ref><sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="group__coap_1gad61166d12586d72e44c6e53a1064032a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COAP_REQUEST_MASK<sp/>0x07</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="group__coap_1ga1c4e268d39446075243c2713bc68aa0c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COAP_VERSION_1<sp/>1U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="group__coap_1ga3b375b7580246d1266293d09902f3d9f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga3b375b7580246d1266293d09902f3d9f" kindref="member">coap_msgtype</ref><sp/>{</highlight></codeline>
<codeline lineno="95" refid="group__coap_1gga3b375b7580246d1266293d09902f3d9fa65c04ee4847d0c595238079ac9564e8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga3b375b7580246d1266293d09902f3d9fa65c04ee4847d0c595238079ac9564e8d" kindref="member">COAP_TYPE_CON</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="102" refid="group__coap_1gga3b375b7580246d1266293d09902f3d9fa629a304bea0c85c7b2bf746b26216a4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga3b375b7580246d1266293d09902f3d9fa629a304bea0c85c7b2bf746b26216a4f" kindref="member">COAP_TYPE_NON_CON</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="108" refid="group__coap_1gga3b375b7580246d1266293d09902f3d9fa7b2fe2187018bce9132af2763b57307d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga3b375b7580246d1266293d09902f3d9fa7b2fe2187018bce9132af2763b57307d" kindref="member">COAP_TYPE_ACK</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga3b375b7580246d1266293d09902f3d9fa287b951159fd51b84a2e0491b012f84c" kindref="member">COAP_TYPE_RESET</ref><sp/>=<sp/>3</highlight></codeline>
<codeline lineno="116" refid="group__coap_1gga3b375b7580246d1266293d09902f3d9fa287b951159fd51b84a2e0491b012f84c" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>coap_make_response_code(class,<sp/>det)<sp/>((class<sp/>&lt;&lt;<sp/>5)<sp/>|<sp/>(det))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="group__coap_1ga1ea81a365834e96f43ab7be573069d26" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga1ea81a365834e96f43ab7be573069d26" kindref="member">coap_response_code</ref><sp/>{</highlight></codeline>
<codeline lineno="126" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a0629da1898b934c3f699b98ff808c717" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a0629da1898b934c3f699b98ff808c717" kindref="member">COAP_RESPONSE_CODE_OK</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(2,<sp/>0),</highlight></codeline>
<codeline lineno="127" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26ad2d9fe8dd5beda74b522377c0b76275b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26ad2d9fe8dd5beda74b522377c0b76275b" kindref="member">COAP_RESPONSE_CODE_CREATED</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(2,<sp/>1),</highlight></codeline>
<codeline lineno="128" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26abf324915aa498c64a733a0098de4a082" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26abf324915aa498c64a733a0098de4a082" kindref="member">COAP_RESPONSE_CODE_DELETED</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(2,<sp/>2),</highlight></codeline>
<codeline lineno="129" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26aecaac4a0e9c821dfc20536951409dd48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26aecaac4a0e9c821dfc20536951409dd48" kindref="member">COAP_RESPONSE_CODE_VALID</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(2,<sp/>3),</highlight></codeline>
<codeline lineno="130" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a3ffb3632c37c22cee901760753c8d0d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a3ffb3632c37c22cee901760753c8d0d3" kindref="member">COAP_RESPONSE_CODE_CHANGED</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(2,<sp/>4),</highlight></codeline>
<codeline lineno="131" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26adfd3e5e3c6ad5715127bb444c205fbce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26adfd3e5e3c6ad5715127bb444c205fbce" kindref="member">COAP_RESPONSE_CODE_CONTENT</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(2,<sp/>5),</highlight></codeline>
<codeline lineno="132" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26ae4e3ff451c626421b9b329790f019dd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26ae4e3ff451c626421b9b329790f019dd8" kindref="member">COAP_RESPONSE_CODE_CONTINUE</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(2,<sp/>31),</highlight></codeline>
<codeline lineno="133" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a603e60d2314bde36adf505f446c907c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a603e60d2314bde36adf505f446c907c5" kindref="member">COAP_RESPONSE_CODE_BAD_REQUEST</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(4,<sp/>0),</highlight></codeline>
<codeline lineno="134" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26acb76dbf11b47477144cc4ece3357283c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26acb76dbf11b47477144cc4ece3357283c" kindref="member">COAP_RESPONSE_CODE_UNAUTHORIZED</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(4,<sp/>1),</highlight></codeline>
<codeline lineno="135" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a989a6528edc653c0b693ed875481e82d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a989a6528edc653c0b693ed875481e82d" kindref="member">COAP_RESPONSE_CODE_BAD_OPTION</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(4,<sp/>2),</highlight></codeline>
<codeline lineno="136" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26afeee555ef54f138db58b14ad2c328d04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26afeee555ef54f138db58b14ad2c328d04" kindref="member">COAP_RESPONSE_CODE_FORBIDDEN</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(4,<sp/>3),</highlight></codeline>
<codeline lineno="137" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a86c2bff8add69428d164431b3091a8e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a86c2bff8add69428d164431b3091a8e9" kindref="member">COAP_RESPONSE_CODE_NOT_FOUND</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(4,<sp/>4),</highlight></codeline>
<codeline lineno="138" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a301eb722445472dba93d5accd6e0dd31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a301eb722445472dba93d5accd6e0dd31" kindref="member">COAP_RESPONSE_CODE_NOT_ALLOWED</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(4,<sp/>5),</highlight></codeline>
<codeline lineno="139" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a4d77322514521e8dfea01f4a1a6e5886" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a4d77322514521e8dfea01f4a1a6e5886" kindref="member">COAP_RESPONSE_CODE_NOT_ACCEPTABLE</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(4,<sp/>6),</highlight></codeline>
<codeline lineno="140" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a671730c6d2f1a339fcd557c5452150af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a671730c6d2f1a339fcd557c5452150af" kindref="member">COAP_RESPONSE_CODE_INCOMPLETE</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(4,<sp/>8),</highlight></codeline>
<codeline lineno="141" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26ab447505d233aed9fd8ad28070d317544" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26ab447505d233aed9fd8ad28070d317544" kindref="member">COAP_RESPONSE_CODE_CONFLICT</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(4,<sp/>9),</highlight></codeline>
<codeline lineno="142" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a289ade02833b57bffd915e648e050e52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a289ade02833b57bffd915e648e050e52" kindref="member">COAP_RESPONSE_CODE_PRECONDITION_FAILED</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(4,<sp/>12),</highlight></codeline>
<codeline lineno="143" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26aaa43062a8146c1e2e09183228a540d2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26aaa43062a8146c1e2e09183228a540d2e" kindref="member">COAP_RESPONSE_CODE_REQUEST_TOO_LARGE</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(4,<sp/>13),</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26aef6b165b9d3f8f4b477431058815c16b" kindref="member">COAP_RESPONSE_CODE_UNSUPPORTED_CONTENT_FORMAT</ref><sp/>=</highlight></codeline>
<codeline lineno="145" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26aef6b165b9d3f8f4b477431058815c16b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(4,<sp/>15),</highlight></codeline>
<codeline lineno="146" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a5e5e31cc4647d5e0fdd1c8fe6cfa2661" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a5e5e31cc4647d5e0fdd1c8fe6cfa2661" kindref="member">COAP_RESPONSE_CODE_UNPROCESSABLE_ENTITY</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(4,<sp/>22),</highlight></codeline>
<codeline lineno="147" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26aabd72cff6669d382aa04c53e764d0b49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26aabd72cff6669d382aa04c53e764d0b49" kindref="member">COAP_RESPONSE_CODE_TOO_MANY_REQUESTS</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(4,<sp/>29),</highlight></codeline>
<codeline lineno="148" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a07b00dba944e55c4dcde798da667b499" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a07b00dba944e55c4dcde798da667b499" kindref="member">COAP_RESPONSE_CODE_INTERNAL_ERROR</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(5,<sp/>0),</highlight></codeline>
<codeline lineno="149" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a85c04541bc8580c2ae915946fd677c15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a85c04541bc8580c2ae915946fd677c15" kindref="member">COAP_RESPONSE_CODE_NOT_IMPLEMENTED</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(5,<sp/>1),</highlight></codeline>
<codeline lineno="150" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a8de29a7ee6bb960a97d6b415217b4640" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a8de29a7ee6bb960a97d6b415217b4640" kindref="member">COAP_RESPONSE_CODE_BAD_GATEWAY</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(5,<sp/>2),</highlight></codeline>
<codeline lineno="151" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26afebd274586351951ffe9c8f26b270dec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26afebd274586351951ffe9c8f26b270dec" kindref="member">COAP_RESPONSE_CODE_SERVICE_UNAVAILABLE</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(5,<sp/>3),</highlight></codeline>
<codeline lineno="152" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26af6d379fef704c269406b782c60772ecd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26af6d379fef704c269406b782c60772ecd" kindref="member">COAP_RESPONSE_CODE_GATEWAY_TIMEOUT</ref><sp/>=<sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(5,<sp/>4),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a5f49a566d37b2cda0c624d76aee08bd1" kindref="member">COAP_RESPONSE_CODE_PROXYING_NOT_SUPPORTED</ref><sp/>=</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1ga650b40a4b798fb0c0bcc55107f9a471d" kindref="member">coap_make_response_code</ref>(5,<sp/>5)</highlight></codeline>
<codeline lineno="155" refid="group__coap_1gga1ea81a365834e96f43ab7be573069d26a5f49a566d37b2cda0c624d76aee08bd1" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="group__coap_1ga61fe5f43b386a3cd5ceb5b15280bfdca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COAP_CODE_EMPTY<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="group__coap_1ga69fbb7a145ce60fc4f3765c590e4808c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COAP_TOKEN_MAX_LEN<sp/>8UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="group__coap_1ga94a8f9956742d3928fc3c63b8d01ae73" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga94a8f9956742d3928fc3c63b8d01ae73" kindref="member">coap_content_format</ref><sp/>{</highlight></codeline>
<codeline lineno="167" refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73af068aa8d09032352799bc60868607997" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73af068aa8d09032352799bc60868607997" kindref="member">COAP_CONTENT_FORMAT_TEXT_PLAIN</ref><sp/>=<sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>charset=urf-8<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a1fbd90fd5cb309e2de6954f46174dc4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a1fbd90fd5cb309e2de6954f46174dc4f" kindref="member">COAP_CONTENT_FORMAT_APP_LINK_FORMAT</ref><sp/>=<sp/>40,</highlight></codeline>
<codeline lineno="169" refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73adb96bf55e914f4852e92dc65752c372a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73adb96bf55e914f4852e92dc65752c372a" kindref="member">COAP_CONTENT_FORMAT_APP_XML</ref><sp/>=<sp/>41,</highlight></codeline>
<codeline lineno="170" refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a88d952174bb3e4ffb9ab11a599952760" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a88d952174bb3e4ffb9ab11a599952760" kindref="member">COAP_CONTENT_FORMAT_APP_OCTET_STREAM</ref><sp/>=<sp/>42,</highlight></codeline>
<codeline lineno="171" refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a483a382550b38468cc66bdce9f4743ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a483a382550b38468cc66bdce9f4743ea" kindref="member">COAP_CONTENT_FORMAT_APP_EXI</ref><sp/>=<sp/>47,</highlight></codeline>
<codeline lineno="172" refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a975381d286c1e9b998e41ef0a234d17a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a975381d286c1e9b998e41ef0a234d17a" kindref="member">COAP_CONTENT_FORMAT_APP_JSON</ref><sp/>=<sp/>50,</highlight></codeline>
<codeline lineno="173" refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a141f183724ad6da14c3992c0990d6239" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a141f183724ad6da14c3992c0990d6239" kindref="member">COAP_CONTENT_FORMAT_APP_JSON_PATCH_JSON</ref><sp/>=<sp/>51,</highlight></codeline>
<codeline lineno="174" refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a2797149fb3811d706dab291e9edc9436" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a2797149fb3811d706dab291e9edc9436" kindref="member">COAP_CONTENT_FORMAT_APP_MERGE_PATCH_JSON</ref><sp/>=<sp/>52,</highlight></codeline>
<codeline lineno="175" refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a7ca73ff57a6c7fb1517b44f2ce17d3f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga94a8f9956742d3928fc3c63b8d01ae73a7ca73ff57a6c7fb1517b44f2ce17d3f9" kindref="member">COAP_CONTENT_FORMAT_APP_CBOR</ref><sp/>=<sp/>60,</highlight></codeline>
<codeline lineno="176"><highlight class="normal">};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>block<sp/>option<sp/>helper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="group__coap_1ga54bed49d5081d423d0600bb84dd44a75" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_BLOCK_NUM(v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((v)<sp/>&gt;&gt;<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="group__coap_1gaf8f67659f780c91f04eac97e8eb59fdd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_BLOCK_SIZE(v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((v)<sp/>&amp;<sp/>0x7))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="group__coap_1ga8bfd808b8828458887383f50833d80ed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_MORE(v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!!((v)<sp/>&amp;<sp/>0x08))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__observer" kindref="compound">coap_observer</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__packet" kindref="compound">coap_packet</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__pending" kindref="compound">coap_pending</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__reply" kindref="compound">coap_reply</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__resource" kindref="compound">coap_resource</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="group__coap_1ga77053a199941c0cea41c497b4196f2cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__coap_1ga77053a199941c0cea41c497b4196f2cf" kindref="member">coap_method_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__resource" kindref="compound">coap_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*request,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,<sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addr_len);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="group__coap_1gaa91527b86e20a107f18637e5bed7125b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__coap_1gaa91527b86e20a107f18637e5bed7125b" kindref="member">coap_notify_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__resource" kindref="compound">coap_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__observer" kindref="compound">coap_observer</ref><sp/>*observer);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="structcoap__resource" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__resource" kindref="compound">coap_resource</ref><sp/>{</highlight></codeline>
<codeline lineno="214" refid="structcoap__resource_1a77dfb6d59c25e6e58141226023bf59ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1ga77053a199941c0cea41c497b4196f2cf" kindref="member">coap_method_t</ref><sp/><ref refid="structcoap__resource_1aebe880e3ccbd2441854dfa899dc72c13" kindref="member">get</ref>,<sp/><ref refid="structcoap__resource_1a1efed8197d44aba3b63aaa9d9bb0f5bb" kindref="member">post</ref>,<sp/><ref refid="structcoap__resource_1a3152a778e27e36fad7dd62985621d58b" kindref="member">put</ref>,<sp/><ref refid="structcoap__resource_1a77dfb6d59c25e6e58141226023bf59ea" kindref="member">del</ref>,<sp/><ref refid="structcoap__resource_1a6975e84ebc67d6aff2efb755695518f5" kindref="member">fetch</ref>,<sp/><ref refid="structcoap__resource_1aa0a5465fc5b49a566e3803a9f1638724" kindref="member">patch</ref>,<sp/><ref refid="structcoap__resource_1a7657cb2e9bbac7f98e35b4ed33f13163" kindref="member">ipatch</ref>;</highlight></codeline>
<codeline lineno="215" refid="structcoap__resource_1a3199679fd990d757e9a500fbd7c653d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gaa91527b86e20a107f18637e5bed7125b" kindref="member">coap_notify_t</ref><sp/><ref refid="structcoap__resource_1a3199679fd990d757e9a500fbd7c653d7" kindref="member">notify</ref>;</highlight></codeline>
<codeline lineno="216" refid="structcoap__resource_1ada7a41309b6ca11612b17fabf6cd56c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="structcoap__resource_1ada7a41309b6ca11612b17fabf6cd56c5" kindref="member">path</ref>;</highlight></codeline>
<codeline lineno="217" refid="structcoap__resource_1a202a83a5aa024a62bd25cc40f42e8d65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structcoap__resource_1a202a83a5aa024a62bd25cc40f42e8d65" kindref="member">user_data</ref>;</highlight></codeline>
<codeline lineno="218" refid="structcoap__resource_1a5035dc9c88c2b0ae557608e34ec14433" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="slist_8h_1a44658c336b634c03938a251cdc8134f8" kindref="member">sys_slist_t</ref><sp/><ref refid="structcoap__resource_1a5035dc9c88c2b0ae557608e34ec14433" kindref="member">observers</ref>;</highlight></codeline>
<codeline lineno="219" refid="structcoap__resource_1ae8e1b2b1920689913e0910a82a30e009" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structcoap__resource_1ae8e1b2b1920689913e0910a82a30e009" kindref="member">age</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="structcoap__observer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__observer" kindref="compound">coap_observer</ref><sp/>{</highlight></codeline>
<codeline lineno="226" refid="structcoap__observer_1a24a9f853db17ff623f4c510fd0892eb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="slist_8h_1a69bf43aad81e3ee2d55250c59b857493" kindref="member">sys_snode_t</ref><sp/><ref refid="structcoap__observer_1a24a9f853db17ff623f4c510fd0892eb5" kindref="member">list</ref>;</highlight></codeline>
<codeline lineno="227" refid="structcoap__observer_1a9b6f807a0fc5d141e0ee3dd9596c3c82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/><ref refid="structcoap__observer_1a9b6f807a0fc5d141e0ee3dd9596c3c82" kindref="member">addr</ref>;</highlight></codeline>
<codeline lineno="228" refid="structcoap__observer_1a6d7d792120b935bf61c739f95dd7361c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structcoap__observer_1a6d7d792120b935bf61c739f95dd7361c" kindref="member">token</ref>[8];</highlight></codeline>
<codeline lineno="229" refid="structcoap__observer_1a901f148d2eb697206fde732050c3d8b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structcoap__observer_1a901f148d2eb697206fde732050c3d8b4" kindref="member">tkl</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="structcoap__packet" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>{</highlight></codeline>
<codeline lineno="236" refid="structcoap__packet_1a8116711bcdff1fa6b0cf5c4fa9ab88d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="structcoap__packet_1a8116711bcdff1fa6b0cf5c4fa9ab88d1" kindref="member">data</ref>;<sp/></highlight><highlight class="comment">/*<sp/>User<sp/>allocated<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="structcoap__packet_1a46c0842c785b8de5eb8564950a786c02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structcoap__packet_1a46c0842c785b8de5eb8564950a786c02" kindref="member">offset</ref>;<sp/></highlight><highlight class="comment">/*<sp/>CoAP<sp/>lib<sp/>maintains<sp/>offset<sp/>while<sp/>adding<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="structcoap__packet_1a48c216a7da37e85942d271c85a79bcb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structcoap__packet_1a48c216a7da37e85942d271c85a79bcb6" kindref="member">max_len</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Max<sp/>CoAP<sp/>packet<sp/>data<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="structcoap__packet_1ab302c002da88f6d3a44c3a2215082be4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structcoap__packet_1ab302c002da88f6d3a44c3a2215082be4" kindref="member">hdr_len</ref>;<sp/></highlight><highlight class="comment">/*<sp/>CoAP<sp/>header<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="structcoap__packet_1acc5542ba2a69db8957155b90e75fd563" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structcoap__packet_1acc5542ba2a69db8957155b90e75fd563" kindref="member">opt_len</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Total<sp/>options<sp/>length<sp/>(delta<sp/>+<sp/>len<sp/>+<sp/>value)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="structcoap__packet_1a95dd8c6fb08ac61a1571c84258579475" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structcoap__packet_1a95dd8c6fb08ac61a1571c84258579475" kindref="member">delta</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Used<sp/>for<sp/>delta<sp/>calculation<sp/>in<sp/>CoAP<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_COAP_KEEP_USER_DATA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Application<sp/>specific<sp/>user<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal">};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="structcoap__option" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__option" kindref="compound">coap_option</ref><sp/>{</highlight></codeline>
<codeline lineno="248" refid="structcoap__option_1abca15b0a8f9bdcb3f493ab3801d4b58f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structcoap__option_1abca15b0a8f9bdcb3f493ab3801d4b58f" kindref="member">delta</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_COAP_EXTENDED_OPTIONS_LEN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structcoap__option_1a01c8abdf27c3f8c5a816af33c0c093d4" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structcoap__option_1aff07b5d3673169b6316b91dc27780891" kindref="member">value</ref>[CONFIG_COAP_EXTENDED_OPTIONS_LEN_VALUE];</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="structcoap__option_1a01c8abdf27c3f8c5a816af33c0c093d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structcoap__option_1a01c8abdf27c3f8c5a816af33c0c093d4" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="254" refid="structcoap__option_1aff07b5d3673169b6316b91dc27780891" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structcoap__option_1aff07b5d3673169b6316b91dc27780891" kindref="member">value</ref>[12];</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal">};</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="group__coap_1ga46d987451046a7260b56b9701752ba39" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__coap_1ga46d987451046a7260b56b9701752ba39" kindref="member">coap_reply_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*response,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__reply" kindref="compound">coap_reply</ref><sp/>*<ref refid="structcoap__reply_1a6a888bbb5652761002ce26aba09352cc" kindref="member">reply</ref>,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*from);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="group__coap_1ga7574b8b96be63292723bab49f11386bc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COAP_DEFAULT_MAX_RETRANSMIT<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="group__coap_1ga4fcd70b1558aeb7fea1cd734a53589e0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COAP_DEFAULT_ACK_RANDOM_FACTOR<sp/>1.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="structcoap__pending" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__pending" kindref="compound">coap_pending</ref><sp/>{</highlight></codeline>
<codeline lineno="274" refid="structcoap__pending_1adcc34b0d0201a24b15a5adca89ae0da3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/><ref refid="structcoap__pending_1adcc34b0d0201a24b15a5adca89ae0da3" kindref="member">addr</ref>;</highlight></codeline>
<codeline lineno="275" refid="structcoap__pending_1a65c7398ed5d408f0ba50932bd42e1d2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structcoap__pending_1a65c7398ed5d408f0ba50932bd42e1d2d" kindref="member">t0</ref>;</highlight></codeline>
<codeline lineno="276" refid="structcoap__pending_1ab31339cc91df71ee6f90d5702f722fd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structcoap__pending_1ab31339cc91df71ee6f90d5702f722fd6" kindref="member">timeout</ref>;</highlight></codeline>
<codeline lineno="277" refid="structcoap__pending_1a8b1952271bd0c733c2fbcb158b60ca99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structcoap__pending_1a8b1952271bd0c733c2fbcb158b60ca99" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="278" refid="structcoap__pending_1a0a506507e472b3813e672f2b455e4bcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="structcoap__pending_1a0a506507e472b3813e672f2b455e4bcc" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="279" refid="structcoap__pending_1a4eb95f8fadef7d42aecdf25cc5ee3b1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structcoap__pending_1a4eb95f8fadef7d42aecdf25cc5ee3b1d" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="280" refid="structcoap__pending_1a8aebb187845bcb6cb07dee68927f1aa6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structcoap__pending_1a8aebb187845bcb6cb07dee68927f1aa6" kindref="member">retries</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">};</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="structcoap__reply" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__reply" kindref="compound">coap_reply</ref><sp/>{</highlight></codeline>
<codeline lineno="288" refid="structcoap__reply_1a6a888bbb5652761002ce26aba09352cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1ga46d987451046a7260b56b9701752ba39" kindref="member">coap_reply_t</ref><sp/><ref refid="structcoap__reply_1a6a888bbb5652761002ce26aba09352cc" kindref="member">reply</ref>;</highlight></codeline>
<codeline lineno="289" refid="structcoap__reply_1aa951d9ba4eb7f8041e8e82df9c1401dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structcoap__reply_1aa951d9ba4eb7f8041e8e82df9c1401dc" kindref="member">user_data</ref>;</highlight></codeline>
<codeline lineno="290" refid="structcoap__reply_1aea6b98e109e270c08df1554c5eee65fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structcoap__reply_1aea6b98e109e270c08df1554c5eee65fe" kindref="member">age</ref>;</highlight></codeline>
<codeline lineno="291" refid="structcoap__reply_1a94d17732056de3d8ecb3412c686091f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structcoap__reply_1a94d17732056de3d8ecb3412c686091f8" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="292" refid="structcoap__reply_1a18d40c327933c30681b924446c21ea9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structcoap__reply_1a18d40c327933c30681b924446c21ea9d" kindref="member">token</ref>[8];</highlight></codeline>
<codeline lineno="293" refid="structcoap__reply_1a038ccb29c2abff6168db3247241a8cc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structcoap__reply_1a038ccb29c2abff6168db3247241a8cc3" kindref="member">tkl</ref>;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">};</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="group__coap_1gafd01c39fac8f173edc04337161e92264" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__coap_1gafd01c39fac8f173edc04337161e92264" kindref="member">coap_header_get_version</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="group__coap_1gaed883ea6cec3acc5eb570e152dc52e25" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__coap_1gaed883ea6cec3acc5eb570e152dc52e25" kindref="member">coap_header_get_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="group__coap_1ga6a5049accfa0cd7106a3a6593c598545" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__coap_1ga6a5049accfa0cd7106a3a6593c598545" kindref="member">coap_header_get_token</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*token);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="group__coap_1gae4bf952fdf9e3d03ab0b0df4c3c0d054" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="group__coap_1gae4bf952fdf9e3d03ab0b0df4c3c0d054" kindref="member">coap_header_get_code</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="group__coap_1ga63388c629da5370d2e711cdc9aabd837" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="group__coap_1ga63388c629da5370d2e711cdc9aabd837" kindref="member">coap_header_get_id</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="group__coap_1ga28ccf00fb1f5f13f747e61c2e3008b5c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="group__coap_1ga28ccf00fb1f5f13f747e61c2e3008b5c" kindref="member">coap_packet_get_payload</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>*len);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="group__coap_1ga27a58a69f632551aa7a2394ae2badacf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga27a58a69f632551aa7a2394ae2badacf" kindref="member">coap_packet_parse</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>len,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__option" kindref="compound">coap_option</ref><sp/>*options,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>opt_num);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="group__coap_1ga90e6aab174f8977f0a3b5fbe1a20297c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga90e6aab174f8977f0a3b5fbe1a20297c" kindref="member">coap_packet_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>max_len,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>ver,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>type,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>token_len,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*token,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>code,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="group__coap_1gae6d93b1f93734302be75ee417813e5d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1gae6d93b1f93734302be75ee417813e5d1" kindref="member">coap_ack_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*req,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>max_len,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>code);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="group__coap_1ga66f986f8a1157236bea27133c2a2538b" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="group__coap_1ga66f986f8a1157236bea27133c2a2538b" kindref="member">coap_next_token</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="group__coap_1gade5f4995c6419db03ce3e7ff7ca1cfcb" refkind="member"><highlight class="normal"><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="group__coap_1gade5f4995c6419db03ce3e7ff7ca1cfcb" kindref="member">coap_next_id</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="group__coap_1gaf006c8048ed7b863e70dbdd64bc3d608" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1gaf006c8048ed7b863e70dbdd64bc3d608" kindref="member">coap_find_options</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>code,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__option" kindref="compound">coap_option</ref><sp/>*options,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>veclen);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="group__coap_1ga2aa4140ee83ca4090a5604e34d1f1446" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga2aa4140ee83ca4090a5604e34d1f1446" kindref="member">coap_packet_append_option</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>code,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*value,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>len);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="group__coap_1ga2fd0613e61274ec4b9b7bab3ab11ccce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga2fd0613e61274ec4b9b7bab3ab11ccce" kindref="member">coap_option_value_to_int</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__option" kindref="compound">coap_option</ref><sp/>*option);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="group__coap_1ga6bec94992ac450dca03436a6ad74efb4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga6bec94992ac450dca03436a6ad74efb4" kindref="member">coap_append_option_int</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>code,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="group__coap_1ga24000def8534acdcd2c61836dc690367" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga24000def8534acdcd2c61836dc690367" kindref="member">coap_packet_append_payload_marker</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="group__coap_1gadcd3a93a702a2a0b428f39b71dd67954" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1gadcd3a93a702a2a0b428f39b71dd67954" kindref="member">coap_packet_append_payload</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*payload,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>payload_len);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="group__coap_1ga88a5f2c3915ef109eadfebaf82b53186" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga88a5f2c3915ef109eadfebaf82b53186" kindref="member">coap_handle_request</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__resource" kindref="compound">coap_resource</ref><sp/>*resources,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__option" kindref="compound">coap_option</ref><sp/>*options,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>opt_num,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,<sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addr_len);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="group__coap_1ga712c1468f936a3af7dc39a86a5961922" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga712c1468f936a3af7dc39a86a5961922" kindref="member">coap_block_size</ref><sp/>{</highlight></codeline>
<codeline lineno="534" refid="group__coap_1gga712c1468f936a3af7dc39a86a5961922a834d479806b513818e2237f3f1c56968" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga712c1468f936a3af7dc39a86a5961922a834d479806b513818e2237f3f1c56968" kindref="member">COAP_BLOCK_16</ref>,</highlight></codeline>
<codeline lineno="535" refid="group__coap_1gga712c1468f936a3af7dc39a86a5961922a1aaf8f841c18e281b176793bb331993d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga712c1468f936a3af7dc39a86a5961922a1aaf8f841c18e281b176793bb331993d" kindref="member">COAP_BLOCK_32</ref>,</highlight></codeline>
<codeline lineno="536" refid="group__coap_1gga712c1468f936a3af7dc39a86a5961922a7266f448a391ea2a2763f1ded5397520" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga712c1468f936a3af7dc39a86a5961922a7266f448a391ea2a2763f1ded5397520" kindref="member">COAP_BLOCK_64</ref>,</highlight></codeline>
<codeline lineno="537" refid="group__coap_1gga712c1468f936a3af7dc39a86a5961922a147ddf4b0e5d1a8c11f0da2c71dee4d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga712c1468f936a3af7dc39a86a5961922a147ddf4b0e5d1a8c11f0da2c71dee4d8" kindref="member">COAP_BLOCK_128</ref>,</highlight></codeline>
<codeline lineno="538" refid="group__coap_1gga712c1468f936a3af7dc39a86a5961922acfc37f84eabccdde4bd84b06c6a5e753" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga712c1468f936a3af7dc39a86a5961922acfc37f84eabccdde4bd84b06c6a5e753" kindref="member">COAP_BLOCK_256</ref>,</highlight></codeline>
<codeline lineno="539" refid="group__coap_1gga712c1468f936a3af7dc39a86a5961922ad2052905aff08c58585dcf6c6caddc19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga712c1468f936a3af7dc39a86a5961922ad2052905aff08c58585dcf6c6caddc19" kindref="member">COAP_BLOCK_512</ref>,</highlight></codeline>
<codeline lineno="540" refid="group__coap_1gga712c1468f936a3af7dc39a86a5961922a6998c79e63cf65e7f86ddd5713d48dce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__coap_1gga712c1468f936a3af7dc39a86a5961922a6998c79e63cf65e7f86ddd5713d48dce" kindref="member">COAP_BLOCK_1024</ref>,</highlight></codeline>
<codeline lineno="541"><highlight class="normal">};</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="group__coap_1gafffadd4a837e48fd72af20468ccd86f2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="group__coap_1gafffadd4a837e48fd72af20468ccd86f2" kindref="member">coap_block_size_to_bytes</ref>(</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga712c1468f936a3af7dc39a86a5961922" kindref="member">coap_block_size</ref><sp/>block_size)</highlight></codeline>
<codeline lineno="553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1<sp/>&lt;&lt;<sp/>(block_size<sp/>+<sp/>4));</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="structcoap__block__context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref><sp/>{</highlight></codeline>
<codeline lineno="561" refid="structcoap__block__context_1a27db79dc3a2af6dd9f41e3008dcde87a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcoap__block__context_1a27db79dc3a2af6dd9f41e3008dcde87a" kindref="member">total_size</ref>;</highlight></codeline>
<codeline lineno="562" refid="structcoap__block__context_1a474f54e2a29d41b9d449f8574e747067" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcoap__block__context_1a474f54e2a29d41b9d449f8574e747067" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="563" refid="structcoap__block__context_1a27eb897fa2d455eb79220f1654509da3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga712c1468f936a3af7dc39a86a5961922" kindref="member">coap_block_size</ref><sp/><ref refid="structcoap__block__context_1a27eb897fa2d455eb79220f1654509da3" kindref="member">block_size</ref>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal">};</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="group__coap_1ga57486e764f0feb6544fa3b0d19935afd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga57486e764f0feb6544fa3b0d19935afd" kindref="member">coap_block_transfer_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga712c1468f936a3af7dc39a86a5961922" kindref="member">coap_block_size</ref><sp/>block_size,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total_size);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="588" refid="group__coap_1ga518d5f4422ff45f2b4a296f249da89cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga518d5f4422ff45f2b4a296f249da89cd" kindref="member">coap_append_block1_option</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="600" refid="group__coap_1ga361c17b698bdaa0fc529b7338efefd8c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga361c17b698bdaa0fc529b7338efefd8c" kindref="member">coap_append_block2_option</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="group__coap_1ga3f66d5935dcacfeebcac2b3001d7b57a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga3f66d5935dcacfeebcac2b3001d7b57a" kindref="member">coap_append_size1_option</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="group__coap_1gafbc8c15ef03b762f9411c38b03aa403b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1gafbc8c15ef03b762f9411c38b03aa403b" kindref="member">coap_append_size2_option</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="636" refid="group__coap_1ga21b8f4ffeecc7900f6bf299836d2b5b3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga21b8f4ffeecc7900f6bf299836d2b5b3" kindref="member">coap_get_option_int</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>code);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="647" refid="group__coap_1ga3b0cc9bfabdddeffd98f36d7f15dd416" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga3b0cc9bfabdddeffd98f36d7f15dd416" kindref="member">coap_update_from_block</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="662" refid="group__coap_1ga50f7837da003601479dbc470ba9898ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga50f7837da003601479dbc470ba9898ae" kindref="member">coap_next_block_for_option</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga7b8b3041e2f4ae26e663ff7431a6e6e3" kindref="member">coap_option_num</ref><sp/>option);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="677" refid="group__coap_1ga1244716ecf06fad1013131c42eab8c5c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga1244716ecf06fad1013131c42eab8c5c" kindref="member">coap_next_block</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*cpkt,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__block__context" kindref="compound">coap_block_context</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="688" refid="group__coap_1ga3d720b0d222cc35ce56cc260df1609a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga3d720b0d222cc35ce56cc260df1609a3" kindref="member">coap_observer_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__observer" kindref="compound">coap_observer</ref><sp/>*observer,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*request,</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="701" refid="group__coap_1ga3c42861f8442e548f560acf3deca6baa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga3c42861f8442e548f560acf3deca6baa" kindref="member">coap_register_observer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__resource" kindref="compound">coap_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__observer" kindref="compound">coap_observer</ref><sp/>*observer);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="711" refid="group__coap_1ga673718725e2fe23d321b785c795df703" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga673718725e2fe23d321b785c795df703" kindref="member">coap_remove_observer</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__resource" kindref="compound">coap_resource</ref><sp/>*resource,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__observer" kindref="compound">coap_observer</ref><sp/>*observer);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="724" refid="group__coap_1ga427167161529c24f5cf8c9ed2023e321" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__observer" kindref="compound">coap_observer</ref><sp/>*<ref refid="group__coap_1ga427167161529c24f5cf8c9ed2023e321" kindref="member">coap_find_observer_by_addr</ref>(</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__observer" kindref="compound">coap_observer</ref><sp/>*observers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*<ref refid="structcoap__observer_1a9b6f807a0fc5d141e0ee3dd9596c3c82" kindref="member">addr</ref>);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="737" refid="group__coap_1ga2410e973bf3192244426df346230608b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__observer" kindref="compound">coap_observer</ref><sp/>*<ref refid="group__coap_1ga2410e973bf3192244426df346230608b" kindref="member">coap_observer_next_unused</ref>(</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__observer" kindref="compound">coap_observer</ref><sp/>*observers,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="746" refid="group__coap_1gacfe30c84434dc8adbf3d399ec0e51bec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__coap_1gacfe30c84434dc8adbf3d399ec0e51bec" kindref="member">coap_reply_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__reply" kindref="compound">coap_reply</ref><sp/>*reply,</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*request);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="764" refid="group__coap_1gaa4a0ed5238edbd01a54a787f29bae1aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1gaa4a0ed5238edbd01a54a787f29bae1aa" kindref="member">coap_pending_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__pending" kindref="compound">coap_pending</ref><sp/>*pending,</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*request,</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*<ref refid="structcoap__observer_1a9b6f807a0fc5d141e0ee3dd9596c3c82" kindref="member">addr</ref>,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>retries);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="779" refid="group__coap_1ga800831ddfe19b1a5637a5edd9e78c470" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__pending" kindref="compound">coap_pending</ref><sp/>*<ref refid="group__coap_1ga800831ddfe19b1a5637a5edd9e78c470" kindref="member">coap_pending_next_unused</ref>(</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__pending" kindref="compound">coap_pending</ref><sp/>*pendings,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcoap__pending_1a4eb95f8fadef7d42aecdf25cc5ee3b1d" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="792" refid="group__coap_1ga65cb5f7ac01ea5ebe1c6e30a7c70ad4e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__reply" kindref="compound">coap_reply</ref><sp/>*<ref refid="group__coap_1ga65cb5f7ac01ea5ebe1c6e30a7c70ad4e" kindref="member">coap_reply_next_unused</ref>(</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__reply" kindref="compound">coap_reply</ref><sp/>*replies,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="808" refid="group__coap_1ga94ceba78cbd2440f91d9b30d6b06594d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__pending" kindref="compound">coap_pending</ref><sp/>*<ref refid="group__coap_1ga94ceba78cbd2440f91d9b30d6b06594d" kindref="member">coap_pending_received</ref>(</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*response,</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__pending" kindref="compound">coap_pending</ref><sp/>*pendings,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcoap__pending_1a4eb95f8fadef7d42aecdf25cc5ee3b1d" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="824" refid="group__coap_1ga3da23a809504025a24bf03daea3e606b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__reply" kindref="compound">coap_reply</ref><sp/>*<ref refid="group__coap_1ga3da23a809504025a24bf03daea3e606b" kindref="member">coap_response_received</ref>(</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*response,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*from,</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__reply" kindref="compound">coap_reply</ref><sp/>*replies,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="839" refid="group__coap_1ga9d63518c701ebdb4c7f65c5368d00d27" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__pending" kindref="compound">coap_pending</ref><sp/>*<ref refid="group__coap_1ga9d63518c701ebdb4c7f65c5368d00d27" kindref="member">coap_pending_next_to_expire</ref>(</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__pending" kindref="compound">coap_pending</ref><sp/>*pendings,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcoap__pending_1a4eb95f8fadef7d42aecdf25cc5ee3b1d" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="850" refid="group__coap_1ga2bcfc7340ed2347862b0f003e1b00a4b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga2bcfc7340ed2347862b0f003e1b00a4b" kindref="member">coap_pending_cycle</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__pending" kindref="compound">coap_pending</ref><sp/>*pending);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="858" refid="group__coap_1ga03287eb3187aa28e0e83e0e0c72e2631" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga03287eb3187aa28e0e83e0e0c72e2631" kindref="member">coap_pending_clear</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__pending" kindref="compound">coap_pending</ref><sp/>*pending);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="867" refid="group__coap_1ga6e0947048052e733a3571fdc8955b2d7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga6e0947048052e733a3571fdc8955b2d7" kindref="member">coap_pendings_clear</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__pending" kindref="compound">coap_pending</ref><sp/>*pendings,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcoap__pending_1a4eb95f8fadef7d42aecdf25cc5ee3b1d" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="875" refid="group__coap_1ga37b58c38c150751d31207ece416529d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga37b58c38c150751d31207ece416529d8" kindref="member">coap_reply_clear</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__reply" kindref="compound">coap_reply</ref><sp/>*reply);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="883" refid="group__coap_1gaddb02509934f5bac20b7c7f83aea4cd8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__coap_1gaddb02509934f5bac20b7c7f83aea4cd8" kindref="member">coap_replies_clear</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__reply" kindref="compound">coap_reply</ref><sp/>*replies,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcoap__pending_1a4eb95f8fadef7d42aecdf25cc5ee3b1d" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="893" refid="group__coap_1gad0c738d308f9cca8ea5cdb79449282cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__coap_1gad0c738d308f9cca8ea5cdb79449282cb" kindref="member">coap_resource_notify</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__resource" kindref="compound">coap_resource</ref><sp/>*resource);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="903" refid="group__coap_1ga46b315c30b642eec65bcb84e9c937ee7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__coap_1ga46b315c30b642eec65bcb84e9c937ee7" kindref="member">coap_request_is_observe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcoap__packet" kindref="compound">coap_packet</ref><sp/>*request);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_NET_COAP_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/net/coap.h"/>
  </compounddef>
</doxygen>
