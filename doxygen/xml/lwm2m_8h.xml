<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="lwm2m_8h" kind="file" language="C++">
    <compoundname>lwm2m.h</compoundname>
    <includes local="no">kernel.h</includes>
    <includes refid="mutex_8h" local="no">sys/mutex.h</includes>
    <includes refid="coap_8h" local="no">net/coap.h</includes>
    <includes refid="lwm2m__path_8h" local="no">net/lwm2m_path.h</includes>
    <incdepgraph>
      <node id="16">
        <label>net/coap.h</label>
        <link refid="coap_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/net/lwm2m.h</label>
        <link refid="lwm2m_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>net/lwm2m_path.h</label>
        <link refid="lwm2m__path_8h"/>
      </node>
      <node id="17">
        <label>net/net_ip.h</label>
        <link refid="net__ip_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>net/net_linkaddr.h</label>
        <link refid="net__linkaddr_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="20">
        <label>sys/byteorder.h</label>
        <link refid="byteorder_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sys/mutex.h</label>
        <link refid="mutex_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="10">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="8">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="9">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="18">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
      </node>
      <node id="23">
        <label>stdarg.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="14">
        <label>sys_clock.h</label>
      </node>
      <node id="28">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="15">
        <label>syscalls/mutex.h</label>
      </node>
      <node id="29">
        <label>syscalls/net_ip.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structlwm2m__obj__path" prot="public">lwm2m_obj_path</innerclass>
    <innerclass refid="structlwm2m__ctx" prot="public">lwm2m_ctx</innerclass>
    <innerclass refid="structlwm2m__objlnk" prot="public">lwm2m_objlnk</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__lwm2m__api_1ga785e4a647a2cf93194a249537223ab0f" prot="public" static="no">
        <name>LWM2M_OBJECT_SECURITY_ID</name>
        <initializer>0</initializer>
        <briefdescription>
<para>LwM2M Objects managed by OMA for LwM2M tech specification. Objects in this range have IDs from 0 to 1023. For more information refer to Technical Specification OMA-TS-LightweightM2M-V1_0_2-20180209-A. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="39" column="9" bodyfile="include/net/lwm2m.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gace7b2f0a1f97b6e99c0958a8382ca0d2" prot="public" static="no">
        <name>LWM2M_OBJECT_SERVER_ID</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="40" column="9" bodyfile="include/net/lwm2m.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gaa8387c8838f952c7c60602e2952c7f55" prot="public" static="no">
        <name>LWM2M_OBJECT_ACCESS_CONTROL_ID</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="41" column="9" bodyfile="include/net/lwm2m.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga699f585b320ab5b259d4fb2bda10eb78" prot="public" static="no">
        <name>LWM2M_OBJECT_DEVICE_ID</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="42" column="9" bodyfile="include/net/lwm2m.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga73db8616cc7dbbd04267d97a743b8ec0" prot="public" static="no">
        <name>LWM2M_OBJECT_CONNECTIVITY_MONITORING_ID</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="43" column="9" bodyfile="include/net/lwm2m.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga442cc51c7d0807a752ce4affe9221c5b" prot="public" static="no">
        <name>LWM2M_OBJECT_FIRMWARE_ID</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="44" column="9" bodyfile="include/net/lwm2m.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga1046ec68deab3d812d7e5921fb718028" prot="public" static="no">
        <name>LWM2M_OBJECT_LOCATION_ID</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="45" column="9" bodyfile="include/net/lwm2m.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gaa6c374c401dd36b6e121ac48c91ca9cf" prot="public" static="no">
        <name>LWM2M_OBJECT_CONNECTIVITY_STATISTICS_ID</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="46" column="9" bodyfile="include/net/lwm2m.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gac2d140b4a36d6010fe93bca443a658c0" prot="public" static="no">
        <name>LWM2M_OBJECT_SOFTWARE_MANAGEMENT_ID</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="47" column="9" bodyfile="include/net/lwm2m.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga3505e9ddcd54afe86e8bd5fbc03fb565" prot="public" static="no">
        <name>LWM2M_OBJECT_GATEWAY_ID</name>
        <initializer>25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="48" column="9" bodyfile="include/net/lwm2m.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gaeef485c23d306c93fc0f45dd58766ad9" prot="public" static="no">
        <name>IPSO_OBJECT_GENERIC_SENSOR_ID</name>
        <initializer>3300</initializer>
        <briefdescription>
<para>LwM2M Objects produced by 3rd party Standards Development Organizations. Objects in this range have IDs from 2048 to 10240 Refer to the OMA LightweightM2M (LwM2M) Object and Resource Registry: <ulink url="http://www.openmobilealliance.org/wp/OMNA/LwM2M/LwM2MRegistry.html">http://www.openmobilealliance.org/wp/OMNA/LwM2M/LwM2MRegistry.html</ulink>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="59" column="9" bodyfile="include/net/lwm2m.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga3b0c046d93c7bcee9d4da121dd574ff0" prot="public" static="no">
        <name>IPSO_OBJECT_TEMP_SENSOR_ID</name>
        <initializer>3303</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="60" column="9" bodyfile="include/net/lwm2m.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga8075d8b7eb3b4c98f621efef673bb11f" prot="public" static="no">
        <name>IPSO_OBJECT_HUMIDITY_SENSOR_ID</name>
        <initializer>3304</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="61" column="9" bodyfile="include/net/lwm2m.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga56ebac5260ee467b3763abe49ff3b8ff" prot="public" static="no">
        <name>IPSO_OBJECT_LIGHT_CONTROL_ID</name>
        <initializer>3311</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="62" column="9" bodyfile="include/net/lwm2m.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga0b3b9db806e5fe47cc08de34b5fb35fe" prot="public" static="no">
        <name>IPSO_OBJECT_ACCELEROMETER_ID</name>
        <initializer>3313</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="63" column="9" bodyfile="include/net/lwm2m.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gae511fd54112829e63c691776750893c2" prot="public" static="no">
        <name>IPSO_OBJECT_CURRENT_SENSOR_ID</name>
        <initializer>3317</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="64" column="9" bodyfile="include/net/lwm2m.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga752f81e91d0965a50ecfb0679bdea6ba" prot="public" static="no">
        <name>IPSO_OBJECT_PRESSURE_ID</name>
        <initializer>3323</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="65" column="9" bodyfile="include/net/lwm2m.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga15d664ddbfbf4d5b25dde34a5c650e6b" prot="public" static="no">
        <name>IPSO_OBJECT_BUZZER_ID</name>
        <initializer>3338</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="66" column="9" bodyfile="include/net/lwm2m.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga6c7bd5880fa22050748c2cb01981cbcb" prot="public" static="no">
        <name>IPSO_OBJECT_TIMER_ID</name>
        <initializer>3340</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="67" column="9" bodyfile="include/net/lwm2m.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga776a6a5e1eab3a8de0a39382f94b663a" prot="public" static="no">
        <name>IPSO_OBJECT_ONOFF_SWITCH_ID</name>
        <initializer>3342</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="68" column="9" bodyfile="include/net/lwm2m.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga6e3119bc8f0b9143ab384e82a5bccf7c" prot="public" static="no">
        <name>IPSO_OBJECT_PUSH_BUTTON_ID</name>
        <initializer>3347</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="69" column="9" bodyfile="include/net/lwm2m.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gacdd09a26ce52f36c644a89a8b89f7d32" prot="public" static="no">
        <name>UCIFI_OBJECT_BATTERY_ID</name>
        <initializer>3411</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="70" column="9" bodyfile="include/net/lwm2m.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga21f6bc6255f5f5ed28881fa797d026ca" prot="public" static="no">
        <name>IPSO_OBJECT_FILLING_LEVEL_SENSOR_ID</name>
        <initializer>3435</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="71" column="9" bodyfile="include/net/lwm2m.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gae154ca2e54ec7759dd43f2a7a275077e" prot="public" static="no">
        <name>LWM2M_DEVICE_PWR_SRC_TYPE_DC_POWER</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Power source types used for the &quot;Available Power Sources&quot; resource of the LwM2M Device object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="281" column="9" bodyfile="include/net/lwm2m.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga04ca8ac536eed7d411c1b1ea2b2a59ac" prot="public" static="no">
        <name>LWM2M_DEVICE_PWR_SRC_TYPE_BAT_INT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="282" column="9" bodyfile="include/net/lwm2m.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gaf12052f903a688712928d036b782f621" prot="public" static="no">
        <name>LWM2M_DEVICE_PWR_SRC_TYPE_BAT_EXT</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="283" column="9" bodyfile="include/net/lwm2m.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga19c783f9d43a20ff17d18a86c9f83613" prot="public" static="no">
        <name>LWM2M_DEVICE_PWR_SRC_TYPE_UNUSED</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="284" column="9" bodyfile="include/net/lwm2m.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga72352523996e61ea93caff0bb80c42ba" prot="public" static="no">
        <name>LWM2M_DEVICE_PWR_SRC_TYPE_PWR_OVER_ETH</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="285" column="9" bodyfile="include/net/lwm2m.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga4877877be75d3dd3c8f600b438b7ea8e" prot="public" static="no">
        <name>LWM2M_DEVICE_PWR_SRC_TYPE_USB</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="286" column="9" bodyfile="include/net/lwm2m.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga97b9d38ec402478f10642f1f83a4f88a" prot="public" static="no">
        <name>LWM2M_DEVICE_PWR_SRC_TYPE_AC_POWER</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="287" column="9" bodyfile="include/net/lwm2m.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gaa41ec1d2ca43e1385cfb11204aff729d" prot="public" static="no">
        <name>LWM2M_DEVICE_PWR_SRC_TYPE_SOLAR</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="288" column="9" bodyfile="include/net/lwm2m.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gae7a580aac1804abbcf3feb57a5a30a02" prot="public" static="no">
        <name>LWM2M_DEVICE_PWR_SRC_TYPE_MAX</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="289" column="9" bodyfile="include/net/lwm2m.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gad54ec75eb2843d5eed199ddedca6ef4f" prot="public" static="no">
        <name>LWM2M_DEVICE_ERROR_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Error codes used for the &quot;Error Code&quot; resource of the LwM2M Device object. An LwM2M client can register one of the following error codes via the <ref refid="group__lwm2m__api_1gabf8726f0438477863423947a7bb77ce2" kindref="member">lwm2m_device_add_err()</ref> function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="296" column="9" bodyfile="include/net/lwm2m.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga53a9ee1ae09dd32a8dc2df6018798f9f" prot="public" static="no">
        <name>LWM2M_DEVICE_ERROR_LOW_POWER</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="297" column="9" bodyfile="include/net/lwm2m.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga33152ea4ef497b02a12d1218d470a5a6" prot="public" static="no">
        <name>LWM2M_DEVICE_ERROR_EXT_POWER_SUPPLY_OFF</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="298" column="9" bodyfile="include/net/lwm2m.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga3c1b7693167ff517c5cbd7bbdbfd1ea0" prot="public" static="no">
        <name>LWM2M_DEVICE_ERROR_GPS_FAILURE</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="299" column="9" bodyfile="include/net/lwm2m.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga78048382d8bc85bbabbff58f0a9860f2" prot="public" static="no">
        <name>LWM2M_DEVICE_ERROR_LOW_SIGNAL_STRENGTH</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="300" column="9" bodyfile="include/net/lwm2m.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga94ce0177c066dd43ef660b85afc83485" prot="public" static="no">
        <name>LWM2M_DEVICE_ERROR_OUT_OF_MEMORY</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="301" column="9" bodyfile="include/net/lwm2m.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gabcb39cd3757ea60859984f6ad0df9e31" prot="public" static="no">
        <name>LWM2M_DEVICE_ERROR_SMS_FAILURE</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="302" column="9" bodyfile="include/net/lwm2m.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga2110d71a0c58087ff877e66b7500ba66" prot="public" static="no">
        <name>LWM2M_DEVICE_ERROR_NETWORK_FAILURE</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="303" column="9" bodyfile="include/net/lwm2m.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga77e6352eace8116576c880bf7e416ba3" prot="public" static="no">
        <name>LWM2M_DEVICE_ERROR_PERIPHERAL_FAILURE</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="304" column="9" bodyfile="include/net/lwm2m.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga4329c971f95f1c345381d1c864a9f334" prot="public" static="no">
        <name>LWM2M_DEVICE_BATTERY_STATUS_NORMAL</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Battery status codes used for the &quot;Battery Status&quot; resource (3/0/20) of the LwM2M Device object. As the battery status changes, an LwM2M client can set one of the following codes via: lwm2m_engine_set_u8(&quot;3/0/20&quot;, [battery status]) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="312" column="9" bodyfile="include/net/lwm2m.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gaf19da3a566782aeebebfb6ff110a9152" prot="public" static="no">
        <name>LWM2M_DEVICE_BATTERY_STATUS_CHARGING</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="313" column="9" bodyfile="include/net/lwm2m.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga5f7e88b52d8e6029467a2ed10585e6d4" prot="public" static="no">
        <name>LWM2M_DEVICE_BATTERY_STATUS_CHARGE_COMP</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="314" column="9" bodyfile="include/net/lwm2m.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gaa3f81df5e4d45838922eb20a15ee3153" prot="public" static="no">
        <name>LWM2M_DEVICE_BATTERY_STATUS_DAMAGED</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="315" column="9" bodyfile="include/net/lwm2m.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga578f6446ec1b70d2a32917abf1f5aad7" prot="public" static="no">
        <name>LWM2M_DEVICE_BATTERY_STATUS_LOW</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="316" column="9" bodyfile="include/net/lwm2m.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gacc3dfc99fc2cd9ef7048b1a0a0fd55c8" prot="public" static="no">
        <name>LWM2M_DEVICE_BATTERY_STATUS_NOT_INST</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="317" column="9" bodyfile="include/net/lwm2m.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga174e118b07982b87c6c083236b79c3b7" prot="public" static="no">
        <name>LWM2M_DEVICE_BATTERY_STATUS_UNKNOWN</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="318" column="9" bodyfile="include/net/lwm2m.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gaafff27c7165f059a969fe60fee51f683" prot="public" static="no">
        <name>STATE_IDLE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>LWM2M Firmware Update object states. </para>
        </briefdescription>
        <detaileddescription>
<para>An LwM2M client or the LwM2M Firmware Update object use the following codes to represent the LwM2M Firmware Update state (5/0/3). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="336" column="9" bodyfile="include/net/lwm2m.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gaeb34e88a0da4ac1274ae6b2cef010086" prot="public" static="no">
        <name>STATE_DOWNLOADING</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="337" column="9" bodyfile="include/net/lwm2m.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga009085120be71a28c1f6ebdaf7503365" prot="public" static="no">
        <name>STATE_DOWNLOADED</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="338" column="9" bodyfile="include/net/lwm2m.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gaac1dab8d1ac28bf13faeee39d1df47c5" prot="public" static="no">
        <name>STATE_UPDATING</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="339" column="9" bodyfile="include/net/lwm2m.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga391b47507468bbc1005903a56f80b1ea" prot="public" static="no">
        <name>RESULT_DEFAULT</name>
        <initializer>0</initializer>
        <briefdescription>
<para>LWM2M Firmware Update object result codes. </para>
        </briefdescription>
        <detaileddescription>
<para>After processing a firmware update, the client sets the result via one of the following codes via lwm2m_engine_set_u8(&quot;5/0/5&quot;, [result code]) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="347" column="9" bodyfile="include/net/lwm2m.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga7cc1753a05a0821f6c70dd2bccfbab5c" prot="public" static="no">
        <name>RESULT_SUCCESS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="348" column="9" bodyfile="include/net/lwm2m.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga829f7bc83b67dcf16ea4775addd87343" prot="public" static="no">
        <name>RESULT_NO_STORAGE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="349" column="9" bodyfile="include/net/lwm2m.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gab5446111a8969aa2c66dae49f04c93cf" prot="public" static="no">
        <name>RESULT_OUT_OF_MEM</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="350" column="9" bodyfile="include/net/lwm2m.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga0655ba8c402d8b6c8bbd84fb36447bd4" prot="public" static="no">
        <name>RESULT_CONNECTION_LOST</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="351" column="9" bodyfile="include/net/lwm2m.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gadfd0ac7b6a3fededa2b4471dfe52d3d2" prot="public" static="no">
        <name>RESULT_INTEGRITY_FAILED</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="352" column="9" bodyfile="include/net/lwm2m.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gab06dbfdac0c95f8100908a1177f3a62a" prot="public" static="no">
        <name>RESULT_UNSUP_FW</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="353" column="9" bodyfile="include/net/lwm2m.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga268204053d7e23737283523224699979" prot="public" static="no">
        <name>RESULT_INVALID_URI</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="354" column="9" bodyfile="include/net/lwm2m.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga2dfdd95c2c03ccca25d855b6d6f96ed3" prot="public" static="no">
        <name>RESULT_UPDATE_FAILED</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="355" column="9" bodyfile="include/net/lwm2m.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1gade3da37a44ee40292ec6344403db8d8d" prot="public" static="no">
        <name>RESULT_UNSUP_PROTO</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="356" column="9" bodyfile="include/net/lwm2m.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga34febb0c6fb1c68b0963a6e4dd721763" prot="public" static="no">
        <name>LWM2M_OBJLNK_MAX_ID</name>
        <initializer>USHRT_MAX</initializer>
        <briefdescription>
<para>Maximum value for ObjLnk resource fields. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="532" column="9" bodyfile="include/net/lwm2m.h" bodystart="532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga12c2e0af3d3fc6dd5785e08c0d831a67" prot="public" static="no">
        <name>LWM2M_RES_DATA_READ_ONLY</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Resource read-only value bit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="970" column="9" bodyfile="include/net/lwm2m.h" bodystart="970" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga1bfa5b7d83e3560828a1fb61a4d07355" prot="public" static="no">
        <name>LWM2M_RES_DATA_FLAG_RO</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(<ref refid="group__lwm2m__api_1ga12c2e0af3d3fc6dd5785e08c0d831a67" kindref="member">LWM2M_RES_DATA_READ_ONLY</ref>)</initializer>
        <briefdescription>
<para>Resource read-only flag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="975" column="9" bodyfile="include/net/lwm2m.h" bodystart="975" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga49f4117dfec8cd1abe9f827e235f55b0" prot="public" static="no">
        <name>LWM2M_HAS_RES_FLAG</name>
        <param><defname>res</defname></param>
        <param><defname>f</defname></param>
        <initializer>((res-&gt;data_flags &amp; <ref refid="kobject_8c_1a3f0aa88b120652713283bc005b1474ad" kindref="member">f</ref>) == <ref refid="kobject_8c_1a3f0aa88b120652713283bc005b1474ad" kindref="member">f</ref>)</initializer>
        <briefdescription>
<para>Read resource flags helper macro. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="980" column="9" bodyfile="include/net/lwm2m.h" bodystart="980" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga3a3669237762fa8c23686e5e00b7809f" prot="public" static="no">
        <name>LWM2M_RD_CLIENT_FLAG_BOOTSTRAP</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(0)</initializer>
        <briefdescription>
<para>Run bootstrap procedure in current session. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="1119" column="9" bodyfile="include/net/lwm2m.h" bodystart="1119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__api_1ga3dbd6db45f3db418087d5ee94568c88f" prot="public" static="no">
        <name>LWM2M_MAX_PATH_STR_LEN</name>
        <initializer>sizeof(&quot;65535/65535/65535/65535&quot;)</initializer>
        <briefdescription>
<para>LwM2M path maximum length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="1176" column="9" bodyfile="include/net/lwm2m.h" bodystart="1176" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__lwm2m__api_1gac8d63952ec94ca6cfb1dbe12a6c53bfb" prot="public" static="no" strong="no">
        <type></type>
        <name>lwm2m_observe_event</name>
        <enumvalue id="group__lwm2m__api_1ggac8d63952ec94ca6cfb1dbe12a6c53bfba22f4341d713417110d9866b0cbd318e3" prot="public">
          <name>LWM2M_OBSERVE_EVENT_OBSERVER_ADDED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__api_1ggac8d63952ec94ca6cfb1dbe12a6c53bfbae3f4af98b52ee191229c660748c7dd6c" prot="public">
          <name>LWM2M_OBSERVE_EVENT_OBSERVER_REMOVED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__api_1ggac8d63952ec94ca6cfb1dbe12a6c53bfbaab4e1cf0451ba926b90ea21152cac885" prot="public">
          <name>LWM2M_OBSERVE_EVENT_NOTIFY_ACK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__api_1ggac8d63952ec94ca6cfb1dbe12a6c53bfba55494fd6e76f585894e34dc9004fbc9e" prot="public">
          <name>LWM2M_OBSERVE_EVENT_NOTIFY_TIMEOUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Observe callback events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="87" column="1" bodyfile="include/net/lwm2m.h" bodystart="87" bodyend="92"/>
      </memberdef>
      <memberdef kind="enum" id="group__lwm2m__api_1gaca90ab8960a4ff01d44735dbc0405862" prot="public" static="no" strong="no">
        <type></type>
        <name>lwm2m_rd_client_event</name>
        <enumvalue id="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862aca4ebc8d550af02f1891eed1a7b1afcc" prot="public">
          <name>LWM2M_RD_CLIENT_EVENT_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862ac089b900494522de565e36d31ea3b0c4" prot="public">
          <name>LWM2M_RD_CLIENT_EVENT_BOOTSTRAP_REG_FAILURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862ac30dd8520e591c8e51c74ce1a53cd524" prot="public">
          <name>LWM2M_RD_CLIENT_EVENT_BOOTSTRAP_REG_COMPLETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a7c7c3115b6ff16dfa722b6b82c2cd1bc" prot="public">
          <name>LWM2M_RD_CLIENT_EVENT_BOOTSTRAP_TRANSFER_COMPLETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862ae89498cad338b1dc9cbd3b23838bf0b6" prot="public">
          <name>LWM2M_RD_CLIENT_EVENT_REGISTRATION_FAILURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a8994ea8c025cbbd56adcc050a7e86541" prot="public">
          <name>LWM2M_RD_CLIENT_EVENT_REGISTRATION_COMPLETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a22b4ca0087e2efd45b82bf81d42ee42d" prot="public">
          <name>LWM2M_RD_CLIENT_EVENT_REG_UPDATE_FAILURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a9f53175c5e935f061a83aa1fcfe9f683" prot="public">
          <name>LWM2M_RD_CLIENT_EVENT_REG_UPDATE_COMPLETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a32552b56152f9a714675fc6bba3b3d5f" prot="public">
          <name>LWM2M_RD_CLIENT_EVENT_DEREGISTER_FAILURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862ac6703e7d0809cc9cfcdd1cbd48e2318b" prot="public">
          <name>LWM2M_RD_CLIENT_EVENT_DISCONNECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a7c7853536c452da2f74e9f43a024fcbe" prot="public">
          <name>LWM2M_RD_CLIENT_EVENT_QUEUE_MODE_RX_OFF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862aff939a86c623ab8258c707361b95aef4" prot="public">
          <name>LWM2M_RD_CLIENT_EVENT_NETWORK_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>LwM2M RD client events. </para>
        </briefdescription>
        <detaileddescription>
<para>LwM2M client events are passed back to the event_cb function in <ref refid="group__lwm2m__api_1ga48d4fcf0409e85d4d35d717b26bdaf2c" kindref="member">lwm2m_rd_client_start()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="1097" column="1" bodyfile="include/net/lwm2m.h" bodystart="1097" bodyend="1110"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__lwm2m__api_1gae7bf50f9abf1b82b76ac3e9175e685ac" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* lwm2m_socket_fault_cb_t) (int error)</definition>
        <argsstring>)(int error)</argsstring>
        <name>lwm2m_socket_fault_cb_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="74" column="9" bodyfile="include/net/lwm2m.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__api_1gad7bea67e16e1e831e0f949dbf83d5afe" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* lwm2m_observe_cb_t) (enum lwm2m_observe_event event, struct lwm2m_obj_path *path, void *user_data)</definition>
        <argsstring>)(enum lwm2m_observe_event event, struct lwm2m_obj_path *path, void *user_data)</argsstring>
        <name>lwm2m_observe_cb_t</name>
        <briefdescription>
<para>Observe callback indicating observer adds and deletes, and notification ACKs and timeouts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Observer add/delete or notification ack/timeout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to user_data buffer, as provided in send_traceable_notification(). Used to determine for which data the ACKed/timed out notification was. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="104" column="9" bodyfile="include/net/lwm2m.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__api_1ga5e531aade0537eb5e3f5756e9287e384" prot="public" static="no">
        <type>void *(*</type>
        <definition>typedef void *(* lwm2m_engine_get_data_cb_t) (uint16_t obj_inst_id, uint16_t res_id, uint16_t res_inst_id, size_t *data_len)</definition>
        <argsstring>)(uint16_t obj_inst_id, uint16_t res_id, uint16_t res_inst_id, size_t *data_len)</argsstring>
        <name>lwm2m_engine_get_data_cb_t</name>
        <briefdescription>
<para>Asynchronous callback to get a resource buffer and length. </para>
        </briefdescription>
        <detaileddescription>
<para>Prior to accessing the data buffer of a resource, the engine can use this callback to get the buffer pointer and length instead of using the resource&apos;s data buffer.</para>
<para>The client or LwM2M objects can register a function of this type via: <ref refid="group__lwm2m__api_1ga21d15060cce1c039a11106d71d681f4c" kindref="member">lwm2m_engine_register_read_callback()</ref> <ref refid="group__lwm2m__api_1ga1354bc59163db5b3435e8e86c8feafd8" kindref="member">lwm2m_engine_register_pre_write_callback()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj_inst_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Object instance ID generating the callback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">res_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Resource ID generating the callback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">res_inst_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Resource instance ID generating the callback (typically 0 for non-multi instance resources). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Callback returns a pointer to the data buffer or NULL for failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="204" column="9" bodyfile="include/net/lwm2m.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__api_1ga02d8748f5b75e1f4344dd05def597ba9" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* lwm2m_engine_set_data_cb_t) (uint16_t obj_inst_id, uint16_t res_id, uint16_t res_inst_id, uint8_t *data, uint16_t data_len, bool last_block, size_t total_size)</definition>
        <argsstring>)(uint16_t obj_inst_id, uint16_t res_id, uint16_t res_inst_id, uint8_t *data, uint16_t data_len, bool last_block, size_t total_size)</argsstring>
        <name>lwm2m_engine_set_data_cb_t</name>
        <briefdescription>
<para>Asynchronous callback when data has been set to a resource buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>After changing the data of a resource buffer, the LwM2M engine can make use of this callback to pass the data back to the client or LwM2M objects.</para>
<para>A function of this type can be registered via: <ref refid="group__lwm2m__api_1gac1c92e1ee3a804b325aacfe116bad096" kindref="member">lwm2m_engine_register_validate_callback()</ref> <ref refid="group__lwm2m__api_1ga5c43bcdb0575f8c56354d6b4e30641a3" kindref="member">lwm2m_engine_register_post_write_callback()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj_inst_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Object instance ID generating the callback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">res_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Resource ID generating the callback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">res_inst_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Resource instance ID generating the callback (typically 0 for non-multi instance resources). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">last_block</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag used during block transfer to indicate the last block of data. For non-block transfers this is always false. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">total_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Expected total size of data for a block transfer. For non-block transfers this is 0.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Callback returns a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure or 0 for success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="235" column="9" bodyfile="include/net/lwm2m.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__api_1gabcbca483b310e0c4cd68aef2d9cda0bf" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* lwm2m_engine_user_cb_t) (uint16_t obj_inst_id)</definition>
        <argsstring>)(uint16_t obj_inst_id)</argsstring>
        <name>lwm2m_engine_user_cb_t</name>
        <briefdescription>
<para>Asynchronous event notification callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Various object instance and resource-based events in the LwM2M engine can trigger a callback of this function type: object instance create, and object instance delete.</para>
<para>Register a function of this type via: <ref refid="group__lwm2m__api_1gaa198bfb55f98183cbd33169468ae0bcc" kindref="member">lwm2m_engine_register_create_callback()</ref> <ref refid="group__lwm2m__api_1ga6a5dfdd29055bed245bf16ecc5829f95" kindref="member">lwm2m_engine_register_delete_callback()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj_inst_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Object instance ID generating the callback.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Callback returns a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure or 0 for success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="256" column="9" bodyfile="include/net/lwm2m.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__api_1gaeb32bcd4981b4c7bd891f99668ebc0fe" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* lwm2m_engine_execute_cb_t) (uint16_t obj_inst_id, uint8_t *args, uint16_t args_len)</definition>
        <argsstring>)(uint16_t obj_inst_id, uint8_t *args, uint16_t args_len)</argsstring>
        <name>lwm2m_engine_execute_cb_t</name>
        <briefdescription>
<para>Asynchronous execute notification callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Resource executes trigger a callback of this type.</para>
<para>Register a function of this type via: <ref refid="group__lwm2m__api_1gad213063b7e68bd7b4f3ce3de3736a237" kindref="member">lwm2m_engine_register_exec_callback()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj_inst_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Object instance ID generating the callback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to execute arguments payload. (This can be NULL if no arguments are provided) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">args_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of argument payload in bytes.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Callback returns a negative error code (<ref refid="errno_8h" kindref="compound">errno.h</ref>) indicating reason of failure or 0 for success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="274" column="9" bodyfile="include/net/lwm2m.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__api_1ga38dbaf038426efc75d889c4a0666dac9" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* lwm2m_ctx_event_cb_t) (struct lwm2m_ctx *ctx, enum lwm2m_rd_client_event event)</definition>
        <argsstring>)(struct lwm2m_ctx *ctx, enum lwm2m_rd_client_event event)</argsstring>
        <name>lwm2m_ctx_event_cb_t</name>
        <briefdescription>
<para>Asynchronous RD client event callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M context generating the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M RD client event code </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="1127" column="9" bodyfile="include/net/lwm2m.h" bodystart="1127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lwm2m__api_1gabf8726f0438477863423947a7bb77ce2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_device_add_err</definition>
        <argsstring>(uint8_t error_code)</argsstring>
        <name>lwm2m_device_add_err</name>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>error_code</declname>
        </param>
        <briefdescription>
<para>Register a new error code with LwM2M Device object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">error_code</parametername>
</parameternamelist>
<parameterdescription>
<para>New error code.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="327" column="5" declfile="include/net/lwm2m.h" declline="327" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga1fad6f6c3282679391266bdcb1471927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_update_observer_min_period</definition>
        <argsstring>(const char *pathstr, uint32_t period_s)</argsstring>
        <name>lwm2m_engine_update_observer_min_period</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>period_s</declname>
        </param>
        <briefdescription>
<para>Change an observer&apos;s pmin value. </para>
        </briefdescription>
        <detaileddescription>
<para>LwM2M clients use this function to modify the pmin attribute for an observation being made. Example to update the pmin of a temperature sensor value being observed: lwm2m_engine_update_observer_min_period(&quot;3303/0/5700&quot;,5);</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">period_s</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of pmin to be given (in seconds).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="555" column="5" declfile="include/net/lwm2m.h" declline="555" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga1bca884b976046adf194831014577583" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_update_observer_max_period</definition>
        <argsstring>(const char *pathstr, uint32_t period_s)</argsstring>
        <name>lwm2m_engine_update_observer_max_period</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>period_s</declname>
        </param>
        <briefdescription>
<para>Change an observer&apos;s pmax value. </para>
        </briefdescription>
        <detaileddescription>
<para>LwM2M clients use this function to modify the pmax attribute for an observation being made. Example to update the pmax of a temperature sensor value being observed: lwm2m_engine_update_observer_max_period(&quot;3303/0/5700&quot;,5);</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">period_s</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of pmax to be given (in seconds).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="570" column="5" declfile="include/net/lwm2m.h" declline="570" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga32f393a9e302f1f60839fd2147ebd7e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_create_obj_inst</definition>
        <argsstring>(const char *pathstr)</argsstring>
        <name>lwm2m_engine_create_obj_inst</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <briefdescription>
<para>Create an LwM2M object instance. </para>
        </briefdescription>
        <detaileddescription>
<para>LwM2M clients use this function to create non-default LwM2M objects: Example to create first temperature sensor object: lwm2m_engine_create_obj_inst(&quot;3303/0&quot;);</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst&quot;</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="583" column="5" declfile="include/net/lwm2m.h" declline="583" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga3849e960b54bcb089ac00476da8fb430" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_delete_obj_inst</definition>
        <argsstring>(const char *pathstr)</argsstring>
        <name>lwm2m_engine_delete_obj_inst</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <briefdescription>
<para>Delete an LwM2M object instance. </para>
        </briefdescription>
        <detaileddescription>
<para>LwM2M clients use this function to delete LwM2M objects.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst&quot;</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="594" column="5" declfile="include/net/lwm2m.h" declline="594" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga2ff02c8738567f3cb7bc265f53235a0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_set_opaque</definition>
        <argsstring>(const char *pathstr, char *data_ptr, uint16_t data_len)</argsstring>
        <name>lwm2m_engine_set_opaque</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>data_ptr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>data_len</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) value (opaque buffer) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Data buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="605" column="5" declfile="include/net/lwm2m.h" declline="605" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1gad1cbe96cd70958610f1285362e6e0a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_set_string</definition>
        <argsstring>(const char *pathstr, char *data_ptr)</argsstring>
        <name>lwm2m_engine_set_string</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>data_ptr</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) value (string) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>NULL terminated char buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="615" column="5" declfile="include/net/lwm2m.h" declline="615" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga00a61b227bae53a70b0092bb94801ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_set_u8</definition>
        <argsstring>(const char *pathstr, uint8_t value)</argsstring>
        <name>lwm2m_engine_set_u8</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) value (u8) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>u8 value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="625" column="5" declfile="include/net/lwm2m.h" declline="625" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga4fcea78d9506822ee76df465cf71ffdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_set_u16</definition>
        <argsstring>(const char *pathstr, uint16_t value)</argsstring>
        <name>lwm2m_engine_set_u16</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) value (u16) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>u16 value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="635" column="5" declfile="include/net/lwm2m.h" declline="635" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga326c722de4ecdcbc09adb52c83cf6400" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_set_u32</definition>
        <argsstring>(const char *pathstr, uint32_t value)</argsstring>
        <name>lwm2m_engine_set_u32</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) value (u32) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>u32 value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="645" column="5" declfile="include/net/lwm2m.h" declline="645" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga7d04c579284369233156a0597f09ab83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_set_u64</definition>
        <argsstring>(const char *pathstr, uint64_t value)</argsstring>
        <name>lwm2m_engine_set_u64</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) value (u64) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>u64 value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="655" column="5" declfile="include/net/lwm2m.h" declline="655" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1gae665c8bb81c0aef3b960b087ff0f97f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_set_s8</definition>
        <argsstring>(const char *pathstr, int8_t value)</argsstring>
        <name>lwm2m_engine_set_s8</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) value (s8) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>s8 value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="665" column="5" declfile="include/net/lwm2m.h" declline="665" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga1dd4952af0029c94a71f74734ae3a16c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_set_s16</definition>
        <argsstring>(const char *pathstr, int16_t value)</argsstring>
        <name>lwm2m_engine_set_s16</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1afe270aee8d96ad7f279a4020b9d58bdf" kindref="member">int16_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) value (s16) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>s16 value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="675" column="5" declfile="include/net/lwm2m.h" declline="675" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga4f45dc38b5e6a55633474ff5d5447ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_set_s32</definition>
        <argsstring>(const char *pathstr, int32_t value)</argsstring>
        <name>lwm2m_engine_set_s32</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) value (s32) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>s32 value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="685" column="5" declfile="include/net/lwm2m.h" declline="685" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga11619cc0907010018217b8d67e9e9f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_set_s64</definition>
        <argsstring>(const char *pathstr, int64_t value)</argsstring>
        <name>lwm2m_engine_set_s64</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) value (s64) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>s64 value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="695" column="5" declfile="include/net/lwm2m.h" declline="695" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga8c82346313a9bf1234f72d71a5db34f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_set_bool</definition>
        <argsstring>(const char *pathstr, bool value)</argsstring>
        <name>lwm2m_engine_set_bool</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) value (bool) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>bool value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="705" column="5" declfile="include/net/lwm2m.h" declline="705" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1gaa2ab787a41cc647058bcdce3be8ba96b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_set_float</definition>
        <argsstring>(const char *pathstr, double *value)</argsstring>
        <name>lwm2m_engine_set_float</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) value (double) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>double value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="715" column="5" declfile="include/net/lwm2m.h" declline="715" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga9b327039d3bb82579b586ade4b271d76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_set_objlnk</definition>
        <argsstring>(const char *pathstr, struct lwm2m_objlnk *value)</argsstring>
        <name>lwm2m_engine_set_objlnk</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type>struct <ref refid="structlwm2m__objlnk" kindref="compound">lwm2m_objlnk</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) value (ObjLnk) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the <ref refid="structlwm2m__objlnk" kindref="compound">lwm2m_objlnk</ref> structure</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="725" column="5" declfile="include/net/lwm2m.h" declline="725" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga3439a579648c15bfe8883337c4618095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_get_opaque</definition>
        <argsstring>(const char *pathstr, void *buf, uint16_t buflen)</argsstring>
        <name>lwm2m_engine_get_opaque</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>buflen</declname>
        </param>
        <briefdescription>
<para>Get resource (instance) value (opaque buffer) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Data buffer to copy data into </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buflen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="736" column="5" declfile="include/net/lwm2m.h" declline="736" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1gad206114e4521e7aa4286b167d0454365" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_get_string</definition>
        <argsstring>(const char *pathstr, void *str, uint16_t strlen)</argsstring>
        <name>lwm2m_engine_get_string</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>strlen</declname>
        </param>
        <briefdescription>
<para>Get resource (instance) value (string) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">str</parametername>
</parameternamelist>
<parameterdescription>
<para>String buffer to copy data into </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">strlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="747" column="5" declfile="include/net/lwm2m.h" declline="747" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga50ee578c777c7b8a1b0fbe028c8342ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_get_u8</definition>
        <argsstring>(const char *pathstr, uint8_t *value)</argsstring>
        <name>lwm2m_engine_get_u8</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get resource (instance) value (u8) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>u8 buffer to copy data into</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="757" column="5" declfile="include/net/lwm2m.h" declline="757" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga68986109d78b60f83f9cd85742ed80fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_get_u16</definition>
        <argsstring>(const char *pathstr, uint16_t *value)</argsstring>
        <name>lwm2m_engine_get_u16</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get resource (instance) value (u16) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>u16 buffer to copy data into</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="767" column="5" declfile="include/net/lwm2m.h" declline="767" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1gafddb717b3f43619e03a240660f65eb03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_get_u32</definition>
        <argsstring>(const char *pathstr, uint32_t *value)</argsstring>
        <name>lwm2m_engine_get_u32</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get resource (instance) value (u32) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>u32 buffer to copy data into</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="777" column="5" declfile="include/net/lwm2m.h" declline="777" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga8d9068217afe09b0930996e5796b8aac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_get_u64</definition>
        <argsstring>(const char *pathstr, uint64_t *value)</argsstring>
        <name>lwm2m_engine_get_u64</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get resource (instance) value (u64) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>u64 buffer to copy data into</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="787" column="5" declfile="include/net/lwm2m.h" declline="787" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga701d36c7b7a63c8214bfa30c0c19c946" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_get_s8</definition>
        <argsstring>(const char *pathstr, int8_t *value)</argsstring>
        <name>lwm2m_engine_get_s8</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get resource (instance) value (s8) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>s8 buffer to copy data into</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="797" column="5" declfile="include/net/lwm2m.h" declline="797" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga96f29e6d897b96fedc7f3e19bd906f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_get_s16</definition>
        <argsstring>(const char *pathstr, int16_t *value)</argsstring>
        <name>lwm2m_engine_get_s16</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1afe270aee8d96ad7f279a4020b9d58bdf" kindref="member">int16_t</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get resource (instance) value (s16) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>s16 buffer to copy data into</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="807" column="5" declfile="include/net/lwm2m.h" declline="807" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga40895289c1c8b778b6bf30d444dda63a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_get_s32</definition>
        <argsstring>(const char *pathstr, int32_t *value)</argsstring>
        <name>lwm2m_engine_get_s32</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get resource (instance) value (s32) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>s32 buffer to copy data into</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="817" column="5" declfile="include/net/lwm2m.h" declline="817" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga7ad1a482074d033ad1def72882efd245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_get_s64</definition>
        <argsstring>(const char *pathstr, int64_t *value)</argsstring>
        <name>lwm2m_engine_get_s64</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get resource (instance) value (s64) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>s64 buffer to copy data into</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="827" column="5" declfile="include/net/lwm2m.h" declline="827" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga606e281a1146f930d7c0675d5881c7d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_get_bool</definition>
        <argsstring>(const char *pathstr, bool *value)</argsstring>
        <name>lwm2m_engine_get_bool</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get resource (instance) value (bool) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>bool buffer to copy data into</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="837" column="5" declfile="include/net/lwm2m.h" declline="837" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga0a272643082347fe6044bddbd7e5cebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_get_float</definition>
        <argsstring>(const char *pathstr, double *buf)</argsstring>
        <name>lwm2m_engine_get_float</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Get resource (instance) value (double) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>double buffer to copy data into</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="847" column="5" declfile="include/net/lwm2m.h" declline="847" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1gaf4b23e412fcff5f2838f3e232a3cd224" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_get_objlnk</definition>
        <argsstring>(const char *pathstr, struct lwm2m_objlnk *buf)</argsstring>
        <name>lwm2m_engine_get_objlnk</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type>struct <ref refid="structlwm2m__objlnk" kindref="compound">lwm2m_objlnk</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Get resource (instance) value (ObjLnk) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buf</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structlwm2m__objlnk" kindref="compound">lwm2m_objlnk</ref> buffer to copy data into</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="857" column="5" declfile="include/net/lwm2m.h" declline="857" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga21d15060cce1c039a11106d71d681f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_register_read_callback</definition>
        <argsstring>(const char *pathstr, lwm2m_engine_get_data_cb_t cb)</argsstring>
        <name>lwm2m_engine_register_read_callback</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="group__lwm2m__api_1ga5e531aade0537eb5e3f5756e9287e384" kindref="member">lwm2m_engine_get_data_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) read callback. </para>
        </briefdescription>
        <detaileddescription>
<para>LwM2M clients can use this to set the callback function for resource reads.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Read resource callback</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="870" column="5" declfile="include/net/lwm2m.h" declline="870" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga1354bc59163db5b3435e8e86c8feafd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_register_pre_write_callback</definition>
        <argsstring>(const char *pathstr, lwm2m_engine_get_data_cb_t cb)</argsstring>
        <name>lwm2m_engine_register_pre_write_callback</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="group__lwm2m__api_1ga5e531aade0537eb5e3f5756e9287e384" kindref="member">lwm2m_engine_get_data_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) pre-write callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This callback is triggered before setting the value of a resource. It can pass a special data buffer to the engine so that the actual resource value can be calculated later, etc.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Pre-write resource callback</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="885" column="5" declfile="include/net/lwm2m.h" declline="885" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1gac1c92e1ee3a804b325aacfe116bad096" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_register_validate_callback</definition>
        <argsstring>(const char *pathstr, lwm2m_engine_set_data_cb_t cb)</argsstring>
        <name>lwm2m_engine_register_validate_callback</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="group__lwm2m__api_1ga02d8748f5b75e1f4344dd05def597ba9" kindref="member">lwm2m_engine_set_data_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) validation callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This callback is triggered before setting the value of a resource to the resource data buffer.</para>
<para>The callback allows an LwM2M client or object to validate the data before writing and notify an error if the data should be discarded for any reason (by returning a negative error code).</para>
<para><simplesect kind="note"><para>All resources that have a validation callback registered are initially decoded into a temporary validation buffer. Make sure that <computeroutput>CONFIG_LWM2M_ENGINE_VALIDATION_BUFFER_SIZE</computeroutput> is large enough to store each of the validated resources (individually).</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Validate resource data callback</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="908" column="5" declfile="include/net/lwm2m.h" declline="908" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga5c43bcdb0575f8c56354d6b4e30641a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_register_post_write_callback</definition>
        <argsstring>(const char *pathstr, lwm2m_engine_set_data_cb_t cb)</argsstring>
        <name>lwm2m_engine_register_post_write_callback</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="group__lwm2m__api_1ga02d8748f5b75e1f4344dd05def597ba9" kindref="member">lwm2m_engine_set_data_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Set resource (instance) post-write callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This callback is triggered after setting the value of a resource to the resource data buffer.</para>
<para>It allows an LwM2M client or object to post-process the value of a resource or trigger other related resource calculations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Post-write resource callback</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="925" column="5" declfile="include/net/lwm2m.h" declline="925" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1gad213063b7e68bd7b4f3ce3de3736a237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_register_exec_callback</definition>
        <argsstring>(const char *pathstr, lwm2m_engine_execute_cb_t cb)</argsstring>
        <name>lwm2m_engine_register_exec_callback</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type><ref refid="group__lwm2m__api_1gaeb32bcd4981b4c7bd891f99668ebc0fe" kindref="member">lwm2m_engine_execute_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Set resource execute event callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This event is triggered when the execute method of a resource is enabled.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Execute resource callback</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="938" column="5" declfile="include/net/lwm2m.h" declline="938" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1gaa198bfb55f98183cbd33169468ae0bcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_register_create_callback</definition>
        <argsstring>(uint16_t obj_id, lwm2m_engine_user_cb_t cb)</argsstring>
        <name>lwm2m_engine_register_create_callback</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type><ref refid="group__lwm2m__api_1gabcbca483b310e0c4cd68aef2d9cda0bf" kindref="member">lwm2m_engine_user_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Set object instance create event callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This event is triggered when an object instance is created.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj_id</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M object id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Create object instance callback</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="951" column="5" declfile="include/net/lwm2m.h" declline="951" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga6a5dfdd29055bed245bf16ecc5829f95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_register_delete_callback</definition>
        <argsstring>(uint16_t obj_id, lwm2m_engine_user_cb_t cb)</argsstring>
        <name>lwm2m_engine_register_delete_callback</name>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type><ref refid="group__lwm2m__api_1gabcbca483b310e0c4cd68aef2d9cda0bf" kindref="member">lwm2m_engine_user_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Set object instance delete event callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This event is triggered when an object instance is deleted.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj_id</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M object id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Delete object instance callback</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="964" column="5" declfile="include/net/lwm2m.h" declline="964" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1gabf56a29aec75675099df2d45ca802718" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_set_res_data</definition>
        <argsstring>(const char *pathstr, void *data_ptr, uint16_t data_len, uint8_t data_flags)</argsstring>
        <name>lwm2m_engine_set_res_data</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data_ptr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
          <declname>data_len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>data_flags</declname>
        </param>
        <briefdescription>
<para>Set data buffer for a resource. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this function to set the data buffer and flags for the specified LwM2M resource.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Data buffer pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Data buffer flags (such as read-only, etc)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="995" column="5" declfile="include/net/lwm2m.h" declline="995" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga630079a8d2f2acae1c313297cfdbada9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_get_res_data</definition>
        <argsstring>(const char *pathstr, void **data_ptr, uint16_t *data_len, uint8_t *data_flags)</argsstring>
        <name>lwm2m_engine_get_res_data</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>data_ptr</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref> *</type>
          <declname>data_len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>data_flags</declname>
        </param>
        <briefdescription>
<para>Get data buffer for a resource. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this function to get the data buffer information for the specified LwM2M resource.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res(/res-inst)&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Data buffer pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data_flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Data buffer flags (such as read-only, etc)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="1011" column="5" declfile="include/net/lwm2m.h" declline="1011" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga64b0427f36b6d2d2f8af8cc2e35cdb89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_create_res_inst</definition>
        <argsstring>(const char *pathstr)</argsstring>
        <name>lwm2m_engine_create_res_inst</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <briefdescription>
<para>Create a resource instance. </para>
        </briefdescription>
        <detaileddescription>
<para>LwM2M clients use this function to create multi-resource instances: Example to create 0 instance of device available power sources: lwm2m_engine_create_res_inst(&quot;3/0/6/0&quot;);</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res/res-inst&quot;</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="1025" column="5" declfile="include/net/lwm2m.h" declline="1025" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1gac188cd5fdd226dd105d73a4e391c601b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_delete_res_inst</definition>
        <argsstring>(const char *pathstr)</argsstring>
        <name>lwm2m_engine_delete_res_inst</name>
        <param>
          <type>const char *</type>
          <declname>pathstr</declname>
        </param>
        <briefdescription>
<para>Delete a resource instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this function to remove an existing resource instance</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathstr</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M path string &quot;obj/obj-inst/res/res-inst&quot;</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="1036" column="5" declfile="include/net/lwm2m.h" declline="1036" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga147f2abc69dfc9189a44f047840a049d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_update_service_period</definition>
        <argsstring>(k_work_handler_t service, uint32_t period_ms)</argsstring>
        <name>lwm2m_engine_update_service_period</name>
        <param>
          <type><ref refid="group__workqueue__apis_1ga5add9ef0dce306a08413c4140fc0bdda" kindref="member">k_work_handler_t</ref></type>
          <declname>service</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>period_ms</declname>
        </param>
        <briefdescription>
<para>Update the period of a given service. </para>
        </briefdescription>
        <detaileddescription>
<para>Allow the period modification on an existing service created with lwm2m_engine_add_service(). Example to frequency at which a periodic_service changes it&apos;s values : lwm2m_engine_update_service(device_periodic_service,5*MSEC_PER_SEC);</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">service</parametername>
</parameternamelist>
<parameterdescription>
<para>Handler of the periodic_service </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">period_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>New period for the periodic_service (in milliseconds)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="1051" column="5" declfile="include/net/lwm2m.h" declline="1051" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1gab45cebf6f0b6b70974367ca453d16aeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_update_device_service_period</definition>
        <argsstring>(uint32_t period_ms)</argsstring>
        <name>lwm2m_update_device_service_period</name>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>period_ms</declname>
        </param>
        <briefdescription>
<para>Update the period of the device service. </para>
        </briefdescription>
        <detaileddescription>
<para>Change the duration of the periodic device service that notifies the current time.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">period_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>New period for the device service (in milliseconds)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="1063" column="5" declfile="include/net/lwm2m.h" declline="1063" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga9f72fbd0163b15c48ea09cf7d511e444" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_engine_start</definition>
        <argsstring>(struct lwm2m_ctx *client_ctx)</argsstring>
        <name>lwm2m_engine_start</name>
        <param>
          <type>struct <ref refid="structlwm2m__ctx" kindref="compound">lwm2m_ctx</ref> *</type>
          <declname>client_ctx</declname>
        </param>
        <briefdescription>
<para>Start the LwM2M engine. </para>
        </briefdescription>
        <detaileddescription>
<para>LwM2M clients normally do not need to call this function as it is called by <ref refid="group__lwm2m__api_1ga48d4fcf0409e85d4d35d717b26bdaf2c" kindref="member">lwm2m_rd_client_start()</ref>. However, if the client does not use the RD client implementation, it will need to be called manually.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for success or negative in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="1076" column="5" declfile="include/net/lwm2m.h" declline="1076" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga919c7d6f418cda99c77fdaf54ae1a7b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_acknowledge</definition>
        <argsstring>(struct lwm2m_ctx *client_ctx)</argsstring>
        <name>lwm2m_acknowledge</name>
        <param>
          <type>struct <ref refid="structlwm2m__ctx" kindref="compound">lwm2m_ctx</ref> *</type>
          <declname>client_ctx</declname>
        </param>
        <briefdescription>
<para>Acknowledge the currently processed request with an empty ACK. </para>
        </briefdescription>
        <detaileddescription>
<para>LwM2M engine by default sends piggybacked responses for requests. This function allows to send an empty ACK for a request earlier (from the application callback). The LwM2M engine will then send the actual response as a separate CON message after all callbacks are executed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="1089" column="6" declfile="include/net/lwm2m.h" declline="1089" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga48d4fcf0409e85d4d35d717b26bdaf2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_rd_client_start</definition>
        <argsstring>(struct lwm2m_ctx *client_ctx, const char *ep_name, uint32_t flags, lwm2m_ctx_event_cb_t event_cb, lwm2m_observe_cb_t observe_cb)</argsstring>
        <name>lwm2m_rd_client_start</name>
        <param>
          <type>struct <ref refid="structlwm2m__ctx" kindref="compound">lwm2m_ctx</ref> *</type>
          <declname>client_ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ep_name</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="group__lwm2m__api_1ga38dbaf038426efc75d889c4a0666dac9" kindref="member">lwm2m_ctx_event_cb_t</ref></type>
          <declname>event_cb</declname>
        </param>
        <param>
          <type><ref refid="group__lwm2m__api_1gad7bea67e16e1e831e0f949dbf83d5afe" kindref="member">lwm2m_observe_cb_t</ref></type>
          <declname>observe_cb</declname>
        </param>
        <briefdescription>
<para>Start the LwM2M RD (Registration / Discovery) Client. </para>
        </briefdescription>
        <detaileddescription>
<para>The RD client sits just above the LwM2M engine and performs the necessary actions to implement the &quot;Registration interface&quot;. For more information see Section 5.3 &quot;Client Registration Interface&quot; of the LwM2M Technical Specification.</para>
<para>NOTE: <ref refid="group__lwm2m__api_1ga9f72fbd0163b15c48ea09cf7d511e444" kindref="member">lwm2m_engine_start()</ref> is called automatically by this function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ep_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Registered endpoint name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags used to configure current LwM2M session. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Client event callback function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">observe_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Observe callback function called when an observer was added or deleted, and when a notification was acked or has timed out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="1148" column="6" declfile="include/net/lwm2m.h" declline="1148" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga77f9c2d95fa3ab530811f09088fbc2e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_rd_client_stop</definition>
        <argsstring>(struct lwm2m_ctx *client_ctx, lwm2m_ctx_event_cb_t event_cb, bool deregister)</argsstring>
        <name>lwm2m_rd_client_stop</name>
        <param>
          <type>struct <ref refid="structlwm2m__ctx" kindref="compound">lwm2m_ctx</ref> *</type>
          <declname>client_ctx</declname>
        </param>
        <param>
          <type><ref refid="group__lwm2m__api_1ga38dbaf038426efc75d889c4a0666dac9" kindref="member">lwm2m_ctx_event_cb_t</ref></type>
          <declname>event_cb</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>deregister</declname>
        </param>
        <briefdescription>
<para>Stop the LwM2M RD (De-register) Client. </para>
        </briefdescription>
        <detaileddescription>
<para>The RD client sits just above the LwM2M engine and performs the necessary actions to implement the &quot;Registration interface&quot;. For more information see Section 5.3 &quot;Client Registration Interface&quot; of the LwM2M Technical Specification.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>LwM2M context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Client event callback function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">deregister</parametername>
</parameternamelist>
<parameterdescription>
<para>True to deregister the client if registered. False to force close the connection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="1165" column="6" declfile="include/net/lwm2m.h" declline="1165" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1gab4ec7a22d01259b6ba9d3a7b6681e6f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_rd_client_update</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_rd_client_update</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Trigger a Registration Update of the LwM2M RD Client. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="1171" column="6" declfile="include/net/lwm2m.h" declline="1171" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__api_1ga29b99da5a120ad1073710c3b2e78f14d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * lwm2m_path_log_strdup</definition>
        <argsstring>(char *buf, struct lwm2m_obj_path *path)</argsstring>
        <name>lwm2m_path_log_strdup</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>struct <ref refid="structlwm2m__obj__path" kindref="compound">lwm2m_obj_path</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Helper function to print path objects&apos; contents to log. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use for formatting the string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to stringify</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Resulting formatted path string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="1186" column="6" declfile="include/net/lwm2m.h" declline="1186" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017<sp/>Linaro<sp/>Limited</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017-2019<sp/>Foundries.io</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_NET_LWM2M_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_NET_LWM2M_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="mutex_8h" kindref="compound">sys/mutex.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="coap_8h" kindref="compound">net/coap.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lwm2m__path_8h" kindref="compound">net/lwm2m_path.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>clang-format<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="group__lwm2m__api_1ga785e4a647a2cf93194a249537223ab0f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OBJECT_SECURITY_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="group__lwm2m__api_1gace7b2f0a1f97b6e99c0958a8382ca0d2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OBJECT_SERVER_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="group__lwm2m__api_1gaa8387c8838f952c7c60602e2952c7f55" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OBJECT_ACCESS_CONTROL_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="group__lwm2m__api_1ga699f585b320ab5b259d4fb2bda10eb78" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OBJECT_DEVICE_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="group__lwm2m__api_1ga73db8616cc7dbbd04267d97a743b8ec0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OBJECT_CONNECTIVITY_MONITORING_ID<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="group__lwm2m__api_1ga442cc51c7d0807a752ce4affe9221c5b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OBJECT_FIRMWARE_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="group__lwm2m__api_1ga1046ec68deab3d812d7e5921fb718028" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OBJECT_LOCATION_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="group__lwm2m__api_1gaa6c374c401dd36b6e121ac48c91ca9cf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OBJECT_CONNECTIVITY_STATISTICS_ID<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group__lwm2m__api_1gac2d140b4a36d6010fe93bca443a658c0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OBJECT_SOFTWARE_MANAGEMENT_ID<sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group__lwm2m__api_1ga3505e9ddcd54afe86e8bd5fbc03fb565" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OBJECT_GATEWAY_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>clang-format<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>clang-format<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="group__lwm2m__api_1gaeef485c23d306c93fc0f45dd58766ad9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPSO_OBJECT_GENERIC_SENSOR_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3300</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="group__lwm2m__api_1ga3b0c046d93c7bcee9d4da121dd574ff0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPSO_OBJECT_TEMP_SENSOR_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3303</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group__lwm2m__api_1ga8075d8b7eb3b4c98f621efef673bb11f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPSO_OBJECT_HUMIDITY_SENSOR_ID<sp/><sp/><sp/><sp/><sp/><sp/>3304</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="group__lwm2m__api_1ga56ebac5260ee467b3763abe49ff3b8ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPSO_OBJECT_LIGHT_CONTROL_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3311</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group__lwm2m__api_1ga0b3b9db806e5fe47cc08de34b5fb35fe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPSO_OBJECT_ACCELEROMETER_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3313</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="group__lwm2m__api_1gae511fd54112829e63c691776750893c2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPSO_OBJECT_CURRENT_SENSOR_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3317</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group__lwm2m__api_1ga752f81e91d0965a50ecfb0679bdea6ba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPSO_OBJECT_PRESSURE_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3323</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group__lwm2m__api_1ga15d664ddbfbf4d5b25dde34a5c650e6b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPSO_OBJECT_BUZZER_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3338</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="group__lwm2m__api_1ga6c7bd5880fa22050748c2cb01981cbcb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPSO_OBJECT_TIMER_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3340</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="group__lwm2m__api_1ga776a6a5e1eab3a8de0a39382f94b663a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPSO_OBJECT_ONOFF_SWITCH_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3342</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="group__lwm2m__api_1ga6e3119bc8f0b9143ab384e82a5bccf7c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPSO_OBJECT_PUSH_BUTTON_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3347</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="group__lwm2m__api_1gacdd09a26ce52f36c644a89a8b89f7d32" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UCIFI_OBJECT_BATTERY_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3411</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="group__lwm2m__api_1ga21f6bc6255f5f5ed28881fa797d026ca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPSO_OBJECT_FILLING_LEVEL_SENSOR_ID<sp/>3435</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>clang-format<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="group__lwm2m__api_1gae7bf50f9abf1b82b76ac3e9175e685ac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__lwm2m__api_1gae7bf50f9abf1b82b76ac3e9175e685ac" kindref="member">lwm2m_socket_fault_cb_t</ref>)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="structlwm2m__obj__path" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__obj__path" kindref="compound">lwm2m_obj_path</ref><sp/>{</highlight></codeline>
<codeline lineno="77" refid="structlwm2m__obj__path_1ad1cf2b4f67b059e92853a05e2d070bb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structlwm2m__obj__path_1ad1cf2b4f67b059e92853a05e2d070bb7" kindref="member">obj_id</ref>;</highlight></codeline>
<codeline lineno="78" refid="structlwm2m__obj__path_1a7ae1a626b6f4b4c9cdc3e1a99d644ff2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structlwm2m__obj__path_1a7ae1a626b6f4b4c9cdc3e1a99d644ff2" kindref="member">obj_inst_id</ref>;</highlight></codeline>
<codeline lineno="79" refid="structlwm2m__obj__path_1ac52cc68142a270b4bab8edfc7cb8b106" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structlwm2m__obj__path_1ac52cc68142a270b4bab8edfc7cb8b106" kindref="member">res_id</ref>;</highlight></codeline>
<codeline lineno="80" refid="structlwm2m__obj__path_1a924d75187c05b64989b6eed69b563c29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structlwm2m__obj__path_1a924d75187c05b64989b6eed69b563c29" kindref="member">res_inst_id</ref>;</highlight></codeline>
<codeline lineno="81" refid="structlwm2m__obj__path_1aaeb8482037aa5d9b389236eb9f3e2984" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><ref refid="structlwm2m__obj__path_1aaeb8482037aa5d9b389236eb9f3e2984" kindref="member">level</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>0/1/2/3/4<sp/>(4<sp/>=<sp/>resource<sp/>instance)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="group__lwm2m__api_1gac8d63952ec94ca6cfb1dbe12a6c53bfb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gac8d63952ec94ca6cfb1dbe12a6c53bfb" kindref="member">lwm2m_observe_event</ref><sp/>{</highlight></codeline>
<codeline lineno="88" refid="group__lwm2m__api_1ggac8d63952ec94ca6cfb1dbe12a6c53bfba22f4341d713417110d9866b0cbd318e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ggac8d63952ec94ca6cfb1dbe12a6c53bfba22f4341d713417110d9866b0cbd318e3" kindref="member">LWM2M_OBSERVE_EVENT_OBSERVER_ADDED</ref>,</highlight></codeline>
<codeline lineno="89" refid="group__lwm2m__api_1ggac8d63952ec94ca6cfb1dbe12a6c53bfbae3f4af98b52ee191229c660748c7dd6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ggac8d63952ec94ca6cfb1dbe12a6c53bfbae3f4af98b52ee191229c660748c7dd6c" kindref="member">LWM2M_OBSERVE_EVENT_OBSERVER_REMOVED</ref>,</highlight></codeline>
<codeline lineno="90" refid="group__lwm2m__api_1ggac8d63952ec94ca6cfb1dbe12a6c53bfbaab4e1cf0451ba926b90ea21152cac885" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ggac8d63952ec94ca6cfb1dbe12a6c53bfbaab4e1cf0451ba926b90ea21152cac885" kindref="member">LWM2M_OBSERVE_EVENT_NOTIFY_ACK</ref>,</highlight></codeline>
<codeline lineno="91" refid="group__lwm2m__api_1ggac8d63952ec94ca6cfb1dbe12a6c53bfba55494fd6e76f585894e34dc9004fbc9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ggac8d63952ec94ca6cfb1dbe12a6c53bfba55494fd6e76f585894e34dc9004fbc9e" kindref="member">LWM2M_OBSERVE_EVENT_NOTIFY_TIMEOUT</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="group__lwm2m__api_1gad7bea67e16e1e831e0f949dbf83d5afe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__lwm2m__api_1gad7bea67e16e1e831e0f949dbf83d5afe" kindref="member">lwm2m_observe_cb_t</ref>)(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gac8d63952ec94ca6cfb1dbe12a6c53bfb" kindref="member">lwm2m_observe_event</ref><sp/>event,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__obj__path" kindref="compound">lwm2m_obj_path</ref><sp/>*path,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="timer_2timer__api_2src_2main_8c_1a862de962130decf51321624c10294338" kindref="member">user_data</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="structlwm2m__ctx" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__ctx" kindref="compound">lwm2m_ctx</ref><sp/>{</highlight></codeline>
<codeline lineno="113" refid="structlwm2m__ctx_1a4ed594ecc5d442ffc2a604a879f5bfb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/><ref refid="structlwm2m__ctx_1a4ed594ecc5d442ffc2a604a879f5bfb7" kindref="member">remote_addr</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="structlwm2m__ctx_1a6f4fbf144720a12146b6aef4f7a52c61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__pending" kindref="compound">coap_pending</ref><sp/><ref refid="structlwm2m__ctx_1a6f4fbf144720a12146b6aef4f7a52c61" kindref="member">pendings</ref>[CONFIG_LWM2M_ENGINE_MAX_PENDING];</highlight></codeline>
<codeline lineno="117" refid="structlwm2m__ctx_1a05cbe7788de439e2a0d9ae878f461a40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcoap__reply" kindref="compound">coap_reply</ref><sp/><ref refid="structlwm2m__ctx_1a05cbe7788de439e2a0d9ae878f461a40" kindref="member">replies</ref>[CONFIG_LWM2M_ENGINE_MAX_REPLIES];</highlight></codeline>
<codeline lineno="118" refid="structlwm2m__ctx_1afe06655401b4820e9d2cb5f12aefe0a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="slist_8h_1a44658c336b634c03938a251cdc8134f8" kindref="member">sys_slist_t</ref><sp/><ref refid="structlwm2m__ctx_1afe06655401b4820e9d2cb5f12aefe0a3" kindref="member">pending_sends</ref>;</highlight></codeline>
<codeline lineno="119" refid="structlwm2m__ctx_1a2501bb0908c67a77fc31cf5d35811967" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="slist_8h_1a44658c336b634c03938a251cdc8134f8" kindref="member">sys_slist_t</ref><sp/><ref refid="structlwm2m__ctx_1a2501bb0908c67a77fc31cf5d35811967" kindref="member">observer</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="structlwm2m__ctx_1a9b56ad9b3f2202d25b8c48f34a898dd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structlwm2m__ctx_1a9b56ad9b3f2202d25b8c48f34a898dd3" kindref="member">processed_req</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_LWM2M_DTLS_SUPPORT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tls_tag;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*desthostname;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>desthostnamelen;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*load_credentials)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__ctx" kindref="compound">lwm2m_ctx</ref><sp/>*client_ctx);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="structlwm2m__ctx_1aeb1e3ffc83853f74f2201f582917c2ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__ctx_1aeb1e3ffc83853f74f2201f582917c2ce" kindref="member">use_dtls</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="structlwm2m__ctx_1ab5fe85963a265f9c059a25138a637e02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__ctx_1ab5fe85963a265f9c059a25138a637e02" kindref="member">sec_obj_inst</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="structlwm2m__ctx_1a76d92a14bf1729d7b0fee174c51ed4bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__ctx_1a76d92a14bf1729d7b0fee174c51ed4bf" kindref="member">srv_obj_inst</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="structlwm2m__ctx_1aafa787c2b7ea7599c51d9247ea9f1090" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__ctx_1aafa787c2b7ea7599c51d9247ea9f1090" kindref="member">bootstrap_mode</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="structlwm2m__ctx_1afed1a599a72f131e4f196848c3e6fe85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__ctx_1afed1a599a72f131e4f196848c3e6fe85" kindref="member">sock_fd</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="structlwm2m__ctx_1a1b90780926f3cda2d48dfa8f94b1efd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1gae7bf50f9abf1b82b76ac3e9175e685ac" kindref="member">lwm2m_socket_fault_cb_t</ref><sp/><ref refid="structlwm2m__ctx_1a1b90780926f3cda2d48dfa8f94b1efd8" kindref="member">fault_cb</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="structlwm2m__ctx_1a412bd706adcd17ec8c00f1779012a845" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1gad7bea67e16e1e831e0f949dbf83d5afe" kindref="member">lwm2m_observe_cb_t</ref><sp/><ref refid="structlwm2m__ctx_1a412bd706adcd17ec8c00f1779012a845" kindref="member">observe_cb</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="structlwm2m__ctx_1a574b50b9ec4cdfb5fac53a9b6d8c31d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structlwm2m__ctx_1a574b50b9ec4cdfb5fac53a9b6d8c31d5" kindref="member">validate_buf</ref>[CONFIG_LWM2M_ENGINE_VALIDATION_BUFFER_SIZE];</highlight></codeline>
<codeline lineno="182"><highlight class="normal">};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="group__lwm2m__api_1ga5e531aade0537eb5e3f5756e9287e384" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*lwm2m_engine_get_data_cb_t)(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_inst_id,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>res_id,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>res_inst_id,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*data_len);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="group__lwm2m__api_1ga02d8748f5b75e1f4344dd05def597ba9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__lwm2m__api_1ga02d8748f5b75e1f4344dd05def597ba9" kindref="member">lwm2m_engine_set_data_cb_t</ref>)(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_inst_id,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>res_id,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>res_inst_id,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>data_len,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>last_block,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total_size);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="group__lwm2m__api_1gabcbca483b310e0c4cd68aef2d9cda0bf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__lwm2m__api_1gabcbca483b310e0c4cd68aef2d9cda0bf" kindref="member">lwm2m_engine_user_cb_t</ref>)(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_inst_id);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="group__lwm2m__api_1gaeb32bcd4981b4c7bd891f99668ebc0fe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__lwm2m__api_1gaeb32bcd4981b4c7bd891f99668ebc0fe" kindref="member">lwm2m_engine_execute_cb_t</ref>)(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_inst_id,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*args,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>args_len);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="group__lwm2m__api_1gae154ca2e54ec7759dd43f2a7a275077e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_PWR_SRC_TYPE_DC_POWER<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="group__lwm2m__api_1ga04ca8ac536eed7d411c1b1ea2b2a59ac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_PWR_SRC_TYPE_BAT_INT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="group__lwm2m__api_1gaf12052f903a688712928d036b782f621" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_PWR_SRC_TYPE_BAT_EXT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="group__lwm2m__api_1ga19c783f9d43a20ff17d18a86c9f83613" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_PWR_SRC_TYPE_UNUSED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="group__lwm2m__api_1ga72352523996e61ea93caff0bb80c42ba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_PWR_SRC_TYPE_PWR_OVER_ETH<sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="group__lwm2m__api_1ga4877877be75d3dd3c8f600b438b7ea8e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_PWR_SRC_TYPE_USB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="group__lwm2m__api_1ga97b9d38ec402478f10642f1f83a4f88a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_PWR_SRC_TYPE_AC_POWER<sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="group__lwm2m__api_1gaa41ec1d2ca43e1385cfb11204aff729d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_PWR_SRC_TYPE_SOLAR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="group__lwm2m__api_1gae7a580aac1804abbcf3feb57a5a30a02" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_PWR_SRC_TYPE_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="group__lwm2m__api_1gad54ec75eb2843d5eed199ddedca6ef4f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_ERROR_NONE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="group__lwm2m__api_1ga53a9ee1ae09dd32a8dc2df6018798f9f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_ERROR_LOW_POWER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="group__lwm2m__api_1ga33152ea4ef497b02a12d1218d470a5a6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_ERROR_EXT_POWER_SUPPLY_OFF<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="group__lwm2m__api_1ga3c1b7693167ff517c5cbd7bbdbfd1ea0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_ERROR_GPS_FAILURE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="group__lwm2m__api_1ga78048382d8bc85bbabbff58f0a9860f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_ERROR_LOW_SIGNAL_STRENGTH<sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="group__lwm2m__api_1ga94ce0177c066dd43ef660b85afc83485" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_ERROR_OUT_OF_MEMORY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="group__lwm2m__api_1gabcb39cd3757ea60859984f6ad0df9e31" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_ERROR_SMS_FAILURE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="group__lwm2m__api_1ga2110d71a0c58087ff877e66b7500ba66" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_ERROR_NETWORK_FAILURE<sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="group__lwm2m__api_1ga77e6352eace8116576c880bf7e416ba3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_ERROR_PERIPHERAL_FAILURE<sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="group__lwm2m__api_1ga4329c971f95f1c345381d1c864a9f334" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_BATTERY_STATUS_NORMAL<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="group__lwm2m__api_1gaf19da3a566782aeebebfb6ff110a9152" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_BATTERY_STATUS_CHARGING<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="group__lwm2m__api_1ga5f7e88b52d8e6029467a2ed10585e6d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_BATTERY_STATUS_CHARGE_COMP<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="group__lwm2m__api_1gaa3f81df5e4d45838922eb20a15ee3153" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_BATTERY_STATUS_DAMAGED<sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="group__lwm2m__api_1ga578f6446ec1b70d2a32917abf1f5aad7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_BATTERY_STATUS_LOW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="group__lwm2m__api_1gacc3dfc99fc2cd9ef7048b1a0a0fd55c8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_BATTERY_STATUS_NOT_INST<sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="group__lwm2m__api_1ga174e118b07982b87c6c083236b79c3b7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DEVICE_BATTERY_STATUS_UNKNOWN<sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="group__lwm2m__api_1gabf8726f0438477863423947a7bb77ce2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gabf8726f0438477863423947a7bb77ce2" kindref="member">lwm2m_device_add_err</ref>(<ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>error_code);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="group__lwm2m__api_1gaafff27c7165f059a969fe60fee51f683" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STATE_IDLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="group__lwm2m__api_1gaeb34e88a0da4ac1274ae6b2cef010086" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STATE_DOWNLOADING<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="group__lwm2m__api_1ga009085120be71a28c1f6ebdaf7503365" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STATE_DOWNLOADED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="group__lwm2m__api_1gaac1dab8d1ac28bf13faeee39d1df47c5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STATE_UPDATING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="group__lwm2m__api_1ga391b47507468bbc1005903a56f80b1ea" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESULT_DEFAULT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="group__lwm2m__api_1ga7cc1753a05a0821f6c70dd2bccfbab5c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESULT_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="group__lwm2m__api_1ga829f7bc83b67dcf16ea4775addd87343" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESULT_NO_STORAGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="group__lwm2m__api_1gab5446111a8969aa2c66dae49f04c93cf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESULT_OUT_OF_MEM<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="group__lwm2m__api_1ga0655ba8c402d8b6c8bbd84fb36447bd4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESULT_CONNECTION_LOST<sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="group__lwm2m__api_1gadfd0ac7b6a3fededa2b4471dfe52d3d2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESULT_INTEGRITY_FAILED<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="group__lwm2m__api_1gab06dbfdac0c95f8100908a1177f3a62a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESULT_UNSUP_FW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="group__lwm2m__api_1ga268204053d7e23737283523224699979" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESULT_INVALID_URI<sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="group__lwm2m__api_1ga2dfdd95c2c03ccca25d855b6d6f96ed3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESULT_UPDATE_FAILED<sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="group__lwm2m__api_1gade3da37a44ee40292ec6344403db8d8d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESULT_UNSUP_PROTO<sp/><sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_LWM2M_FIRMWARE_UPDATE_OBJ_SUPPORT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lwm2m_firmware_set_write_cb(<ref refid="group__lwm2m__api_1ga02d8748f5b75e1f4344dd05def597ba9" kindref="member">lwm2m_engine_set_data_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><ref refid="group__lwm2m__api_1ga02d8748f5b75e1f4344dd05def597ba9" kindref="member">lwm2m_engine_set_data_cb_t</ref><sp/>lwm2m_firmware_get_write_cb(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lwm2m_firmware_set_write_cb_inst(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_inst_id,<sp/><ref refid="group__lwm2m__api_1ga02d8748f5b75e1f4344dd05def597ba9" kindref="member">lwm2m_engine_set_data_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><ref refid="group__lwm2m__api_1ga02d8748f5b75e1f4344dd05def597ba9" kindref="member">lwm2m_engine_set_data_cb_t</ref><sp/>lwm2m_firmware_get_write_cb_inst(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_inst_id);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_LWM2M_FIRMWARE_UPDATE_PULL_SUPPORT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lwm2m_firmware_set_update_cb(<ref refid="group__lwm2m__api_1gaeb32bcd4981b4c7bd891f99668ebc0fe" kindref="member">lwm2m_engine_execute_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><ref refid="group__lwm2m__api_1gaeb32bcd4981b4c7bd891f99668ebc0fe" kindref="member">lwm2m_engine_execute_cb_t</ref><sp/>lwm2m_firmware_get_update_cb(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lwm2m_firmware_set_update_cb_inst(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_inst_id,<sp/><ref refid="group__lwm2m__api_1gaeb32bcd4981b4c7bd891f99668ebc0fe" kindref="member">lwm2m_engine_execute_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><ref refid="group__lwm2m__api_1gaeb32bcd4981b4c7bd891f99668ebc0fe" kindref="member">lwm2m_engine_execute_cb_t</ref><sp/>lwm2m_firmware_get_update_cb_inst(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_inst_id);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_LWM2M_SWMGMT_OBJ_SUPPORT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lwm2m_swmgmt_set_activate_cb(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_inst_id,<sp/><ref refid="group__lwm2m__api_1gaeb32bcd4981b4c7bd891f99668ebc0fe" kindref="member">lwm2m_engine_execute_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lwm2m_swmgmt_set_deactivate_cb(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_inst_id,<sp/><ref refid="group__lwm2m__api_1gaeb32bcd4981b4c7bd891f99668ebc0fe" kindref="member">lwm2m_engine_execute_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lwm2m_swmgmt_set_install_package_cb(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_inst_id,<sp/><ref refid="group__lwm2m__api_1gaeb32bcd4981b4c7bd891f99668ebc0fe" kindref="member">lwm2m_engine_execute_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lwm2m_swmgmt_set_delete_package_cb(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_inst_id,<sp/><ref refid="group__lwm2m__api_1gaeb32bcd4981b4c7bd891f99668ebc0fe" kindref="member">lwm2m_engine_execute_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lwm2m_swmgmt_set_read_package_version_cb(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_inst_id,<sp/><ref refid="group__lwm2m__api_1ga5e531aade0537eb5e3f5756e9287e384" kindref="member">lwm2m_engine_get_data_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lwm2m_swmgmt_set_write_package_cb(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_inst_id,<sp/><ref refid="group__lwm2m__api_1ga02d8748f5b75e1f4344dd05def597ba9" kindref="member">lwm2m_engine_set_data_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lwm2m_swmgmt_install_completed(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_inst_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error_code);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="group__lwm2m__api_1ga34febb0c6fb1c68b0963a6e4dd721763" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OBJLNK_MAX_ID<sp/>USHRT_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="537" refid="structlwm2m__objlnk" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__objlnk" kindref="compound">lwm2m_objlnk</ref><sp/>{</highlight></codeline>
<codeline lineno="538" refid="structlwm2m__objlnk_1a67193c8612b3a3d2a6a9685f7d1a0053" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structlwm2m__objlnk_1a67193c8612b3a3d2a6a9685f7d1a0053" kindref="member">obj_id</ref>;</highlight></codeline>
<codeline lineno="539" refid="structlwm2m__objlnk_1aa51649798b00bc0bb9887c9739b83d27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structlwm2m__objlnk_1aa51649798b00bc0bb9887c9739b83d27" kindref="member">obj_inst</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal">};</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="555" refid="group__lwm2m__api_1ga1fad6f6c3282679391266bdcb1471927" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga1fad6f6c3282679391266bdcb1471927" kindref="member">lwm2m_engine_update_observer_min_period</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>period_s);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="570" refid="group__lwm2m__api_1ga1bca884b976046adf194831014577583" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga1bca884b976046adf194831014577583" kindref="member">lwm2m_engine_update_observer_max_period</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>period_s);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="583" refid="group__lwm2m__api_1ga32f393a9e302f1f60839fd2147ebd7e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga32f393a9e302f1f60839fd2147ebd7e9" kindref="member">lwm2m_engine_create_obj_inst</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="group__lwm2m__api_1ga3849e960b54bcb089ac00476da8fb430" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga3849e960b54bcb089ac00476da8fb430" kindref="member">lwm2m_engine_delete_obj_inst</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="605" refid="group__lwm2m__api_1ga2ff02c8738567f3cb7bc265f53235a0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga2ff02c8738567f3cb7bc265f53235a0d" kindref="member">lwm2m_engine_set_opaque</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data_ptr,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>data_len);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="615" refid="group__lwm2m__api_1gad1cbe96cd70958610f1285362e6e0a89" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gad1cbe96cd70958610f1285362e6e0a89" kindref="member">lwm2m_engine_set_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data_ptr);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="625" refid="group__lwm2m__api_1ga00a61b227bae53a70b0092bb94801ea8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga00a61b227bae53a70b0092bb94801ea8" kindref="member">lwm2m_engine_set_u8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="635" refid="group__lwm2m__api_1ga4fcea78d9506822ee76df465cf71ffdf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga4fcea78d9506822ee76df465cf71ffdf" kindref="member">lwm2m_engine_set_u16</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="group__lwm2m__api_1ga326c722de4ecdcbc09adb52c83cf6400" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga326c722de4ecdcbc09adb52c83cf6400" kindref="member">lwm2m_engine_set_u32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="655" refid="group__lwm2m__api_1ga7d04c579284369233156a0597f09ab83" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga7d04c579284369233156a0597f09ab83" kindref="member">lwm2m_engine_set_u64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="665" refid="group__lwm2m__api_1gae665c8bb81c0aef3b960b087ff0f97f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gae665c8bb81c0aef3b960b087ff0f97f8" kindref="member">lwm2m_engine_set_s8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="675" refid="group__lwm2m__api_1ga1dd4952af0029c94a71f74734ae3a16c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga1dd4952af0029c94a71f74734ae3a16c" kindref="member">lwm2m_engine_set_s16</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1afe270aee8d96ad7f279a4020b9d58bdf" kindref="member">int16_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="685" refid="group__lwm2m__api_1ga4f45dc38b5e6a55633474ff5d5447ecb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga4f45dc38b5e6a55633474ff5d5447ecb" kindref="member">lwm2m_engine_set_s32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="695" refid="group__lwm2m__api_1ga11619cc0907010018217b8d67e9e9f7e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga11619cc0907010018217b8d67e9e9f7e" kindref="member">lwm2m_engine_set_s64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref><sp/>value);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="705" refid="group__lwm2m__api_1ga8c82346313a9bf1234f72d71a5db34f5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga8c82346313a9bf1234f72d71a5db34f5" kindref="member">lwm2m_engine_set_bool</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="715" refid="group__lwm2m__api_1gaa2ab787a41cc647058bcdce3be8ba96b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gaa2ab787a41cc647058bcdce3be8ba96b" kindref="member">lwm2m_engine_set_float</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*value);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="725" refid="group__lwm2m__api_1ga9b327039d3bb82579b586ade4b271d76" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga9b327039d3bb82579b586ade4b271d76" kindref="member">lwm2m_engine_set_objlnk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__objlnk" kindref="compound">lwm2m_objlnk</ref><sp/>*value);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="736" refid="group__lwm2m__api_1ga3439a579648c15bfe8883337c4618095" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga3439a579648c15bfe8883337c4618095" kindref="member">lwm2m_engine_get_opaque</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>buflen);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="747" refid="group__lwm2m__api_1gad206114e4521e7aa4286b167d0454365" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gad206114e4521e7aa4286b167d0454365" kindref="member">lwm2m_engine_get_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="string_8h_1aa383452fe445bfae989358c9d7d96f4f" kindref="member">strlen</ref>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="757" refid="group__lwm2m__api_1ga50ee578c777c7b8a1b0fbe028c8342ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga50ee578c777c7b8a1b0fbe028c8342ec" kindref="member">lwm2m_engine_get_u8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*value);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="767" refid="group__lwm2m__api_1ga68986109d78b60f83f9cd85742ed80fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga68986109d78b60f83f9cd85742ed80fb" kindref="member">lwm2m_engine_get_u16</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>*value);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="777" refid="group__lwm2m__api_1gafddb717b3f43619e03a240660f65eb03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gafddb717b3f43619e03a240660f65eb03" kindref="member">lwm2m_engine_get_u32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>*value);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="787" refid="group__lwm2m__api_1ga8d9068217afe09b0930996e5796b8aac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga8d9068217afe09b0930996e5796b8aac" kindref="member">lwm2m_engine_get_u64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/>*value);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="797" refid="group__lwm2m__api_1ga701d36c7b7a63c8214bfa30c0c19c946" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga701d36c7b7a63c8214bfa30c0c19c946" kindref="member">lwm2m_engine_get_s8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref><sp/>*value);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="807" refid="group__lwm2m__api_1ga96f29e6d897b96fedc7f3e19bd906f7c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga96f29e6d897b96fedc7f3e19bd906f7c" kindref="member">lwm2m_engine_get_s16</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1afe270aee8d96ad7f279a4020b9d58bdf" kindref="member">int16_t</ref><sp/>*value);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="817" refid="group__lwm2m__api_1ga40895289c1c8b778b6bf30d444dda63a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga40895289c1c8b778b6bf30d444dda63a" kindref="member">lwm2m_engine_get_s32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>*value);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="827" refid="group__lwm2m__api_1ga7ad1a482074d033ad1def72882efd245" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga7ad1a482074d033ad1def72882efd245" kindref="member">lwm2m_engine_get_s64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/><ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref><sp/>*value);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="837" refid="group__lwm2m__api_1ga606e281a1146f930d7c0675d5881c7d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga606e281a1146f930d7c0675d5881c7d6" kindref="member">lwm2m_engine_get_bool</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*value);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="847" refid="group__lwm2m__api_1ga0a272643082347fe6044bddbd7e5cebf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga0a272643082347fe6044bddbd7e5cebf" kindref="member">lwm2m_engine_get_float</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*buf);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="857" refid="group__lwm2m__api_1gaf4b23e412fcff5f2838f3e232a3cd224" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gaf4b23e412fcff5f2838f3e232a3cd224" kindref="member">lwm2m_engine_get_objlnk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__objlnk" kindref="compound">lwm2m_objlnk</ref><sp/>*buf);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="870" refid="group__lwm2m__api_1ga21d15060cce1c039a11106d71d681f4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga21d15060cce1c039a11106d71d681f4c" kindref="member">lwm2m_engine_register_read_callback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ga5e531aade0537eb5e3f5756e9287e384" kindref="member">lwm2m_engine_get_data_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="885" refid="group__lwm2m__api_1ga1354bc59163db5b3435e8e86c8feafd8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga1354bc59163db5b3435e8e86c8feafd8" kindref="member">lwm2m_engine_register_pre_write_callback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ga5e531aade0537eb5e3f5756e9287e384" kindref="member">lwm2m_engine_get_data_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="908" refid="group__lwm2m__api_1gac1c92e1ee3a804b325aacfe116bad096" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gac1c92e1ee3a804b325aacfe116bad096" kindref="member">lwm2m_engine_register_validate_callback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ga02d8748f5b75e1f4344dd05def597ba9" kindref="member">lwm2m_engine_set_data_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="925" refid="group__lwm2m__api_1ga5c43bcdb0575f8c56354d6b4e30641a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga5c43bcdb0575f8c56354d6b4e30641a3" kindref="member">lwm2m_engine_register_post_write_callback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ga02d8748f5b75e1f4344dd05def597ba9" kindref="member">lwm2m_engine_set_data_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="938" refid="group__lwm2m__api_1gad213063b7e68bd7b4f3ce3de3736a237" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gad213063b7e68bd7b4f3ce3de3736a237" kindref="member">lwm2m_engine_register_exec_callback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1gaeb32bcd4981b4c7bd891f99668ebc0fe" kindref="member">lwm2m_engine_execute_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="951" refid="group__lwm2m__api_1gaa198bfb55f98183cbd33169468ae0bcc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gaa198bfb55f98183cbd33169468ae0bcc" kindref="member">lwm2m_engine_register_create_callback</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_id,</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1gabcbca483b310e0c4cd68aef2d9cda0bf" kindref="member">lwm2m_engine_user_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="964" refid="group__lwm2m__api_1ga6a5dfdd29055bed245bf16ecc5829f95" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga6a5dfdd29055bed245bf16ecc5829f95" kindref="member">lwm2m_engine_register_delete_callback</ref>(<ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>obj_id,</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1gabcbca483b310e0c4cd68aef2d9cda0bf" kindref="member">lwm2m_engine_user_cb_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="970" refid="group__lwm2m__api_1ga12c2e0af3d3fc6dd5785e08c0d831a67" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_RES_DATA_READ_ONLY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="975" refid="group__lwm2m__api_1ga1bfa5b7d83e3560828a1fb61a4d07355" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_RES_DATA_FLAG_RO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(LWM2M_RES_DATA_READ_ONLY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="980" refid="group__lwm2m__api_1ga49f4117dfec8cd1abe9f827e235f55b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_HAS_RES_FLAG(res,<sp/>f)<sp/><sp/><sp/><sp/><sp/><sp/>((res-&gt;data_flags<sp/>&amp;<sp/>f)<sp/>==<sp/>f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="995" refid="group__lwm2m__api_1gabf56a29aec75675099df2d45ca802718" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gabf56a29aec75675099df2d45ca802718" kindref="member">lwm2m_engine_set_res_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data_ptr,<sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>data_len,</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>data_flags);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011" refid="group__lwm2m__api_1ga630079a8d2f2acae1c313297cfdbada9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga630079a8d2f2acae1c313297cfdbada9" kindref="member">lwm2m_engine_get_res_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**data_ptr,</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/>*data_len,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*data_flags);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025" refid="group__lwm2m__api_1ga64b0427f36b6d2d2f8af8cc2e35cdb89" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga64b0427f36b6d2d2f8af8cc2e35cdb89" kindref="member">lwm2m_engine_create_res_inst</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036" refid="group__lwm2m__api_1gac188cd5fdd226dd105d73a4e391c601b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gac188cd5fdd226dd105d73a4e391c601b" kindref="member">lwm2m_engine_delete_res_inst</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathstr);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051" refid="group__lwm2m__api_1ga147f2abc69dfc9189a44f047840a049d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga147f2abc69dfc9189a44f047840a049d" kindref="member">lwm2m_engine_update_service_period</ref>(<ref refid="group__workqueue__apis_1ga5add9ef0dce306a08413c4140fc0bdda" kindref="member">k_work_handler_t</ref><sp/>service,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>period_ms);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063" refid="group__lwm2m__api_1gab45cebf6f0b6b70974367ca453d16aeb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gab45cebf6f0b6b70974367ca453d16aeb" kindref="member">lwm2m_update_device_service_period</ref>(<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>period_ms);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076" refid="group__lwm2m__api_1ga9f72fbd0163b15c48ea09cf7d511e444" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga9f72fbd0163b15c48ea09cf7d511e444" kindref="member">lwm2m_engine_start</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__ctx" kindref="compound">lwm2m_ctx</ref><sp/>*client_ctx);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089" refid="group__lwm2m__api_1ga919c7d6f418cda99c77fdaf54ae1a7b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga919c7d6f418cda99c77fdaf54ae1a7b0" kindref="member">lwm2m_acknowledge</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__ctx" kindref="compound">lwm2m_ctx</ref><sp/>*client_ctx);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097" refid="group__lwm2m__api_1gaca90ab8960a4ff01d44735dbc0405862" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gaca90ab8960a4ff01d44735dbc0405862" kindref="member">lwm2m_rd_client_event</ref><sp/>{</highlight></codeline>
<codeline lineno="1098" refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862aca4ebc8d550af02f1891eed1a7b1afcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862aca4ebc8d550af02f1891eed1a7b1afcc" kindref="member">LWM2M_RD_CLIENT_EVENT_NONE</ref>,</highlight></codeline>
<codeline lineno="1099" refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862ac089b900494522de565e36d31ea3b0c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862ac089b900494522de565e36d31ea3b0c4" kindref="member">LWM2M_RD_CLIENT_EVENT_BOOTSTRAP_REG_FAILURE</ref>,</highlight></codeline>
<codeline lineno="1100" refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862ac30dd8520e591c8e51c74ce1a53cd524" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862ac30dd8520e591c8e51c74ce1a53cd524" kindref="member">LWM2M_RD_CLIENT_EVENT_BOOTSTRAP_REG_COMPLETE</ref>,</highlight></codeline>
<codeline lineno="1101" refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a7c7c3115b6ff16dfa722b6b82c2cd1bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a7c7c3115b6ff16dfa722b6b82c2cd1bc" kindref="member">LWM2M_RD_CLIENT_EVENT_BOOTSTRAP_TRANSFER_COMPLETE</ref>,</highlight></codeline>
<codeline lineno="1102" refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862ae89498cad338b1dc9cbd3b23838bf0b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862ae89498cad338b1dc9cbd3b23838bf0b6" kindref="member">LWM2M_RD_CLIENT_EVENT_REGISTRATION_FAILURE</ref>,</highlight></codeline>
<codeline lineno="1103" refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a8994ea8c025cbbd56adcc050a7e86541" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a8994ea8c025cbbd56adcc050a7e86541" kindref="member">LWM2M_RD_CLIENT_EVENT_REGISTRATION_COMPLETE</ref>,</highlight></codeline>
<codeline lineno="1104" refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a22b4ca0087e2efd45b82bf81d42ee42d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a22b4ca0087e2efd45b82bf81d42ee42d" kindref="member">LWM2M_RD_CLIENT_EVENT_REG_UPDATE_FAILURE</ref>,</highlight></codeline>
<codeline lineno="1105" refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a9f53175c5e935f061a83aa1fcfe9f683" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a9f53175c5e935f061a83aa1fcfe9f683" kindref="member">LWM2M_RD_CLIENT_EVENT_REG_UPDATE_COMPLETE</ref>,</highlight></codeline>
<codeline lineno="1106" refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a32552b56152f9a714675fc6bba3b3d5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a32552b56152f9a714675fc6bba3b3d5f" kindref="member">LWM2M_RD_CLIENT_EVENT_DEREGISTER_FAILURE</ref>,</highlight></codeline>
<codeline lineno="1107" refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862ac6703e7d0809cc9cfcdd1cbd48e2318b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862ac6703e7d0809cc9cfcdd1cbd48e2318b" kindref="member">LWM2M_RD_CLIENT_EVENT_DISCONNECT</ref>,</highlight></codeline>
<codeline lineno="1108" refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a7c7853536c452da2f74e9f43a024fcbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862a7c7853536c452da2f74e9f43a024fcbe" kindref="member">LWM2M_RD_CLIENT_EVENT_QUEUE_MODE_RX_OFF</ref>,</highlight></codeline>
<codeline lineno="1109" refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862aff939a86c623ab8258c707361b95aef4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ggaca90ab8960a4ff01d44735dbc0405862aff939a86c623ab8258c707361b95aef4" kindref="member">LWM2M_RD_CLIENT_EVENT_NETWORK_ERROR</ref>,</highlight></codeline>
<codeline lineno="1110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1113"><highlight class="comment"><sp/>*<sp/>LwM2M<sp/>RD<sp/>client<sp/>flags,<sp/>used<sp/>to<sp/>configure<sp/>LwM2M<sp/>session.</highlight></codeline>
<codeline lineno="1114"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119" refid="group__lwm2m__api_1ga3a3669237762fa8c23686e5e00b7809f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_RD_CLIENT_FLAG_BOOTSTRAP<sp/>BIT(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127" refid="group__lwm2m__api_1ga38dbaf038426efc75d889c4a0666dac9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__lwm2m__api_1ga38dbaf038426efc75d889c4a0666dac9" kindref="member">lwm2m_ctx_event_cb_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__ctx" kindref="compound">lwm2m_ctx</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gaca90ab8960a4ff01d44735dbc0405862" kindref="member">lwm2m_rd_client_event</ref><sp/>event);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148" refid="group__lwm2m__api_1ga48d4fcf0409e85d4d35d717b26bdaf2c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga48d4fcf0409e85d4d35d717b26bdaf2c" kindref="member">lwm2m_rd_client_start</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__ctx" kindref="compound">lwm2m_ctx</ref><sp/>*client_ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ep_name,</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>,<sp/><ref refid="group__lwm2m__api_1ga38dbaf038426efc75d889c4a0666dac9" kindref="member">lwm2m_ctx_event_cb_t</ref><sp/>event_cb,</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1gad7bea67e16e1e831e0f949dbf83d5afe" kindref="member">lwm2m_observe_cb_t</ref><sp/><ref refid="structlwm2m__ctx_1a412bd706adcd17ec8c00f1779012a845" kindref="member">observe_cb</ref>);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165" refid="group__lwm2m__api_1ga77f9c2d95fa3ab530811f09088fbc2e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1ga77f9c2d95fa3ab530811f09088fbc2e2" kindref="member">lwm2m_rd_client_stop</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__ctx" kindref="compound">lwm2m_ctx</ref><sp/>*client_ctx,</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__api_1ga38dbaf038426efc75d889c4a0666dac9" kindref="member">lwm2m_ctx_event_cb_t</ref><sp/>event_cb,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deregister);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171" refid="group__lwm2m__api_1gab4ec7a22d01259b6ba9d3a7b6681e6f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__api_1gab4ec7a22d01259b6ba9d3a7b6681e6f0" kindref="member">lwm2m_rd_client_update</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176" refid="group__lwm2m__api_1ga3dbd6db45f3db418087d5ee94568c88f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_MAX_PATH_STR_LEN<sp/>sizeof(&quot;65535/65535/65535/65535&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186" refid="group__lwm2m__api_1ga29b99da5a120ad1073710c3b2e78f14d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__lwm2m__api_1ga29b99da5a120ad1073710c3b2e78f14d" kindref="member">lwm2m_path_log_strdup</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__obj__path" kindref="compound">lwm2m_obj_path</ref><sp/>*path);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_NET_LWM2M_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/net/lwm2m.h"/>
  </compounddef>
</doxygen>
