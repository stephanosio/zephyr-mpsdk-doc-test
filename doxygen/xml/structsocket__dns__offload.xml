<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structsocket__dns__offload" kind="struct" language="C++" prot="public">
    <compoundname>socket_dns_offload</compoundname>
    <includes refid="socket__offload_8h" local="no">socket_offload.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structsocket__dns__offload_1a5241208180bcc8f553d0db6e74e5c115" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* socket_dns_offload::getaddrinfo) (const char *node, const char *service, const struct zsock_addrinfo *hints, struct zsock_addrinfo **res)</definition>
        <argsstring>)(const char *node, const char *service, const struct zsock_addrinfo *hints, struct zsock_addrinfo **res)</argsstring>
        <name>getaddrinfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket_offload.h" line="29" column="1" bodyfile="include/net/socket_offload.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsocket__dns__offload_1a73640bb24b4838c337ef1a61ffd4949f" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* socket_dns_offload::freeaddrinfo) (struct zsock_addrinfo *res)</definition>
        <argsstring>)(struct zsock_addrinfo *res)</argsstring>
        <name>freeaddrinfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket_offload.h" line="32" column="1" bodyfile="include/net/socket_offload.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An offloaded Socket DNS API interface. </para>
    </briefdescription>
    <detaileddescription>
<para>It is assumed that these offload functions follow the POSIX socket API standard for arguments, return values and setting of errno. </para>
    </detaileddescription>
    <location file="include/net/socket_offload.h" line="28" column="1" bodyfile="include/net/socket_offload.h" bodystart="28" bodyend="33"/>
    <listofallmembers>
      <member refid="structsocket__dns__offload_1a73640bb24b4838c337ef1a61ffd4949f" prot="public" virt="non-virtual"><scope>socket_dns_offload</scope><name>freeaddrinfo</name></member>
      <member refid="structsocket__dns__offload_1a5241208180bcc8f553d0db6e74e5c115" prot="public" virt="non-virtual"><scope>socket_dns_offload</scope><name>getaddrinfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
