<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__ztest__test__deprecated" kind="group">
    <compoundname>ztest_test_deprecated</compoundname>
    <title>Ztest testing macros</title>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__ztest__test__deprecated_1ga3adced2fdda96833e6b1ecbf3d61d446" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__mem__partition" kindref="compound">k_mem_partition</ref></type>
        <definition>struct k_mem_partition ztest_mem_partition</definition>
        <argsstring></argsstring>
        <name>ztest_mem_partition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="251" column="29" declfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" declline="251" declcolumn="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__ztest__test__deprecated_1gacd6eb423f54dce8544f7c3b1618c0374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ztest_test_fail</definition>
        <argsstring>(void)</argsstring>
        <name>ztest_test_fail</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Fail the currently running test. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function called from failed assertions and the like. You probably don&apos;t need to call it yourself. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="134" column="6" declfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" declline="134" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ztest__test__deprecated_1ga085d30a04102ebb8c3f2206020723ee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ztest_test_pass</definition>
        <argsstring>(void)</argsstring>
        <name>ztest_test_pass</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Pass the currently running test. </para>
        </briefdescription>
        <detaileddescription>
<para>Normally a test passes just by returning without an assertion failure. However, if the success case for your test involves a fatal fault, you can call this function from k_sys_fatal_error_handler to indicate that the test passed before aborting the thread. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="144" column="6" declfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" declline="144" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ztest_test_skip</definition>
        <argsstring>(void)</argsstring>
        <name>ztest_test_skip</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Skip the current test. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="149" column="6" declfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" declline="149" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ztest__test__deprecated_1gaeb99bd1d29675ca8c31b519853cec422" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void unit_test_noop</definition>
        <argsstring>(void)</argsstring>
        <name>unit_test_noop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Do nothing, successfully. </para>
        </briefdescription>
        <detaileddescription>
<para>Unit test / setup function / teardown function that does nothing, successfully. Can be used as a parameter to <ref refid="group__ztest__test__deprecated_1gafb04820b89dbc76bf28cb5e1c98764f8" kindref="member">ztest_unit_test_setup_teardown()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="158" column="20" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="158" bodyend="160"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__ztest__test__deprecated_1gafb04820b89dbc76bf28cb5e1c98764f8" prot="public" static="no">
        <name>ztest_unit_test_setup_teardown</name>
        <param><defname>fn</defname></param>
        <param><defname>setup</defname></param>
        <param><defname>teardown</defname></param>
        <initializer>	{                                                                                          \
		<ref refid="common_8h_1a4689212d5a549893cabb9d7782eecfb6" kindref="member">STRINGIFY</ref>(fn), fn, setup, teardown, 0                                              \
	}</initializer>
        <briefdescription>
<para>Define a test with setup and teardown functions. </para>
        </briefdescription>
        <detaileddescription>
<para>This should be called as an argument to ztest_test_suite. The test will be run in the following order: <emphasis>setup</emphasis>, <emphasis>fn</emphasis>, <emphasis>teardown</emphasis>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Main test function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>setup</parametername>
</parameternamelist>
<parameterdescription>
<para>Setup function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>teardown</parametername>
</parameternamelist>
<parameterdescription>
<para>Teardown function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="172" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1ga885301241dd259cb723603c8bbe29183" prot="public" static="no">
        <name>ztest_user_unit_test_setup_teardown</name>
        <param><defname>fn</defname></param>
        <param><defname>setup</defname></param>
        <param><defname>teardown</defname></param>
        <initializer>	{                                                                                          \
		<ref refid="common_8h_1a4689212d5a549893cabb9d7782eecfb6" kindref="member">STRINGIFY</ref>(fn), fn, setup, teardown, <ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref>                                         \
	}</initializer>
        <briefdescription>
<para>Define a user mode test with setup and teardown functions. </para>
        </briefdescription>
        <detaileddescription>
<para>This should be called as an argument to ztest_test_suite. The test will be run in the following order: <emphasis>setup</emphasis>, <emphasis>fn</emphasis>, <emphasis>teardown</emphasis>. ALL test functions will be run in user mode, and only if CONFIG_USERSPACE is enabled, otherwise this is the same as <ref refid="group__ztest__test__deprecated_1gafb04820b89dbc76bf28cb5e1c98764f8" kindref="member">ztest_unit_test_setup_teardown()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Main test function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>setup</parametername>
</parameternamelist>
<parameterdescription>
<para>Setup function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>teardown</parametername>
</parameternamelist>
<parameterdescription>
<para>Teardown function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="189" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" prot="public" static="no">
        <name>ztest_unit_test</name>
        <param><defname>fn</defname></param>
        <initializer>	<ref refid="group__ztest__test__deprecated_1gafb04820b89dbc76bf28cb5e1c98764f8" kindref="member">ztest_unit_test_setup_teardown</ref>(fn, <ref refid="group__ztest__test_1gaeb99bd1d29675ca8c31b519853cec422" kindref="member">unit_test_noop</ref>, <ref refid="group__ztest__test_1gaeb99bd1d29675ca8c31b519853cec422" kindref="member">unit_test_noop</ref>)</initializer>
        <briefdescription>
<para>Define a test function. </para>
        </briefdescription>
        <detaileddescription>
<para>This should be called as an argument to ztest_test_suite.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Test function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="201" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" prot="public" static="no">
        <name>ztest_user_unit_test</name>
        <param><defname>fn</defname></param>
        <initializer>	<ref refid="group__ztest__test__deprecated_1ga885301241dd259cb723603c8bbe29183" kindref="member">ztest_user_unit_test_setup_teardown</ref>(fn, <ref refid="group__ztest__test_1gaeb99bd1d29675ca8c31b519853cec422" kindref="member">unit_test_noop</ref>, <ref refid="group__ztest__test_1gaeb99bd1d29675ca8c31b519853cec422" kindref="member">unit_test_noop</ref>)</initializer>
        <briefdescription>
<para>Define a test function that should run as a user thread. </para>
        </briefdescription>
        <detaileddescription>
<para>This should be called as an argument to ztest_test_suite. If CONFIG_USERSPACE is not enabled, this is functionally identical to <ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Test function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="213" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" prot="public" static="no">
        <name>ztest_1cpu_unit_test</name>
        <param><defname>fn</defname></param>
        <initializer>	<ref refid="group__ztest__test__deprecated_1gafb04820b89dbc76bf28cb5e1c98764f8" kindref="member">ztest_unit_test_setup_teardown</ref>(fn, z_test_1cpu_start, z_test_1cpu_stop)</initializer>
        <briefdescription>
<para>Define a SMP-unsafe test function. </para>
        </briefdescription>
        <detaileddescription>
<para>As <ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test()</ref>, but ensures all test code runs on only one CPU when in SMP.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Test function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="225" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1gab5438441a57724ddf51e6dda62e2681b" prot="public" static="no">
        <name>ztest_1cpu_user_unit_test</name>
        <param><defname>fn</defname></param>
        <initializer>	<ref refid="group__ztest__test__deprecated_1ga885301241dd259cb723603c8bbe29183" kindref="member">ztest_user_unit_test_setup_teardown</ref>(fn, z_test_1cpu_start, z_test_1cpu_stop)</initializer>
        <briefdescription>
<para>Define a SMP-unsafe test function that should run as a user thread. </para>
        </briefdescription>
        <detaileddescription>
<para>As <ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test()</ref>, but ensures all test code runs on only one CPU when in SMP.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Test function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="240" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1ga2c7d0aa85e7f320d582395c5ded90133" prot="public" static="no">
        <name>ZTEST_DMEM</name>
        <initializer><ref refid="mem__protect_2userspace_2src_2main_8c_1a9067a0a2728b358c511417b2de42c731" kindref="member">K_APP_DMEM</ref>(<ref refid="group__ztest__test_1ga3adced2fdda96833e6b1ecbf3d61d446" kindref="member">ztest_mem_partition</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="248" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1gac3de5965061b1164a8033712c9094e23" prot="public" static="no">
        <name>ZTEST_BMEM</name>
        <initializer><ref refid="threads_2tls_2src_2main_8c_1a7a1968d4832a53406449a3ace7019fa2" kindref="member">K_APP_BMEM</ref>(<ref refid="group__ztest__test_1ga3adced2fdda96833e6b1ecbf3d61d446" kindref="member">ztest_mem_partition</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="249" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1ga44777f5011728bbff63fe3639c1b4aa8" prot="public" static="no">
        <name>ZTEST_SECTION</name>
        <initializer><ref refid="app__memdomain_8h_1a81962bb530118ffa13fccdf99f973787" kindref="member">K_APP_DMEM_SECTION</ref>(<ref refid="group__ztest__test_1ga3adced2fdda96833e6b1ecbf3d61d446" kindref="member">ztest_mem_partition</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="250" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" prot="public" static="no">
        <name>ztest_test_suite</name>
        <param><defname>suite</defname></param>
        <param><defname>...</defname></param>
        <initializer>	static <ref refid="group__ztest__test_1ga2c7d0aa85e7f320d582395c5ded90133" kindref="member">ZTEST_DMEM</ref> struct <ref refid="structunit__test" kindref="compound">unit_test</ref> _##suite[] = { __VA_ARGS__, { 0 } }</initializer>
        <briefdescription>
<para>Define a test suite. </para>
        </briefdescription>
        <detaileddescription>
<para>This function should be called in the following fashion: <programlisting filename=".c"><codeline><highlight class="normal"><ref refid="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" kindref="member">ztest_test_suite</ref>(test_suite_name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(test_function),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(test_other_function)</highlight></codeline>
<codeline><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" kindref="member">ztest_run_test_suite</ref>(test_suite_name);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>suite</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the testing suite </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="273" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" prot="public" static="no">
        <name>ztest_run_test_suite</name>
        <param><defname>suite</defname></param>
        <initializer>	z_ztest_run_test_suite(#suite, _##suite)</initializer>
        <briefdescription>
<para>Run the specified test suite. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>suite</parametername>
</parameternamelist>
<parameterdescription>
<para>Test suite to run. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="280" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This module eases the testing process by providing helpful macros and other testing structures. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
