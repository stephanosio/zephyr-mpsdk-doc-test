<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="ztest__test__deprecated_8h" kind="file" language="C++">
    <compoundname>ztest_test_deprecated.h</compoundname>
    <includes refid="app__memdomain_8h" local="no">app_memory/app_memdomain.h</includes>
    <includes refid="init_8h" local="no">init.h</includes>
    <includes refid="stdbool_8h" local="no">stdbool.h</includes>
    <includedby refid="ztest__test_8h" local="no">subsys/testsuite/ztest/include/ztest_test.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="58">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="57">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="18">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="25">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="27">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="23">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="21">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="29">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="30">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="26">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="24">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="28">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="67">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="34">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="43">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="17">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="31">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="9">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="4">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="5">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="78">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="79">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="12">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="15">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="16">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="56">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="80">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="73">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="1">
        <label>subsys/testsuite/ztest/include/ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>alloca.h</label>
      </node>
      <node id="60">
        <label>arch/cpu.h</label>
      </node>
      <node id="20">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="19">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="32">
        <label>kernel.h</label>
      </node>
      <node id="41">
        <label>stdarg.h</label>
      </node>
      <node id="14">
        <label>stddef.h</label>
      </node>
      <node id="76">
        <label>syscalls/errno_private.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>subsys/testsuite/ztest/include/ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>subsys/testsuite/ztest/include/ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>subsys/testsuite/ztest/include/ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>subsys/testsuite/ztest/include/ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>tests/kernel/common/src/atomic.c</label>
        <link refid="atomic_8c"/>
      </node>
      <node id="6">
        <label>tests/kernel/common/src/bitarray.c</label>
        <link refid="bitarray_8c"/>
      </node>
      <node id="7">
        <label>tests/kernel/common/src/bitfield.c</label>
        <link refid="bitfield_8c"/>
      </node>
      <node id="8">
        <label>tests/kernel/common/src/boot_delay.c</label>
        <link refid="boot__delay_8c"/>
      </node>
      <node id="9">
        <label>tests/kernel/common/src/byteorder.c</label>
        <link refid="byteorder_8c"/>
      </node>
      <node id="10">
        <label>tests/kernel/common/src/clock.c</label>
        <link refid="clock_8c"/>
      </node>
      <node id="11">
        <label>tests/kernel/common/src/errno.c</label>
        <link refid="errno_8c"/>
      </node>
      <node id="12">
        <label>tests/kernel/common/src/irq_offload.c</label>
        <link refid="irq__offload_8c"/>
      </node>
      <node id="13">
        <label>tests/kernel/common/src/main.c</label>
        <link refid="common_2src_2main_8c"/>
      </node>
      <node id="14">
        <label>tests/kernel/common/src/multilib.c</label>
        <link refid="multilib_8c"/>
      </node>
      <node id="15">
        <label>tests/kernel/common/src/printk.c</label>
        <link refid="printk_8c"/>
      </node>
      <node id="16">
        <label>tests/kernel/common/src/timeout_order.c</label>
        <link refid="timeout__order_8c"/>
      </node>
      <node id="17">
        <label>tests/kernel/condvar/condvar_api/src/main.c</label>
        <link refid="condvar_2condvar__api_2src_2main_8c"/>
      </node>
      <node id="18">
        <label>tests/kernel/context/src/main.c</label>
        <link refid="context_2src_2main_8c"/>
      </node>
      <node id="19">
        <label>tests/kernel/device/src/abstract_driver.c</label>
        <link refid="abstract__driver_8c"/>
      </node>
      <node id="20">
        <label>tests/kernel/device/src/abstract_driver.h</label>
        <link refid="abstract__driver_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>tests/kernel/device/src/main.c</label>
        <link refid="device_2src_2main_8c"/>
      </node>
      <node id="22">
        <label>tests/kernel/device/src/mmio.c</label>
        <link refid="mmio_8c"/>
      </node>
      <node id="23">
        <label>tests/kernel/device/src/test_driver_init.c</label>
        <link refid="test__driver__init_8c"/>
      </node>
      <node id="24">
        <label>tests/kernel/early_sleep/src/main.c</label>
        <link refid="early__sleep_2src_2main_8c"/>
      </node>
      <node id="25">
        <label>tests/kernel/events/event_api/src/main.c</label>
        <link refid="events_2event__api_2src_2main_8c"/>
      </node>
      <node id="26">
        <label>tests/kernel/events/event_api/src/test_event_apis.c</label>
        <link refid="test__event__apis_8c"/>
      </node>
      <node id="27">
        <label>tests/kernel/events/sys_event/src/main.c</label>
        <link refid="events_2sys__event_2src_2main_8c"/>
      </node>
      <node id="28">
        <label>tests/kernel/fatal/exception/src/main.c</label>
        <link refid="fatal_2exception_2src_2main_8c"/>
      </node>
      <node id="29">
        <label>tests/kernel/fatal/no-multithreading/src/main.c</label>
        <link refid="fatal_2no-multithreading_2src_2main_8c"/>
      </node>
      <node id="30">
        <label>tests/kernel/fifo/fifo_api/src/main.c</label>
        <link refid="fifo_2fifo__api_2src_2main_8c"/>
      </node>
      <node id="31">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo.h</label>
        <link refid="test__fifo_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_cancel.c</label>
        <link refid="test__fifo__cancel_8c"/>
      </node>
      <node id="33">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_contexts.c</label>
        <link refid="test__fifo__contexts_8c"/>
      </node>
      <node id="34">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_fail.c</label>
        <link refid="test__fifo__fail_8c"/>
      </node>
      <node id="35">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_loop.c</label>
        <link refid="test__fifo__loop_8c"/>
      </node>
      <node id="36">
        <label>tests/kernel/fifo/fifo_timeout/src/main.c</label>
        <link refid="fifo_2fifo__timeout_2src_2main_8c"/>
      </node>
      <node id="37">
        <label>tests/kernel/fifo/fifo_usage/src/main.c</label>
        <link refid="fifo_2fifo__usage_2src_2main_8c"/>
      </node>
      <node id="38">
        <label>tests/kernel/fpu_sharing/float_disable/src/k_float_disable.c</label>
        <link refid="k__float__disable_8c"/>
      </node>
      <node id="39">
        <label>tests/kernel/fpu_sharing/float_disable/src/main.c</label>
        <link refid="fpu__sharing_2float__disable_2src_2main_8c"/>
      </node>
      <node id="40">
        <label>tests/kernel/fpu_sharing/generic/src/load_store.c</label>
        <link refid="load__store_8c"/>
      </node>
      <node id="41">
        <label>tests/kernel/fpu_sharing/generic/src/main.c</label>
        <link refid="fpu__sharing_2generic_2src_2main_8c"/>
      </node>
      <node id="42">
        <label>tests/kernel/fpu_sharing/generic/src/pi.c</label>
        <link refid="pi_8c"/>
      </node>
      <node id="43">
        <label>tests/kernel/gen_isr_table/src/main.c</label>
        <link refid="gen__isr__table_2src_2main_8c"/>
      </node>
      <node id="44">
        <label>tests/kernel/interrupt/src/direct_isr.c</label>
        <link refid="direct__isr_8c"/>
      </node>
      <node id="45">
        <label>tests/kernel/interrupt/src/dynamic_isr.c</label>
        <link refid="dynamic__isr_8c"/>
      </node>
      <node id="46">
        <label>tests/kernel/interrupt/src/interrupt_offload.c</label>
        <link refid="interrupt__offload_8c"/>
      </node>
      <node id="47">
        <label>tests/kernel/interrupt/src/main.c</label>
        <link refid="interrupt_2src_2main_8c"/>
      </node>
      <node id="48">
        <label>tests/kernel/interrupt/src/nested_irq.c</label>
        <link refid="nested__irq_8c"/>
      </node>
      <node id="49">
        <label>tests/kernel/interrupt/src/prevent_irq.c</label>
        <link refid="prevent__irq_8c"/>
      </node>
      <node id="50">
        <label>tests/kernel/interrupt/src/regular_isr.c</label>
        <link refid="regular__isr_8c"/>
      </node>
      <node id="51">
        <label>tests/kernel/lifo/lifo_api/src/main.c</label>
        <link refid="lifo_2lifo__api_2src_2main_8c"/>
      </node>
      <node id="52">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo.h</label>
        <link refid="test__lifo_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo_contexts.c</label>
        <link refid="test__lifo__contexts_8c"/>
      </node>
      <node id="54">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo_fail.c</label>
        <link refid="test__lifo__fail_8c"/>
      </node>
      <node id="55">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo_loop.c</label>
        <link refid="test__lifo__loop_8c"/>
      </node>
      <node id="56">
        <label>tests/kernel/lifo/lifo_usage/src/main.c</label>
        <link refid="lifo_2lifo__usage_2src_2main_8c"/>
      </node>
      <node id="57">
        <label>tests/kernel/mbox/mbox_api/src/main.c</label>
        <link refid="mbox_2mbox__api_2src_2main_8c"/>
      </node>
      <node id="58">
        <label>tests/kernel/mbox/mbox_api/src/test_mbox_api.c</label>
        <link refid="test__mbox__api_8c"/>
      </node>
      <node id="59">
        <label>tests/kernel/mbox/mbox_usage/src/main.c</label>
        <link refid="mbox_2mbox__usage_2src_2main_8c"/>
      </node>
      <node id="60">
        <label>tests/kernel/mem_heap/k_heap_api/src/main.c</label>
        <link refid="mem__heap_2k__heap__api_2src_2main_8c"/>
      </node>
      <node id="61">
        <label>tests/kernel/mem_heap/k_heap_api/src/test_kheap_api.c</label>
        <link refid="test__kheap__api_8c"/>
      </node>
      <node id="62">
        <label>tests/kernel/mem_heap/mheap_api_concept/src/main.c</label>
        <link refid="mem__heap_2mheap__api__concept_2src_2main_8c"/>
      </node>
      <node id="63">
        <label>tests/kernel/mem_heap/mheap_api_concept/src/test_mheap_api.c</label>
        <link refid="test__mheap__api_8c"/>
      </node>
      <node id="64">
        <label>tests/kernel/mem_heap/mheap_api_concept/src/test_mheap_concept.c</label>
        <link refid="test__mheap__concept_8c"/>
      </node>
      <node id="65">
        <label>tests/kernel/mem_heap/shared_multi_heap/src/main.c</label>
        <link refid="mem__heap_2shared__multi__heap_2src_2main_8c"/>
      </node>
      <node id="66">
        <label>tests/kernel/mem_protect/demand_paging/src/main.c</label>
        <link refid="mem__protect_2demand__paging_2src_2main_8c"/>
      </node>
      <node id="67">
        <label>tests/kernel/mem_protect/futex/src/main.c</label>
        <link refid="mem__protect_2futex_2src_2main_8c"/>
      </node>
      <node id="68">
        <label>tests/kernel/mem_protect/mem_map/src/main.c</label>
        <link refid="mem__protect_2mem__map_2src_2main_8c"/>
      </node>
      <node id="69">
        <label>tests/kernel/mem_protect/mem_protect/src/common.c</label>
        <link refid="common_8c"/>
      </node>
      <node id="72">
        <label>tests/kernel/mem_protect/mem_protect/src/inherit.c</label>
        <link refid="inherit_8c"/>
      </node>
      <node id="73">
        <label>tests/kernel/mem_protect/mem_protect/src/kobject.c</label>
        <link refid="kobject_8c"/>
      </node>
      <node id="70">
        <label>tests/kernel/mem_protect/mem_protect/src/main.c</label>
        <link refid="mem__protect_2mem__protect_2src_2main_8c"/>
      </node>
      <node id="74">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_domain.c</label>
        <link refid="mem__domain_8c"/>
      </node>
      <node id="75">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_partition.c</label>
        <link refid="mem__partition_8c"/>
      </node>
      <node id="71">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_protect.h</label>
        <link refid="mem__protect_8h"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>tests/kernel/mem_protect/obj_validation/src/main.c</label>
        <link refid="mem__protect_2obj__validation_2src_2main_8c"/>
      </node>
      <node id="77">
        <label>tests/kernel/mem_protect/protection/src/main.c</label>
        <link refid="mem__protect_2protection_2src_2main_8c"/>
      </node>
      <node id="78">
        <label>tests/kernel/mem_protect/stack_random/src/main.c</label>
        <link refid="mem__protect_2stack__random_2src_2main_8c"/>
      </node>
      <node id="79">
        <label>tests/kernel/mem_protect/stackprot/src/main.c</label>
        <link refid="mem__protect_2stackprot_2src_2main_8c"/>
      </node>
      <node id="80">
        <label>tests/kernel/mem_protect/sys_sem/src/main.c</label>
        <link refid="mem__protect_2sys__sem_2src_2main_8c"/>
      </node>
      <node id="81">
        <label>tests/kernel/mem_protect/syscalls/src/main.c</label>
        <link refid="mem__protect_2syscalls_2src_2main_8c"/>
      </node>
      <node id="82">
        <label>tests/kernel/mem_protect/userspace/src/main.c</label>
        <link refid="mem__protect_2userspace_2src_2main_8c"/>
      </node>
      <node id="83">
        <label>tests/kernel/mem_slab/mslab/src/main.c</label>
        <link refid="mem__slab_2mslab_2src_2main_8c"/>
      </node>
      <node id="84">
        <label>tests/kernel/mem_slab/mslab_api/src/main.c</label>
        <link refid="mem__slab_2mslab__api_2src_2main_8c"/>
      </node>
      <node id="85">
        <label>tests/kernel/mem_slab/mslab_api/src/test_mslab_api.c</label>
        <link refid="test__mslab__api_8c"/>
      </node>
      <node id="86">
        <label>tests/kernel/mem_slab/mslab_api/src/test_mslab_extern.c</label>
        <link refid="test__mslab__extern_8c"/>
      </node>
      <node id="87">
        <label>tests/kernel/mem_slab/mslab_concept/src/main.c</label>
        <link refid="mem__slab_2mslab__concept_2src_2main_8c"/>
      </node>
      <node id="88">
        <label>tests/kernel/mem_slab/mslab_concept/src/test_mslab_alloc_wait.c</label>
        <link refid="test__mslab__alloc__wait_8c"/>
      </node>
      <node id="89">
        <label>tests/kernel/mem_slab/mslab_threadsafe/src/main.c</label>
        <link refid="mem__slab_2mslab__threadsafe_2src_2main_8c"/>
      </node>
      <node id="90">
        <label>tests/kernel/mem_slab/mslab_threadsafe/src/test_mslab_threadsafe.c</label>
        <link refid="test__mslab__threadsafe_8c"/>
      </node>
      <node id="91">
        <label>tests/kernel/mp/src/main.c</label>
        <link refid="mp_2src_2main_8c"/>
      </node>
      <node id="92">
        <label>tests/kernel/msgq/msgq_api/src/main.c</label>
        <link refid="msgq_2msgq__api_2src_2main_8c"/>
      </node>
      <node id="93">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq.h</label>
        <link refid="test__msgq_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_attrs.c</label>
        <link refid="test__msgq__attrs_8c"/>
      </node>
      <node id="95">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c</label>
        <link refid="test__msgq__contexts_8c"/>
      </node>
      <node id="96">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_fail.c</label>
        <link refid="test__msgq__fail_8c"/>
      </node>
      <node id="97">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_purge.c</label>
        <link refid="test__msgq__purge_8c"/>
      </node>
      <node id="98">
        <label>tests/kernel/msgq/msgq_usage/src/main.c</label>
        <link refid="msgq_2msgq__usage_2src_2main_8c"/>
      </node>
      <node id="99">
        <label>tests/kernel/mutex/mutex_api/src/test_mutex_apis.c</label>
        <link refid="test__mutex__apis_8c"/>
      </node>
      <node id="100">
        <label>tests/kernel/mutex/mutex_error_case/src/test_mutex_error.c</label>
        <link refid="test__mutex__error_8c"/>
      </node>
      <node id="101">
        <label>tests/kernel/mutex/sys_mutex/src/main.c</label>
        <link refid="mutex_2sys__mutex_2src_2main_8c"/>
      </node>
      <node id="102">
        <label>tests/kernel/mutex/sys_mutex/src/thread_competition.c</label>
        <link refid="thread__competition_8c"/>
      </node>
      <node id="103">
        <label>tests/kernel/obj_tracking/src/main.c</label>
        <link refid="obj__tracking_2src_2main_8c"/>
      </node>
      <node id="104">
        <label>tests/kernel/pending/src/main.c</label>
        <link refid="pending_2src_2main_8c"/>
      </node>
      <node id="105">
        <label>tests/kernel/pipe/pipe/src/main.c</label>
        <link refid="pipe_2pipe_2src_2main_8c"/>
      </node>
      <node id="106">
        <label>tests/kernel/pipe/pipe/src/test_pipe.c</label>
        <link refid="test__pipe_8c"/>
      </node>
      <node id="107">
        <label>tests/kernel/pipe/pipe_api/src/main.c</label>
        <link refid="pipe_2pipe__api_2src_2main_8c"/>
      </node>
      <node id="108">
        <label>tests/kernel/pipe/pipe_api/src/test_pipe_avail.c</label>
        <link refid="test__pipe__avail_8c"/>
      </node>
      <node id="109">
        <label>tests/kernel/pipe/pipe_api/src/test_pipe_contexts.c</label>
        <link refid="test__pipe__contexts_8c"/>
      </node>
      <node id="110">
        <label>tests/kernel/pipe/pipe_api/src/test_pipe_fail.c</label>
        <link refid="test__pipe__fail_8c"/>
      </node>
      <node id="111">
        <label>tests/kernel/poll/src/main.c</label>
        <link refid="poll_2src_2main_8c"/>
      </node>
      <node id="112">
        <label>tests/kernel/poll/src/test_poll.c</label>
        <link refid="test__poll_8c"/>
      </node>
      <node id="113">
        <label>tests/kernel/poll/src/test_poll_fail.c</label>
        <link refid="test__poll__fail_8c"/>
      </node>
      <node id="114">
        <label>tests/kernel/profiling/profiling_api/src/main.c</label>
        <link refid="profiling_2profiling__api_2src_2main_8c"/>
      </node>
      <node id="115">
        <label>tests/kernel/queue/src/main.c</label>
        <link refid="queue_2src_2main_8c"/>
      </node>
      <node id="116">
        <label>tests/kernel/queue/src/test_queue.h</label>
        <link refid="test__queue_8h"/>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>tests/kernel/queue/src/test_queue_contexts.c</label>
        <link refid="test__queue__contexts_8c"/>
      </node>
      <node id="118">
        <label>tests/kernel/queue/src/test_queue_fail.c</label>
        <link refid="test__queue__fail_8c"/>
      </node>
      <node id="119">
        <label>tests/kernel/queue/src/test_queue_loop.c</label>
        <link refid="test__queue__loop_8c"/>
      </node>
      <node id="120">
        <label>tests/kernel/queue/src/test_queue_user.c</label>
        <link refid="test__queue__user_8c"/>
      </node>
      <node id="121">
        <label>tests/kernel/sched/deadline/src/main.c</label>
        <link refid="sched_2deadline_2src_2main_8c"/>
      </node>
      <node id="122">
        <label>tests/kernel/sched/metairq/src/main.c</label>
        <link refid="sched_2metairq_2src_2main_8c"/>
      </node>
      <node id="123">
        <label>tests/kernel/sched/preempt/src/main.c</label>
        <link refid="sched_2preempt_2src_2main_8c"/>
      </node>
      <node id="126">
        <label>tests/kernel/sched/schedule_api/src/main.c</label>
        <link refid="sched_2schedule__api_2src_2main_8c"/>
      </node>
      <node id="124">
        <label>tests/kernel/sched/schedule_api/src/test_priority_scheduling.c</label>
        <link refid="test__priority__scheduling_8c"/>
      </node>
      <node id="125">
        <label>tests/kernel/sched/schedule_api/src/test_sched.h</label>
        <link refid="test__sched_8h"/>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>tests/kernel/sched/schedule_api/src/test_sched_is_preempt_thread.c</label>
        <link refid="test__sched__is__preempt__thread_8c"/>
      </node>
      <node id="128">
        <label>tests/kernel/sched/schedule_api/src/test_sched_priority.c</label>
        <link refid="test__sched__priority_8c"/>
      </node>
      <node id="129">
        <label>tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c</label>
        <link refid="test__sched__timeslice__and__lock_8c"/>
      </node>
      <node id="130">
        <label>tests/kernel/sched/schedule_api/src/test_sched_timeslice_reset.c</label>
        <link refid="test__sched__timeslice__reset_8c"/>
      </node>
      <node id="131">
        <label>tests/kernel/sched/schedule_api/src/test_slice_scheduling.c</label>
        <link refid="test__slice__scheduling_8c"/>
      </node>
      <node id="132">
        <label>tests/kernel/sched/schedule_api/src/user_api.c</label>
        <link refid="user__api_8c"/>
      </node>
      <node id="133">
        <label>tests/kernel/semaphore/semaphore/src/main.c</label>
        <link refid="semaphore_2semaphore_2src_2main_8c"/>
      </node>
      <node id="134">
        <label>tests/kernel/semaphore/sys_sem/src/main.c</label>
        <link refid="semaphore_2sys__sem_2src_2main_8c"/>
      </node>
      <node id="135">
        <label>tests/kernel/sleep/src/main.c</label>
        <link refid="sleep_2src_2main_8c"/>
      </node>
      <node id="136">
        <label>tests/kernel/sleep/src/usleep.c</label>
        <link refid="usleep_8c"/>
      </node>
      <node id="137">
        <label>tests/kernel/smp/src/main.c</label>
        <link refid="smp_2src_2main_8c"/>
      </node>
      <node id="138">
        <label>tests/kernel/smp_boot_delay/src/main.c</label>
        <link refid="smp__boot__delay_2src_2main_8c"/>
      </node>
      <node id="139">
        <label>tests/kernel/spinlock/src/main.c</label>
        <link refid="spinlock_2src_2main_8c"/>
      </node>
      <node id="140">
        <label>tests/kernel/spinlock/src/spinlock_error_case.c</label>
        <link refid="spinlock__error__case_8c"/>
      </node>
      <node id="141">
        <label>tests/kernel/stack/stack/src/main.c</label>
        <link refid="stack_2stack_2src_2main_8c"/>
      </node>
      <node id="142">
        <label>tests/kernel/stack/stack/src/test_stack_contexts.c</label>
        <link refid="test__stack__contexts_8c"/>
      </node>
      <node id="143">
        <label>tests/kernel/stack/stack/src/test_stack_fail.c</label>
        <link refid="test__stack__fail_8c"/>
      </node>
      <node id="144">
        <label>tests/kernel/threads/dynamic_thread/src/main.c</label>
        <link refid="threads_2dynamic__thread_2src_2main_8c"/>
      </node>
      <node id="145">
        <label>tests/kernel/threads/no-multithreading/src/main.c</label>
        <link refid="threads_2no-multithreading_2src_2main_8c"/>
      </node>
      <node id="146">
        <label>tests/kernel/threads/thread_apis/src/main.c</label>
        <link refid="threads_2thread__apis_2src_2main_8c"/>
      </node>
      <node id="147">
        <label>tests/kernel/threads/thread_apis/src/test_essential_thread.c</label>
        <link refid="test__essential__thread_8c"/>
      </node>
      <node id="148">
        <label>tests/kernel/threads/thread_apis/src/test_kthread_for_each.c</label>
        <link refid="test__kthread__for__each_8c"/>
      </node>
      <node id="149">
        <label>tests/kernel/threads/thread_apis/src/test_threads_cancel_abort.c</label>
        <link refid="test__threads__cancel__abort_8c"/>
      </node>
      <node id="150">
        <label>tests/kernel/threads/thread_apis/src/test_threads_cpu_mask.c</label>
        <link refid="test__threads__cpu__mask_8c"/>
      </node>
      <node id="151">
        <label>tests/kernel/threads/thread_apis/src/test_threads_set_priority.c</label>
        <link refid="test__threads__set__priority_8c"/>
      </node>
      <node id="152">
        <label>tests/kernel/threads/thread_apis/src/test_threads_spawn.c</label>
        <link refid="test__threads__spawn_8c"/>
      </node>
      <node id="153">
        <label>tests/kernel/threads/thread_apis/src/test_threads_suspend_resume.c</label>
        <link refid="test__threads__suspend__resume_8c"/>
      </node>
      <node id="154">
        <label>tests/kernel/threads/thread_error_case/src/main.c</label>
        <link refid="threads_2thread__error__case_2src_2main_8c"/>
      </node>
      <node id="155">
        <label>tests/kernel/threads/thread_init/src/main.c</label>
        <link refid="threads_2thread__init_2src_2main_8c"/>
      </node>
      <node id="156">
        <label>tests/kernel/threads/thread_stack/src/main.c</label>
        <link refid="threads_2thread__stack_2src_2main_8c"/>
      </node>
      <node id="157">
        <label>tests/kernel/threads/tls/src/main.c</label>
        <link refid="threads_2tls_2src_2main_8c"/>
      </node>
      <node id="158">
        <label>tests/kernel/tickless/tickless_concept/src/main.c</label>
        <link refid="tickless_2tickless__concept_2src_2main_8c"/>
      </node>
      <node id="159">
        <label>tests/kernel/timer/cycle64/src/main.c</label>
        <link refid="timer_2cycle64_2src_2main_8c"/>
      </node>
      <node id="160">
        <label>tests/kernel/timer/starve/src/main.c</label>
        <link refid="timer_2starve_2src_2main_8c"/>
      </node>
      <node id="161">
        <label>tests/kernel/timer/timer_api/src/main.c</label>
        <link refid="timer_2timer__api_2src_2main_8c"/>
      </node>
      <node id="162">
        <label>tests/kernel/timer/timer_api/src/timer_convert.c</label>
        <link refid="timer__convert_8c"/>
      </node>
      <node id="163">
        <label>tests/kernel/timer/timer_error_case/src/main.c</label>
        <link refid="timer_2timer__error__case_2src_2main_8c"/>
      </node>
      <node id="164">
        <label>tests/kernel/timer/timer_monotonic/src/main.c</label>
        <link refid="timer_2timer__monotonic_2src_2main_8c"/>
      </node>
      <node id="165">
        <label>tests/kernel/workq/critical/src/main.c</label>
        <link refid="workq_2critical_2src_2main_8c"/>
      </node>
      <node id="166">
        <label>tests/kernel/workq/user_work/src/main.c</label>
        <link refid="workq_2user__work_2src_2main_8c"/>
      </node>
      <node id="167">
        <label>tests/kernel/workq/work/src/main.c</label>
        <link refid="workq_2work_2src_2main_8c"/>
      </node>
      <node id="168">
        <label>tests/kernel/workq/work_queue/src/main.c</label>
        <link refid="workq_2work__queue_2src_2main_8c"/>
      </node>
      <node id="169">
        <label>tests/kernel/xip/src/main.c</label>
        <link refid="xip_2src_2main_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structunit__test" prot="public">unit_test</innerclass>
    <innerclass refid="structztest__suite__stats" prot="public">ztest_suite_stats</innerclass>
    <innerclass refid="structztest__suite__node" prot="public">ztest_suite_node</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="ztest__test__deprecated_8h_1ab392a7f36eebce4eb6d1af8e42831e48" prot="public" static="no">
        <name>ztest_register_test_suite</name>
        <param><defname>SUITE_NAME</defname></param>
        <param><defname>PREDICATE</defname></param>
        <param><defname>args...</defname></param>
        <initializer>	<ref refid="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" kindref="member">ztest_test_suite</ref>(SUITE_NAME, ##args);                                                      \
	static <ref refid="group__iterable__section__apis_1gabed6642b8cc06863ce97dd536698004d" kindref="member">STRUCT_SECTION_ITERABLE</ref>(<ref refid="structztest__suite__node" kindref="compound">ztest_suite_node</ref>, z_ztest_test_node_##SUITE_NAME) = {       \
		.name = #SUITE_NAME,                                                               \
		.suite = _##SUITE_NAME,                                                            \
		.predicate = PREDICATE,                                                            \
	};</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create and register a ztest suite. Using this macro creates a new test suite (using ztest_test_suite). It then creates a struct <ref refid="structztest__suite__node" kindref="compound">ztest_suite_node</ref> in a specific linker section.</para>
<para>Tests can then be run by calling <ref refid="ztest__test__deprecated_8h_1a22616bfcdfec54ef4e8bda897dd84936" kindref="member">ztest_run_registered_test_suites(const void *state)</ref> by passing in the current state. See the documentation for ztest_run_registered_test_suites for more info.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SUITE_NAME</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the suite (see ztest_test_suite for more info) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PREDICATE</parametername>
</parameternamelist>
<parameterdescription>
<para>A function to test against the state and determine if the test should run. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Varargs placeholder for the remaining arguments passed for the unit tests. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="79" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1gafb04820b89dbc76bf28cb5e1c98764f8" prot="public" static="no">
        <name>ztest_unit_test_setup_teardown</name>
        <param><defname>fn</defname></param>
        <param><defname>setup</defname></param>
        <param><defname>teardown</defname></param>
        <initializer>	{                                                                                          \
		<ref refid="common_8h_1a4689212d5a549893cabb9d7782eecfb6" kindref="member">STRINGIFY</ref>(fn), fn, setup, teardown, 0                                              \
	}</initializer>
        <briefdescription>
<para>Define a test with setup and teardown functions. </para>
        </briefdescription>
        <detaileddescription>
<para>This should be called as an argument to ztest_test_suite. The test will be run in the following order: <emphasis>setup</emphasis>, <emphasis>fn</emphasis>, <emphasis>teardown</emphasis>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Main test function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>setup</parametername>
</parameternamelist>
<parameterdescription>
<para>Setup function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>teardown</parametername>
</parameternamelist>
<parameterdescription>
<para>Teardown function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="172" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1ga885301241dd259cb723603c8bbe29183" prot="public" static="no">
        <name>ztest_user_unit_test_setup_teardown</name>
        <param><defname>fn</defname></param>
        <param><defname>setup</defname></param>
        <param><defname>teardown</defname></param>
        <initializer>	{                                                                                          \
		<ref refid="common_8h_1a4689212d5a549893cabb9d7782eecfb6" kindref="member">STRINGIFY</ref>(fn), fn, setup, teardown, <ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref>                                         \
	}</initializer>
        <briefdescription>
<para>Define a user mode test with setup and teardown functions. </para>
        </briefdescription>
        <detaileddescription>
<para>This should be called as an argument to ztest_test_suite. The test will be run in the following order: <emphasis>setup</emphasis>, <emphasis>fn</emphasis>, <emphasis>teardown</emphasis>. ALL test functions will be run in user mode, and only if CONFIG_USERSPACE is enabled, otherwise this is the same as <ref refid="group__ztest__test__deprecated_1gafb04820b89dbc76bf28cb5e1c98764f8" kindref="member">ztest_unit_test_setup_teardown()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Main test function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>setup</parametername>
</parameternamelist>
<parameterdescription>
<para>Setup function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>teardown</parametername>
</parameternamelist>
<parameterdescription>
<para>Teardown function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="189" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" prot="public" static="no">
        <name>ztest_unit_test</name>
        <param><defname>fn</defname></param>
        <initializer>	<ref refid="group__ztest__test__deprecated_1gafb04820b89dbc76bf28cb5e1c98764f8" kindref="member">ztest_unit_test_setup_teardown</ref>(fn, <ref refid="group__ztest__test_1gaeb99bd1d29675ca8c31b519853cec422" kindref="member">unit_test_noop</ref>, <ref refid="group__ztest__test_1gaeb99bd1d29675ca8c31b519853cec422" kindref="member">unit_test_noop</ref>)</initializer>
        <briefdescription>
<para>Define a test function. </para>
        </briefdescription>
        <detaileddescription>
<para>This should be called as an argument to ztest_test_suite.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Test function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="201" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" prot="public" static="no">
        <name>ztest_user_unit_test</name>
        <param><defname>fn</defname></param>
        <initializer>	<ref refid="group__ztest__test__deprecated_1ga885301241dd259cb723603c8bbe29183" kindref="member">ztest_user_unit_test_setup_teardown</ref>(fn, <ref refid="group__ztest__test_1gaeb99bd1d29675ca8c31b519853cec422" kindref="member">unit_test_noop</ref>, <ref refid="group__ztest__test_1gaeb99bd1d29675ca8c31b519853cec422" kindref="member">unit_test_noop</ref>)</initializer>
        <briefdescription>
<para>Define a test function that should run as a user thread. </para>
        </briefdescription>
        <detaileddescription>
<para>This should be called as an argument to ztest_test_suite. If CONFIG_USERSPACE is not enabled, this is functionally identical to <ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Test function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="213" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" prot="public" static="no">
        <name>ztest_1cpu_unit_test</name>
        <param><defname>fn</defname></param>
        <initializer>	<ref refid="group__ztest__test__deprecated_1gafb04820b89dbc76bf28cb5e1c98764f8" kindref="member">ztest_unit_test_setup_teardown</ref>(fn, z_test_1cpu_start, z_test_1cpu_stop)</initializer>
        <briefdescription>
<para>Define a SMP-unsafe test function. </para>
        </briefdescription>
        <detaileddescription>
<para>As <ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test()</ref>, but ensures all test code runs on only one CPU when in SMP.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Test function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="225" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1gab5438441a57724ddf51e6dda62e2681b" prot="public" static="no">
        <name>ztest_1cpu_user_unit_test</name>
        <param><defname>fn</defname></param>
        <initializer>	<ref refid="group__ztest__test__deprecated_1ga885301241dd259cb723603c8bbe29183" kindref="member">ztest_user_unit_test_setup_teardown</ref>(fn, z_test_1cpu_start, z_test_1cpu_stop)</initializer>
        <briefdescription>
<para>Define a SMP-unsafe test function that should run as a user thread. </para>
        </briefdescription>
        <detaileddescription>
<para>As <ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test()</ref>, but ensures all test code runs on only one CPU when in SMP.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Test function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="240" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1ga2c7d0aa85e7f320d582395c5ded90133" prot="public" static="no">
        <name>ZTEST_DMEM</name>
        <initializer><ref refid="mem__protect_2userspace_2src_2main_8c_1a9067a0a2728b358c511417b2de42c731" kindref="member">K_APP_DMEM</ref>(<ref refid="group__ztest__test_1ga3adced2fdda96833e6b1ecbf3d61d446" kindref="member">ztest_mem_partition</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="248" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1gac3de5965061b1164a8033712c9094e23" prot="public" static="no">
        <name>ZTEST_BMEM</name>
        <initializer><ref refid="threads_2tls_2src_2main_8c_1a7a1968d4832a53406449a3ace7019fa2" kindref="member">K_APP_BMEM</ref>(<ref refid="group__ztest__test_1ga3adced2fdda96833e6b1ecbf3d61d446" kindref="member">ztest_mem_partition</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="249" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1ga44777f5011728bbff63fe3639c1b4aa8" prot="public" static="no">
        <name>ZTEST_SECTION</name>
        <initializer><ref refid="app__memdomain_8h_1a81962bb530118ffa13fccdf99f973787" kindref="member">K_APP_DMEM_SECTION</ref>(<ref refid="group__ztest__test_1ga3adced2fdda96833e6b1ecbf3d61d446" kindref="member">ztest_mem_partition</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="250" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" prot="public" static="no">
        <name>ztest_test_suite</name>
        <param><defname>suite</defname></param>
        <param><defname>...</defname></param>
        <initializer>	static <ref refid="group__ztest__test_1ga2c7d0aa85e7f320d582395c5ded90133" kindref="member">ZTEST_DMEM</ref> struct <ref refid="structunit__test" kindref="compound">unit_test</ref> _##suite[] = { __VA_ARGS__, { 0 } }</initializer>
        <briefdescription>
<para>Define a test suite. </para>
        </briefdescription>
        <detaileddescription>
<para>This function should be called in the following fashion: <programlisting filename=".c"><codeline><highlight class="normal"><ref refid="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" kindref="member">ztest_test_suite</ref>(test_suite_name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(test_function),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(test_other_function)</highlight></codeline>
<codeline><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" kindref="member">ztest_run_test_suite</ref>(test_suite_name);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>suite</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the testing suite </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="273" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" prot="public" static="no">
        <name>ztest_run_test_suite</name>
        <param><defname>suite</defname></param>
        <initializer>	z_ztest_run_test_suite(#suite, _##suite)</initializer>
        <briefdescription>
<para>Run the specified test suite. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>suite</parametername>
</parameternamelist>
<parameterdescription>
<para>Test suite to run. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="280" column="9" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__ztest__test__deprecated_1ga3adced2fdda96833e6b1ecbf3d61d446" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__mem__partition" kindref="compound">k_mem_partition</ref></type>
        <definition>struct k_mem_partition ztest_mem_partition</definition>
        <argsstring></argsstring>
        <name>ztest_mem_partition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="251" column="29" declfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" declline="251" declcolumn="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ztest__test__deprecated_8h_1a22616bfcdfec54ef4e8bda897dd84936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ztest_run_registered_test_suites</definition>
        <argsstring>(const void *state)</argsstring>
        <name>ztest_run_registered_test_suites</name>
        <param>
          <type>const void *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run the registered unit tests which return true from their pragma function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The current state of the machine as it relates to the test executable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of tests that ran. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="93" column="5" declfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" declline="93" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="ztest__test__deprecated_8h_1a4e6b65df4e0457fc5b50ba72d225aeea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ztest_verify_all_registered_test_suites_ran</definition>
        <argsstring>(void)</argsstring>
        <name>ztest_verify_all_registered_test_suites_ran</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Fails the test if any of the registered tests did not run. </para>
        </briefdescription>
        <detaileddescription>
<para>When registering test suites, a pragma function can be provided to determine WHEN the test should run. It is possible that a test suite could be registered but the pragma always prevents it from running. In cases where a test should make sure that ALL suites ran at least once, this function may be called at the end of <ref refid="ztest_8h_1a8a4533f287d99bb2d7c24c0e29c9a449" kindref="member">test_main()</ref>. It will cause the test to fail if any suite was registered but never ran. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="104" column="6" declfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" declline="104" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ztest__test__deprecated_1gacd6eb423f54dce8544f7c3b1618c0374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ztest_test_fail</definition>
        <argsstring>(void)</argsstring>
        <name>ztest_test_fail</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Fail the currently running test. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the function called from failed assertions and the like. You probably don&apos;t need to call it yourself. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="134" column="6" declfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" declline="134" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ztest__test__deprecated_1ga085d30a04102ebb8c3f2206020723ee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ztest_test_pass</definition>
        <argsstring>(void)</argsstring>
        <name>ztest_test_pass</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Pass the currently running test. </para>
        </briefdescription>
        <detaileddescription>
<para>Normally a test passes just by returning without an assertion failure. However, if the success case for your test involves a fatal fault, you can call this function from k_sys_fatal_error_handler to indicate that the test passed before aborting the thread. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="144" column="6" declfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" declline="144" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ztest_test_skip</definition>
        <argsstring>(void)</argsstring>
        <name>ztest_test_skip</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Skip the current test. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="149" column="6" declfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" declline="149" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ztest__test__deprecated_1gaeb99bd1d29675ca8c31b519853cec422" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void unit_test_noop</definition>
        <argsstring>(void)</argsstring>
        <name>unit_test_noop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Do nothing, successfully. </para>
        </briefdescription>
        <detaileddescription>
<para>Unit test / setup function / teardown function that does nothing, successfully. Can be used as a parameter to <ref refid="group__ztest__test__deprecated_1gafb04820b89dbc76bf28cb5e1c98764f8" kindref="member">ztest_unit_test_setup_teardown()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h" line="158" column="20" bodyfile="subsys/testsuite/ztest/include/ztest_test_deprecated.h" bodystart="158" bodyend="160"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Zephyr testing framework _test_deprecated. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_TESTSUITE_ZTEST_TEST_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_TESTSUITE_ZTEST_TEST_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="app__memdomain_8h" kindref="compound">app_memory/app_memdomain.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="init_8h" kindref="compound">init.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdbool_8h" kindref="compound">stdbool.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structunit__test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structunit__test" kindref="compound">unit_test</ref><sp/>{</highlight></codeline>
<codeline lineno="25" refid="structunit__test_1acce63559cc2538b451f8d3a320797e86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structunit__test_1acce63559cc2538b451f8d3a320797e86" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="26" refid="structunit__test_1ac2869a6bcc6c12e65b6ef616f949f412" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structunit__test_1ac2869a6bcc6c12e65b6ef616f949f412" kindref="member">test</ref>)(void);</highlight></codeline>
<codeline lineno="27" refid="structunit__test_1a406d10a410469ba6e482c14374b44263" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structunit__test_1a406d10a410469ba6e482c14374b44263" kindref="member">setup</ref>)(void);</highlight></codeline>
<codeline lineno="28" refid="structunit__test_1a6063f7ab9f403fb534ef36c9e16a5b1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structunit__test_1a6063f7ab9f403fb534ef36c9e16a5b1a" kindref="member">teardown</ref>)(void);</highlight></codeline>
<codeline lineno="29" refid="structunit__test_1ab6fd6b016bf956b136e6ff2aefce58b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structunit__test_1ab6fd6b016bf956b136e6ff2aefce58b2" kindref="member">thread_options</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structztest__suite__stats" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structztest__suite__stats" kindref="compound">ztest_suite_stats</ref><sp/>{</highlight></codeline>
<codeline lineno="37" refid="structztest__suite__stats_1a94a4d70901b2d2b57cbaf03b9c6d21a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structztest__suite__stats_1a94a4d70901b2d2b57cbaf03b9c6d21a9" kindref="member">run_count</ref>;</highlight></codeline>
<codeline lineno="39" refid="structztest__suite__stats_1a04d888a17a39bdf62f1b935968d58b92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structztest__suite__stats_1a04d888a17a39bdf62f1b935968d58b92" kindref="member">skip_count</ref>;</highlight></codeline>
<codeline lineno="41" refid="structztest__suite__stats_1a58f7c9379bc9bf18c2184fdcd2bbff8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structztest__suite__stats_1a58f7c9379bc9bf18c2184fdcd2bbff8c" kindref="member">fail_count</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structztest__suite__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structztest__suite__node" kindref="compound">ztest_suite_node</ref><sp/>{</highlight></codeline>
<codeline lineno="50" refid="structztest__suite__node_1ad28a3d7f4ac80a2aee55c95385426f23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structztest__suite__node_1ad28a3d7f4ac80a2aee55c95385426f23" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="52" refid="structztest__suite__node_1a4caff08d7b8fe0a8be383bcb61c36941" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structunit__test" kindref="compound">unit_test</ref><sp/>*<ref refid="structztest__suite__node_1a4caff08d7b8fe0a8be383bcb61c36941" kindref="member">suite</ref>;</highlight></codeline>
<codeline lineno="60" refid="structztest__suite__node_1abd125d188f1f2b43efd4e93a334bf648" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref><sp/>(*<ref refid="structztest__suite__node_1abd125d188f1f2b43efd4e93a334bf648" kindref="member">predicate</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="62" refid="structztest__suite__node_1a5f5c9722ac32f6fb0ef49e84c40b2e80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structztest__suite__stats" kindref="compound">ztest_suite_stats</ref><sp/><ref refid="structztest__suite__node_1a5f5c9722ac32f6fb0ef49e84c40b2e80" kindref="member">stats</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structztest__suite__node" kindref="compound">ztest_suite_node</ref><sp/>_ztest_suite_node_list_start[];</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structztest__suite__node" kindref="compound">ztest_suite_node</ref><sp/>_ztest_suite_node_list_end[];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="ztest__test__deprecated_8h_1ab392a7f36eebce4eb6d1af8e42831e48" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_register_test_suite(SUITE_NAME,<sp/>PREDICATE,<sp/>args...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ztest_test_suite(SUITE_NAME,<sp/>##args);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>STRUCT_SECTION_ITERABLE(ztest_suite_node,<sp/>z_ztest_test_node_##SUITE_NAME)<sp/>=<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/>#SUITE_NAME,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.suite<sp/>=<sp/>_##SUITE_NAME,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.predicate<sp/>=<sp/>PREDICATE,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="ztest__test__deprecated_8h_1a22616bfcdfec54ef4e8bda897dd84936" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ztest__test__deprecated_8h_1a22616bfcdfec54ef4e8bda897dd84936" kindref="member">ztest_run_registered_test_suites</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="ztest__test__deprecated_8h_1a4e6b65df4e0457fc5b50ba72d225aeea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ztest__test__deprecated_8h_1a4e6b65df4e0457fc5b50ba72d225aeea" kindref="member">ztest_verify_all_registered_test_suites_ran</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_ztest_run_test_suite(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structztest__suite__node_1ad28a3d7f4ac80a2aee55c95385426f23" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structunit__test" kindref="compound">unit_test</ref><sp/>*<ref refid="structztest__suite__node_1a4caff08d7b8fe0a8be383bcb61c36941" kindref="member">suite</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="group__ztest__test__deprecated_1gacd6eb423f54dce8544f7c3b1618c0374" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ztest__test__deprecated_1gacd6eb423f54dce8544f7c3b1618c0374" kindref="member">ztest_test_fail</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="group__ztest__test__deprecated_1ga085d30a04102ebb8c3f2206020723ee0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ztest__test__deprecated_1ga085d30a04102ebb8c3f2206020723ee0" kindref="member">ztest_test_pass</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="group__ztest__test__deprecated_1gaeb99bd1d29675ca8c31b519853cec422" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ztest__test__deprecated_1gaeb99bd1d29675ca8c31b519853cec422" kindref="member">unit_test_noop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="group__ztest__test__deprecated_1gafb04820b89dbc76bf28cb5e1c98764f8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_unit_test_setup_teardown(fn,<sp/>setup,<sp/>teardown)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STRINGIFY(fn),<sp/>fn,<sp/>setup,<sp/>teardown,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="group__ztest__test__deprecated_1ga885301241dd259cb723603c8bbe29183" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_user_unit_test_setup_teardown(fn,<sp/>setup,<sp/>teardown)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STRINGIFY(fn),<sp/>fn,<sp/>setup,<sp/>teardown,<sp/>K_USER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_unit_test(fn)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ztest_unit_test_setup_teardown(fn,<sp/>unit_test_noop,<sp/>unit_test_noop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_user_unit_test(fn)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ztest_user_unit_test_setup_teardown(fn,<sp/>unit_test_noop,<sp/>unit_test_noop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_SMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_1cpu_unit_test(fn)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ztest_unit_test_setup_teardown(fn,<sp/>z_test_1cpu_start,<sp/>z_test_1cpu_stop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_1cpu_unit_test(fn)<sp/>ztest_unit_test(fn)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_SMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="group__ztest__test__deprecated_1gab5438441a57724ddf51e6dda62e2681b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_1cpu_user_unit_test(fn)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ztest_user_unit_test_setup_teardown(fn,<sp/>z_test_1cpu_start,<sp/>z_test_1cpu_stop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_1cpu_user_unit_test(fn)<sp/>ztest_user_unit_test(fn)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>definitions<sp/>for<sp/>use<sp/>with<sp/>testing<sp/>application<sp/>shared<sp/>memory<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="group__ztest__test__deprecated_1ga2c7d0aa85e7f320d582395c5ded90133" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZTEST_DMEM<sp/><sp/><sp/><sp/><sp/><sp/>K_APP_DMEM(ztest_mem_partition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="group__ztest__test__deprecated_1gac3de5965061b1164a8033712c9094e23" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZTEST_BMEM<sp/><sp/><sp/><sp/><sp/><sp/>K_APP_BMEM(ztest_mem_partition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="group__ztest__test__deprecated_1ga44777f5011728bbff63fe3639c1b4aa8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZTEST_SECTION<sp/><sp/><sp/>K_APP_DMEM_SECTION(ztest_mem_partition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__mem__partition" kindref="compound">k_mem_partition</ref><sp/><ref refid="group__ztest__test__deprecated_1ga3adced2fdda96833e6b1ecbf3d61d446" kindref="member">ztest_mem_partition</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZTEST_DMEM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZTEST_BMEM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZTEST_SECTION<sp/><sp/><sp/>.data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_test_suite(suite,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>ZTEST_DMEM<sp/>struct<sp/>unit_test<sp/>_##suite[]<sp/>=<sp/>{<sp/>__VA_ARGS__,<sp/>{<sp/>0<sp/>}<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ztest_run_test_suite(suite)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_ztest_run_test_suite(#suite,<sp/>_##suite)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_TESTSUITE_ZTEST_TEST_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="subsys/testsuite/ztest/include/ztest_test_deprecated.h"/>
  </compounddef>
</doxygen>
