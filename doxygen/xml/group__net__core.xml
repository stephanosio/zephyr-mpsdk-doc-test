<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__net__core" kind="group">
    <compoundname>net_core</compoundname>
    <title>Network Core Library</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__net__core_1ga8e5393f3bdd85491f221324e637c3896" prot="public" static="no" strong="no">
        <type></type>
        <name>net_verdict</name>
        <enumvalue id="group__net__core_1gga8e5393f3bdd85491f221324e637c3896a2a49d766ffb9422176da8e4712fdb047" prot="public">
          <name>NET_OK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Packet has been taken care of. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__net__core_1gga8e5393f3bdd85491f221324e637c3896aac7e9cac1cfef82e00232bd746e93b4f" prot="public">
          <name>NET_CONTINUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Packet has not been touched, other part should decide about its fate. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__net__core_1gga8e5393f3bdd85491f221324e637c3896a464f79c041fb589d518eeef445c477c3" prot="public">
          <name>NET_DROP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Packet must be dropped. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Net Verdict. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_core.h" line="97" column="1" bodyfile="include/net/net_core.h" bodystart="97" bodyend="106"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__net__core_1ga3421119d2b1797ee5d70f736a61f93b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_recv_data</definition>
        <argsstring>(struct net_if *iface, struct net_pkt *pkt)</argsstring>
        <name>net_recv_data</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <param>
          <type>struct <ref refid="structnet__pkt" kindref="compound">net_pkt</ref> *</type>
          <declname>pkt</declname>
        </param>
        <briefdescription>
<para>Called by lower network stack or network device driver when a network packet has been received. The function will push the packet up in the network stack for further processing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>Network interface where the packet was received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Network packet data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt;0 if error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_core.h" line="118" column="5" declfile="include/net/net_core.h" declline="118" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__core_1ga1a1699666716229a59486a51e46044fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_send_data</definition>
        <argsstring>(struct net_pkt *pkt)</argsstring>
        <name>net_send_data</name>
        <param>
          <type>struct <ref refid="structnet__pkt" kindref="compound">net_pkt</ref> *</type>
          <declname>pkt</declname>
        </param>
        <briefdescription>
<para>Send data to network. </para>
        </briefdescription>
        <detaileddescription>
<para>Send data to network. This should not be used normally by applications as it requires that the network packet is properly constructed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Network packet.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if ok, &lt;0 if error. If &lt;0 is returned, then the caller needs to unref the pkt in order to avoid memory leak. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_core.h" line="132" column="5" declfile="include/net/net_core.h" declline="132" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Network core library. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
