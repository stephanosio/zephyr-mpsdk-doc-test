<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structlwm2m__ctx" kind="struct" language="C++" prot="public">
    <compoundname>lwm2m_ctx</compoundname>
    <includes refid="lwm2m_8h" local="no">lwm2m.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structlwm2m__ctx_1a4ed594ecc5d442ffc2a604a879f5bfb7" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref></type>
        <definition>struct sockaddr lwm2m_ctx::remote_addr</definition>
        <argsstring></argsstring>
        <name>remote_addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destination address storage </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="114" column="15" bodyfile="include/net/lwm2m.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlwm2m__ctx_1a6f4fbf144720a12146b6aef4f7a52c61" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structcoap__pending" kindref="compound">coap_pending</ref></type>
        <definition>struct coap_pending lwm2m_ctx::pendings[CONFIG_LWM2M_ENGINE_MAX_PENDING]</definition>
        <argsstring>[CONFIG_LWM2M_ENGINE_MAX_PENDING]</argsstring>
        <name>pendings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private CoAP and networking structures </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="117" column="19" bodyfile="include/net/lwm2m.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlwm2m__ctx_1a05cbe7788de439e2a0d9ae878f461a40" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structcoap__reply" kindref="compound">coap_reply</ref></type>
        <definition>struct coap_reply lwm2m_ctx::replies[CONFIG_LWM2M_ENGINE_MAX_REPLIES]</definition>
        <argsstring>[CONFIG_LWM2M_ENGINE_MAX_REPLIES]</argsstring>
        <name>replies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="118" column="17" bodyfile="include/net/lwm2m.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlwm2m__ctx_1afe06655401b4820e9d2cb5f12aefe0a3" prot="public" static="no" mutable="no">
        <type><ref refid="slist_8h_1a44658c336b634c03938a251cdc8134f8" kindref="member">sys_slist_t</ref></type>
        <definition>sys_slist_t lwm2m_ctx::pending_sends</definition>
        <argsstring></argsstring>
        <name>pending_sends</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="119" column="13" bodyfile="include/net/lwm2m.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlwm2m__ctx_1a2501bb0908c67a77fc31cf5d35811967" prot="public" static="no" mutable="no">
        <type><ref refid="slist_8h_1a44658c336b634c03938a251cdc8134f8" kindref="member">sys_slist_t</ref></type>
        <definition>sys_slist_t lwm2m_ctx::observer</definition>
        <argsstring></argsstring>
        <name>observer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="120" column="13" bodyfile="include/net/lwm2m.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlwm2m__ctx_1a9b56ad9b3f2202d25b8c48f34a898dd3" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* lwm2m_ctx::processed_req</definition>
        <argsstring></argsstring>
        <name>processed_req</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to currently processed request, for internal LwM2M engine use. The underlying type is <computeroutput>struct lwm2m_message</computeroutput>, but since it&apos;s declared in a private header and not exposed to the application, it&apos;s stored as a void pointer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="127" column="6" bodyfile="include/net/lwm2m.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlwm2m__ctx_1aeb1e3ffc83853f74f2201f582917c2ce" prot="public" static="no" mutable="no">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool lwm2m_ctx::use_dtls</definition>
        <argsstring></argsstring>
        <name>use_dtls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flag to indicate if context should use DTLS. Enabled via the use of coaps:// protocol prefix in connection information. NOTE: requires CONFIG_LWM2M_DTLS_SUPPORT=y </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="151" column="6" bodyfile="include/net/lwm2m.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlwm2m__ctx_1ab5fe85963a265f9c059a25138a637e02" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int lwm2m_ctx::sec_obj_inst</definition>
        <argsstring></argsstring>
        <name>sec_obj_inst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current index of Security Object used for server credentials </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="154" column="5" bodyfile="include/net/lwm2m.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlwm2m__ctx_1a76d92a14bf1729d7b0fee174c51ed4bf" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int lwm2m_ctx::srv_obj_inst</definition>
        <argsstring></argsstring>
        <name>srv_obj_inst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current index of Server Object used in this context. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="157" column="5" bodyfile="include/net/lwm2m.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlwm2m__ctx_1aafa787c2b7ea7599c51d9247ea9f1090" prot="public" static="no" mutable="no">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool lwm2m_ctx::bootstrap_mode</definition>
        <argsstring></argsstring>
        <name>bootstrap_mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flag to enable BOOTSTRAP interface. See Section 5.2 &quot;Bootstrap Interface&quot; of LwM2M Technical Specification 1.0.2 for more information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="163" column="6" bodyfile="include/net/lwm2m.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlwm2m__ctx_1afed1a599a72f131e4f196848c3e6fe85" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int lwm2m_ctx::sock_fd</definition>
        <argsstring></argsstring>
        <name>sock_fd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Socket File Descriptor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="166" column="5" bodyfile="include/net/lwm2m.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlwm2m__ctx_1a1b90780926f3cda2d48dfa8f94b1efd8" prot="public" static="no" mutable="no">
        <type><ref refid="group__lwm2m__api_1gae7bf50f9abf1b82b76ac3e9175e685ac" kindref="member">lwm2m_socket_fault_cb_t</ref></type>
        <definition>lwm2m_socket_fault_cb_t lwm2m_ctx::fault_cb</definition>
        <argsstring></argsstring>
        <name>fault_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Socket fault callback. LwM2M processing thread will call this callback in case of socket errors on receive. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="171" column="25" bodyfile="include/net/lwm2m.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlwm2m__ctx_1a412bd706adcd17ec8c00f1779012a845" prot="public" static="no" mutable="no">
        <type><ref refid="group__lwm2m__api_1gad7bea67e16e1e831e0f949dbf83d5afe" kindref="member">lwm2m_observe_cb_t</ref></type>
        <definition>lwm2m_observe_cb_t lwm2m_ctx::observe_cb</definition>
        <argsstring></argsstring>
        <name>observe_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback for new or cancelled observations, and acknowledged or timed out notifications. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="176" column="20" bodyfile="include/net/lwm2m.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlwm2m__ctx_1a574b50b9ec4cdfb5fac53a9b6d8c31d5" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t lwm2m_ctx::validate_buf[CONFIG_LWM2M_ENGINE_VALIDATION_BUFFER_SIZE]</definition>
        <argsstring>[CONFIG_LWM2M_ENGINE_VALIDATION_BUFFER_SIZE]</argsstring>
        <name>validate_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Validation buffer. Used as a temporary buffer to decode the resource value before validation. On successful validation, its content is copied into the actual resource buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/lwm2m.h" line="182" column="9" bodyfile="include/net/lwm2m.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>LwM2M context structure to maintain information for a single LwM2M connection. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6">
        <label>_slist</label>
      </node>
      <node id="5">
        <label>coap_packet</label>
        <link refid="structcoap__packet"/>
      </node>
      <node id="3">
        <label>coap_pending</label>
        <link refid="structcoap__pending"/>
        <childnode refid="2" relation="usage">
          <edgelabel>addr</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>coap_reply</label>
        <link refid="structcoap__reply"/>
        <childnode refid="5" relation="usage">
          <edgelabel>reply</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>lwm2m_ctx</label>
        <link refid="structlwm2m__ctx"/>
        <childnode refid="2" relation="usage">
          <edgelabel>remote_addr</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>pendings</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>replies</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>observer</edgelabel>
          <edgelabel>pending_sends</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>observe_cb</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>lwm2m_obj_path</label>
        <link refid="structlwm2m__obj__path"/>
      </node>
      <node id="2">
        <label>sockaddr</label>
        <link refid="structsockaddr"/>
      </node>
    </collaborationgraph>
    <location file="include/net/lwm2m.h" line="112" column="1" bodyfile="include/net/lwm2m.h" bodystart="112" bodyend="183"/>
    <listofallmembers>
      <member refid="structlwm2m__ctx_1aafa787c2b7ea7599c51d9247ea9f1090" prot="public" virt="non-virtual"><scope>lwm2m_ctx</scope><name>bootstrap_mode</name></member>
      <member refid="structlwm2m__ctx_1a1b90780926f3cda2d48dfa8f94b1efd8" prot="public" virt="non-virtual"><scope>lwm2m_ctx</scope><name>fault_cb</name></member>
      <member refid="structlwm2m__ctx_1a412bd706adcd17ec8c00f1779012a845" prot="public" virt="non-virtual"><scope>lwm2m_ctx</scope><name>observe_cb</name></member>
      <member refid="structlwm2m__ctx_1a2501bb0908c67a77fc31cf5d35811967" prot="public" virt="non-virtual"><scope>lwm2m_ctx</scope><name>observer</name></member>
      <member refid="structlwm2m__ctx_1afe06655401b4820e9d2cb5f12aefe0a3" prot="public" virt="non-virtual"><scope>lwm2m_ctx</scope><name>pending_sends</name></member>
      <member refid="structlwm2m__ctx_1a6f4fbf144720a12146b6aef4f7a52c61" prot="public" virt="non-virtual"><scope>lwm2m_ctx</scope><name>pendings</name></member>
      <member refid="structlwm2m__ctx_1a9b56ad9b3f2202d25b8c48f34a898dd3" prot="public" virt="non-virtual"><scope>lwm2m_ctx</scope><name>processed_req</name></member>
      <member refid="structlwm2m__ctx_1a4ed594ecc5d442ffc2a604a879f5bfb7" prot="public" virt="non-virtual"><scope>lwm2m_ctx</scope><name>remote_addr</name></member>
      <member refid="structlwm2m__ctx_1a05cbe7788de439e2a0d9ae878f461a40" prot="public" virt="non-virtual"><scope>lwm2m_ctx</scope><name>replies</name></member>
      <member refid="structlwm2m__ctx_1ab5fe85963a265f9c059a25138a637e02" prot="public" virt="non-virtual"><scope>lwm2m_ctx</scope><name>sec_obj_inst</name></member>
      <member refid="structlwm2m__ctx_1afed1a599a72f131e4f196848c3e6fe85" prot="public" virt="non-virtual"><scope>lwm2m_ctx</scope><name>sock_fd</name></member>
      <member refid="structlwm2m__ctx_1a76d92a14bf1729d7b0fee174c51ed4bf" prot="public" virt="non-virtual"><scope>lwm2m_ctx</scope><name>srv_obj_inst</name></member>
      <member refid="structlwm2m__ctx_1aeb1e3ffc83853f74f2201f582917c2ce" prot="public" virt="non-virtual"><scope>lwm2m_ctx</scope><name>use_dtls</name></member>
      <member refid="structlwm2m__ctx_1a574b50b9ec4cdfb5fac53a9b6d8c31d5" prot="public" virt="non-virtual"><scope>lwm2m_ctx</scope><name>validate_buf</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
