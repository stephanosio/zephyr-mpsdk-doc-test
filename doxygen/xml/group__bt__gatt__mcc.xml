<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__bt__gatt__mcc" kind="group">
    <compoundname>bt_gatt_mcc</compoundname>
    <title>Media Control Client (MCC)</title>
    <innerclass refid="structbt__mcc__cb" prot="public">bt_mcc_cb</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1gab268faeca207e115ee1be0843ab8c342" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_discover_mcs_cb) (struct bt_conn *conn, int err)</definition>
        <argsstring>)(struct bt_conn *conn, int err)</argsstring>
        <name>bt_mcc_discover_mcs_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1gaa1f9ead03b4cccaff1e3390b8052b0f3" kindref="member">bt_mcc_discover_mcs()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when a media control server is discovered</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="43" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1gaa943b61848ee43e91d473f6fdd0a604f" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_read_player_name_cb) (struct bt_conn *conn, int err, const char *name)</definition>
        <argsstring>)(struct bt_conn *conn, int err, const char *name)</argsstring>
        <name>bt_mcc_read_player_name_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1ga724ce71fc88f1ca4bcf209c92c177f36" kindref="member">bt_mcc_read_player_name()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the player name is read or notified</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Player name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="54" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1gaaddc4abe38f6ca811967ae6a10d8f8f0" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_read_icon_url_cb) (struct bt_conn *conn, int err, const char *icon_url)</definition>
        <argsstring>)(struct bt_conn *conn, int err, const char *icon_url)</argsstring>
        <name>bt_mcc_read_icon_url_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1ga38733456db6bc6558a511e104577c9c9" kindref="member">bt_mcc_read_icon_url()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the icon URL is read</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>icon_url</parametername>
</parameternamelist>
<parameterdescription>
<para>The URL of the Icon </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="78" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1ga67611a3068284b0c7fbb3ef07dfe7688" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_track_changed_ntf_cb) (struct bt_conn *conn, int err)</definition>
        <argsstring>)(struct bt_conn *conn, int err)</argsstring>
        <name>bt_mcc_track_changed_ntf_cb</name>
        <briefdescription>
<para>Callback function for track changed notifications. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when a track change is notified.</para>
<para>The track changed characteristic is a special case. It can not be read or set, it can only be notified.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="91" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1ga6927860f1803aeade4994610da32d402" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_read_track_title_cb) (struct bt_conn *conn, int err, const char *title)</definition>
        <argsstring>)(struct bt_conn *conn, int err, const char *title)</argsstring>
        <name>bt_mcc_read_track_title_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1ga7dfa14489a4cea4b00053c9aa75cf373" kindref="member">bt_mcc_read_track_title()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the track title is read or notified</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The title of the track </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="103" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1ga7cdb524ff9c34f24c1740adb9eca072c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_read_track_duration_cb) (struct bt_conn *conn, int err, int32_t dur)</definition>
        <argsstring>)(struct bt_conn *conn, int err, int32_t dur)</argsstring>
        <name>bt_mcc_read_track_duration_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1ga50a45f043bd2ae1741a120e02e9dc2f5" kindref="member">bt_mcc_read_track_duration()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the track duration is read or notified</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dur</parametername>
</parameternamelist>
<parameterdescription>
<para>The duration of the track </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="114" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1ga128883c867b10e57d3f2f26a708b7263" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_read_track_position_cb) (struct bt_conn *conn, int err, int32_t pos)</definition>
        <argsstring>)(struct bt_conn *conn, int err, int32_t pos)</argsstring>
        <name>bt_mcc_read_track_position_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1gaf143098f5dfcfba01df3d6f06472779e" kindref="member">bt_mcc_read_track_position()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the track position is read or notified</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The Track Position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="125" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1ga1167f5e2ef4a7e78469aefc0cef18bff" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_set_track_position_cb) (struct bt_conn *conn, int err, int32_t pos)</definition>
        <argsstring>)(struct bt_conn *conn, int err, int32_t pos)</argsstring>
        <name>bt_mcc_set_track_position_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1gad324366d33bef6b1ed1c8fc881bf44cf" kindref="member">bt_mcc_set_track_position()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the track position is set</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The Track Position set (or attempted to set) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="136" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1ga6f5383be3f344c25361786d903640909" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_read_playback_speed_cb) (struct bt_conn *conn, int err, int8_t speed)</definition>
        <argsstring>)(struct bt_conn *conn, int err, int8_t speed)</argsstring>
        <name>bt_mcc_read_playback_speed_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1gaa566a4c42f0ab0ab6feddf4e25845609" kindref="member">bt_mcc_read_playback_speed()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the playback speed is read or notified</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>The Playback Speed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="147" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1ga1322f2ddbb587c70fd23a7ccfc1fc779" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_set_playback_speed_cb) (struct bt_conn *conn, int err, int8_t speed)</definition>
        <argsstring>)(struct bt_conn *conn, int err, int8_t speed)</argsstring>
        <name>bt_mcc_set_playback_speed_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1ga1382e5b6000896dc94f6489909301719" kindref="member">bt_mcc_set_playback_speed()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the playback speed is set</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>The Playback Speed set (or attempted to set) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="158" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1ga3089e6165e8491325f7205279bb5bb83" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_read_seeking_speed_cb) (struct bt_conn *conn, int err, int8_t speed)</definition>
        <argsstring>)(struct bt_conn *conn, int err, int8_t speed)</argsstring>
        <name>bt_mcc_read_seeking_speed_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1ga366fdfaa23cef9f1c3ba7ddd36a67658" kindref="member">bt_mcc_read_seeking_speed()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the seeking speed is read or notified</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>The Seeking Speed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="169" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1gafb0869e0ef5332d39070081efdacf17c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_read_playing_order_cb) (struct bt_conn *conn, int err, uint8_t order)</definition>
        <argsstring>)(struct bt_conn *conn, int err, uint8_t order)</argsstring>
        <name>bt_mcc_read_playing_order_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1ga077a134ff1404fb76aa756a5531fd1d7" kindref="member">bt_mcc_read_playing_order()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the playing order is read or notified</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>order</parametername>
</parameternamelist>
<parameterdescription>
<para>The playback order </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="271" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1ga1a12fb89adf29c83bca02f701213c6d7" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_set_playing_order_cb) (struct bt_conn *conn, int err, uint8_t order)</definition>
        <argsstring>)(struct bt_conn *conn, int err, uint8_t order)</argsstring>
        <name>bt_mcc_set_playing_order_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1ga05295649385c3a337401765627d09553" kindref="member">bt_mcc_set_playing_order()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the playing order is set</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>order</parametername>
</parameternamelist>
<parameterdescription>
<para>The Playing Order set (or attempted to set) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="282" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1gac45a2aff295535f70ac4a070e970b7a0" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_read_playing_orders_supported_cb) (struct bt_conn *conn, int err, uint16_t orders)</definition>
        <argsstring>)(struct bt_conn *conn, int err, uint16_t orders)</argsstring>
        <name>bt_mcc_read_playing_orders_supported_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1gaf61f6fcf3f96ccb6f5a72ffaad27dec4" kindref="member">bt_mcc_read_playing_orders_supported()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the supported playing orders are read or notified</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orders</parametername>
</parameternamelist>
<parameterdescription>
<para>The playing orders supported (bitmap) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="293" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1ga200a827f4bf5d65570ddabd028269f77" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_read_media_state_cb) (struct bt_conn *conn, int err, uint8_t state)</definition>
        <argsstring>)(struct bt_conn *conn, int err, uint8_t state)</argsstring>
        <name>bt_mcc_read_media_state_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1gac1b440cfa54dd4b6e23bb47bf885f88d" kindref="member">bt_mcc_read_media_state()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the media state is read or notified</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The Media State </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="305" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1gab8ebc0c3101acf9b717d814a04860920" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_send_cmd_cb) (struct bt_conn *conn, int err, struct mpl_cmd cmd)</definition>
        <argsstring>)(struct bt_conn *conn, int err, struct mpl_cmd cmd)</argsstring>
        <name>bt_mcc_send_cmd_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1gaace3924896d6132ce936fa13516244e4" kindref="member">bt_mcc_send_cmd()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when a command is sent, i.e. when the media control point is set</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>The command sent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="316" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1ga29dded3f3bc111df88a5dc382ac4718d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_cmd_ntf_cb) (struct bt_conn *conn, int err, struct mpl_cmd_ntf ntf)</definition>
        <argsstring>)(struct bt_conn *conn, int err, struct mpl_cmd_ntf ntf)</argsstring>
        <name>bt_mcc_cmd_ntf_cb</name>
        <briefdescription>
<para>Callback function for command notifications. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the media control point is notified</para>
<para>Notifications for commands (i.e. for writes to the media control point) use a different parameter structure than what is used for sending commands (writing to the media control point)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ntf</parametername>
</parameternamelist>
<parameterdescription>
<para>The command notification </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="331" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1gab37df36e15132b9235d1093f5aa403cc" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_read_opcodes_supported_cb) (struct bt_conn *conn, int err, uint32_t opcodes)</definition>
        <argsstring>)(struct bt_conn *conn, int err, uint32_t opcodes)</argsstring>
        <name>bt_mcc_read_opcodes_supported_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1ga692160554947f92e8c81912c5e597086" kindref="member">bt_mcc_read_opcodes_supported()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the supported opcodes (commands) are read or notified</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opcodes</parametername>
</parameternamelist>
<parameterdescription>
<para>The supported opcodes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="342" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mcc_1gadb607997fdcb3e57bbfc90790de4b927" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mcc_read_content_control_id_cb) (struct bt_conn *conn, int err, uint8_t ccid)</definition>
        <argsstring>)(struct bt_conn *conn, int err, uint8_t ccid)</argsstring>
        <name>bt_mcc_read_content_control_id_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mcc_1ga77cbf810c35d1a17efce1fae6a941963" kindref="member">bt_mcc_read_content_control_id()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the content control ID is read</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to initialise the media control client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ccid</parametername>
</parameternamelist>
<parameterdescription>
<para>The Content Control ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="400" column="9" bodyfile="include/bluetooth/audio/mcc.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__gatt__mcc_1ga94de08bb0a1e1324600e4957b648e92b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_init</definition>
        <argsstring>(struct bt_mcc_cb *cb)</argsstring>
        <name>bt_mcc_init</name>
        <param>
          <type>struct <ref refid="structbt__mcc__cb" kindref="compound">bt_mcc_cb</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Initialize Media Control Client. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callbacks to be used</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="574" column="5" declfile="include/bluetooth/audio/mcc.h" declline="574" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1gaa1f9ead03b4cccaff1e3390b8052b0f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_discover_mcs</definition>
        <argsstring>(struct bt_conn *conn, bool subscribe)</argsstring>
        <name>bt_mcc_discover_mcs</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>subscribe</declname>
        </param>
        <briefdescription>
<para>Discover Media Control Service. </para>
        </briefdescription>
        <detaileddescription>
<para>Discover Media Control Service (MCS) on the server given by the connection Optionally subscribe to notifications.</para>
<para>Shall be called once, after media control client initialization and before using other media control client functionality.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subscribe</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to subscribe to notifications</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="591" column="5" declfile="include/bluetooth/audio/mcc.h" declline="591" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1ga724ce71fc88f1ca4bcf209c92c177f36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_read_player_name</definition>
        <argsstring>(struct bt_conn *conn)</argsstring>
        <name>bt_mcc_read_player_name</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Read Media Player Name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="600" column="5" declfile="include/bluetooth/audio/mcc.h" declline="600" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1ga38733456db6bc6558a511e104577c9c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_read_icon_url</definition>
        <argsstring>(struct bt_conn *conn)</argsstring>
        <name>bt_mcc_read_icon_url</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Read Icon Object URL. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="620" column="5" declfile="include/bluetooth/audio/mcc.h" declline="620" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1ga7dfa14489a4cea4b00053c9aa75cf373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_read_track_title</definition>
        <argsstring>(struct bt_conn *conn)</argsstring>
        <name>bt_mcc_read_track_title</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Read Track Title. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="629" column="5" declfile="include/bluetooth/audio/mcc.h" declline="629" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1ga50a45f043bd2ae1741a120e02e9dc2f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_read_track_duration</definition>
        <argsstring>(struct bt_conn *conn)</argsstring>
        <name>bt_mcc_read_track_duration</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Read Track Duration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="638" column="5" declfile="include/bluetooth/audio/mcc.h" declline="638" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1gaf143098f5dfcfba01df3d6f06472779e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_read_track_position</definition>
        <argsstring>(struct bt_conn *conn)</argsstring>
        <name>bt_mcc_read_track_position</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Read Track Position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="647" column="5" declfile="include/bluetooth/audio/mcc.h" declline="647" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1gad324366d33bef6b1ed1c8fc881bf44cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_set_track_position</definition>
        <argsstring>(struct bt_conn *conn, int32_t pos)</argsstring>
        <name>bt_mcc_set_track_position</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Set Track position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Track position</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="657" column="5" declfile="include/bluetooth/audio/mcc.h" declline="657" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1gaa566a4c42f0ab0ab6feddf4e25845609" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_read_playback_speed</definition>
        <argsstring>(struct bt_conn *conn)</argsstring>
        <name>bt_mcc_read_playback_speed</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Read Playback speed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="666" column="5" declfile="include/bluetooth/audio/mcc.h" declline="666" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1ga1382e5b6000896dc94f6489909301719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_set_playback_speed</definition>
        <argsstring>(struct bt_conn *conn, int8_t speed)</argsstring>
        <name>bt_mcc_set_playback_speed</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref></type>
          <declname>speed</declname>
        </param>
        <briefdescription>
<para>Set Playback Speed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>Playback speed</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="676" column="5" declfile="include/bluetooth/audio/mcc.h" declline="676" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1ga366fdfaa23cef9f1c3ba7ddd36a67658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_read_seeking_speed</definition>
        <argsstring>(struct bt_conn *conn)</argsstring>
        <name>bt_mcc_read_seeking_speed</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Read Seeking speed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="685" column="5" declfile="include/bluetooth/audio/mcc.h" declline="685" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1ga077a134ff1404fb76aa756a5531fd1d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_read_playing_order</definition>
        <argsstring>(struct bt_conn *conn)</argsstring>
        <name>bt_mcc_read_playing_order</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Read Playing Order. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="778" column="5" declfile="include/bluetooth/audio/mcc.h" declline="778" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1ga05295649385c3a337401765627d09553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_set_playing_order</definition>
        <argsstring>(struct bt_conn *conn, uint8_t order)</argsstring>
        <name>bt_mcc_set_playing_order</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>order</declname>
        </param>
        <briefdescription>
<para>Set Playing Order. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>order</parametername>
</parameternamelist>
<parameterdescription>
<para>Playing order</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="788" column="5" declfile="include/bluetooth/audio/mcc.h" declline="788" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1gaf61f6fcf3f96ccb6f5a72ffaad27dec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_read_playing_orders_supported</definition>
        <argsstring>(struct bt_conn *conn)</argsstring>
        <name>bt_mcc_read_playing_orders_supported</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Read Playing Orders Supported. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="797" column="5" declfile="include/bluetooth/audio/mcc.h" declline="797" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1gac1b440cfa54dd4b6e23bb47bf885f88d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_read_media_state</definition>
        <argsstring>(struct bt_conn *conn)</argsstring>
        <name>bt_mcc_read_media_state</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Read Media State. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="806" column="5" declfile="include/bluetooth/audio/mcc.h" declline="806" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1gaace3924896d6132ce936fa13516244e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_send_cmd</definition>
        <argsstring>(struct bt_conn *conn, struct mpl_cmd cmd)</argsstring>
        <name>bt_mcc_send_cmd</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="structmpl__cmd" kindref="compound">mpl_cmd</ref></type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Send a command. </para>
        </briefdescription>
        <detaileddescription>
<para>Write a command (e.g. &quot;play&quot;, &quot;pause&quot;) to the server&apos;s media control point.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>The command to send</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="818" column="5" declfile="include/bluetooth/audio/mcc.h" declline="818" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1ga692160554947f92e8c81912c5e597086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_read_opcodes_supported</definition>
        <argsstring>(struct bt_conn *conn)</argsstring>
        <name>bt_mcc_read_opcodes_supported</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Read Opcodes Supported. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="827" column="5" declfile="include/bluetooth/audio/mcc.h" declline="827" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mcc_1ga77cbf810c35d1a17efce1fae6a941963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mcc_read_content_control_id</definition>
        <argsstring>(struct bt_conn *conn)</argsstring>
        <name>bt_mcc_read_content_control_id</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Read Content Control ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the peer device</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mcc.h" line="859" column="5" declfile="include/bluetooth/audio/mcc.h" declline="859" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Bluetooth Media Control Client (MCC) interface. </para>
    </briefdescription>
    <detaileddescription>
<para>Updated to the Media Control Profile specification revision 1.0</para>
<para>[Experimental] Users should note that the APIs can change as a part of ongoing development. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
