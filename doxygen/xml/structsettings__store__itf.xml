<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structsettings__store__itf" kind="struct" language="C++" prot="public">
    <compoundname>settings_store_itf</compoundname>
    <includes refid="settings_8h" local="no">settings.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structsettings__store__itf_1a8c08da2cd010f5d73689e84d02d12734" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* settings_store_itf::csi_load) (struct settings_store *cs, const struct settings_load_arg *arg)</definition>
        <argsstring>)(struct settings_store *cs, const struct settings_load_arg *arg)</argsstring>
        <name>csi_load</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loads values from storage limited to subtree defined by subtree.</para>
<para>Parameters:<itemizedlist>
<listitem><para>cs - Corresponding backend handler node,</para>
</listitem><listitem><para>arg - Structure that holds additional data for data loading.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="note"><para>Backend is expected not to provide duplicates of the entities. It means that if the backend does not contain any functionality to really delete old keys, it has to filter out old entities and call load callback only on the final entity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/settings/settings.h" line="413" column="1" bodyfile="include/settings/settings.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsettings__store__itf_1af6aae0b06cdc935975f19eb4c56eb991" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* settings_store_itf::csi_save_start) (struct settings_store *cs)</definition>
        <argsstring>)(struct settings_store *cs)</argsstring>
        <name>csi_save_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handler called before an export operation.</para>
<para>Parameters:<itemizedlist>
<listitem><para>cs - Corresponding backend handler node </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/settings/settings.h" line="428" column="1" bodyfile="include/settings/settings.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsettings__store__itf_1af97b8a3e2bdac663dd3872117251f0d2" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* settings_store_itf::csi_save) (struct settings_store *cs, const char *name, const char *value, size_t val_len)</definition>
        <argsstring>)(struct settings_store *cs, const char *name, const char *value, size_t val_len)</argsstring>
        <name>csi_save</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save a single key-value pair to storage.</para>
<para>Parameters:<itemizedlist>
<listitem><para>cs - Corresponding backend handler node</para>
</listitem><listitem><para>name - Key in string format</para>
</listitem><listitem><para>value - Binary value</para>
</listitem><listitem><para>val_len - Length of value in bytes. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/settings/settings.h" line="435" column="1" bodyfile="include/settings/settings.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsettings__store__itf_1a90c2506cb06e5d80dffc6c08c6007bce" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* settings_store_itf::csi_save_end) (struct settings_store *cs)</definition>
        <argsstring>)(struct settings_store *cs)</argsstring>
        <name>csi_save_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handler called after an export operation.</para>
<para>Parameters:<itemizedlist>
<listitem><para>cs - Corresponding backend handler node </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/settings/settings.h" line="446" column="1" bodyfile="include/settings/settings.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Backend handler functions. Sources are registered using a call to <ref refid="group__settings__backend_1gad16bb70588cf69873f8872d7bf90e1c6" kindref="member">settings_src_register</ref>. Destinations are registered using a call to <ref refid="group__settings__backend_1ga37bcada0be44b023cd3759e519e69d01" kindref="member">settings_dst_register</ref>. </para>
    </detaileddescription>
    <location file="include/settings/settings.h" line="412" column="1" bodyfile="include/settings/settings.h" bodystart="412" bodyend="452"/>
    <listofallmembers>
      <member refid="structsettings__store__itf_1a8c08da2cd010f5d73689e84d02d12734" prot="public" virt="non-virtual"><scope>settings_store_itf</scope><name>csi_load</name></member>
      <member refid="structsettings__store__itf_1af97b8a3e2bdac663dd3872117251f0d2" prot="public" virt="non-virtual"><scope>settings_store_itf</scope><name>csi_save</name></member>
      <member refid="structsettings__store__itf_1a90c2506cb06e5d80dffc6c08c6007bce" prot="public" virt="non-virtual"><scope>settings_store_itf</scope><name>csi_save_end</name></member>
      <member refid="structsettings__store__itf_1af6aae0b06cdc935975f19eb4c56eb991" prot="public" virt="non-virtual"><scope>settings_store_itf</scope><name>csi_save_start</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
