<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="linker-tool-gcc_8h" kind="file" language="C++">
    <compoundname>linker-tool-gcc.h</compoundname>
    <includes refid="mem__manage_8h" local="no">sys/mem_manage.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/linker/linker-tool-gcc.h</label>
        <link refid="linker-tool-gcc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>sys/mem_manage.h</label>
        <link refid="mem__manage_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="4">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="8">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="10">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="15">
        <label>stdarg.h</label>
      </node>
      <node id="9">
        <label>stddef.h</label>
      </node>
      <node id="16">
        <label>syscalls/mem_manage.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="linker-tool-gcc_8h_1a7461001a81999ec4da41a0f1027c4bbd" prot="public" static="no">
        <name>GROUP_START</name>
        <param><defname>where</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/linker/linker-tool-gcc.h" line="69" column="9" bodyfile="include/linker/linker-tool-gcc.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="linker-tool-gcc_8h_1ab29c47f59ee5a5456a5f81a9050b1a47" prot="public" static="no">
        <name>GROUP_END</name>
        <param><defname>where</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/linker/linker-tool-gcc.h" line="70" column="9" bodyfile="include/linker/linker-tool-gcc.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="linker-tool-gcc_8h_1a9250789b7dcbb7afd371010fb3a6031d" prot="public" static="no">
        <name>GROUP_LINK_IN</name>
        <param><defname>where</defname></param>
        <initializer>&gt; where</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Route memory to a specified memory area</para>
<para>The <ref refid="linker-tool-gcc_8h_1a9250789b7dcbb7afd371010fb3a6031d" kindref="member">GROUP_LINK_IN()</ref> macro is located at the end of the section description and tells the linker that this section is located in the memory area specified by &apos;where&apos; argument.</para>
<para>This macro is intentionally undefined for CONFIG_MMU systems when CONFIG_KERNEL_VM_BASE is not the same as CONFIG_SRAM_BASE_ADDRESS, as both the LMA and VMA destinations must be known for all sections as this corresponds to physical vs. virtual location.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination memory area </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/linker/linker-tool-gcc.h" line="91" column="9" bodyfile="include/linker/linker-tool-gcc.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="linker-tool-gcc_8h_1a0cf8819559a7d33944b47130f478e116" prot="public" static="no">
        <name>GROUP_ROM_LINK_IN</name>
        <param><defname>vregion</defname></param>
        <param><defname>lregion</defname></param>
        <initializer>&gt; lregion</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Route memory for a read-only section</para>
<para>The <ref refid="linker-tool-gcc_8h_1a0cf8819559a7d33944b47130f478e116" kindref="member">GROUP_ROM_LINK_IN()</ref> macro is located at the end of the section description and tells the linker that this a read-only section that is physically placed at the &apos;lregion` argument.</para>
<para>If CONFIG_XIP is active, the &apos;lregion&apos; area is flash memory.</para>
<para>If CONFIG_MMU is active, the vregion argument will be used to determine where this is located in the virtual memory map, otherwise it is ignored.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vregion</parametername>
</parameternamelist>
<parameterdescription>
<para>Output VMA (only used if CONFIG_MMU where LMA != VMA) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lregion</parametername>
</parameternamelist>
<parameterdescription>
<para>Output LMA </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/linker/linker-tool-gcc.h" line="117" column="10" bodyfile="include/linker/linker-tool-gcc.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="linker-tool-gcc_8h_1a639d450cbafa51e8937d90df449b797f" prot="public" static="no">
        <name>GROUP_DATA_LINK_IN</name>
        <param><defname>vregion</defname></param>
        <param><defname>lregion</defname></param>
        <initializer>&gt; vregion</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Route memory for read-write sections that are loaded.</para>
<para>Used for initialized data sections that on XIP platforms must be copied at startup.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vregion</parametername>
</parameternamelist>
<parameterdescription>
<para>Output VMA </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lregion</parametername>
</parameternamelist>
<parameterdescription>
<para>Output LMA (only used if CONFIG_MMU if VMA != LMA, or CONFIG_XIP) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/linker/linker-tool-gcc.h" line="137" column="10" bodyfile="include/linker/linker-tool-gcc.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="linker-tool-gcc_8h_1a6784ceba92d50f9785cfd130b4341dae" prot="public" static="no">
        <name>GROUP_NOLOAD_LINK_IN</name>
        <param><defname>vregion</defname></param>
        <param><defname>lregion</defname></param>
        <initializer>&gt; vregion</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Route memory for read-write sections that are NOT loaded; typically this is only used for &apos;BSS&apos; and &apos;noinit&apos;.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vregion</parametername>
</parameternamelist>
<parameterdescription>
<para>Output VMA </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lregion</parametername>
</parameternamelist>
<parameterdescription>
<para>Output LMA (only used if CONFIG_MMU if VMA != LMA, corresponds to physical location) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/linker/linker-tool-gcc.h" line="157" column="10" bodyfile="include/linker/linker-tool-gcc.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="linker-tool-gcc_8h_1a784c696b95848c5f070e257a50fbe23a" prot="public" static="no">
        <name>SECTION_PROLOGUE</name>
        <param><defname>name</defname></param>
        <param><defname>options</defname></param>
        <param><defname>align</defname></param>
        <initializer>	name options : align</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="linker-tool-gcc_8h_1a784c696b95848c5f070e257a50fbe23a" kindref="member">SECTION_PROLOGUE()</ref> macro is used to define the beginning of a section.</para>
<para>On MMU systems where VMA != LMA there is an implicit ALIGN_WITH_INPUT specified.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the output sectio </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Section options, such as (NOLOAD), or left blank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment directives, such as <ref refid="linker-tool-mwdt_8h_1aeec277ba79a2ce60397be71ac2efbe33" kindref="member">SUBALIGN()</ref>. ALIGN() itself is not allowed. May be blank. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/linker/linker-tool-gcc.h" line="178" column="10" bodyfile="include/linker/linker-tool-gcc.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="linker-tool-gcc_8h_1a0d8981d3817b2563846735c90d50240c" prot="public" static="no">
        <name>SECTION_DATA_PROLOGUE</name>
        <param><defname>name</defname></param>
        <param><defname>options</defname></param>
        <param><defname>align</defname></param>
        <initializer>	<ref refid="linker-tool-mwdt_8h_1a784c696b95848c5f070e257a50fbe23a" kindref="member">SECTION_PROLOGUE</ref>(name, options, align)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same as for <ref refid="linker-tool-gcc_8h_1a784c696b95848c5f070e257a50fbe23a" kindref="member">SECTION_PROLOGUE()</ref>, except that this one must be used for data sections which on XIP platforms will have differing virtual and load addresses (i.e. they&apos;ll be copied into RAM at program startup). Such a section must also use GROUP_DATA_LINK_IN to specify the correct output load address.</para>
<para>This is equivalent to <ref refid="linker-tool-gcc_8h_1a784c696b95848c5f070e257a50fbe23a" kindref="member">SECTION_PROLOGUE()</ref> on non-XIP systems. On XIP systems there is an implicit ALIGN_WITH_INPUT specified.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the output sectio </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Section options, or left blank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment directives, such as <ref refid="linker-tool-mwdt_8h_1aeec277ba79a2ce60397be71ac2efbe33" kindref="member">SUBALIGN()</ref>. ALIGN() itself is not allowed. May be blank. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/linker/linker-tool-gcc.h" line="203" column="10" bodyfile="include/linker/linker-tool-gcc.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="linker-tool-gcc_8h_1aa5f3d8dcfb378cdbf899467c01494a6f" prot="public" static="no">
        <name>COMMON_SYMBOLS</name>
        <initializer>*(COMMON)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/linker/linker-tool-gcc.h" line="207" column="9" bodyfile="include/linker/linker-tool-gcc.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>GCC toolchain linker defs. </para>
    </briefdescription>
    <detaileddescription>
<para>This header file defines the necessary macros used by the linker script for use with the GCC linker. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2013-2014,<sp/>Wind<sp/>River<sp/>Systems,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_LINKER_LINKER_TOOL_GCC_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_LINKER_LINKER_TOOL_GCC_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="mem__manage_8h" kindref="compound">sys/mem_manage.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_ARM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(CONFIG_BIG_ENDIAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>OUTPUT_FORMAT_<sp/>&quot;elf32-bigarm&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>OUTPUT_FORMAT_<sp/>&quot;elf32-littlearm&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_FORMAT(OUTPUT_FORMAT_)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ARM64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_FORMAT(</highlight><highlight class="stringliteral">&quot;elf64-littleaarch64&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ARC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(CONFIG_64BIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_FORMAT(</highlight><highlight class="stringliteral">&quot;elf64-littlearc&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_FORMAT(</highlight><highlight class="stringliteral">&quot;elf32-littlearc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;elf32-bigarc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;elf32-littlearc&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_X86)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(CONFIG_X86_64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_FORMAT(</highlight><highlight class="stringliteral">&quot;elf64-x86-64&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_ARCH(&quot;i386:x86-64&quot;)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_FORMAT(</highlight><highlight class="stringliteral">&quot;elf32-i386&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;elf32-i386&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;elf32-i386&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_ARCH(&quot;i386&quot;)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_NIOS2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_FORMAT(</highlight><highlight class="stringliteral">&quot;elf32-littlenios2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;elf32-bignios2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;elf32-littlenios2&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_RISCV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_ARCH(</highlight><highlight class="stringliteral">&quot;riscv&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_64BIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_FORMAT(</highlight><highlight class="stringliteral">&quot;elf64-littleriscv&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_FORMAT(</highlight><highlight class="stringliteral">&quot;elf32-littleriscv&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_XTENSA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_MIPS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_ARCH(</highlight><highlight class="stringliteral">&quot;mips&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ARCH_POSIX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_SPARC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_FORMAT(</highlight><highlight class="stringliteral">&quot;elf32-sparc&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#error<sp/>Arch<sp/>not<sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>The<sp/>GROUP_START()<sp/>and<sp/>GROUP_END()<sp/>macros<sp/>are<sp/>used<sp/>to<sp/>define<sp/>a<sp/>group</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>of<sp/>sections<sp/>located<sp/>in<sp/>one<sp/>memory<sp/>area,<sp/>such<sp/>as<sp/>RAM,<sp/>ROM,<sp/>etc.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>The<sp/>&lt;where&gt;<sp/>parameter<sp/>is<sp/>the<sp/>name<sp/>of<sp/>the<sp/>memory<sp/>area.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="linker-tool-gcc_8h_1a7461001a81999ec4da41a0f1027c4bbd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GROUP_START(where)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="linker-tool-gcc_8h_1ab29c47f59ee5a5456a5f81a9050b1a47" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GROUP_END(where)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_ARCH_POSIX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GROUP_LINK_IN(where)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>!defined(Z_VM_KERNEL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="linker-tool-gcc_8h_1a9250789b7dcbb7afd371010fb3a6031d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GROUP_LINK_IN(where)<sp/>&gt;<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_ARCH_POSIX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GROUP_ROM_LINK_IN(vregion,<sp/>lregion)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(Z_VM_KERNEL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GROUP_ROM_LINK_IN(vregion,<sp/>lregion)<sp/>&gt;<sp/>vregion<sp/>AT<sp/>&gt;<sp/>lregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="linker-tool-gcc_8h_1a0cf8819559a7d33944b47130f478e116" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GROUP_ROM_LINK_IN(vregion,<sp/>lregion)<sp/>&gt;<sp/>lregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_ARCH_POSIX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GROUP_DATA_LINK_IN(vregion,<sp/>lregion)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_XIP)<sp/>||<sp/>defined(Z_VM_KERNEL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GROUP_DATA_LINK_IN(vregion,<sp/>lregion)<sp/>&gt;<sp/>vregion<sp/>AT<sp/>&gt;<sp/>lregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="linker-tool-gcc_8h_1a639d450cbafa51e8937d90df449b797f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GROUP_DATA_LINK_IN(vregion,<sp/>lregion)<sp/>&gt;<sp/>vregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_ARCH_POSIX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GROUP_NOLOAD_LINK_IN(vregion,<sp/>lregion)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(Z_VM_KERNEL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GROUP_NOLOAD_LINK_IN(vregion,<sp/>lregion)<sp/>&gt;<sp/>vregion<sp/>AT<sp/>&gt;<sp/>lregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_XIP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GROUP_NOLOAD_LINK_IN(vregion,<sp/>lregion)<sp/>&gt;<sp/>vregion<sp/>AT<sp/>&gt;<sp/>vregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="linker-tool-gcc_8h_1a6784ceba92d50f9785cfd130b4341dae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GROUP_NOLOAD_LINK_IN(vregion,<sp/>lregion)<sp/>&gt;<sp/>vregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>Z_VM_KERNEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>have<sp/>a<sp/>virtual<sp/>memory<sp/>map<sp/>we<sp/>need<sp/>ALIGN_WITH_INPUT<sp/>in<sp/>all<sp/>sections<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECTION_PROLOGUE(name,<sp/>options,<sp/>align)<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>options<sp/>:<sp/>ALIGN_WITH_INPUT<sp/>align</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="linker-tool-gcc_8h_1a784c696b95848c5f070e257a50fbe23a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECTION_PROLOGUE(name,<sp/>options,<sp/>align)<sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>options<sp/>:<sp/>align</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_XIP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECTION_DATA_PROLOGUE(name,<sp/>options,<sp/>align)<sp/>\</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>options<sp/>:<sp/>ALIGN_WITH_INPUT<sp/>align</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="linker-tool-gcc_8h_1a0d8981d3817b2563846735c90d50240c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECTION_DATA_PROLOGUE(name,<sp/>options,<sp/>align)<sp/>\</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SECTION_PROLOGUE(name,<sp/>options,<sp/>align)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="linker-tool-gcc_8h_1aa5f3d8dcfb378cdbf899467c01494a6f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMMON_SYMBOLS<sp/>*(COMMON)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_LINKER_LINKER_TOOL_GCC_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/linker/linker-tool-gcc.h"/>
  </compounddef>
</doxygen>
