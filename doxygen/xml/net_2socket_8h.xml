<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="net_2socket_8h" kind="file" language="C++">
    <compoundname>socket.h</compoundname>
    <includes refid="lib_2libc_2minimal_2include_2sys_2types_8h" local="no">sys/types.h</includes>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includes refid="net__ip_8h" local="no">net/net_ip.h</includes>
    <includes refid="dns__resolve_8h" local="no">net/dns_resolve.h</includes>
    <includes refid="socket__select_8h" local="no">net/socket_select.h</includes>
    <includes refid="stdlib_8h" local="no">stdlib.h</includes>
    <includes local="no">syscalls/socket.h</includes>
    <includedby refid="socket__offload_8h" local="no">include/net/socket_offload.h</includedby>
    <includedby refid="tftp_8h" local="no">include/net/tftp.h</includedby>
    <includedby refid="inet_8h" local="no">include/posix/arpa/inet.h</includedby>
    <includedby refid="if_8h" local="no">include/posix/net/if.h</includedby>
    <includedby refid="netdb_8h" local="no">include/posix/netdb.h</includedby>
    <includedby refid="in_8h" local="no">include/posix/netinet/in.h</includedby>
    <includedby refid="tcp_8h" local="no">include/posix/netinet/tcp.h</includedby>
    <includedby refid="poll_8h" local="no">include/posix/poll.h</includedby>
    <includedby refid="posix_2sys_2socket_8h" local="no">include/posix/sys/socket.h</includedby>
    <incdepgraph>
      <node id="35">
        <label>logging/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>logging/log_core.h</label>
        <link refid="include_2logging_2log__core_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>logging/log_instance.h</label>
        <link refid="log__instance_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>logging/log_msg.h</label>
        <link refid="log__msg_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>logging/log_msg2.h</label>
        <link refid="include_2logging_2log__msg2_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>net/buf.h</label>
        <link refid="net_2buf_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>net/capture.h</label>
        <link refid="capture_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>net/dns_resolve.h</label>
        <link refid="dns__resolve_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>net/hostname.h</label>
        <link refid="hostname_8h"/>
      </node>
      <node id="26">
        <label>net/net_context.h</label>
        <link refid="net__context_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>net/net_core.h</label>
        <link refid="net__core_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>net/net_event.h</label>
        <link refid="net__event_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>net/net_if.h</label>
        <link refid="net__if_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>net/net_ip.h</label>
        <link refid="net__ip_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>net/net_l2.h</label>
        <link refid="net__l2_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>net/net_linkaddr.h</label>
        <link refid="net__linkaddr_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>net/net_mgmt.h</label>
        <link refid="net__mgmt_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>net/net_stats.h</label>
        <link refid="net__stats_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>net/net_timeout.h</label>
        <link refid="net__timeout_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/net/socket.h</label>
        <link refid="net_2socket_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>net/socket_select.h</label>
        <link refid="socket__select_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>net/socket_types.h</label>
        <link refid="socket__types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="15">
        <label>sys/byteorder.h</label>
        <link refid="byteorder_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>sys/cbprintf.h</label>
        <link refid="cbprintf_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>sys/cbprintf_cxx.h</label>
        <link refid="cbprintf__cxx_8h"/>
      </node>
      <node id="43">
        <label>sys/cbprintf_internal.h</label>
        <link refid="cbprintf__internal_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>sys/mpsc_packet.h</label>
        <link refid="mpsc__packet_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="12">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="5">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="10">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="3">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="42">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>sys/_timeval.h</label>
        <link refid="__timeval_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/_types.h</label>
        <link refid="__types_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>sys/types.h</label>
        <link refid="lib_2libc_2minimal_2include_2sys_2types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>syscalls/log_core.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__core_8h"/>
      </node>
      <node id="46">
        <label>syscalls/log_msg2.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__msg2_8h"/>
      </node>
      <node id="45">
        <label>alloca.h</label>
      </node>
      <node id="31">
        <label>device.h</label>
      </node>
      <node id="27">
        <label>kernel.h</label>
      </node>
      <node id="18">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="47">
        <label>syscall.h</label>
      </node>
      <node id="23">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="59">
        <label>syscalls/net_if.h</label>
      </node>
      <node id="24">
        <label>syscalls/net_ip.h</label>
      </node>
      <node id="65">
        <label>syscalls/socket.h</label>
      </node>
      <node id="63">
        <label>syscalls/socket_select.h</label>
      </node>
      <node id="54">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11">
        <label>include/net/sntp.h</label>
        <link refid="sntp_8h"/>
      </node>
      <node id="1">
        <label>include/net/socket.h</label>
        <link refid="net_2socket_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/net/socket_offload.h</label>
        <link refid="socket__offload_8h"/>
      </node>
      <node id="7">
        <label>include/net/socketutils.h</label>
        <link refid="socketutils_8h"/>
      </node>
      <node id="3">
        <label>include/net/tftp.h</label>
        <link refid="tftp_8h"/>
      </node>
      <node id="4">
        <label>include/posix/arpa/inet.h</label>
        <link refid="inet_8h"/>
      </node>
      <node id="5">
        <label>include/posix/net/if.h</label>
        <link refid="if_8h"/>
      </node>
      <node id="6">
        <label>include/posix/netdb.h</label>
        <link refid="netdb_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>include/posix/netinet/in.h</label>
        <link refid="in_8h"/>
      </node>
      <node id="9">
        <label>include/posix/netinet/tcp.h</label>
        <link refid="tcp_8h"/>
      </node>
      <node id="10">
        <label>include/posix/poll.h</label>
        <link refid="poll_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>include/posix/sys/socket.h</label>
        <link refid="posix_2sys_2socket_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structzsock__pollfd" prot="public">zsock_pollfd</innerclass>
    <innerclass refid="structzsock__addrinfo" prot="public">zsock_addrinfo</innerclass>
    <innerclass refid="structifreq" prot="public">ifreq</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bsd__sockets_1ga6ade0deb4952e1ea23b368d9eceee9ed" prot="public" static="no">
        <name>ZSOCK_POLLIN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>zsock_poll: Poll for readability </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="44" column="9" bodyfile="include/net/socket.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga1c96c16d5000db0fa4b69055ebb97839" prot="public" static="no">
        <name>ZSOCK_POLLPRI</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>zsock_poll: Compatibility value, ignored </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="46" column="9" bodyfile="include/net/socket.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga9ca302c64dfb676798ce03100894ca3e" prot="public" static="no">
        <name>ZSOCK_POLLOUT</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>zsock_poll: Poll for writability </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="48" column="9" bodyfile="include/net/socket.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gad44368a112fbf91436a2439e7b767641" prot="public" static="no">
        <name>ZSOCK_POLLERR</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>zsock_poll: Poll results in error condition (output value only) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="50" column="9" bodyfile="include/net/socket.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gadd341cd5c1f6d7deeaedc5c58dc56fe7" prot="public" static="no">
        <name>ZSOCK_POLLHUP</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>zsock_poll: Poll detected closed connection (output value only) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="52" column="9" bodyfile="include/net/socket.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga45c5b0efca6e09e4f7db78d1d007bf67" prot="public" static="no">
        <name>ZSOCK_POLLNVAL</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>zsock_poll: Invalid socket (output value only) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="54" column="9" bodyfile="include/net/socket.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gae7da123a40584192b65af77e918080b9" prot="public" static="no">
        <name>ZSOCK_MSG_PEEK</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>zsock_recv: Read data without removing it from socket input queue </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="57" column="9" bodyfile="include/net/socket.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gae594c5e74cd473df8e3328a4cd935ce1" prot="public" static="no">
        <name>ZSOCK_MSG_TRUNC</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>zsock_recv: return the real length of the datagram, even when it was longer than the passed buffer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="61" column="9" bodyfile="include/net/socket.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga92cf4460e23f376bf130d885ea64ed6b" prot="public" static="no">
        <name>ZSOCK_MSG_DONTWAIT</name>
        <initializer>0x40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>zsock_recv/zsock_send: Override operation to non-blocking </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="63" column="9" bodyfile="include/net/socket.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga00b950f50302d97c27111da49f5289fb" prot="public" static="no">
        <name>ZSOCK_MSG_WAITALL</name>
        <initializer>0x100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>zsock_recv: block until the full amount of data can be returned </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="65" column="9" bodyfile="include/net/socket.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga2a58cbc62db1e559898ea979454d74d4" prot="public" static="no">
        <name>ZSOCK_SHUT_RD</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>zsock_shutdown: Shut down for reading </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="72" column="9" bodyfile="include/net/socket.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga87630f1abe81c4e33a24cb1f1ebb3571" prot="public" static="no">
        <name>ZSOCK_SHUT_WR</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>zsock_shutdown: Shut down for writing </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="74" column="9" bodyfile="include/net/socket.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga788dcff81663a9fb01e32b53bca13e2d" prot="public" static="no">
        <name>ZSOCK_SHUT_RDWR</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>zsock_shutdown: Shut down for both reading and writing </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="76" column="9" bodyfile="include/net/socket.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga127b71b334ca280b88f4f62c73afce0a" prot="public" static="no">
        <name>SOL_TLS</name>
        <initializer>282</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Protocol level for TLS. Here, the same socket protocol level for TLS as in Linux was used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="81" column="9" bodyfile="include/net/socket.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__secure__sockets__options_1gaf68fe84e352514c102d33ddd321231e0" prot="public" static="no">
        <name>TLS_SEC_TAG_LIST</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Socket option to select TLS credentials to use. It accepts and returns an array of sec_tag_t that indicate which TLS credentials should be used with specific socket. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="92" column="9" bodyfile="include/net/socket.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__secure__sockets__options_1ga01776938993883308c713c9e9ac19786" prot="public" static="no">
        <name>TLS_HOSTNAME</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write-only socket option to set hostname. It accepts a string containing the hostname (may be NULL to disable hostname verification). By default, hostname check is enforced for TLS clients. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="97" column="9" bodyfile="include/net/socket.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__secure__sockets__options_1gaf62ff88a51178604287ab31a645adf05" prot="public" static="no">
        <name>TLS_CIPHERSUITE_LIST</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Socket option to select ciphersuites to use. It accepts and returns an array of integers with IANA assigned ciphersuite identifiers. If not set, socket will allow all ciphersuites available in the system (mebdTLS default behavior). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="103" column="9" bodyfile="include/net/socket.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__secure__sockets__options_1ga9d3c1d985a983a102803c5828f924d26" prot="public" static="no">
        <name>TLS_CIPHERSUITE_USED</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read-only socket option to read a ciphersuite chosen during TLS handshake. It returns an integer containing an IANA assigned ciphersuite identifier of chosen ciphersuite. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="108" column="9" bodyfile="include/net/socket.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__secure__sockets__options_1gace333e12f9d74f1ff7c5ac71f7facd16" prot="public" static="no">
        <name>TLS_PEER_VERIFY</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write-only socket option to set peer verification level for TLS connection. This option accepts an integer with a peer verification level, compatible with mbedTLS values:<itemizedlist>
<listitem><para>0 - none</para>
</listitem><listitem><para>1 - optional</para>
</listitem><listitem><para>2 - required</para>
</listitem></itemizedlist>
</para>
<para>If not set, socket will use mbedTLS defaults (none for servers, required for clients). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="119" column="9" bodyfile="include/net/socket.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__secure__sockets__options_1ga2e80b638e21708d9b743fe00ec68038a" prot="public" static="no">
        <name>TLS_DTLS_ROLE</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write-only socket option to set role for DTLS connection. This option is irrelevant for TLS connections, as for them role is selected based on <ref refid="posix_2sys_2socket_8h_1adfa930dd3c38f6c287d64e1680dbf386" kindref="member">connect()</ref>/listen() usage. By default, DTLS will assume client role. This option accepts an integer with a TLS role, compatible with mbedTLS values:<itemizedlist>
<listitem><para>0 - client</para>
</listitem><listitem><para>1 - server </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="128" column="9" bodyfile="include/net/socket.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__secure__sockets__options_1ga52c56752e5951af8c37a472dbd704aac" prot="public" static="no">
        <name>TLS_ALPN_LIST</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Socket option for setting the supported Application Layer Protocols. It accepts and returns a const char array of NULL terminated strings representing the supported application layer protocols listed during the TLS handshake. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="134" column="9" bodyfile="include/net/socket.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__secure__sockets__options_1ga29b47e8798b71f5444f1899343ceefd8" prot="public" static="no">
        <name>TLS_DTLS_HANDSHAKE_TIMEOUT_MIN</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Socket option to set DTLS handshake timeout. The timeout starts at min, and upon retransmission the timeout is doubled util max is reached. Min and max arguments are separate options. The time unit is ms. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="139" column="9" bodyfile="include/net/socket.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__secure__sockets__options_1ga91ab7d4f0753af71380b6d69b0cd0804" prot="public" static="no">
        <name>TLS_DTLS_HANDSHAKE_TIMEOUT_MAX</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="140" column="9" bodyfile="include/net/socket.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__secure__sockets__options_1gaedd12839fd17dbfb981937a102022cc0" prot="public" static="no">
        <name>TLS_CERT_NOCOPY</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Socket option for preventing certificates from being copied to the mbedTLS heap if possible. The option is only effective for DER certificates and is ignored for PEM certificates. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="146" column="9" bodyfile="include/net/socket.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga09cb746907891d86a8d69ca49717c068" prot="public" static="no">
        <name>TLS_PEER_VERIFY_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Peer verification disabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="151" column="9" bodyfile="include/net/socket.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gae5a7102c2964ad0c30f5f2ed74a43488" prot="public" static="no">
        <name>TLS_PEER_VERIFY_OPTIONAL</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Peer verification optional. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="152" column="9" bodyfile="include/net/socket.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga65fa7a032e6526c5a645c2f946c2ead6" prot="public" static="no">
        <name>TLS_PEER_VERIFY_REQUIRED</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Peer verification required. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="153" column="9" bodyfile="include/net/socket.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga7e878bd4a8d53fc63aa6a2f5046179c4" prot="public" static="no">
        <name>TLS_DTLS_ROLE_CLIENT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Client role in a DTLS session. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="156" column="9" bodyfile="include/net/socket.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga9ec523afe0dbb4ee3dc6fd120ff72601" prot="public" static="no">
        <name>TLS_DTLS_ROLE_SERVER</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Server role in a DTLS session. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="157" column="9" bodyfile="include/net/socket.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga623654b94057e04a34480b9b4a44d8eb" prot="public" static="no">
        <name>TLS_CERT_NOCOPY_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cert duplicated in heap </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="160" column="9" bodyfile="include/net/socket.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga658887b060924d9797040569250b419a" prot="public" static="no">
        <name>TLS_CERT_NOCOPY_OPTIONAL</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cert not copied in heap if DER </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="161" column="9" bodyfile="include/net/socket.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gaec9e92ed53442d64cbc9b68d92ad970b" prot="public" static="no">
        <name>AI_PASSIVE</name>
        <initializer>0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Address for <ref refid="posix_2sys_2socket_8h_1a0de5e0b54a93dc6462078539b0a4a0b9" kindref="member">bind()</ref> (vs for <ref refid="posix_2sys_2socket_8h_1adfa930dd3c38f6c287d64e1680dbf386" kindref="member">connect()</ref>) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="554" column="9" bodyfile="include/net/socket.h" bodystart="554" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gab2912e6cffeb2353df550f10bbe64cf4" prot="public" static="no">
        <name>AI_CANONNAME</name>
        <initializer>0x2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill in ai_canonname </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="556" column="9" bodyfile="include/net/socket.h" bodystart="556" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga2a7070b38894743c536630b2ab25dcef" prot="public" static="no">
        <name>AI_NUMERICHOST</name>
        <initializer>0x4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assume host address is in numeric notation, don&apos;t DNS lookup </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="558" column="9" bodyfile="include/net/socket.h" bodystart="558" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gabbc1e064042dab1058c40d9cd1fc63f0" prot="public" static="no">
        <name>AI_V4MAPPED</name>
        <initializer>0x8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>May return IPv4 mapped address for IPv6 <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="560" column="9" bodyfile="include/net/socket.h" bodystart="560" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga1813fe6d7b10af5ea92ec03bd65ca39d" prot="public" static="no">
        <name>AI_ALL</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>May return both native IPv6 and mapped IPv4 address for IPv6 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="562" column="9" bodyfile="include/net/socket.h" bodystart="562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gabe581892df09df05b21fee09e1584659" prot="public" static="no">
        <name>AI_ADDRCONFIG</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IPv4/IPv6 support depends on local system config </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="564" column="9" bodyfile="include/net/socket.h" bodystart="564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga8739abe7bcb9470bcdb021e869b2a76f" prot="public" static="no">
        <name>AI_NUMERICSERV</name>
        <initializer>0x400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assume service (port) is numeric </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="566" column="9" bodyfile="include/net/socket.h" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga62f12304e7a43038f40cd579ad57829f" prot="public" static="no">
        <name>NI_NUMERICHOST</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__bsd__sockets_1gae9375bc6a1e945e5486f40c0198e3505" kindref="member">zsock_getnameinfo()</ref>: Resolve to numeric address. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="613" column="9" bodyfile="include/net/socket.h" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gaf6d346aae7109d19b9ccab7c510a3cad" prot="public" static="no">
        <name>NI_NUMERICSERV</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__bsd__sockets_1gae9375bc6a1e945e5486f40c0198e3505" kindref="member">zsock_getnameinfo()</ref>: Resolve to numeric port number. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="615" column="9" bodyfile="include/net/socket.h" bodystart="615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gae58777c663bd21ceafae51b23ba493ca" prot="public" static="no">
        <name>NI_NOFQDN</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__bsd__sockets_1gae9375bc6a1e945e5486f40c0198e3505" kindref="member">zsock_getnameinfo()</ref>: Return only hostname instead of FQDN </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="617" column="9" bodyfile="include/net/socket.h" bodystart="617" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga21bd81bf080250b73395a02e70a4212e" prot="public" static="no">
        <name>NI_NAMEREQD</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__bsd__sockets_1gae9375bc6a1e945e5486f40c0198e3505" kindref="member">zsock_getnameinfo()</ref>: Dummy option for compatibility </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="619" column="9" bodyfile="include/net/socket.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gac8270b4222f6d9ebf05cba519b48be49" prot="public" static="no">
        <name>NI_DGRAM</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__bsd__sockets_1gae9375bc6a1e945e5486f40c0198e3505" kindref="member">zsock_getnameinfo()</ref>: Dummy option for compatibility </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="621" column="9" bodyfile="include/net/socket.h" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gaebc53e498b2434654a1d44070d9ccd40" prot="public" static="no">
        <name>NI_MAXHOST</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__bsd__sockets_1gae9375bc6a1e945e5486f40c0198e3505" kindref="member">zsock_getnameinfo()</ref>: Max supported hostname length </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="627" column="9" bodyfile="include/net/socket.h" bodystart="627" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gacd06da230a96d3b7e6f193c5b3142002" prot="public" static="no">
        <name>IFNAMSIZ</name>
        <initializer>Z_DEVICE_MAX_NAME_LEN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="830" column="9" bodyfile="include/net/socket.h" bodystart="830" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga92d045f6ee2f343d6b28830a9fec082e" prot="public" static="no">
        <name>SOL_SOCKET</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Socket-level option </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="838" column="9" bodyfile="include/net/socket.h" bodystart="838" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga9dbc641eb342d3ad19f1162305d268d6" prot="public" static="no">
        <name>SO_DEBUG</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Recording debugging information (ignored, for compatibility) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="843" column="9" bodyfile="include/net/socket.h" bodystart="843" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga5589f74fada0d0cd47bd6ea8741a58ee" prot="public" static="no">
        <name>SO_REUSEADDR</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: address reuse (ignored, for compatibility) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="845" column="9" bodyfile="include/net/socket.h" bodystart="845" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga8ab1e00e94a92737d3a4b407f7fa90f1" prot="public" static="no">
        <name>SO_TYPE</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Type of the socket </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="847" column="9" bodyfile="include/net/socket.h" bodystart="847" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga040d4fd00495232970a03425bc00e77a" prot="public" static="no">
        <name>SO_ERROR</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Async error (ignored, for compatibility) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="849" column="9" bodyfile="include/net/socket.h" bodystart="849" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga4a6d9f7ea4bf046c50102c17ba1faf37" prot="public" static="no">
        <name>SO_DONTROUTE</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Bypass normal routing and send directly to host (ignored, for compatibility) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="851" column="9" bodyfile="include/net/socket.h" bodystart="851" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gad05e5d66b4608d73747c4a10b802a737" prot="public" static="no">
        <name>SO_BROADCAST</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Transmission of broadcast messages is supported (ignored, for compatibility) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="853" column="9" bodyfile="include/net/socket.h" bodystart="853" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gaf618cbb85161ff3196d3bcdf7565ba64" prot="public" static="no">
        <name>SO_SNDBUF</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Size of socket socket send buffer (ignored, for compatibility) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="856" column="9" bodyfile="include/net/socket.h" bodystart="856" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga0691781c519eed3f9a634f8eb55cd258" prot="public" static="no">
        <name>SO_KEEPALIVE</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Enable sending keep-alive messages on connections (ignored, for compatibility) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="859" column="9" bodyfile="include/net/socket.h" bodystart="859" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga1ab39f351679dd0e32436f0e6c9890d4" prot="public" static="no">
        <name>SO_OOBINLINE</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Place out-of-band data into receive stream (ignored, for compatibility) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="861" column="9" bodyfile="include/net/socket.h" bodystart="861" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga36151618368affd148255e77785e365e" prot="public" static="no">
        <name>SO_REUSEPORT</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Allow multiple sockets to reuse a single port (ignored, for compatibility) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="863" column="9" bodyfile="include/net/socket.h" bodystart="863" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gaf2d1ed6a34336a6f3df80fb518325846" prot="public" static="no">
        <name>SO_RCVTIMEO</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Receive timeout Applies to receive functions like <ref refid="posix_2sys_2socket_8h_1ae11da452beee536eac85d5f26e5cdd40" kindref="member">recv()</ref>, but not to <ref refid="posix_2sys_2socket_8h_1adfa930dd3c38f6c287d64e1680dbf386" kindref="member">connect()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="869" column="9" bodyfile="include/net/socket.h" bodystart="869" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gab9d2f7ca5c94bd51cdab3e1913b66e2d" prot="public" static="no">
        <name>SO_SNDTIMEO</name>
        <initializer>21</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Send timeout </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="871" column="9" bodyfile="include/net/socket.h" bodystart="871" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gae0339480fb8088046e6038ee1baf3a61" prot="public" static="no">
        <name>SO_BINDTODEVICE</name>
        <initializer>25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Bind a socket to an interface </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="874" column="9" bodyfile="include/net/socket.h" bodystart="874" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga4a86a7abccf8140410bf8a64c571bd6d" prot="public" static="no">
        <name>SO_ACCEPTCONN</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Socket accepts incoming connections (ignored, for compatibility) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="877" column="9" bodyfile="include/net/socket.h" bodystart="877" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga049469e17deb5a458698ef5b85568649" prot="public" static="no">
        <name>SO_TIMESTAMPING</name>
        <initializer>37</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Timestamp TX packets </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="880" column="9" bodyfile="include/net/socket.h" bodystart="880" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga8968d9591bf83026610314ce1c8736dc" prot="public" static="no">
        <name>SO_PROTOCOL</name>
        <initializer>38</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Protocol used with the socket </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="882" column="9" bodyfile="include/net/socket.h" bodystart="882" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gaf320236b2f835cdbee921bb51638ff04" prot="public" static="no">
        <name>SO_DOMAIN</name>
        <initializer>39</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Domain used with SOCKET (ignored, for compatibility) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="885" column="9" bodyfile="include/net/socket.h" bodystart="885" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga8f02455d581f55196a37a12377ecfc0e" prot="public" static="no">
        <name>TCP_NODELAY</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>End Socket options for SOL_SOCKET level sockopt: Disable TCP buffering (ignored, for compatibility) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="891" column="9" bodyfile="include/net/socket.h" bodystart="891" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga48fb8bf5da186346125c2750265b0c65" prot="public" static="no">
        <name>IPV6_V6ONLY</name>
        <initializer>26</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Don&apos;t support IPv4 access (ignored, for compatibility) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="895" column="9" bodyfile="include/net/socket.h" bodystart="895" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gafa6d8ec55f4abb9f6141325ff8229a16" prot="public" static="no">
        <name>SO_PRIORITY</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Socket priority </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="898" column="9" bodyfile="include/net/socket.h" bodystart="898" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1gaa0075588796abf8427bce7d2ca2562f2" prot="public" static="no">
        <name>SO_TXTIME</name>
        <initializer>61</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Socket TX time (when the data should be sent) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="901" column="9" bodyfile="include/net/socket.h" bodystart="901" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga0cf286971517642dd26b6683bdd91727" prot="public" static="no">
        <name>SCM_TXTIME</name>
        <initializer><ref refid="group__bsd__sockets_1gaa0075588796abf8427bce7d2ca2562f2" kindref="member">SO_TXTIME</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="902" column="9" bodyfile="include/net/socket.h" bodystart="902" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bsd__sockets_1ga2725cefd9638789146faf5288a751855" prot="public" static="no">
        <name>SO_SOCKS5</name>
        <initializer>60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sockopt: Enable SOCKS5 for Socket </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="906" column="9" bodyfile="include/net/socket.h" bodystart="906" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bsd__sockets_1ga21a871d1fa6b6beeed88408761877873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * zsock_get_context_object</definition>
        <argsstring>(int sock)</argsstring>
        <name>zsock_get_context_object</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <briefdescription>
<para>Obtain a file descriptor&apos;s associated net context. </para>
        </briefdescription>
        <detaileddescription>
<para>With CONFIG_USERSPACE enabled, the kernel&apos;s object permission system must apply to socket file descriptors. When a socket is opened, by default only the caller has permission, access by other threads will fail unless they have been specifically granted permission.</para>
<para>This is achieved by tagging data structure definitions that implement the underlying object associated with a network socket file descriptor with &apos;__net_socket`. All pointers to instances of these will be known to the kernel as kernel objects with type K_OBJ_NET_SOCKET.</para>
<para>This API is intended for threads that need to grant access to the object associated with a particular file descriptor to another thread. The returned pointer represents the underlying K_OBJ_NET_SOCKET and may be passed to APIs like <ref refid="group__usermode__apis_1ga94087bedf96fe2a2bea437d3d585ca22" kindref="member">k_object_access_grant()</ref>.</para>
<para>In a system like Linux which has the notion of threads running in processes in a shared virtual address space, this sort of management is unnecessary as the scope of file descriptors is implemented at the process level.</para>
<para>However in Zephyr the file descriptor scope is global, and MPU-based systems are not able to implement a process-like model due to the lack of memory virtualization hardware. They use discrete object permissions and memory domains instead to define thread access scope.</para>
<para>User threads will have no direct access to the returned object and will fault if they try to access its memory; the pointer can only be used to make permission assignment calls, which follow exactly the rules for other kernel objects like device drivers and IPC.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sock</parametername>
</parameternamelist>
<parameterdescription>
<para>file descriptor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to associated network socket object, or NULL if the file descriptor wasn&apos;t valid or the caller had no access permission </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="213" column="7" declfile="include/net/socket.h" declline="213" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1ga5693d19a0bdff45a5cb09227683d8631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_socket</definition>
        <argsstring>(int family, int type, int proto)</argsstring>
        <name>zsock_socket</name>
        <param>
          <type>int</type>
          <declname>family</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>proto</declname>
        </param>
        <briefdescription>
<para>Create a network socket. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/socket.html&gt;`__
* for normative description.
* This function is also exposed as ``socket()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim></para>
<para>If CONFIG_USERSPACE is enabled, the caller will be granted access to the context object associated with the returned file descriptor. <simplesect kind="see"><para><ref refid="group__bsd__sockets_1ga21a871d1fa6b6beeed88408761877873" kindref="member">zsock_get_context_object()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="232" column="6" declfile="include/net/socket.h" declline="232" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1ga1f5e089c9fb39d3a8884502a11e389b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_socketpair</definition>
        <argsstring>(int family, int type, int proto, int *sv)</argsstring>
        <name>zsock_socketpair</name>
        <param>
          <type>int</type>
          <declname>family</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>proto</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sv</declname>
        </param>
        <briefdescription>
<para>Create an unnamed pair of connected sockets. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;https://pubs.opengroup.org/onlinepubs/009695399/functions/socketpair.html&gt;`__
* for normative description.
* This function is also exposed as ``socketpair()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="246" column="6" declfile="include/net/socket.h" declline="246" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1gae60d7ca486955dd79a2821d1f646c349" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_close</definition>
        <argsstring>(int sock)</argsstring>
        <name>zsock_close</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <briefdescription>
<para>Close a network socket. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* Close a network socket.
* This function is also exposed as ``close()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined (in which case it
* may conflict with generic POSIX ``close()`` function).
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="259" column="6" declfile="include/net/socket.h" declline="259" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1gac56432bf901efaf8ef782430ac143f03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_shutdown</definition>
        <argsstring>(int sock, int how)</argsstring>
        <name>zsock_shutdown</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>int</type>
          <declname>how</declname>
        </param>
        <briefdescription>
<para>Shutdown socket send/receive operations. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/shutdown.html&gt;`__
* for normative description, but currently this function has no effect in
* Zephyr and provided solely for compatibility with existing code.
* This function is also exposed as ``shutdown()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="274" column="6" declfile="include/net/socket.h" declline="274" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1ga3d3258fc59ab566eab03e0f51da1556a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_bind</definition>
        <argsstring>(int sock, const struct sockaddr *addr, socklen_t addrlen)</argsstring>
        <name>zsock_bind</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref></type>
          <declname>addrlen</declname>
        </param>
        <briefdescription>
<para>Bind a socket to a local network address. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/bind.html&gt;`__
* for normative description.
* This function is also exposed as ``bind()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="288" column="6" declfile="include/net/socket.h" declline="288" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1ga1a70b1d3616341a86977835cc853d81d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_connect</definition>
        <argsstring>(int sock, const struct sockaddr *addr, socklen_t addrlen)</argsstring>
        <name>zsock_connect</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref></type>
          <declname>addrlen</declname>
        </param>
        <briefdescription>
<para>Connect a socket to a peer network address. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/connect.html&gt;`__
* for normative description.
* This function is also exposed as ``connect()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="303" column="6" declfile="include/net/socket.h" declline="303" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1gae8ea59ea82063aa28a9b72da2f08c9fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_listen</definition>
        <argsstring>(int sock, int backlog)</argsstring>
        <name>zsock_listen</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>int</type>
          <declname>backlog</declname>
        </param>
        <briefdescription>
<para>Set up a STREAM socket to accept peer connections. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/listen.html&gt;`__
* for normative description.
* This function is also exposed as ``listen()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="318" column="6" declfile="include/net/socket.h" declline="318" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1ga25c993772f26b872e7ed16c4ae2349fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_accept</definition>
        <argsstring>(int sock, struct sockaddr *addr, socklen_t *addrlen)</argsstring>
        <name>zsock_accept</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref> *</type>
          <declname>addrlen</declname>
        </param>
        <briefdescription>
<para>Accept a connection on listening socket. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/accept.html&gt;`__
* for normative description.
* This function is also exposed as ``accept()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="332" column="6" declfile="include/net/socket.h" declline="332" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1ga17a68983c5fc16cef968b3e7cecff089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>ssize_t zsock_sendto</definition>
        <argsstring>(int sock, const void *buf, size_t len, int flags, const struct sockaddr *dest_addr, socklen_t addrlen)</argsstring>
        <name>zsock_sendto</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>dest_addr</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref></type>
          <declname>addrlen</declname>
        </param>
        <briefdescription>
<para>Send data to an arbitrary network address. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/sendto.html&gt;`__
* for normative description.
* This function is also exposed as ``sendto()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="346" column="10" declfile="include/net/socket.h" declline="346" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1ga2d8c2173986f67dde6dc5721bf690855" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>static ssize_t zsock_send</definition>
        <argsstring>(int sock, const void *buf, size_t len, int flags)</argsstring>
        <name>zsock_send</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Send data to a connected peer. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/send.html&gt;`__
* for normative description.
* This function is also exposed as ``send()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="362" column="23" bodyfile="include/net/socket.h" bodystart="362" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1gadb708a068afed401e1354aac885c787e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>ssize_t zsock_sendmsg</definition>
        <argsstring>(int sock, const struct msghdr *msg, int flags)</argsstring>
        <name>zsock_sendmsg</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>const struct <ref refid="structmsghdr" kindref="compound">msghdr</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Send data to an arbitrary network address. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/sendmsg.html&gt;`__
* for normative description.
* This function is also exposed as ``sendmsg()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="380" column="10" declfile="include/net/socket.h" declline="380" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1gaca71732c883880c6fdcc7eb8e1c28932" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>ssize_t zsock_recvfrom</definition>
        <argsstring>(int sock, void *buf, size_t max_len, int flags, struct sockaddr *src_addr, socklen_t *addrlen)</argsstring>
        <name>zsock_recvfrom</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>src_addr</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref> *</type>
          <declname>addrlen</declname>
        </param>
        <briefdescription>
<para>Receive data from an arbitrary network address. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/recvfrom.html&gt;`__
* for normative description.
* This function is also exposed as ``recvfrom()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="395" column="10" declfile="include/net/socket.h" declline="395" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1ga8a7d82cfb02a45de59ccd05614eb78d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>static ssize_t zsock_recv</definition>
        <argsstring>(int sock, void *buf, size_t max_len, int flags)</argsstring>
        <name>zsock_recv</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Receive data from a connected peer. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/recv.html&gt;`__
* for normative description.
* This function is also exposed as ``recv()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="411" column="23" bodyfile="include/net/socket.h" bodystart="411" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1ga13471854ca4279a157fe43ec030ea34d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_fcntl</definition>
        <argsstring>(int sock, int cmd, int flags)</argsstring>
        <name>zsock_fcntl</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Control blocking/non-blocking mode of a socket. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* This functions allow to (only) configure a socket for blocking or
* non-blocking operation (O_NONBLOCK).
* This function is also exposed as ``fcntl()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined (in which case
* it may conflict with generic POSIX ``fcntl()`` function).
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="429" column="6" declfile="include/net/socket.h" declline="429" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1gaa946975d9892a0ad730b6bf7090267cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_poll</definition>
        <argsstring>(struct zsock_pollfd *fds, int nfds, int timeout)</argsstring>
        <name>zsock_poll</name>
        <param>
          <type>struct <ref refid="structzsock__pollfd" kindref="compound">zsock_pollfd</ref> *</type>
          <declname>fds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Efficiently poll multiple sockets for events. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/poll.html&gt;`__
* for normative description. (In Zephyr this function works only with
* sockets, not arbitrary file descriptors.)
* This function is also exposed as ``poll()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined (in which case
* it may conflict with generic POSIX ``poll()`` function).
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="445" column="6" declfile="include/net/socket.h" declline="445" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1ga56cb8d34d4b9599c3d2965c97da80a30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_getsockopt</definition>
        <argsstring>(int sock, int level, int optname, void *optval, socklen_t *optlen)</argsstring>
        <name>zsock_getsockopt</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>optname</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>optval</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref> *</type>
          <declname>optlen</declname>
        </param>
        <briefdescription>
<para>Get various socket options. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/getsockopt.html&gt;`__
* for normative description. In Zephyr this function supports a subset of
* socket options described by POSIX, but also some additional options
* available in Linux (some options are dummy and provided to ease porting
* of existing code).
* This function is also exposed as ``getsockopt()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="462" column="6" declfile="include/net/socket.h" declline="462" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1gad123f59d8c86bf187054c80ff743b4eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_setsockopt</definition>
        <argsstring>(int sock, int level, int optname, const void *optval, socklen_t optlen)</argsstring>
        <name>zsock_setsockopt</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>optname</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>optval</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref></type>
          <declname>optlen</declname>
        </param>
        <briefdescription>
<para>Set various socket options. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/setsockopt.html&gt;`__
* for normative description. In Zephyr this function supports a subset of
* socket options described by POSIX, but also some additional options
* available in Linux (some options are dummy and provided to ease porting
* of existing code).
* This function is also exposed as ``setsockopt()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="480" column="6" declfile="include/net/socket.h" declline="480" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1gaa0270d771e51dbf2a91bea5b24bf26c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_getsockname</definition>
        <argsstring>(int sock, struct sockaddr *addr, socklen_t *addrlen)</argsstring>
        <name>zsock_getsockname</name>
        <param>
          <type>int</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref> *</type>
          <declname>addrlen</declname>
        </param>
        <briefdescription>
<para>Get socket name. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/getsockname.html&gt;`__
* for normative description.
* This function is also exposed as ``getsockname()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="495" column="6" declfile="include/net/socket.h" declline="495" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1ga8b348d886f1bc4f4cdf6e2260844f6e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_gethostname</definition>
        <argsstring>(char *buf, size_t len)</argsstring>
        <name>zsock_gethostname</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Get local host name. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/gethostname.html&gt;`__
* for normative description.
* This function is also exposed as ``gethostname()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="510" column="6" declfile="include/net/socket.h" declline="510" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1gae3092504b98d3b5f28675081a1e5b1ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>static char * zsock_inet_ntop</definition>
        <argsstring>(sa_family_t family, const void *src, char *dst, size_t size)</argsstring>
        <name>zsock_inet_ntop</name>
        <param>
          <type><ref refid="group__ip__4__6_1ga2d9e094abb99ebd0874373edf1c45eda" kindref="member">sa_family_t</ref></type>
          <declname>family</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convert network address from internal to numeric ASCII form. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/inet_ntop.html&gt;`__
* for normative description.
* This function is also exposed as ``inet_ntop()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="524" column="20" bodyfile="include/net/socket.h" bodystart="524" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1gae4cf68b3752057b4b0818394487a2dbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_inet_pton</definition>
        <argsstring>(sa_family_t family, const char *src, void *dst)</argsstring>
        <name>zsock_inet_pton</name>
        <param>
          <type><ref refid="group__ip__4__6_1ga2d9e094abb99ebd0874373edf1c45eda" kindref="member">sa_family_t</ref></type>
          <declname>family</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Convert network address from numeric ASCII form to internal representation. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/inet_pton.html&gt;`__
* for normative description.
* This function is also exposed as ``inet_pton()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="542" column="6" declfile="include/net/socket.h" declline="542" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1gaf59c97c9bd07f188e3f06b2372ac1856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_getaddrinfo</definition>
        <argsstring>(const char *host, const char *service, const struct zsock_addrinfo *hints, struct zsock_addrinfo **res)</argsstring>
        <name>zsock_getaddrinfo</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>service</declname>
        </param>
        <param>
          <type>const struct <ref refid="structzsock__addrinfo" kindref="compound">zsock_addrinfo</ref> *</type>
          <declname>hints</declname>
        </param>
        <param>
          <type>struct <ref refid="structzsock__addrinfo" kindref="compound">zsock_addrinfo</ref> **</type>
          <declname>res</declname>
        </param>
        <briefdescription>
<para>Resolve a domain name to one or more network addresses. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/getaddrinfo.html&gt;`__
* for normative description.
* This function is also exposed as ``getaddrinfo()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="580" column="5" declfile="include/net/socket.h" declline="580" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1ga7953da2e52bcfad51b877de6d7fd6cc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zsock_freeaddrinfo</definition>
        <argsstring>(struct zsock_addrinfo *ai)</argsstring>
        <name>zsock_freeaddrinfo</name>
        <param>
          <type>struct <ref refid="structzsock__addrinfo" kindref="compound">zsock_addrinfo</ref> *</type>
          <declname>ai</declname>
        </param>
        <briefdescription>
<para>Free results returned by <ref refid="group__bsd__sockets_1gaf59c97c9bd07f188e3f06b2372ac1856" kindref="member">zsock_getaddrinfo()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/freeaddrinfo.html&gt;`__
* for normative description.
* This function is also exposed as ``freeaddrinfo()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="596" column="6" declfile="include/net/socket.h" declline="596" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1gaa9d9e97c347b3854dc73d7ba33d8ca4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * zsock_gai_strerror</definition>
        <argsstring>(int errcode)</argsstring>
        <name>zsock_gai_strerror</name>
        <param>
          <type>int</type>
          <declname>errcode</declname>
        </param>
        <briefdescription>
<para>Convert <ref refid="group__bsd__sockets_1gaf59c97c9bd07f188e3f06b2372ac1856" kindref="member">zsock_getaddrinfo()</ref> error code to textual message. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/gai_strerror.html&gt;`__
* for normative description.
* This function is also exposed as ``gai_strerror()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="610" column="12" declfile="include/net/socket.h" declline="610" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__bsd__sockets_1gae9375bc6a1e945e5486f40c0198e3505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zsock_getnameinfo</definition>
        <argsstring>(const struct sockaddr *addr, socklen_t addrlen, char *host, socklen_t hostlen, char *serv, socklen_t servlen, int flags)</argsstring>
        <name>zsock_getnameinfo</name>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref></type>
          <declname>addrlen</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref></type>
          <declname>hostlen</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>serv</declname>
        </param>
        <param>
          <type><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref></type>
          <declname>servlen</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Resolve a network address to a domain name or ASCII address. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>embed:rst:leading-asterisk
* See `POSIX.1-2017 article
* &lt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/getnameinfo.html&gt;`__
* for normative description.
* This function is also exposed as ``getnameinfo()``
* if :kconfig:`CONFIG_NET_SOCKETS_POSIX_NAMES` is defined.
* </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/socket.h" line="642" column="5" declfile="include/net/socket.h" declline="642" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>BSD Sockets compatible API definitions. </para>
    </briefdescription>
    <detaileddescription>
<para>An API for applications to use BSD Sockets like API. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017-2018<sp/>Linaro<sp/>Limited</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Nordic<sp/>Semiconductor</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_NET_SOCKET_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_NET_SOCKET_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lib_2libc_2minimal_2include_2sys_2types_8h" kindref="compound">sys/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net__ip_8h" kindref="compound">net/net_ip.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dns__resolve_8h" kindref="compound">net/dns_resolve.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="socket__select_8h" kindref="compound">net/socket_select.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdlib_8h" kindref="compound">stdlib.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structzsock__pollfd" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzsock__pollfd" kindref="compound">zsock_pollfd</ref><sp/>{</highlight></codeline>
<codeline lineno="37" refid="structzsock__pollfd_1a58fcd3f9af542bb15a936319aaf9c32e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structzsock__pollfd_1a58fcd3f9af542bb15a936319aaf9c32e" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="38" refid="structzsock__pollfd_1a31929c24c64b58c6f7e443645352f67d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="structzsock__pollfd_1a31929c24c64b58c6f7e443645352f67d" kindref="member">events</ref>;</highlight></codeline>
<codeline lineno="39" refid="structzsock__pollfd_1a98838f19b29e759a4b53db9b15349917" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="structzsock__pollfd_1a98838f19b29e759a4b53db9b15349917" kindref="member">revents</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ZSOCK_POLL*<sp/>values<sp/>are<sp/>compatible<sp/>with<sp/>Linux<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="group__bsd__sockets_1ga6ade0deb4952e1ea23b368d9eceee9ed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZSOCK_POLLIN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="group__bsd__sockets_1ga1c96c16d5000db0fa4b69055ebb97839" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZSOCK_POLLPRI<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group__bsd__sockets_1ga9ca302c64dfb676798ce03100894ca3e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZSOCK_POLLOUT<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group__bsd__sockets_1gad44368a112fbf91436a2439e7b767641" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZSOCK_POLLERR<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group__bsd__sockets_1gadd341cd5c1f6d7deeaedc5c58dc56fe7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZSOCK_POLLHUP<sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group__bsd__sockets_1ga45c5b0efca6e09e4f7db78d1d007bf67" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZSOCK_POLLNVAL<sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="group__bsd__sockets_1gae7da123a40584192b65af77e918080b9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZSOCK_MSG_PEEK<sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group__bsd__sockets_1gae594c5e74cd473df8e3328a4cd935ce1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZSOCK_MSG_TRUNC<sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group__bsd__sockets_1ga92cf4460e23f376bf130d885ea64ed6b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZSOCK_MSG_DONTWAIT<sp/>0x40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group__bsd__sockets_1ga00b950f50302d97c27111da49f5289fb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZSOCK_MSG_WAITALL<sp/>0x100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Well-known<sp/>values,<sp/>e.g.<sp/>from<sp/>Linux<sp/>man<sp/>2<sp/>shutdown:</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>&quot;The<sp/>constants<sp/>SHUT_RD,<sp/>SHUT_WR,<sp/>SHUT_RDWR<sp/>have<sp/>the<sp/>value<sp/>0,<sp/>1,<sp/>2,</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>respectively&quot;.<sp/>Some<sp/>software<sp/>uses<sp/>numeric<sp/>values.</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="group__bsd__sockets_1ga2a58cbc62db1e559898ea979454d74d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZSOCK_SHUT_RD<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="group__bsd__sockets_1ga87630f1abe81c4e33a24cb1f1ebb3571" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZSOCK_SHUT_WR<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="group__bsd__sockets_1ga788dcff81663a9fb01e32b53bca13e2d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZSOCK_SHUT_RDWR<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="group__bsd__sockets_1ga127b71b334ca280b88f4f62c73afce0a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SOL_TLS<sp/>282</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="group__secure__sockets__options_1gaf68fe84e352514c102d33ddd321231e0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_SEC_TAG_LIST<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="group__secure__sockets__options_1ga01776938993883308c713c9e9ac19786" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_HOSTNAME<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="group__secure__sockets__options_1gaf62ff88a51178604287ab31a645adf05" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_CIPHERSUITE_LIST<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="group__secure__sockets__options_1ga9d3c1d985a983a102803c5828f924d26" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_CIPHERSUITE_USED<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="group__secure__sockets__options_1gace333e12f9d74f1ff7c5ac71f7facd16" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_PEER_VERIFY<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="group__secure__sockets__options_1ga2e80b638e21708d9b743fe00ec68038a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_DTLS_ROLE<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="group__secure__sockets__options_1ga52c56752e5951af8c37a472dbd704aac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_ALPN_LIST<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="group__secure__sockets__options_1ga29b47e8798b71f5444f1899343ceefd8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_DTLS_HANDSHAKE_TIMEOUT_MIN<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="group__secure__sockets__options_1ga91ab7d4f0753af71380b6d69b0cd0804" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_DTLS_HANDSHAKE_TIMEOUT_MAX<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="group__secure__sockets__options_1gaedd12839fd17dbfb981937a102022cc0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_CERT_NOCOPY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Valid<sp/>values<sp/>for<sp/>TLS_PEER_VERIFY<sp/>option<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="group__bsd__sockets_1ga09cb746907891d86a8d69ca49717c068" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_PEER_VERIFY_NONE<sp/>0<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="group__bsd__sockets_1gae5a7102c2964ad0c30f5f2ed74a43488" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_PEER_VERIFY_OPTIONAL<sp/>1<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="group__bsd__sockets_1ga65fa7a032e6526c5a645c2f946c2ead6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_PEER_VERIFY_REQUIRED<sp/>2<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Valid<sp/>values<sp/>for<sp/>TLS_DTLS_ROLE<sp/>option<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="group__bsd__sockets_1ga7e878bd4a8d53fc63aa6a2f5046179c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_DTLS_ROLE_CLIENT<sp/>0<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="group__bsd__sockets_1ga9ec523afe0dbb4ee3dc6fd120ff72601" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_DTLS_ROLE_SERVER<sp/>1<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Valid<sp/>values<sp/>for<sp/>TLS_CERT_NOCOPY<sp/>option<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="group__bsd__sockets_1ga623654b94057e04a34480b9b4a44d8eb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_CERT_NOCOPY_NONE<sp/>0<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="group__bsd__sockets_1ga658887b060924d9797040569250b419a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_CERT_NOCOPY_OPTIONAL<sp/>1<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="structzsock__addrinfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzsock__addrinfo" kindref="compound">zsock_addrinfo</ref><sp/>{</highlight></codeline>
<codeline lineno="164" refid="structzsock__addrinfo_1a7fdc7a266b2f96766f8c4e79649bfa65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzsock__addrinfo" kindref="compound">zsock_addrinfo</ref><sp/>*<ref refid="structzsock__addrinfo_1a7fdc7a266b2f96766f8c4e79649bfa65" kindref="member">ai_next</ref>;</highlight></codeline>
<codeline lineno="165" refid="structzsock__addrinfo_1a971514adde66f5c1a04efc7f42f244d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structzsock__addrinfo_1a971514adde66f5c1a04efc7f42f244d1" kindref="member">ai_flags</ref>;</highlight></codeline>
<codeline lineno="166" refid="structzsock__addrinfo_1a83ef78e3347e69564e2663a769356d87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structzsock__addrinfo_1a83ef78e3347e69564e2663a769356d87" kindref="member">ai_family</ref>;</highlight></codeline>
<codeline lineno="167" refid="structzsock__addrinfo_1adcb8a732921a11a35f89241cfe413b78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structzsock__addrinfo_1adcb8a732921a11a35f89241cfe413b78" kindref="member">ai_socktype</ref>;</highlight></codeline>
<codeline lineno="168" refid="structzsock__addrinfo_1aae090dcd0c1e73497560cbcc333a452d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structzsock__addrinfo_1aae090dcd0c1e73497560cbcc333a452d" kindref="member">ai_protocol</ref>;</highlight></codeline>
<codeline lineno="169" refid="structzsock__addrinfo_1afeb3c893f19642352f79404dbe5443b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/><ref refid="structzsock__addrinfo_1afeb3c893f19642352f79404dbe5443b2" kindref="member">ai_addrlen</ref>;</highlight></codeline>
<codeline lineno="170" refid="structzsock__addrinfo_1acd0173c9e99bb72b444c18f4237bf17b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*<ref refid="structzsock__addrinfo_1acd0173c9e99bb72b444c18f4237bf17b" kindref="member">ai_addr</ref>;</highlight></codeline>
<codeline lineno="171" refid="structzsock__addrinfo_1aa9a96f1d5d49833beea05558879867cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structzsock__addrinfo_1aa9a96f1d5d49833beea05558879867cf" kindref="member">ai_canonname</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>_ai_addr;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>_ai_canonname[<ref refid="group__dns__resolve_1gaba564a71c4fb4c44fae69015e880b0db" kindref="member">DNS_MAX_NAME_SIZE</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="175"><highlight class="normal">};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="group__bsd__sockets_1ga21a871d1fa6b6beeed88408761877873" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__bsd__sockets_1ga21a871d1fa6b6beeed88408761877873" kindref="member">zsock_get_context_object</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="group__bsd__sockets_1ga5693d19a0bdff45a5cb09227683d8631" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga5693d19a0bdff45a5cb09227683d8631" kindref="member">zsock_socket</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>family,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proto);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="group__bsd__sockets_1ga1f5e089c9fb39d3a8884502a11e389b3" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga1f5e089c9fb39d3a8884502a11e389b3" kindref="member">zsock_socketpair</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>family,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proto,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sv);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="group__bsd__sockets_1gae60d7ca486955dd79a2821d1f646c349" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gae60d7ca486955dd79a2821d1f646c349" kindref="member">zsock_close</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="group__bsd__sockets_1gac56432bf901efaf8ef782430ac143f03" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gac56432bf901efaf8ef782430ac143f03" kindref="member">zsock_shutdown</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>how);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="group__bsd__sockets_1ga3d3258fc59ab566eab03e0f51da1556a" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga3d3258fc59ab566eab03e0f51da1556a" kindref="member">zsock_bind</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addrlen);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="group__bsd__sockets_1ga1a70b1d3616341a86977835cc853d81d" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga1a70b1d3616341a86977835cc853d81d" kindref="member">zsock_connect</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addrlen);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="group__bsd__sockets_1gae8ea59ea82063aa28a9b72da2f08c9fd" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gae8ea59ea82063aa28a9b72da2f08c9fd" kindref="member">zsock_listen</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>backlog);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="group__bsd__sockets_1ga25c993772f26b872e7ed16c4ae2349fb" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga25c993772f26b872e7ed16c4ae2349fb" kindref="member">zsock_accept</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,<sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>*addrlen);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="group__bsd__sockets_1ga17a68983c5fc16cef968b3e7cecff089" refkind="member"><highlight class="normal">__syscall<sp/><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref><sp/><ref refid="group__bsd__sockets_1ga17a68983c5fc16cef968b3e7cecff089" kindref="member">zsock_sendto</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*dest_addr,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addrlen);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="group__bsd__sockets_1ga2d8c2173986f67dde6dc5721bf690855" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref><sp/><ref refid="group__bsd__sockets_1ga2d8c2173986f67dde6dc5721bf690855" kindref="member">zsock_send</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga17a68983c5fc16cef968b3e7cecff089" kindref="member">zsock_sendto</ref>(sock,<sp/>buf,<sp/>len,<sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="group__bsd__sockets_1gadb708a068afed401e1354aac885c787e" refkind="member"><highlight class="normal">__syscall<sp/><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref><sp/><ref refid="group__bsd__sockets_1gadb708a068afed401e1354aac885c787e" kindref="member">zsock_sendmsg</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmsghdr" kindref="compound">msghdr</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="group__bsd__sockets_1gaca71732c883880c6fdcc7eb8e1c28932" refkind="member"><highlight class="normal">__syscall<sp/><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref><sp/><ref refid="group__bsd__sockets_1gaca71732c883880c6fdcc7eb8e1c28932" kindref="member">zsock_recvfrom</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_len,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*src_addr,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>*addrlen);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="group__bsd__sockets_1ga8a7d82cfb02a45de59ccd05614eb78d6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref><sp/><ref refid="group__bsd__sockets_1ga8a7d82cfb02a45de59ccd05614eb78d6" kindref="member">zsock_recv</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_len,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gaca71732c883880c6fdcc7eb8e1c28932" kindref="member">zsock_recvfrom</ref>(sock,<sp/>buf,<sp/>max_len,<sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="group__bsd__sockets_1ga13471854ca4279a157fe43ec030ea34d" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga13471854ca4279a157fe43ec030ea34d" kindref="member">zsock_fcntl</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ft8xx__reference__api_1gacde1ca3945cbe6c828f65051c5c3a615" kindref="member">cmd</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="group__bsd__sockets_1gaa946975d9892a0ad730b6bf7090267cf" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gaa946975d9892a0ad730b6bf7090267cf" kindref="member">zsock_poll</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structzsock__pollfd" kindref="compound">zsock_pollfd</ref><sp/>*fds,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfds,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="group__bsd__sockets_1ga56cb8d34d4b9599c3d2965c97da80a30" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga56cb8d34d4b9599c3d2965c97da80a30" kindref="member">zsock_getsockopt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optname,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*optval,<sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>*optlen);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="group__bsd__sockets_1gad123f59d8c86bf187054c80ff743b4eb" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gad123f59d8c86bf187054c80ff743b4eb" kindref="member">zsock_setsockopt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optname,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*optval,<sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>optlen);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="group__bsd__sockets_1gaa0270d771e51dbf2a91bea5b24bf26c1" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gaa0270d771e51dbf2a91bea5b24bf26c1" kindref="member">zsock_getsockname</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>*addrlen);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="group__bsd__sockets_1ga8b348d886f1bc4f4cdf6e2260844f6e1" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga8b348d886f1bc4f4cdf6e2260844f6e1" kindref="member">zsock_gethostname</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="group__bsd__sockets_1gae3092504b98d3b5f28675081a1e5b1ab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__bsd__sockets_1gae3092504b98d3b5f28675081a1e5b1ab" kindref="member">zsock_inet_ntop</ref>(<ref refid="group__ip__4__6_1ga2d9e094abb99ebd0874373edf1c45eda" kindref="member">sa_family_t</ref><sp/>family,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ip__4__6_1ga326b6cd455f8b6193f490fa2877c5222" kindref="member">net_addr_ntop</ref>(family,<sp/>src,<sp/>dst,<sp/>size);</highlight></codeline>
<codeline lineno="528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="542" refid="group__bsd__sockets_1gae4cf68b3752057b4b0818394487a2dbb" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gae4cf68b3752057b4b0818394487a2dbb" kindref="member">zsock_inet_pton</ref>(<ref refid="group__ip__4__6_1ga2d9e094abb99ebd0874373edf1c45eda" kindref="member">sa_family_t</ref><sp/>family,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_zsock_getaddrinfo_internal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*host,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*service,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structzsock__addrinfo" kindref="compound">zsock_addrinfo</ref><sp/>*hints,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structzsock__addrinfo" kindref="compound">zsock_addrinfo</ref><sp/>*res);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Flags<sp/>for<sp/>getaddrinfo()<sp/>hints.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="group__bsd__sockets_1gaec9e92ed53442d64cbc9b68d92ad970b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_PASSIVE<sp/>0x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="group__bsd__sockets_1gab2912e6cffeb2353df550f10bbe64cf4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_CANONNAME<sp/>0x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558" refid="group__bsd__sockets_1ga2a7070b38894743c536630b2ab25dcef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_NUMERICHOST<sp/>0x4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="group__bsd__sockets_1gabbc1e064042dab1058c40d9cd1fc63f0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_V4MAPPED<sp/>0x8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="group__bsd__sockets_1ga1813fe6d7b10af5ea92ec03bd65ca39d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_ALL<sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="group__bsd__sockets_1gabe581892df09df05b21fee09e1584659" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_ADDRCONFIG<sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="group__bsd__sockets_1ga8739abe7bcb9470bcdb021e869b2a76f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_NUMERICSERV<sp/>0x400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="group__bsd__sockets_1gaf59c97c9bd07f188e3f06b2372ac1856" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gaf59c97c9bd07f188e3f06b2372ac1856" kindref="member">zsock_getaddrinfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*host,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*service,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structzsock__addrinfo" kindref="compound">zsock_addrinfo</ref><sp/>*hints,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structzsock__addrinfo" kindref="compound">zsock_addrinfo</ref><sp/>**res);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="596" refid="group__bsd__sockets_1ga7953da2e52bcfad51b877de6d7fd6cc9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga7953da2e52bcfad51b877de6d7fd6cc9" kindref="member">zsock_freeaddrinfo</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structzsock__addrinfo" kindref="compound">zsock_addrinfo</ref><sp/>*ai);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="610" refid="group__bsd__sockets_1gaa9d9e97c347b3854dc73d7ba33d8ca4b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__bsd__sockets_1gaa9d9e97c347b3854dc73d7ba33d8ca4b" kindref="member">zsock_gai_strerror</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errcode);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="group__bsd__sockets_1ga62f12304e7a43038f40cd579ad57829f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NI_NUMERICHOST<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615" refid="group__bsd__sockets_1gaf6d346aae7109d19b9ccab7c510a3cad" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NI_NUMERICSERV<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="group__bsd__sockets_1gae58777c663bd21ceafae51b23ba493ca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NI_NOFQDN<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="group__bsd__sockets_1ga21bd81bf080250b73395a02e70a4212e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NI_NAMEREQD<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621" refid="group__bsd__sockets_1gac8270b4222f6d9ebf05cba519b48be49" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NI_DGRAM<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>POSIX<sp/>extensions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NI_MAXHOST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627" refid="group__bsd__sockets_1gaebc53e498b2434654a1d44070d9ccd40" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NI_MAXHOST<sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="642" refid="group__bsd__sockets_1gae9375bc6a1e945e5486f40c0198e3505" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gae9375bc6a1e945e5486f40c0198e3505" kindref="member">zsock_getnameinfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,<sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addrlen,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*host,<sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>hostlen,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*serv,<sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>servlen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NET_SOCKETS_POSIX_NAMES)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>pollfd<sp/>zsock_pollfd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="posix_2sys_2socket_8h_1a00c0ed5f8528aac995d803af4b827a9c" kindref="member">socket</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>family,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proto)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga5693d19a0bdff45a5cb09227683d8631" kindref="member">zsock_socket</ref>(family,<sp/>type,<sp/>proto);</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="posix_2sys_2socket_8h_1ad8e31e081924ef65e482f355604009cb" kindref="member">socketpair</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>family,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proto,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sv[2])</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga1f5e089c9fb39d3a8884502a11e389b3" kindref="member">zsock_socketpair</ref>(family,<sp/>type,<sp/>proto,<sp/>sv);</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>close(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock)</highlight></codeline>
<codeline lineno="661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gae60d7ca486955dd79a2821d1f646c349" kindref="member">zsock_close</ref>(sock);</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="posix_2sys_2socket_8h_1afe31a414f8777d15266fe84df7b66cbf" kindref="member">shutdown</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>how)</highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gac56432bf901efaf8ef782430ac143f03" kindref="member">zsock_shutdown</ref>(sock,<sp/>how);</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="posix_2sys_2socket_8h_1a0de5e0b54a93dc6462078539b0a4a0b9" kindref="member">bind</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,<sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addrlen)</highlight></codeline>
<codeline lineno="671"><highlight class="normal">{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga3d3258fc59ab566eab03e0f51da1556a" kindref="member">zsock_bind</ref>(sock,<sp/>addr,<sp/>addrlen);</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="posix_2sys_2socket_8h_1adfa930dd3c38f6c287d64e1680dbf386" kindref="member">connect</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addrlen)</highlight></codeline>
<codeline lineno="677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga1a70b1d3616341a86977835cc853d81d" kindref="member">zsock_connect</ref>(sock,<sp/>addr,<sp/>addrlen);</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="posix_2sys_2socket_8h_1a36f501240a9428fe2ae63a9540c97adb" kindref="member">listen</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>backlog)</highlight></codeline>
<codeline lineno="682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gae8ea59ea82063aa28a9b72da2f08c9fd" kindref="member">zsock_listen</ref>(sock,<sp/>backlog);</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="posix_2sys_2socket_8h_1a33e6ea428ff537ed7a4763ce91b7d9bb" kindref="member">accept</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,<sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>*addrlen)</highlight></codeline>
<codeline lineno="687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga25c993772f26b872e7ed16c4ae2349fb" kindref="member">zsock_accept</ref>(sock,<sp/>addr,<sp/>addrlen);</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref><sp/><ref refid="posix_2sys_2socket_8h_1ad32c12370c1d09a96775091bbbf3c44d" kindref="member">send</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>)</highlight></codeline>
<codeline lineno="692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga2d8c2173986f67dde6dc5721bf690855" kindref="member">zsock_send</ref>(sock,<sp/>buf,<sp/>len,<sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref><sp/><ref refid="posix_2sys_2socket_8h_1ae11da452beee536eac85d5f26e5cdd40" kindref="member">recv</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>)</highlight></codeline>
<codeline lineno="697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga8a7d82cfb02a45de59ccd05614eb78d6" kindref="member">zsock_recv</ref>(sock,<sp/>buf,<sp/>max_len,<sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/>*<sp/>Need<sp/>this<sp/>wrapper<sp/>because<sp/>newer<sp/>GCC<sp/>versions<sp/>got<sp/>too<sp/>smart<sp/>and<sp/>&quot;typecheck&quot;</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/>*<sp/>even<sp/>macros,<sp/>so<sp/>&apos;#define<sp/>fcntl<sp/>zsock_fcntl&apos;<sp/>leads<sp/>to<sp/>error.</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zsock_fcntl_wrapper(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ft8xx__reference__api_1gacde1ca3945cbe6c828f65051c5c3a615" kindref="member">cmd</ref>,<sp/>...)</highlight></codeline>
<codeline lineno="706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(args,<sp/><ref refid="group__ft8xx__reference__api_1gacde1ca3945cbe6c828f65051c5c3a615" kindref="member">cmd</ref>);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref><sp/>=<sp/>va_arg(args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga13471854ca4279a157fe43ec030ea34d" kindref="member">zsock_fcntl</ref>(sock,<sp/><ref refid="group__ft8xx__reference__api_1gacde1ca3945cbe6c828f65051c5c3a615" kindref="member">cmd</ref>,<sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fcntl<sp/>zsock_fcntl_wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref><sp/><ref refid="posix_2sys_2socket_8h_1acdc42cdbe2f9480ed58a2bdc2af57035" kindref="member">sendto</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>,</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*dest_addr,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addrlen)</highlight></codeline>
<codeline lineno="721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga17a68983c5fc16cef968b3e7cecff089" kindref="member">zsock_sendto</ref>(sock,<sp/>buf,<sp/>len,<sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>,<sp/>dest_addr,<sp/>addrlen);</highlight></codeline>
<codeline lineno="723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref><sp/><ref refid="posix_2sys_2socket_8h_1a1d7ee25c28352b2e7af55f75d721c4b8" kindref="member">sendmsg</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmsghdr" kindref="compound">msghdr</ref><sp/>*message,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>)</highlight></codeline>
<codeline lineno="727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gadb708a068afed401e1354aac885c787e" kindref="member">zsock_sendmsg</ref>(sock,<sp/>message,<sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref><sp/><ref refid="posix_2sys_2socket_8h_1a2aa207302b058bbb5b88533c752218a2" kindref="member">recvfrom</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*src_addr,<sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>*addrlen)</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gaca71732c883880c6fdcc7eb8e1c28932" kindref="member">zsock_recvfrom</ref>(sock,<sp/>buf,<sp/>max_len,<sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>,<sp/>src_addr,<sp/>addrlen);</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poll_8h_1ae2d9b8390c125624595e2b400a08ea29" kindref="member">poll</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structzsock__pollfd" kindref="compound">zsock_pollfd</ref><sp/>*fds,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfds,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>)</highlight></codeline>
<codeline lineno="738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gaa946975d9892a0ad730b6bf7090267cf" kindref="member">zsock_poll</ref>(fds,<sp/>nfds,<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="posix_2sys_2socket_8h_1a2ea64db46a2b23badc726616b2fb6c84" kindref="member">getsockopt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optname,</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*optval,<sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>*optlen)</highlight></codeline>
<codeline lineno="744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga56cb8d34d4b9599c3d2965c97da80a30" kindref="member">zsock_getsockopt</ref>(sock,<sp/>level,<sp/>optname,<sp/>optval,<sp/>optlen);</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="posix_2sys_2socket_8h_1a9e476c4da1bb69b721e4aaa384114328" kindref="member">setsockopt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optname,</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*optval,<sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>optlen)</highlight></codeline>
<codeline lineno="750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gad123f59d8c86bf187054c80ff743b4eb" kindref="member">zsock_setsockopt</ref>(sock,<sp/>level,<sp/>optname,<sp/>optval,<sp/>optlen);</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="posix_2sys_2socket_8h_1aa64d4aea83941c69d5405bd2f2de7a72" kindref="member">getsockname</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>*addrlen)</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gaa0270d771e51dbf2a91bea5b24bf26c1" kindref="member">zsock_getsockname</ref>(sock,<sp/>addr,<sp/>addrlen);</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="netdb_8h_1a08be4218900930dcc3add7e03173a83c" kindref="member">getaddrinfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*host,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*service,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structzsock__addrinfo" kindref="compound">zsock_addrinfo</ref><sp/>*hints,</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structzsock__addrinfo" kindref="compound">zsock_addrinfo</ref><sp/>**res)</highlight></codeline>
<codeline lineno="763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gaf59c97c9bd07f188e3f06b2372ac1856" kindref="member">zsock_getaddrinfo</ref>(host,<sp/>service,<sp/>hints,<sp/>res);</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="netdb_8h_1af70cde067b55e04adff98d672fa41c94" kindref="member">freeaddrinfo</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structzsock__addrinfo" kindref="compound">zsock_addrinfo</ref><sp/>*ai)</highlight></codeline>
<codeline lineno="768"><highlight class="normal">{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bsd__sockets_1ga7953da2e52bcfad51b877de6d7fd6cc9" kindref="member">zsock_freeaddrinfo</ref>(ai);</highlight></codeline>
<codeline lineno="770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="netdb_8h_1ab388347be08b4e7d1d9f3ea6f956cd41" kindref="member">gai_strerror</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errcode)</highlight></codeline>
<codeline lineno="773"><highlight class="normal">{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gaa9d9e97c347b3854dc73d7ba33d8ca4b" kindref="member">zsock_gai_strerror</ref>(errcode);</highlight></codeline>
<codeline lineno="775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="netdb_8h_1a6c9b3f03fde427c355b26ad9d6054250" kindref="member">getnameinfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,<sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>addrlen,</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*host,<sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>hostlen,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*serv,<sp/><ref refid="group__ip__4__6_1gacf0ed818b0a3c85ff6a9206679d6d91a" kindref="member">socklen_t</ref><sp/>servlen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>)</highlight></codeline>
<codeline lineno="780"><highlight class="normal">{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gae9375bc6a1e945e5486f40c0198e3505" kindref="member">zsock_getnameinfo</ref>(addr,<sp/>addrlen,<sp/>host,<sp/>hostlen,</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serv,<sp/>servlen,<sp/><ref refid="http__parser_8h_1ab6b306ef981f5e21bb41ea2c2dbe8cd9" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>addrinfo<sp/>zsock_addrinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gethostname(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1ga8b348d886f1bc4f4cdf6e2260844f6e1" kindref="member">zsock_gethostname</ref>(buf,<sp/>len);</highlight></codeline>
<codeline lineno="790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="inet_8h_1a2947410d1e58486907c3ddb8f280fab2" kindref="member">inet_pton</ref>(<ref refid="group__ip__4__6_1ga2d9e094abb99ebd0874373edf1c45eda" kindref="member">sa_family_t</ref><sp/>family,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst)</highlight></codeline>
<codeline lineno="793"><highlight class="normal">{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gae4cf68b3752057b4b0818394487a2dbb" kindref="member">zsock_inet_pton</ref>(family,<sp/>src,<sp/>dst);</highlight></codeline>
<codeline lineno="795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="inet_8h_1aebd26cfb6d976e64c3ce5594f1d4237b" kindref="member">inet_ntop</ref>(<ref refid="group__ip__4__6_1ga2d9e094abb99ebd0874373edf1c45eda" kindref="member">sa_family_t</ref><sp/>family,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dst,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__bsd__sockets_1gae3092504b98d3b5f28675081a1e5b1ab" kindref="member">zsock_inet_ntop</ref>(family,<sp/>src,<sp/>dst,<sp/>size);</highlight></codeline>
<codeline lineno="801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POLLIN<sp/>ZSOCK_POLLIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POLLOUT<sp/>ZSOCK_POLLOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POLLERR<sp/>ZSOCK_POLLERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POLLHUP<sp/>ZSOCK_POLLHUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POLLNVAL<sp/>ZSOCK_POLLNVAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSG_PEEK<sp/>ZSOCK_MSG_PEEK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSG_TRUNC<sp/>ZSOCK_MSG_TRUNC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSG_DONTWAIT<sp/>ZSOCK_MSG_DONTWAIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSG_WAITALL<sp/>ZSOCK_MSG_WAITALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHUT_RD<sp/>ZSOCK_SHUT_RD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHUT_WR<sp/>ZSOCK_SHUT_WR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHUT_RDWR<sp/>ZSOCK_SHUT_RDWR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_BADFLAGS<sp/>DNS_EAI_BADFLAGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_NONAME<sp/>DNS_EAI_NONAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_AGAIN<sp/>DNS_EAI_AGAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_FAIL<sp/>DNS_EAI_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_NODATA<sp/>DNS_EAI_NODATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_MEMORY<sp/>DNS_EAI_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_SYSTEM<sp/>DNS_EAI_SYSTEM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_SERVICE<sp/>DNS_EAI_SERVICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_SOCKTYPE<sp/>DNS_EAI_SOCKTYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_FAMILY<sp/>DNS_EAI_FAMILY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(CONFIG_NET_SOCKETS_POSIX_NAMES)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830" refid="group__bsd__sockets_1gacd06da230a96d3b7e6f193c5b3142002" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IFNAMSIZ<sp/>Z_DEVICE_MAX_NAME_LEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="833" refid="structifreq" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structifreq" kindref="compound">ifreq</ref><sp/>{</highlight></codeline>
<codeline lineno="834" refid="structifreq_1a2b7b5b2a48aefa0693ee813f3699f7c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structifreq_1a2b7b5b2a48aefa0693ee813f3699f7c7" kindref="member">ifr_name</ref>[<ref refid="group__bsd__sockets_1gacd06da230a96d3b7e6f193c5b3142002" kindref="member">IFNAMSIZ</ref>];<sp/></highlight><highlight class="comment">/*<sp/>Interface<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal">};</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="838" refid="group__bsd__sockets_1ga92d045f6ee2f343d6b28830a9fec082e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SOL_SOCKET<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Socket<sp/>options<sp/>for<sp/>SOL_SOCKET<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="843" refid="group__bsd__sockets_1ga9dbc641eb342d3ad19f1162305d268d6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_DEBUG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845" refid="group__bsd__sockets_1ga5589f74fada0d0cd47bd6ea8741a58ee" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_REUSEADDR<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847" refid="group__bsd__sockets_1ga8ab1e00e94a92737d3a4b407f7fa90f1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_TYPE<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849" refid="group__bsd__sockets_1ga040d4fd00495232970a03425bc00e77a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_ERROR<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851" refid="group__bsd__sockets_1ga4a6d9f7ea4bf046c50102c17ba1faf37" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_DONTROUTE<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853" refid="group__bsd__sockets_1gad05e5d66b4608d73747c4a10b802a737" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_BROADCAST<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="856" refid="group__bsd__sockets_1gaf618cbb85161ff3196d3bcdf7565ba64" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_SNDBUF<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="859" refid="group__bsd__sockets_1ga0691781c519eed3f9a634f8eb55cd258" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_KEEPALIVE<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861" refid="group__bsd__sockets_1ga1ab39f351679dd0e32436f0e6c9890d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_OOBINLINE<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863" refid="group__bsd__sockets_1ga36151618368affd148255e77785e365e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_REUSEPORT<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="869" refid="group__bsd__sockets_1gaf2d1ed6a34336a6f3df80fb518325846" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_RCVTIMEO<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871" refid="group__bsd__sockets_1gab9d2f7ca5c94bd51cdab3e1913b66e2d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_SNDTIMEO<sp/>21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="874" refid="group__bsd__sockets_1gae0339480fb8088046e6038ee1baf3a61" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_BINDTODEVICE<sp/>25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="877" refid="group__bsd__sockets_1ga4a86a7abccf8140410bf8a64c571bd6d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_ACCEPTCONN<sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="880" refid="group__bsd__sockets_1ga049469e17deb5a458698ef5b85568649" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_TIMESTAMPING<sp/>37</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882" refid="group__bsd__sockets_1ga8968d9591bf83026610314ce1c8736dc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_PROTOCOL<sp/>38</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="885" refid="group__bsd__sockets_1gaf320236b2f835cdbee921bb51638ff04" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_DOMAIN<sp/>39</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Socket<sp/>options<sp/>for<sp/>IPPROTO_TCP<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891" refid="group__bsd__sockets_1ga8f02455d581f55196a37a12377ecfc0e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TCP_NODELAY<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Socket<sp/>options<sp/>for<sp/>IPPROTO_IPV6<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895" refid="group__bsd__sockets_1ga48fb8bf5da186346125c2750265b0c65" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPV6_V6ONLY<sp/>26</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="898" refid="group__bsd__sockets_1gafa6d8ec55f4abb9f6141325ff8229a16" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_PRIORITY<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="901" refid="group__bsd__sockets_1gaa0075588796abf8427bce7d2ca2562f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_TXTIME<sp/>61</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902" refid="group__bsd__sockets_1ga0cf286971517642dd26b6683bdd91727" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCM_TXTIME<sp/>SO_TXTIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Socket<sp/>options<sp/>for<sp/>SOCKS5<sp/>proxy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906" refid="group__bsd__sockets_1ga2725cefd9638789146faf5288a751855" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_SOCKS5<sp/>60</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">net_socket_register<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>family;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref><sp/>(*is_supported)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>family,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proto);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="timer_2starve_2src_2main_8c_1ab28ee8b6412d992f77f819e17b664869" kindref="member">handler</ref>)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>family,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proto);</highlight></codeline>
<codeline lineno="916"><highlight class="normal">};</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_SOCKET_DEFAULT_PRIO<sp/>CONFIG_NET_SOCKETS_PRIORITY_DEFAULT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_SOCKET_GET_NAME(socket_name,<sp/>prio)<sp/><sp/>\</highlight></codeline>
<codeline lineno="921"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(__net_socket_register_##prio##_##socket_name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_SOCKET_REGISTER(socket_name,<sp/>prio,<sp/>_family,<sp/>_is_supported,<sp/>_handler)<sp/>\</highlight></codeline>
<codeline lineno="924"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>STRUCT_SECTION_ITERABLE(net_socket_register,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="925"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NET_SOCKET_GET_NAME(socket_name,<sp/>prio))<sp/>=<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="926"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.family<sp/>=<sp/>_family,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="927"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.is_supported<sp/>=<sp/>_is_supported,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="928"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.handler<sp/>=<sp/>_handler,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="929"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;syscalls/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_NET_SOCKET_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/net/socket.h"/>
  </compounddef>
</doxygen>
