<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="pending_2src_2main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes local="no">tc_util.h</includes>
    <includes local="no">zephyr.h</includes>
    <includes refid="ztest_8h" local="no">ztest.h</includes>
    <includes local="no">kernel.h</includes>
    <includes refid="kernel__structs_8h" local="no">kernel_structs.h</includes>
    <includes refid="stdbool_8h" local="no">stdbool.h</includes>
    <incdepgraph>
      <node id="18">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="67">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="66">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="30">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="37">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="39">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="35">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="33">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="41">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="42">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="38">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="36">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="40">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="76">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="46">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="52">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="29">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="43">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="24">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="6">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="20">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="87">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="88">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="14">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="10">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="12">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="65">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="89">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="82">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="4">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="16">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/pending/src/main.c</label>
        <link refid="pending_2src_2main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>alloca.h</label>
      </node>
      <node id="69">
        <label>arch/cpu.h</label>
      </node>
      <node id="32">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="31">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="44">
        <label>kernel.h</label>
      </node>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="85">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="90">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="2">
        <label>tc_util.h</label>
      </node>
      <node id="3">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structfifo__data" prot="public">fifo_data</innerclass>
    <innerclass refid="structlifo__data" prot="public">lifo_data</innerclass>
    <innerclass refid="structoffload__work" prot="public">offload_work</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pending_2src_2main_8c_1a1b6a8436eb109850e6f55236e430df5a" prot="public" static="no">
        <name>NUM_SECONDS</name>
        <param><defname>x</defname></param>
        <initializer>((x) * 1000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="14" column="10" bodyfile="tests/kernel/pending/src/main.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pending_2src_2main_8c_1af95f27544f39827250d6bef6fa5fe18e" prot="public" static="no">
        <name>HALF_SECOND</name>
        <initializer>(500)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="15" column="10" bodyfile="tests/kernel/pending/src/main.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pending_2src_2main_8c_1ae96d394715f2f9f61c7e41713a146709" prot="public" static="no">
        <name>THIRD_SECOND</name>
        <initializer>(333)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="16" column="10" bodyfile="tests/kernel/pending/src/main.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pending_2src_2main_8c_1a6085227bccccf93967cb8aaaa58b042c" prot="public" static="no">
        <name>FOURTH_SECOND</name>
        <initializer>(250)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="17" column="10" bodyfile="tests/kernel/pending/src/main.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pending_2src_2main_8c_1a5ff292780fcfcd2e0d9f4c0e188c0ee1" prot="public" static="no">
        <name>COOP_STACKSIZE</name>
        <initializer>(512 + CONFIG_TEST_EXTRA_STACK_SIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="19" column="9" bodyfile="tests/kernel/pending/src/main.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pending_2src_2main_8c_1ad0ef98d8a3bb21001cfbd584f750b634" prot="public" static="no">
        <name>PREEM_STACKSIZE</name>
        <initializer>(1024 + CONFIG_TEST_EXTRA_STACK_SIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="20" column="9" bodyfile="tests/kernel/pending/src/main.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pending_2src_2main_8c_1a1837e658992207229ff2d87217ccb8d4" prot="public" static="no">
        <name>FIFO_TEST_START</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="22" column="9" bodyfile="tests/kernel/pending/src/main.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pending_2src_2main_8c_1a98919468ef08343f23fec0822b33be80" prot="public" static="no">
        <name>FIFO_TEST_END</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="23" column="9" bodyfile="tests/kernel/pending/src/main.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pending_2src_2main_8c_1a4167deb97760e93713db6fc7889c5ae6" prot="public" static="no">
        <name>SEM_TEST_START</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="25" column="9" bodyfile="tests/kernel/pending/src/main.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pending_2src_2main_8c_1a39b4e25f428e30d54d1ea6493365452b" prot="public" static="no">
        <name>SEM_TEST_END</name>
        <initializer>40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="26" column="9" bodyfile="tests/kernel/pending/src/main.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pending_2src_2main_8c_1aaf8a4ab6aa792471c7090b4b2a7c700c" prot="public" static="no">
        <name>LIFO_TEST_START</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="28" column="9" bodyfile="tests/kernel/pending/src/main.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pending_2src_2main_8c_1ac80002b2fa20d8040a82d916523253ca" prot="public" static="no">
        <name>LIFO_TEST_END</name>
        <initializer>60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="29" column="9" bodyfile="tests/kernel/pending/src/main.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pending_2src_2main_8c_1af15e2fb02ab5d29002244f705a5d123d" prot="public" static="no">
        <name>NON_NULL_PTR</name>
        <initializer>((void *)0x12345678)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="31" column="9" bodyfile="tests/kernel/pending/src/main.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pending_2src_2main_8c_1afab74e343d694a9682cb1e8775b970af" prot="public" static="no">
        <name>OFFLOAD_WORKQUEUE_STACK_SIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="36" column="10" bodyfile="tests/kernel/pending/src/main.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pending_2src_2main_8c_1ab61000ea0eb6db6113356609543f4dfe" prot="public" static="no">
        <name>OFFLOAD_WORKQUEUE_PRIORITY</name>
        <initializer>(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="39" column="9" bodyfile="tests/kernel/pending/src/main.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pending_2src_2main_8c_1ac0649d933c202a3d327ce1f6feaf4468" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__work__q" kindref="compound">k_work_q</ref></type>
        <definition>struct k_work_q offload_work_q</definition>
        <argsstring></argsstring>
        <name>offload_work_q</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="40" column="22" bodyfile="tests/kernel/pending/src/main.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1a7cf3f0f9166850de89f82fef405f998e" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread coop_thread[2]</definition>
        <argsstring>[2]</argsstring>
        <name>coop_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="60" column="22" bodyfile="tests/kernel/pending/src/main.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1a4c78dc47164573bcfb8130a8d52e1b77" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__fifo" kindref="compound">k_fifo</ref></type>
        <definition>struct k_fifo fifo</definition>
        <argsstring></argsstring>
        <name>fifo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="62" column="20" bodyfile="tests/kernel/pending/src/main.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1a5f1a84796be0de3921a88115c3d4246c" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__lifo" kindref="compound">k_lifo</ref></type>
        <definition>struct k_lifo lifo</definition>
        <argsstring></argsstring>
        <name>lifo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="63" column="20" bodyfile="tests/kernel/pending/src/main.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" prot="public" static="yes" mutable="no">
        <type>struct k_timer</type>
        <definition>struct k_timer timer</definition>
        <argsstring></argsstring>
        <name>timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="64" column="21" bodyfile="tests/kernel/pending/src/main.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1a8af5f8cda9d2cd96335ec9b4de9a19db" prot="public" static="yes" mutable="no">
        <type>struct k_sem</type>
        <definition>struct k_sem start_test_sem</definition>
        <argsstring></argsstring>
        <name>start_test_sem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="66" column="19" bodyfile="tests/kernel/pending/src/main.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1a3c62911dd48d7ca108af79cef7b8cb5c" prot="public" static="yes" mutable="no">
        <type>struct k_sem</type>
        <definition>struct k_sem sync_test_sem</definition>
        <argsstring></argsstring>
        <name>sync_test_sem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="67" column="19" bodyfile="tests/kernel/pending/src/main.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1a70832c7cf3b5b52f3ac62b1b75333a7d" prot="public" static="yes" mutable="no">
        <type>struct k_sem</type>
        <definition>struct k_sem end_test_sem</definition>
        <argsstring></argsstring>
        <name>end_test_sem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="68" column="19" bodyfile="tests/kernel/pending/src/main.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1a0b4699639e869290c3b7a4128ac28dc3" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfifo__data" kindref="compound">fifo_data</ref></type>
        <definition>struct fifo_data fifo_test_data[4]</definition>
        <argsstring>[4]</argsstring>
        <name>fifo_test_data</name>
        <initializer>= {
	{ 0,  20  + 1 }, { 0,  20  + 2 },
	{ 0,  20  + 3 }, { 0,  20  + 4 }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="70" column="16" bodyfile="tests/kernel/pending/src/main.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1a4d39bb4e031409d95f357162f7592367" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structlifo__data" kindref="compound">lifo_data</ref></type>
        <definition>struct lifo_data lifo_test_data[4]</definition>
        <argsstring>[4]</argsstring>
        <name>lifo_test_data</name>
        <initializer>= {
	{ 0,  60  + 1 }, { 0,  60  + 2 },
	{ 0,  60  + 3 }, { 0,  60  + 4 }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="75" column="16" bodyfile="tests/kernel/pending/src/main.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1ac18c66967883ffab7c653934c31e8fb6" prot="public" static="yes" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t timer_start_tick</definition>
        <argsstring></argsstring>
        <name>timer_start_tick</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="80" column="17" bodyfile="tests/kernel/pending/src/main.c" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1a034b56e10699797dd166758c6a163234" prot="public" static="yes" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t timer_end_tick</definition>
        <argsstring></argsstring>
        <name>timer_end_tick</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="81" column="17" bodyfile="tests/kernel/pending/src/main.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1a505214a40ab0dac787ae7ef41a6003a9" prot="public" static="yes" mutable="no">
        <type>void *</type>
        <definition>void* timer_data</definition>
        <argsstring></argsstring>
        <name>timer_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="82" column="13" bodyfile="tests/kernel/pending/src/main.c" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1a137a68e4ce815528bc00743e8bad7a7a" prot="public" static="yes" mutable="no">
        <type>int __noinit</type>
        <definition>int __noinit coop_high_state</definition>
        <argsstring></argsstring>
        <name>coop_high_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="84" column="21" bodyfile="tests/kernel/pending/src/main.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1ab43d1e954ac541054ec7d35fea37168b" prot="public" static="yes" mutable="no">
        <type>int __noinit</type>
        <definition>int __noinit coop_low_state</definition>
        <argsstring></argsstring>
        <name>coop_low_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="85" column="21" bodyfile="tests/kernel/pending/src/main.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1a6c5c59702855dbb3def08092fbaf840e" prot="public" static="yes" mutable="no">
        <type>int __noinit</type>
        <definition>int __noinit task_high_state</definition>
        <argsstring></argsstring>
        <name>task_high_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="86" column="21" bodyfile="tests/kernel/pending/src/main.c" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1a2505209450d68ba07962e1eb1fbeb04b" prot="public" static="yes" mutable="no">
        <type>int __noinit</type>
        <definition>int __noinit task_low_state</definition>
        <argsstring></argsstring>
        <name>task_low_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="87" column="21" bodyfile="tests/kernel/pending/src/main.c" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pending_2src_2main_8c_1a89dde238ea46c99311d0d903ff08aa06" prot="public" static="yes" mutable="no">
        <type>int __noinit</type>
        <definition>int __noinit counter</definition>
        <argsstring></argsstring>
        <name>counter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="89" column="21" bodyfile="tests/kernel/pending/src/main.c" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pending_2src_2main_8c_1a4cc22fe9f014988ceb30759178e9fa9d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_DEFINE</definition>
        <argsstring>(offload_work_q_stack, 1024)</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>offload_work_q_stack</type>
        </param>
        <param>
          <type>1024</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="41" column="8" declfile="tests/kernel/pending/src/main.c" declline="41" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="pending_2src_2main_8c_1aa87cf73d3eef61ff7f4c94ed5abd38a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_ARRAY_DEFINE</definition>
        <argsstring>(coop_stack, 2,(512+CONFIG_TEST_EXTRA_STACK_SIZE))</argsstring>
        <name>K_THREAD_STACK_ARRAY_DEFINE</name>
        <param>
          <type>coop_stack</type>
        </param>
        <param>
          <type>2</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACK_SIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="59" column="8" declfile="tests/kernel/pending/src/main.c" declline="59" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="pending_2src_2main_8c_1a24e90d95e665471f5223fba9511fa000" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>static void * my_fifo_get</definition>
        <argsstring>(struct k_fifo *fifo, int32_t timeout)</argsstring>
        <name>my_fifo_get</name>
        <param>
          <type>struct <ref refid="structk__fifo" kindref="compound">k_fifo</ref> *</type>
          <declname>fifo</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="91" column="20" bodyfile="tests/kernel/pending/src/main.c" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="pending_2src_2main_8c_1a77c4a98452e46f370028c044ffe7dfe0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>static void * my_lifo_get</definition>
        <argsstring>(struct k_lifo *lifo, int32_t timeout)</argsstring>
        <name>my_lifo_get</name>
        <param>
          <type>struct <ref refid="structk__lifo" kindref="compound">k_lifo</ref> *</type>
          <declname>lifo</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="96" column="20" bodyfile="tests/kernel/pending/src/main.c" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="pending_2src_2main_8c_1a112d65e589d53fa2eed8ecfa4aaa8e03" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int increment_counter</definition>
        <argsstring>(void)</argsstring>
        <name>increment_counter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="101" column="12" bodyfile="tests/kernel/pending/src/main.c" bodystart="101" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="pending_2src_2main_8c_1a3b4214c407c947e7182e9549415930ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sync_threads</definition>
        <argsstring>(struct k_work *work)</argsstring>
        <name>sync_threads</name>
        <param>
          <type>struct <ref refid="structk__work" kindref="compound">k_work</ref> *</type>
          <declname>work</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="112" column="13" bodyfile="tests/kernel/pending/src/main.c" bodystart="112" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="pending_2src_2main_8c_1a48ed10d5907d12974450d7bae319d4ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fifo_tests</definition>
        <argsstring>(int32_t timeout, volatile int *state, void *(*get)(struct k_fifo *, int32_t), int(*sem_take)(struct k_sem *, k_timeout_t))</argsstring>
        <name>fifo_tests</name>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>volatile int *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>void *(*)(struct <ref refid="structk__fifo" kindref="compound">k_fifo</ref> *, <ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref>)</type>
          <declname>get</declname>
        </param>
        <param>
          <type>int(*)(struct k_sem *, <ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref>)</type>
          <declname>sem_take</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="124" column="13" bodyfile="tests/kernel/pending/src/main.c" bodystart="124" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="pending_2src_2main_8c_1a17657f3e32e45a79dc6db733e86be2a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void lifo_tests</definition>
        <argsstring>(int32_t timeout, volatile int *state, void *(*get)(struct k_lifo *, int32_t), int(*sem_take)(struct k_sem *, k_timeout_t))</argsstring>
        <name>lifo_tests</name>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref></type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>volatile int *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>void *(*)(struct <ref refid="structk__lifo" kindref="compound">k_lifo</ref> *, <ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref>)</type>
          <declname>get</declname>
        </param>
        <param>
          <type>int(*)(struct k_sem *, <ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref>)</type>
          <declname>sem_take</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="162" column="13" bodyfile="tests/kernel/pending/src/main.c" bodystart="162" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="pending_2src_2main_8c_1a70c17c149fa61fce30cfbe2b1df01091" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void timer_tests</definition>
        <argsstring>(void)</argsstring>
        <name>timer_tests</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="200" column="13" bodyfile="tests/kernel/pending/src/main.c" bodystart="200" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="pending_2src_2main_8c_1afa3d99661cc75fcedb6963a392930969" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void coop_high</definition>
        <argsstring>(void *arg1, void *arg2, void *arg3)</argsstring>
        <name>coop_high</name>
        <param>
          <type>void *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="217" column="13" bodyfile="tests/kernel/pending/src/main.c" bodystart="217" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="pending_2src_2main_8c_1a5c8ef963dc51843ded4d09d41b909ada" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void coop_low</definition>
        <argsstring>(void *arg1, void *arg2, void *arg3)</argsstring>
        <name>coop_low</name>
        <param>
          <type>void *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="228" column="13" bodyfile="tests/kernel/pending/src/main.c" bodystart="228" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="pending_2src_2main_8c_1a8d5f54b40026ad33194e0db6ca767b9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void task_high</definition>
        <argsstring>(void)</argsstring>
        <name>task_high</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="239" column="6" bodyfile="tests/kernel/pending/src/main.c" bodystart="239" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="pending_2src_2main_8c_1abe2ac675cb19c97a17e2b046557a4d87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void task_low</definition>
        <argsstring>(void)</argsstring>
        <name>task_low</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="275" column="6" bodyfile="tests/kernel/pending/src/main.c" bodystart="275" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pending__tests_1ga8f1ec9bc55430c23ea987a0f939b2ce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pending_fifo</definition>
        <argsstring>(void)</argsstring>
        <name>test_pending_fifo</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test pending of workq, fifo and lifo. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep()</ref>, <ref refid="mem__slab_2mslab_2src_2main_8c_1a8007ef681bb821f5e6400569aaacbabb" kindref="member">K_THREAD_DEFINE()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="297" column="6" bodyfile="tests/kernel/pending/src/main.c" bodystart="297" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pending__tests_1ga993ea2a19573f32b914afa0318e972dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pending_lifo</definition>
        <argsstring>(void)</argsstring>
        <name>test_pending_lifo</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="364" column="6" bodyfile="tests/kernel/pending/src/main.c" bodystart="364" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__pending__tests_1ga2e602bcd93141eb58c25b9cd5058fbee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_pending_timer</definition>
        <argsstring>(void)</argsstring>
        <name>test_pending_timer</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="431" column="6" bodyfile="tests/kernel/pending/src/main.c" bodystart="431" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="pending_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_main</definition>
        <argsstring>(void)</argsstring>
        <name>test_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>test case main entry </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="473" column="6" bodyfile="tests/kernel/pending/src/main.c" bodystart="473" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="pending_2src_2main_8c_1adc99cf9f974b55849ecdb65e979299ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_DEFINE</definition>
        <argsstring>(TASK_LOW,(1024+CONFIG_TEST_EXTRA_STACK_SIZE), task_low, NULL, NULL, NULL, 7, 0, 0)</argsstring>
        <name>K_THREAD_DEFINE</name>
        <param>
          <type>TASK_LOW</type>
        </param>
        <param>
          <type>(1024+CONFIG_TEST_EXTRA_STACK_SIZE)</type>
        </param>
        <param>
          <type><ref refid="pending_2src_2main_8c_1abe2ac675cb19c97a17e2b046557a4d87" kindref="member">task_low</ref></type>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <param>
          <type>7</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="483" column="1" declfile="tests/kernel/pending/src/main.c" declline="483" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="pending_2src_2main_8c_1a11e358e08573f06dc2e64b69864eae2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_DEFINE</definition>
        <argsstring>(TASK_HIGH,(1024+CONFIG_TEST_EXTRA_STACK_SIZE), task_high, NULL, NULL, NULL, 5, 0, 0)</argsstring>
        <name>K_THREAD_DEFINE</name>
        <param>
          <type>TASK_HIGH</type>
        </param>
        <param>
          <type>(1024+CONFIG_TEST_EXTRA_STACK_SIZE)</type>
        </param>
        <param>
          <type><ref refid="pending_2src_2main_8c_1a8d5f54b40026ad33194e0db6ca767b9e" kindref="member">task_high</ref></type>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <param>
          <type>5</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/pending/src/main.c" line="486" column="1" declfile="tests/kernel/pending/src/main.c" declline="486" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016<sp/>Wind<sp/>River<sp/>Systems,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tc_util.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztest_8h" kindref="compound">ztest.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="kernel__structs_8h" kindref="compound">kernel_structs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdbool_8h" kindref="compound">stdbool.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>NUM_SECONDS(x)<sp/><sp/><sp/><sp/><sp/><sp/>((x)<sp/>*<sp/>1000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>HALF_SECOND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(500)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>THIRD_SECOND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(333)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>FOURTH_SECOND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(250)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COOP_STACKSIZE<sp/><sp/><sp/>(512<sp/>+<sp/>CONFIG_TEST_EXTRA_STACK_SIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PREEM_STACKSIZE<sp/><sp/>(1024<sp/>+<sp/>CONFIG_TEST_EXTRA_STACK_SIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_TEST_START<sp/><sp/><sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_TEST_END<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEM_TEST_START<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEM_TEST_END<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIFO_TEST_START<sp/><sp/><sp/><sp/><sp/><sp/><sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIFO_TEST_END<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>60</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NON_NULL_PTR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((void<sp/>*)0x12345678)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_COVERAGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OFFLOAD_WORKQUEUE_STACK_SIZE<sp/>4096</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OFFLOAD_WORKQUEUE_STACK_SIZE<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OFFLOAD_WORKQUEUE_PRIORITY<sp/><sp/><sp/><sp/><sp/><sp/>(-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work__q" kindref="compound">k_work_q</ref><sp/><ref refid="pending_2src_2main_8c_1ac0649d933c202a3d327ce1f6feaf4468" kindref="member">offload_work_q</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1abb291232121138c783bcbd0addb9a4f3" kindref="member">K_THREAD_STACK_DEFINE</ref>(offload_work_q_stack,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1afab74e343d694a9682cb1e8775b970af" kindref="member">OFFLOAD_WORKQUEUE_STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structfifo__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfifo__data" kindref="compound">fifo_data</ref><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0bd5dec00e345e69027427f8621d6a6c" kindref="member">intptr_t</ref><sp/><ref refid="structfifo__data_1a5718ed25843f8dcf3b84a4b4675f60da" kindref="member">reserved</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structfifo__data_1acfb13bf2cd4d425fa7db61f0091027e7" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structlifo__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlifo__data" kindref="compound">lifo_data</ref><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0bd5dec00e345e69027427f8621d6a6c" kindref="member">intptr_t</ref><sp/><ref refid="structlifo__data_1aa7470bb3355deb7dae34b73b56c5697f" kindref="member">reserved</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structlifo__data_1ab4b20f38f5c3cf21ac76dc15242c4660" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structoffload__work" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structoffload__work" kindref="compound">offload_work</ref><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work" kindref="compound">k_work</ref><sp/><ref refid="structoffload__work_1a9e8abca119163646d553bb464ea08fd8" kindref="member">work_item</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/>*<ref refid="structoffload__work_1aa2a7b19b1a5c3eba14ae6adac73faf2b" kindref="member">sem</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a9c0a8a7f0624c343c7966c84f94c95b8" kindref="member">K_THREAD_STACK_ARRAY_DEFINE</ref>(coop_stack,<sp/>2,<sp/><ref refid="pending_2src_2main_8c_1a5ff292780fcfcd2e0d9f4c0e188c0ee1" kindref="member">COOP_STACKSIZE</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="pending_2src_2main_8c_1a7cf3f0f9166850de89f82fef405f998e" kindref="member">coop_thread</ref>[2];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__fifo" kindref="compound">k_fifo</ref><sp/><ref refid="pending_2src_2main_8c_1a4c78dc47164573bcfb8130a8d52e1b77" kindref="member">fifo</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__lifo" kindref="compound">k_lifo</ref><sp/><ref refid="pending_2src_2main_8c_1a5f1a84796be0de3921a88115c3d4246c" kindref="member">lifo</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_timer<sp/><ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/><ref refid="pending_2src_2main_8c_1a8af5f8cda9d2cd96335ec9b4de9a19db" kindref="member">start_test_sem</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/><ref refid="pending_2src_2main_8c_1a3c62911dd48d7ca108af79cef7b8cb5c" kindref="member">sync_test_sem</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/><ref refid="pending_2src_2main_8c_1a70832c7cf3b5b52f3ac62b1b75333a7d" kindref="member">end_test_sem</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfifo__data" kindref="compound">fifo_data</ref><sp/><ref refid="pending_2src_2main_8c_1a0b4699639e869290c3b7a4128ac28dc3" kindref="member">fifo_test_data</ref>[4]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/><ref refid="pending_2src_2main_8c_1a98919468ef08343f23fec0822b33be80" kindref="member">FIFO_TEST_END</ref><sp/>+<sp/>1<sp/>},<sp/>{<sp/>0,<sp/><ref refid="pending_2src_2main_8c_1a98919468ef08343f23fec0822b33be80" kindref="member">FIFO_TEST_END</ref><sp/>+<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/><ref refid="pending_2src_2main_8c_1a98919468ef08343f23fec0822b33be80" kindref="member">FIFO_TEST_END</ref><sp/>+<sp/>3<sp/>},<sp/>{<sp/>0,<sp/><ref refid="pending_2src_2main_8c_1a98919468ef08343f23fec0822b33be80" kindref="member">FIFO_TEST_END</ref><sp/>+<sp/>4<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlifo__data" kindref="compound">lifo_data</ref><sp/><ref refid="pending_2src_2main_8c_1a4d39bb4e031409d95f357162f7592367" kindref="member">lifo_test_data</ref>[4]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/><ref refid="pending_2src_2main_8c_1ac80002b2fa20d8040a82d916523253ca" kindref="member">LIFO_TEST_END</ref><sp/>+<sp/>1<sp/>},<sp/>{<sp/>0,<sp/><ref refid="pending_2src_2main_8c_1ac80002b2fa20d8040a82d916523253ca" kindref="member">LIFO_TEST_END</ref><sp/>+<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/><ref refid="pending_2src_2main_8c_1ac80002b2fa20d8040a82d916523253ca" kindref="member">LIFO_TEST_END</ref><sp/>+<sp/>3<sp/>},<sp/>{<sp/>0,<sp/><ref refid="pending_2src_2main_8c_1ac80002b2fa20d8040a82d916523253ca" kindref="member">LIFO_TEST_END</ref><sp/>+<sp/>4<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="pending_2src_2main_8c_1ac18c66967883ffab7c653934c31e8fb6" kindref="member">timer_start_tick</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="pending_2src_2main_8c_1a034b56e10699797dd166758c6a163234" kindref="member">timer_end_tick</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="pending_2src_2main_8c_1a505214a40ab0dac787ae7ef41a6003a9" kindref="member">timer_data</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__noinit<sp/><ref refid="pending_2src_2main_8c_1a137a68e4ce815528bc00743e8bad7a7a" kindref="member">coop_high_state</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__noinit<sp/><ref refid="pending_2src_2main_8c_1ab43d1e954ac541054ec7d35fea37168b" kindref="member">coop_low_state</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__noinit<sp/><ref refid="pending_2src_2main_8c_1a6c5c59702855dbb3def08092fbaf840e" kindref="member">task_high_state</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__noinit<sp/><ref refid="pending_2src_2main_8c_1a2505209450d68ba07962e1eb1fbeb04b" kindref="member">task_low_state</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__noinit<sp/><ref refid="pending_2src_2main_8c_1a89dde238ea46c99311d0d903ff08aa06" kindref="member">counter</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="pending_2src_2main_8c_1a24e90d95e665471f5223fba9511fa000" kindref="member">my_fifo_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__fifo" kindref="compound">k_fifo</ref><sp/>*<ref refid="pending_2src_2main_8c_1a4c78dc47164573bcfb8130a8d52e1b77" kindref="member">fifo</ref>,<sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__fifo__apis_1ga1e2c480e2124116af97e94e7b4435de6" kindref="member">k_fifo_get</ref>(<ref refid="pending_2src_2main_8c_1a4c78dc47164573bcfb8130a8d52e1b77" kindref="member">fifo</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>));</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="pending_2src_2main_8c_1a77c4a98452e46f370028c044ffe7dfe0" kindref="member">my_lifo_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__lifo" kindref="compound">k_lifo</ref><sp/>*<ref refid="pending_2src_2main_8c_1a5f1a84796be0de3921a88115c3d4246c" kindref="member">lifo</ref>,<sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__lifo__apis_1gad5f1775947b07a2a77f667aa9e41db5a" kindref="member">k_lifo_get</ref>(<ref refid="pending_2src_2main_8c_1a5f1a84796be0de3921a88115c3d4246c" kindref="member">lifo</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>));</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pending_2src_2main_8c_1a112d65e589d53fa2eed8ecfa4aaa8e03" kindref="member">increment_counter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref><sp/>=<sp/><ref refid="group__isr__apis_1ga19fdde73c3b02fcca6cf1d1e67631228" kindref="member">irq_lock</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>++<ref refid="pending_2src_2main_8c_1a89dde238ea46c99311d0d903ff08aa06" kindref="member">counter</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1ga646045943b3b2a130738bcc48867bf57" kindref="member">irq_unlock</ref>(<ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pending_2src_2main_8c_1a3b4214c407c947e7182e9549415930ee" kindref="member">sync_threads</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__work" kindref="compound">k_work</ref><sp/>*<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structoffload__work" kindref="compound">offload_work</ref><sp/>*offload<sp/>=</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1gac5bc561d1bfd1bf68877fe577779bd2f" kindref="member">CONTAINER_OF</ref>(<ref refid="profiling_2profiling__api_2src_2main_8c_1ab8576d2c1da058eedc28da3c8cfac6f1" kindref="member">work</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structoffload__work" kindref="compound">offload_work</ref>,<sp/><ref refid="structoffload__work_1a9e8abca119163646d553bb464ea08fd8" kindref="member">work_item</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(offload-&gt;<ref refid="structoffload__work_1aa2a7b19b1a5c3eba14ae6adac73faf2b" kindref="member">sem</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(offload-&gt;<ref refid="structoffload__work_1aa2a7b19b1a5c3eba14ae6adac73faf2b" kindref="member">sem</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(offload-&gt;<ref refid="structoffload__work_1aa2a7b19b1a5c3eba14ae6adac73faf2b" kindref="member">sem</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(offload-&gt;<ref refid="structoffload__work_1aa2a7b19b1a5c3eba14ae6adac73faf2b" kindref="member">sem</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pending_2src_2main_8c_1a48ed10d5907d12974450d7bae319d4ef" kindref="member">fifo_tests</ref>(<ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*get)(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__fifo" kindref="compound">k_fifo</ref><sp/>*,<sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref>),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*sem_take)(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_sem<sp/>*,<sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref>))</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfifo__data" kindref="compound">fifo_data</ref><sp/>*<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sem_take(&amp;<ref refid="pending_2src_2main_8c_1a8af5f8cda9d2cd96335ec9b4de9a19db" kindref="member">start_test_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref><sp/>=<sp/><ref refid="pending_2src_2main_8c_1a1837e658992207229ff2d87217ccb8d4" kindref="member">FIFO_TEST_START</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expect<sp/>this<sp/>to<sp/>time<sp/>out<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref><sp/>=<sp/>get(&amp;<ref refid="pending_2src_2main_8c_1a4c78dc47164573bcfb8130a8d52e1b77" kindref="member">fifo</ref>,<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_ERROR(</highlight><highlight class="stringliteral">&quot;****<sp/>Unexpected<sp/>data<sp/>on<sp/>FIFO<sp/>get\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref><sp/>=<sp/><ref refid="pending_2src_2main_8c_1a112d65e589d53fa2eed8ecfa4aaa8e03" kindref="member">increment_counter</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sync<sp/>up<sp/>fifo<sp/>test<sp/>threads<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sem_take(&amp;<ref refid="pending_2src_2main_8c_1a3c62911dd48d7ca108af79cef7b8cb5c" kindref="member">sync_test_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expect<sp/>this<sp/>to<sp/>receive<sp/>data<sp/>from<sp/>the<sp/>fifo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref><sp/>=<sp/><ref refid="pending_2src_2main_8c_1a98919468ef08343f23fec0822b33be80" kindref="member">FIFO_TEST_END</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref><sp/>=<sp/>get(&amp;<ref refid="pending_2src_2main_8c_1a4c78dc47164573bcfb8130a8d52e1b77" kindref="member">fifo</ref>,<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_ERROR(</highlight><highlight class="stringliteral">&quot;****<sp/>No<sp/>data<sp/>on<sp/>FIFO<sp/>get\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref><sp/>=<sp/><ref refid="pending_2src_2main_8c_1a112d65e589d53fa2eed8ecfa4aaa8e03" kindref="member">increment_counter</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>-&gt;<ref refid="structldata_1afcd6ba050622fd52118aff010693a62d" kindref="member">data</ref><sp/>!=<sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_ERROR(</highlight><highlight class="stringliteral">&quot;****<sp/>Got<sp/>FIFO<sp/>data<sp/>%d,<sp/>not<sp/>%d<sp/>(%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>-&gt;<ref refid="structldata_1afcd6ba050622fd52118aff010693a62d" kindref="member">data</ref>,<sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sem_take(&amp;<ref refid="pending_2src_2main_8c_1a70832c7cf3b5b52f3ac62b1b75333a7d" kindref="member">end_test_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pending_2src_2main_8c_1a17657f3e32e45a79dc6db733e86be2a0" kindref="member">lifo_tests</ref>(<ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*get)(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structk__lifo" kindref="compound">k_lifo</ref><sp/>*,<sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref>),</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*sem_take)(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_sem<sp/>*,<sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref>))</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlifo__data" kindref="compound">lifo_data</ref><sp/>*<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sem_take(&amp;<ref refid="pending_2src_2main_8c_1a8af5f8cda9d2cd96335ec9b4de9a19db" kindref="member">start_test_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref><sp/>=<sp/><ref refid="pending_2src_2main_8c_1aaf8a4ab6aa792471c7090b4b2a7c700c" kindref="member">LIFO_TEST_START</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expect<sp/>this<sp/>to<sp/>time<sp/>out<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref><sp/>=<sp/>get(&amp;<ref refid="pending_2src_2main_8c_1a5f1a84796be0de3921a88115c3d4246c" kindref="member">lifo</ref>,<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_ERROR(</highlight><highlight class="stringliteral">&quot;****<sp/>Unexpected<sp/>data<sp/>on<sp/>LIFO<sp/>get\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref><sp/>=<sp/><ref refid="pending_2src_2main_8c_1a112d65e589d53fa2eed8ecfa4aaa8e03" kindref="member">increment_counter</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sync<sp/>up<sp/>all<sp/>threads<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sem_take(&amp;<ref refid="pending_2src_2main_8c_1a3c62911dd48d7ca108af79cef7b8cb5c" kindref="member">sync_test_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expect<sp/>this<sp/>to<sp/>receive<sp/>data<sp/>from<sp/>the<sp/>lifo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref><sp/>=<sp/><ref refid="pending_2src_2main_8c_1ac80002b2fa20d8040a82d916523253ca" kindref="member">LIFO_TEST_END</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref><sp/>=<sp/>get(&amp;<ref refid="pending_2src_2main_8c_1a5f1a84796be0de3921a88115c3d4246c" kindref="member">lifo</ref>,<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_ERROR(</highlight><highlight class="stringliteral">&quot;****<sp/>No<sp/>data<sp/>on<sp/>LIFO<sp/>get\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref><sp/>=<sp/><ref refid="pending_2src_2main_8c_1a112d65e589d53fa2eed8ecfa4aaa8e03" kindref="member">increment_counter</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>-&gt;<ref refid="structldata_1afcd6ba050622fd52118aff010693a62d" kindref="member">data</ref><sp/>!=<sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_ERROR(</highlight><highlight class="stringliteral">&quot;****<sp/>Got<sp/>LIFO<sp/>data<sp/>%d,<sp/>not<sp/>%d<sp/>(%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>-&gt;<ref refid="structldata_1afcd6ba050622fd52118aff010693a62d" kindref="member">data</ref>,<sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>,<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sem_take(&amp;<ref refid="pending_2src_2main_8c_1a70832c7cf3b5b52f3ac62b1b75333a7d" kindref="member">end_test_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pending_2src_2main_8c_1a70c17c149fa61fce30cfbe2b1df01091" kindref="member">timer_tests</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="pending_2src_2main_8c_1a8af5f8cda9d2cd96335ec9b4de9a19db" kindref="member">start_test_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1ac18c66967883ffab7c653934c31e8fb6" kindref="member">timer_start_tick</ref><sp/>=<sp/><ref refid="group__clock__apis_1ga9253cfb7b46af4d8994349323ce9872b" kindref="member">k_uptime_get_32</ref>();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga3ba70e9f059ff52fd2057ab89ea7f2ee" kindref="member">k_timer_start</ref>(&amp;<ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>,<sp/><ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(1),<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__timer__apis_1ga81d6d95b7021e26ad4cab161318e04f2" kindref="member">k_timer_status_sync</ref>(&amp;<ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>))<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtimer__data" kindref="compound">timer_data</ref><sp/>=<sp/><ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>.user_data;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a034b56e10699797dd166758c6a163234" kindref="member">timer_end_tick</ref><sp/>=<sp/><ref refid="group__clock__apis_1ga9253cfb7b46af4d8994349323ce9872b" kindref="member">k_uptime_get_32</ref>();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="pending_2src_2main_8c_1a70832c7cf3b5b52f3ac62b1b75333a7d" kindref="member">end_test_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pending_2src_2main_8c_1afa3d99661cc75fcedb6963a392930969" kindref="member">coop_high</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg3)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg1);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg2);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg3);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a48ed10d5907d12974450d7bae319d4ef" kindref="member">fifo_tests</ref>(<ref refid="pending_2src_2main_8c_1a1b6a8436eb109850e6f55236e430df5a" kindref="member">NUM_SECONDS</ref>(1),<sp/>&amp;<ref refid="pending_2src_2main_8c_1a137a68e4ce815528bc00743e8bad7a7a" kindref="member">coop_high_state</ref>,<sp/><ref refid="pending_2src_2main_8c_1a24e90d95e665471f5223fba9511fa000" kindref="member">my_fifo_get</ref>,<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a17657f3e32e45a79dc6db733e86be2a0" kindref="member">lifo_tests</ref>(<ref refid="pending_2src_2main_8c_1a1b6a8436eb109850e6f55236e430df5a" kindref="member">NUM_SECONDS</ref>(1),<sp/>&amp;<ref refid="pending_2src_2main_8c_1a137a68e4ce815528bc00743e8bad7a7a" kindref="member">coop_high_state</ref>,<sp/><ref refid="pending_2src_2main_8c_1a77c4a98452e46f370028c044ffe7dfe0" kindref="member">my_lifo_get</ref>,<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pending_2src_2main_8c_1a5c8ef963dc51843ded4d09d41b909ada" kindref="member">coop_low</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg3)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg1);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg2);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg3);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a48ed10d5907d12974450d7bae319d4ef" kindref="member">fifo_tests</ref>(<ref refid="pending_2src_2main_8c_1af95f27544f39827250d6bef6fa5fe18e" kindref="member">HALF_SECOND</ref>,<sp/>&amp;<ref refid="pending_2src_2main_8c_1ab43d1e954ac541054ec7d35fea37168b" kindref="member">coop_low_state</ref>,<sp/><ref refid="pending_2src_2main_8c_1a24e90d95e665471f5223fba9511fa000" kindref="member">my_fifo_get</ref>,<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a17657f3e32e45a79dc6db733e86be2a0" kindref="member">lifo_tests</ref>(<ref refid="pending_2src_2main_8c_1af95f27544f39827250d6bef6fa5fe18e" kindref="member">HALF_SECOND</ref>,<sp/>&amp;<ref refid="pending_2src_2main_8c_1ab43d1e954ac541054ec7d35fea37168b" kindref="member">coop_low_state</ref>,<sp/><ref refid="pending_2src_2main_8c_1a77c4a98452e46f370028c044ffe7dfe0" kindref="member">my_lifo_get</ref>,<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pending_2src_2main_8c_1a8d5f54b40026ad33194e0db6ca767b9e" kindref="member">task_high</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fifo__apis_1gaeebf6ef54d4be61e19408f44a734a159" kindref="member">k_fifo_init</ref>(&amp;<ref refid="pending_2src_2main_8c_1a4c78dc47164573bcfb8130a8d52e1b77" kindref="member">fifo</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lifo__apis_1ga69fb19716a9014f7de79f8e524d64a3e" kindref="member">k_lifo_init</ref>(&amp;<ref refid="pending_2src_2main_8c_1a5f1a84796be0de3921a88115c3d4246c" kindref="member">lifo</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga318c846a740b901e5d56876a47ad7f61" kindref="member">k_timer_init</ref>(&amp;<ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>.user_data<sp/>=<sp/><ref refid="pending_2src_2main_8c_1af15e2fb02ab5d29002244f705a5d123d" kindref="member">NON_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="pending_2src_2main_8c_1a8af5f8cda9d2cd96335ec9b4de9a19db" kindref="member">start_test_sem</ref>,<sp/>0,<sp/>UINT_MAX);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="pending_2src_2main_8c_1a3c62911dd48d7ca108af79cef7b8cb5c" kindref="member">sync_test_sem</ref>,<sp/>0,<sp/>UINT_MAX);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="pending_2src_2main_8c_1a70832c7cf3b5b52f3ac62b1b75333a7d" kindref="member">end_test_sem</ref>,<sp/>0,<sp/>UINT_MAX);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gadfc56554f9bfe7b52309d79660188593" kindref="member">k_work_queue_start</ref>(&amp;<ref refid="pending_2src_2main_8c_1ac0649d933c202a3d327ce1f6feaf4468" kindref="member">offload_work_q</ref>,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload_work_q_stack,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__stack__api_1ga775f8e6b4144cfdd24f3261b6db64150" kindref="member">K_THREAD_STACK_SIZEOF</ref>(offload_work_q_stack),</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1ab61000ea0eb6db6113356609543f4dfe" kindref="member">OFFLOAD_WORKQUEUE_PRIORITY</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a89dde238ea46c99311d0d903ff08aa06" kindref="member">counter</ref><sp/>=<sp/><ref refid="pending_2src_2main_8c_1a4167deb97760e93713db6fc7889c5ae6" kindref="member">SEM_TEST_START</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="pending_2src_2main_8c_1a7cf3f0f9166850de89f82fef405f998e" kindref="member">coop_thread</ref>[0],<sp/>coop_stack[0],<sp/><ref refid="pending_2src_2main_8c_1a5ff292780fcfcd2e0d9f4c0e188c0ee1" kindref="member">COOP_STACKSIZE</ref>,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1afa3d99661cc75fcedb6963a392930969" kindref="member">coop_high</ref>,<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/><ref refid="include_2kernel_8h_1ac145d4747518572acfc8ee1579007d54" kindref="member">K_PRIO_COOP</ref>(3),<sp/>0,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="pending_2src_2main_8c_1a7cf3f0f9166850de89f82fef405f998e" kindref="member">coop_thread</ref>[1],<sp/>coop_stack[1],<sp/><ref refid="pending_2src_2main_8c_1a5ff292780fcfcd2e0d9f4c0e188c0ee1" kindref="member">COOP_STACKSIZE</ref>,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a5c8ef963dc51843ded4d09d41b909ada" kindref="member">coop_low</ref>,<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/><ref refid="include_2kernel_8h_1ac145d4747518572acfc8ee1579007d54" kindref="member">K_PRIO_COOP</ref>(7),<sp/>0,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a89dde238ea46c99311d0d903ff08aa06" kindref="member">counter</ref><sp/>=<sp/><ref refid="pending_2src_2main_8c_1a1837e658992207229ff2d87217ccb8d4" kindref="member">FIFO_TEST_START</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a48ed10d5907d12974450d7bae319d4ef" kindref="member">fifo_tests</ref>(<ref refid="pending_2src_2main_8c_1ae96d394715f2f9f61c7e41713a146709" kindref="member">THIRD_SECOND</ref>,<sp/>&amp;<ref refid="pending_2src_2main_8c_1a6c5c59702855dbb3def08092fbaf840e" kindref="member">task_high_state</ref>,<sp/><ref refid="pending_2src_2main_8c_1a24e90d95e665471f5223fba9511fa000" kindref="member">my_fifo_get</ref>,<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a89dde238ea46c99311d0d903ff08aa06" kindref="member">counter</ref><sp/>=<sp/><ref refid="pending_2src_2main_8c_1aaf8a4ab6aa792471c7090b4b2a7c700c" kindref="member">LIFO_TEST_START</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a17657f3e32e45a79dc6db733e86be2a0" kindref="member">lifo_tests</ref>(<ref refid="pending_2src_2main_8c_1ae96d394715f2f9f61c7e41713a146709" kindref="member">THIRD_SECOND</ref>,<sp/>&amp;<ref refid="pending_2src_2main_8c_1a6c5c59702855dbb3def08092fbaf840e" kindref="member">task_high_state</ref>,<sp/><ref refid="pending_2src_2main_8c_1a77c4a98452e46f370028c044ffe7dfe0" kindref="member">my_lifo_get</ref>,<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a70c17c149fa61fce30cfbe2b1df01091" kindref="member">timer_tests</ref>();</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pending_2src_2main_8c_1abe2ac675cb19c97a17e2b046557a4d87" kindref="member">task_low</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a48ed10d5907d12974450d7bae319d4ef" kindref="member">fifo_tests</ref>(<ref refid="pending_2src_2main_8c_1a6085227bccccf93967cb8aaaa58b042c" kindref="member">FOURTH_SECOND</ref>,<sp/>&amp;<ref refid="pending_2src_2main_8c_1a2505209450d68ba07962e1eb1fbeb04b" kindref="member">task_low_state</ref>,<sp/><ref refid="pending_2src_2main_8c_1a24e90d95e665471f5223fba9511fa000" kindref="member">my_fifo_get</ref>,<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a17657f3e32e45a79dc6db733e86be2a0" kindref="member">lifo_tests</ref>(<ref refid="pending_2src_2main_8c_1a6085227bccccf93967cb8aaaa58b042c" kindref="member">FOURTH_SECOND</ref>,<sp/>&amp;<ref refid="pending_2src_2main_8c_1a2505209450d68ba07962e1eb1fbeb04b" kindref="member">task_low_state</ref>,<sp/><ref refid="pending_2src_2main_8c_1a77c4a98452e46f370028c044ffe7dfe0" kindref="member">my_lifo_get</ref>,<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pending__tests_1ga8f1ec9bc55430c23ea987a0f939b2ce6" kindref="member">test_pending_fifo</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Main<sp/>thread(test_main)<sp/>priority<sp/>was<sp/>9<sp/>but<sp/>ztest<sp/>thread<sp/>runs<sp/>at</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>priority<sp/>-1.<sp/>To<sp/>run<sp/>the<sp/>test<sp/>smoothly<sp/>make<sp/>both<sp/>main<sp/>and<sp/>ztest</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>threads<sp/>run<sp/>at<sp/>same<sp/>priority<sp/>level.</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>9);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structoffload__work" kindref="compound">offload_work</ref><sp/>offload1<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;offload1.<ref refid="structoffload__work_1a9e8abca119163646d553bb464ea08fd8" kindref="member">work_item</ref>,<sp/><ref refid="pending_2src_2main_8c_1a3b4214c407c947e7182e9549415930ee" kindref="member">sync_threads</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload1.<ref refid="structoffload__work_1aa2a7b19b1a5c3eba14ae6adac73faf2b" kindref="member">sem</ref><sp/>=<sp/>&amp;<ref refid="pending_2src_2main_8c_1a8af5f8cda9d2cd96335ec9b4de9a19db" kindref="member">start_test_sem</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="pending_2src_2main_8c_1ac0649d933c202a3d327ce1f6feaf4468" kindref="member">offload_work_q</ref>,<sp/>&amp;offload1.<ref refid="structoffload__work_1a9e8abca119163646d553bb464ea08fd8" kindref="member">work_item</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Verify<sp/>that<sp/>preemiptible<sp/>threads<sp/>&apos;task_high&apos;<sp/>and<sp/>&apos;task_low&apos;<sp/>do<sp/>not</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>busy-wait.<sp/>If<sp/>they<sp/>are<sp/>not<sp/>busy-waiting,<sp/>then<sp/>they<sp/>must<sp/>be<sp/>pending.</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Testing<sp/>preemptible<sp/>threads<sp/>block<sp/>on<sp/>fifos<sp/>...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>((<ref refid="pending_2src_2main_8c_1a137a68e4ce815528bc00743e8bad7a7a" kindref="member">coop_high_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1a1837e658992207229ff2d87217ccb8d4" kindref="member">FIFO_TEST_START</ref>)<sp/>||</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1ab43d1e954ac541054ec7d35fea37168b" kindref="member">coop_low_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1a1837e658992207229ff2d87217ccb8d4" kindref="member">FIFO_TEST_START</ref>)<sp/>||</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1a6c5c59702855dbb3def08092fbaf840e" kindref="member">task_high_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1a1837e658992207229ff2d87217ccb8d4" kindref="member">FIFO_TEST_START</ref>)<sp/>||</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1a2505209450d68ba07962e1eb1fbeb04b" kindref="member">task_low_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1a1837e658992207229ff2d87217ccb8d4" kindref="member">FIFO_TEST_START</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Give<sp/>waiting<sp/>threads<sp/>time<sp/>to<sp/>time-out<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(2));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Verify<sp/>that<sp/>the<sp/>cooperative<sp/>and<sp/>preemptible<sp/>threads<sp/>timed-out<sp/>in</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>correct<sp/>order.</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Testing<sp/>fifos<sp/>time-out<sp/>in<sp/>correct<sp/>order<sp/>...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>((<ref refid="pending_2src_2main_8c_1a2505209450d68ba07962e1eb1fbeb04b" kindref="member">task_low_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1a1837e658992207229ff2d87217ccb8d4" kindref="member">FIFO_TEST_START</ref><sp/>+<sp/>1)<sp/>||</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1a6c5c59702855dbb3def08092fbaf840e" kindref="member">task_high_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1a1837e658992207229ff2d87217ccb8d4" kindref="member">FIFO_TEST_START</ref><sp/>+<sp/>2)<sp/>||</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1ab43d1e954ac541054ec7d35fea37168b" kindref="member">coop_low_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1a1837e658992207229ff2d87217ccb8d4" kindref="member">FIFO_TEST_START</ref><sp/>+<sp/>3)<sp/>||</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1a137a68e4ce815528bc00743e8bad7a7a" kindref="member">coop_high_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1a1837e658992207229ff2d87217ccb8d4" kindref="member">FIFO_TEST_START</ref><sp/>+<sp/>4),</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;****<sp/>Threads<sp/>timed-out<sp/>in<sp/>unexpected<sp/>order&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a89dde238ea46c99311d0d903ff08aa06" kindref="member">counter</ref><sp/>=<sp/><ref refid="pending_2src_2main_8c_1a98919468ef08343f23fec0822b33be80" kindref="member">FIFO_TEST_END</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;offload1.<ref refid="structoffload__work_1a9e8abca119163646d553bb464ea08fd8" kindref="member">work_item</ref>,<sp/><ref refid="pending_2src_2main_8c_1a3b4214c407c947e7182e9549415930ee" kindref="member">sync_threads</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload1.<ref refid="structoffload__work_1aa2a7b19b1a5c3eba14ae6adac73faf2b" kindref="member">sem</ref><sp/>=<sp/>&amp;<ref refid="pending_2src_2main_8c_1a3c62911dd48d7ca108af79cef7b8cb5c" kindref="member">sync_test_sem</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="pending_2src_2main_8c_1ac0649d933c202a3d327ce1f6feaf4468" kindref="member">offload_work_q</ref>,<sp/>&amp;offload1.<ref refid="structoffload__work_1a9e8abca119163646d553bb464ea08fd8" kindref="member">work_item</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Two<sp/>cooperative<sp/>and<sp/>two<sp/>preemptible<sp/>threads<sp/>should<sp/>be<sp/>waiting<sp/>on</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>FIFO</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>data<sp/>to<sp/>the<sp/>FIFO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Testing<sp/><sp/>fifos<sp/>delivered<sp/>data<sp/>correctly<sp/>...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fifo__apis_1ga3addb10f86f19e245c23362433d5c913" kindref="member">k_fifo_put</ref>(&amp;<ref refid="pending_2src_2main_8c_1a4c78dc47164573bcfb8130a8d52e1b77" kindref="member">fifo</ref>,<sp/>&amp;<ref refid="pending_2src_2main_8c_1a0b4699639e869290c3b7a4128ac28dc3" kindref="member">fifo_test_data</ref>[0]);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fifo__apis_1ga3addb10f86f19e245c23362433d5c913" kindref="member">k_fifo_put</ref>(&amp;<ref refid="pending_2src_2main_8c_1a4c78dc47164573bcfb8130a8d52e1b77" kindref="member">fifo</ref>,<sp/>&amp;<ref refid="pending_2src_2main_8c_1a0b4699639e869290c3b7a4128ac28dc3" kindref="member">fifo_test_data</ref>[1]);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fifo__apis_1ga3addb10f86f19e245c23362433d5c913" kindref="member">k_fifo_put</ref>(&amp;<ref refid="pending_2src_2main_8c_1a4c78dc47164573bcfb8130a8d52e1b77" kindref="member">fifo</ref>,<sp/>&amp;<ref refid="pending_2src_2main_8c_1a0b4699639e869290c3b7a4128ac28dc3" kindref="member">fifo_test_data</ref>[2]);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fifo__apis_1ga3addb10f86f19e245c23362433d5c913" kindref="member">k_fifo_put</ref>(&amp;<ref refid="pending_2src_2main_8c_1a4c78dc47164573bcfb8130a8d52e1b77" kindref="member">fifo</ref>,<sp/>&amp;<ref refid="pending_2src_2main_8c_1a0b4699639e869290c3b7a4128ac28dc3" kindref="member">fifo_test_data</ref>[3]);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>((<ref refid="pending_2src_2main_8c_1a137a68e4ce815528bc00743e8bad7a7a" kindref="member">coop_high_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1a98919468ef08343f23fec0822b33be80" kindref="member">FIFO_TEST_END</ref><sp/>+<sp/>1)<sp/>||</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1ab43d1e954ac541054ec7d35fea37168b" kindref="member">coop_low_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1a98919468ef08343f23fec0822b33be80" kindref="member">FIFO_TEST_END</ref><sp/>+<sp/>2)<sp/>||</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1a6c5c59702855dbb3def08092fbaf840e" kindref="member">task_high_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1a98919468ef08343f23fec0822b33be80" kindref="member">FIFO_TEST_END</ref><sp/>+<sp/>3)<sp/>||</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1a2505209450d68ba07962e1eb1fbeb04b" kindref="member">task_low_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1a98919468ef08343f23fec0822b33be80" kindref="member">FIFO_TEST_END</ref><sp/>+<sp/>4),</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;****<sp/>Unexpected<sp/>delivery<sp/>order&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pending__tests_1ga993ea2a19573f32b914afa0318e972dd" kindref="member">test_pending_lifo</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Main<sp/>thread(test_main)<sp/>priority<sp/>was<sp/>9<sp/>but<sp/>ztest<sp/>thread<sp/>runs<sp/>at</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>priority<sp/>-1.<sp/>To<sp/>run<sp/>the<sp/>test<sp/>smoothly<sp/>make<sp/>both<sp/>main<sp/>and<sp/>ztest</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>threads<sp/>run<sp/>at<sp/>same<sp/>priority<sp/>level.</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>9);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structoffload__work" kindref="compound">offload_work</ref><sp/>offload1<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structoffload__work" kindref="compound">offload_work</ref><sp/>offload2<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;offload1.<ref refid="structoffload__work_1a9e8abca119163646d553bb464ea08fd8" kindref="member">work_item</ref>,<sp/><ref refid="pending_2src_2main_8c_1a3b4214c407c947e7182e9549415930ee" kindref="member">sync_threads</ref>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload1.<ref refid="structoffload__work_1aa2a7b19b1a5c3eba14ae6adac73faf2b" kindref="member">sem</ref><sp/>=<sp/>&amp;<ref refid="pending_2src_2main_8c_1a70832c7cf3b5b52f3ac62b1b75333a7d" kindref="member">end_test_sem</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="pending_2src_2main_8c_1ac0649d933c202a3d327ce1f6feaf4468" kindref="member">offload_work_q</ref>,<sp/>&amp;offload1.<ref refid="structoffload__work_1a9e8abca119163646d553bb464ea08fd8" kindref="member">work_item</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;offload2.<ref refid="structoffload__work_1a9e8abca119163646d553bb464ea08fd8" kindref="member">work_item</ref>,<sp/><ref refid="pending_2src_2main_8c_1a3b4214c407c947e7182e9549415930ee" kindref="member">sync_threads</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload2.<ref refid="structoffload__work_1aa2a7b19b1a5c3eba14ae6adac73faf2b" kindref="member">sem</ref><sp/>=<sp/>&amp;<ref refid="pending_2src_2main_8c_1a8af5f8cda9d2cd96335ec9b4de9a19db" kindref="member">start_test_sem</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="pending_2src_2main_8c_1ac0649d933c202a3d327ce1f6feaf4468" kindref="member">offload_work_q</ref>,<sp/>&amp;offload2.<ref refid="structoffload__work_1a9e8abca119163646d553bb464ea08fd8" kindref="member">work_item</ref>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Verify<sp/>that<sp/>cooperative<sp/>threads<sp/>&apos;task_high&apos;<sp/>and<sp/>&apos;task_low&apos;<sp/>do<sp/>not</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>busy-wait.<sp/>If<sp/>they<sp/>are<sp/>not<sp/>busy-waiting,<sp/>then<sp/>they<sp/>must<sp/>be<sp/>pending.</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Testing<sp/>preemptible<sp/>threads<sp/>block<sp/>on<sp/>lifos<sp/>...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>((<ref refid="pending_2src_2main_8c_1a137a68e4ce815528bc00743e8bad7a7a" kindref="member">coop_high_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1aaf8a4ab6aa792471c7090b4b2a7c700c" kindref="member">LIFO_TEST_START</ref>)<sp/>||</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1ab43d1e954ac541054ec7d35fea37168b" kindref="member">coop_low_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1aaf8a4ab6aa792471c7090b4b2a7c700c" kindref="member">LIFO_TEST_START</ref>)<sp/>||</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1a6c5c59702855dbb3def08092fbaf840e" kindref="member">task_high_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1aaf8a4ab6aa792471c7090b4b2a7c700c" kindref="member">LIFO_TEST_START</ref>)<sp/>||</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1a2505209450d68ba07962e1eb1fbeb04b" kindref="member">task_low_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1aaf8a4ab6aa792471c7090b4b2a7c700c" kindref="member">LIFO_TEST_START</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Give<sp/>waiting<sp/>threads<sp/>time<sp/>to<sp/>time-out<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(2));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Testing<sp/>lifos<sp/>time-out<sp/>in<sp/>correct<sp/>order<sp/>...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>((<ref refid="pending_2src_2main_8c_1a2505209450d68ba07962e1eb1fbeb04b" kindref="member">task_low_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1aaf8a4ab6aa792471c7090b4b2a7c700c" kindref="member">LIFO_TEST_START</ref><sp/>+<sp/>1)<sp/>||</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1a6c5c59702855dbb3def08092fbaf840e" kindref="member">task_high_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1aaf8a4ab6aa792471c7090b4b2a7c700c" kindref="member">LIFO_TEST_START</ref><sp/>+<sp/>2)<sp/>||</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1ab43d1e954ac541054ec7d35fea37168b" kindref="member">coop_low_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1aaf8a4ab6aa792471c7090b4b2a7c700c" kindref="member">LIFO_TEST_START</ref><sp/>+<sp/>3)<sp/>||</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1a137a68e4ce815528bc00743e8bad7a7a" kindref="member">coop_high_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1aaf8a4ab6aa792471c7090b4b2a7c700c" kindref="member">LIFO_TEST_START</ref><sp/>+<sp/>4),</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;****<sp/>Threads<sp/>timed-out<sp/>in<sp/>unexpected<sp/>order&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a89dde238ea46c99311d0d903ff08aa06" kindref="member">counter</ref><sp/>=<sp/><ref refid="pending_2src_2main_8c_1ac80002b2fa20d8040a82d916523253ca" kindref="member">LIFO_TEST_END</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;offload1.<ref refid="structoffload__work_1a9e8abca119163646d553bb464ea08fd8" kindref="member">work_item</ref>,<sp/><ref refid="pending_2src_2main_8c_1a3b4214c407c947e7182e9549415930ee" kindref="member">sync_threads</ref>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload1.<ref refid="structoffload__work_1aa2a7b19b1a5c3eba14ae6adac73faf2b" kindref="member">sem</ref><sp/>=<sp/>&amp;<ref refid="pending_2src_2main_8c_1a3c62911dd48d7ca108af79cef7b8cb5c" kindref="member">sync_test_sem</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="pending_2src_2main_8c_1ac0649d933c202a3d327ce1f6feaf4468" kindref="member">offload_work_q</ref>,<sp/>&amp;offload1.<ref refid="structoffload__work_1a9e8abca119163646d553bb464ea08fd8" kindref="member">work_item</ref>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Two<sp/>cooperative<sp/>threads<sp/>and<sp/>two<sp/>preemptive<sp/>threads<sp/>should</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>be<sp/>waiting<sp/>on<sp/>the<sp/>LIFO</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>data<sp/>to<sp/>the<sp/>LIFO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lifo__apis_1gad662e36b1df8b9013e2dc61f9dfe3a8b" kindref="member">k_lifo_put</ref>(&amp;<ref refid="pending_2src_2main_8c_1a5f1a84796be0de3921a88115c3d4246c" kindref="member">lifo</ref>,<sp/>&amp;<ref refid="pending_2src_2main_8c_1a4d39bb4e031409d95f357162f7592367" kindref="member">lifo_test_data</ref>[0]);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lifo__apis_1gad662e36b1df8b9013e2dc61f9dfe3a8b" kindref="member">k_lifo_put</ref>(&amp;<ref refid="pending_2src_2main_8c_1a5f1a84796be0de3921a88115c3d4246c" kindref="member">lifo</ref>,<sp/>&amp;<ref refid="pending_2src_2main_8c_1a4d39bb4e031409d95f357162f7592367" kindref="member">lifo_test_data</ref>[1]);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lifo__apis_1gad662e36b1df8b9013e2dc61f9dfe3a8b" kindref="member">k_lifo_put</ref>(&amp;<ref refid="pending_2src_2main_8c_1a5f1a84796be0de3921a88115c3d4246c" kindref="member">lifo</ref>,<sp/>&amp;<ref refid="pending_2src_2main_8c_1a4d39bb4e031409d95f357162f7592367" kindref="member">lifo_test_data</ref>[2]);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lifo__apis_1gad662e36b1df8b9013e2dc61f9dfe3a8b" kindref="member">k_lifo_put</ref>(&amp;<ref refid="pending_2src_2main_8c_1a5f1a84796be0de3921a88115c3d4246c" kindref="member">lifo</ref>,<sp/>&amp;<ref refid="pending_2src_2main_8c_1a4d39bb4e031409d95f357162f7592367" kindref="member">lifo_test_data</ref>[3]);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Testing<sp/>lifos<sp/>delivered<sp/>data<sp/>correctly<sp/>...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>((<ref refid="pending_2src_2main_8c_1a137a68e4ce815528bc00743e8bad7a7a" kindref="member">coop_high_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1ac80002b2fa20d8040a82d916523253ca" kindref="member">LIFO_TEST_END</ref><sp/>+<sp/>1)<sp/>||</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1ab43d1e954ac541054ec7d35fea37168b" kindref="member">coop_low_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1ac80002b2fa20d8040a82d916523253ca" kindref="member">LIFO_TEST_END</ref><sp/>+<sp/>2)<sp/>||</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1a6c5c59702855dbb3def08092fbaf840e" kindref="member">task_high_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1ac80002b2fa20d8040a82d916523253ca" kindref="member">LIFO_TEST_END</ref><sp/>+<sp/>3)<sp/>||</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pending_2src_2main_8c_1a2505209450d68ba07962e1eb1fbeb04b" kindref="member">task_low_state</ref><sp/>!=<sp/><ref refid="pending_2src_2main_8c_1ac80002b2fa20d8040a82d916523253ca" kindref="member">LIFO_TEST_END</ref><sp/>+<sp/>4),</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;****<sp/>Unexpected<sp/>timeout<sp/>order&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__kernel__pending__tests_1ga2e602bcd93141eb58c25b9cd5058fbee" kindref="member">test_pending_timer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Main<sp/>thread(test_main)<sp/>priority<sp/>was<sp/>9<sp/>but<sp/>ztest<sp/>thread<sp/>runs<sp/>at</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>priority<sp/>-1.<sp/>To<sp/>run<sp/>the<sp/>test<sp/>smoothly<sp/>make<sp/>both<sp/>main<sp/>and<sp/>ztest</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>threads<sp/>run<sp/>at<sp/>same<sp/>priority<sp/>level.</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>9);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structoffload__work" kindref="compound">offload_work</ref><sp/>offload2<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1gaf20080884a2893d39cd8e862b34a2a30" kindref="member">k_work_init</ref>(&amp;offload2.<ref refid="structoffload__work_1a9e8abca119163646d553bb464ea08fd8" kindref="member">work_item</ref>,<sp/><ref refid="pending_2src_2main_8c_1a3b4214c407c947e7182e9549415930ee" kindref="member">sync_threads</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offload2.<ref refid="structoffload__work_1aa2a7b19b1a5c3eba14ae6adac73faf2b" kindref="member">sem</ref><sp/>=<sp/>&amp;<ref refid="pending_2src_2main_8c_1a70832c7cf3b5b52f3ac62b1b75333a7d" kindref="member">end_test_sem</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__workqueue__apis_1ga5353e76f73db070614f50d06d292d05c" kindref="member">k_work_submit_to_queue</ref>(&amp;<ref refid="pending_2src_2main_8c_1ac0649d933c202a3d327ce1f6feaf4468" kindref="member">offload_work_q</ref>,<sp/>&amp;offload2.<ref refid="structoffload__work_1a9e8abca119163646d553bb464ea08fd8" kindref="member">work_item</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pending_2src_2main_8c_1a034b56e10699797dd166758c6a163234" kindref="member">timer_end_tick</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="pending_2src_2main_8c_1a8af5f8cda9d2cd96335ec9b4de9a19db" kindref="member">start_test_sem</ref>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>timer<sp/>tests<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>NOTE:<sp/>The<sp/>timer<sp/>test<sp/>is<sp/>running<sp/>in<sp/>the<sp/>context<sp/>of<sp/>high_task().</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Scheduling<sp/>is<sp/>expected<sp/>to<sp/>yield<sp/>to<sp/>high_task().<sp/><sp/>If<sp/>high_task()</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>does<sp/>not<sp/>pend<sp/>as<sp/>expected,<sp/>then<sp/>timer_end_tick<sp/>will<sp/>be<sp/>non-zero.</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Testing<sp/>preemptible<sp/>thread<sp/>waiting<sp/>on<sp/>timer<sp/>...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="pending_2src_2main_8c_1a034b56e10699797dd166758c6a163234" kindref="member">timer_end_tick</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Task<sp/>did<sp/>not<sp/>pend<sp/>on<sp/>timer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Let<sp/>the<sp/>timer<sp/>expire<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1gadc361472aea59267f6ea38f5e7c7ca2a" kindref="member">K_SECONDS</ref>(2));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>((<ref refid="pending_2src_2main_8c_1a034b56e10699797dd166758c6a163234" kindref="member">timer_end_tick</ref><sp/>&lt;<sp/><ref refid="pending_2src_2main_8c_1ac18c66967883ffab7c653934c31e8fb6" kindref="member">timer_start_tick</ref><sp/>+<sp/><ref refid="pending_2src_2main_8c_1a1b6a8436eb109850e6f55236e430df5a" kindref="member">NUM_SECONDS</ref>(1)),</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Task<sp/>waiting<sp/>on<sp/>timer<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="structtimer__data" kindref="compound">timer_data</ref>,<sp/><ref refid="pending_2src_2main_8c_1af15e2fb02ab5d29002244f705a5d123d" kindref="member">NON_NULL_PTR</ref>,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Incorrect<sp/>data<sp/>from<sp/>timer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="pending_2src_2main_8c_1a70832c7cf3b5b52f3ac62b1b75333a7d" kindref="member">end_test_sem</ref>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="common_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" kindref="member">test_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" kindref="member">ztest_test_suite</ref>(pend,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__pending__tests_1ga8f1ec9bc55430c23ea987a0f939b2ce6" kindref="member">test_pending_fifo</ref>),</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__pending__tests_1ga993ea2a19573f32b914afa0318e972dd" kindref="member">test_pending_lifo</ref>),</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="group__kernel__pending__tests_1ga2e602bcd93141eb58c25b9cd5058fbee" kindref="member">test_pending_timer</ref>)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" kindref="member">ztest_run_test_suite</ref>(pend);</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><ref refid="mem__slab_2mslab_2src_2main_8c_1a8007ef681bb821f5e6400569aaacbabb" kindref="member">K_THREAD_DEFINE</ref>(TASK_LOW,<sp/><ref refid="pending_2src_2main_8c_1ad0ef98d8a3bb21001cfbd584f750b634" kindref="member">PREEM_STACKSIZE</ref>,<sp/><ref refid="pending_2src_2main_8c_1abe2ac675cb19c97a17e2b046557a4d87" kindref="member">task_low</ref>,<sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><ref refid="mem__slab_2mslab_2src_2main_8c_1a8007ef681bb821f5e6400569aaacbabb" kindref="member">K_THREAD_DEFINE</ref>(TASK_HIGH,<sp/><ref refid="pending_2src_2main_8c_1ad0ef98d8a3bb21001cfbd584f750b634" kindref="member">PREEM_STACKSIZE</ref>,<sp/><ref refid="pending_2src_2main_8c_1a8d5f54b40026ad33194e0db6ca767b9e" kindref="member">task_high</ref>,<sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,<sp/>0,<sp/>0);</highlight></codeline>
    </programlisting>
    <location file="tests/kernel/pending/src/main.c"/>
  </compounddef>
</doxygen>
