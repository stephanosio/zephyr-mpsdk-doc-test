<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="debug_2gdbstub_8h" kind="file" language="C++">
    <compoundname>gdbstub.h</compoundname>
    <innerclass refid="structgdb__mem__region" prot="public">gdb_mem_region</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="debug_2gdbstub_8h_1a34e3537cdca807d30b24ce76ab1e503c" prot="public" static="no">
        <name>GDB_EXCEPTION_INVALID_INSTRUCTION</name>
        <initializer>4UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/gdbstub.h" line="11" column="9" bodyfile="include/debug/gdbstub.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="debug_2gdbstub_8h_1af97b5ae81a45e635e69c613b4e2fa9f4" prot="public" static="no">
        <name>GDB_EXCEPTION_BREAKPOINT</name>
        <initializer>5UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/gdbstub.h" line="12" column="9" bodyfile="include/debug/gdbstub.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="debug_2gdbstub_8h_1a37ea8e51fd123a434d6d221280cedca2" prot="public" static="no">
        <name>GDB_EXCEPTION_MEMORY_FAULT</name>
        <initializer>7UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/gdbstub.h" line="13" column="9" bodyfile="include/debug/gdbstub.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="debug_2gdbstub_8h_1ad65b407f7c8d6d44ab5886866ee2d9da" prot="public" static="no">
        <name>GDB_EXCEPTION_DIVIDE_ERROR</name>
        <initializer>8UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/gdbstub.h" line="14" column="9" bodyfile="include/debug/gdbstub.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="debug_2gdbstub_8h_1a94da0c93f951fc608c76a525251a9d3a" prot="public" static="no">
        <name>GDB_EXCEPTION_INVALID_MEMORY</name>
        <initializer>11UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/gdbstub.h" line="15" column="9" bodyfile="include/debug/gdbstub.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="debug_2gdbstub_8h_1acc588c5509a9cf55df485b90dff54ba4" prot="public" static="no">
        <name>GDB_EXCEPTION_OVERFLOW</name>
        <initializer>16UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/gdbstub.h" line="16" column="9" bodyfile="include/debug/gdbstub.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="debug_2gdbstub_8h_1a02b9a9d5f33f9ee43bfdd0e68a9a6462" prot="public" static="no">
        <name>GDB_MEM_REGION_NO_ACCESS</name>
        <initializer>0UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/gdbstub.h" line="19" column="9" bodyfile="include/debug/gdbstub.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="debug_2gdbstub_8h_1a8a7f81403bcc747817792171bf502d1a" prot="public" static="no">
        <name>GDB_MEM_REGION_READ</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/gdbstub.h" line="20" column="9" bodyfile="include/debug/gdbstub.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="debug_2gdbstub_8h_1adb7926e4055fc3ffd94da16c9f0a97b6" prot="public" static="no">
        <name>GDB_MEM_REGION_WRITE</name>
        <initializer><ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/gdbstub.h" line="21" column="9" bodyfile="include/debug/gdbstub.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="debug_2gdbstub_8h_1a083549c8b9db7f28536481e33d362479" prot="public" static="no">
        <name>GDB_MEM_REGION_RO</name>
        <initializer>	(<ref refid="debug_2gdbstub_8h_1a8a7f81403bcc747817792171bf502d1a" kindref="member">GDB_MEM_REGION_READ</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/gdbstub.h" line="23" column="9" bodyfile="include/debug/gdbstub.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="debug_2gdbstub_8h_1a386751baaedc3e607a37a473a88bb05a" prot="public" static="no">
        <name>GDB_MEM_REGION_RW</name>
        <initializer>	(<ref refid="debug_2gdbstub_8h_1a8a7f81403bcc747817792171bf502d1a" kindref="member">GDB_MEM_REGION_READ</ref> | <ref refid="debug_2gdbstub_8h_1adb7926e4055fc3ffd94da16c9f0a97b6" kindref="member">GDB_MEM_REGION_WRITE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/gdbstub.h" line="26" column="9" bodyfile="include/debug/gdbstub.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="debug_2gdbstub_8h_1a9d01831c656bae3ee4592ccb45456295" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structgdb__mem__region" kindref="compound">gdb_mem_region</ref></type>
        <definition>const struct gdb_mem_region gdb_mem_region_array[]</definition>
        <argsstring>[]</argsstring>
        <name>gdb_mem_region_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Memory region descriptions used for GDB memory access.</para>
<para>This array specifies which region of memory GDB can access with read/write attribites. This is used to restrict memory read/write in GDB stub to memory that can be legally accessed without resulting in memory faults. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/gdbstub.h" line="52" column="34" declfile="include/debug/gdbstub.h" declline="52" declcolumn="34"/>
      </memberdef>
      <memberdef kind="variable" id="debug_2gdbstub_8h_1a439e80da6ae6e5388f9a78744d0978d1" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t gdb_mem_num_regions</definition>
        <argsstring></argsstring>
        <name>gdb_mem_num_regions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of Memory Regions.</para>
<para>Number of elements in gdb_mem_region_array[]; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/gdbstub.h" line="59" column="21" declfile="include/debug/gdbstub.h" declline="59" declcolumn="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="debug_2gdbstub_8h_1ab392b604a2edf4bea077eb7fa02079e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t gdb_bin2hex</definition>
        <argsstring>(const uint8_t *buf, size_t buflen, char *hex, size_t hexlen)</argsstring>
        <name>gdb_bin2hex</name>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buflen</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>hex</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>hexlen</declname>
        </param>
        <briefdescription>
<para>Convert a binary array into string representation. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that this is similar to <ref refid="group__sys-util_1gaf8f2ab98cc3f045ba834dbbb13a5dfd7" kindref="member">bin2hex()</ref> but does not force a null character at the end of the hexadeciaml output buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>The binary array to convert </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buflen</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the binary array to convert </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hex</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of where to store the string representation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hexlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the storage area for string representation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the converted string, or 0 if an error occurred. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/gdbstub.h" line="74" column="8" declfile="include/debug/gdbstub.h" declline="74" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="debug_2gdbstub_8h_1add890d2dc6e197a2b94c45c4de94c8b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool gdb_mem_can_read</definition>
        <argsstring>(const uintptr_t addr, const size_t len, uint8_t *align)</argsstring>
        <name>gdb_mem_can_read</name>
        <param>
          <type>const <ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref></type>
          <declname>addr</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>align</declname>
        </param>
        <briefdescription>
<para>Check if a memory block can be read. </para>
        </briefdescription>
        <detaileddescription>
<para>This checks if the specified memory block can be read.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting address of the memory block </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of memory block </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">align</parametername>
</parameternamelist>
<parameterdescription>
<para>Read alignment of region</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if memory block can be read, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/gdbstub.h" line="89" column="6" declfile="include/debug/gdbstub.h" declline="89" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="debug_2gdbstub_8h_1aac6c53353a4751d835028c6fd9906d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool gdb_mem_can_write</definition>
        <argsstring>(const uintptr_t addr, const size_t len, uint8_t *align)</argsstring>
        <name>gdb_mem_can_write</name>
        <param>
          <type>const <ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref></type>
          <declname>addr</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>align</declname>
        </param>
        <briefdescription>
<para>Check if a memory block can be written into. </para>
        </briefdescription>
        <detaileddescription>
<para>This checks if the specified memory block can be written into.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting address of the memory block </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of memory block </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">align</parametername>
</parameternamelist>
<parameterdescription>
<para>Write alignment of region</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if GDB stub can write to the block, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/gdbstub.h" line="102" column="6" declfile="include/debug/gdbstub.h" declline="102" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_DEBUG_GDBSTUB_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_DEBUG_GDBSTUB_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Map<sp/>from<sp/>CPU<sp/>excpetions<sp/>to<sp/>GDB<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="debug_2gdbstub_8h_1a34e3537cdca807d30b24ce76ab1e503c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GDB_EXCEPTION_INVALID_INSTRUCTION<sp/><sp/><sp/>4UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="debug_2gdbstub_8h_1af97b5ae81a45e635e69c613b4e2fa9f4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GDB_EXCEPTION_BREAKPOINT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="debug_2gdbstub_8h_1a37ea8e51fd123a434d6d221280cedca2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GDB_EXCEPTION_MEMORY_FAULT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="debug_2gdbstub_8h_1ad65b407f7c8d6d44ab5886866ee2d9da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GDB_EXCEPTION_DIVIDE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="debug_2gdbstub_8h_1a94da0c93f951fc608c76a525251a9d3a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GDB_EXCEPTION_INVALID_MEMORY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>11UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="debug_2gdbstub_8h_1acc588c5509a9cf55df485b90dff54ba4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GDB_EXCEPTION_OVERFLOW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Access<sp/>permissions<sp/>for<sp/>memory<sp/>regions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="debug_2gdbstub_8h_1a02b9a9d5f33f9ee43bfdd0e68a9a6462" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GDB_MEM_REGION_NO_ACCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="debug_2gdbstub_8h_1a8a7f81403bcc747817792171bf502d1a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GDB_MEM_REGION_READ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="debug_2gdbstub_8h_1adb7926e4055fc3ffd94da16c9f0a97b6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GDB_MEM_REGION_WRITE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="debug_2gdbstub_8h_1a083549c8b9db7f28536481e33d362479" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GDB_MEM_REGION_RO<sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GDB_MEM_REGION_READ)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="debug_2gdbstub_8h_1a386751baaedc3e607a37a473a88bb05a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GDB_MEM_REGION_RW<sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GDB_MEM_REGION_READ<sp/>|<sp/>GDB_MEM_REGION_WRITE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structgdb__mem__region" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgdb__mem__region" kindref="compound">gdb_mem_region</ref><sp/>{</highlight></codeline>
<codeline lineno="32" refid="structgdb__mem__region_1a463465123fd373996a857b38c71474b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref><sp/><ref refid="structgdb__mem__region_1a463465123fd373996a857b38c71474b3" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structgdb__mem__region_1a16001ef766b3c5775c1d1b2c59575b74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref><sp/><ref refid="structgdb__mem__region_1a16001ef766b3c5775c1d1b2c59575b74" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structgdb__mem__region_1ad8ae6acf6950428a9846a25fb0219eeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><sp/><ref refid="structgdb__mem__region_1ad8ae6acf6950428a9846a25fb0219eeb" kindref="member">attributes</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structgdb__mem__region_1aa714bde657eb3572367a924298dd927f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><sp/><ref refid="structgdb__mem__region_1aa714bde657eb3572367a924298dd927f" kindref="member">alignment</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgdb__mem__region" kindref="compound">gdb_mem_region</ref><sp/><ref refid="debug_2gdbstub_8h_1a9d01831c656bae3ee4592ccb45456295" kindref="member">gdb_mem_region_array</ref>[];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="debug_2gdbstub_8h_1a439e80da6ae6e5388f9a78744d0978d1" kindref="member">gdb_mem_num_regions</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="debug_2gdbstub_8h_1ab392b604a2edf4bea077eb7fa02079e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="debug_2gdbstub_8h_1ab392b604a2edf4bea077eb7fa02079e1" kindref="member">gdb_bin2hex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buflen,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="printk_8c_1a8e1c24afea727e0d4baab03c6de252dc" kindref="member">hex</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hexlen);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="debug_2gdbstub_8h_1add890d2dc6e197a2b94c45c4de94c8b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="debug_2gdbstub_8h_1add890d2dc6e197a2b94c45c4de94c8b1" kindref="member">gdb_mem_can_read</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref><sp/>addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*align);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="debug_2gdbstub_8h_1aac6c53353a4751d835028c6fd9906d19" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="debug_2gdbstub_8h_1aac6c53353a4751d835028c6fd9906d19" kindref="member">gdb_mem_can_write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="stdint_8h_1a4788399d1d0b37ccf098a7da82254808" kindref="member">uintptr_t</ref><sp/>addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*align);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/debug/gdbstub.h"/>
  </compounddef>
</doxygen>
