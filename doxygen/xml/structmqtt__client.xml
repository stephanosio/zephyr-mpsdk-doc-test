<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structmqtt__client" kind="struct" language="C++" prot="public">
    <compoundname>mqtt_client</compoundname>
    <includes refid="mqtt_8h" local="no">mqtt.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structmqtt__client_1a41cc1d3c5e5180af1d6376f88598678a" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structmqtt__internal" kindref="compound">mqtt_internal</ref></type>
        <definition>struct mqtt_internal mqtt_client::internal</definition>
        <argsstring></argsstring>
        <name>internal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MQTT client internal state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="473" column="20" bodyfile="include/net/mqtt.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1ac31a2ea9d67886f83fd3af88f33f36d9" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structmqtt__transport" kindref="compound">mqtt_transport</ref></type>
        <definition>struct mqtt_transport mqtt_client::transport</definition>
        <argsstring></argsstring>
        <name>transport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MQTT transport configuration and data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="476" column="21" bodyfile="include/net/mqtt.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1aabd419115c8637e4e4c0e6d23a5a984d" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structmqtt__utf8" kindref="compound">mqtt_utf8</ref></type>
        <definition>struct mqtt_utf8 mqtt_client::client_id</definition>
        <argsstring></argsstring>
        <name>client_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unique client identification to be used for the connection. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="479" column="16" bodyfile="include/net/mqtt.h" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1a72d61d9c0e717010ff90c2ed7fcddf5c" prot="public" static="no" mutable="no">
        <type>const void *</type>
        <definition>const void* mqtt_client::broker</definition>
        <argsstring></argsstring>
        <name>broker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Broker details, for example, address, port. Address type should be compatible with transport used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="484" column="12" bodyfile="include/net/mqtt.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1ab271f2061fe3c9e3c1a76158a1c00449" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structmqtt__utf8" kindref="compound">mqtt_utf8</ref> *</type>
        <definition>struct mqtt_utf8* mqtt_client::user_name</definition>
        <argsstring></argsstring>
        <name>user_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>User name (if any) to be used for the connection. NULL indicates no user name. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="489" column="16" bodyfile="include/net/mqtt.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1aef6da1db6f600a2bfd1c7dd0d78d1b6d" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structmqtt__utf8" kindref="compound">mqtt_utf8</ref> *</type>
        <definition>struct mqtt_utf8* mqtt_client::password</definition>
        <argsstring></argsstring>
        <name>password</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Password (if any) to be used for the connection. Note that if password is provided, user name shall also be provided. NULL indicates no password. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="495" column="16" bodyfile="include/net/mqtt.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1a4b23a72831697b78dc4019a4b6ac97e4" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structmqtt__topic" kindref="compound">mqtt_topic</ref> *</type>
        <definition>struct mqtt_topic* mqtt_client::will_topic</definition>
        <argsstring></argsstring>
        <name>will_topic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Will topic and QoS. Can be NULL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="498" column="17" bodyfile="include/net/mqtt.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1a7f4e9547b1d91edf21589334db711499" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structmqtt__utf8" kindref="compound">mqtt_utf8</ref> *</type>
        <definition>struct mqtt_utf8* mqtt_client::will_message</definition>
        <argsstring></argsstring>
        <name>will_message</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Will message. Can be NULL. Non NULL value valid only if will topic is not NULL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="503" column="16" bodyfile="include/net/mqtt.h" bodystart="503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1a44c515b8b25d59554990f6193217d83f" prot="public" static="no" mutable="no">
        <type><ref refid="group__mqtt__socket_1gabdf01ededb62ceb4c1608a64cb718a8c" kindref="member">mqtt_evt_cb_t</ref></type>
        <definition>mqtt_evt_cb_t mqtt_client::evt_cb</definition>
        <argsstring></argsstring>
        <name>evt_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Application callback registered with the module to get MQTT events. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="507" column="15" bodyfile="include/net/mqtt.h" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1a9f63fb54f8557135c1aa38a60bb7053c" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
        <definition>uint8_t* mqtt_client::rx_buf</definition>
        <argsstring></argsstring>
        <name>rx_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Receive buffer used for MQTT packet reception in RX path. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="510" column="9" bodyfile="include/net/mqtt.h" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1a66335741e991a2985ab5d4d7765651d2" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t mqtt_client::rx_buf_size</definition>
        <argsstring></argsstring>
        <name>rx_buf_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Size of receive buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="513" column="10" bodyfile="include/net/mqtt.h" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1ae582274bf396caa0a3427f1aeace639c" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
        <definition>uint8_t* mqtt_client::tx_buf</definition>
        <argsstring></argsstring>
        <name>tx_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transmit buffer used for creating MQTT packet in TX path. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="516" column="9" bodyfile="include/net/mqtt.h" bodystart="516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1a4c456f4065e3bc20752d908f2d805667" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t mqtt_client::tx_buf_size</definition>
        <argsstring></argsstring>
        <name>tx_buf_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Size of transmit buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="519" column="10" bodyfile="include/net/mqtt.h" bodystart="519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1aa65a4af5952634e4ff5c4bf700ccccd7" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t mqtt_client::keepalive</definition>
        <argsstring></argsstring>
        <name>keepalive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Keepalive interval for this client in seconds. Default is CONFIG_MQTT_KEEPALIVE. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="524" column="10" bodyfile="include/net/mqtt.h" bodystart="524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1a63e3c1b470a7de9d179b1c0686504a68" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t mqtt_client::protocol_version</definition>
        <argsstring></argsstring>
        <name>protocol_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MQTT protocol version. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="527" column="9" bodyfile="include/net/mqtt.h" bodystart="527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1a67f76cd0feadf8ae11ed232dcc9ac1d1" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref></type>
        <definition>int8_t mqtt_client::unacked_ping</definition>
        <argsstring></argsstring>
        <name>unacked_ping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unanswered PINGREQ count on this connection. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="530" column="8" bodyfile="include/net/mqtt.h" bodystart="530" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1ac96879e15ccd829fbcf9b88913161c0d" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t mqtt_client::will_retain</definition>
        <argsstring></argsstring>
        <name>will_retain</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Will retain flag, 1 if will message shall be retained persistently. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="534" column="9" bodyfile="include/net/mqtt.h" bodystart="534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmqtt__client_1aae9ecb0faf8dc4337579e0713d065184" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t mqtt_client::clean_session</definition>
        <argsstring></argsstring>
        <name>clean_session</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clean session flag indicating a fresh (1) or a retained session (0). Default is CONFIG_MQTT_CLEAN_SESSION. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/mqtt.h" line="539" column="9" bodyfile="include/net/mqtt.h" bodystart="539" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>MQTT Client definition to maintain information relevant to the client. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>mqtt_client</label>
        <link refid="structmqtt__client"/>
        <childnode refid="2" relation="usage">
          <edgelabel>internal</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>transport</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>client_id</edgelabel>
          <edgelabel>password</edgelabel>
          <edgelabel>user_name</edgelabel>
          <edgelabel>will_message</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>will_topic</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>evt_cb</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>mqtt_internal</label>
        <link refid="structmqtt__internal"/>
        <childnode refid="3" relation="usage">
          <edgelabel>mutex</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>mqtt_topic</label>
        <link refid="structmqtt__topic"/>
        <childnode refid="5" relation="usage">
          <edgelabel>topic</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>mqtt_transport</label>
        <link refid="structmqtt__transport"/>
      </node>
      <node id="5">
        <label>mqtt_utf8</label>
        <link refid="structmqtt__utf8"/>
      </node>
      <node id="3">
        <label>sys_mutex</label>
        <link refid="structsys__mutex"/>
      </node>
    </collaborationgraph>
    <location file="include/net/mqtt.h" line="471" column="1" bodyfile="include/net/mqtt.h" bodystart="471" bodyend="540"/>
    <listofallmembers>
      <member refid="structmqtt__client_1a72d61d9c0e717010ff90c2ed7fcddf5c" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>broker</name></member>
      <member refid="structmqtt__client_1aae9ecb0faf8dc4337579e0713d065184" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>clean_session</name></member>
      <member refid="structmqtt__client_1aabd419115c8637e4e4c0e6d23a5a984d" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>client_id</name></member>
      <member refid="structmqtt__client_1a44c515b8b25d59554990f6193217d83f" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>evt_cb</name></member>
      <member refid="structmqtt__client_1a41cc1d3c5e5180af1d6376f88598678a" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>internal</name></member>
      <member refid="structmqtt__client_1aa65a4af5952634e4ff5c4bf700ccccd7" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>keepalive</name></member>
      <member refid="structmqtt__client_1aef6da1db6f600a2bfd1c7dd0d78d1b6d" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>password</name></member>
      <member refid="structmqtt__client_1a63e3c1b470a7de9d179b1c0686504a68" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>protocol_version</name></member>
      <member refid="structmqtt__client_1a9f63fb54f8557135c1aa38a60bb7053c" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>rx_buf</name></member>
      <member refid="structmqtt__client_1a66335741e991a2985ab5d4d7765651d2" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>rx_buf_size</name></member>
      <member refid="structmqtt__client_1ac31a2ea9d67886f83fd3af88f33f36d9" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>transport</name></member>
      <member refid="structmqtt__client_1ae582274bf396caa0a3427f1aeace639c" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>tx_buf</name></member>
      <member refid="structmqtt__client_1a4c456f4065e3bc20752d908f2d805667" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>tx_buf_size</name></member>
      <member refid="structmqtt__client_1a67f76cd0feadf8ae11ed232dcc9ac1d1" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>unacked_ping</name></member>
      <member refid="structmqtt__client_1ab271f2061fe3c9e3c1a76158a1c00449" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>user_name</name></member>
      <member refid="structmqtt__client_1a7f4e9547b1d91edf21589334db711499" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>will_message</name></member>
      <member refid="structmqtt__client_1ac96879e15ccd829fbcf9b88913161c0d" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>will_retain</name></member>
      <member refid="structmqtt__client_1a4b23a72831697b78dc4019a4b6ac97e4" prot="public" virt="non-virtual"><scope>mqtt_client</scope><name>will_topic</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
