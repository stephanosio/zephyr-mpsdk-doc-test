<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structbt__hci__driver" kind="struct" language="C++" prot="public">
    <compoundname>bt_hci_driver</compoundname>
    <includes refid="hci__driver_8h" local="no">hci_driver.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structbt__hci__driver_1a4036d2609565058a46b1a677fc7ec93e" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* bt_hci_driver::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Name of the driver </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="148" column="12" bodyfile="include/drivers/bluetooth/hci_driver.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__hci__driver_1acd9a4d631da22b4638afd4593cff7d0c" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__bt__hci__driver_1gaa24c7d2d9e2c35d6cd9cfcf650fb65ef" kindref="member">bt_hci_driver_bus</ref></type>
        <definition>enum bt_hci_driver_bus bt_hci_driver::bus</definition>
        <argsstring></argsstring>
        <name>bus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bus of the transport (BT_HCI_DRIVER_BUS_*) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="151" column="23" bodyfile="include/drivers/bluetooth/hci_driver.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__hci__driver_1a0dd8d706ee7ded476a90b19a946226b8" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t bt_hci_driver::quirks</definition>
        <argsstring></argsstring>
        <name>quirks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specific controller quirks. These are set by the HCI driver and acted upon by the host. They can either be statically set at buildtime, or set at runtime before the HCI driver&apos;s <ref refid="structbt__hci__driver_1aabacc7c98a08a8a53f6aca436fac87d0" kindref="member">open()</ref> callback returns. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="158" column="10" bodyfile="include/drivers/bluetooth/hci_driver.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__hci__driver_1aabacc7c98a08a8a53f6aca436fac87d0" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* bt_hci_driver::open) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>open</name>
        <briefdescription>
<para>Open the HCI transport. </para>
        </briefdescription>
        <detaileddescription>
<para>Opens the HCI transport for operation. This function must not return until the transport is ready for operation, meaning it is safe to start calling the <ref refid="structbt__hci__driver_1abcfc79474fc44aae260d61ff99fdb666" kindref="member">send()</ref> handler.</para>
<para>If the driver uses its own RX thread, i.e. CONFIG_BT_RECV_IS_RX_THREAD is set, then this function is expected to start that thread.</para>
<para><simplesect kind="return"><para>0 on success or negative error number on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="173" column="1" bodyfile="include/drivers/bluetooth/hci_driver.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__hci__driver_1abcfc79474fc44aae260d61ff99fdb666" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* bt_hci_driver::send) (struct net_buf *buf)</definition>
        <argsstring>)(struct net_buf *buf)</argsstring>
        <name>send</name>
        <briefdescription>
<para>Send HCI buffer to controller. </para>
        </briefdescription>
        <detaileddescription>
<para>Send an HCI command or ACL data to the controller. The exact type of the data can be checked with the help of <ref refid="group__bt__buf_1ga2e35f0593e54d28bad62d6b8933f1599" kindref="member">bt_buf_get_type()</ref>.</para>
<para><simplesect kind="note"><para>This function must only be called from a cooperative thread.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer containing data to be sent to the controller.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or negative error number on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="187" column="1" bodyfile="include/drivers/bluetooth/hci_driver.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__hci__driver_1a4384d5fde7a507fe54c738ade529020d" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* bt_hci_driver::setup) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>setup</name>
        <briefdescription>
<para>HCI vendor-specific setup. </para>
        </briefdescription>
        <detaileddescription>
<para>Executes vendor-specific commands sequence to initialize BT Controller before BT Host executes Reset sequence.</para>
<para><simplesect kind="note"><para><verbatim>embed:rst:inline :kconfig:option:`CONFIG_BT_HCI_SETUP` </verbatim> must be selected for this field to be available.</para>
</simplesect>
<simplesect kind="return"><para>0 on success or negative error number on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/bluetooth/hci_driver.h" line="201" column="1" bodyfile="include/drivers/bluetooth/hci_driver.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstraction which represents the HCI transport to the controller. </para>
    </briefdescription>
    <detaileddescription>
<para>This struct is used to represent the HCI transport to the Bluetooth controller. </para>
    </detaileddescription>
    <location file="include/drivers/bluetooth/hci_driver.h" line="146" column="1" bodyfile="include/drivers/bluetooth/hci_driver.h" bodystart="146" bodyend="203"/>
    <listofallmembers>
      <member refid="structbt__hci__driver_1acd9a4d631da22b4638afd4593cff7d0c" prot="public" virt="non-virtual"><scope>bt_hci_driver</scope><name>bus</name></member>
      <member refid="structbt__hci__driver_1a4036d2609565058a46b1a677fc7ec93e" prot="public" virt="non-virtual"><scope>bt_hci_driver</scope><name>name</name></member>
      <member refid="structbt__hci__driver_1aabacc7c98a08a8a53f6aca436fac87d0" prot="public" virt="non-virtual"><scope>bt_hci_driver</scope><name>open</name></member>
      <member refid="structbt__hci__driver_1a0dd8d706ee7ded476a90b19a946226b8" prot="public" virt="non-virtual"><scope>bt_hci_driver</scope><name>quirks</name></member>
      <member refid="structbt__hci__driver_1abcfc79474fc44aae260d61ff99fdb666" prot="public" virt="non-virtual"><scope>bt_hci_driver</scope><name>send</name></member>
      <member refid="structbt__hci__driver_1a4384d5fde7a507fe54c738ade529020d" prot="public" virt="non-virtual"><scope>bt_hci_driver</scope><name>setup</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
