<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structbt__le__adv__param" kind="struct" language="C++" prot="public">
    <compoundname>bt_le_adv_param</compoundname>
    <includes refid="bluetooth_8h" local="no">bluetooth.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structbt__le__adv__param_1af957bd92b949536af2b2db0db7b2b425" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_le_adv_param::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>Local identity. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>When extended advertising <verbatim>embed:rst:inline :kconfig:option:`CONFIG_BT_EXT_ADV` </verbatim> is not enabled or not supported by the controller it is not possible to scan and advertise simultaneously using two different random addresses. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/bluetooth.h" line="535" column="10" bodyfile="include/bluetooth/bluetooth.h" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__le__adv__param_1a6e2f0e1b76495afe7fe661e8698d0909" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_le_adv_param::sid</definition>
        <argsstring></argsstring>
        <name>sid</name>
        <briefdescription>
<para>Advertising Set Identifier, valid range 0x00 - 0x0f. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Requires <ref refid="group__bt__gap_1gga2970898e8a43ce21e1cc510d49f1b89dae33ae9d8e43cce82e47fa73999d415ab" kindref="member">BT_LE_ADV_OPT_EXT_ADV</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/bluetooth.h" line="542" column="10" bodyfile="include/bluetooth/bluetooth.h" bodystart="542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__le__adv__param_1a9911e9bfc97ff0c48a6decae3f922e95" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_le_adv_param::secondary_max_skip</definition>
        <argsstring></argsstring>
        <name>secondary_max_skip</name>
        <briefdescription>
<para>Secondary channel maximum skip count. </para>
        </briefdescription>
        <detaileddescription>
<para>Maximum advertising events the advertiser can skip before it must send advertising data on the secondary advertising channel.</para>
<para><simplesect kind="note"><para>Requires <ref refid="group__bt__gap_1gga2970898e8a43ce21e1cc510d49f1b89dae33ae9d8e43cce82e47fa73999d415ab" kindref="member">BT_LE_ADV_OPT_EXT_ADV</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/bluetooth.h" line="552" column="10" bodyfile="include/bluetooth/bluetooth.h" bodystart="552" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__le__adv__param_1a2a978c60153eb03697769bc72928f4ef" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t bt_le_adv_param::options</definition>
        <argsstring></argsstring>
        <name>options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bit-field of advertising options </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/bluetooth.h" line="555" column="10" bodyfile="include/bluetooth/bluetooth.h" bodystart="555" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__le__adv__param_1aca8ff5a4f5d29184535162f007b2d39e" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t bt_le_adv_param::interval_min</definition>
        <argsstring></argsstring>
        <name>interval_min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum Advertising Interval (N * 0.625 milliseconds) Minimum Advertising Interval shall be less than or equal to the Maximum Advertising Interval. The Minimum Advertising Interval and Maximum Advertising Interval should not be the same value (as stated in Bluetooth Core Spec 5.2, section 7.8.5) Range: 0x0020 to 0x4000 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/bluetooth.h" line="564" column="10" bodyfile="include/bluetooth/bluetooth.h" bodystart="564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__le__adv__param_1afeba6973dca99d8ee818fdde0c22cb59" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t bt_le_adv_param::interval_max</definition>
        <argsstring></argsstring>
        <name>interval_max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum Advertising Interval (N * 0.625 milliseconds) Minimum Advertising Interval shall be less than or equal to the Maximum Advertising Interval. The Minimum Advertising Interval and Maximum Advertising Interval should not be the same value (as stated in Bluetooth Core Spec 5.2, section 7.8.5) Range: 0x0020 to 0x4000 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/bluetooth.h" line="573" column="10" bodyfile="include/bluetooth/bluetooth.h" bodystart="573" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__le__adv__param_1a4cf31f54f067fffa3c848adc2ffd7119" prot="public" static="no" mutable="no">
        <type>const <ref refid="structbt__addr__le__t" kindref="compound">bt_addr_le_t</ref> *</type>
        <definition>const bt_addr_le_t* bt_le_adv_param::peer</definition>
        <argsstring></argsstring>
        <name>peer</name>
        <briefdescription>
<para>Directed advertising to peer. </para>
        </briefdescription>
        <detaileddescription>
<para>When this parameter is set the advertiser will send directed advertising to the remote device.</para>
<para>The advertising type will either be high duty cycle, or low duty cycle if the BT_LE_ADV_OPT_DIR_MODE_LOW_DUTY option is enabled. When using <ref refid="group__bt__gap_1gga2970898e8a43ce21e1cc510d49f1b89dae33ae9d8e43cce82e47fa73999d415ab" kindref="member">BT_LE_ADV_OPT_EXT_ADV</ref> then only low duty cycle is allowed.</para>
<para>In case of connectable high duty cycle if the connection could not be established within the timeout the connected() callback will be called with the status set to <ref refid="hci__err_8h_1abfa408d8366ff3cae1cd35fffcda30c0" kindref="member">BT_HCI_ERR_ADV_TIMEOUT</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/bluetooth.h" line="590" column="20" bodyfile="include/bluetooth/bluetooth.h" bodystart="590" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>LE Advertising Parameters. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>bt_addr_le_t</label>
        <link refid="structbt__addr__le__t"/>
        <childnode refid="3" relation="usage">
          <edgelabel>a</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>bt_addr_t</label>
        <link refid="structbt__addr__t"/>
      </node>
      <node id="1">
        <label>bt_le_adv_param</label>
        <link refid="structbt__le__adv__param"/>
        <childnode refid="2" relation="usage">
          <edgelabel>peer</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/bluetooth/bluetooth.h" line="526" column="1" bodyfile="include/bluetooth/bluetooth.h" bodystart="526" bodyend="591"/>
    <listofallmembers>
      <member refid="structbt__le__adv__param_1af957bd92b949536af2b2db0db7b2b425" prot="public" virt="non-virtual"><scope>bt_le_adv_param</scope><name>id</name></member>
      <member refid="structbt__le__adv__param_1afeba6973dca99d8ee818fdde0c22cb59" prot="public" virt="non-virtual"><scope>bt_le_adv_param</scope><name>interval_max</name></member>
      <member refid="structbt__le__adv__param_1aca8ff5a4f5d29184535162f007b2d39e" prot="public" virt="non-virtual"><scope>bt_le_adv_param</scope><name>interval_min</name></member>
      <member refid="structbt__le__adv__param_1a2a978c60153eb03697769bc72928f4ef" prot="public" virt="non-virtual"><scope>bt_le_adv_param</scope><name>options</name></member>
      <member refid="structbt__le__adv__param_1a4cf31f54f067fffa3c848adc2ffd7119" prot="public" virt="non-virtual"><scope>bt_le_adv_param</scope><name>peer</name></member>
      <member refid="structbt__le__adv__param_1a9911e9bfc97ff0c48a6decae3f922e95" prot="public" virt="non-virtual"><scope>bt_le_adv_param</scope><name>secondary_max_skip</name></member>
      <member refid="structbt__le__adv__param_1a6e2f0e1b76495afe7fe661e8698d0909" prot="public" virt="non-virtual"><scope>bt_le_adv_param</scope><name>sid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
