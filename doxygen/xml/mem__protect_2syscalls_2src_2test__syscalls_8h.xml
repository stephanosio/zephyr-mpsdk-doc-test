<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="mem__protect_2syscalls_2src_2test__syscalls_8h" kind="file" language="C++">
    <compoundname>test_syscalls.h</compoundname>
    <includes local="no">zephyr.h</includes>
    <includes local="no">syscalls/test_syscalls.h</includes>
    <includedby refid="mem__protect_2syscalls_2src_2main_8c" local="yes">tests/kernel/mem_protect/syscalls/src/main.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>tests/kernel/mem_protect/syscalls/src/test_syscalls.h</label>
        <link refid="mem__protect_2syscalls_2src_2test__syscalls_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>syscalls/test_syscalls.h</label>
      </node>
      <node id="2">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>tests/kernel/mem_protect/syscalls/src/main.c</label>
        <link refid="mem__protect_2syscalls_2src_2main_8c"/>
      </node>
      <node id="1">
        <label>tests/kernel/mem_protect/syscalls/src/test_syscalls.h</label>
        <link refid="mem__protect_2syscalls_2src_2test__syscalls_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="mem__protect_2syscalls_2src_2test__syscalls_8h_1a578203a0088dedf145ecfc4d15579cb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int string_alloc_copy</definition>
        <argsstring>(char *src)</argsstring>
        <name>string_alloc_copy</name>
        <param>
          <type>char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/syscalls/src/test_syscalls.h" line="11" column="6" declfile="tests/kernel/mem_protect/syscalls/src/test_syscalls.h" declline="11" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2syscalls_2src_2test__syscalls_8h_1a63cc4326388ec57a4104b0c95ececbde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int string_copy</definition>
        <argsstring>(char *src)</argsstring>
        <name>string_copy</name>
        <param>
          <type>char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/syscalls/src/test_syscalls.h" line="13" column="6" declfile="tests/kernel/mem_protect/syscalls/src/test_syscalls.h" declline="13" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2syscalls_2src_2test__syscalls_8h_1a047d277a3b5a8b1c0ae7c58d740b1086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int to_copy</definition>
        <argsstring>(char *dest)</argsstring>
        <name>to_copy</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/syscalls/src/test_syscalls.h" line="15" column="6" declfile="tests/kernel/mem_protect/syscalls/src/test_syscalls.h" declline="15" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2syscalls_2src_2test__syscalls_8h_1a47d73e7411498a53de8a27f2396ea654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t string_nlen</definition>
        <argsstring>(char *src, size_t maxlen, int *err)</argsstring>
        <name>string_nlen</name>
        <param>
          <type>char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxlen</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/syscalls/src/test_syscalls.h" line="17" column="9" declfile="tests/kernel/mem_protect/syscalls/src/test_syscalls.h" declline="17" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2syscalls_2src_2test__syscalls_8h_1a23707796c47194860af7a655ee6ddc09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int syscall_arg64</definition>
        <argsstring>(uint64_t arg)</argsstring>
        <name>syscall_arg64</name>
        <param>
          <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/syscalls/src/test_syscalls.h" line="19" column="6" declfile="tests/kernel/mem_protect/syscalls/src/test_syscalls.h" declline="19" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2syscalls_2src_2test__syscalls_8h_1af0cdd25f90c63f890d3b27096cf4eacd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
        <definition>uint64_t syscall_arg64_big</definition>
        <argsstring>(uint32_t arg1, uint32_t arg2, uint64_t arg3, uint32_t arg4, uint32_t arg5, uint64_t arg6)</argsstring>
        <name>syscall_arg64_big</name>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>arg1</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>arg2</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
          <declname>arg3</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>arg4</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>arg5</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref></type>
          <declname>arg6</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/syscalls/src/test_syscalls.h" line="21" column="11" declfile="tests/kernel/mem_protect/syscalls/src/test_syscalls.h" declline="21" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2syscalls_2src_2test__syscalls_8h_1a94ef970cc9b6e35f529fbb6d0fe21bb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool syscall_context</definition>
        <argsstring>(void)</argsstring>
        <name>syscall_context</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/syscalls/src/test_syscalls.h" line="24" column="7" declfile="tests/kernel/mem_protect/syscalls/src/test_syscalls.h" declline="24" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2syscalls_2src_2test__syscalls_8h_1a454212ef885a41b79b4b0e722d0c614b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t more_args</definition>
        <argsstring>(uint32_t arg1, uint32_t arg2, uint32_t arg3, uint32_t arg4, uint32_t arg5, uint32_t arg6, uint32_t arg7)</argsstring>
        <name>more_args</name>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>arg1</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>arg2</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>arg3</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>arg4</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>arg5</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>arg6</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>arg7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/syscalls/src/test_syscalls.h" line="26" column="11" declfile="tests/kernel/mem_protect/syscalls/src/test_syscalls.h" declline="26" declcolumn="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_TEST_SYSCALLS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_TEST_SYSCALLS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="mem__protect_2syscalls_2src_2test__syscalls_8h_1a578203a0088dedf145ecfc4d15579cb8" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2syscalls_2src_2test__syscalls_8h_1a578203a0088dedf145ecfc4d15579cb8" kindref="member">string_alloc_copy</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="mem__protect_2syscalls_2src_2test__syscalls_8h_1a63cc4326388ec57a4104b0c95ececbde" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2syscalls_2src_2test__syscalls_8h_1a63cc4326388ec57a4104b0c95ececbde" kindref="member">string_copy</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="mem__protect_2syscalls_2src_2test__syscalls_8h_1a047d277a3b5a8b1c0ae7c58d740b1086" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2syscalls_2src_2test__syscalls_8h_1a047d277a3b5a8b1c0ae7c58d740b1086" kindref="member">to_copy</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dest);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="mem__protect_2syscalls_2src_2test__syscalls_8h_1a47d73e7411498a53de8a27f2396ea654" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2syscalls_2src_2test__syscalls_8h_1a47d73e7411498a53de8a27f2396ea654" kindref="member">string_nlen</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxlen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*err);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="mem__protect_2syscalls_2src_2test__syscalls_8h_1a23707796c47194860af7a655ee6ddc09" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2syscalls_2src_2test__syscalls_8h_1a23707796c47194860af7a655ee6ddc09" kindref="member">syscall_arg64</ref>(<ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/>arg);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="mem__protect_2syscalls_2src_2test__syscalls_8h_1af0cdd25f90c63f890d3b27096cf4eacd" refkind="member"><highlight class="normal">__syscall<sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="mem__protect_2syscalls_2src_2test__syscalls_8h_1af0cdd25f90c63f890d3b27096cf4eacd" kindref="member">syscall_arg64_big</ref>(<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>arg1,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>arg2,<sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/>arg3,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>arg4,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>arg5,<sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/>arg6);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="mem__protect_2syscalls_2src_2test__syscalls_8h_1a94ef970cc9b6e35f529fbb6d0fe21bb7" refkind="member"><highlight class="normal">__syscall<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2syscalls_2src_2test__syscalls_8h_1a94ef970cc9b6e35f529fbb6d0fe21bb7" kindref="member">syscall_context</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="mem__protect_2syscalls_2src_2test__syscalls_8h_1a454212ef885a41b79b4b0e722d0c614b" refkind="member"><highlight class="normal">__syscall<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="mem__protect_2syscalls_2src_2test__syscalls_8h_1a454212ef885a41b79b4b0e722d0c614b" kindref="member">more_args</ref>(<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>arg1,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>arg2,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>arg3,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>arg4,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>arg5,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>arg6,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>arg7);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;syscalls/test_syscalls.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_TEST_SYSCALLS_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="tests/kernel/mem_protect/syscalls/src/test_syscalls.h"/>
  </compounddef>
</doxygen>
