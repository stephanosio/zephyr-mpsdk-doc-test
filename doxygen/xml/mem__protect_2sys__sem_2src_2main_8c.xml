<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="mem__protect_2sys__sem_2src_2main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes refid="ztest_8h" local="no">ztest.h</includes>
    <includes refid="irq__offload_8h" local="no">irq_offload.h</includes>
    <includes refid="sem_8h" local="no">sys/sem.h</includes>
    <incdepgraph>
      <node id="17">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="66">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="65">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="29">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="36">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="38">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="34">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="32">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="40">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="41">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="37">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="35">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="39">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="75">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="45">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="51">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="28">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="42">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>sys/sem.h</label>
        <link refid="sem_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="23">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="4">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="19">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="86">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="87">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="13">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="8">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="11">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="64">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="88">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="81">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="2">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="15">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/mem_protect/sys_sem/src/main.c</label>
        <link refid="mem__protect_2sys__sem_2src_2main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>alloca.h</label>
      </node>
      <node id="68">
        <label>arch/cpu.h</label>
      </node>
      <node id="31">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="30">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="43">
        <label>kernel.h</label>
      </node>
      <node id="6">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="84">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="89">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="90">
        <label>tc_util.h</label>
      </node>
      <node id="9">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1ad58a7057e696e52dad791fa36632d7ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_basic_sem_test</definition>
        <argsstring>(void)</argsstring>
        <name>test_basic_sem_test</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="129" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="129" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1a05415ff77659ca7bf227d2460cc80b0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_simple_sem_from_isr</definition>
        <argsstring>(void)</argsstring>
        <name>test_simple_sem_from_isr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test semaphore count when given by an ISR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="158" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="158" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1a980e77b2cbbf9e329144eae98b079a1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_simple_sem_from_task</definition>
        <argsstring>(void)</argsstring>
        <name>test_simple_sem_from_task</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test semaphore count when given by thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="178" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="178" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1aa333e4cfd24bbf545462c51e215237ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_take_no_wait</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_take_no_wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test if <ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take()</ref> decreases semaphore count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="198" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="198" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1aed85a39ac76cf3f9c7a85e9622409912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_take_no_wait_fails</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_take_no_wait_fails</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take()</ref> when there is no semaphore to take. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="220" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="220" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1ac3ac78bdf5fd008590f2997e15f0fafb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_take_timeout_fails</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_take_timeout_fails</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take()</ref> with timeout expiry. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="243" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="243" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1a4f32ec757c4bf9a27aee0bb354d2353b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_take_timeout</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_take_timeout</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take()</ref> with timeout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="260" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="260" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1adc45dac316741c4281efcacdf12ea52e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_take_timeout_forever</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_take_timeout_forever</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take()</ref> with forever timeout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="286" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="286" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1ab307c87cb125b3eae98e4842886151d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_take_timeout_isr</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_take_timeout_isr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test <ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take()</ref> with timeout in ISR context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="312" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="312" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1abc3e0aef2feca4251f8220aec4c4196b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_take_multiple</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_take_multiple</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test multiple semaphore take. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="332" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="332" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1a7a0d165476689da2cba46564c8244e79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_give_take_from_isr</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_give_take_from_isr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test semaphore give and take and its count from ISR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="435" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="435" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1ab05c8c00775cdb6bd1e96349f7cf38fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_give_limit</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_give_limit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test semaphore give limit count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="465" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="465" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1ac63b7e143bf87a695064128f34f7031c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sem_multiple_threads_wait</definition>
        <argsstring>(void)</argsstring>
        <name>test_sem_multiple_threads_wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test multiple semaphore take and give with wait. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="505" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="505" bodyend="563"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" prot="public" static="no">
        <name>SEM_INIT_VAL</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="12" column="9" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" prot="public" static="no">
        <name>SEM_MAX_VAL</name>
        <initializer>(10U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="13" column="9" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mem__protect_2sys__sem_2src_2main_8c_1aed2079386fc07f630156be1bdd9db2a0" prot="public" static="no">
        <name>SEM_TIMEOUT</name>
        <initializer>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(100))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="14" column="9" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mem__protect_2sys__sem_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" prot="public" static="no">
        <name>STACK_SIZE</name>
        <initializer>(512 + CONFIG_TEST_EXTRA_STACKSIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="15" column="9" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mem__protect_2sys__sem_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" prot="public" static="no">
        <name>TOTAL_THREADS_WAITING</name>
        <initializer>(3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="16" column="9" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" prot="public" static="no" mutable="no">
        <type><ref refid="group__ztest__test_1gac3de5965061b1164a8033712c9094e23" kindref="member">ZTEST_BMEM</ref> struct <ref refid="structsys__sem" kindref="compound">sys_sem</ref></type>
        <definition>ZTEST_BMEM struct sys_sem simple_sem</definition>
        <argsstring></argsstring>
        <name>simple_sem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="20" column="25" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" prot="public" static="no" mutable="no">
        <type><ref refid="group__ztest__test_1gac3de5965061b1164a8033712c9094e23" kindref="member">ZTEST_BMEM</ref> struct <ref refid="structsys__sem" kindref="compound">sys_sem</ref></type>
        <definition>ZTEST_BMEM struct sys_sem low_prio_sem</definition>
        <argsstring></argsstring>
        <name>low_prio_sem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="21" column="25" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" prot="public" static="no" mutable="no">
        <type><ref refid="group__ztest__test_1gac3de5965061b1164a8033712c9094e23" kindref="member">ZTEST_BMEM</ref> struct <ref refid="structsys__sem" kindref="compound">sys_sem</ref></type>
        <definition>ZTEST_BMEM struct sys_sem mid_prio_sem</definition>
        <argsstring></argsstring>
        <name>mid_prio_sem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="22" column="25" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" prot="public" static="no" mutable="no">
        <type><ref refid="group__ztest__test_1ga2c7d0aa85e7f320d582395c5ded90133" kindref="member">ZTEST_DMEM</ref> struct <ref refid="structsys__sem" kindref="compound">sys_sem</ref></type>
        <definition>ZTEST_DMEM struct sys_sem high_prio_sem</definition>
        <argsstring></argsstring>
        <name>high_prio_sem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="23" column="25" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mem__protect_2sys__sem_2src_2main_8c_1adbba1dc3054ec90bd75f0794fce7005a" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref> sem_tid sem_tid_1</type>
        <definition>struct k_thread sem_tid sem_tid_1 sem_tid_2</definition>
        <argsstring></argsstring>
        <name>sem_tid_2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="31" column="15" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mem__protect_2sys__sem_2src_2main_8c_1afbc137eb1a51f5df48f5fe7ec567c38e" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread multiple_tid[(3)]</definition>
        <argsstring>[(3)]</argsstring>
        <name>multiple_tid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="32" column="15" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1aa188cce8d4d8eede6478bdbec30c94a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__ztest__test_1ga2c7d0aa85e7f320d582395c5ded90133" kindref="member">ZTEST_DMEM</ref></type>
        <definition>ZTEST_DMEM SYS_SEM_DEFINE</definition>
        <argsstring>(multiple_thread_sem,(0U),(10U))</argsstring>
        <name>SYS_SEM_DEFINE</name>
        <param>
          <type>multiple_thread_sem</type>
        </param>
        <param>
          <type>(0U)</type>
        </param>
        <param>
          <type>(10U)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="24" column="12" declfile="tests/kernel/mem_protect/sys_sem/src/main.c" declline="24" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1a9bda3e00bf96550334eadf74c9af316b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_DEFINE</definition>
        <argsstring>(stack_1,(512+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type><ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref></type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="26" column="1" declfile="tests/kernel/mem_protect/sys_sem/src/main.c" declline="26" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1a6e0a3040923a786d0f4b029184aad5b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_DEFINE</definition>
        <argsstring>(stack_2,(512+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>stack_2</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="27" column="1" declfile="tests/kernel/mem_protect/sys_sem/src/main.c" declline="27" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1a4b92389859362bc3df3831cdbcecb7b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_DEFINE</definition>
        <argsstring>(stack_3,(512+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>stack_3</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="28" column="1" declfile="tests/kernel/mem_protect/sys_sem/src/main.c" declline="28" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1aab1dff2223c027ea2507228e7e040641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_STACK_ARRAY_DEFINE</definition>
        <argsstring>(multiple_stack,(3),(512+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_ARRAY_DEFINE</name>
        <param>
          <type>multiple_stack</type>
        </param>
        <param>
          <type>(3)</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="29" column="1" declfile="tests/kernel/mem_protect/sys_sem/src/main.c" declline="29" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1a7f4a048a708101c3c0c27a5e9d46edbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void isr_sem_give</definition>
        <argsstring>(const void *semaphore)</argsstring>
        <name>isr_sem_give</name>
        <param>
          <type>const void *</type>
          <declname>semaphore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="36" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1abc5d8bc024da19063ff31f02d811417a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void isr_sem_take</definition>
        <argsstring>(const void *semaphore)</argsstring>
        <name>isr_sem_take</name>
        <param>
          <type>const void *</type>
          <declname>semaphore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="41" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1a81781947dca95d73c62a95ee3e5dbd0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_give_from_isr</definition>
        <argsstring>(void *semaphore)</argsstring>
        <name>sem_give_from_isr</name>
        <param>
          <type>void *</type>
          <declname>semaphore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="46" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1a0acf3a745be54fc1ca93701bf92191fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_take_from_isr</definition>
        <argsstring>(void *semaphore)</argsstring>
        <name>sem_take_from_isr</name>
        <param>
          <type>void *</type>
          <declname>semaphore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="51" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1afd876198e2e866b89f691179a66d2c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_give_task</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_give_task</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="56" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1aa14d9803e9c9b160fe0c195be505d0e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_take_timeout_forever_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_take_timeout_forever_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="61" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="61" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1a5149954b359bd8232f3688869c906a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_take_timeout_isr_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_take_timeout_isr_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="67" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1a19ed87835082b8303055035555a8c658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_take_multiple_low_prio_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_take_multiple_low_prio_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="72" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="72" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1ac06d782fe9ee207d6fa6ab9ef1e84ea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_take_multiple_mid_prio_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_take_multiple_mid_prio_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="85" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="85" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1a778acd98817c2bca3325df496a87d283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_take_multiple_high_prio_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_take_multiple_high_prio_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="98" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="98" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1a7c1489db7cb35ec3a87dc87dcf08866e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sem_multiple_threads_wait_helper</definition>
        <argsstring>(void *p1, void *p2, void *p3)</argsstring>
        <name>sem_multiple_threads_wait_helper</name>
        <param>
          <type>void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="111" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="111" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="mem__protect_2sys__sem_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_main</definition>
        <argsstring>(void)</argsstring>
        <name>test_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>test case main entry </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/mem_protect/sys_sem/src/main.c" line="570" column="6" bodyfile="tests/kernel/mem_protect/sys_sem/src/main.c" bodystart="570" bodyend="613"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztest_8h" kindref="compound">ztest.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="irq__offload_8h" kindref="compound">irq_offload.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="sem_8h" kindref="compound">sys/sem.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macro<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEM_INIT_VAL<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEM_MAX_VAL<sp/><sp/>(10U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEM_TIMEOUT<sp/>(K_MSEC(100))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STACK_SIZE<sp/>(512<sp/>+<sp/>CONFIG_TEST_EXTRA_STACKSIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_THREADS_WAITING<sp/>(3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>declaration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="group__ztest__test__deprecated_1gac3de5965061b1164a8033712c9094e23" kindref="member">ZTEST_BMEM</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__sem" kindref="compound">sys_sem</ref><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="group__ztest__test__deprecated_1gac3de5965061b1164a8033712c9094e23" kindref="member">ZTEST_BMEM</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__sem" kindref="compound">sys_sem</ref><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="group__ztest__test__deprecated_1gac3de5965061b1164a8033712c9094e23" kindref="member">ZTEST_BMEM</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__sem" kindref="compound">sys_sem</ref><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="group__ztest__test__deprecated_1ga2c7d0aa85e7f320d582395c5ded90133" kindref="member">ZTEST_DMEM</ref><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsys__sem" kindref="compound">sys_sem</ref><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="group__ztest__test__deprecated_1ga2c7d0aa85e7f320d582395c5ded90133" kindref="member">ZTEST_DMEM</ref><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1aa188cce8d4d8eede6478bdbec30c94a1" kindref="member">SYS_SEM_DEFINE</ref>(multiple_thread_sem,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="condvar_2condvar__api_2src_2main_8c_1a9bda3e00bf96550334eadf74c9af316b" kindref="member">K_THREAD_STACK_DEFINE</ref>(<ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="condvar_2condvar__api_2src_2main_8c_1a9bda3e00bf96550334eadf74c9af316b" kindref="member">K_THREAD_STACK_DEFINE</ref>(stack_2,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="condvar_2condvar__api_2src_2main_8c_1a9bda3e00bf96550334eadf74c9af316b" kindref="member">K_THREAD_STACK_DEFINE</ref>(stack_3,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="condvar_2condvar__api_2src_2main_8c_1aab1dff2223c027ea2507228e7e040641" kindref="member">K_THREAD_STACK_ARRAY_DEFINE</ref>(multiple_stack,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/>sem_tid,<sp/>sem_tid_1,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1adbba1dc3054ec90bd75f0794fce7005a" kindref="member">sem_tid_2</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1afbc137eb1a51f5df48f5fe7ec567c38e" kindref="member">multiple_tid</ref>[<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>];</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Helper<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a7f4a048a708101c3c0c27a5e9d46edbc" kindref="member">isr_sem_give</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*semaphore)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsys__sem" kindref="compound">sys_sem</ref><sp/>*)semaphore);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1abc5d8bc024da19063ff31f02d811417a" kindref="member">isr_sem_take</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*semaphore)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsys__sem" kindref="compound">sys_sem</ref><sp/>*)semaphore,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a81781947dca95d73c62a95ee3e5dbd0e" kindref="member">sem_give_from_isr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*semaphore)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="irq__offload_8h_1a429859dd7ac3d88a4b7ae858835847ce" kindref="member">irq_offload</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a7f4a048a708101c3c0c27a5e9d46edbc" kindref="member">isr_sem_give</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)semaphore);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a0acf3a745be54fc1ca93701bf92191fd" kindref="member">sem_take_from_isr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*semaphore)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="irq__offload_8h_1a429859dd7ac3d88a4b7ae858835847ce" kindref="member">irq_offload</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1abc5d8bc024da19063ff31f02d811417a" kindref="member">isr_sem_take</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)semaphore);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1afd876198e2e866b89f691179a66d2c6c" kindref="member">sem_give_task</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1aa14d9803e9c9b160fe0c195be505d0e7" kindref="member">sem_take_timeout_forever_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep</ref>(<ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(100));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5149954b359bd8232f3688869c906a05" kindref="member">sem_take_timeout_isr_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a81781947dca95d73c62a95ee3e5dbd0e" kindref="member">sem_give_from_isr</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a19ed87835082b8303055035555a8c658" kindref="member">sem_take_multiple_low_prio_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>ret_value;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_sem_take<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>(&amp;multiple_thread_sem,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_sem_take<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1ac06d782fe9ee207d6fa6ab9ef1e84ea1" kindref="member">sem_take_multiple_mid_prio_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>ret_value;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_sem_take<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>(&amp;multiple_thread_sem,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_sem_take<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a778acd98817c2bca3325df496a87d283" kindref="member">sem_take_multiple_high_prio_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>ret_value;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_sem_take<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>(&amp;multiple_thread_sem,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_sem_take<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a7c1489db7cb35ec3a87dc87dcf08866e" kindref="member">sem_multiple_threads_wait_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret_value;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>blocked<sp/>until<sp/>the<sp/>test<sp/>thread<sp/>gives<sp/>the<sp/>semaphore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>(&amp;multiple_thread_sem,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;sys_sem_take<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Inform<sp/>the<sp/>test<sp/>thread<sp/>that<sp/>this<sp/>thread<sp/>has<sp/>got<sp/>multiple_thread_sem*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1ad58a7057e696e52dad791fa36632d7ff" kindref="member">test_basic_sem_test</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>ret_value;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(NULL,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_sem_init<sp/>returned<sp/>not<sp/>equal<sp/>-EINVAL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_sem_init<sp/>returned<sp/>not<sp/>equal<sp/>-EINVAL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/>UINT_MAX,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_sem_init<sp/>returned<sp/>not<sp/>equal<sp/>-EINVAL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>,<sp/>UINT_MAX);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>-<ref refid="group__system__errno_1ga2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_sem_init<sp/>returned<sp/>not<sp/>equal<sp/>-EINVAL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1aed2079386fc07f630156be1bdd9db2a0" kindref="member">SEM_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a05415ff77659ca7bf227d2460cc80b0f" kindref="member">test_simple_sem_from_isr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>signal_count;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a81781947dca95d73c62a95ee3e5dbd0e" kindref="member">sem_give_from_isr</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>(i<sp/>+<sp/>1),</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;signal<sp/>count<sp/>missmatch<sp/>Expected<sp/>%d,<sp/>got<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i<sp/>+<sp/>1),<sp/>signal_count);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a980e77b2cbbf9e329144eae98b079a1e" kindref="member">test_simple_sem_from_task</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>signal_count;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>(i<sp/>+<sp/>1),</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;signal<sp/>count<sp/>missmatch<sp/>Expected<sp/>%d,<sp/>got<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i<sp/>+<sp/>1),<sp/>signal_count);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1aa333e4cfd24bbf545462c51e215237ce" kindref="member">test_sem_take_no_wait</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>signal_count;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>ret_value;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>4;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>do<sp/>sys_sem_take<sp/>which<sp/>returned<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>i,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;signal<sp/>count<sp/>missmatch<sp/>Expected<sp/>%d,<sp/>got<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>signal_count);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1aed85a39ac76cf3f9c7a85e9622409912" kindref="member">test_sem_take_no_wait_fails</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>signal_count;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>ret_value;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>4;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>-<ref refid="group__system__errno_1ga597718e59a8fc9c4d4ab63f5a34e28b1" kindref="member">ETIMEDOUT</ref>,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_sem_take<sp/>returned<sp/>when<sp/>not<sp/>possible&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>0U,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;signal<sp/>count<sp/>missmatch<sp/>Expected<sp/>0,<sp/>got<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1ac3ac78bdf5fd008590f2997e15f0fafb" kindref="member">test_sem_take_timeout_fails</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>ret_value;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>4;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1aed2079386fc07f630156be1bdd9db2a0" kindref="member">SEM_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>-<ref refid="group__system__errno_1ga597718e59a8fc9c4d4ab63f5a34e28b1" kindref="member">ETIMEDOUT</ref>,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_sem_take<sp/>succeeded<sp/>when<sp/>its<sp/>not<sp/>possible&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a4f32ec757c4bf9a27aee0bb354d2353b" kindref="member">test_sem_take_timeout</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>ret_value;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread_flags<sp/>=<sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;sem_tid,<sp/><ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1afd876198e2e866b89f691179a66d2c6c" kindref="member">sem_give_task</ref>,<sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(0),<sp/>thread_flags,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1aed2079386fc07f630156be1bdd9db2a0" kindref="member">SEM_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_sem_take<sp/>failed<sp/>when<sp/>its<sp/>shouldn&apos;t<sp/>have&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(&amp;sem_tid,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1adc45dac316741c4281efcacdf12ea52e" kindref="member">test_sem_take_timeout_forever</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>ret_value;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread_flags<sp/>=<sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;sem_tid,<sp/><ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1aa14d9803e9c9b160fe0c195be505d0e7" kindref="member">sem_take_timeout_forever_helper</ref>,<sp/>NULL,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(0),<sp/>thread_flags,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_sem_take<sp/>failed<sp/>when<sp/>its<sp/>shouldn&apos;t<sp/>have&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(&amp;sem_tid,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1ab307c87cb125b3eae98e4842886151d0" kindref="member">test_sem_take_timeout_isr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>ret_value;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;sem_tid,<sp/><ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5149954b359bd8232f3688869c906a05" kindref="member">sem_take_timeout_isr_helper</ref>,<sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(0),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1aed2079386fc07f630156be1bdd9db2a0" kindref="member">SEM_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_sem_take<sp/>failed<sp/>when<sp/>its<sp/>shouldn&apos;t<sp/>have&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(&amp;sem_tid,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1abc3e0aef2feca4251f8220aec4c4196b" kindref="member">test_sem_take_multiple</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>signal_count;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread_flags<sp/>=<sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;sem_tid,<sp/><ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a19ed87835082b8303055035555a8c658" kindref="member">sem_take_multiple_low_prio_helper</ref>,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(3),<sp/>thread_flags,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;sem_tid_1,<sp/>stack_2,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1ac06d782fe9ee207d6fa6ab9ef1e84ea1" kindref="member">sem_take_multiple_mid_prio_helper</ref>,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(2),<sp/>thread_flags,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1adbba1dc3054ec90bd75f0794fce7005a" kindref="member">sem_tid_2</ref>,<sp/>stack_3,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a778acd98817c2bca3325df496a87d283" kindref="member">sem_take_multiple_high_prio_helper</ref>,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(1),<sp/>thread_flags,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lower<sp/>the<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/><ref refid="include_2kernel_8h_1aa0e916aae3ddd0e998cd41ac32afe30a" kindref="member">K_PRIO_PREEMPT</ref>(3));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>giving<sp/>time<sp/>for<sp/>those<sp/>3<sp/>threads<sp/>to<sp/>complete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield</ref>();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Let<sp/>these<sp/>threads<sp/>proceed<sp/>to<sp/>take<sp/>the<sp/>multiple_sem<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield</ref>();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>the<sp/>higher<sp/>priority<sp/>thread<sp/>to<sp/>run.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;multiple_thread_sem);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield</ref>();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>which<sp/>threads<sp/>completed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>1U,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Higher<sp/>priority<sp/>threads<sp/>didn&apos;t<sp/>execute&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>0U,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Medium<sp/>priority<sp/>threads<sp/>shouldn&apos;t<sp/>have<sp/>executed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>0U,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;low<sp/>priority<sp/>threads<sp/>shouldn&apos;t<sp/>have<sp/>executed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>the<sp/>Medium<sp/>priority<sp/>thread<sp/>to<sp/>run.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;multiple_thread_sem);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield</ref>();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>which<sp/>threads<sp/>completed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>1U,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Higher<sp/>priority<sp/>thread<sp/>executed<sp/>again&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>1U,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Medium<sp/>priority<sp/>thread<sp/>didn&apos;t<sp/>get<sp/>executed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>0U,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;low<sp/>priority<sp/>thread<sp/>shouldn&apos;t<sp/>have<sp/>executed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>the<sp/>low<sp/>priority<sp/>thread<sp/>to<sp/>run.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;multiple_thread_sem);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield</ref>();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>which<sp/>threads<sp/>completed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a5d9087bd3e283fcbadb6f03b67131ad4" kindref="member">high_prio_sem</ref>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>1U,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Higher<sp/>priority<sp/>thread<sp/>executed<sp/>again&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ace92631906f098e263f39ec50879f94f" kindref="member">mid_prio_sem</ref>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>1U,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Medium<sp/>priority<sp/>thread<sp/>executed<sp/>again&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1af92da3f9463bc20b6392f5a023e05e10" kindref="member">low_prio_sem</ref>);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>1U,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;low<sp/>priority<sp/>thread<sp/>didn&apos;t<sp/>get<sp/>executed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(&amp;sem_tid,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(&amp;sem_tid_1,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1adbba1dc3054ec90bd75f0794fce7005a" kindref="member">sem_tid_2</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a7a0d165476689da2cba46564c8244e79" kindref="member">test_sem_give_take_from_isr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>signal_count;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Give<sp/>semaphore<sp/>from<sp/>an<sp/>isr<sp/>and<sp/>do<sp/>a<sp/>check<sp/>for<sp/>the<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a81781947dca95d73c62a95ee3e5dbd0e" kindref="member">sem_give_from_isr</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>i<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;signal<sp/>count<sp/>missmatch<sp/>Expected<sp/>%d,<sp/>got<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+<sp/>1,<sp/>signal_count);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Take<sp/>semaphore<sp/>from<sp/>an<sp/>isr<sp/>and<sp/>do<sp/>a<sp/>check<sp/>for<sp/>the<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>;<sp/>i<sp/>&gt;<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a0acf3a745be54fc1ca93701bf92191fd" kindref="member">sem_take_from_isr</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>(i<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;signal<sp/>count<sp/>missmatch<sp/>Expected<sp/>%d,<sp/>got<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i<sp/>-<sp/>1),<sp/>signal_count);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1ab05c8c00775cdb6bd1e96349f7cf38fe" kindref="member">test_sem_give_limit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>ret_value;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>signal_count;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Give<sp/>semaphore<sp/>and<sp/>do<sp/>a<sp/>check<sp/>for<sp/>the<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sys_sem_give<sp/>failed<sp/>when<sp/>its<sp/>shouldn&apos;t<sp/>have&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>i<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;signal<sp/>count<sp/>missmatch<sp/>Expected<sp/>%d,<sp/>got<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+<sp/>1,<sp/>signal_count);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret_value<sp/>==<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;signal<sp/>count<sp/>missmatch<sp/>Expected<sp/>%d,<sp/>got<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>,<sp/>signal_count);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret_value<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;signal<sp/>count<sp/>missmatch<sp/>Expected<sp/>%d,<sp/>got<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>,<sp/>signal_count);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ret_value<sp/>==<sp/>-<ref refid="group__system__errno_1gaf0fac1cea1165b4debec7f686edf3313" kindref="member">EAGAIN</ref>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1ac63b7e143bf87a695064128f34f7031c" kindref="member">test_sem_multiple_threads_wait</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>signal_count;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>ret_value;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>repeat_count<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread_flags<sp/>=<sp/><ref refid="group__thread__apis_1gacb5340339892f22301e02697c6039ccc" kindref="member">K_USER</ref><sp/>|<sp/><ref refid="group__thread__apis_1gaa1788a413a055745d1de71b4da7c2eb2" kindref="member">K_INHERIT_PERMS</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gae20385545bbf7a9dfd59afa74bf1120a" kindref="member">sys_sem_init</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a1921ee8629c4482331e5a78d5dfc21d3" kindref="member">SEM_INIT_VAL</ref>,<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a40245d4b511683879535bdf5d95e855e" kindref="member">SEM_MAX_VAL</ref>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="condvar_2condvar__api_2src_2main_8c_1afbc137eb1a51f5df48f5fe7ec567c38e" kindref="member">multiple_tid</ref>[i],</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiple_stack[i],<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a7c1489db7cb35ec3a87dc87dcf08866e" kindref="member">sem_multiple_threads_wait_helper</ref>,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONFIG_ZTEST_THREAD_PRIORITY,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_flags,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>giving<sp/>time<sp/>for<sp/>the<sp/>other<sp/>threads<sp/>to<sp/>execute<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield</ref>();</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Give<sp/>the<sp/>semaphores<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__user__semaphore__apis_1gaae32032398db1f693ad3f876863f78b4" kindref="member">sys_sem_give</ref>(&amp;multiple_thread_sem);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>giving<sp/>time<sp/>for<sp/>the<sp/>other<sp/>threads<sp/>to<sp/>execute<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield</ref>();</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>if<sp/>all<sp/>the<sp/>threads<sp/>are<sp/>done.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_value<sp/>=<sp/><ref refid="group__user__semaphore__apis_1gaf742a29f89a816fa34b8d6d33e221b77" kindref="member">sys_sem_take</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(ret_value<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Some<sp/>of<sp/>the<sp/>threads<sp/>didn&apos;t<sp/>get<sp/>multiple_thread_sem&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a72fe9c6e258e8bc62c41dd58f6c7e390" kindref="member">simple_sem</ref>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>0U,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;signal<sp/>count<sp/>missmatch<sp/>Expected<sp/>0,<sp/>got<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count<sp/>=<sp/><ref refid="group__user__semaphore__apis_1ga7b287ca3cc3ab2766d7c1beec1849894" kindref="member">sys_sem_count_get</ref>(&amp;multiple_thread_sem);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>(signal_count<sp/>==<sp/>0U,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;signal<sp/>count<sp/>missmatch<sp/>Expected<sp/>0,<sp/>got<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_count);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeat_count++;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join</ref>(&amp;<ref refid="condvar_2condvar__api_2src_2main_8c_1afbc137eb1a51f5df48f5fe7ec567c38e" kindref="member">multiple_tid</ref>[i],<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(repeat_count<sp/>&lt;<sp/>2);</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ztest<sp/>main<sp/>entry*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="common_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" kindref="member">test_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_USERSPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gafec540511e6d2e0a074a5bfb515c53b0" kindref="member">k_thread_access_grant</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="pipe_2pipe_2src_2main_8c_1ab821b9daa1751ea809f22254c23956f7" kindref="member">stack_1</ref>,<sp/>&amp;stack_2,<sp/>&amp;stack_3,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sem_tid,<sp/>&amp;sem_tid_1,<sp/>&amp;<ref refid="mem__protect_2sys__sem_2src_2main_8c_1adbba1dc3054ec90bd75f0794fce7005a" kindref="member">sem_tid_2</ref>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="mem__protect_2sys__sem_2src_2main_8c_1a31eec2f427136bb85cbe7a93e81c6fca" kindref="member">TOTAL_THREADS_WAITING</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gafec540511e6d2e0a074a5bfb515c53b0" kindref="member">k_thread_access_grant</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="condvar_2condvar__api_2src_2main_8c_1afbc137eb1a51f5df48f5fe7ec567c38e" kindref="member">multiple_tid</ref>[i],<sp/>&amp;multiple_stack[i]);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" kindref="member">ztest_test_suite</ref>(test_sys_sem,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ad58a7057e696e52dad791fa36632d7ff" kindref="member">test_basic_sem_test</ref>),</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a05415ff77659ca7bf227d2460cc80b0f" kindref="member">test_simple_sem_from_isr</ref>),</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ab307c87cb125b3eae98e4842886151d0" kindref="member">test_sem_take_timeout_isr</ref>),</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a7a0d165476689da2cba46564c8244e79" kindref="member">test_sem_give_take_from_isr</ref>),</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a980e77b2cbbf9e329144eae98b079a1e" kindref="member">test_simple_sem_from_task</ref>),</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1aa333e4cfd24bbf545462c51e215237ce" kindref="member">test_sem_take_no_wait</ref>),</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1aed85a39ac76cf3f9c7a85e9622409912" kindref="member">test_sem_take_no_wait_fails</ref>),</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gab5438441a57724ddf51e6dda62e2681b" kindref="member">ztest_1cpu_user_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ac3ac78bdf5fd008590f2997e15f0fafb" kindref="member">test_sem_take_timeout_fails</ref>),</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a4f32ec757c4bf9a27aee0bb354d2353b" kindref="member">test_sem_take_timeout</ref>),</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gab5438441a57724ddf51e6dda62e2681b" kindref="member">ztest_1cpu_user_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1adc45dac316741c4281efcacdf12ea52e" kindref="member">test_sem_take_timeout_forever</ref>),</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gab5438441a57724ddf51e6dda62e2681b" kindref="member">ztest_1cpu_user_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1abc3e0aef2feca4251f8220aec4c4196b" kindref="member">test_sem_take_multiple</ref>),</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6a7a2f0d98c31455701a282b8e1862cb" kindref="member">ztest_user_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ab05c8c00775cdb6bd1e96349f7cf38fe" kindref="member">test_sem_give_limit</ref>),</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gab5438441a57724ddf51e6dda62e2681b" kindref="member">ztest_1cpu_user_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ac63b7e143bf87a695064128f34f7031c" kindref="member">test_sem_multiple_threads_wait</ref>));</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" kindref="member">ztest_run_test_suite</ref>(test_sys_sem);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" kindref="member">ztest_test_suite</ref>(test_sys_sem,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a05415ff77659ca7bf227d2460cc80b0f" kindref="member">test_simple_sem_from_isr</ref>),</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ab307c87cb125b3eae98e4842886151d0" kindref="member">test_sem_take_timeout_isr</ref>),</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a7a0d165476689da2cba46564c8244e79" kindref="member">test_sem_give_take_from_isr</ref>),</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a980e77b2cbbf9e329144eae98b079a1e" kindref="member">test_simple_sem_from_task</ref>),</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1aa333e4cfd24bbf545462c51e215237ce" kindref="member">test_sem_take_no_wait</ref>),</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1aed85a39ac76cf3f9c7a85e9622409912" kindref="member">test_sem_take_no_wait_fails</ref>),</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ac3ac78bdf5fd008590f2997e15f0fafb" kindref="member">test_sem_take_timeout_fails</ref>),</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1a4f32ec757c4bf9a27aee0bb354d2353b" kindref="member">test_sem_take_timeout</ref>),</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1adc45dac316741c4281efcacdf12ea52e" kindref="member">test_sem_take_timeout_forever</ref>),</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1abc3e0aef2feca4251f8220aec4c4196b" kindref="member">test_sem_take_multiple</ref>),</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ab05c8c00775cdb6bd1e96349f7cf38fe" kindref="member">test_sem_give_limit</ref>),</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="mem__protect_2sys__sem_2src_2main_8c_1ac63b7e143bf87a695064128f34f7031c" kindref="member">test_sem_multiple_threads_wait</ref>));</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" kindref="member">ztest_run_test_suite</ref>(test_sys_sem);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tests/kernel/mem_protect/sys_sem/src/main.c"/>
  </compounddef>
</doxygen>
