<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="util__macro_8h" kind="file" language="C++">
    <compoundname>util_macro.h</compoundname>
    <includes refid="util__internal_8h" local="no">sys/util_internal.h</includes>
    <includedby refid="gd32__exti_8h" local="no">include/drivers/interrupt_controller/gd32_exti.h</includedby>
    <includedby refid="dt-util_8h" local="no">include/dt-bindings/dt-util.h</includedby>
    <includedby refid="arm-gic_8h" local="no">include/dt-bindings/interrupt-controller/arm-gic.h</includedby>
    <includedby refid="atomic_8h" local="no">include/sys/atomic.h</includedby>
    <includedby refid="util_8h" local="no">include/sys/util.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="1">
        <label>include/sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="341">
        <label>include/app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="288">
        <label>include/arch/arc/arch.h</label>
        <link refid="arc_2arch_8h"/>
      </node>
      <node id="204">
        <label>include/arch/arc/arch_inlines.h</label>
        <link refid="arc_2arch__inlines_8h"/>
      </node>
      <node id="287">
        <label>include/arch/arc/v2/irq.h</label>
        <link refid="arch_2arc_2v2_2irq_8h"/>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
      </node>
      <node id="329">
        <label>include/arch/arm/aarch32/arch.h</label>
        <link refid="arm_2aarch32_2arch_8h"/>
      </node>
      <node id="331">
        <label>include/arch/arm/aarch32/cortex_m/cmsis.h</label>
        <link refid="cortex__m_2cmsis_8h"/>
        <childnode refid="332" relation="include">
        </childnode>
      </node>
      <node id="289">
        <label>include/arch/arm/aarch32/cortex_m/memory_map.h</label>
        <link refid="memory__map_8h"/>
      </node>
      <node id="330">
        <label>include/arch/arm/aarch32/cortex_m/nvic.h</label>
        <link refid="nvic_8h"/>
        <childnode refid="331" relation="include">
        </childnode>
      </node>
      <node id="332">
        <label>include/arch/arm/aarch32/mpu/arm_mpu_v8m.h</label>
        <link refid="arm__mpu__v8m_8h"/>
      </node>
      <node id="9">
        <label>include/arch/arm64/arch.h</label>
        <link refid="arm64_2arch_8h"/>
      </node>
      <node id="205">
        <label>include/arch/arm64/arch_inlines.h</label>
        <link refid="arm64_2arch__inlines_8h"/>
      </node>
      <node id="292">
        <label>include/arch/arm64/asm_inline_gcc.h</label>
        <link refid="arm64_2asm__inline__gcc_8h"/>
      </node>
      <node id="290">
        <label>include/arch/arm64/cpu.h</label>
        <link refid="include_2arch_2arm64_2cpu_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
      </node>
      <node id="294">
        <label>include/arch/arm64/error.h</label>
        <link refid="arm64_2error_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="291">
        <label>include/arch/arm64/lib_helpers.h</label>
        <link refid="lib__helpers_8h"/>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
      </node>
      <node id="293">
        <label>include/arch/arm64/syscall.h</label>
        <link refid="arch_2arm64_2syscall_8h"/>
        <childnode refid="294" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>include/arch/arm64/timer.h</label>
        <link refid="4_2timer_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="295">
        <label>include/arch/mips/arch.h</label>
        <link refid="mips_2arch_8h"/>
      </node>
      <node id="333">
        <label>include/arch/nios2/arch.h</label>
        <link refid="nios2_2arch_8h"/>
      </node>
      <node id="334">
        <label>include/arch/posix/arch.h</label>
        <link refid="posix_2arch_8h"/>
      </node>
      <node id="296">
        <label>include/arch/riscv/arch.h</label>
        <link refid="riscv_2arch_8h"/>
      </node>
      <node id="206">
        <label>include/arch/riscv/arch_inlines.h</label>
        <link refid="riscv_2arch__inlines_8h"/>
      </node>
      <node id="297">
        <label>include/arch/sparc/arch.h</label>
        <link refid="sparc_2arch_8h"/>
      </node>
      <node id="208">
        <label>include/arch/x86/arch.h</label>
        <link refid="x86_2arch_8h"/>
      </node>
      <node id="207">
        <label>include/arch/x86/ia32/arch.h</label>
        <link refid="x86_2ia32_2arch_8h"/>
        <childnode refid="208" relation="include">
        </childnode>
      </node>
      <node id="299">
        <label>include/arch/x86/ia32/thread.h</label>
        <link refid="arch_2x86_2ia32_2thread_8h"/>
        <childnode refid="207" relation="include">
        </childnode>
      </node>
      <node id="301">
        <label>include/arch/x86/intel64/arch.h</label>
        <link refid="x86_2intel64_2arch_8h"/>
      </node>
      <node id="300">
        <label>include/arch/x86/intel64/thread.h</label>
        <link refid="arch_2x86_2intel64_2thread_8h"/>
        <childnode refid="301" relation="include">
        </childnode>
      </node>
      <node id="298">
        <label>include/arch/x86/mmustructs.h</label>
        <link refid="mmustructs_8h"/>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="302">
        <label>include/arch/x86/thread_stack.h</label>
        <link refid="arch_2x86_2thread__stack_8h"/>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
      </node>
      <node id="335">
        <label>include/arch/xtensa/arch.h</label>
        <link refid="xtensa_2arch_8h"/>
      </node>
      <node id="209">
        <label>include/arch/xtensa/arch_inlines.h</label>
        <link refid="xtensa_2arch__inlines_8h"/>
      </node>
      <node id="303">
        <label>include/arch/xtensa/cache.h</label>
        <link refid="arch_2xtensa_2cache_8h"/>
      </node>
      <node id="16">
        <label>include/bluetooth/a2dp.h</label>
        <link refid="a2dp_8h"/>
      </node>
      <node id="312">
        <label>include/bluetooth/att.h</label>
        <link refid="att_8h"/>
        <childnode refid="313" relation="include">
        </childnode>
      </node>
      <node id="308">
        <label>include/bluetooth/audio/aics.h</label>
        <link refid="aics_8h"/>
        <childnode refid="309" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>include/bluetooth/audio/audio.h</label>
        <link refid="audio_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>include/bluetooth/audio/capabilities.h</label>
        <link refid="capabilities_8h"/>
      </node>
      <node id="314">
        <label>include/bluetooth/audio/csis.h</label>
        <link refid="csis_8h"/>
      </node>
      <node id="306">
        <label>include/bluetooth/audio/mcc.h</label>
        <link refid="mcc_8h"/>
      </node>
      <node id="304">
        <label>include/bluetooth/audio/mcs.h</label>
        <link refid="mcs_8h"/>
        <childnode refid="305" relation="include">
        </childnode>
      </node>
      <node id="305">
        <label>include/bluetooth/audio/media_proxy.h</label>
        <link refid="media__proxy_8h"/>
        <childnode refid="306" relation="include">
        </childnode>
      </node>
      <node id="309">
        <label>include/bluetooth/audio/mics.h</label>
        <link refid="mics_8h"/>
      </node>
      <node id="310">
        <label>include/bluetooth/audio/vcs.h</label>
        <link refid="vcs_8h"/>
      </node>
      <node id="15">
        <label>include/bluetooth/avdtp.h</label>
        <link refid="avdtp_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="307">
        <label>include/bluetooth/bluetooth.h</label>
        <link refid="bluetooth_8h"/>
        <childnode refid="308" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
        <childnode refid="311" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
      </node>
      <node id="316">
        <label>include/bluetooth/buf.h</label>
        <link refid="bluetooth_2buf_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
      </node>
      <node id="311">
        <label>include/bluetooth/conn.h</label>
        <link refid="conn_8h"/>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="321" relation="include">
        </childnode>
      </node>
      <node id="313">
        <label>include/bluetooth/gatt.h</label>
        <link refid="gatt_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="315">
        <label>include/bluetooth/hci.h</label>
        <link refid="hci_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="319">
        <label>include/bluetooth/hci_vs.h</label>
        <link refid="hci__vs_8h"/>
        <childnode refid="318" relation="include">
        </childnode>
      </node>
      <node id="322">
        <label>include/bluetooth/hfp_hf.h</label>
        <link refid="hfp__hf_8h"/>
      </node>
      <node id="13">
        <label>include/bluetooth/iso.h</label>
        <link refid="iso_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>include/bluetooth/l2cap.h</label>
        <link refid="l2cap_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>include/bluetooth/mesh.h</label>
        <link refid="mesh_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="323">
        <label>include/bluetooth/mesh/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>include/bluetooth/mesh/cdb.h</label>
        <link refid="cdb_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="370">
        <label>include/bluetooth/mesh/heartbeat.h</label>
        <link refid="heartbeat_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="355">
        <label>include/bluetooth/mesh/msg.h</label>
        <link refid="msg_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>include/bluetooth/mesh/shell.h</label>
        <link refid="bluetooth_2mesh_2shell_8h"/>
      </node>
      <node id="317">
        <label>include/bluetooth/rfcomm.h</label>
        <link refid="rfcomm_8h"/>
      </node>
      <node id="320">
        <label>include/bluetooth/sdp.h</label>
        <link refid="sdp_8h"/>
      </node>
      <node id="321">
        <label>include/bluetooth/services/ots.h</label>
        <link refid="ots_8h"/>
      </node>
      <node id="324">
        <label>include/bluetooth/uuid.h</label>
        <link refid="uuid_8h"/>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="321" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>include/cache.h</label>
        <link refid="cache_8h"/>
      </node>
      <node id="347">
        <label>include/canbus/isotp.h</label>
        <link refid="isotp_8h"/>
      </node>
      <node id="325">
        <label>include/crypto/cipher.h</label>
        <link refid="cipher_8h"/>
        <childnode refid="326" relation="include">
        </childnode>
        <childnode refid="266" relation="include">
        </childnode>
      </node>
      <node id="326">
        <label>include/crypto/crypto.h</label>
        <link refid="crypto_2crypto_8h"/>
      </node>
      <node id="327">
        <label>include/data/json.h</label>
        <link refid="json_8h"/>
      </node>
      <node id="210">
        <label>include/debug/object_tracing.h</label>
        <link refid="object__tracing_8h"/>
      </node>
      <node id="226">
        <label>include/debug/stack.h</label>
        <link refid="stack_8h"/>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
      </node>
      <node id="213">
        <label>include/debug/tracing.h</label>
        <link refid="debug_2tracing_8h"/>
      </node>
      <node id="24">
        <label>include/device.h</label>
        <link refid="device_8h"/>
      </node>
      <node id="328">
        <label>include/devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="330" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="338" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
      </node>
      <node id="345">
        <label>include/display/mb_display.h</label>
        <link refid="mb__display_8h"/>
      </node>
      <node id="379">
        <label>include/drivers/adc/lmp90xxx.h</label>
        <link refid="lmp90xxx_8h"/>
      </node>
      <node id="318">
        <label>include/drivers/bluetooth/hci_driver.h</label>
        <link refid="hci__driver_8h"/>
      </node>
      <node id="346">
        <label>include/drivers/can.h</label>
        <link refid="drivers_2can_8h"/>
        <childnode refid="347" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
      </node>
      <node id="371">
        <label>include/drivers/clock_control.h</label>
        <link refid="clock__control_8h"/>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="374" relation="include">
        </childnode>
        <childnode refid="375" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
      </node>
      <node id="372">
        <label>include/drivers/clock_control/arm_clock_control.h</label>
        <link refid="arm__clock__control_8h"/>
      </node>
      <node id="373">
        <label>include/drivers/clock_control/lpc11u6x_clock_control.h</label>
        <link refid="lpc11u6x__clock__control_8h"/>
      </node>
      <node id="374">
        <label>include/drivers/clock_control/mchp_xec_clock_control.h</label>
        <link refid="mchp__xec__clock__control_8h"/>
      </node>
      <node id="375">
        <label>include/drivers/clock_control/nrf_clock_control.h</label>
        <link refid="nrf__clock__control_8h"/>
      </node>
      <node id="376">
        <label>include/drivers/clock_control/rcar_clock_control.h</label>
        <link refid="rcar__clock__control_8h"/>
      </node>
      <node id="377">
        <label>include/drivers/clock_control/stm32_clock_control.h</label>
        <link refid="stm32__clock__control_8h"/>
      </node>
      <node id="399">
        <label>include/drivers/console/ipm_console.h</label>
        <link refid="ipm__console_8h"/>
      </node>
      <node id="348">
        <label>include/drivers/fpga.h</label>
        <link refid="fpga_8h"/>
      </node>
      <node id="378">
        <label>include/drivers/gpio.h</label>
        <link refid="drivers_2gpio_8h"/>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
      </node>
      <node id="380">
        <label>include/drivers/gpio/gpio_emul.h</label>
        <link refid="gpio__emul_8h"/>
      </node>
      <node id="336">
        <label>include/drivers/gpio/gpio_esp32.h</label>
        <link refid="gpio__esp32_8h"/>
      </node>
      <node id="381">
        <label>include/drivers/gpio/gpio_mmio32.h</label>
        <link refid="gpio__mmio32_8h"/>
      </node>
      <node id="382">
        <label>include/drivers/gpio/gpio_sx1509b.h</label>
        <link refid="gpio__sx1509b_8h"/>
      </node>
      <node id="2">
        <label>include/drivers/interrupt_controller/gd32_exti.h</label>
        <link refid="gd32__exti_8h"/>
      </node>
      <node id="396">
        <label>include/drivers/interrupt_controller/loapic.h</label>
        <link refid="loapic_8h"/>
        <childnode refid="397" relation="include">
        </childnode>
      </node>
      <node id="397">
        <label>include/drivers/interrupt_controller/sysapic.h</label>
        <link refid="sysapic_8h"/>
        <childnode refid="208" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>include/drivers/pcie/endpoint/pcie_ep.h</label>
        <link refid="pcie__ep_8h"/>
      </node>
      <node id="337">
        <label>include/drivers/pinctrl.h</label>
        <link refid="drivers_2pinctrl_8h"/>
      </node>
      <node id="338">
        <label>include/drivers/pinctrl/pinctrl_soc_gd32_common.h</label>
        <link refid="pinctrl__soc__gd32__common_8h"/>
      </node>
      <node id="270">
        <label>include/drivers/ptp_clock.h</label>
        <link refid="ptp__clock_8h"/>
      </node>
      <node id="383">
        <label>include/drivers/regulator.h</label>
        <link refid="regulator_8h"/>
        <childnode refid="384" relation="include">
        </childnode>
      </node>
      <node id="384">
        <label>include/drivers/regulator/consumer.h</label>
        <link refid="consumer_8h"/>
      </node>
      <node id="385">
        <label>include/drivers/spi.h</label>
        <link refid="drivers_2spi_8h"/>
      </node>
      <node id="7">
        <label>include/drivers/timer/arm_arch_timer.h</label>
        <link refid="arm__arch__timer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="349">
        <label>include/drivers/watchdog.h</label>
        <link refid="watchdog_8h"/>
      </node>
      <node id="3">
        <label>include/dt-bindings/dt-util.h</label>
        <link refid="dt-util_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>include/dt-bindings/interrupt-controller/arm-gic.h</label>
        <link refid="arm-gic_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/dt-bindings/sensor/ina230.h</label>
        <link refid="ina230_8h"/>
      </node>
      <node id="5">
        <label>include/dt-bindings/sensor/ina237.h</label>
        <link refid="ina237_8h"/>
      </node>
      <node id="23">
        <label>include/init.h</label>
        <link refid="init_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>include/kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
      </node>
      <node id="350">
        <label>include/kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
      </node>
      <node id="351">
        <label>include/kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>include/kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="203">
        <label>include/kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="339">
        <label>include/linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="340" relation="include">
        </childnode>
      </node>
      <node id="340">
        <label>include/linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="341" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="394">
        <label>include/linker/linker-tool-gcc.h</label>
        <link refid="linker-tool-gcc_8h"/>
      </node>
      <node id="225">
        <label>include/logging/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
      </node>
      <node id="215">
        <label>include/logging/log_backend.h</label>
        <link refid="log__backend_8h"/>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
      </node>
      <node id="223">
        <label>include/logging/log_backend_std.h</label>
        <link refid="log__backend__std_8h"/>
      </node>
      <node id="224">
        <label>include/logging/log_core.h</label>
        <link refid="include_2logging_2log__core_8h"/>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
      </node>
      <node id="216">
        <label>include/logging/log_ctrl.h</label>
        <link refid="include_2logging_2log__ctrl_8h"/>
      </node>
      <node id="273">
        <label>include/logging/log_frontend.h</label>
        <link refid="log__frontend_8h"/>
      </node>
      <node id="274">
        <label>include/logging/log_internal.h</label>
        <link refid="log__internal_8h"/>
        <childnode refid="216" relation="include">
        </childnode>
      </node>
      <node id="214">
        <label>include/logging/log_msg.h</label>
        <link refid="log__msg_8h"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="277">
        <label>include/logging/log_msg2.h</label>
        <link refid="include_2logging_2log__msg2_8h"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
      </node>
      <node id="275">
        <label>include/logging/log_output.h</label>
        <link refid="log__output_8h"/>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
      </node>
      <node id="276">
        <label>include/logging/log_output_dict.h</label>
        <link refid="log__output__dict_8h"/>
      </node>
      <node id="386">
        <label>include/lorawan/lorawan.h</label>
        <link refid="lorawan_8h"/>
      </node>
      <node id="352">
        <label>include/math/ilog2.h</label>
        <link refid="ilog2_8h"/>
        <childnode refid="353" relation="include">
        </childnode>
      </node>
      <node id="387">
        <label>include/mgmt/osdp.h</label>
        <link refid="osdp_8h"/>
      </node>
      <node id="265">
        <label>include/net/bt.h</label>
        <link refid="bt_8h"/>
      </node>
      <node id="354">
        <label>include/net/buf.h</label>
        <link refid="net_2buf_8h"/>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
        <childnode refid="356" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="357" relation="include">
        </childnode>
      </node>
      <node id="230">
        <label>include/net/can.h</label>
        <link refid="net_2can_8h"/>
      </node>
      <node id="359">
        <label>include/net/coap.h</label>
        <link refid="coap_8h"/>
        <childnode refid="282" relation="include">
        </childnode>
      </node>
      <node id="388">
        <label>include/net/dhcpv4.h</label>
        <link refid="dhcpv4_8h"/>
      </node>
      <node id="240">
        <label>include/net/dns_resolve.h</label>
        <link refid="dns__resolve_8h"/>
        <childnode refid="241" relation="include">
        </childnode>
      </node>
      <node id="231">
        <label>include/net/dsa.h</label>
        <link refid="dsa_8h"/>
      </node>
      <node id="232">
        <label>include/net/dummy.h</label>
        <link refid="dummy_8h"/>
      </node>
      <node id="233">
        <label>include/net/ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
      </node>
      <node id="389">
        <label>include/net/ethernet_bridge.h</label>
        <link refid="ethernet__bridge_8h"/>
      </node>
      <node id="234">
        <label>include/net/ethernet_mgmt.h</label>
        <link refid="ethernet__mgmt_8h"/>
      </node>
      <node id="228">
        <label>include/net/gptp.h</label>
        <link refid="gptp_8h"/>
      </node>
      <node id="360">
        <label>include/net/http_client.h</label>
        <link refid="http__client_8h"/>
        <childnode refid="361" relation="include">
        </childnode>
      </node>
      <node id="266">
        <label>include/net/ieee802154.h</label>
        <link refid="ieee802154_8h"/>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
      </node>
      <node id="267">
        <label>include/net/ieee802154_mgmt.h</label>
        <link refid="ieee802154__mgmt_8h"/>
      </node>
      <node id="236">
        <label>include/net/ieee802154_radio.h</label>
        <link refid="ieee802154__radio_8h"/>
      </node>
      <node id="237">
        <label>include/net/igmp.h</label>
        <link refid="igmp_8h"/>
      </node>
      <node id="282">
        <label>include/net/lwm2m.h</label>
        <link refid="lwm2m_8h"/>
      </node>
      <node id="283">
        <label>include/net/mqtt.h</label>
        <link refid="mqtt_8h"/>
      </node>
      <node id="238">
        <label>include/net/net_config.h</label>
        <link refid="net__config_8h"/>
      </node>
      <node id="239">
        <label>include/net/net_context.h</label>
        <link refid="net__context_8h"/>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
      </node>
      <node id="227">
        <label>include/net/net_core.h</label>
        <link refid="net__core_8h"/>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="269" relation="include">
        </childnode>
        <childnode refid="271" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
      </node>
      <node id="362">
        <label>include/net/net_event.h</label>
        <link refid="net__event_8h"/>
        <childnode refid="264" relation="include">
        </childnode>
      </node>
      <node id="229">
        <label>include/net/net_if.h</label>
        <link refid="net__if_8h"/>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
      </node>
      <node id="358">
        <label>include/net/net_ip.h</label>
        <link refid="net__ip_8h"/>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="359" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="360" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="361" relation="include">
        </childnode>
      </node>
      <node id="356">
        <label>include/net/net_l2.h</label>
        <link refid="net__l2_8h"/>
        <childnode refid="229" relation="include">
        </childnode>
      </node>
      <node id="264">
        <label>include/net/net_mgmt.h</label>
        <link refid="net__mgmt_8h"/>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
      </node>
      <node id="253">
        <label>include/net/net_offload.h</label>
        <link refid="net__offload_8h"/>
      </node>
      <node id="254">
        <label>include/net/net_pkt.h</label>
        <link refid="net__pkt_8h"/>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
      </node>
      <node id="235">
        <label>include/net/net_pkt_filter.h</label>
        <link refid="net__pkt__filter_8h"/>
      </node>
      <node id="268">
        <label>include/net/net_stats.h</label>
        <link refid="net__stats_8h"/>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
      </node>
      <node id="390">
        <label>include/net/net_timeout.h</label>
        <link refid="net__timeout_8h"/>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
      </node>
      <node id="260">
        <label>include/net/openthread.h</label>
        <link refid="openthread_8h"/>
      </node>
      <node id="255">
        <label>include/net/ppp.h</label>
        <link refid="ppp_8h"/>
      </node>
      <node id="256">
        <label>include/net/promiscuous.h</label>
        <link refid="promiscuous_8h"/>
      </node>
      <node id="269">
        <label>include/net/ptp_time.h</label>
        <link refid="ptp__time_8h"/>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
      </node>
      <node id="251">
        <label>include/net/sntp.h</label>
        <link refid="sntp_8h"/>
      </node>
      <node id="241">
        <label>include/net/socket.h</label>
        <link refid="net_2socket_8h"/>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
      </node>
      <node id="261">
        <label>include/net/socket_can.h</label>
        <link refid="socket__can_8h"/>
      </node>
      <node id="262">
        <label>include/net/socket_net_mgmt.h</label>
        <link refid="socket__net__mgmt_8h"/>
      </node>
      <node id="242">
        <label>include/net/socket_offload.h</label>
        <link refid="socket__offload_8h"/>
      </node>
      <node id="247">
        <label>include/net/socketutils.h</label>
        <link refid="socketutils_8h"/>
      </node>
      <node id="243">
        <label>include/net/tftp.h</label>
        <link refid="tftp_8h"/>
      </node>
      <node id="271">
        <label>include/net/trickle.h</label>
        <link refid="trickle_8h"/>
      </node>
      <node id="257">
        <label>include/net/udp.h</label>
        <link refid="udp_8h"/>
      </node>
      <node id="258">
        <label>include/net/virtual.h</label>
        <link refid="virtual_8h"/>
        <childnode refid="259" relation="include">
        </childnode>
      </node>
      <node id="259">
        <label>include/net/virtual_mgmt.h</label>
        <link refid="virtual__mgmt_8h"/>
      </node>
      <node id="361">
        <label>include/net/websocket.h</label>
        <link refid="websocket_8h"/>
        <childnode refid="283" relation="include">
        </childnode>
      </node>
      <node id="263">
        <label>include/net/wifi_mgmt.h</label>
        <link refid="wifi__mgmt_8h"/>
      </node>
      <node id="278">
        <label>include/pm/device.h</label>
        <link refid="pm_2device_8h"/>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
      </node>
      <node id="279">
        <label>include/pm/device_runtime.h</label>
        <link refid="device__runtime_8h"/>
      </node>
      <node id="343">
        <label>include/pm/pm.h</label>
        <link refid="pm_8h"/>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
      </node>
      <node id="344">
        <label>include/pm/policy.h</label>
        <link refid="policy_8h"/>
      </node>
      <node id="342">
        <label>include/pm/state.h</label>
        <link refid="state_8h"/>
        <childnode refid="343" relation="include">
        </childnode>
        <childnode refid="344" relation="include">
        </childnode>
      </node>
      <node id="244">
        <label>include/posix/arpa/inet.h</label>
        <link refid="inet_8h"/>
      </node>
      <node id="245">
        <label>include/posix/net/if.h</label>
        <link refid="if_8h"/>
      </node>
      <node id="246">
        <label>include/posix/netdb.h</label>
        <link refid="netdb_8h"/>
        <childnode refid="247" relation="include">
        </childnode>
      </node>
      <node id="248">
        <label>include/posix/netinet/in.h</label>
        <link refid="in_8h"/>
      </node>
      <node id="249">
        <label>include/posix/netinet/tcp.h</label>
        <link refid="tcp_8h"/>
      </node>
      <node id="250">
        <label>include/posix/poll.h</label>
        <link refid="poll_8h"/>
        <childnode refid="251" relation="include">
        </childnode>
      </node>
      <node id="200">
        <label>include/posix/pthread.h</label>
        <link refid="pthread_8h"/>
      </node>
      <node id="252">
        <label>include/posix/sys/socket.h</label>
        <link refid="posix_2sys_2socket_8h"/>
        <childnode refid="251" relation="include">
        </childnode>
      </node>
      <node id="363">
        <label>include/settings/settings.h</label>
        <link refid="settings_8h"/>
        <childnode refid="323" relation="include">
        </childnode>
      </node>
      <node id="218">
        <label>include/shell/shell.h</label>
        <link refid="shell_2shell_8h"/>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
      </node>
      <node id="219">
        <label>include/shell/shell_dummy.h</label>
        <link refid="shell__dummy_8h"/>
      </node>
      <node id="364">
        <label>include/shell/shell_history.h</label>
        <link refid="shell__history_8h"/>
        <childnode refid="218" relation="include">
        </childnode>
      </node>
      <node id="217">
        <label>include/shell/shell_log_backend.h</label>
        <link refid="shell__log__backend_8h"/>
        <childnode refid="218" relation="include">
        </childnode>
      </node>
      <node id="220">
        <label>include/shell/shell_rtt.h</label>
        <link refid="shell__rtt_8h"/>
      </node>
      <node id="221">
        <label>include/shell/shell_telnet.h</label>
        <link refid="shell__telnet_8h"/>
      </node>
      <node id="222">
        <label>include/shell/shell_uart.h</label>
        <link refid="shell__uart_8h"/>
      </node>
      <node id="202">
        <label>include/smf.h</label>
        <link refid="smf_8h"/>
      </node>
      <node id="280">
        <label>include/spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>include/sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="366">
        <label>include/sys/cbprintf.h</label>
        <link refid="cbprintf_8h"/>
        <childnode refid="277" relation="include">
        </childnode>
      </node>
      <node id="365">
        <label>include/sys/cbprintf_internal.h</label>
        <link refid="cbprintf__internal_8h"/>
        <childnode refid="366" relation="include">
        </childnode>
      </node>
      <node id="395">
        <label>include/sys/device_mmio.h</label>
        <link refid="device__mmio_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="391">
        <label>include/sys/heap_listener.h</label>
        <link refid="heap__listener_8h"/>
      </node>
      <node id="367">
        <label>include/sys/list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="369" relation="include">
        </childnode>
      </node>
      <node id="353">
        <label>include/sys/mem_blocks.h</label>
        <link refid="mem__blocks_8h"/>
      </node>
      <node id="393">
        <label>include/sys/mem_manage.h</label>
        <link refid="mem__manage_8h"/>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="281">
        <label>include/sys/mutex.h</label>
        <link refid="mutex_8h"/>
        <childnode refid="282" relation="include">
        </childnode>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="398">
        <label>include/sys/ring_buffer.h</label>
        <link refid="ring__buffer_8h"/>
        <childnode refid="399" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
      </node>
      <node id="285">
        <label>include/sys/sem.h</label>
        <link refid="sem_8h"/>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="368">
        <label>include/sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="369">
        <label>include/sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="359" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
      </node>
      <node id="286">
        <label>include/sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="290" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
        <childnode refid="326" relation="include">
        </childnode>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="348" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="352" relation="include">
        </childnode>
        <childnode refid="354" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="357" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
        <childnode refid="404" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
      </node>
      <node id="400">
        <label>include/sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="197">
        <label>include/syscall_handler.h</label>
        <link refid="syscall__handler_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
      </node>
      <node id="198">
        <label>include/timeout_q.h</label>
        <link refid="timeout__q_8h"/>
        <childnode refid="199" relation="include">
        </childnode>
      </node>
      <node id="212">
        <label>include/tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>include/tracing/tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="212" relation="include">
        </childnode>
      </node>
      <node id="357">
        <label>include/usb/class/usb_audio.h</label>
        <link refid="usb__audio_8h"/>
      </node>
      <node id="401">
        <label>include/usb/usb_ch9.h</label>
        <link refid="usb__ch9_8h"/>
        <childnode refid="357" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="403" relation="include">
        </childnode>
      </node>
      <node id="402">
        <label>include/usb/usb_common.h</label>
        <link refid="usb__common_8h"/>
      </node>
      <node id="272">
        <label>include/usb/usb_device.h</label>
        <link refid="usb__device_8h"/>
      </node>
      <node id="403">
        <label>include/usb/usbstruct.h</label>
        <link refid="usbstruct_8h"/>
      </node>
      <node id="199">
        <label>include/wait_q.h</label>
        <link refid="wait__q_8h"/>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>include/xen/console.h</label>
        <link refid="xen_2console_8h"/>
      </node>
      <node id="201">
        <label>include/zephyr.h</label>
        <link refid="zephyr_8h"/>
        <childnode refid="202" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>subsys/testsuite/ztest/include/ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>subsys/testsuite/ztest/include/ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>subsys/testsuite/ztest/include/ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>subsys/testsuite/ztest/include/ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="196">
        <label>subsys/testsuite/ztest/include/ztest_test_new.h</label>
        <link refid="ztest__test__new_8h"/>
      </node>
      <node id="404">
        <label>subsys/testsuite/ztest/include/ztress.h</label>
        <link refid="ztress_8h"/>
      </node>
      <node id="31">
        <label>tests/kernel/common/src/atomic.c</label>
        <link refid="atomic_8c"/>
      </node>
      <node id="32">
        <label>tests/kernel/common/src/bitarray.c</label>
        <link refid="bitarray_8c"/>
      </node>
      <node id="33">
        <label>tests/kernel/common/src/bitfield.c</label>
        <link refid="bitfield_8c"/>
      </node>
      <node id="34">
        <label>tests/kernel/common/src/boot_delay.c</label>
        <link refid="boot__delay_8c"/>
      </node>
      <node id="35">
        <label>tests/kernel/common/src/byteorder.c</label>
        <link refid="byteorder_8c"/>
      </node>
      <node id="36">
        <label>tests/kernel/common/src/clock.c</label>
        <link refid="clock_8c"/>
      </node>
      <node id="37">
        <label>tests/kernel/common/src/errno.c</label>
        <link refid="errno_8c"/>
      </node>
      <node id="38">
        <label>tests/kernel/common/src/irq_offload.c</label>
        <link refid="irq__offload_8c"/>
      </node>
      <node id="39">
        <label>tests/kernel/common/src/main.c</label>
        <link refid="common_2src_2main_8c"/>
      </node>
      <node id="40">
        <label>tests/kernel/common/src/multilib.c</label>
        <link refid="multilib_8c"/>
      </node>
      <node id="41">
        <label>tests/kernel/common/src/printk.c</label>
        <link refid="printk_8c"/>
      </node>
      <node id="42">
        <label>tests/kernel/common/src/timeout_order.c</label>
        <link refid="timeout__order_8c"/>
      </node>
      <node id="43">
        <label>tests/kernel/condvar/condvar_api/src/main.c</label>
        <link refid="condvar_2condvar__api_2src_2main_8c"/>
      </node>
      <node id="44">
        <label>tests/kernel/context/src/main.c</label>
        <link refid="context_2src_2main_8c"/>
      </node>
      <node id="45">
        <label>tests/kernel/device/src/abstract_driver.c</label>
        <link refid="abstract__driver_8c"/>
      </node>
      <node id="46">
        <label>tests/kernel/device/src/abstract_driver.h</label>
        <link refid="abstract__driver_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>tests/kernel/device/src/main.c</label>
        <link refid="device_2src_2main_8c"/>
      </node>
      <node id="48">
        <label>tests/kernel/device/src/mmio.c</label>
        <link refid="mmio_8c"/>
      </node>
      <node id="49">
        <label>tests/kernel/device/src/test_driver_init.c</label>
        <link refid="test__driver__init_8c"/>
      </node>
      <node id="50">
        <label>tests/kernel/early_sleep/src/main.c</label>
        <link refid="early__sleep_2src_2main_8c"/>
      </node>
      <node id="51">
        <label>tests/kernel/events/event_api/src/main.c</label>
        <link refid="events_2event__api_2src_2main_8c"/>
      </node>
      <node id="52">
        <label>tests/kernel/events/event_api/src/test_event_apis.c</label>
        <link refid="test__event__apis_8c"/>
      </node>
      <node id="53">
        <label>tests/kernel/events/sys_event/src/main.c</label>
        <link refid="events_2sys__event_2src_2main_8c"/>
      </node>
      <node id="54">
        <label>tests/kernel/fatal/exception/src/main.c</label>
        <link refid="fatal_2exception_2src_2main_8c"/>
      </node>
      <node id="55">
        <label>tests/kernel/fatal/no-multithreading/src/main.c</label>
        <link refid="fatal_2no-multithreading_2src_2main_8c"/>
      </node>
      <node id="56">
        <label>tests/kernel/fifo/fifo_api/src/main.c</label>
        <link refid="fifo_2fifo__api_2src_2main_8c"/>
      </node>
      <node id="57">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo.h</label>
        <link refid="test__fifo_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_cancel.c</label>
        <link refid="test__fifo__cancel_8c"/>
      </node>
      <node id="59">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_contexts.c</label>
        <link refid="test__fifo__contexts_8c"/>
      </node>
      <node id="60">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_fail.c</label>
        <link refid="test__fifo__fail_8c"/>
      </node>
      <node id="61">
        <label>tests/kernel/fifo/fifo_api/src/test_fifo_loop.c</label>
        <link refid="test__fifo__loop_8c"/>
      </node>
      <node id="62">
        <label>tests/kernel/fifo/fifo_timeout/src/main.c</label>
        <link refid="fifo_2fifo__timeout_2src_2main_8c"/>
      </node>
      <node id="63">
        <label>tests/kernel/fifo/fifo_usage/src/main.c</label>
        <link refid="fifo_2fifo__usage_2src_2main_8c"/>
      </node>
      <node id="64">
        <label>tests/kernel/fpu_sharing/float_disable/src/k_float_disable.c</label>
        <link refid="k__float__disable_8c"/>
      </node>
      <node id="65">
        <label>tests/kernel/fpu_sharing/float_disable/src/main.c</label>
        <link refid="fpu__sharing_2float__disable_2src_2main_8c"/>
      </node>
      <node id="66">
        <label>tests/kernel/fpu_sharing/generic/src/load_store.c</label>
        <link refid="load__store_8c"/>
      </node>
      <node id="67">
        <label>tests/kernel/fpu_sharing/generic/src/main.c</label>
        <link refid="fpu__sharing_2generic_2src_2main_8c"/>
      </node>
      <node id="68">
        <label>tests/kernel/fpu_sharing/generic/src/pi.c</label>
        <link refid="pi_8c"/>
      </node>
      <node id="69">
        <label>tests/kernel/gen_isr_table/src/main.c</label>
        <link refid="gen__isr__table_2src_2main_8c"/>
      </node>
      <node id="70">
        <label>tests/kernel/interrupt/src/direct_isr.c</label>
        <link refid="direct__isr_8c"/>
      </node>
      <node id="71">
        <label>tests/kernel/interrupt/src/dynamic_isr.c</label>
        <link refid="dynamic__isr_8c"/>
      </node>
      <node id="72">
        <label>tests/kernel/interrupt/src/interrupt_offload.c</label>
        <link refid="interrupt__offload_8c"/>
      </node>
      <node id="73">
        <label>tests/kernel/interrupt/src/main.c</label>
        <link refid="interrupt_2src_2main_8c"/>
      </node>
      <node id="74">
        <label>tests/kernel/interrupt/src/nested_irq.c</label>
        <link refid="nested__irq_8c"/>
      </node>
      <node id="75">
        <label>tests/kernel/interrupt/src/prevent_irq.c</label>
        <link refid="prevent__irq_8c"/>
      </node>
      <node id="76">
        <label>tests/kernel/interrupt/src/regular_isr.c</label>
        <link refid="regular__isr_8c"/>
      </node>
      <node id="77">
        <label>tests/kernel/lifo/lifo_api/src/main.c</label>
        <link refid="lifo_2lifo__api_2src_2main_8c"/>
      </node>
      <node id="78">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo.h</label>
        <link refid="test__lifo_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo_contexts.c</label>
        <link refid="test__lifo__contexts_8c"/>
      </node>
      <node id="80">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo_fail.c</label>
        <link refid="test__lifo__fail_8c"/>
      </node>
      <node id="81">
        <label>tests/kernel/lifo/lifo_api/src/test_lifo_loop.c</label>
        <link refid="test__lifo__loop_8c"/>
      </node>
      <node id="392">
        <label>tests/kernel/lifo/lifo_usage/src/lifo_usage.h</label>
        <link refid="lifo__usage_8h"/>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>tests/kernel/lifo/lifo_usage/src/main.c</label>
        <link refid="lifo_2lifo__usage_2src_2main_8c"/>
      </node>
      <node id="83">
        <label>tests/kernel/mbox/mbox_api/src/main.c</label>
        <link refid="mbox_2mbox__api_2src_2main_8c"/>
      </node>
      <node id="84">
        <label>tests/kernel/mbox/mbox_api/src/test_mbox_api.c</label>
        <link refid="test__mbox__api_8c"/>
      </node>
      <node id="85">
        <label>tests/kernel/mbox/mbox_usage/src/main.c</label>
        <link refid="mbox_2mbox__usage_2src_2main_8c"/>
      </node>
      <node id="86">
        <label>tests/kernel/mem_heap/k_heap_api/src/main.c</label>
        <link refid="mem__heap_2k__heap__api_2src_2main_8c"/>
      </node>
      <node id="87">
        <label>tests/kernel/mem_heap/k_heap_api/src/test_kheap_api.c</label>
        <link refid="test__kheap__api_8c"/>
      </node>
      <node id="88">
        <label>tests/kernel/mem_heap/mheap_api_concept/src/main.c</label>
        <link refid="mem__heap_2mheap__api__concept_2src_2main_8c"/>
      </node>
      <node id="89">
        <label>tests/kernel/mem_heap/mheap_api_concept/src/test_mheap_api.c</label>
        <link refid="test__mheap__api_8c"/>
      </node>
      <node id="90">
        <label>tests/kernel/mem_heap/mheap_api_concept/src/test_mheap_concept.c</label>
        <link refid="test__mheap__concept_8c"/>
      </node>
      <node id="91">
        <label>tests/kernel/mem_heap/shared_multi_heap/src/main.c</label>
        <link refid="mem__heap_2shared__multi__heap_2src_2main_8c"/>
      </node>
      <node id="92">
        <label>tests/kernel/mem_protect/demand_paging/src/main.c</label>
        <link refid="mem__protect_2demand__paging_2src_2main_8c"/>
      </node>
      <node id="93">
        <label>tests/kernel/mem_protect/futex/src/main.c</label>
        <link refid="mem__protect_2futex_2src_2main_8c"/>
      </node>
      <node id="94">
        <label>tests/kernel/mem_protect/mem_map/src/main.c</label>
        <link refid="mem__protect_2mem__map_2src_2main_8c"/>
      </node>
      <node id="95">
        <label>tests/kernel/mem_protect/mem_protect/src/common.c</label>
        <link refid="common_8c"/>
      </node>
      <node id="98">
        <label>tests/kernel/mem_protect/mem_protect/src/inherit.c</label>
        <link refid="inherit_8c"/>
      </node>
      <node id="99">
        <label>tests/kernel/mem_protect/mem_protect/src/kobject.c</label>
        <link refid="kobject_8c"/>
      </node>
      <node id="96">
        <label>tests/kernel/mem_protect/mem_protect/src/main.c</label>
        <link refid="mem__protect_2mem__protect_2src_2main_8c"/>
      </node>
      <node id="100">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_domain.c</label>
        <link refid="mem__domain_8c"/>
      </node>
      <node id="101">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_partition.c</label>
        <link refid="mem__partition_8c"/>
      </node>
      <node id="97">
        <label>tests/kernel/mem_protect/mem_protect/src/mem_protect.h</label>
        <link refid="mem__protect_8h"/>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>tests/kernel/mem_protect/obj_validation/src/main.c</label>
        <link refid="mem__protect_2obj__validation_2src_2main_8c"/>
      </node>
      <node id="103">
        <label>tests/kernel/mem_protect/protection/src/main.c</label>
        <link refid="mem__protect_2protection_2src_2main_8c"/>
      </node>
      <node id="104">
        <label>tests/kernel/mem_protect/stack_random/src/main.c</label>
        <link refid="mem__protect_2stack__random_2src_2main_8c"/>
      </node>
      <node id="105">
        <label>tests/kernel/mem_protect/stackprot/src/main.c</label>
        <link refid="mem__protect_2stackprot_2src_2main_8c"/>
      </node>
      <node id="106">
        <label>tests/kernel/mem_protect/sys_sem/src/main.c</label>
        <link refid="mem__protect_2sys__sem_2src_2main_8c"/>
      </node>
      <node id="107">
        <label>tests/kernel/mem_protect/syscalls/src/main.c</label>
        <link refid="mem__protect_2syscalls_2src_2main_8c"/>
      </node>
      <node id="108">
        <label>tests/kernel/mem_protect/userspace/src/main.c</label>
        <link refid="mem__protect_2userspace_2src_2main_8c"/>
      </node>
      <node id="109">
        <label>tests/kernel/mem_slab/mslab/src/main.c</label>
        <link refid="mem__slab_2mslab_2src_2main_8c"/>
      </node>
      <node id="110">
        <label>tests/kernel/mem_slab/mslab_api/src/main.c</label>
        <link refid="mem__slab_2mslab__api_2src_2main_8c"/>
      </node>
      <node id="111">
        <label>tests/kernel/mem_slab/mslab_api/src/test_mslab_api.c</label>
        <link refid="test__mslab__api_8c"/>
      </node>
      <node id="112">
        <label>tests/kernel/mem_slab/mslab_api/src/test_mslab_extern.c</label>
        <link refid="test__mslab__extern_8c"/>
      </node>
      <node id="113">
        <label>tests/kernel/mem_slab/mslab_concept/src/main.c</label>
        <link refid="mem__slab_2mslab__concept_2src_2main_8c"/>
      </node>
      <node id="114">
        <label>tests/kernel/mem_slab/mslab_concept/src/test_mslab_alloc_wait.c</label>
        <link refid="test__mslab__alloc__wait_8c"/>
      </node>
      <node id="115">
        <label>tests/kernel/mem_slab/mslab_threadsafe/src/main.c</label>
        <link refid="mem__slab_2mslab__threadsafe_2src_2main_8c"/>
      </node>
      <node id="116">
        <label>tests/kernel/mem_slab/mslab_threadsafe/src/test_mslab_threadsafe.c</label>
        <link refid="test__mslab__threadsafe_8c"/>
      </node>
      <node id="117">
        <label>tests/kernel/mp/src/main.c</label>
        <link refid="mp_2src_2main_8c"/>
      </node>
      <node id="118">
        <label>tests/kernel/msgq/msgq_api/src/main.c</label>
        <link refid="msgq_2msgq__api_2src_2main_8c"/>
      </node>
      <node id="119">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq.h</label>
        <link refid="test__msgq_8h"/>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_attrs.c</label>
        <link refid="test__msgq__attrs_8c"/>
      </node>
      <node id="121">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_contexts.c</label>
        <link refid="test__msgq__contexts_8c"/>
      </node>
      <node id="122">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_fail.c</label>
        <link refid="test__msgq__fail_8c"/>
      </node>
      <node id="123">
        <label>tests/kernel/msgq/msgq_api/src/test_msgq_purge.c</label>
        <link refid="test__msgq__purge_8c"/>
      </node>
      <node id="124">
        <label>tests/kernel/msgq/msgq_usage/src/main.c</label>
        <link refid="msgq_2msgq__usage_2src_2main_8c"/>
      </node>
      <node id="125">
        <label>tests/kernel/mutex/mutex_api/src/test_mutex_apis.c</label>
        <link refid="test__mutex__apis_8c"/>
      </node>
      <node id="126">
        <label>tests/kernel/mutex/mutex_error_case/src/test_mutex_error.c</label>
        <link refid="test__mutex__error_8c"/>
      </node>
      <node id="127">
        <label>tests/kernel/mutex/sys_mutex/src/main.c</label>
        <link refid="mutex_2sys__mutex_2src_2main_8c"/>
      </node>
      <node id="284">
        <label>tests/kernel/mutex/sys_mutex/src/thread_12.c</label>
        <link refid="thread__12_8c"/>
      </node>
      <node id="128">
        <label>tests/kernel/mutex/sys_mutex/src/thread_competition.c</label>
        <link refid="thread__competition_8c"/>
      </node>
      <node id="129">
        <label>tests/kernel/obj_tracking/src/main.c</label>
        <link refid="obj__tracking_2src_2main_8c"/>
      </node>
      <node id="130">
        <label>tests/kernel/pending/src/main.c</label>
        <link refid="pending_2src_2main_8c"/>
      </node>
      <node id="131">
        <label>tests/kernel/pipe/pipe/src/main.c</label>
        <link refid="pipe_2pipe_2src_2main_8c"/>
      </node>
      <node id="132">
        <label>tests/kernel/pipe/pipe/src/test_pipe.c</label>
        <link refid="test__pipe_8c"/>
      </node>
      <node id="133">
        <label>tests/kernel/pipe/pipe_api/src/main.c</label>
        <link refid="pipe_2pipe__api_2src_2main_8c"/>
      </node>
      <node id="134">
        <label>tests/kernel/pipe/pipe_api/src/test_pipe_avail.c</label>
        <link refid="test__pipe__avail_8c"/>
      </node>
      <node id="135">
        <label>tests/kernel/pipe/pipe_api/src/test_pipe_contexts.c</label>
        <link refid="test__pipe__contexts_8c"/>
      </node>
      <node id="136">
        <label>tests/kernel/pipe/pipe_api/src/test_pipe_fail.c</label>
        <link refid="test__pipe__fail_8c"/>
      </node>
      <node id="137">
        <label>tests/kernel/poll/src/main.c</label>
        <link refid="poll_2src_2main_8c"/>
      </node>
      <node id="138">
        <label>tests/kernel/poll/src/test_poll.c</label>
        <link refid="test__poll_8c"/>
      </node>
      <node id="139">
        <label>tests/kernel/poll/src/test_poll_fail.c</label>
        <link refid="test__poll__fail_8c"/>
      </node>
      <node id="140">
        <label>tests/kernel/profiling/profiling_api/src/main.c</label>
        <link refid="profiling_2profiling__api_2src_2main_8c"/>
      </node>
      <node id="141">
        <label>tests/kernel/queue/src/main.c</label>
        <link refid="queue_2src_2main_8c"/>
      </node>
      <node id="142">
        <label>tests/kernel/queue/src/test_queue.h</label>
        <link refid="test__queue_8h"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>tests/kernel/queue/src/test_queue_contexts.c</label>
        <link refid="test__queue__contexts_8c"/>
      </node>
      <node id="144">
        <label>tests/kernel/queue/src/test_queue_fail.c</label>
        <link refid="test__queue__fail_8c"/>
      </node>
      <node id="145">
        <label>tests/kernel/queue/src/test_queue_loop.c</label>
        <link refid="test__queue__loop_8c"/>
      </node>
      <node id="146">
        <label>tests/kernel/queue/src/test_queue_user.c</label>
        <link refid="test__queue__user_8c"/>
      </node>
      <node id="147">
        <label>tests/kernel/sched/deadline/src/main.c</label>
        <link refid="sched_2deadline_2src_2main_8c"/>
      </node>
      <node id="148">
        <label>tests/kernel/sched/metairq/src/main.c</label>
        <link refid="sched_2metairq_2src_2main_8c"/>
      </node>
      <node id="149">
        <label>tests/kernel/sched/preempt/src/main.c</label>
        <link refid="sched_2preempt_2src_2main_8c"/>
      </node>
      <node id="152">
        <label>tests/kernel/sched/schedule_api/src/main.c</label>
        <link refid="sched_2schedule__api_2src_2main_8c"/>
      </node>
      <node id="150">
        <label>tests/kernel/sched/schedule_api/src/test_priority_scheduling.c</label>
        <link refid="test__priority__scheduling_8c"/>
      </node>
      <node id="151">
        <label>tests/kernel/sched/schedule_api/src/test_sched.h</label>
        <link refid="test__sched_8h"/>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
      <node id="153">
        <label>tests/kernel/sched/schedule_api/src/test_sched_is_preempt_thread.c</label>
        <link refid="test__sched__is__preempt__thread_8c"/>
      </node>
      <node id="154">
        <label>tests/kernel/sched/schedule_api/src/test_sched_priority.c</label>
        <link refid="test__sched__priority_8c"/>
      </node>
      <node id="155">
        <label>tests/kernel/sched/schedule_api/src/test_sched_timeslice_and_lock.c</label>
        <link refid="test__sched__timeslice__and__lock_8c"/>
      </node>
      <node id="156">
        <label>tests/kernel/sched/schedule_api/src/test_sched_timeslice_reset.c</label>
        <link refid="test__sched__timeslice__reset_8c"/>
      </node>
      <node id="157">
        <label>tests/kernel/sched/schedule_api/src/test_slice_scheduling.c</label>
        <link refid="test__slice__scheduling_8c"/>
      </node>
      <node id="158">
        <label>tests/kernel/sched/schedule_api/src/user_api.c</label>
        <link refid="user__api_8c"/>
      </node>
      <node id="159">
        <label>tests/kernel/semaphore/semaphore/src/main.c</label>
        <link refid="semaphore_2semaphore_2src_2main_8c"/>
      </node>
      <node id="160">
        <label>tests/kernel/semaphore/sys_sem/src/main.c</label>
        <link refid="semaphore_2sys__sem_2src_2main_8c"/>
      </node>
      <node id="161">
        <label>tests/kernel/sleep/src/main.c</label>
        <link refid="sleep_2src_2main_8c"/>
      </node>
      <node id="162">
        <label>tests/kernel/sleep/src/usleep.c</label>
        <link refid="usleep_8c"/>
      </node>
      <node id="163">
        <label>tests/kernel/smp/src/main.c</label>
        <link refid="smp_2src_2main_8c"/>
      </node>
      <node id="164">
        <label>tests/kernel/smp_boot_delay/src/main.c</label>
        <link refid="smp__boot__delay_2src_2main_8c"/>
      </node>
      <node id="165">
        <label>tests/kernel/spinlock/src/main.c</label>
        <link refid="spinlock_2src_2main_8c"/>
      </node>
      <node id="166">
        <label>tests/kernel/spinlock/src/spinlock_error_case.c</label>
        <link refid="spinlock__error__case_8c"/>
      </node>
      <node id="167">
        <label>tests/kernel/stack/stack/src/main.c</label>
        <link refid="stack_2stack_2src_2main_8c"/>
      </node>
      <node id="168">
        <label>tests/kernel/stack/stack/src/test_stack_contexts.c</label>
        <link refid="test__stack__contexts_8c"/>
      </node>
      <node id="169">
        <label>tests/kernel/stack/stack/src/test_stack_fail.c</label>
        <link refid="test__stack__fail_8c"/>
      </node>
      <node id="170">
        <label>tests/kernel/threads/dynamic_thread/src/main.c</label>
        <link refid="threads_2dynamic__thread_2src_2main_8c"/>
      </node>
      <node id="171">
        <label>tests/kernel/threads/no-multithreading/src/main.c</label>
        <link refid="threads_2no-multithreading_2src_2main_8c"/>
      </node>
      <node id="172">
        <label>tests/kernel/threads/thread_apis/src/main.c</label>
        <link refid="threads_2thread__apis_2src_2main_8c"/>
      </node>
      <node id="173">
        <label>tests/kernel/threads/thread_apis/src/test_essential_thread.c</label>
        <link refid="test__essential__thread_8c"/>
      </node>
      <node id="174">
        <label>tests/kernel/threads/thread_apis/src/test_kthread_for_each.c</label>
        <link refid="test__kthread__for__each_8c"/>
      </node>
      <node id="175">
        <label>tests/kernel/threads/thread_apis/src/test_threads_cancel_abort.c</label>
        <link refid="test__threads__cancel__abort_8c"/>
      </node>
      <node id="176">
        <label>tests/kernel/threads/thread_apis/src/test_threads_cpu_mask.c</label>
        <link refid="test__threads__cpu__mask_8c"/>
      </node>
      <node id="177">
        <label>tests/kernel/threads/thread_apis/src/test_threads_set_priority.c</label>
        <link refid="test__threads__set__priority_8c"/>
      </node>
      <node id="178">
        <label>tests/kernel/threads/thread_apis/src/test_threads_spawn.c</label>
        <link refid="test__threads__spawn_8c"/>
      </node>
      <node id="179">
        <label>tests/kernel/threads/thread_apis/src/test_threads_suspend_resume.c</label>
        <link refid="test__threads__suspend__resume_8c"/>
      </node>
      <node id="180">
        <label>tests/kernel/threads/thread_error_case/src/main.c</label>
        <link refid="threads_2thread__error__case_2src_2main_8c"/>
      </node>
      <node id="181">
        <label>tests/kernel/threads/thread_init/src/main.c</label>
        <link refid="threads_2thread__init_2src_2main_8c"/>
      </node>
      <node id="182">
        <label>tests/kernel/threads/thread_stack/src/main.c</label>
        <link refid="threads_2thread__stack_2src_2main_8c"/>
      </node>
      <node id="183">
        <label>tests/kernel/threads/tls/src/main.c</label>
        <link refid="threads_2tls_2src_2main_8c"/>
      </node>
      <node id="184">
        <label>tests/kernel/tickless/tickless_concept/src/main.c</label>
        <link refid="tickless_2tickless__concept_2src_2main_8c"/>
      </node>
      <node id="185">
        <label>tests/kernel/timer/cycle64/src/main.c</label>
        <link refid="timer_2cycle64_2src_2main_8c"/>
      </node>
      <node id="186">
        <label>tests/kernel/timer/starve/src/main.c</label>
        <link refid="timer_2starve_2src_2main_8c"/>
      </node>
      <node id="187">
        <label>tests/kernel/timer/timer_api/src/main.c</label>
        <link refid="timer_2timer__api_2src_2main_8c"/>
      </node>
      <node id="188">
        <label>tests/kernel/timer/timer_api/src/timer_convert.c</label>
        <link refid="timer__convert_8c"/>
      </node>
      <node id="189">
        <label>tests/kernel/timer/timer_error_case/src/main.c</label>
        <link refid="timer_2timer__error__case_2src_2main_8c"/>
      </node>
      <node id="190">
        <label>tests/kernel/timer/timer_monotonic/src/main.c</label>
        <link refid="timer_2timer__monotonic_2src_2main_8c"/>
      </node>
      <node id="191">
        <label>tests/kernel/workq/critical/src/main.c</label>
        <link refid="workq_2critical_2src_2main_8c"/>
      </node>
      <node id="192">
        <label>tests/kernel/workq/user_work/src/main.c</label>
        <link refid="workq_2user__work_2src_2main_8c"/>
      </node>
      <node id="193">
        <label>tests/kernel/workq/work/src/main.c</label>
        <link refid="workq_2work_2src_2main_8c"/>
      </node>
      <node id="194">
        <label>tests/kernel/workq/work_queue/src/main.c</label>
        <link refid="workq_2work__queue_2src_2main_8c"/>
      </node>
      <node id="195">
        <label>tests/kernel/xip/src/main.c</label>
        <link refid="xip_2src_2main_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" prot="public" static="no">
        <name>BIT</name>
        <param><defname>n</defname></param>
        <initializer>(1UL &lt;&lt; (n))</initializer>
        <briefdescription>
<para>Unsigned integer with bit position <computeroutput>n</computeroutput> set (signed in assembly language). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="44" column="9" bodyfile="include/sys/util_macro.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1gacfdade52af3ced2d87472cec47d14a76" prot="public" static="no">
        <name>BIT64</name>
        <param><defname>_n</defname></param>
        <initializer>(1ULL &lt;&lt; (_n))</initializer>
        <briefdescription>
<para>64-bit unsigned integer with bit position <computeroutput>_n</computeroutput> set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="49" column="9" bodyfile="include/sys/util_macro.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga23a900e882ecb48455e70f01fd45b246" prot="public" static="no">
        <name>WRITE_BIT</name>
        <param><defname>var</defname></param>
        <param><defname>bit</defname></param>
        <param><defname>set</defname></param>
        <initializer>	((var) = (set) ? ((var) | <ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(bit)) : ((var) &amp; ~<ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(bit)))</initializer>
        <briefdescription>
<para>Set or clear a bit depending on a boolean value. </para>
        </briefdescription>
        <detaileddescription>
<para>The argument <computeroutput>var</computeroutput> is a variable whose value is written to as a side effect.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>var</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to be altered </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bit</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>set</parametername>
</parameternamelist>
<parameterdescription>
<para>if 0, clears <computeroutput>bit</computeroutput> in <computeroutput>var</computeroutput>; any other value sets <computeroutput>bit</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="61" column="9" bodyfile="include/sys/util_macro.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga3c12c6d36ad0aa481a3436923d21f4f8" prot="public" static="no">
        <name>BIT_MASK</name>
        <param><defname>n</defname></param>
        <initializer>(<ref refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" kindref="member">BIT</ref>(n) - 1UL)</initializer>
        <briefdescription>
<para>Bit mask with bits 0 through <computeroutput>n-1</computeroutput> (inclusive) set, or 0 if <computeroutput>n</computeroutput> is 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="68" column="9" bodyfile="include/sys/util_macro.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga1a138896caafcb2429a6483ea7412d12" prot="public" static="no">
        <name>BIT64_MASK</name>
        <param><defname>n</defname></param>
        <initializer>(<ref refid="group__sys-util_1gacfdade52af3ced2d87472cec47d14a76" kindref="member">BIT64</ref>(n) - 1ULL)</initializer>
        <briefdescription>
<para>64-bit bit mask with bits 0 through <computeroutput>n-1</computeroutput> (inclusive) set, or 0 if <computeroutput>n</computeroutput> is 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="74" column="9" bodyfile="include/sys/util_macro.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" prot="public" static="no">
        <name>IS_ENABLED</name>
        <param><defname>config_macro</defname></param>
        <initializer>Z_IS_ENABLED1(config_macro)</initializer>
        <briefdescription>
<para>Check for macro definition in compiler-visible expressions. </para>
        </briefdescription>
        <detaileddescription>
<para>This trick was pioneered in Linux as the config_enabled() macro. It has the effect of taking a macro value that may be defined to &quot;1&quot; or may not be defined at all and turning it into a literal expression that can be handled by the C compiler instead of just the preprocessor. It is often used with a <computeroutput>CONFIG_FOO</computeroutput> macro which may be defined to 1 via Kconfig, or left undefined.</para>
<para>That is, it works similarly to <computeroutput>#if defined(CONFIG_FOO)</computeroutput> except that its expansion is a C expression. Thus, much <computeroutput>#ifdef</computeroutput> usage can be replaced with equivalents like: <verbatim>if (IS_ENABLED(CONFIG_FOO)) {
        do_something_with_foo
}
</verbatim> This is cleaner since the compiler can generate errors and warnings for <computeroutput>do_something_with_foo</computeroutput> even when <computeroutput>CONFIG_FOO</computeroutput> is undefined.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config_macro</parametername>
</parameternamelist>
<parameterdescription>
<para>Macro to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if <computeroutput>config_macro</computeroutput> is defined to 1, 0 otherwise (including if <computeroutput>config_macro</computeroutput> is not defined) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="101" column="9" bodyfile="include/sys/util_macro.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga358bc3e7669c860a98839a51cd526b20" prot="public" static="no">
        <name>COND_CODE_1</name>
        <param><defname>_flag</defname></param>
        <param><defname>_if_1_code</defname></param>
        <param><defname>_else_code</defname></param>
        <initializer>	Z_COND_CODE_1(_flag, _if_1_code, _else_code)</initializer>
        <briefdescription>
<para>Insert code depending on whether <computeroutput>_flag</computeroutput> expands to 1 or not. </para>
        </briefdescription>
        <detaileddescription>
<para>This relies on similar tricks as <ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED()</ref>, but as the result of <computeroutput>_flag</computeroutput> expansion, results in either <computeroutput>_if_1_code</computeroutput> or <computeroutput>_else_code</computeroutput> is expanded.</para>
<para>To prevent the preprocessor from treating commas as argument separators, the <computeroutput>_if_1_code</computeroutput> and <computeroutput>_else_code</computeroutput> expressions must be inside brackets/parentheses: <computeroutput>()</computeroutput>. These are stripped away during macro expansion.</para>
<para>Example: <verbatim>COND_CODE_1(CONFIG_FLAG, (uint32_t x;), (there_is_no_flag();))
</verbatim> If <computeroutput>CONFIG_FLAG</computeroutput> is defined to 1, this expands to: <verbatim>uint32_t x;
</verbatim> It expands to <computeroutput>there_is_no_flag();</computeroutput> otherwise.</para>
<para>This could be used as an alternative to: <verbatim>#if defined(CONFIG_FLAG) &amp;&amp; (CONFIG_FLAG == 1)
#define MAYBE_DECLARE(x) uint32_t x
#else
#define MAYBE_DECLARE(x) there_is_no_flag()
#endif

MAYBE_DECLARE(x);
</verbatim> However, the advantage of <ref refid="group__sys-util_1ga358bc3e7669c860a98839a51cd526b20" kindref="member">COND_CODE_1()</ref> is that code is resolved in place where it is used, while the <computeroutput>#if</computeroutput> method defines <computeroutput>MAYBE_DECLARE</computeroutput> on two lines and requires it to be invoked again on a separate line. This makes <ref refid="group__sys-util_1ga358bc3e7669c860a98839a51cd526b20" kindref="member">COND_CODE_1()</ref> more concise and also sometimes more useful when used within another macro&apos;s expansion.</para>
<para><simplesect kind="note"><para><computeroutput>_flag</computeroutput> can be the result of preprocessor expansion, e.g. an expression involving <computeroutput><ref refid="group__sys-util_1ga8a0e9835e0a8f864ffc2359b9c419cc2" kindref="member">NUM_VA_ARGS_LESS_1(...)</ref></computeroutput>. However, <computeroutput>_if_1_code</computeroutput> is only expanded if <computeroutput>_flag</computeroutput> expands to the integer literal 1. Integer expressions that evaluate to 1, e.g. after doing some arithmetic, will not work.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_flag</parametername>
</parameternamelist>
<parameterdescription>
<para>evaluated flag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_if_1_code</parametername>
</parameternamelist>
<parameterdescription>
<para>result if <computeroutput>_flag</computeroutput> expands to 1; must be in parentheses </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_else_code</parametername>
</parameternamelist>
<parameterdescription>
<para>result otherwise; must be in parentheses </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="156" column="9" bodyfile="include/sys/util_macro.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga5483ea38af79bc6c4509936288705377" prot="public" static="no">
        <name>COND_CODE_0</name>
        <param><defname>_flag</defname></param>
        <param><defname>_if_0_code</defname></param>
        <param><defname>_else_code</defname></param>
        <initializer>	Z_COND_CODE_0(_flag, _if_0_code, _else_code)</initializer>
        <briefdescription>
<para>Like <ref refid="group__sys-util_1ga358bc3e7669c860a98839a51cd526b20" kindref="member">COND_CODE_1()</ref> except tests if <computeroutput>_flag</computeroutput> is 0. </para>
        </briefdescription>
        <detaileddescription>
<para>This is like <ref refid="group__sys-util_1ga358bc3e7669c860a98839a51cd526b20" kindref="member">COND_CODE_1()</ref>, except that it tests whether <computeroutput>_flag</computeroutput> expands to the integer literal 0. It expands to <computeroutput>_if_0_code</computeroutput> if so, and <computeroutput>_else_code</computeroutput> otherwise; both of these must be enclosed in parentheses.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_flag</parametername>
</parameternamelist>
<parameterdescription>
<para>evaluated flag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_if_0_code</parametername>
</parameternamelist>
<parameterdescription>
<para>result if <computeroutput>_flag</computeroutput> expands to 0; must be in parentheses </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_else_code</parametername>
</parameternamelist>
<parameterdescription>
<para>result otherwise; must be in parentheses </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__sys-util_1ga358bc3e7669c860a98839a51cd526b20" kindref="member">COND_CODE_1()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="172" column="9" bodyfile="include/sys/util_macro.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1gae67ffe50e848951dbde309ed569ea925" prot="public" static="no">
        <name>IF_ENABLED</name>
        <param><defname>_flag</defname></param>
        <param><defname>_code</defname></param>
        <initializer>	<ref refid="group__sys-util_1ga358bc3e7669c860a98839a51cd526b20" kindref="member">COND_CODE_1</ref>(_flag, _code, ())</initializer>
        <briefdescription>
<para>Insert code if <computeroutput>_flag</computeroutput> is defined and equals 1. </para>
        </briefdescription>
        <detaileddescription>
<para>Like <ref refid="group__sys-util_1ga358bc3e7669c860a98839a51cd526b20" kindref="member">COND_CODE_1()</ref>, this expands to <computeroutput>_code</computeroutput> if <computeroutput>_flag</computeroutput> is defined to 1; it expands to nothing otherwise.</para>
<para>Example: <verbatim>IF_ENABLED(CONFIG_FLAG, (uint32_t foo;))
</verbatim> If <computeroutput>CONFIG_FLAG</computeroutput> is defined to 1, this expands to: <verbatim>uint32_t foo;
</verbatim> and to nothing otherwise.</para>
<para>It can be considered as a more compact alternative to: <verbatim>#if defined(CONFIG_FLAG) &amp;&amp; (CONFIG_FLAG == 1)
uint32_t foo;
#endif
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_flag</parametername>
</parameternamelist>
<parameterdescription>
<para>evaluated flag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_code</parametername>
</parameternamelist>
<parameterdescription>
<para>result if <computeroutput>_flag</computeroutput> expands to 1; must be in parentheses </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="200" column="9" bodyfile="include/sys/util_macro.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1gab9487eea703d51cb1f235432dab4a1c7" prot="public" static="no">
        <name>IS_EMPTY</name>
        <param><defname>...</defname></param>
        <initializer>Z_IS_EMPTY_(__VA_ARGS__)</initializer>
        <briefdescription>
<para>Check if a macro has a replacement expression. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>a</computeroutput> is a macro defined to a nonempty value, this will return true, otherwise it will return false. It only works with defined macros, so an additional <computeroutput>#ifdef</computeroutput> test may be needed in some cases.</para>
<para>This macro may be used with <ref refid="group__sys-util_1ga358bc3e7669c860a98839a51cd526b20" kindref="member">COND_CODE_1()</ref> and <ref refid="group__sys-util_1ga5483ea38af79bc6c4509936288705377" kindref="member">COND_CODE_0()</ref> while processing <computeroutput><bold>VA_ARGS</bold></computeroutput> to avoid processing empty arguments.</para>
<para>Example: <verbatim> #define EMPTY
 #define NON_EMPTY  1
 #undef  UNDEFINED
 IS_EMPTY(EMPTY)
 IS_EMPTY(NON_EMPTY)
 IS_EMPTY(UNDEFINED)
 #if defined(EMPTY) &amp;&amp; IS_EMPTY(EMPTY) == true
 some_conditional_code
 #endif
</verbatim> In above examples, the invocations of <ref refid="group__sys-util_1gab9487eea703d51cb1f235432dab4a1c7" kindref="member">IS_EMPTY(...)</ref> return <computeroutput>true</computeroutput>, <computeroutput>false</computeroutput>, and <computeroutput>true</computeroutput>; <computeroutput>some_conditional_code</computeroutput> is included.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>macro to check for emptiness (may be <computeroutput><bold>VA_ARGS</bold></computeroutput>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="230" column="9" bodyfile="include/sys/util_macro.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1gab9762d5128988f7f4f5d51213ea52025" prot="public" static="no">
        <name>LIST_DROP_EMPTY</name>
        <param><defname>...</defname></param>
        <initializer>	Z_LIST_DROP_FIRST(<ref refid="threads_2no-multithreading_2src_2main_8c_1af2de6cd2b60b623046744e6314a5efb6" kindref="member">FOR_EACH</ref>(Z_LIST_NO_EMPTIES, (), __VA_ARGS__))</initializer>
        <briefdescription>
<para>Remove empty arguments from list. </para>
        </briefdescription>
        <detaileddescription>
<para>During macro expansion, <computeroutput><bold>VA_ARGS</bold></computeroutput> and other preprocessor generated lists may contain empty elements, e.g.: <verbatim> #define LIST ,a,b,,d,
</verbatim> Using EMPTY to show each empty element, LIST contains: <verbatim> EMPTY, a, b, EMPTY, d
</verbatim> When processing such lists, e.g. using <ref refid="group__sys-util_1ga278c8b7cbbea2f585e371d3568f3cb12" kindref="member">FOR_EACH()</ref>, all empty elements will be processed, and may require filtering out. To make that process easier, it is enough to invoke LIST_DROP_EMPTY which will remove all empty elements.</para>
<para>Example: <verbatim> LIST_DROP_EMPTY(LIST)
</verbatim> expands to: <verbatim> a, b, d
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>list to be processed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="259" column="9" bodyfile="include/sys/util_macro.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga2b7cf2a3641be7b89138615764d60ba3" prot="public" static="no">
        <name>EMPTY</name>
        <briefdescription>
<para>Macro with an empty expansion. </para>
        </briefdescription>
        <detaileddescription>
<para>This trivial definition is provided for readability when a macro should expand to an empty result, which e.g. is sometimes needed to silence checkpatch.</para>
<para>Example: <verbatim> #define LIST_ITEM(n) , item##n
</verbatim> The above would cause checkpatch to complain, but: <verbatim> #define LIST_ITEM(n) EMPTY, item##n
</verbatim> would not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="279" column="9" bodyfile="include/sys/util_macro.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1gaaed493c6115c04272077a0f3854b9a83" prot="public" static="no">
        <name>IDENTITY</name>
        <param><defname>V</defname></param>
        <initializer>V</initializer>
        <briefdescription>
<para>Macro that expands to its argument. </para>
        </briefdescription>
        <detaileddescription>
<para>This is useful in macros like <computeroutput><ref refid="group__sys-util_1ga278c8b7cbbea2f585e371d3568f3cb12" kindref="member">FOR_EACH()</ref></computeroutput> when there is no transformation required on the list elements.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>V</parametername>
</parameternamelist>
<parameterdescription>
<para>any value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="289" column="9" bodyfile="include/sys/util_macro.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1gabbe04a4d59a495b2b86196304b937ec6" prot="public" static="no">
        <name>GET_ARG_N</name>
        <param><defname>N</defname></param>
        <param><defname>...</defname></param>
        <initializer>Z_GET_ARG_##N(__VA_ARGS__)</initializer>
        <briefdescription>
<para>Get nth argument from argument list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument index to fetch. Counter from 1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable list of argments from which one argument is returned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Nth argument. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="299" column="9" bodyfile="include/sys/util_macro.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga01e1dc9b92e5be6895528d1da5f0c88b" prot="public" static="no">
        <name>GET_ARGS_LESS_N</name>
        <param><defname>N</defname></param>
        <param><defname>...</defname></param>
        <initializer>Z_GET_ARGS_LESS_##N(__VA_ARGS__)</initializer>
        <briefdescription>
<para>Strips n first arguments from the argument list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of arguments to discard. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable list of argments.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>argument list without N first arguments. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="309" column="9" bodyfile="include/sys/util_macro.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga50cfdf948906976562c3f0625c84c2b2" prot="public" static="no">
        <name>UTIL_OR</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer><ref refid="group__sys-util_1ga358bc3e7669c860a98839a51cd526b20" kindref="member">COND_CODE_1</ref>(<ref refid="util__internal_8h_1a80cbb3a182096676524d761113349bc8" kindref="member">UTIL_BOOL</ref>(a), (a), (b))</initializer>
        <briefdescription>
<para>Like <computeroutput>a || b</computeroutput>, but does evaluation and short-circuiting at C preprocessor time. </para>
        </briefdescription>
        <detaileddescription>
<para>This is not the same as the binary <computeroutput>||</computeroutput> operator; in particular, <computeroutput>a</computeroutput> should expand to an integer literal 0 or 1. However, <computeroutput>b</computeroutput> can be any value.</para>
<para>This can be useful when <computeroutput>b</computeroutput> is an expression that would cause a build error when <computeroutput>a</computeroutput> is 1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="322" column="9" bodyfile="include/sys/util_macro.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga26179b776b4a03143e8be1612ef6d853" prot="public" static="no">
        <name>UTIL_AND</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer><ref refid="group__sys-util_1ga358bc3e7669c860a98839a51cd526b20" kindref="member">COND_CODE_1</ref>(<ref refid="util__internal_8h_1a80cbb3a182096676524d761113349bc8" kindref="member">UTIL_BOOL</ref>(a), (b), (0))</initializer>
        <briefdescription>
<para>Like <computeroutput>a &amp;&amp; b</computeroutput>, but does evaluation and short-circuiting at C preprocessor time. </para>
        </briefdescription>
        <detaileddescription>
<para>This is not the same as the binary <computeroutput>&amp;&amp;</computeroutput>, however; in particular, <computeroutput>a</computeroutput> should expand to an integer literal 0 or 1. However, <computeroutput>b</computeroutput> can be any value.</para>
<para>This can be useful when <computeroutput>b</computeroutput> is an expression that would cause a build error when <computeroutput>a</computeroutput> is 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="335" column="9" bodyfile="include/sys/util_macro.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga31079a877f7990c552cbfaf10225e37a" prot="public" static="no">
        <name>UTIL_LISTIFY</name>
        <param><defname>LEN</defname></param>
        <param><defname>F</defname></param>
        <param><defname>...</defname></param>
        <initializer><ref refid="util__internal_8h_1a7e7766e792d1638bfbbc9d0f328d3d0d" kindref="member">UTIL_CAT</ref>(Z_UTIL_LISTIFY_, LEN)(F, __VA_ARGS__)</initializer>
        <briefdescription>
<para>Generates a sequence of code. </para>
        </briefdescription>
        <detaileddescription>
<para>Example: <verbatim>#define FOO(i, _) MY_PWM ## i ,
{ UTIL_LISTIFY(PWM_COUNT, FOO) }
</verbatim> The above two lines expand to:</para>
<para>{ MY_PWM0 , MY_PWM1 , }</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>LEN</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the sequence. Must be an integer literal less than 255. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>A macro function that accepts at least two arguments: <computeroutput>F(i, ...)</computeroutput>. <computeroutput>F</computeroutput> is called repeatedly in the expansion. Its first argument <computeroutput>i</computeroutput> is the index in the sequence, and the variable list of arguments passed to UTIL_LISTIFY are passed through to <computeroutput>F</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Calling UTIL_LISTIFY with undefined arguments has undefined behavior. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="360" column="9" bodyfile="include/sys/util_macro.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga278c8b7cbbea2f585e371d3568f3cb12" prot="public" static="no">
        <name>FOR_EACH</name>
        <param><defname>F</defname></param>
        <param><defname>sep</defname></param>
        <param><defname>...</defname></param>
        <initializer>	Z_FOR_EACH(F, sep, <ref refid="group__sys-util_1ga58de032c2ed7b4094c447c512dfd3784" kindref="member">REVERSE_ARGS</ref>(__VA_ARGS__))</initializer>
        <briefdescription>
<para>Call a macro <computeroutput>F</computeroutput> on each provided argument with a given separator between each call. </para>
        </briefdescription>
        <detaileddescription>
<para>Example: <verbatim>#define F(x) int a##x
FOR_EACH(F, (;), 4, 5, 6);
</verbatim> This expands to: <verbatim>int a4;
int a5;
int a6;
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>Macro to invoke </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sep</parametername>
</parameternamelist>
<parameterdescription>
<para>Separator (e.g. comma or semicolon). Must be in parentheses; this is required to enable providing a comma as separator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable argument list. The macro <computeroutput>F</computeroutput> is invoked as <computeroutput>F(element)</computeroutput> for each element in the list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="383" column="9" bodyfile="include/sys/util_macro.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga24b3862161d725f5503b1bb08f4e339f" prot="public" static="no">
        <name>FOR_EACH_NONEMPTY_TERM</name>
        <param><defname>F</defname></param>
        <param><defname>term</defname></param>
        <param><defname>...</defname></param>
        <initializer>	<ref refid="group__sys-util_1ga5483ea38af79bc6c4509936288705377" kindref="member">COND_CODE_0</ref>(							\
		/* are there zero non-empty arguments ? */		\
		<ref refid="group__sys-util_1ga8a0e9835e0a8f864ffc2359b9c419cc2" kindref="member">NUM_VA_ARGS_LESS_1</ref>(<ref refid="group__sys-util_1gab9762d5128988f7f4f5d51213ea52025" kindref="member">LIST_DROP_EMPTY</ref>(__VA_ARGS__, _)),	\
		/* if so, expand to nothing */				\
		(),							\
		/* otherwise, expand to: */				\
		(/* <ref refid="threads_2no-multithreading_2src_2main_8c_1af2de6cd2b60b623046744e6314a5efb6" kindref="member">FOR_EACH</ref>() on nonempty elements, */		\
			<ref refid="threads_2no-multithreading_2src_2main_8c_1af2de6cd2b60b623046744e6314a5efb6" kindref="member">FOR_EACH</ref>(F, term, <ref refid="group__sys-util_1gab9762d5128988f7f4f5d51213ea52025" kindref="member">LIST_DROP_EMPTY</ref>(__VA_ARGS__))	\
			/* plus a final terminator */			\
			__DEBRACKET term				\
		))</initializer>
        <briefdescription>
<para>Like <ref refid="group__sys-util_1ga278c8b7cbbea2f585e371d3568f3cb12" kindref="member">FOR_EACH()</ref>, but with a terminator instead of a separator, and drops empty elements from the argument list. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>sep</computeroutput> argument to <computeroutput><ref refid="group__sys-util_1ga278c8b7cbbea2f585e371d3568f3cb12" kindref="member">FOR_EACH(F, (sep), a, b)</ref></computeroutput> is a separator which is placed between calls to <computeroutput>F</computeroutput>, like this: <verbatim>FOR_EACH(F, (sep), a, b) // F(a) sep F(b)
                         //               ^^^ no sep here!
</verbatim> By contrast, the <computeroutput>term</computeroutput> argument to <computeroutput>FOR_EACH_NONEMPTY_TERM(F, (term), a, b)</computeroutput> is added after each time <computeroutput>F</computeroutput> appears in the expansion: <verbatim>FOR_EACH_NONEMPTY_TERM(F, (term), a, b) // F(a) term F(b) term
                                        //                ^^^^
</verbatim> Further, any empty elements are dropped: <verbatim>FOR_EACH_NONEMPTY_TERM(F, (term), a, EMPTY, b) // F(a) term F(b) term
</verbatim> This is more convenient in some cases, because <ref refid="group__sys-util_1ga24b3862161d725f5503b1bb08f4e339f" kindref="member">FOR_EACH_NONEMPTY_TERM()</ref> expands to nothing when given an empty argument list, and it&apos;s often cumbersome to write a macro <computeroutput>F</computeroutput> that does the right thing even when given an empty argument.</para>
<para>One example is when <computeroutput><bold>VA_ARGS</bold></computeroutput> may or may not be empty, and the results are embedded in a larger initializer: <verbatim>#define SQUARE(x) ((x)*(x))

int my_array[] = {
        FOR_EACH_NONEMPTY_TERM(SQUARE, (,), FOO(...))
        FOR_EACH_NONEMPTY_TERM(SQUARE, (,), BAR(...))
        FOR_EACH_NONEMPTY_TERM(SQUARE, (,), BAZ(...))
};
</verbatim> This is more convenient than:</para>
<para><orderedlist>
<listitem><para>figuring out whether the <computeroutput>FOO</computeroutput>, <computeroutput>BAR</computeroutput>, and <computeroutput>BAZ</computeroutput> expansions are empty and adding a comma manually (or not) between <ref refid="group__sys-util_1ga278c8b7cbbea2f585e371d3568f3cb12" kindref="member">FOR_EACH()</ref> calls</para>
</listitem><listitem><para>rewriting SQUARE so it reacts appropriately when &quot;x&quot; is empty (which would be necessary if e.g. <computeroutput>FOO</computeroutput> expands to nothing)</para>
</listitem></orderedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>Macro to invoke on each nonempty element of the variable arguments </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>Terminator (e.g. comma or semicolon) placed after each invocation of F. Must be in parentheses; this is required to enable providing a comma as separator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable argument list. The macro <computeroutput>F</computeroutput> is invoked as <computeroutput>F(element)</computeroutput> for each nonempty element in the list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="438" column="9" bodyfile="include/sys/util_macro.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga069f709e18eeafb8d276b5ff4fc09d31" prot="public" static="no">
        <name>FOR_EACH_IDX</name>
        <param><defname>F</defname></param>
        <param><defname>sep</defname></param>
        <param><defname>...</defname></param>
        <initializer>	Z_FOR_EACH_IDX(F, sep, <ref refid="group__sys-util_1ga58de032c2ed7b4094c447c512dfd3784" kindref="member">REVERSE_ARGS</ref>(__VA_ARGS__))</initializer>
        <briefdescription>
<para>Call macro <computeroutput>F</computeroutput> on each provided argument, with the argument&apos;s index as an additional parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>This is like <ref refid="group__sys-util_1ga278c8b7cbbea2f585e371d3568f3cb12" kindref="member">FOR_EACH()</ref>, except <computeroutput>F</computeroutput> should be a macro which takes two arguments: <computeroutput>F(index, variable_arg)</computeroutput>.</para>
<para>Example: <verbatim>#define F(idx, x) int a##idx = x
FOR_EACH_IDX(F, (;), 4, 5, 6);
</verbatim> This expands to: <verbatim>int a0 = 4;
int a1 = 5;
int a2 = 6;
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>Macro to invoke </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sep</parametername>
</parameternamelist>
<parameterdescription>
<para>Separator (e.g. comma or semicolon). Must be in parentheses; this is required to enable providing a comma as separator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable argument list. The macro <computeroutput>F</computeroutput> is invoked as <computeroutput>F(index, element)</computeroutput> for each element in the list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="475" column="9" bodyfile="include/sys/util_macro.h" bodystart="475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga1a2b2aa21d7cc37f33e6a62abd2ae340" prot="public" static="no">
        <name>FOR_EACH_FIXED_ARG</name>
        <param><defname>F</defname></param>
        <param><defname>sep</defname></param>
        <param><defname>fixed_arg</defname></param>
        <param><defname>...</defname></param>
        <initializer>	Z_FOR_EACH_FIXED_ARG(F, sep, fixed_arg, <ref refid="group__sys-util_1ga58de032c2ed7b4094c447c512dfd3784" kindref="member">REVERSE_ARGS</ref>(__VA_ARGS__))</initializer>
        <briefdescription>
<para>Call macro <computeroutput>F</computeroutput> on each provided argument, with an additional fixed argument as a parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>This is like <ref refid="group__sys-util_1ga278c8b7cbbea2f585e371d3568f3cb12" kindref="member">FOR_EACH()</ref>, except <computeroutput>F</computeroutput> should be a macro which takes two arguments: <computeroutput>F(variable_arg, fixed_arg)</computeroutput>.</para>
<para>Example: <verbatim>static void func(int val, void *dev);
FOR_EACH_FIXED_ARG(func, (;), dev, 4, 5, 6);
</verbatim> This expands to: <verbatim>func(4, dev);
func(5, dev);
func(6, dev);
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>Macro to invoke </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sep</parametername>
</parameternamelist>
<parameterdescription>
<para>Separator (e.g. comma or semicolon). Must be in parentheses; this is required to enable providing a comma as separator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fixed_arg</parametername>
</parameternamelist>
<parameterdescription>
<para>Fixed argument passed to <computeroutput>F</computeroutput> as the second macro parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable argument list. The macro <computeroutput>F</computeroutput> is invoked as <computeroutput>F(element, fixed_arg)</computeroutput> for each element in the list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="503" column="9" bodyfile="include/sys/util_macro.h" bodystart="503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga2ab7377f5493123ffd29ebd1286457a9" prot="public" static="no">
        <name>FOR_EACH_IDX_FIXED_ARG</name>
        <param><defname>F</defname></param>
        <param><defname>sep</defname></param>
        <param><defname>fixed_arg</defname></param>
        <param><defname>...</defname></param>
        <initializer>	Z_FOR_EACH_IDX_FIXED_ARG(F, sep, fixed_arg, <ref refid="group__sys-util_1ga58de032c2ed7b4094c447c512dfd3784" kindref="member">REVERSE_ARGS</ref>(__VA_ARGS__))</initializer>
        <briefdescription>
<para>Calls macro <computeroutput>F</computeroutput> for each variable argument with an index and fixed argument. </para>
        </briefdescription>
        <detaileddescription>
<para>This is like the combination of <ref refid="group__sys-util_1ga069f709e18eeafb8d276b5ff4fc09d31" kindref="member">FOR_EACH_IDX()</ref> with <ref refid="group__sys-util_1ga1a2b2aa21d7cc37f33e6a62abd2ae340" kindref="member">FOR_EACH_FIXED_ARG()</ref>.</para>
<para>Example: <verbatim>#define F(idx, x, fixed_arg) int fixed_arg##idx = x
FOR_EACH_IDX_FIXED_ARG(F, (;), a, 4, 5, 6);
</verbatim> This expands to: <verbatim>int a0 = 4;
int a1 = 5;
int a2 = 6;
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>Macro to invoke </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sep</parametername>
</parameternamelist>
<parameterdescription>
<para>Separator (e.g. comma or semicolon). Must be in parentheses; This is required to enable providing a comma as separator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fixed_arg</parametername>
</parameternamelist>
<parameterdescription>
<para>Fixed argument passed to <computeroutput>F</computeroutput> as the third macro parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable list of arguments. The macro <computeroutput>F</computeroutput> is invoked as <computeroutput>F(index, element, fixed_arg)</computeroutput> for each element in the list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="531" column="9" bodyfile="include/sys/util_macro.h" bodystart="531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga58de032c2ed7b4094c447c512dfd3784" prot="public" static="no">
        <name>REVERSE_ARGS</name>
        <param><defname>...</defname></param>
        <initializer>	Z_FOR_EACH_ENGINE(Z_FOR_EACH_EXEC, (,), Z_BYPASS, _, __VA_ARGS__)</initializer>
        <briefdescription>
<para>Reverse arguments order. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable argument list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="538" column="9" bodyfile="include/sys/util_macro.h" bodystart="538" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga8a0e9835e0a8f864ffc2359b9c419cc2" prot="public" static="no">
        <name>NUM_VA_ARGS_LESS_1</name>
        <param><defname>...</defname></param>
        <initializer>	<ref refid="util__internal_8h_1a70e3443886f63259dc12b14cc26c365f" kindref="member">NUM_VA_ARGS_LESS_1_IMPL</ref>(__VA_ARGS__, 63, 62, 61, \
	60, 59, 58, 57, 56, 55, 54, 53, 52, 51,		 \
	50, 49, 48, 47, 46, 45, 44, 43, 42, 41,		 \
	40, 39, 38, 37, 36, 35, 34, 33, 32, 31,		 \
	30, 29, 28, 27, 26, 25, 24, 23, 22, 21,		 \
	20, 19, 18, 17, 16, 15, 14, 13, 12, 11,		 \
	10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, ~)</initializer>
        <briefdescription>
<para>Number of arguments in the variable arguments list minus one. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>List of arguments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of variadic arguments in the argument list, minus one </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="547" column="9" bodyfile="include/sys/util_macro.h" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1gaf82371bd6bf317add5276fc6cbd66662" prot="public" static="no">
        <name>MACRO_MAP_CAT</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="util__internal_8h_1abe4f647ef2c1c706bc9d0d0e737e58bf" kindref="member">MACRO_MAP_CAT_</ref>(__VA_ARGS__)</initializer>
        <briefdescription>
<para>Mapping macro that pastes results together. </para>
        </briefdescription>
        <detaileddescription>
<para>This is similar to <ref refid="group__sys-util_1ga278c8b7cbbea2f585e371d3568f3cb12" kindref="member">FOR_EACH()</ref> in that it invokes a macro repeatedly on each element of <computeroutput><bold>VA_ARGS</bold></computeroutput>. However, unlike <ref refid="group__sys-util_1ga278c8b7cbbea2f585e371d3568f3cb12" kindref="member">FOR_EACH()</ref>, <ref refid="group__sys-util_1gaf82371bd6bf317add5276fc6cbd66662" kindref="member">MACRO_MAP_CAT()</ref> pastes the results together into a single token.</para>
<para>For example, with this macro FOO: <verbatim>#define FOO(x) item_##x##_
</verbatim> <computeroutput><ref refid="group__sys-util_1gaf82371bd6bf317add5276fc6cbd66662" kindref="member">MACRO_MAP_CAT(FOO, a, b, c)</ref>,</computeroutput> expands to the token: <verbatim>item_a_item_b_item_c_
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Macro to expand on each argument, followed by its arguments. (The macro should take exactly one argument.) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The results of expanding the macro on each argument, all pasted together </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="576" column="9" bodyfile="include/sys/util_macro.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sys-util_1ga58eba1f911e21da46b8beea264934d55" prot="public" static="no">
        <name>MACRO_MAP_CAT_N</name>
        <param><defname>N</defname></param>
        <param><defname>...</defname></param>
        <initializer><ref refid="util__internal_8h_1a72d29784bb0a030942e2c6eb2f9d42b9" kindref="member">MACRO_MAP_CAT_N_</ref>(N, __VA_ARGS__)</initializer>
        <briefdescription>
<para>Mapping macro that pastes a fixed number of results together. </para>
        </briefdescription>
        <detaileddescription>
<para>Similar to <ref refid="group__sys-util_1gaf82371bd6bf317add5276fc6cbd66662" kindref="member">MACRO_MAP_CAT()</ref>, but expects a fixed number of arguments. If more arguments are given than are expected, the rest are ignored.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of arguments to map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Macro to expand on each argument, followed by its arguments. (The macro should take exactly one argument.) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The results of expanding the macro on each argument, all pasted together </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/util_macro.h" line="591" column="9" bodyfile="include/sys/util_macro.h" bodystart="591" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Macro utilities. </para>
    </briefdescription>
    <detaileddescription>
<para>Macro utilities are the public interface for C/C++ code and device tree related implementation. In general, C/C++ will include &lt;<ref refid="util_8h" kindref="compound">sys/util.h</ref>&gt; instead this file directly. For device tree implementation, this file should be include instead &lt;<ref refid="util__internal_8h" kindref="compound">sys/util_internal.h</ref>&gt; </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2011-2014,<sp/>Wind<sp/>River<sp/>Systems,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_SYS_UTIL_MACROS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_SYS_UTIL_MACROS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>Most<sp/>of<sp/>the<sp/>eldritch<sp/>implementation<sp/>details<sp/>for<sp/>all<sp/>the<sp/>macrobatics</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>below<sp/>(APIs<sp/>like<sp/>IS_ENABLED(),<sp/>COND_CODE_1(),<sp/>etc.)<sp/>are<sp/>hidden<sp/>away</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>in<sp/>this<sp/>file.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="util__internal_8h" kindref="compound">sys/util_internal.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_ASMLANGUAGE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BIT(n)<sp/><sp/>(1<sp/>&lt;&lt;<sp/>(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="group__sys-util_1ga3a8ea58898cb58fc96013383d39f482c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BIT(n)<sp/><sp/>(1UL<sp/>&lt;&lt;<sp/>(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="group__sys-util_1gacfdade52af3ced2d87472cec47d14a76" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BIT64(_n)<sp/>(1ULL<sp/>&lt;&lt;<sp/>(_n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group__sys-util_1ga23a900e882ecb48455e70f01fd45b246" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WRITE_BIT(var,<sp/>bit,<sp/>set)<sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((var)<sp/>=<sp/>(set)<sp/>?<sp/>((var)<sp/>|<sp/>BIT(bit))<sp/>:<sp/>((var)<sp/>&amp;<sp/>~BIT(bit)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="group__sys-util_1ga3c12c6d36ad0aa481a3436923d21f4f8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BIT_MASK(n)<sp/>(BIT(n)<sp/>-<sp/>1UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="group__sys-util_1ga1a138896caafcb2429a6483ea7412d12" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BIT64_MASK(n)<sp/>(BIT64(n)<sp/>-<sp/>1ULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_ENABLED(config_macro)<sp/>Z_IS_ENABLED1(config_macro)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>INTERNAL:<sp/>the<sp/>first<sp/>pass<sp/>above<sp/>is<sp/>just<sp/>to<sp/>expand<sp/>any<sp/>existing</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>macros,<sp/>we<sp/>need<sp/>the<sp/>macro<sp/>value<sp/>to<sp/>be<sp/>e.g.<sp/>a<sp/>literal<sp/>&quot;1&quot;<sp/>at</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>expansion<sp/>time<sp/>in<sp/>the<sp/>next<sp/>macro,<sp/>not<sp/>&quot;(1)&quot;,<sp/>etc...<sp/>Standard</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>recursive<sp/>expansion<sp/>does<sp/>not<sp/>work.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="group__sys-util_1ga358bc3e7669c860a98839a51cd526b20" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COND_CODE_1(_flag,<sp/>_if_1_code,<sp/>_else_code)<sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_COND_CODE_1(_flag,<sp/>_if_1_code,<sp/>_else_code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="group__sys-util_1ga5483ea38af79bc6c4509936288705377" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COND_CODE_0(_flag,<sp/>_if_0_code,<sp/>_else_code)<sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_COND_CODE_0(_flag,<sp/>_if_0_code,<sp/>_else_code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="group__sys-util_1gae67ffe50e848951dbde309ed569ea925" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IF_ENABLED(_flag,<sp/>_code)<sp/>\</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COND_CODE_1(_flag,<sp/>_code,<sp/>())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="group__sys-util_1gab9487eea703d51cb1f235432dab4a1c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_EMPTY(...)<sp/>Z_IS_EMPTY_(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="group__sys-util_1gab9762d5128988f7f4f5d51213ea52025" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_DROP_EMPTY(...)<sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_LIST_DROP_FIRST(FOR_EACH(Z_LIST_NO_EMPTIES,<sp/>(),<sp/>__VA_ARGS__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="group__sys-util_1ga2b7cf2a3641be7b89138615764d60ba3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMPTY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="group__sys-util_1gaaed493c6115c04272077a0f3854b9a83" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IDENTITY(V)<sp/>V</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="group__sys-util_1gabbe04a4d59a495b2b86196304b937ec6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_ARG_N(N,<sp/>...)<sp/>Z_GET_ARG_##N(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="group__sys-util_1ga01e1dc9b92e5be6895528d1da5f0c88b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_ARGS_LESS_N(N,<sp/>...)<sp/>Z_GET_ARGS_LESS_##N(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="group__sys-util_1ga50cfdf948906976562c3f0625c84c2b2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UTIL_OR(a,<sp/>b)<sp/>COND_CODE_1(UTIL_BOOL(a),<sp/>(a),<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="group__sys-util_1ga26179b776b4a03143e8be1612ef6d853" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UTIL_AND(a,<sp/>b)<sp/>COND_CODE_1(UTIL_BOOL(a),<sp/>(b),<sp/>(0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="group__sys-util_1ga31079a877f7990c552cbfaf10225e37a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UTIL_LISTIFY(LEN,<sp/>F,<sp/>...)<sp/>UTIL_CAT(Z_UTIL_LISTIFY_,<sp/>LEN)(F,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="group__sys-util_1ga278c8b7cbbea2f585e371d3568f3cb12" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FOR_EACH(F,<sp/>sep,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_FOR_EACH(F,<sp/>sep,<sp/>REVERSE_ARGS(__VA_ARGS__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="group__sys-util_1ga24b3862161d725f5503b1bb08f4e339f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FOR_EACH_NONEMPTY_TERM(F,<sp/>term,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="439"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COND_CODE_0(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>are<sp/>there<sp/>zero<sp/>non-empty<sp/>arguments<sp/>?<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="441"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_VA_ARGS_LESS_1(LIST_DROP_EMPTY(__VA_ARGS__,<sp/>_)),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="442"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>so,<sp/>expand<sp/>to<sp/>nothing<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="443"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="444"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otherwise,<sp/>expand<sp/>to:<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="445"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="comment">/*<sp/>FOR_EACH()<sp/>on<sp/>nonempty<sp/>elements,<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="446"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FOR_EACH(F,<sp/>term,<sp/>LIST_DROP_EMPTY(__VA_ARGS__))<sp/>\</highlight></codeline>
<codeline lineno="447"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>plus<sp/>a<sp/>final<sp/>terminator<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="448"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__DEBRACKET<sp/>term<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="449"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="475" refid="group__sys-util_1ga069f709e18eeafb8d276b5ff4fc09d31" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FOR_EACH_IDX(F,<sp/>sep,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="476"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_FOR_EACH_IDX(F,<sp/>sep,<sp/>REVERSE_ARGS(__VA_ARGS__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="group__sys-util_1ga1a2b2aa21d7cc37f33e6a62abd2ae340" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FOR_EACH_FIXED_ARG(F,<sp/>sep,<sp/>fixed_arg,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="504"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_FOR_EACH_FIXED_ARG(F,<sp/>sep,<sp/>fixed_arg,<sp/>REVERSE_ARGS(__VA_ARGS__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="531" refid="group__sys-util_1ga2ab7377f5493123ffd29ebd1286457a9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FOR_EACH_IDX_FIXED_ARG(F,<sp/>sep,<sp/>fixed_arg,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="532"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_FOR_EACH_IDX_FIXED_ARG(F,<sp/>sep,<sp/>fixed_arg,<sp/>REVERSE_ARGS(__VA_ARGS__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="group__sys-util_1ga58de032c2ed7b4094c447c512dfd3784" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REVERSE_ARGS(...)<sp/>\</highlight></codeline>
<codeline lineno="539"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_FOR_EACH_ENGINE(Z_FOR_EACH_EXEC,<sp/>(,),<sp/>Z_BYPASS,<sp/>_,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="group__sys-util_1ga8a0e9835e0a8f864ffc2359b9c419cc2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_VA_ARGS_LESS_1(...)<sp/>\</highlight></codeline>
<codeline lineno="548"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_VA_ARGS_LESS_1_IMPL(__VA_ARGS__,<sp/>63,<sp/>62,<sp/>61,<sp/>\</highlight></codeline>
<codeline lineno="549"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>60,<sp/>59,<sp/>58,<sp/>57,<sp/>56,<sp/>55,<sp/>54,<sp/>53,<sp/>52,<sp/>51,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="550"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>50,<sp/>49,<sp/>48,<sp/>47,<sp/>46,<sp/>45,<sp/>44,<sp/>43,<sp/>42,<sp/>41,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="551"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>40,<sp/>39,<sp/>38,<sp/>37,<sp/>36,<sp/>35,<sp/>34,<sp/>33,<sp/>32,<sp/>31,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="552"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>30,<sp/>29,<sp/>28,<sp/>27,<sp/>26,<sp/>25,<sp/>24,<sp/>23,<sp/>22,<sp/>21,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="553"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20,<sp/>19,<sp/>18,<sp/>17,<sp/>16,<sp/>15,<sp/>14,<sp/>13,<sp/>12,<sp/>11,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="554"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10,<sp/>9,<sp/>8,<sp/>7,<sp/>6,<sp/>5,<sp/>4,<sp/>3,<sp/>2,<sp/>1,<sp/>0,<sp/>~)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="576" refid="group__sys-util_1gaf82371bd6bf317add5276fc6cbd66662" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MACRO_MAP_CAT(...)<sp/>MACRO_MAP_CAT_(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="591" refid="group__sys-util_1ga58eba1f911e21da46b8beea264934d55" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MACRO_MAP_CAT_N(N,<sp/>...)<sp/>MACRO_MAP_CAT_N_(N,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_SYS_UTIL_MACROS_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/sys/util_macro.h"/>
  </compounddef>
</doxygen>
