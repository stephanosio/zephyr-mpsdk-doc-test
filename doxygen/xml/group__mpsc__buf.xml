<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__mpsc__buf" kind="group">
    <compoundname>mpsc_buf</compoundname>
    <title>MPSC (Multi producer, single consumer) packet buffer API</title>
    <innerclass refid="structmpsc__pbuf__buffer" prot="public">mpsc_pbuf_buffer</innerclass>
    <innerclass refid="structmpsc__pbuf__buffer__config" prot="public">mpsc_pbuf_buffer_config</innerclass>
    <innergroup refid="group__mpsc__packet">MPSC (Multi producer, single consumer) packet header</innergroup>
    <innergroup refid="group__MPSC__PBUF__FLAGS">MPSC packet buffer flags</innergroup>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__mpsc__buf_1ga00b0a1839bc466c623928a29921d76b8" prot="public" static="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref>(*</type>
        <definition>typedef uint32_t(* mpsc_pbuf_get_wlen) (const union mpsc_pbuf_generic *packet)</definition>
        <argsstring>)(const union mpsc_pbuf_generic *packet)</argsstring>
        <name>mpsc_pbuf_get_wlen</name>
        <briefdescription>
<para>Callback prototype for getting length of a packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>packet</parametername>
</parameternamelist>
<parameterdescription>
<para>User packet.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Size of the packet in 32 bit words. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/mpsc_pbuf.h" line="75" column="9" bodyfile="include/sys/mpsc_pbuf.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__mpsc__buf_1ga87f3795770880fb552316a8cac7b85ae" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* mpsc_pbuf_notify_drop) (const struct mpsc_pbuf_buffer *buffer, const union mpsc_pbuf_generic *packet)</definition>
        <argsstring>)(const struct mpsc_pbuf_buffer *buffer, const union mpsc_pbuf_generic *packet)</argsstring>
        <name>mpsc_pbuf_notify_drop</name>
        <briefdescription>
<para>Callback called when packet is dropped. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet buffer.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>packet</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet that is being dropped. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/mpsc_pbuf.h" line="83" column="9" bodyfile="include/sys/mpsc_pbuf.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__mpsc__buf_1ga5152b9ae9c0da98fde3f8b73afac52b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mpsc_pbuf_init</definition>
        <argsstring>(struct mpsc_pbuf_buffer *buffer, const struct mpsc_pbuf_buffer_config *config)</argsstring>
        <name>mpsc_pbuf_init</name>
        <param>
          <type>struct <ref refid="structmpsc__pbuf__buffer" kindref="compound">mpsc_pbuf_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const struct <ref refid="structmpsc__pbuf__buffer__config" kindref="compound">mpsc_pbuf_buffer_config</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Initnialize a packet buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/mpsc_pbuf.h" line="146" column="6" declfile="include/sys/mpsc_pbuf.h" declline="146" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__mpsc__buf_1ga398dd24464a5da03e80a3fc7d728dddd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>union <ref refid="unionmpsc__pbuf__generic" kindref="compound">mpsc_pbuf_generic</ref> *</type>
        <definition>union mpsc_pbuf_generic * mpsc_pbuf_alloc</definition>
        <argsstring>(struct mpsc_pbuf_buffer *buffer, size_t wlen, k_timeout_t timeout)</argsstring>
        <name>mpsc_pbuf_alloc</name>
        <param>
          <type>struct <ref refid="structmpsc__pbuf__buffer" kindref="compound">mpsc_pbuf_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>wlen</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Allocate a packet. </para>
        </briefdescription>
        <detaileddescription>
<para>If a buffer is configured to overwrite mode then if there is no space to allocated a new buffer, oldest packets are dropped. Otherwise allocation fails and null pointer is returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of words to allocate.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout. If called from thread context it will pend for given timeout if packet cannot be allocated before dropping the oldest or returning null.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the allocated space or null if it cannot be allocated. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/mpsc_pbuf.h" line="165" column="24" declfile="include/sys/mpsc_pbuf.h" declline="165" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__mpsc__buf_1gaa537b9e73ca4fda26a92dc56b960270e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mpsc_pbuf_commit</definition>
        <argsstring>(struct mpsc_pbuf_buffer *buffer, union mpsc_pbuf_generic *packet)</argsstring>
        <name>mpsc_pbuf_commit</name>
        <param>
          <type>struct <ref refid="structmpsc__pbuf__buffer" kindref="compound">mpsc_pbuf_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>union <ref refid="unionmpsc__pbuf__generic" kindref="compound">mpsc_pbuf_generic</ref> *</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
<para>Commit a packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>packet</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a packet allocated by <ref refid="group__mpsc__buf_1ga398dd24464a5da03e80a3fc7d728dddd" kindref="member">mpsc_pbuf_alloc</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/mpsc_pbuf.h" line="174" column="6" declfile="include/sys/mpsc_pbuf.h" declline="174" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__mpsc__buf_1gabc366638ec262c7ec41b320f0dcc6a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mpsc_pbuf_put_word</definition>
        <argsstring>(struct mpsc_pbuf_buffer *buffer, const union mpsc_pbuf_generic word)</argsstring>
        <name>mpsc_pbuf_put_word</name>
        <param>
          <type>struct <ref refid="structmpsc__pbuf__buffer" kindref="compound">mpsc_pbuf_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const union <ref refid="unionmpsc__pbuf__generic" kindref="compound">mpsc_pbuf_generic</ref></type>
          <declname>word</declname>
        </param>
        <briefdescription>
<para>Put single word packet into a buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Function is optimized for storing a packet which fit into a single word. Note that 2 bits of that word is used by the buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>word</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet content consisting of MPSC_PBUF_HDR with valid bit set and data on remaining bits. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/mpsc_pbuf.h" line="187" column="6" declfile="include/sys/mpsc_pbuf.h" declline="187" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__mpsc__buf_1ga7f4df1864fad89ec9557b6f0e18c9589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mpsc_pbuf_put_word_ext</definition>
        <argsstring>(struct mpsc_pbuf_buffer *buffer, const union mpsc_pbuf_generic word, const void *data)</argsstring>
        <name>mpsc_pbuf_put_word_ext</name>
        <param>
          <type>struct <ref refid="structmpsc__pbuf__buffer" kindref="compound">mpsc_pbuf_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const union <ref refid="unionmpsc__pbuf__generic" kindref="compound">mpsc_pbuf_generic</ref></type>
          <declname>word</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Put a packet consisting of a word and a pointer.<itemizedlist>
<listitem><para>Function is optimized for storing packet consisting of a word and a pointer. Note that 2 bits of a first word is used by the buffer. </para>
</listitem></itemizedlist>
</para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>word</parametername>
</parameternamelist>
<parameterdescription>
<para>First word of a packet consisting of MPSC_PBUF_HDR with valid bit set and data on remaining bits.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>User data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/mpsc_pbuf.h" line="202" column="6" declfile="include/sys/mpsc_pbuf.h" declline="202" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__mpsc__buf_1ga7b52261bac98a7a0c6bae2a838f23316" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mpsc_pbuf_put_data</definition>
        <argsstring>(struct mpsc_pbuf_buffer *buffer, const uint32_t *data, size_t wlen)</argsstring>
        <name>mpsc_pbuf_put_data</name>
        <param>
          <type>struct <ref refid="structmpsc__pbuf__buffer" kindref="compound">mpsc_pbuf_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>wlen</declname>
        </param>
        <briefdescription>
<para>Put a packet into a buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Copy data into a buffer. Note that 2 bits of a first word is used by the buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>First word of data must contain MPSC_PBUF_HDR with valid bit set.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet size in words. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/mpsc_pbuf.h" line="217" column="6" declfile="include/sys/mpsc_pbuf.h" declline="217" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__mpsc__buf_1ga9642d07deca00bc25cea2ae253ec7d76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const union <ref refid="unionmpsc__pbuf__generic" kindref="compound">mpsc_pbuf_generic</ref> *</type>
        <definition>const union mpsc_pbuf_generic * mpsc_pbuf_claim</definition>
        <argsstring>(struct mpsc_pbuf_buffer *buffer)</argsstring>
        <name>mpsc_pbuf_claim</name>
        <param>
          <type>struct <ref refid="structmpsc__pbuf__buffer" kindref="compound">mpsc_pbuf_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Claim the first pending packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the claimed packet or null if none available. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/mpsc_pbuf.h" line="226" column="30" declfile="include/sys/mpsc_pbuf.h" declline="226" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="group__mpsc__buf_1ga54f8705fa262a6cda75f1feecde5e57e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mpsc_pbuf_free</definition>
        <argsstring>(struct mpsc_pbuf_buffer *buffer, const union mpsc_pbuf_generic *packet)</argsstring>
        <name>mpsc_pbuf_free</name>
        <param>
          <type>struct <ref refid="structmpsc__pbuf__buffer" kindref="compound">mpsc_pbuf_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const union <ref refid="unionmpsc__pbuf__generic" kindref="compound">mpsc_pbuf_generic</ref> *</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
<para>Free a packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>packet</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/mpsc_pbuf.h" line="234" column="6" declfile="include/sys/mpsc_pbuf.h" declline="234" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__mpsc__buf_1ga2c8ac7f489fba611a2bca25bb2bbb5fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool mpsc_pbuf_is_pending</definition>
        <argsstring>(struct mpsc_pbuf_buffer *buffer)</argsstring>
        <name>mpsc_pbuf_is_pending</name>
        <param>
          <type>struct <ref refid="structmpsc__pbuf__buffer" kindref="compound">mpsc_pbuf_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Check if there are any message pending. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if pending. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if no message is pending. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/mpsc_pbuf.h" line="244" column="6" declfile="include/sys/mpsc_pbuf.h" declline="244" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__mpsc__buf_1ga73be0efc020500865cfa07c45494f4a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mpsc_pbuf_get_utilization</definition>
        <argsstring>(struct mpsc_pbuf_buffer *buffer, uint32_t *size, uint32_t *now)</argsstring>
        <name>mpsc_pbuf_get_utilization</name>
        <param>
          <type>struct <ref refid="structmpsc__pbuf__buffer" kindref="compound">mpsc_pbuf_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> *</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> *</type>
          <declname>now</declname>
        </param>
        <briefdescription>
<para>Get current memory utilization. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer size in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">now</parametername>
</parameternamelist>
<parameterdescription>
<para>Current buffer usage in bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/mpsc_pbuf.h" line="252" column="6" declfile="include/sys/mpsc_pbuf.h" declline="252" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__mpsc__buf_1ga8ee7fd071effaca18797862d423279d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpsc_pbuf_get_max_utilization</definition>
        <argsstring>(struct mpsc_pbuf_buffer *buffer, uint32_t *max)</argsstring>
        <name>mpsc_pbuf_get_max_utilization</name>
        <param>
          <type>struct <ref refid="structmpsc__pbuf__buffer" kindref="compound">mpsc_pbuf_buffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> *</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Get maximum memory utilization. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">max</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum buffer usage in bytes.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
retval 0 if utilization data collected successfully. retval -ENOTSUP if Collecting utilization data is not supported. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/mpsc_pbuf.h" line="263" column="5" declfile="include/sys/mpsc_pbuf.h" declline="263" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Multi producer, single consumer packet buffer API. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
