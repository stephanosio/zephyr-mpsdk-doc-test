<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="mics_8h" kind="file" language="C++">
    <compoundname>mics.h</compoundname>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includes refid="aics_8h" local="no">bluetooth/audio/aics.h</includes>
    <incdepgraph>
      <node id="17">
        <label>bluetooth/addr.h</label>
        <link refid="addr_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>bluetooth/audio/aics.h</label>
        <link refid="aics_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/bluetooth/audio/mics.h</label>
        <link refid="mics_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>bluetooth/bluetooth.h</label>
        <link refid="bluetooth_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>bluetooth/crypto.h</label>
        <link refid="crypto_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>bluetooth/gap.h</label>
        <link refid="gap_8h"/>
      </node>
      <node id="14">
        <label>net/buf.h</label>
        <link refid="net_2buf_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="11">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="2">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="4">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="8">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>stdarg.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="15">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structbt__mics__register__param" prot="public">bt_mics_register_param</innerclass>
    <innerclass refid="structbt__mics__included" prot="public">bt_mics_included</innerclass>
    <innerclass refid="structbt__mics__cb" prot="public">bt_mics_cb</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__gatt__mics_1ga8ca2e0d6b6d21238e7624196cb7219ce" prot="public" static="no">
        <name>BT_MICS_AICS_CNT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="32" column="10" bodyfile="include/bluetooth/audio/mics.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__mics_1ga5b76ad207dab6c33c9d68644e1e73e7d" prot="public" static="no">
        <name>BT_MICS_ERR_MUTE_DISABLED</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Application error codes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="36" column="9" bodyfile="include/bluetooth/audio/mics.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__mics_1gabd9e5f77b097d2aa598fb8b5393e353f" prot="public" static="no">
        <name>BT_MICS_ERR_VAL_OUT_OF_RANGE</name>
        <initializer>0x81</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="37" column="9" bodyfile="include/bluetooth/audio/mics.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__mics_1ga4e1da147c4efde1ecd6ebff52718bf70" prot="public" static="no">
        <name>BT_MICS_MUTE_UNMUTED</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Microphone Input Control Service mute states </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="40" column="9" bodyfile="include/bluetooth/audio/mics.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__mics_1gaf86ba12049d5050e6501c0b97ad47bfa" prot="public" static="no">
        <name>BT_MICS_MUTE_MUTED</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="41" column="9" bodyfile="include/bluetooth/audio/mics.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__gatt__mics_1gacb41137ba21036cffb43eed9fa216154" prot="public" static="no">
        <name>BT_MICS_MUTE_DISABLED</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="42" column="9" bodyfile="include/bluetooth/audio/mics.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__bt__gatt__mics_1ga486f13a3efdf14a1020f07697cb47f8a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mics_discover_cb) (struct bt_mics *mics, int err, uint8_t aics_count)</definition>
        <argsstring>)(struct bt_mics *mics, int err, uint8_t aics_count)</argsstring>
        <name>bt_mics_discover_cb</name>
        <briefdescription>
<para>Callback function for <ref refid="group__bt__gatt__mics_1gac77bbb79833c922bd1dc49ebb28bff29" kindref="member">bt_mics_discover</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This callback is only used for the client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aics_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of Audio Input Control Service instances on peer device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="123" column="9" bodyfile="include/bluetooth/audio/mics.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mics_1ga4f4737b6e78d8d62f31fb318df78777f" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mics_mute_read_cb) (struct bt_mics *mics, int err, uint8_t mute)</definition>
        <argsstring>)(struct bt_mics *mics, int err, uint8_t mute)</argsstring>
        <name>bt_mics_mute_read_cb</name>
        <briefdescription>
<para>Callback function for Microphone Input Control Service mute. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the value is read, or if the value is changed by either the server or client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail. For notifications, this will always be 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mute</parametername>
</parameternamelist>
<parameterdescription>
<para>The mute setting of the Microphone Input Control Service. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="137" column="9" bodyfile="include/bluetooth/audio/mics.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__gatt__mics_1ga3ac4229e291dae17d9ee827f1a6f5744" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_mics_mute_write_cb) (struct bt_mics *mics, int err)</definition>
        <argsstring>)(struct bt_mics *mics, int err)</argsstring>
        <name>bt_mics_mute_write_cb</name>
        <briefdescription>
<para>Callback function for Microphone Input Control Service mute/unmute. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or errno on fail. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="146" column="9" bodyfile="include/bluetooth/audio/mics.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__gatt__mics_1ga1dae0b1b25d72a235741e94eb3ef734b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_register</definition>
        <argsstring>(struct bt_mics_register_param *param, struct bt_mics **mics)</argsstring>
        <name>bt_mics_register</name>
        <param>
          <type>struct <ref refid="structbt__mics__register__param" kindref="compound">bt_mics_register_param</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>struct bt_mics **</type>
          <declname>mics</declname>
        </param>
        <briefdescription>
<para>Initialize the Microphone Input Control Service. </para>
        </briefdescription>
        <detaileddescription>
<para>This will enable the service and make it discoverable by clients. This can only be done as the server.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an initialization structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the registered Microphone Input Control Service. This will still be valid if the return value is -EALREADY.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="82" column="5" declfile="include/bluetooth/audio/mics.h" declline="82" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga7dbc4370d1ebc7fb662088745aefa002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_included_get</definition>
        <argsstring>(struct bt_mics *mics, struct bt_mics_included *included)</argsstring>
        <name>bt_mics_included_get</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mics__included" kindref="compound">bt_mics_included</ref> *</type>
          <declname>included</declname>
        </param>
        <briefdescription>
<para>Get Microphone Input Control Service included services. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a pointer to a struct that contains information about the Microphone Input Control Service included services instances, such as pointers to the Audio Input Control Service instances.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">included</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the result in.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="97" column="5" declfile="include/bluetooth/audio/mics.h" declline="97" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga25a2c10db4fc277052a36bf025b14f67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_client_conn_get</definition>
        <argsstring>(const struct bt_mics *mics, struct bt_conn **conn)</argsstring>
        <name>bt_mics_client_conn_get</name>
        <param>
          <type>const struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_conn **</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Get the connection pointer of a client instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the Bluetooth connection pointer of a Microphone Input Control Service client instance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service client instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="111" column="5" declfile="include/bluetooth/audio/mics.h" declline="111" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1gac77bbb79833c922bd1dc49ebb28bff29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_discover</definition>
        <argsstring>(struct bt_conn *conn, struct bt_mics **mics)</argsstring>
        <name>bt_mics_discover</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct bt_mics **</type>
          <declname>mics</declname>
        </param>
        <briefdescription>
<para>Discover Microphone Input Control Service. </para>
        </briefdescription>
        <detaileddescription>
<para>This will start a GATT discovery and setup handles and subscriptions. This shall be called once before any other actions can be executed for the peer device, and the <ref refid="group__bt__gatt__mics_1ga486f13a3efdf14a1020f07697cb47f8a" kindref="member">bt_mics_discover_cb</ref> callback will notify when it is possible to start remote operations.</para>
<para>This shall only be done as the client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection to initialize the profile for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Valid remote instance object on success.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="176" column="5" declfile="include/bluetooth/audio/mics.h" declline="176" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1gaa4991366e1a39421ab44d557cf3b7bb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_unmute</definition>
        <argsstring>(struct bt_mics *mics)</argsstring>
        <name>bt_mics_unmute</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <briefdescription>
<para>Unmute the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="185" column="5" declfile="include/bluetooth/audio/mics.h" declline="185" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga8f8172c232a75f79d863abe3ec2054fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_mute</definition>
        <argsstring>(struct bt_mics *mics)</argsstring>
        <name>bt_mics_mute</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <briefdescription>
<para>Mute the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="194" column="5" declfile="include/bluetooth/audio/mics.h" declline="194" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga47bf9b166a1f6c7c2e13e177f8d79f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_mute_disable</definition>
        <argsstring>(struct bt_mics *mics)</argsstring>
        <name>bt_mics_mute_disable</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <briefdescription>
<para>Disable the mute functionality. </para>
        </briefdescription>
        <detaileddescription>
<para>Can be reenabled by called <ref refid="group__bt__gatt__mics_1ga8f8172c232a75f79d863abe3ec2054fb" kindref="member">bt_mics_mute</ref> or <ref refid="group__bt__gatt__mics_1gaa4991366e1a39421ab44d557cf3b7bb8" kindref="member">bt_mics_unmute</ref>. This can only be done as the server.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="206" column="5" declfile="include/bluetooth/audio/mics.h" declline="206" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga3dfa790997656d9ec654a7c72b82c3a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_mute_get</definition>
        <argsstring>(struct bt_mics *mics)</argsstring>
        <name>bt_mics_mute_get</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <briefdescription>
<para>Read the mute state of a Microphone Input Control Service. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="215" column="5" declfile="include/bluetooth/audio/mics.h" declline="215" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga11412629e7e82b18514ae701fca28025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_state_get</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_state_get</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Audio Input Control Service input state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="225" column="5" declfile="include/bluetooth/audio/mics.h" declline="225" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga6569fd2385d849aebb698a23c1303593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_gain_setting_get</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_gain_setting_get</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Audio Input Control Service gain settings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="235" column="5" declfile="include/bluetooth/audio/mics.h" declline="235" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1gafd6ebff3fd2511fbde80ee0e3d2c0963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_type_get</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_type_get</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Audio Input Control Service input type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="245" column="5" declfile="include/bluetooth/audio/mics.h" declline="245" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga92af4462af4aea925835c67f6998ab0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_status_get</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_status_get</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Audio Input Control Service input status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="255" column="5" declfile="include/bluetooth/audio/mics.h" declline="255" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga0bf86be1e9765798a82dcffbb25895a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_unmute</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_unmute</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Unmute the Audio Input Control Service input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="265" column="5" declfile="include/bluetooth/audio/mics.h" declline="265" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1gab6f3b18964e38149dc3df30fd8c85500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_mute</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_mute</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Mute the Audio Input Control Service input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="275" column="5" declfile="include/bluetooth/audio/mics.h" declline="275" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga7e1372a29687ad265b1aff043f573fe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_manual_gain_set</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_manual_gain_set</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Set Audio Input Control Service gain mode to manual. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="285" column="5" declfile="include/bluetooth/audio/mics.h" declline="285" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1gab1ac1a46f77ca7b45a81ca10315eeb91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_automatic_gain_set</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_automatic_gain_set</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Set Audio Input Control Service gain mode to automatic. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="295" column="5" declfile="include/bluetooth/audio/mics.h" declline="295" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1gaf9e4b7cc76729bb6fd57c7dd99469942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_gain_set</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst, int8_t gain)</argsstring>
        <name>bt_mics_aics_gain_set</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref></type>
          <declname>gain</declname>
        </param>
        <briefdescription>
<para>Set Audio Input Control Service input gain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gain</parametername>
</parameternamelist>
<parameterdescription>
<para>The gain in dB to set (-128 to 127).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="306" column="5" declfile="include/bluetooth/audio/mics.h" declline="306" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga706550da73522ff57dd6ecc84dfd3f8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_description_get</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_description_get</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Read the Audio Input Control Service description. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="317" column="5" declfile="include/bluetooth/audio/mics.h" declline="317" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1gaccbd3981a8dced63eb3380abc76ce396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_description_set</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst, const char *description)</argsstring>
        <name>bt_mics_aics_description_set</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>description</declname>
        </param>
        <briefdescription>
<para>Set the Audio Input Control Service description. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>The description to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, GATT error value on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="328" column="5" declfile="include/bluetooth/audio/mics.h" declline="328" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga78f7df2763fc8942173f64eaa5ba7b6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_deactivate</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_deactivate</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Deactivates a Audio Input Control Service instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Audio Input Control Services are activated by default, but this will allow the server to deactivate a Audio Input Control Service. This can only be done as the server.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="343" column="5" declfile="include/bluetooth/audio/mics.h" declline="343" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1ga008fe480ea99fd1e1be92c66d3640128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_aics_activate</definition>
        <argsstring>(struct bt_mics *mics, struct bt_aics *inst)</argsstring>
        <name>bt_mics_aics_activate</name>
        <param>
          <type>struct bt_mics *</type>
          <declname>mics</declname>
        </param>
        <param>
          <type>struct bt_aics *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Activates a Audio Input Control Service instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Audio Input Control Services are activated by default, but this will allow the server to reactivate a Audio Input Control Service instance after it has been deactivated with <ref refid="group__bt__gatt__mics_1ga78f7df2763fc8942173f64eaa5ba7b6e" kindref="member">bt_mics_aics_deactivate</ref>. This can only be done as the server.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mics</parametername>
</parameternamelist>
<parameterdescription>
<para>Microphone Input Control Service instance pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Audio Input Control Service instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="358" column="5" declfile="include/bluetooth/audio/mics.h" declline="358" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__mics_1gae62517af0f5b45ca6b9242dbab532f50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mics_client_cb_register</definition>
        <argsstring>(struct bt_mics_cb *cb)</argsstring>
        <name>bt_mics_client_cb_register</name>
        <param>
          <type>struct <ref refid="structbt__mics__cb" kindref="compound">bt_mics_cb</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Registers the callbacks used by Microphone Input Control Service client. </para>
        </briefdescription>
        <detaileddescription>
<para>This can only be done as the client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/mics.h" line="369" column="5" declfile="include/bluetooth/audio/mics.h" declline="369" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_BLUETOOTH_SERVICES_MICS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_BLUETOOTH_SERVICES_MICS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="aics_8h" kindref="compound">bluetooth/audio/aics.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_BT_MICS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MICS_AICS_CNT<sp/>CONFIG_BT_MICS_AICS_INSTANCE_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="group__bt__gatt__mics_1ga8ca2e0d6b6d21238e7624196cb7219ce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MICS_AICS_CNT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_BT_MICS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="group__bt__gatt__mics_1ga5b76ad207dab6c33c9d68644e1e73e7d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MICS_ERR_MUTE_DISABLED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="group__bt__gatt__mics_1gabd9e5f77b097d2aa598fb8b5393e353f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MICS_ERR_VAL_OUT_OF_RANGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x81</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="group__bt__gatt__mics_1ga4e1da147c4efde1ecd6ebff52718bf70" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MICS_MUTE_UNMUTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="group__bt__gatt__mics_1gaf86ba12049d5050e6501c0b97ad47bfa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MICS_MUTE_MUTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="group__bt__gatt__mics_1gacb41137ba21036cffb43eed9fa216154" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MICS_MUTE_DISABLED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mics;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structbt__mics__register__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mics__register__param" kindref="compound">bt_mics_register_param</ref><sp/>{</highlight></codeline>
<codeline lineno="50" refid="structbt__mics__register__param_1aeffa80842f31cb91c66722b167fe48d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__aics__register__param" kindref="compound">bt_aics_register_param</ref><sp/><ref refid="structbt__mics__register__param_1aeffa80842f31cb91c66722b167fe48d7" kindref="member">aics_param</ref>[<ref refid="group__bt__gatt__mics_1ga8ca2e0d6b6d21238e7624196cb7219ce" kindref="member">BT_MICS_AICS_CNT</ref>];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structbt__mics__register__param_1a7b5767d6c0ddeab27ead89d483cf2445" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mics__cb" kindref="compound">bt_mics_cb</ref><sp/>*<ref refid="structbt__mics__register__param_1a7b5767d6c0ddeab27ead89d483cf2445" kindref="member">cb</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="structbt__mics__included" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mics__included" kindref="compound">bt_mics_included</ref><sp/><sp/>{</highlight></codeline>
<codeline lineno="65" refid="structbt__mics__included_1a35e161b7a306e63997df5325e63e5820" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__mics__included_1a35e161b7a306e63997df5325e63e5820" kindref="member">aics_cnt</ref>;</highlight></codeline>
<codeline lineno="67" refid="structbt__mics__included_1a9578b7c9c164c5a4bded45bd32420fc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_aics<sp/>**<ref refid="structbt__mics__included_1a9578b7c9c164c5a4bded45bd32420fc6" kindref="member">aics</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="group__bt__gatt__mics_1ga1dae0b1b25d72a235741e94eb3ef734b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1ga1dae0b1b25d72a235741e94eb3ef734b" kindref="member">bt_mics_register</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mics__register__param" kindref="compound">bt_mics_register_param</ref><sp/>*param,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>**mics);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="group__bt__gatt__mics_1ga7dbc4370d1ebc7fb662088745aefa002" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1ga7dbc4370d1ebc7fb662088745aefa002" kindref="member">bt_mics_included_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mics__included" kindref="compound">bt_mics_included</ref><sp/>*included);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="group__bt__gatt__mics_1ga25a2c10db4fc277052a36bf025b14f67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1ga25a2c10db4fc277052a36bf025b14f67" kindref="member">bt_mics_client_conn_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_conn<sp/>**conn);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="group__bt__gatt__mics_1ga486f13a3efdf14a1020f07697cb47f8a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__gatt__mics_1ga486f13a3efdf14a1020f07697cb47f8a" kindref="member">bt_mics_discover_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mics<sp/>*mics,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>aics_count);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="group__bt__gatt__mics_1ga4f4737b6e78d8d62f31fb318df78777f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__gatt__mics_1ga4f4737b6e78d8d62f31fb318df78777f" kindref="member">bt_mics_mute_read_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mics<sp/>*mics,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>mute);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="group__bt__gatt__mics_1ga3ac4229e291dae17d9ee827f1a6f5744" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__gatt__mics_1ga3ac4229e291dae17d9ee827f1a6f5744" kindref="member">bt_mics_mute_write_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mics<sp/>*mics,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="structbt__mics__cb" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mics__cb" kindref="compound">bt_mics_cb</ref><sp/>{</highlight></codeline>
<codeline lineno="149" refid="structbt__mics__cb_1a1e02d780e1c449e57047061c2eca0b45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__mics_1ga4f4737b6e78d8d62f31fb318df78777f" kindref="member">bt_mics_mute_read_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__mics__cb_1a1e02d780e1c449e57047061c2eca0b45" kindref="member">mute</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_BT_MICS_CLIENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__mics_1ga486f13a3efdf14a1020f07697cb47f8a" kindref="member">bt_mics_discover_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discover;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__mics_1ga3ac4229e291dae17d9ee827f1a6f5744" kindref="member">bt_mics_mute_write_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mute_write;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__gatt__mics_1ga3ac4229e291dae17d9ee827f1a6f5744" kindref="member">bt_mics_mute_write_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unmute_write;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__aics__cb" kindref="compound">bt_aics_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aics_cb;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_BT_MICS_CLIENT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="group__bt__gatt__mics_1gac77bbb79833c922bd1dc49ebb28bff29" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1gac77bbb79833c922bd1dc49ebb28bff29" kindref="member">bt_mics_discover</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_conn<sp/>*conn,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>**mics);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="group__bt__gatt__mics_1gaa4991366e1a39421ab44d557cf3b7bb8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1gaa4991366e1a39421ab44d557cf3b7bb8" kindref="member">bt_mics_unmute</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="group__bt__gatt__mics_1ga8f8172c232a75f79d863abe3ec2054fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1ga8f8172c232a75f79d863abe3ec2054fb" kindref="member">bt_mics_mute</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="group__bt__gatt__mics_1ga47bf9b166a1f6c7c2e13e177f8d79f7e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1ga47bf9b166a1f6c7c2e13e177f8d79f7e" kindref="member">bt_mics_mute_disable</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="group__bt__gatt__mics_1ga3dfa790997656d9ec654a7c72b82c3a7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1ga3dfa790997656d9ec654a7c72b82c3a7" kindref="member">bt_mics_mute_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="group__bt__gatt__mics_1ga11412629e7e82b18514ae701fca28025" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1ga11412629e7e82b18514ae701fca28025" kindref="member">bt_mics_aics_state_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="group__bt__gatt__mics_1ga6569fd2385d849aebb698a23c1303593" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1ga6569fd2385d849aebb698a23c1303593" kindref="member">bt_mics_aics_gain_setting_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="group__bt__gatt__mics_1gafd6ebff3fd2511fbde80ee0e3d2c0963" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1gafd6ebff3fd2511fbde80ee0e3d2c0963" kindref="member">bt_mics_aics_type_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="group__bt__gatt__mics_1ga92af4462af4aea925835c67f6998ab0a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1ga92af4462af4aea925835c67f6998ab0a" kindref="member">bt_mics_aics_status_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="group__bt__gatt__mics_1ga0bf86be1e9765798a82dcffbb25895a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1ga0bf86be1e9765798a82dcffbb25895a6" kindref="member">bt_mics_aics_unmute</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="group__bt__gatt__mics_1gab6f3b18964e38149dc3df30fd8c85500" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1gab6f3b18964e38149dc3df30fd8c85500" kindref="member">bt_mics_aics_mute</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="group__bt__gatt__mics_1ga7e1372a29687ad265b1aff043f573fe3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1ga7e1372a29687ad265b1aff043f573fe3" kindref="member">bt_mics_aics_manual_gain_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="group__bt__gatt__mics_1gab1ac1a46f77ca7b45a81ca10315eeb91" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1gab1ac1a46f77ca7b45a81ca10315eeb91" kindref="member">bt_mics_aics_automatic_gain_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="group__bt__gatt__mics_1gaf9e4b7cc76729bb6fd57c7dd99469942" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1gaf9e4b7cc76729bb6fd57c7dd99469942" kindref="member">bt_mics_aics_gain_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1accbd6432732c88ad6adc5365800433b6" kindref="member">int8_t</ref><sp/>gain);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="group__bt__gatt__mics_1ga706550da73522ff57dd6ecc84dfd3f8c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1ga706550da73522ff57dd6ecc84dfd3f8c" kindref="member">bt_mics_aics_description_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="group__bt__gatt__mics_1gaccbd3981a8dced63eb3380abc76ce396" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1gaccbd3981a8dced63eb3380abc76ce396" kindref="member">bt_mics_aics_description_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbt__aics__cb_1ad37ae465600fa2e3c1868f0da07fd31a" kindref="member">description</ref>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="group__bt__gatt__mics_1ga78f7df2763fc8942173f64eaa5ba7b6e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1ga78f7df2763fc8942173f64eaa5ba7b6e" kindref="member">bt_mics_aics_deactivate</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="group__bt__gatt__mics_1ga008fe480ea99fd1e1be92c66d3640128" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1ga008fe480ea99fd1e1be92c66d3640128" kindref="member">bt_mics_aics_activate</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mics<sp/>*mics,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_aics<sp/>*inst);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="group__bt__gatt__mics_1gae62517af0f5b45ca6b9242dbab532f50" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__gatt__mics_1gae62517af0f5b45ca6b9242dbab532f50" kindref="member">bt_mics_client_cb_register</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mics__cb" kindref="compound">bt_mics_cb</ref><sp/>*cb);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_BLUETOOTH_SERVICES_MICS_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/bluetooth/audio/mics.h"/>
  </compounddef>
</doxygen>
