<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="rfcomm_8h" kind="file" language="C++">
    <compoundname>rfcomm.h</compoundname>
    <includes refid="bluetooth_2buf_8h" local="no">bluetooth/buf.h</includes>
    <includes refid="conn_8h" local="no">bluetooth/conn.h</includes>
    <incdepgraph>
      <node id="16">
        <label>bluetooth/addr.h</label>
        <link refid="addr_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>bluetooth/bluetooth.h</label>
        <link refid="bluetooth_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>bluetooth/buf.h</label>
        <link refid="bluetooth_2buf_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>bluetooth/conn.h</label>
        <link refid="conn_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>bluetooth/crypto.h</label>
        <link refid="bluetooth_2crypto_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>bluetooth/direction.h</label>
        <link refid="direction_8h"/>
      </node>
      <node id="23">
        <label>bluetooth/gap.h</label>
        <link refid="gap_8h"/>
      </node>
      <node id="13">
        <label>bluetooth/hci.h</label>
        <link refid="hci_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>bluetooth/hci_err.h</label>
        <link refid="hci__err_8h"/>
      </node>
      <node id="1">
        <label>include/bluetooth/rfcomm.h</label>
        <link refid="rfcomm_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>net/buf.h</label>
        <link refid="net_2buf_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="8">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="3">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="5">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="15">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stdarg.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="12">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structbt__rfcomm__dlc__ops" prot="public">bt_rfcomm_dlc_ops</innerclass>
    <innerclass refid="structbt__rfcomm__dlc" prot="public">bt_rfcomm_dlc</innerclass>
    <innerclass refid="structbt__rfcomm__server" prot="public">bt_rfcomm_server</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__bt__rfcomm_1ga950bf8e3371138ceb9649d45e9a96340" prot="public" static="no" strong="no">
        <type></type>
        <name>@87</name>
        <enumvalue id="group__bt__rfcomm_1gga950bf8e3371138ceb9649d45e9a96340aa62985d89ab11a130eed284d98b7b1e4" prot="public">
          <name>BT_RFCOMM_CHAN_HFP_HF</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__rfcomm_1gga950bf8e3371138ceb9649d45e9a96340ac7f345a01b4d9aca4c2a879dce05e0dd" prot="public">
          <name>BT_RFCOMM_CHAN_HFP_AG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__rfcomm_1gga950bf8e3371138ceb9649d45e9a96340adc095ec30d3edf16ef95ece5b3c1104b" prot="public">
          <name>BT_RFCOMM_CHAN_HSP_AG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__rfcomm_1gga950bf8e3371138ceb9649d45e9a96340aaf92af85143e2a0430d5a99c9a0d3c25" prot="public">
          <name>BT_RFCOMM_CHAN_HSP_HS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__rfcomm_1gga950bf8e3371138ceb9649d45e9a96340a05cfd05b25c785acb72916b723141495" prot="public">
          <name>BT_RFCOMM_CHAN_SPP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/rfcomm.h" line="28" column="1" bodyfile="include/bluetooth/rfcomm.h" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="enum" id="group__bt__rfcomm_1gaa70d7971435dc7e6421372d7385811b2" prot="public" static="no" strong="no">
        <type></type>
        <name>bt_rfcomm_role</name>
        <enumvalue id="group__bt__rfcomm_1ggaa70d7971435dc7e6421372d7385811b2aa0b65eed9632ff8ad3235b4c0eae166d" prot="public">
          <name>BT_RFCOMM_ROLE_ACCEPTOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bt__rfcomm_1ggaa70d7971435dc7e6421372d7385811b2a20601c2b890ee84b83dfc9ed55e07cf8" prot="public">
          <name>BT_RFCOMM_ROLE_INITIATOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Role of RFCOMM session and dlc. Used only by internal APIs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/rfcomm.h" line="69" column="1" bodyfile="include/bluetooth/rfcomm.h" bodystart="69" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__bt__rfcomm_1ga11f290d34ad631afaa10caf2cefd72b9" prot="public" static="no">
        <type>enum <ref refid="group__bt__rfcomm_1gaa70d7971435dc7e6421372d7385811b2" kindref="member">bt_rfcomm_role</ref></type>
        <definition>typedef enum bt_rfcomm_role bt_rfcomm_role_t</definition>
        <argsstring></argsstring>
        <name>bt_rfcomm_role_t</name>
        <briefdescription>
<para>Role of RFCOMM session and dlc. Used only by internal APIs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/rfcomm.h" line="72" column="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__rfcomm_1gafd0ffcff41e233f74dc2726e889f5401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_rfcomm_server_register</definition>
        <argsstring>(struct bt_rfcomm_server *server)</argsstring>
        <name>bt_rfcomm_server_register</name>
        <param>
          <type>struct <ref refid="structbt__rfcomm__server" kindref="compound">bt_rfcomm_server</ref> *</type>
          <declname>server</declname>
        </param>
        <briefdescription>
<para>Register RFCOMM server. </para>
        </briefdescription>
        <detaileddescription>
<para>Register RFCOMM server for a channel, each new connection is authorized using the <ref refid="posix_2sys_2socket_8h_1a33e6ea428ff537ed7a4763ce91b7d9bb" kindref="member">accept()</ref> callback which in case of success shall allocate the dlc structure to be used by the new connection.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>Server structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/rfcomm.h" line="131" column="5" declfile="include/bluetooth/rfcomm.h" declline="131" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__rfcomm_1ga2fb8e3ce2a39d0a3c5bea9b3c24a7ab7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_rfcomm_dlc_connect</definition>
        <argsstring>(struct bt_conn *conn, struct bt_rfcomm_dlc *dlc, uint8_t channel)</argsstring>
        <name>bt_rfcomm_dlc_connect</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__rfcomm__dlc" kindref="compound">bt_rfcomm_dlc</ref> *</type>
          <declname>dlc</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Connect RFCOMM channel. </para>
        </briefdescription>
        <detaileddescription>
<para>Connect RFCOMM dlc by channel, once the connection is completed dlc connected() callback will be called. If the connection is rejected disconnected() callback is called instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dlc</parametername>
</parameternamelist>
<parameterdescription>
<para>Dlc object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Server channel to connect to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/rfcomm.h" line="145" column="5" declfile="include/bluetooth/rfcomm.h" declline="145" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__rfcomm_1ga593841aef52027598977b7b2bbd0237d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_rfcomm_dlc_send</definition>
        <argsstring>(struct bt_rfcomm_dlc *dlc, struct net_buf *buf)</argsstring>
        <name>bt_rfcomm_dlc_send</name>
        <param>
          <type>struct <ref refid="structbt__rfcomm__dlc" kindref="compound">bt_rfcomm_dlc</ref> *</type>
          <declname>dlc</declname>
        </param>
        <param>
          <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Send data to RFCOMM. </para>
        </briefdescription>
        <detaileddescription>
<para>Send data from buffer to the dlc. Length should be less than or equal to mtu.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dlc</parametername>
</parameternamelist>
<parameterdescription>
<para>Dlc object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Data buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bytes sent in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/rfcomm.h" line="158" column="5" declfile="include/bluetooth/rfcomm.h" declline="158" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__rfcomm_1ga998328b021ec53f7e291ab76856ffa18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_rfcomm_dlc_disconnect</definition>
        <argsstring>(struct bt_rfcomm_dlc *dlc)</argsstring>
        <name>bt_rfcomm_dlc_disconnect</name>
        <param>
          <type>struct <ref refid="structbt__rfcomm__dlc" kindref="compound">bt_rfcomm_dlc</ref> *</type>
          <declname>dlc</declname>
        </param>
        <briefdescription>
<para>Disconnect RFCOMM dlc. </para>
        </briefdescription>
        <detaileddescription>
<para>Disconnect RFCOMM dlc, if the connection is pending it will be canceled and as a result the dlc disconnected() callback is called.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dlc</parametername>
</parameternamelist>
<parameterdescription>
<para>Dlc object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success or negative value in case of error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/rfcomm.h" line="169" column="5" declfile="include/bluetooth/rfcomm.h" declline="169" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__rfcomm_1gaed05e67dc975d94e1209372d5817077a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structnet__buf" kindref="compound">net_buf</ref> *</type>
        <definition>struct net_buf * bt_rfcomm_create_pdu</definition>
        <argsstring>(struct net_buf_pool *pool)</argsstring>
        <name>bt_rfcomm_create_pdu</name>
        <param>
          <type>struct <ref refid="structnet__buf__pool" kindref="compound">net_buf_pool</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
<para>Allocate the buffer from pool after reserving head room for RFCOMM, L2CAP and ACL headers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pool</parametername>
</parameternamelist>
<parameterdescription>
<para>Which pool to take the buffer from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/rfcomm.h" line="178" column="14" declfile="include/bluetooth/rfcomm.h" declline="178" declcolumn="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Bluetooth RFCOMM handling. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_BLUETOOTH_RFCOMM_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_BLUETOOTH_RFCOMM_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="bluetooth_2buf_8h" kindref="compound">bluetooth/buf.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="conn_8h" kindref="compound">bluetooth/conn.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RFCOMM<sp/>channels<sp/>(1-30):<sp/>pre-allocated<sp/>for<sp/>profiles<sp/>to<sp/>avoid<sp/>conflicts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="29" refid="group__bt__rfcomm_1gga950bf8e3371138ceb9649d45e9a96340aa62985d89ab11a130eed284d98b7b1e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__rfcomm_1gga950bf8e3371138ceb9649d45e9a96340aa62985d89ab11a130eed284d98b7b1e4" kindref="member">BT_RFCOMM_CHAN_HFP_HF</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="30" refid="group__bt__rfcomm_1gga950bf8e3371138ceb9649d45e9a96340ac7f345a01b4d9aca4c2a879dce05e0dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__rfcomm_1gga950bf8e3371138ceb9649d45e9a96340ac7f345a01b4d9aca4c2a879dce05e0dd" kindref="member">BT_RFCOMM_CHAN_HFP_AG</ref>,</highlight></codeline>
<codeline lineno="31" refid="group__bt__rfcomm_1gga950bf8e3371138ceb9649d45e9a96340adc095ec30d3edf16ef95ece5b3c1104b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__rfcomm_1gga950bf8e3371138ceb9649d45e9a96340adc095ec30d3edf16ef95ece5b3c1104b" kindref="member">BT_RFCOMM_CHAN_HSP_AG</ref>,</highlight></codeline>
<codeline lineno="32" refid="group__bt__rfcomm_1gga950bf8e3371138ceb9649d45e9a96340aaf92af85143e2a0430d5a99c9a0d3c25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__rfcomm_1gga950bf8e3371138ceb9649d45e9a96340aaf92af85143e2a0430d5a99c9a0d3c25" kindref="member">BT_RFCOMM_CHAN_HSP_HS</ref>,</highlight></codeline>
<codeline lineno="33" refid="group__bt__rfcomm_1gga950bf8e3371138ceb9649d45e9a96340a05cfd05b25c785acb72916b723141495" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__rfcomm_1gga950bf8e3371138ceb9649d45e9a96340a05cfd05b25c785acb72916b723141495" kindref="member">BT_RFCOMM_CHAN_SPP</ref>,</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__rfcomm__dlc" kindref="compound">bt_rfcomm_dlc</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structbt__rfcomm__dlc__ops" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__rfcomm__dlc__ops" kindref="compound">bt_rfcomm_dlc_ops</ref><sp/>{</highlight></codeline>
<codeline lineno="47" refid="structbt__rfcomm__dlc__ops_1aba1719c36e7a1dc9705994bcdf134e28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structbt__rfcomm__dlc__ops_1aba1719c36e7a1dc9705994bcdf134e28" kindref="member">connected</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__rfcomm__dlc" kindref="compound">bt_rfcomm_dlc</ref><sp/>*dlc);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structbt__rfcomm__dlc__ops_1a4eeaf7b5db6c93e846a72797e6612d30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structbt__rfcomm__dlc__ops_1a4eeaf7b5db6c93e846a72797e6612d30" kindref="member">disconnected</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__rfcomm__dlc" kindref="compound">bt_rfcomm_dlc</ref><sp/>*dlc);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="structbt__rfcomm__dlc__ops_1a4a4e29065b267f0370df5ea602223d0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structbt__rfcomm__dlc__ops_1a4a4e29065b267f0370df5ea602223d0a" kindref="member">recv</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__rfcomm__dlc" kindref="compound">bt_rfcomm_dlc</ref><sp/>*dlc,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*buf);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="group__bt__rfcomm_1gaa70d7971435dc7e6421372d7385811b2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__rfcomm_1gaa70d7971435dc7e6421372d7385811b2" kindref="member">bt_rfcomm_role</ref><sp/>{</highlight></codeline>
<codeline lineno="70" refid="group__bt__rfcomm_1ggaa70d7971435dc7e6421372d7385811b2aa0b65eed9632ff8ad3235b4c0eae166d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__rfcomm_1ggaa70d7971435dc7e6421372d7385811b2aa0b65eed9632ff8ad3235b4c0eae166d" kindref="member">BT_RFCOMM_ROLE_ACCEPTOR</ref>,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__rfcomm_1ggaa70d7971435dc7e6421372d7385811b2a20601c2b890ee84b83dfc9ed55e07cf8" kindref="member">BT_RFCOMM_ROLE_INITIATOR</ref></highlight></codeline>
<codeline lineno="72" refid="group__bt__rfcomm_1ggaa70d7971435dc7e6421372d7385811b2a20601c2b890ee84b83dfc9ed55e07cf8" refkind="member"><highlight class="normal">}<sp/>__packed<sp/><ref refid="group__bt__rfcomm_1ga11f290d34ad631afaa10caf2cefd72b9" kindref="member">bt_rfcomm_role_t</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structbt__rfcomm__dlc" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__rfcomm__dlc" kindref="compound">bt_rfcomm_dlc</ref><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Response<sp/>Timeout<sp/>eXpired<sp/>(RTX)<sp/>timer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structbt__rfcomm__dlc_1a82bcf4d9e08dba8d610e92b45abb9ac2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__work__delayable" kindref="compound">k_work_delayable</ref><sp/><sp/><sp/><sp/><ref refid="structbt__rfcomm__dlc_1a82bcf4d9e08dba8d610e92b45abb9ac2" kindref="member">rtx_work</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Queue<sp/>for<sp/>outgoing<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structbt__rfcomm__dlc_1a194bfdb88a7fcfcf9cfee6fe878bdee8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__fifo" kindref="compound">k_fifo</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__rfcomm__dlc_1a194bfdb88a7fcfcf9cfee6fe878bdee8" kindref="member">tx_queue</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TX<sp/>credits,<sp/>Reuse<sp/>as<sp/>a<sp/>binary<sp/>sem<sp/>for<sp/>MSC<sp/>FC<sp/>if<sp/>CFC<sp/>is<sp/>not<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structbt__rfcomm__dlc_1a29b3c942a1d434214637e5d00b68fb33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__rfcomm__dlc_1a29b3c942a1d434214637e5d00b68fb33" kindref="member">tx_credits</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="structbt__rfcomm__dlc_1af134e53ac7db47f18de810dbeacdc500" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_rfcomm_session<sp/><sp/>*<ref refid="structbt__rfcomm__dlc_1af134e53ac7db47f18de810dbeacdc500" kindref="member">session</ref>;</highlight></codeline>
<codeline lineno="86" refid="structbt__rfcomm__dlc_1a0054c0b539b947688555b5663c585bb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__rfcomm__dlc__ops" kindref="compound">bt_rfcomm_dlc_ops</ref><sp/><sp/>*<ref refid="structbt__rfcomm__dlc_1a0054c0b539b947688555b5663c585bb7" kindref="member">ops</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__rfcomm__dlc" kindref="compound">bt_rfcomm_dlc</ref><sp/><sp/><sp/><sp/><sp/><sp/>*_next;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="structbt__rfcomm__dlc_1ab298ebd444566533018eabdc5a69c8ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__conn_1gaf0c56cd26c4147f6c9f0faa11fa01783" kindref="member">bt_security_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__rfcomm__dlc_1ab298ebd444566533018eabdc5a69c8ba" kindref="member">required_sec_level</ref>;</highlight></codeline>
<codeline lineno="90" refid="structbt__rfcomm__dlc_1a984c80865ff8f6b6bc19d3a978e279d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__rfcomm_1ga11f290d34ad631afaa10caf2cefd72b9" kindref="member">bt_rfcomm_role_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__rfcomm__dlc_1a984c80865ff8f6b6bc19d3a978e279d0" kindref="member">role</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="structbt__rfcomm__dlc_1a2334abbaacad9b98c2cb2c5650644854" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__rfcomm__dlc_1a2334abbaacad9b98c2cb2c5650644854" kindref="member">mtu</ref>;</highlight></codeline>
<codeline lineno="93" refid="structbt__rfcomm__dlc_1a20d9d284da592d268efbecf29313aed8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__rfcomm__dlc_1a20d9d284da592d268efbecf29313aed8" kindref="member">dlci</ref>;</highlight></codeline>
<codeline lineno="94" refid="structbt__rfcomm__dlc_1ac7f484917494af6a355500cc181ed4ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__rfcomm__dlc_1ac7f484917494af6a355500cc181ed4ec" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="95" refid="structbt__rfcomm__dlc_1ac946b1f3f017a9ef50a8079aa5846df3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__rfcomm__dlc_1ac946b1f3f017a9ef50a8079aa5846df3" kindref="member">rx_credit</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stack<sp/>&amp;<sp/>kernel<sp/>data<sp/>for<sp/>TX<sp/>thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="structbt__rfcomm__dlc_1aef7415017cc80c20031804494290675d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__rfcomm__dlc_1aef7415017cc80c20031804494290675d" kindref="member">tx_thread</ref>;</highlight></codeline>
<codeline lineno="99" refid="structbt__rfcomm__dlc_1ac97ff9933fb9449e7c8fa008e727227f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__rfcomm__dlc_1ac97ff9933fb9449e7c8fa008e727227f" kindref="member">K_KERNEL_STACK_MEMBER</ref>(<ref refid="smp__boot__delay_2src_2main_8c_1a96786824adbf96016a9dbf6eded02b94" kindref="member">stack</ref>,<sp/>256);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="structbt__rfcomm__server" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__rfcomm__server" kindref="compound">bt_rfcomm_server</ref><sp/>{</highlight></codeline>
<codeline lineno="104" refid="structbt__rfcomm__server_1a30b22ea64c0fdd7130e8aaa79519e776" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__rfcomm__server_1a30b22ea64c0fdd7130e8aaa79519e776" kindref="member">channel</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="structbt__rfcomm__server_1a7bcb6da4cd4265c9c3b6439ec8e3a957" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structbt__rfcomm__server_1a7bcb6da4cd4265c9c3b6439ec8e3a957" kindref="member">accept</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_conn<sp/>*conn,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__rfcomm__dlc" kindref="compound">bt_rfcomm_dlc</ref><sp/>**dlc);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__rfcomm__server" kindref="compound">bt_rfcomm_server</ref><sp/>*_next;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="group__bt__rfcomm_1gafd0ffcff41e233f74dc2726e889f5401" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__rfcomm_1gafd0ffcff41e233f74dc2726e889f5401" kindref="member">bt_rfcomm_server_register</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__rfcomm__server" kindref="compound">bt_rfcomm_server</ref><sp/>*server);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="group__bt__rfcomm_1ga2fb8e3ce2a39d0a3c5bea9b3c24a7ab7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__rfcomm_1ga2fb8e3ce2a39d0a3c5bea9b3c24a7ab7" kindref="member">bt_rfcomm_dlc_connect</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_conn<sp/>*conn,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__rfcomm__dlc" kindref="compound">bt_rfcomm_dlc</ref><sp/>*dlc,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__rfcomm__server_1a30b22ea64c0fdd7130e8aaa79519e776" kindref="member">channel</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="group__bt__rfcomm_1ga593841aef52027598977b7b2bbd0237d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__rfcomm_1ga593841aef52027598977b7b2bbd0237d" kindref="member">bt_rfcomm_dlc_send</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__rfcomm__dlc" kindref="compound">bt_rfcomm_dlc</ref><sp/>*dlc,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*buf);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="group__bt__rfcomm_1ga998328b021ec53f7e291ab76856ffa18" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__rfcomm_1ga998328b021ec53f7e291ab76856ffa18" kindref="member">bt_rfcomm_dlc_disconnect</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__rfcomm__dlc" kindref="compound">bt_rfcomm_dlc</ref><sp/>*dlc);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="group__bt__rfcomm_1gaed05e67dc975d94e1209372d5817077a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__buf" kindref="compound">net_buf</ref><sp/>*<ref refid="group__bt__rfcomm_1gaed05e67dc975d94e1209372d5817077a" kindref="member">bt_rfcomm_create_pdu</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__buf__pool" kindref="compound">net_buf_pool</ref><sp/>*pool);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_BLUETOOTH_RFCOMM_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/bluetooth/rfcomm.h"/>
  </compounddef>
</doxygen>
