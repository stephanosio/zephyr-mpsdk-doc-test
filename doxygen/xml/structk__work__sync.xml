<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structk__work__sync" kind="struct" language="C++" prot="public">
    <compoundname>k_work_sync</compoundname>
    <includes refid="include_2kernel_8h" local="no">kernel.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structk__work__sync_1ad81ff57cb9f2f3dc5f2d65917cf04f1c" prot="public" static="no" mutable="no">
        <type>struct z_work_flusher</type>
        <definition>struct z_work_flusher k_work_sync::flusher</definition>
        <argsstring></argsstring>
        <name>flusher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="3685" column="21" bodyfile="include/kernel.h" bodystart="3685" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__work__sync_1a7e8fd0b9d6736c403aefa8462c7c0835" prot="public" static="no" mutable="no">
        <type>struct z_work_canceller</type>
        <definition>struct z_work_canceller k_work_sync::canceller</definition>
        <argsstring></argsstring>
        <name>canceller</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="3686" column="23" bodyfile="include/kernel.h" bodystart="3686" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__work__sync_1ac37c05dcdf6621ff09203cd62f24554d" prot="public" static="no" mutable="no">
        <type>union k_work_sync::@120</type>
        <definition>union k_work_sync::@120 k_work_sync::@121</definition>
        <argsstring></argsstring>
        <name>@121</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel.h" line="3687" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A structure holding internal state for a pending synchronous operation on a work item or queue. </para>
    </briefdescription>
    <detaileddescription>
<para>Instances of this type are provided by the caller for invocation of <ref refid="group__workqueue__apis_1gabd1cda459bab538fb2d6dfd84a73b253" kindref="member">k_work_flush()</ref>, <ref refid="group__workqueue__apis_1gab2b05cfe3af08f7d32c3946fa1c808f9" kindref="member">k_work_cancel_sync()</ref> and sibling flush and cancel APIs. A referenced object must persist until the call returns, and be accessible from both the caller thread and the work queue thread.</para>
<para><simplesect kind="note"><para>If CONFIG_KERNEL_COHERENCE is enabled the object must be allocated in coherent memory; see <ref refid="group__arch-userspace_1ga8c6bb0f6730c115689452b016ac1761f" kindref="member">arch_mem_coherent()</ref>. The stack on these architectures is generally not coherent. be stack-allocated. Violations are detected by runtime assertion. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="include/kernel.h" line="3683" column="1" bodyfile="include/kernel.h" bodystart="3683" bodyend="3688"/>
    <listofallmembers>
      <member refid="structk__work__sync_1a7e8fd0b9d6736c403aefa8462c7c0835" prot="public" virt="non-virtual"><scope>k_work_sync</scope><name>canceller</name></member>
      <member refid="structk__work__sync_1ad81ff57cb9f2f3dc5f2d65917cf04f1c" prot="public" virt="non-virtual"><scope>k_work_sync</scope><name>flusher</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
