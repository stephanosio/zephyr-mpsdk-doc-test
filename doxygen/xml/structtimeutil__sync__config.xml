<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structtimeutil__sync__config" kind="struct" language="C++" prot="public">
    <compoundname>timeutil_sync_config</compoundname>
    <includes refid="timeutil_8h" local="no">timeutil.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structtimeutil__sync__config_1a0ee43492ae85a6305a326046501a8ac7" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t timeutil_sync_config::ref_Hz</definition>
        <argsstring></argsstring>
        <name>ref_Hz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The nominal instance counter rate in Hz.</para>
<para>This value is assumed to be precise, but may drift depending on the reference clock source.</para>
<para>The value must be positive. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/timeutil.h" line="90" column="10" bodyfile="include/sys/timeutil.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtimeutil__sync__config_1a4c180ceb790108292c8c7a825792603f" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t timeutil_sync_config::local_Hz</definition>
        <argsstring></argsstring>
        <name>local_Hz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The nominal local counter rate in Hz.</para>
<para>This value is assumed to be inaccurate but reasonably stable. For a local clock driven by a crystal oscillator an error of 25 ppm is common; for an RC oscillator larger errors should be expected. The timeutil_sync infrastructure can calculate the skew between the local and reference clocks and apply it when converting between time scales.</para>
<para>The value must be positive. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/sys/timeutil.h" line="103" column="10" bodyfile="include/sys/timeutil.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Immutable state for synchronizing two clocks. </para>
    </briefdescription>
    <detaileddescription>
<para>Values required to convert durations between two time scales.</para>
<para><simplesect kind="note"><para>The accuracy of the translation and calculated skew between sources depends on the resolution of these frequencies. A reference frequency with microsecond or nanosecond resolution would produce the most accurate tracking when the local reference is the Zephyr tick counter. A reference source like an RTC chip with 1 Hz resolution requires a much larger interval between sampled instants to detect relative clock drift. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="include/sys/timeutil.h" line="82" column="1" bodyfile="include/sys/timeutil.h" bodystart="82" bodyend="104"/>
    <listofallmembers>
      <member refid="structtimeutil__sync__config_1a4c180ceb790108292c8c7a825792603f" prot="public" virt="non-virtual"><scope>timeutil_sync_config</scope><name>local_Hz</name></member>
      <member refid="structtimeutil__sync__config_1a0ee43492ae85a6305a326046501a8ac7" prot="public" virt="non-virtual"><scope>timeutil_sync_config</scope><name>ref_Hz</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
