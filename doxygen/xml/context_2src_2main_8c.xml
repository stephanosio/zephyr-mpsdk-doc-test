<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="context_2src_2main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes refid="ztest_8h" local="no">ztest.h</includes>
    <includes refid="kernel__structs_8h" local="no">kernel_structs.h</includes>
    <includes local="no">arch/cpu.h</includes>
    <includes refid="irq__offload_8h" local="no">irq_offload.h</includes>
    <includes local="no">sys_clock.h</includes>
    <includes local="no">soc.h</includes>
    <incdepgraph>
      <node id="17">
        <label>app_memory/app_memdomain.h</label>
        <link refid="app__memdomain_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>app_memory/mem_domain.h</label>
        <link refid="mem__domain_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>arch/arch_inlines.h</label>
        <link refid="arch__inlines_8h"/>
      </node>
      <node id="66">
        <label>arch/cpu.h</label>
        <link refid="include_2arch_2cpu_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>arch/structs.h</label>
        <link refid="structs_8h"/>
      </node>
      <node id="65">
        <label>arch/syscall.h</label>
        <link refid="arch_2syscall_8h"/>
      </node>
      <node id="29">
        <label>devicetree.h</label>
        <link refid="devicetree_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>devicetree/clocks.h</label>
        <link refid="clocks_8h"/>
      </node>
      <node id="36">
        <label>devicetree/dma.h</label>
        <link refid="devicetree_2dma_8h"/>
      </node>
      <node id="38">
        <label>devicetree/fixed-partitions.h</label>
        <link refid="fixed-partitions_8h"/>
      </node>
      <node id="34">
        <label>devicetree/gpio.h</label>
        <link refid="devicetree_2gpio_8h"/>
      </node>
      <node id="32">
        <label>devicetree/io-channels.h</label>
        <link refid="io-channels_8h"/>
      </node>
      <node id="40">
        <label>devicetree/ordinals.h</label>
        <link refid="ordinals_8h"/>
      </node>
      <node id="41">
        <label>devicetree/pinctrl.h</label>
        <link refid="devicetree_2pinctrl_8h"/>
      </node>
      <node id="37">
        <label>devicetree/pwms.h</label>
        <link refid="pwms_8h"/>
      </node>
      <node id="35">
        <label>devicetree/spi.h</label>
        <link refid="devicetree_2spi_8h"/>
      </node>
      <node id="39">
        <label>devicetree/zephyr.h</label>
        <link refid="devicetree_2zephyr_8h"/>
      </node>
      <node id="75">
        <label>fatal.h</label>
        <link refid="fatal_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>init.h</label>
        <link refid="init_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>irq.h</label>
        <link refid="irq_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>irq_offload.h</label>
        <link refid="irq__offload_8h"/>
      </node>
      <node id="45">
        <label>kernel.h</label>
        <link refid="include_2kernel_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>kernel/mempool_heap.h</label>
        <link refid="mempool__heap_8h"/>
      </node>
      <node id="51">
        <label>kernel/sched_priq.h</label>
        <link refid="sched__priq_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>kernel/stats.h</label>
        <link refid="kernel_2stats_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>kernel/thread.h</label>
        <link refid="kernel_2thread_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>kernel/thread_stack.h</label>
        <link refid="kernel_2thread__stack_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>kernel_includes.h</label>
        <link refid="kernel__includes_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>kernel_structs.h</label>
        <link refid="kernel__structs_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>kernel_version.h</label>
        <link refid="kernel__version_8h"/>
      </node>
      <node id="28">
        <label>linker/devicetree_reserved.h</label>
        <link refid="devicetree__reserved_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>linker/linker-defs.h</label>
        <link refid="linker-defs_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>linker/section_tags.h</label>
        <link refid="section__tags_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>linker/sections.h</label>
        <link refid="sections_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>spinlock.h</label>
        <link refid="spinlock_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>sys/arch_interface.h</label>
        <link refid="arch__interface_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="42">
        <label>sys/dlist.h</label>
        <link refid="dlist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>sys/kobject.h</label>
        <link refid="include_2sys_2kobject_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>sys/rb.h</label>
        <link refid="rb_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>sys/sflist.h</label>
        <link refid="sflist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>sys/sys_heap.h</label>
        <link refid="sys__heap_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sys/time_units.h</label>
        <link refid="time__units_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="23">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>sys_clock.h</label>
        <link refid="include_2sys__clock_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>timing/types.h</label>
        <link refid="include_2timing_2types_8h"/>
      </node>
      <node id="4">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="19">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="86">
        <label>tracing/tracing.h</label>
        <link refid="tracing_2tracing_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>tracing/tracing_macros.h</label>
        <link refid="tracing__macros_8h"/>
      </node>
      <node id="87">
        <label>tracking.h</label>
        <link refid="tracking_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="13">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="8">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="11">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>offsets.h</label>
        <link refid="offsets_8h"/>
      </node>
      <node id="64">
        <label>syscall_list.h</label>
        <link refid="syscall__list_8h"/>
      </node>
      <node id="88">
        <label>syscalls/kernel.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kernel_8h"/>
      </node>
      <node id="81">
        <label>syscalls/kobject.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2kobject_8h"/>
      </node>
      <node id="2">
        <label>ztest.h</label>
        <link refid="ztest_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ztest_assert.h</label>
        <link refid="ztest__assert_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ztest_mock.h</label>
        <link refid="ztest__mock_8h"/>
      </node>
      <node id="15">
        <label>ztest_test.h</label>
        <link refid="ztest__test_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ztest_test_deprecated.h</label>
        <link refid="ztest__test__deprecated_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/kernel/context/src/main.c</label>
        <link refid="context_2src_2main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>alloca.h</label>
      </node>
      <node id="68">
        <label>arch/cpu.h</label>
      </node>
      <node id="31">
        <label>devicetree_fixups.h</label>
      </node>
      <node id="30">
        <label>devicetree_unfixed.h</label>
      </node>
      <node id="43">
        <label>kernel.h</label>
      </node>
      <node id="92">
        <label>soc.h</label>
      </node>
      <node id="6">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="91">
        <label>sys_clock.h</label>
      </node>
      <node id="84">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="89">
        <label>syscalls/ztest_test.h</label>
      </node>
      <node id="90">
        <label>tc_util.h</label>
      </node>
      <node id="9">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structISR__INFO" prot="public">ISR_INFO</innerclass>
    <innerclass refid="structtimeout__order" prot="public">timeout_order</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="context_2src_2main_8c_1ae23a2e016adb8494df09e0e699d693f8" prot="public" static="no">
        <name>THREAD_STACKSIZE</name>
        <initializer>(512 + CONFIG_TEST_EXTRA_STACKSIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="37" column="9" bodyfile="tests/kernel/context/src/main.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="context_2src_2main_8c_1ad21512696d32f82c37a9753f8e27767f" prot="public" static="no">
        <name>THREAD_STACKSIZE2</name>
        <initializer>(384 + CONFIG_TEST_EXTRA_STACKSIZE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="38" column="9" bodyfile="tests/kernel/context/src/main.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="context_2src_2main_8c_1ad918ca939d6feb90791380688d0cc4fa" prot="public" static="no">
        <name>THREAD_PRIORITY</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="39" column="9" bodyfile="tests/kernel/context/src/main.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="context_2src_2main_8c_1ad8b8893d3e7d249bb86e9c26480c00dd" prot="public" static="no">
        <name>THREAD_SELF_CMD</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="41" column="9" bodyfile="tests/kernel/context/src/main.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="context_2src_2main_8c_1a1eb84e631dba69550eceefec4e45da85" prot="public" static="no">
        <name>EXEC_CTX_TYPE_CMD</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="42" column="9" bodyfile="tests/kernel/context/src/main.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="context_2src_2main_8c_1ac5f4cf1c989af592617184f7a7e5c372" prot="public" static="no">
        <name>UNKNOWN_COMMAND</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="44" column="9" bodyfile="tests/kernel/context/src/main.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="context_2src_2main_8c_1adb846fbc36e7b61f3ead77266541c2b9" prot="public" static="no">
        <name>HAS_POWERSAVE_INSTRUCTION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="106" column="9" bodyfile="tests/kernel/context/src/main.c" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="context_2src_2main_8c_1a89eb04e18fb0d18932bde14763f3c956" prot="public" static="no">
        <name>NUM_TIMEOUT_THREADS</name>
        <initializer><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(<ref refid="context_2src_2main_8c_1a8610a02a502b04dbf6e1342f578a8cdb" kindref="member">timeouts</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="883" column="9" bodyfile="tests/kernel/context/src/main.c" bodystart="883" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="context_2src_2main_8c_1a5f225ecc8164d10d5cd0897674d11997" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* disable_int_func) (int)</definition>
        <argsstring>)(int)</argsstring>
        <name>disable_int_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="121" column="9" bodyfile="tests/kernel/context/src/main.c" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="context_2src_2main_8c_1a7f20e65c3605042a20e778e964f1bfa1" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* enable_int_func) (int)</definition>
        <argsstring>)(int)</argsstring>
        <name>enable_int_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="122" column="9" bodyfile="tests/kernel/context/src/main.c" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="context_2src_2main_8c_1a48ce445f23483a99a9cd1432df58c28e" prot="public" static="yes" mutable="no">
        <type>struct k_sem</type>
        <definition>struct k_sem sem_thread</definition>
        <argsstring></argsstring>
        <name>sem_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="124" column="19" bodyfile="tests/kernel/context/src/main.c" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="context_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" prot="public" static="yes" mutable="no">
        <type>struct k_timer</type>
        <definition>struct k_timer timer</definition>
        <argsstring></argsstring>
        <name>timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="125" column="21" bodyfile="tests/kernel/context/src/main.c" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="context_2src_2main_8c_1a79558ed02795c4dfd087d7ba9e0be104" prot="public" static="yes" mutable="no">
        <type>struct k_sem</type>
        <definition>struct k_sem reply_timeout</definition>
        <argsstring></argsstring>
        <name>reply_timeout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="126" column="19" bodyfile="tests/kernel/context/src/main.c" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="context_2src_2main_8c_1a83cc293b698e4cbdc4be24ef6b0f7083" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__fifo" kindref="compound">k_fifo</ref></type>
        <definition>struct k_fifo timeout_order_fifo</definition>
        <argsstring></argsstring>
        <name>timeout_order_fifo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="127" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="context_2src_2main_8c_1aab8ee373d66c7335692a3ce45cebddcd" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int thread_evidence</definition>
        <argsstring></argsstring>
        <name>thread_evidence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="129" column="12" bodyfile="tests/kernel/context/src/main.c" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="context_2src_2main_8c_1a142b35a972e1d49b2f774510d10c8a74" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread thread_data1</definition>
        <argsstring></argsstring>
        <name>thread_data1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="134" column="22" bodyfile="tests/kernel/context/src/main.c" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="context_2src_2main_8c_1ab51c8e218105b70256a91ca680290635" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread thread_data2</definition>
        <argsstring></argsstring>
        <name>thread_data2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="135" column="22" bodyfile="tests/kernel/context/src/main.c" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="context_2src_2main_8c_1acfbe30fba051449e26d9a331942ea996" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread thread_data3</definition>
        <argsstring></argsstring>
        <name>thread_data3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="136" column="22" bodyfile="tests/kernel/context/src/main.c" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" prot="public" static="yes" mutable="no">
        <type><ref refid="structISR__INFO" kindref="compound">ISR_INFO</ref></type>
        <definition>ISR_INFO isr_info</definition>
        <argsstring></argsstring>
        <name>isr_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="138" column="17" bodyfile="tests/kernel/context/src/main.c" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="context_2src_2main_8c_1a8610a02a502b04dbf6e1342f578a8cdb" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structtimeout__order" kindref="compound">timeout_order</ref></type>
        <definition>struct timeout_order timeouts[]</definition>
        <argsstring>[]</argsstring>
        <name>timeouts</name>
        <initializer>= {
	{ 0, 1000, 2, 0 },
	{ 0, 1500, 4, 1 },
	{ 0, 500, 0, 2 },
	{ 0, 750, 1, 3 },
	{ 0, 1750, 5, 4 },
	{ 0, 2000, 6, 5 },
	{ 0, 1250, 3, 6 },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="873" column="20" bodyfile="tests/kernel/context/src/main.c" bodystart="873" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="context_2src_2main_8c_1a606734fde5ebce45006d5d030016d2b6" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref></type>
        <definition>struct k_thread timeout_threads[ARRAY_SIZE(timeouts)]</definition>
        <argsstring>[ARRAY_SIZE(timeouts)]</argsstring>
        <name>timeout_threads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="886" column="22" bodyfile="tests/kernel/context/src/main.c" bodystart="886" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="context_2src_2main_8c_1adaeeb684dfef1a9e3ad4798903928cd5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_DEFINE</definition>
        <argsstring>(thread_stack1,(512+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>thread_stack1</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="131" column="8" declfile="tests/kernel/context/src/main.c" declline="131" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1aaa9cfc776f134a683b0e9a77c22b5d33" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_DEFINE</definition>
        <argsstring>(thread_stack2,(512+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>thread_stack2</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="132" column="8" declfile="tests/kernel/context/src/main.c" declline="132" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a2a02ef37432227a98b6012cd434851fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_DEFINE</definition>
        <argsstring>(thread_stack3,(512+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_DEFINE</name>
        <param>
          <type>thread_stack3</type>
        </param>
        <param>
          <type>(512+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="133" column="8" declfile="tests/kernel/context/src/main.c" declline="133" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a39919b9ff1c5e0c9c39fbb7d5cfd894e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_kernel_cpu_idle</definition>
        <argsstring>(void)</argsstring>
        <name>test_kernel_cpu_idle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test cpu idle function. </para>
        </briefdescription>
        <detaileddescription>
<para>Test Objectve:<itemizedlist>
<listitem><para>The kernel architecture provide an idle function to be run when the system has no work for the current CPU</para>
</listitem><listitem><para>This routine tests the <ref refid="group__cpu__idle__apis_1ga7b25e1bed511a813b32fbd0f91b09356" kindref="member">k_cpu_idle()</ref> routine</para>
</listitem></itemizedlist>
</para>
<para>Testing techniques<itemizedlist>
<listitem><para>Functional and black box testing</para>
</listitem><listitem><para>Interface testing</para>
</listitem></itemizedlist>
</para>
<para>Prerequisite Condition:<itemizedlist>
<listitem><para>HAS_POWERSAVE_INSTRUCTION is set</para>
</listitem></itemizedlist>
</para>
<para>Input Specifications:<itemizedlist>
<listitem><para>N/A</para>
</listitem></itemizedlist>
</para>
<para>Test Procedure:<orderedlist>
<listitem><para>Record system time before cpu enters idle state</para>
</listitem><listitem><para>Enter cpu idle state by <ref refid="group__cpu__idle__apis_1ga7b25e1bed511a813b32fbd0f91b09356" kindref="member">k_cpu_idle()</ref></para>
</listitem><listitem><para>Record system time after cpu idle state is interrupted</para>
</listitem><listitem><para>Compare the two system time values.</para>
</listitem></orderedlist>
</para>
<para>Expected Test Result:<itemizedlist>
<listitem><para>cpu enters idle state for a given time</para>
</listitem></itemizedlist>
</para>
<para>Pass/Fail criteria:<itemizedlist>
<listitem><para>Success if the cpu enters idle state, failure otherwise.</para>
</listitem></itemizedlist>
</para>
<para>Assumptions and Constraints<itemizedlist>
<listitem><para>N/A</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__cpu__idle__apis_1ga7b25e1bed511a813b32fbd0f91b09356" kindref="member">k_cpu_idle()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="414" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="414" bodyend="424" declfile="tests/kernel/context/src/main.c" declline="177" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a6b4bbe2df3140630cf0689f13827bf09" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_kernel_cpu_idle_atomic</definition>
        <argsstring>(void)</argsstring>
        <name>test_kernel_cpu_idle_atomic</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test cpu idle function. </para>
        </briefdescription>
        <detaileddescription>
<para>Test the <ref refid="group__cpu__idle__apis_1ga7b25e1bed511a813b32fbd0f91b09356" kindref="member">k_cpu_idle()</ref> routine.</para>
<para>Test Objectve:<itemizedlist>
<listitem><para>The kernel architecture provide an idle function to be run when the system has no work for the current CPU</para>
</listitem><listitem><para>This routine tests the <ref refid="group__cpu__idle__apis_1gadf88ece6447b65b7d0d2f3a70ab4fe8f" kindref="member">k_cpu_atomic_idle()</ref> routine</para>
</listitem></itemizedlist>
</para>
<para>Testing techniques<itemizedlist>
<listitem><para>Functional and black box testing</para>
</listitem><listitem><para>Interface testing</para>
</listitem></itemizedlist>
</para>
<para>Prerequisite Condition:<itemizedlist>
<listitem><para>HAS_POWERSAVE_INSTRUCTION is set</para>
</listitem></itemizedlist>
</para>
<para>Input Specifications:<itemizedlist>
<listitem><para>N/A</para>
</listitem></itemizedlist>
</para>
<para>Test Procedure:<orderedlist>
<listitem><para>Record system time befor cpu enters idle state</para>
</listitem><listitem><para>Enter cpu idle state by <ref refid="group__cpu__idle__apis_1gadf88ece6447b65b7d0d2f3a70ab4fe8f" kindref="member">k_cpu_atomic_idle()</ref></para>
</listitem><listitem><para>Record system time after cpu idle state is interrupted</para>
</listitem><listitem><para>Compare the two system time values.</para>
</listitem></orderedlist>
</para>
<para>Expected Test Result:<itemizedlist>
<listitem><para>cpu enters idle state for a given time</para>
</listitem></itemizedlist>
</para>
<para>Pass/Fail criteria:<itemizedlist>
<listitem><para>Success if the cpu enters idle state, failure otherwise.</para>
</listitem></itemizedlist>
</para>
<para>Assumptions and Constraints<itemizedlist>
<listitem><para>N/A</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__cpu__idle__apis_1gadf88ece6447b65b7d0d2f3a70ab4fe8f" kindref="member">k_cpu_atomic_idle()</ref></para>
</simplesect>
This tests the <ref refid="group__cpu__idle__apis_1ga7b25e1bed511a813b32fbd0f91b09356" kindref="member">k_cpu_idle()</ref> routine. The first thing it does is align to a tick boundary. The only source of interrupts while the test is running is expected to be the tick clock timer which should wake the CPU. Thus after each call to <ref refid="group__cpu__idle__apis_1ga7b25e1bed511a813b32fbd0f91b09356" kindref="member">k_cpu_idle()</ref>, the tick count should be one higher.</para>
<para><simplesect kind="see"><para><ref refid="group__cpu__idle__apis_1ga7b25e1bed511a813b32fbd0f91b09356" kindref="member">k_cpu_idle()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="408" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="408" bodyend="411" declfile="tests/kernel/context/src/main.c" declline="216" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1abd355cf8ecf6fe3f43272d41a55034c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void isr_handler</definition>
        <argsstring>(const void *data)</argsstring>
        <name>isr_handler</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Handler to perform various actions from within an ISR context. </para>
        </briefdescription>
        <detaileddescription>
<para>This routine is the ISR handler for <ref refid="context_2src_2main_8c_1a4671835f60de5c6b706853efea60f397" kindref="member">isr_handler_trigger()</ref>. It performs the command requested in &lt;isr_info.command&gt;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="224" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="224" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a4671835f60de5c6b706853efea60f397" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void isr_handler_trigger</definition>
        <argsstring>(void)</argsstring>
        <name>isr_handler_trigger</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="254" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1abf9d87eeed5ebc5198709ce9766e152f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void kernel_init_objects</definition>
        <argsstring>(void)</argsstring>
        <name>kernel_init_objects</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize kernel objects. </para>
        </briefdescription>
        <detaileddescription>
<para>This routine initializes the kernel objects used in this module&apos;s tests. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="266" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="266" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1ac2c221c11ab2f3bcdcbe396933476e73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int irq_lock_wrapper</definition>
        <argsstring>(int unused)</argsstring>
        <name>irq_lock_wrapper</name>
        <param>
          <type>int</type>
          <declname>unused</declname>
        </param>
        <briefdescription>
<para>A wrapper for <ref refid="group__isr__apis_1ga19fdde73c3b02fcca6cf1d1e67631228" kindref="member">irq_lock()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="group__isr__apis_1ga19fdde73c3b02fcca6cf1d1e67631228" kindref="member">irq_lock()</ref> return value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="278" column="5" bodyfile="tests/kernel/context/src/main.c" bodystart="278" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a4853f16e8b9af6f45993e26eb99ec604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void irq_unlock_wrapper</definition>
        <argsstring>(int imask)</argsstring>
        <name>irq_unlock_wrapper</name>
        <param>
          <type>int</type>
          <declname>imask</declname>
        </param>
        <briefdescription>
<para>A wrapper for <ref refid="group__isr__apis_1ga646045943b3b2a130738bcc48867bf57" kindref="member">irq_unlock()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="288" column="6" bodyfile="tests/kernel/context/src/main.c" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a8daa3c5a7737cfa3420e7dd76ea8b7d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int irq_disable_wrapper</definition>
        <argsstring>(int irq)</argsstring>
        <name>irq_disable_wrapper</name>
        <param>
          <type>int</type>
          <declname>irq</declname>
        </param>
        <briefdescription>
<para>A wrapper for <ref refid="group__isr__apis_1ga82c3a15d812f58e0f6525f358d031e6d" kindref="member">irq_disable()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><emphasis>irq</emphasis> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="298" column="5" bodyfile="tests/kernel/context/src/main.c" bodystart="298" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a4d9b21c8ec7b7ff5e0406425c158bbd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void irq_enable_wrapper</definition>
        <argsstring>(int irq)</argsstring>
        <name>irq_enable_wrapper</name>
        <param>
          <type>int</type>
          <declname>irq</declname>
        </param>
        <briefdescription>
<para>A wrapper for <ref refid="group__isr__apis_1ga7ea700ee31e4ff036c997a554dbedfeb" kindref="member">irq_enable()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="307" column="6" bodyfile="tests/kernel/context/src/main.c" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a48703c0aa7da1b0da578d0089eae9809" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_kernel_interrupts</definition>
        <argsstring>(void)</argsstring>
        <name>test_kernel_interrupts</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test routines for disabling and enabling interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para>Test Objective:<itemizedlist>
<listitem><para>To verify kernel architecture layer shall provide a mechanism to selectively disable and enable specific numeric interrupts.</para>
</listitem><listitem><para>This routine tests the routines for disabling and enabling interrupts. These include <ref refid="group__isr__apis_1ga19fdde73c3b02fcca6cf1d1e67631228" kindref="member">irq_lock()</ref> and <ref refid="group__isr__apis_1ga646045943b3b2a130738bcc48867bf57" kindref="member">irq_unlock()</ref>.</para>
</listitem></itemizedlist>
</para>
<para>Testing techniques:<itemizedlist>
<listitem><para>Interface testing, function and black box testing, dynamic analysis and testing</para>
</listitem></itemizedlist>
</para>
<para>Prerequisite Conditions:<itemizedlist>
<listitem><para>CONFIG_TICKLESS_KERNEL is not set.</para>
</listitem></itemizedlist>
</para>
<para>Input Specifications:<itemizedlist>
<listitem><para>N/A</para>
</listitem></itemizedlist>
</para>
<para>Test Procedure:<orderedlist>
<listitem><para>Do action to align to a tick boundary.</para>
</listitem><listitem><para>Left shift 4 bits for the value of counts.</para>
</listitem><listitem><para>Call <ref refid="group__isr__apis_1ga19fdde73c3b02fcca6cf1d1e67631228" kindref="member">irq_lock()</ref> and restore its return value to imask.</para>
</listitem><listitem><para>Call <ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32()</ref> and store its return value to tick.</para>
</listitem><listitem><para>Repeat counts of calling <ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32()</ref>.</para>
</listitem><listitem><para>Call <ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32()</ref> and store its return value to tick2.</para>
</listitem><listitem><para>Call <ref refid="group__isr__apis_1ga646045943b3b2a130738bcc48867bf57" kindref="member">irq_unlock()</ref> with parameter imask.</para>
</listitem><listitem><para>Check if tick is equal to tick2.</para>
</listitem><listitem><para>Repeat counts of calling <ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32()</ref>.</para>
</listitem><listitem><para>Call <ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32()</ref> and store its return value to tick2.</para>
</listitem><listitem><para>Check if tick is NOT equal to tick2.</para>
</listitem></orderedlist>
</para>
<para>Expected Test Result:<itemizedlist>
<listitem><para>The ticks shall not increase while interrupt locked.</para>
</listitem></itemizedlist>
</para>
<para>Pass/Fail Criteria:<itemizedlist>
<listitem><para>Successful if check points in test procedure are all passed, otherwise failure.</para>
</listitem></itemizedlist>
</para>
<para>Assumptions and Constraints:<itemizedlist>
<listitem><para>N/A</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__isr__apis_1ga19fdde73c3b02fcca6cf1d1e67631228" kindref="member">irq_lock()</ref>, <ref refid="group__isr__apis_1ga646045943b3b2a130738bcc48867bf57" kindref="member">irq_unlock()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="556" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="556" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a5bb447b5f5b19e446b78d6b186802a6c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_kernel_timer_interrupts</definition>
        <argsstring>(void)</argsstring>
        <name>test_kernel_timer_interrupts</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test routines for disabling and enabling interrupts (disable timer) </para>
        </briefdescription>
        <detaileddescription>
<para>Test Objective:<itemizedlist>
<listitem><para>To verify the kernel architecture layer shall provide a mechanism to simultenously mask all local CPU interrupts and return the previous mask state for restoration.</para>
</listitem><listitem><para>This routine tests the routines for disabling and enabling interrupts. These include <ref refid="group__isr__apis_1ga82c3a15d812f58e0f6525f358d031e6d" kindref="member">irq_disable()</ref> and <ref refid="group__isr__apis_1ga7ea700ee31e4ff036c997a554dbedfeb" kindref="member">irq_enable()</ref>.</para>
</listitem></itemizedlist>
</para>
<para>Testing techniques:<itemizedlist>
<listitem><para>Interface testing, function and black box testing, dynamic analysis and testing</para>
</listitem></itemizedlist>
</para>
<para>Prerequisite Conditions:<itemizedlist>
<listitem><para>TICK_IRQ is defined.</para>
</listitem></itemizedlist>
</para>
<para>Input Specifications:<itemizedlist>
<listitem><para>N/A</para>
</listitem></itemizedlist>
</para>
<para>Test Procedure:<orderedlist>
<listitem><para>Do action to align to a tick boundary.</para>
</listitem><listitem><para>Left shift 4 bit for the value of counts.</para>
</listitem><listitem><para>Call <ref refid="group__isr__apis_1ga82c3a15d812f58e0f6525f358d031e6d" kindref="member">irq_disable()</ref> and restore its return value to imask.</para>
</listitem><listitem><para>Call <ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32()</ref> and store its return value to tick.</para>
</listitem><listitem><para>Repeat counts of calling <ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32()</ref>.</para>
</listitem><listitem><para>Call <ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32()</ref> and store its return value to tick2.</para>
</listitem><listitem><para>Call <ref refid="group__isr__apis_1ga7ea700ee31e4ff036c997a554dbedfeb" kindref="member">irq_enable()</ref> with parameter imask.</para>
</listitem><listitem><para>Check if tick is equal to tick2.</para>
</listitem><listitem><para>Repeat counts of calling <ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32()</ref>.</para>
</listitem><listitem><para>Call <ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32()</ref> and store its return value to tick2.</para>
</listitem><listitem><para>Check if tick is NOT equal to tick2.</para>
</listitem></orderedlist>
</para>
<para>Expected Test Result:<itemizedlist>
<listitem><para>The ticks shall not increase while interrupt locked.</para>
</listitem></itemizedlist>
</para>
<para>Pass/Fail Criteria:<itemizedlist>
<listitem><para>Successful if check points in test procedure are all passed, otherwise failure.</para>
</listitem></itemizedlist>
</para>
<para>Assumptions and Constraints:<itemizedlist>
<listitem><para>Note that this test works by disabling the timer interrupt directly, without any interaction with the timer driver or timeout subsystem. NOT ALL ARCHITECTURES will latch and deliver a timer interrupt that arrives while the interrupt is disabled, which means that the timeout list will become corrupted (because it contains items that should have expired in the past). Any use of kernel timeouts after completion of this test is disallowed. RUN THIS TEST LAST IN THE SUITE.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__isr__apis_1ga82c3a15d812f58e0f6525f358d031e6d" kindref="member">irq_disable()</ref>, <ref refid="group__isr__apis_1ga7ea700ee31e4ff036c997a554dbedfeb" kindref="member">irq_enable()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="621" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="621" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a4ece42132ae7172d05ce9e1256a0b880" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_kernel_ctx_thread</definition>
        <argsstring>(void)</argsstring>
        <name>test_kernel_ctx_thread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test some context routines. </para>
        </briefdescription>
        <detaileddescription>
<para>Test Objectve:<itemizedlist>
<listitem><para>Thread context handles derived from context switches must be able to be restored upon interrupt exit</para>
</listitem></itemizedlist>
</para>
<para>Testing techniques<itemizedlist>
<listitem><para>Functional and black box testing</para>
</listitem><listitem><para>Interface testing</para>
</listitem></itemizedlist>
</para>
<para>Prerequisite Condition:<itemizedlist>
<listitem><para>N/A</para>
</listitem></itemizedlist>
</para>
<para>Input Specifications:<itemizedlist>
<listitem><para>N/A</para>
</listitem></itemizedlist>
</para>
<para>Test Procedure:<orderedlist>
<listitem><para>Set priority of current thread to 0 as a preemptible thread</para>
</listitem><listitem><para>Trap to interrupt context, get thread id of the interrupted thread and pass back to that thread.</para>
</listitem><listitem><para>Return to thread context and make sure this context is interrupted by comparing its thread ID and the thread ID passed by isr.</para>
</listitem><listitem><para>Pass command to isr to check whether the isr is executed in interrupt context</para>
</listitem><listitem><para>When return to thread context, check the return value of command.</para>
</listitem></orderedlist>
</para>
<para>Expected Test Result:<itemizedlist>
<listitem><para>Thread context restored upon interrupt exit</para>
</listitem></itemizedlist>
</para>
<para>Pass/Fail criteria:<itemizedlist>
<listitem><para>Success if context of thread restored correctly, failure otherwise.</para>
</listitem></itemizedlist>
</para>
<para>Assumptions and Constraints<itemizedlist>
<listitem><para>N/A</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="see"><para><ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get()</ref>, <ref refid="group__isr__apis_1ga8482b0dd2283d12677a9ebe321667d16" kindref="member">k_is_in_isr()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="671" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="671" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a559797eed43f927a0e294d2863bc9427" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void thread_helper</definition>
        <argsstring>(void *arg1, void *arg2, void *arg3)</argsstring>
        <name>thread_helper</name>
        <param>
          <type>void *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg3</declname>
        </param>
        <briefdescription>
<para>Entry point to the thread&apos;s helper. </para>
        </briefdescription>
        <detaileddescription>
<para>This routine is the entry point to the thread&apos;s helper thread. It is used to help test the behavior of the <ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield()</ref> routine.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg1</parametername>
</parameternamelist>
<parameterdescription>
<para>unused </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg2</parametername>
</parameternamelist>
<parameterdescription>
<para>unused </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg3</parametername>
</parameternamelist>
<parameterdescription>
<para>unused </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="760" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="760" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a5d35b4440b2af61eef53da4d82f19eb1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void k_yield_entry</definition>
        <argsstring>(void *arg0, void *arg1, void *arg2)</argsstring>
        <name>k_yield_entry</name>
        <param>
          <type>void *</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
<para>Entry point to thread started by another thread. </para>
        </briefdescription>
        <detaileddescription>
<para>This routine is the entry point to the thread started by the thread. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="792" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="792" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a79d652f09b3067bf9ad37095b16fe518" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void kernel_thread_entry</definition>
        <argsstring>(void *_thread_id, void *arg1, void *arg2)</argsstring>
        <name>kernel_thread_entry</name>
        <param>
          <type>void *</type>
          <declname>_thread_id</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="849" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="849" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a25ec07790cf5f2709eeacec2d96de048" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static K_THREAD_STACK_ARRAY_DEFINE</definition>
        <argsstring>(timeout_stacks, ARRAY_SIZE(timeouts),(384+CONFIG_TEST_EXTRA_STACKSIZE))</argsstring>
        <name>K_THREAD_STACK_ARRAY_DEFINE</name>
        <param>
          <type>timeout_stacks</type>
        </param>
        <param>
          <type><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(<ref refid="context_2src_2main_8c_1a8610a02a502b04dbf6e1342f578a8cdb" kindref="member">timeouts</ref>)</type>
        </param>
        <param>
          <type>(384+CONFIG_TEST_EXTRA_STACKSIZE)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="884" column="8" declfile="tests/kernel/context/src/main.c" declline="884" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1acde2c6d061c7ecdd440e687e98b49c80" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void busy_wait_thread</definition>
        <argsstring>(void *mseconds, void *arg2, void *arg3)</argsstring>
        <name>busy_wait_thread</name>
        <param>
          <type>void *</type>
          <declname>mseconds</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="889" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="889" bodyend="926"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1aa5e2a86062386ecf3af32d63ecba2400" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void thread_sleep</definition>
        <argsstring>(void *delta, void *arg2, void *arg3)</argsstring>
        <name>thread_sleep</name>
        <param>
          <type>void *</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="929" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="929" bodyend="951"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a49fea4e9756150cea4dedbabdf9f4b1c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void delayed_thread</definition>
        <argsstring>(void *num, void *arg2, void *arg3)</argsstring>
        <name>delayed_thread</name>
        <param>
          <type>void *</type>
          <declname>num</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="954" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="954" bodyend="965"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1ad163d982bb87ddb35bc9bd159a90a06e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_busy_wait</definition>
        <argsstring>(void)</argsstring>
        <name>test_busy_wait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test timouts. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait()</ref>, <ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="974" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="974" bodyend="989"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1aeec0eb7a58c70b7de271a92f94ea69e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test_k_sleep</definition>
        <argsstring>(void)</argsstring>
        <name>test_k_sleep</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test timouts. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__thread__apis_1ga48d4b041790454da4d68ac8711f29657" kindref="member">k_sleep()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="998" column="13" bodyfile="tests/kernel/context/src/main.c" bodystart="998" bodyend="1110"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1afa2f40318cc4cd619f1e97842e5727e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_k_yield</definition>
        <argsstring>(void)</argsstring>
        <name>test_k_yield</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test the <ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield()</ref> routine. </para>
        </briefdescription>
        <detaileddescription>
<para>Tests the <ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield()</ref> routine. It starts another thread (thus also testing <ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create()</ref>) and checks that behavior of <ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield()</ref> against the a higher priority thread, a lower priority thread, and another thread of equal priority.</para>
<para><simplesect kind="see"><para><ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="1125" column="6" bodyfile="tests/kernel/context/src/main.c" bodystart="1125" bodyend="1142"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a58f03fc58dea88701793b90ac85ff4ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_kernel_thread</definition>
        <argsstring>(void)</argsstring>
        <name>test_kernel_thread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Test kernel thread creation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="1152" column="6" bodyfile="tests/kernel/context/src/main.c" bodystart="1152" bodyend="1159"/>
      </memberdef>
      <memberdef kind="function" id="context_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_main</definition>
        <argsstring>(void)</argsstring>
        <name>test_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/kernel/context/src/main.c" line="1162" column="6" bodyfile="tests/kernel/context/src/main.c" bodystart="1162" bodyend="1181"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2012-2015<sp/>Wind<sp/>River<sp/>Systems,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>@brief<sp/>test<sp/>context<sp/>and<sp/>thread<sp/>APIs</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>kernel_context_tests<sp/>Context<sp/>Tests</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>all_tests</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>This<sp/>module<sp/>tests<sp/>the<sp/>following<sp/>CPU<sp/>and<sp/>thread<sp/>related<sp/>routines:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>k_thread_create(),<sp/>k_yield(),<sp/>k_is_in_isr(),</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>k_current_get(),<sp/>k_cpu_idle(),<sp/>k_cpu_atomic_idle(),</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>irq_lock(),<sp/>irq_unlock(),</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>irq_offload(),<sp/>irq_enable(),<sp/>irq_disable(),</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>@}</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztest_8h" kindref="compound">ztest.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="kernel__structs_8h" kindref="compound">kernel_structs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arch/cpu.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="irq__offload_8h" kindref="compound">irq_offload.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys_clock.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>Include<sp/>soc.h<sp/>from<sp/>platform<sp/>to<sp/>get<sp/>IRQ<sp/>number.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>Cortex-M<sp/>does<sp/>not<sp/>need<sp/>IRQ<sp/>numbers</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(CONFIG_CPU_CORTEX_M)<sp/>&amp;&amp;<sp/>!defined(CONFIG_XTENSA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;soc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREAD_STACKSIZE<sp/><sp/><sp/><sp/>(512<sp/>+<sp/>CONFIG_TEST_EXTRA_STACKSIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREAD_STACKSIZE2<sp/><sp/><sp/>(384<sp/>+<sp/>CONFIG_TEST_EXTRA_STACKSIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREAD_PRIORITY<sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREAD_SELF_CMD<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXEC_CTX_TYPE_CMD<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNKNOWN_COMMAND<sp/><sp/><sp/><sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>Get<sp/>the<sp/>timer<sp/>type<sp/>dependent<sp/>IRQ<sp/>number.<sp/>If<sp/>timer<sp/>type</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>is<sp/>not<sp/>defined<sp/>in<sp/>platform,<sp/>generate<sp/>an<sp/>error</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_HPET_TIMER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TICK_IRQ<sp/>DT_IRQN(DT_INST(0,<sp/>intel_hpet))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ARM_ARCH_TIMER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TICK_IRQ<sp/>ARM_ARCH_TIMER_IRQ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_APIC_TIMER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TICK_IRQ<sp/>CONFIG_APIC_TIMER_IRQ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_APIC_TSC_DEADLINE_TIMER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TICK_IRQ<sp/>z_loapic_irq_base()<sp/></highlight><highlight class="comment">/*<sp/>first<sp/>LVT<sp/>interrupt<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_XTENSA_TIMER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TICK_IRQ<sp/>UTIL_CAT(XCHAL_TIMER,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UTIL_CAT(CONFIG_XTENSA_TIMER_ID,<sp/>_INTERRUPT))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_CAVS_TIMER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TICK_IRQ<sp/>DSP_WCT_IRQ(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ALTERA_AVALON_TIMER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TICK_IRQ<sp/>TIMER_0_IRQ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ARCV2_TIMER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TICK_IRQ<sp/>IRQ_TIMER0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_RISCV_MACHINE_TIMER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TICK_IRQ<sp/>RISCV_MACHINE_TIMER_IRQ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ITE_IT8XXX2_TIMER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TICK_IRQ<sp/>DT_IRQ_BY_IDX(DT_NODELABEL(timer),<sp/>5,<sp/>irq)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_LITEX_TIMER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TICK_IRQ<sp/>DT_IRQN(DT_NODELABEL(timer0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_RV32M1_LPTMR_TIMER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TICK_IRQ<sp/>DT_IRQN(DT_ALIAS(system_lptmr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_XLNX_PSTTC_TIMER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TICK_IRQ<sp/>DT_IRQN(DT_INST(0,<sp/>xlnx_ttcps))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_RCAR_CMT_TIMER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TICK_IRQ<sp/>DT_IRQN(DT_INST(0,<sp/>renesas_rcar_cmt))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_CPU_CORTEX_M)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>The<sp/>Cortex-M<sp/>use<sp/>the<sp/>SYSTICK<sp/>exception<sp/>for<sp/>the<sp/>system<sp/>timer,<sp/>which<sp/>is</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>not<sp/>considered<sp/>an<sp/>IRQ<sp/>by<sp/>the<sp/>irq_enable/Disable<sp/>APIs.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_SPARC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_MIPS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CONFIG_ARCH_POSIX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/><sp/>defined(CONFIG_BOARD_NATIVE_POSIX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TICK_IRQ<sp/>TIMER_TICK_IRQ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>Other<sp/>POSIX<sp/>arch<sp/>boards<sp/>will<sp/>skip<sp/>the<sp/>irq_disable()<sp/>and<sp/>irq_enable()<sp/>test</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>unless<sp/>TICK_IRQ<sp/>is<sp/>defined<sp/>here<sp/>for<sp/>them</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(CONFIG_ARCH_POSIX)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>generate<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>Timer<sp/>type<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>this<sp/>platform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Cortex-M1,<sp/>Nios<sp/>II,<sp/>and<sp/>RISCV<sp/>without<sp/>CONFIG_RISCV_HAS_CPU_IDLE</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>do<sp/>have<sp/>a<sp/>power<sp/>saving<sp/>instruction,<sp/>so<sp/>k_cpu_idle()<sp/>returns<sp/>immediately</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(CONFIG_CPU_CORTEX_M1)<sp/>&amp;&amp;<sp/>!defined(CONFIG_NIOS2)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!defined(CONFIG_RISCV)<sp/>||<sp/>defined(CONFIG_RISCV_HAS_CPU_IDLE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAS_POWERSAVE_INSTRUCTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="structISR__INFO" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>command;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>command<sp/>to<sp/>process<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>value<sp/>(if<sp/>any)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>data<sp/>to<sp/>use<sp/>or<sp/>return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>value<sp/>to<sp/>be<sp/>passed<sp/>or<sp/>returned<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}<sp/><ref refid="structISR__INFO" kindref="compound">ISR_INFO</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="context_2src_2main_8c_1a5f225ecc8164d10d5cd0897674d11997" kindref="member">disable_int_func</ref>)<sp/>(int);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="context_2src_2main_8c_1a7f20e65c3605042a20e778e964f1bfa1" kindref="member">enable_int_func</ref>)<sp/>(int);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/><ref refid="context_2src_2main_8c_1a48ce445f23483a99a9cd1432df58c28e" kindref="member">sem_thread</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_timer<sp/><ref refid="context_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/><ref refid="context_2src_2main_8c_1a79558ed02795c4dfd087d7ba9e0be104" kindref="member">reply_timeout</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__fifo" kindref="compound">k_fifo</ref><sp/><ref refid="context_2src_2main_8c_1a83cc293b698e4cbdc4be24ef6b0f7083" kindref="member">timeout_order_fifo</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1aab8ee373d66c7335692a3ce45cebddcd" kindref="member">thread_evidence</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a9bda3e00bf96550334eadf74c9af316b" kindref="member">K_THREAD_STACK_DEFINE</ref>(thread_stack1,<sp/><ref refid="context_2src_2main_8c_1ae23a2e016adb8494df09e0e699d693f8" kindref="member">THREAD_STACKSIZE</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a9bda3e00bf96550334eadf74c9af316b" kindref="member">K_THREAD_STACK_DEFINE</ref>(thread_stack2,<sp/><ref refid="context_2src_2main_8c_1ae23a2e016adb8494df09e0e699d693f8" kindref="member">THREAD_STACKSIZE</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a9bda3e00bf96550334eadf74c9af316b" kindref="member">K_THREAD_STACK_DEFINE</ref>(thread_stack3,<sp/><ref refid="context_2src_2main_8c_1ae23a2e016adb8494df09e0e699d693f8" kindref="member">THREAD_STACKSIZE</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="context_2src_2main_8c_1a142b35a972e1d49b2f774510d10c8a74" kindref="member">thread_data1</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="context_2src_2main_8c_1ab51c8e218105b70256a91ca680290635" kindref="member">thread_data2</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="context_2src_2main_8c_1acfbe30fba051449e26d9a331942ea996" kindref="member">thread_data3</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structISR__INFO" kindref="compound">ISR_INFO</ref><sp/><ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a39919b9ff1c5e0c9c39fbb7d5cfd894e" kindref="member">test_kernel_cpu_idle</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a6b4bbe2df3140630cf0689f13827bf09" kindref="member">test_kernel_cpu_idle_atomic</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1abd355cf8ecf6fe3f43272d41a55034c4" kindref="member">isr_handler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a5f93ee3ba40806453d1007b3c08d95b9" kindref="member">command</ref>)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1ad8b8893d3e7d249bb86e9c26480c00dd" kindref="member">THREAD_SELF_CMD</ref>:</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a94e03dc2387b3ba5ab9e85310b161801" kindref="member">data</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a1eb84e631dba69550eceefec4e45da85" kindref="member">EXEC_CTX_TYPE_CMD</ref>:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__isr__apis_1ga8482b0dd2283d12677a9ebe321667d16" kindref="member">k_is_in_isr</ref>())<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a7be26e01b4844d8f0413c79b1641b7be" kindref="member">value</ref><sp/>=<sp/><ref refid="include_2kernel_8h_1ab0b42f9804777dfa5fed2b7cd866779ca30593044743695f8184a157283dac4d5" kindref="member">K_ISR</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_current-&gt;base.prio<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a7be26e01b4844d8f0413c79b1641b7be" kindref="member">value</ref><sp/>=<sp/><ref refid="include_2kernel_8h_1ab0b42f9804777dfa5fed2b7cd866779ca62c0b731a1bb3c5e4aadeba3f93df58b" kindref="member">K_COOP_THREAD</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a7be26e01b4844d8f0413c79b1641b7be" kindref="member">value</ref><sp/>=<sp/><ref refid="include_2kernel_8h_1ab0b42f9804777dfa5fed2b7cd866779cae84f57f4ac996c751d1f4c9e49789322" kindref="member">K_PREEMPT_THREAD</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a97c6cd4853b92bd785d4f7b25103a0d5" kindref="member">error</ref><sp/>=<sp/><ref refid="context_2src_2main_8c_1ac5f4cf1c989af592617184f7a7e5c372" kindref="member">UNKNOWN_COMMAND</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a4671835f60de5c6b706853efea60f397" kindref="member">isr_handler_trigger</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="irq__offload_8h_1a429859dd7ac3d88a4b7ae858835847ce" kindref="member">irq_offload</ref>(<ref refid="context_2src_2main_8c_1abd355cf8ecf6fe3f43272d41a55034c4" kindref="member">isr_handler</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1abf9d87eeed5ebc5198709ce9766e152f" kindref="member">kernel_init_objects</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="context_2src_2main_8c_1a79558ed02795c4dfd087d7ba9e0be104" kindref="member">reply_timeout</ref>,<sp/>0,<sp/>UINT_MAX);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga318c846a740b901e5d56876a47ad7f61" kindref="member">k_timer_init</ref>(&amp;<ref refid="context_2src_2main_8c_1a4ced20aea8a1e880c43f684a920b85da" kindref="member">timer</ref>,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fifo__apis_1gaeebf6ef54d4be61e19408f44a734a159" kindref="member">k_fifo_init</ref>(&amp;<ref refid="context_2src_2main_8c_1a83cc293b698e4cbdc4be24ef6b0f7083" kindref="member">timeout_order_fifo</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1ac2c221c11ab2f3bcdcbe396933476e73" kindref="member">irq_lock_wrapper</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unused)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(unused);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__isr__apis_1ga19fdde73c3b02fcca6cf1d1e67631228" kindref="member">irq_lock</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a4853f16e8b9af6f45993e26eb99ec604" kindref="member">irq_unlock_wrapper</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imask)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1ga646045943b3b2a130738bcc48867bf57" kindref="member">irq_unlock</ref>(imask);</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a8daa3c5a7737cfa3420e7dd76ea8b7d9" kindref="member">irq_disable_wrapper</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>irq)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1ga82c3a15d812f58e0f6525f358d031e6d" kindref="member">irq_disable</ref>(irq);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>irq;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a4d9b21c8ec7b7ff5e0406425c158bbd9" kindref="member">irq_enable_wrapper</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>irq)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__isr__apis_1ga7ea700ee31e4ff036c997a554dbedfeb" kindref="member">irq_enable</ref>(irq);</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAS_POWERSAVE_INSTRUCTION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_TICKLESS_KERNEL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_timer<sp/>idle_timer;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idle_timer_expiry_function(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_timer<sp/>*timer_id)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga8d3e3356a10d36570e16f7920e4c8772" kindref="member">k_timer_stop</ref>(&amp;idle_timer);</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_test_kernel_cpu_idle(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atomic)</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tms,<sp/>tms2;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>a<sp/>time<sp/>to<sp/>trigger<sp/>events<sp/>to<sp/>exit<sp/>idle<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga318c846a740b901e5d56876a47ad7f61" kindref="member">k_timer_init</ref>(&amp;idle_timer,<sp/>idle_timer_expiry_function,<sp/>NULL);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Repeat<sp/>the<sp/>test<sp/>five<sp/>times<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>to<sp/>ticks<sp/>before<sp/>starting<sp/>the<sp/>timer.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(k_timer_start()<sp/>rounds<sp/>its<sp/>duration<sp/>argument<sp/>down,<sp/>not<sp/>up,</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>a<sp/>tick<sp/>boundary)</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>timer<sp/>operates<sp/>under<sp/>the<sp/>assumption<sp/>that<sp/>the<sp/>interrupt<sp/>set</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>wake<sp/>the<sp/>cpu<sp/>from<sp/>idle<sp/>will<sp/>be<sp/>no<sp/>sooner<sp/>than<sp/>1<sp/>millsecond<sp/>in</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>future.<sp/>Ensure<sp/>we<sp/>are<sp/>a<sp/>tick<sp/>boundary<sp/>each<sp/>time,<sp/>so<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>system<sp/>timer<sp/>does<sp/>not<sp/>choose<sp/>to<sp/>fire<sp/>an<sp/>interrupt<sp/>sooner.</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gaeac56bb072ce295b9fdc372ab8cee67e" kindref="member">k_usleep</ref>(1);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__timer__apis_1ga3ba70e9f059ff52fd2057ab89ea7f2ee" kindref="member">k_timer_start</ref>(&amp;idle_timer,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(1),<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tms<sp/>=<sp/><ref refid="group__clock__apis_1ga9253cfb7b46af4d8994349323ce9872b" kindref="member">k_uptime_get_32</ref>();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atomic)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref><sp/>=<sp/><ref refid="group__isr__apis_1ga19fdde73c3b02fcca6cf1d1e67631228" kindref="member">irq_lock</ref>();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__cpu__idle__apis_1gadf88ece6447b65b7d0d2f3a70ab4fe8f" kindref="member">k_cpu_atomic_idle</ref>(<ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__cpu__idle__apis_1ga7b25e1bed511a813b32fbd0f91b09356" kindref="member">k_cpu_idle</ref>();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tms<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tms2<sp/>=<sp/><ref refid="group__clock__apis_1ga9253cfb7b46af4d8994349323ce9872b" kindref="member">k_uptime_get_32</ref>();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(tms2<sp/>&lt;<sp/>tms,<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>ms<sp/>value<sp/>computed,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;got<sp/>%d<sp/>which<sp/>is<sp/>less<sp/>than<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tms2,<sp/>tms);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_TICKLESS_KERNEL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_test_kernel_cpu_idle(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atomic)</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tms,<sp/>tms2;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>to<sp/>a<sp/>&quot;ms<sp/>boundary&quot;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tms<sp/>=<sp/><ref refid="group__clock__apis_1ga9253cfb7b46af4d8994349323ce9872b" kindref="member">k_uptime_get_32</ref>();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tms<sp/>==<sp/><ref refid="group__clock__apis_1ga9253cfb7b46af4d8994349323ce9872b" kindref="member">k_uptime_get_32</ref>())<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_ARCH_POSIX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait</ref>(50);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tms<sp/>=<sp/><ref refid="group__clock__apis_1ga9253cfb7b46af4d8994349323ce9872b" kindref="member">k_uptime_get_32</ref>();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Repeat<sp/>the<sp/>test<sp/>five<sp/>times<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atomic)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref><sp/>=<sp/><ref refid="group__isr__apis_1ga19fdde73c3b02fcca6cf1d1e67631228" kindref="member">irq_lock</ref>();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__cpu__idle__apis_1gadf88ece6447b65b7d0d2f3a70ab4fe8f" kindref="member">k_cpu_atomic_idle</ref>(<ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__cpu__idle__apis_1ga7b25e1bed511a813b32fbd0f91b09356" kindref="member">k_cpu_idle</ref>();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculating<sp/>milliseconds<sp/>per<sp/>tick*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tms<sp/>+=<sp/><ref refid="time__units_8h_1a828a817b2dbade336bc9934576984490" kindref="member">k_ticks_to_ms_floor64</ref>(1);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tms2<sp/>=<sp/><ref refid="group__clock__apis_1ga9253cfb7b46af4d8994349323ce9872b" kindref="member">k_uptime_get_32</ref>();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(tms2<sp/>&lt;<sp/>tms,<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>ms<sp/>per<sp/>tick<sp/>value<sp/>computed,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;got<sp/>%d<sp/>which<sp/>is<sp/>less<sp/>than<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tms2,<sp/>tms);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_TICKLESS_KERNEL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_ARM)<sp/>||<sp/>defined(CONFIG_ARM64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a6b4bbe2df3140630cf0689f13827bf09" kindref="member">test_kernel_cpu_idle_atomic</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a6b4bbe2df3140630cf0689f13827bf09" kindref="member">test_kernel_cpu_idle_atomic</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_test_kernel_cpu_idle(1);</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a39919b9ff1c5e0c9c39fbb7d5cfd894e" kindref="member">test_kernel_cpu_idle</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>*<sp/>Fixme:<sp/>remove<sp/>the<sp/>skip<sp/>code<sp/>when<sp/>sleep<sp/>instruction<sp/>in</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*<sp/>nsim_hs_smp<sp/>is<sp/>fixed.</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_SOC_NSIM)<sp/>&amp;&amp;<sp/>defined(CONFIG_SMP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_test_kernel_cpu_idle(0);</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>HAS_POWERSAVE_INSTRUCTION<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a39919b9ff1c5e0c9c39fbb7d5cfd894e" kindref="member">test_kernel_cpu_idle</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a6b4bbe2df3140630cf0689f13827bf09" kindref="member">test_kernel_cpu_idle_atomic</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_test_kernel_interrupts(<ref refid="context_2src_2main_8c_1a5f225ecc8164d10d5cd0897674d11997" kindref="member">disable_int_func</ref><sp/>disable_int,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a7f20e65c3605042a20e778e964f1bfa1" kindref="member">enable_int_func</ref><sp/>enable_int,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>irq)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tick;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tick2;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imask;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>to<sp/>a<sp/>&quot;tick<sp/>boundary&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tick<sp/>=<sp/><ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32</ref>();</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32</ref>()<sp/>==<sp/>tick)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_ARCH_POSIX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait</ref>(1000);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tick++;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32</ref>()<sp/>==<sp/>tick)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_ARCH_POSIX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait</ref>(1000);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Inflate<sp/>&lt;count&gt;<sp/>so<sp/>that<sp/>when<sp/>we<sp/>loop<sp/>later,<sp/>many<sp/>ticks<sp/>should<sp/>have</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>elapsed<sp/>during<sp/>the<sp/>loop.<sp/>This<sp/>later<sp/>loop<sp/>will<sp/>not<sp/>exactly<sp/>match<sp/>the</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>previous<sp/>loop,<sp/>but<sp/>it<sp/>should<sp/>be<sp/>close<sp/>enough<sp/>in<sp/>structure<sp/>that<sp/>when</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>combined<sp/>with<sp/>the<sp/>inflated<sp/>count,<sp/>many<sp/>ticks<sp/>will<sp/>have<sp/>passed.</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref><sp/>&lt;&lt;=<sp/>4;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imask<sp/>=<sp/>disable_int(irq);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tick<sp/>=<sp/><ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32</ref>();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32</ref>();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_ARCH_POSIX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait</ref>(1000);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tick2<sp/>=<sp/><ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32</ref>();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Re-enable<sp/>interrupts<sp/>before<sp/>returning<sp/>(for<sp/>both<sp/>success<sp/>and<sp/>failure</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>cases).</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable_int(imask);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>TICKLESS,<sp/>current<sp/>time<sp/>is<sp/>retrieved<sp/>from<sp/>a<sp/>hardware</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>counter<sp/>and<sp/>ticks<sp/>DO<sp/>advance<sp/>with<sp/>interrupts<sp/>locked!</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(CONFIG_TICKLESS_KERNEL))<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(tick2,<sp/>tick,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;tick<sp/>advanced<sp/>with<sp/>interrupts<sp/>locked&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>repeat<sp/>with<sp/>interrupts<sp/>unlocked.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32</ref>();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_ARCH_POSIX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait</ref>(1000);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tick2<sp/>=<sp/><ref refid="include_2sys__clock_8h_1a38f64e34c3f5b179e1f65d96911823cd" kindref="member">sys_clock_tick_get_32</ref>();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(tick,<sp/>tick2,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;tick<sp/>didn&apos;t<sp/>advance<sp/>as<sp/>expected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a48703c0aa7da1b0da578d0089eae9809" kindref="member">test_kernel_interrupts</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IRQ<sp/>locks<sp/>don&apos;t<sp/>prevent<sp/>ticks<sp/>from<sp/>advancing<sp/>in<sp/>tickless<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(CONFIG_TICKLESS_KERNEL))<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_test_kernel_interrupts(<ref refid="context_2src_2main_8c_1ac2c221c11ab2f3bcdcbe396933476e73" kindref="member">irq_lock_wrapper</ref>,<sp/><ref refid="context_2src_2main_8c_1a4853f16e8b9af6f45993e26eb99ec604" kindref="member">irq_unlock_wrapper</ref>,<sp/>-1);</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a5bb447b5f5b19e446b78d6b186802a6c" kindref="member">test_kernel_timer_interrupts</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TICK_IRQ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>interrupts<sp/>coming<sp/>from<sp/>the<sp/>timer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_test_kernel_interrupts(<ref refid="context_2src_2main_8c_1a8daa3c5a7737cfa3420e7dd76ea8b7d9" kindref="member">irq_disable_wrapper</ref>,<sp/><ref refid="context_2src_2main_8c_1a4d9b21c8ec7b7ff5e0406425c158bbd9" kindref="member">irq_enable_wrapper</ref>,<sp/>TICK_IRQ);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gada3b1fcfa71db1bf7787c03ff45256d5" kindref="member">ztest_test_skip</ref>();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a4ece42132ae7172d05ce9e1256a0b880" kindref="member">test_kernel_ctx_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/>self_thread_id;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Testing<sp/>k_current_get()<sp/>from<sp/>an<sp/>ISR<sp/>and<sp/>thread\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self_thread_id<sp/>=<sp/><ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>();</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a5f93ee3ba40806453d1007b3c08d95b9" kindref="member">command</ref><sp/>=<sp/><ref refid="context_2src_2main_8c_1ad8b8893d3e7d249bb86e9c26480c00dd" kindref="member">THREAD_SELF_CMD</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a97c6cd4853b92bd785d4f7b25103a0d5" kindref="member">error</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>isr_info<sp/>is<sp/>modified<sp/>by<sp/>the<sp/>isr_handler<sp/>routine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a4671835f60de5c6b706853efea60f397" kindref="member">isr_handler_trigger</ref>();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a97c6cd4853b92bd785d4f7b25103a0d5" kindref="member">error</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ISR<sp/>detected<sp/>an<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a94e03dc2387b3ba5ab9e85310b161801" kindref="member">data</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)self_thread_id,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ISR<sp/>context<sp/>ID<sp/>mismatch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Testing<sp/>k_is_in_isr()<sp/>from<sp/>an<sp/>ISR\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a5f93ee3ba40806453d1007b3c08d95b9" kindref="member">command</ref><sp/>=<sp/><ref refid="context_2src_2main_8c_1a1eb84e631dba69550eceefec4e45da85" kindref="member">EXEC_CTX_TYPE_CMD</ref>;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a97c6cd4853b92bd785d4f7b25103a0d5" kindref="member">error</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a4671835f60de5c6b706853efea60f397" kindref="member">isr_handler_trigger</ref>();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a97c6cd4853b92bd785d4f7b25103a0d5" kindref="member">error</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ISR<sp/>detected<sp/>an<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a7be26e01b4844d8f0413c79b1641b7be" kindref="member">value</ref>,<sp/><ref refid="include_2kernel_8h_1ab0b42f9804777dfa5fed2b7cd866779ca30593044743695f8184a157283dac4d5" kindref="member">K_ISR</ref>,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;isr_info.value<sp/>was<sp/>not<sp/>K_ISR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Testing<sp/>k_is_in_isr()<sp/>from<sp/>a<sp/>preemptible<sp/>thread\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__isr__apis_1ga8482b0dd2283d12677a9ebe321667d16" kindref="member">k_is_in_isr</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>not<sp/>be<sp/>in<sp/>ISR<sp/>context&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(_current-&gt;base.prio<sp/>&lt;<sp/>0,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Current<sp/>thread<sp/>should<sp/>have<sp/>preemptible<sp/>priority:<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_current-&gt;base.prio);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_test_kernel_thread(<ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/>_thread_id)</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/>self_thread_id;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self_thread_id<sp/>=<sp/><ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>();</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga2f30aa3d3bfe7281b86b725dec394466" kindref="member">zassert_true</ref>((self_thread_id<sp/>!=<sp/>_thread_id),<sp/></highlight><highlight class="stringliteral">&quot;thread<sp/>id<sp/>matches<sp/>parent<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a5f93ee3ba40806453d1007b3c08d95b9" kindref="member">command</ref><sp/>=<sp/><ref refid="context_2src_2main_8c_1ad8b8893d3e7d249bb86e9c26480c00dd" kindref="member">THREAD_SELF_CMD</ref>;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a97c6cd4853b92bd785d4f7b25103a0d5" kindref="member">error</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a4671835f60de5c6b706853efea60f397" kindref="member">isr_handler_trigger</ref>();</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Either<sp/>the<sp/>ISR<sp/>detected<sp/>an<sp/>error,<sp/>or<sp/>the<sp/>ISR<sp/>context<sp/>ID</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>does<sp/>not<sp/>match<sp/>the<sp/>interrupted<sp/>thread&apos;s<sp/>ID.</highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>((<ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a97c6cd4853b92bd785d4f7b25103a0d5" kindref="member">error</ref><sp/>||<sp/>(<ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a94e03dc2387b3ba5ab9e85310b161801" kindref="member">data</ref><sp/>!=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)self_thread_id)),</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Thread<sp/>ID<sp/>taken<sp/>during<sp/>ISR<sp/>!=<sp/>calling<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a5f93ee3ba40806453d1007b3c08d95b9" kindref="member">command</ref><sp/>=<sp/><ref refid="context_2src_2main_8c_1a1eb84e631dba69550eceefec4e45da85" kindref="member">EXEC_CTX_TYPE_CMD</ref>;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a97c6cd4853b92bd785d4f7b25103a0d5" kindref="member">error</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a4671835f60de5c6b706853efea60f397" kindref="member">isr_handler_trigger</ref>();</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>((<ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a97c6cd4853b92bd785d4f7b25103a0d5" kindref="member">error</ref><sp/>||<sp/>(<ref refid="context_2src_2main_8c_1a6f629aee17dbd14f177b064b92f1d013" kindref="member">isr_info</ref>.<ref refid="structISR__INFO_1a7be26e01b4844d8f0413c79b1641b7be" kindref="member">value</ref><sp/>!=<sp/><ref refid="include_2kernel_8h_1ab0b42f9804777dfa5fed2b7cd866779ca30593044743695f8184a157283dac4d5" kindref="member">K_ISR</ref>)),</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;k_is_in_isr()<sp/>when<sp/>called<sp/>from<sp/>an<sp/>ISR<sp/>is<sp/>false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="group__isr__apis_1ga8482b0dd2283d12677a9ebe321667d16" kindref="member">k_is_in_isr</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;k_is_in_isr()<sp/>when<sp/>called<sp/>from<sp/>a<sp/>thread<sp/>is<sp/>true&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>((_current-&gt;base.prio<sp/>&gt;=<sp/>0),</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;thread<sp/>is<sp/>not<sp/>a<sp/>cooperative<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a559797eed43f927a0e294d2863bc9427" kindref="member">thread_helper</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg3)</highlight></codeline>
<codeline lineno="761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/>self_thread_id;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg1);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg2);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg3);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="769"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>thread<sp/>starts<sp/>off<sp/>at<sp/>a<sp/>higher<sp/>priority<sp/>than<sp/>thread_entry().</highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Thus,<sp/>it<sp/>should<sp/>execute<sp/>immediately.</highlight></codeline>
<codeline lineno="771"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1aab8ee373d66c7335692a3ce45cebddcd" kindref="member">thread_evidence</ref>++;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>that<sp/>helper<sp/>will<sp/>yield<sp/>to<sp/>a<sp/>thread<sp/>of<sp/>equal<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self_thread_id<sp/>=<sp/><ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>();</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lower<sp/>priority<sp/>to<sp/>that<sp/>of<sp/>thread_entry()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(self_thread_id,<sp/>self_thread_id-&gt;<ref refid="structk__thread_1a09a988f143ab5c4df887894920ff9df8" kindref="member">base</ref>.prio<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield</ref>();<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Yield<sp/>to<sp/>thread<sp/>of<sp/>equal<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1aab8ee373d66c7335692a3ce45cebddcd" kindref="member">thread_evidence</ref>++;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>thread_evidence<sp/>should<sp/>now<sp/>be<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a5d35b4440b2af61eef53da4d82f19eb1" kindref="member">k_yield_entry</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg0,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg2)</highlight></codeline>
<codeline lineno="793"><highlight class="normal">{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/>self_thread_id;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg0);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg1);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg2);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1aab8ee373d66c7335692a3ce45cebddcd" kindref="member">thread_evidence</ref>++;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prove<sp/>that<sp/>the<sp/>thread<sp/>has<sp/>run<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="context_2src_2main_8c_1a48ce445f23483a99a9cd1432df58c28e" kindref="member">sem_thread</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Start<sp/>a<sp/>thread<sp/>of<sp/>higher<sp/>priority.<sp/>Note<sp/>that<sp/>since<sp/>the<sp/>new<sp/>thread<sp/>is</highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>being<sp/>started<sp/>from<sp/>a<sp/>thread,<sp/>it<sp/>will<sp/>not<sp/>automatically<sp/>switch<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="806"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>thread<sp/>as<sp/>it<sp/>would<sp/>if<sp/>done<sp/>from<sp/>another<sp/>thread.</highlight></codeline>
<codeline lineno="807"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self_thread_id<sp/>=<sp/><ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>();</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1aab8ee373d66c7335692a3ce45cebddcd" kindref="member">thread_evidence</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="context_2src_2main_8c_1ab51c8e218105b70256a91ca680290635" kindref="member">thread_data2</ref>,<sp/>thread_stack2,<sp/><ref refid="context_2src_2main_8c_1ae23a2e016adb8494df09e0e699d693f8" kindref="member">THREAD_STACKSIZE</ref>,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a559797eed43f927a0e294d2863bc9427" kindref="member">thread_helper</ref>,<sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1ac145d4747518572acfc8ee1579007d54" kindref="member">K_PRIO_COOP</ref>(<ref refid="context_2src_2main_8c_1ad918ca939d6feb90791380688d0cc4fa" kindref="member">THREAD_PRIORITY</ref><sp/>-<sp/>1),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="context_2src_2main_8c_1aab8ee373d66c7335692a3ce45cebddcd" kindref="member">thread_evidence</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Helper<sp/>created<sp/>at<sp/>higher<sp/>priority<sp/>ran<sp/>prematurely.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Test<sp/>that<sp/>the<sp/>thread<sp/>will<sp/>yield<sp/>to<sp/>the<sp/>higher<sp/>priority<sp/>helper.</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>thread_evidence<sp/>is<sp/>still<sp/>0.</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield</ref>();</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga9591c44c125ca0a073c0d80dc0d84a3b" kindref="member">zassert_not_equal</ref>(<ref refid="context_2src_2main_8c_1aab8ee373d66c7335692a3ce45cebddcd" kindref="member">thread_evidence</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;k_yield()<sp/>did<sp/>not<sp/>yield<sp/>to<sp/>a<sp/>higher<sp/>priority<sp/>thread:<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1aab8ee373d66c7335692a3ce45cebddcd" kindref="member">thread_evidence</ref>);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>((<ref refid="context_2src_2main_8c_1aab8ee373d66c7335692a3ce45cebddcd" kindref="member">thread_evidence</ref><sp/>&gt;<sp/>1),</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;k_yield()<sp/>did<sp/>not<sp/>yield<sp/>to<sp/>an<sp/>equal<sp/>priority<sp/>thread:<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1aab8ee373d66c7335692a3ce45cebddcd" kindref="member">thread_evidence</ref>);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="833"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Raise<sp/>the<sp/>priority<sp/>of<sp/>thread_entry().<sp/>Calling<sp/>k_yield()<sp/>should</highlight></codeline>
<codeline lineno="834"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>not<sp/>result<sp/>in<sp/>switching<sp/>to<sp/>the<sp/>helper.</highlight></codeline>
<codeline lineno="835"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(self_thread_id,<sp/>self_thread_id-&gt;<ref refid="structk__thread_1a09a988f143ab5c4df887894920ff9df8" kindref="member">base</ref>.prio<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga08a3484c33444ecedc2d71d78495a295" kindref="member">k_yield</ref>();</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="context_2src_2main_8c_1aab8ee373d66c7335692a3ce45cebddcd" kindref="member">thread_evidence</ref>,<sp/>1,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;k_yield()<sp/>yielded<sp/>to<sp/>a<sp/>lower<sp/>priority<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Block<sp/>on<sp/>sem_thread.<sp/>This<sp/>will<sp/>allow<sp/>the<sp/>helper<sp/>thread<sp/>to</highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>complete.<sp/>The<sp/>main<sp/>thread<sp/>will<sp/>wake<sp/>this<sp/>thread.</highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="context_2src_2main_8c_1a48ce445f23483a99a9cd1432df58c28e" kindref="member">sem_thread</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a79d652f09b3067bf9ad37095b16fe518" kindref="member">kernel_thread_entry</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_thread_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg2)</highlight></codeline>
<codeline lineno="850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg1);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg2);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1aab8ee373d66c7335692a3ce45cebddcd" kindref="member">thread_evidence</ref>++;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prove<sp/>that<sp/>the<sp/>thread<sp/>has<sp/>run<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="context_2src_2main_8c_1a48ce445f23483a99a9cd1432df58c28e" kindref="member">sem_thread</ref>,<sp/><ref refid="group__clock__apis_1ga0bb4b83f0222193b21a8910311bab0ca" kindref="member">K_FOREVER</ref>);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_test_kernel_thread((<ref refid="structk__thread" kindref="compound">k_tid_t</ref>)<sp/>_thread_id);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Timeout<sp/>tests</highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/>*<sp/>Test<sp/>the<sp/>k_sleep()<sp/>API,<sp/>as<sp/>well<sp/>as<sp/>the<sp/>k_thread_create()<sp/>ones.</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866" refid="structtimeout__order" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeout__order" kindref="compound">timeout_order</ref><sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structtimeout__order_1aaaabbb0a1c49e35e4a39f48f605c2e1f" kindref="member">link_in_fifo</ref>;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="structtimeout__order_1a33ea278dfa106c047022a019daeeb83b" kindref="member">timeout</ref>;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtimeout__order_1a16f8c70f4fdedb9597f06f9231f2581e" kindref="member">timeout_order</ref>;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtimeout__order_1a0948f25937f830e75f981e14eef7970c" kindref="member">q_order</ref>;</highlight></codeline>
<codeline lineno="871"><highlight class="normal">};</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeout__order" kindref="compound">timeout_order</ref><sp/><ref refid="context_2src_2main_8c_1a8610a02a502b04dbf6e1342f578a8cdb" kindref="member">timeouts</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>1000,<sp/>2,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>1500,<sp/>4,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>500,<sp/>0,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>750,<sp/>1,<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>1750,<sp/>5,<sp/>4<sp/>},</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>2000,<sp/>6,<sp/>5<sp/>},</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>1250,<sp/>3,<sp/>6<sp/>},</highlight></codeline>
<codeline lineno="881"><highlight class="normal">};</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TIMEOUT_THREADS<sp/>ARRAY_SIZE(timeouts)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1aab1dff2223c027ea2507228e7e040641" kindref="member">K_THREAD_STACK_ARRAY_DEFINE</ref>(timeout_stacks,<sp/><ref refid="context_2src_2main_8c_1a89eb04e18fb0d18932bde14763f3c956" kindref="member">NUM_TIMEOUT_THREADS</ref>,</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1ad21512696d32f82c37a9753f8e27767f" kindref="member">THREAD_STACKSIZE2</ref>);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structk__thread" kindref="compound">k_thread</ref><sp/><ref refid="context_2src_2main_8c_1a606734fde5ebce45006d5d030016d2b6" kindref="member">timeout_threads</ref>[<ref refid="context_2src_2main_8c_1a89eb04e18fb0d18932bde14763f3c956" kindref="member">NUM_TIMEOUT_THREADS</ref>];</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>a<sp/>thread<sp/>busy<sp/>waits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1acde2c6d061c7ecdd440e687e98b49c80" kindref="member">busy_wait_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*mseconds,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg3)</highlight></codeline>
<codeline lineno="890"><highlight class="normal">{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>usecs;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg2);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg3);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usecs<sp/>=<sp/><ref refid="group__sys-util_1ga6e5ec9c46d0140315a7c1d80d1cc3c38" kindref="member">POINTER_TO_INT</ref>(mseconds)<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Thread<sp/>busy<sp/>waiting<sp/>for<sp/>%d<sp/>usecs\n&quot;</highlight><highlight class="normal">,<sp/>usecs);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait</ref>(usecs);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Thread<sp/>busy<sp/>waiting<sp/>completed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>Broken<sp/>on<sp/>Nios<sp/>II,<sp/>see<sp/>#22956<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CONFIG_NIOS2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref><sp/>=<sp/><ref refid="arch_2arc_2v2_2irq_8h_1a1496f4f860a99f42e1aee15ce5c9b3e2" kindref="member">arch_irq_lock</ref>();</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Thread<sp/>busy<sp/>waiting<sp/>for<sp/>%d<sp/>usecs<sp/>(irqs<sp/>locked)\n&quot;</highlight><highlight class="normal">,<sp/>usecs);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga550b642e071480323e589866abb99c22" kindref="member">k_busy_wait</ref>(usecs);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Thread<sp/>busy<sp/>waiting<sp/>completed<sp/>(irqs<sp/>locked)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arch_2arc_2v2_2irq_8h_1a203e02b994beba0d006dad9f6d797c27" kindref="member">arch_irq_unlock</ref>(<ref refid="spinlock__error__case_8c_1ac67cfa528fbe6d605bc5a011b74611cc" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="913"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Ideally<sp/>the<sp/>test<sp/>should<sp/>verify<sp/>that<sp/>the<sp/>correct<sp/>number<sp/>of<sp/>ticks</highlight></codeline>
<codeline lineno="914"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>have<sp/>elapsed.<sp/>However,<sp/>when<sp/>running<sp/>under<sp/>QEMU,<sp/>the<sp/>tick<sp/>interrupt</highlight></codeline>
<codeline lineno="915"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>may<sp/>be<sp/>processed<sp/>on<sp/>a<sp/>very<sp/>irregular<sp/>basis,<sp/>meaning<sp/>that<sp/>far</highlight></codeline>
<codeline lineno="916"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>fewer<sp/>than<sp/>the<sp/>expected<sp/>number<sp/>of<sp/>ticks<sp/>may<sp/>occur<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="917"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>number<sp/>of<sp/>clock<sp/>cycles<sp/>vs.<sp/>what<sp/>would<sp/>ordinarily<sp/>be<sp/>expected.</highlight></codeline>
<codeline lineno="918"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="919"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Consequently,<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>for<sp/>now<sp/>to<sp/>test<sp/>busy<sp/>waiting<sp/>is</highlight></codeline>
<codeline lineno="920"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>invoke<sp/>the<sp/>API<sp/>and<sp/>verify<sp/>that<sp/>it<sp/>returns.<sp/>(If<sp/>it<sp/>takes<sp/>way</highlight></codeline>
<codeline lineno="921"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>too<sp/>long,<sp/>or<sp/>never<sp/>returns,<sp/>the<sp/>main<sp/>test<sp/>thread<sp/>may<sp/>be<sp/>able<sp/>to</highlight></codeline>
<codeline lineno="922"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>time<sp/>out<sp/>and<sp/>report<sp/>an<sp/>error.)</highlight></codeline>
<codeline lineno="923"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="context_2src_2main_8c_1a79558ed02795c4dfd087d7ba9e0be104" kindref="member">reply_timeout</ref>);</highlight></codeline>
<codeline lineno="926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>a<sp/>thread<sp/>sleeps<sp/>and<sp/>times<sp/>out,<sp/>then<sp/>reports<sp/>through<sp/>a<sp/>fifo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1aa5e2a86062386ecf3af32d63ecba2400" kindref="member">thread_sleep</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*delta,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg3)</highlight></codeline>
<codeline lineno="930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1ac714c0d2c1a4adb10e73cab29623314b" kindref="member">int64_t</ref><sp/>timestamp;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref><sp/>=<sp/><ref refid="group__sys-util_1ga6e5ec9c46d0140315a7c1d80d1cc3c38" kindref="member">POINTER_TO_INT</ref>(delta);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg2);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg3);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>thread<sp/>sleeping<sp/>for<sp/>%d<sp/>milliseconds\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp<sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>();</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga51307cdfe153ab3e918b18755d97c5d9" kindref="member">k_msleep</ref>(<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp<sp/>=<sp/><ref refid="group__clock__apis_1gae3e992cd3257c23d5b26d765fcbb2b69" kindref="member">k_uptime_get</ref>()<sp/>-<sp/>timestamp;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>thread<sp/>back<sp/>from<sp/>sleep\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slop<sp/>=<sp/><ref refid="group__sys-util_1gafa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(<ref refid="time__units_8h_1a828a817b2dbade336bc9934576984490" kindref="member">k_ticks_to_ms_floor64</ref>(2),<sp/>1);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timestamp<sp/>&lt;<sp/>timeout<sp/>||<sp/>timestamp<sp/>&gt;<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref><sp/>+<sp/>slop)<sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_ERROR(</highlight><highlight class="stringliteral">&quot;timestamp<sp/>out<sp/>of<sp/>range,<sp/>got<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)timestamp);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="context_2src_2main_8c_1a79558ed02795c4dfd087d7ba9e0be104" kindref="member">reply_timeout</ref>);</highlight></codeline>
<codeline lineno="951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>a<sp/>thread<sp/>is<sp/>started<sp/>with<sp/>a<sp/>delay,<sp/>then<sp/>it<sp/>reports<sp/>that<sp/>it<sp/>ran<sp/>via<sp/>a<sp/>fifo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a49fea4e9756150cea4dedbabdf9f4b1c" kindref="member">delayed_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*num,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg3)</highlight></codeline>
<codeline lineno="955"><highlight class="normal">{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeout__order" kindref="compound">timeout_order</ref><sp/>*<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref><sp/>=<sp/>&amp;<ref refid="context_2src_2main_8c_1a8610a02a502b04dbf6e1342f578a8cdb" kindref="member">timeouts</ref>[<ref refid="group__sys-util_1ga6e5ec9c46d0140315a7c1d80d1cc3c38" kindref="member">POINTER_TO_INT</ref>(num)];</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg2);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG_UNUSED(arg3);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>thread<sp/>(q<sp/>order:<sp/>%d,<sp/>t/o:<sp/>%d)<sp/>is<sp/>running\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>-&gt;q_order,<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>-&gt;timeout);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fifo__apis_1ga3addb10f86f19e245c23362433d5c913" kindref="member">k_fifo_put</ref>(&amp;<ref refid="context_2src_2main_8c_1a83cc293b698e4cbdc4be24ef6b0f7083" kindref="member">timeout_order_fifo</ref>,<sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1ad163d982bb87ddb35bc9bd159a90a06e" kindref="member">test_busy_wait</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="975"><highlight class="normal">{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fatal_2exception_2src_2main_8c_1ae3b62d25a3304d081b4272eeab42de09" kindref="member">rv</ref>;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref><sp/>=<sp/>20;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="context_2src_2main_8c_1a606734fde5ebce45006d5d030016d2b6" kindref="member">timeout_threads</ref>[0],<sp/>timeout_stacks[0],</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1ad21512696d32f82c37a9753f8e27767f" kindref="member">THREAD_STACKSIZE2</ref>,<sp/><ref refid="context_2src_2main_8c_1acde2c6d061c7ecdd440e687e98b49c80" kindref="member">busy_wait_thread</ref>,</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1gae236ed18fe2ff18ab47c15d2e7eeb417" kindref="member">INT_TO_POINTER</ref>(<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>),<sp/>NULL,</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><ref refid="include_2kernel_8h_1ac145d4747518572acfc8ee1579007d54" kindref="member">K_PRIO_COOP</ref>(<ref refid="context_2src_2main_8c_1ad918ca939d6feb90791380688d0cc4fa" kindref="member">THREAD_PRIORITY</ref>),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fatal_2exception_2src_2main_8c_1ae3b62d25a3304d081b4272eeab42de09" kindref="member">rv</ref><sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="context_2src_2main_8c_1a79558ed02795c4dfd087d7ba9e0be104" kindref="member">reply_timeout</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref><sp/>*<sp/>2<sp/>*<sp/>2));</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="fatal_2exception_2src_2main_8c_1ae3b62d25a3304d081b4272eeab42de09" kindref="member">rv</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>***<sp/>thread<sp/>timed<sp/>out<sp/>waiting<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;k_busy_wait()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1aeec0eb7a58c70b7de271a92f94ea69e1" kindref="member">test_k_sleep</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="999"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeout__order" kindref="compound">timeout_order</ref><sp/>*<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fatal_2exception_2src_2main_8c_1ae3b62d25a3304d081b4272eeab42de09" kindref="member">rv</ref>;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="context_2src_2main_8c_1a606734fde5ebce45006d5d030016d2b6" kindref="member">timeout_threads</ref>[0],<sp/>timeout_stacks[0],</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1ad21512696d32f82c37a9753f8e27767f" kindref="member">THREAD_STACKSIZE2</ref>,<sp/><ref refid="context_2src_2main_8c_1aa5e2a86062386ecf3af32d63ecba2400" kindref="member">thread_sleep</ref>,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1gae236ed18fe2ff18ab47c15d2e7eeb417" kindref="member">INT_TO_POINTER</ref>(<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>),<sp/>NULL,</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><ref refid="include_2kernel_8h_1ac145d4747518572acfc8ee1579007d54" kindref="member">K_PRIO_COOP</ref>(<ref refid="context_2src_2main_8c_1ad918ca939d6feb90791380688d0cc4fa" kindref="member">THREAD_PRIORITY</ref>),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fatal_2exception_2src_2main_8c_1ae3b62d25a3304d081b4272eeab42de09" kindref="member">rv</ref><sp/>=<sp/><ref refid="group__semaphore__apis_1gac71e2383c1920dddc45a561cacfef090" kindref="member">k_sem_take</ref>(&amp;<ref refid="context_2src_2main_8c_1a79558ed02795c4dfd087d7ba9e0be104" kindref="member">reply_timeout</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref><sp/>*<sp/>2));</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="fatal_2exception_2src_2main_8c_1ae3b62d25a3304d081b4272eeab42de09" kindref="member">rv</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>***<sp/>thread<sp/>timed<sp/>out<sp/>waiting<sp/>for<sp/>thread<sp/>on<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;k_sleep().&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>k_thread_create()<sp/>without<sp/>cancellation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Testing<sp/>k_thread_create()<sp/>without<sp/>cancellation\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="context_2src_2main_8c_1a89eb04e18fb0d18932bde14763f3c956" kindref="member">NUM_TIMEOUT_THREADS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="context_2src_2main_8c_1a606734fde5ebce45006d5d030016d2b6" kindref="member">timeout_threads</ref>[i],<sp/>timeout_stacks[i],</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1ad21512696d32f82c37a9753f8e27767f" kindref="member">THREAD_STACKSIZE2</ref>,</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a49fea4e9756150cea4dedbabdf9f4b1c" kindref="member">delayed_thread</ref>,</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1gae236ed18fe2ff18ab47c15d2e7eeb417" kindref="member">INT_TO_POINTER</ref>(i),<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1ac145d4747518572acfc8ee1579007d54" kindref="member">K_PRIO_COOP</ref>(5),<sp/>0,</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="context_2src_2main_8c_1a8610a02a502b04dbf6e1342f578a8cdb" kindref="member">timeouts</ref>[i].<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>));</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="context_2src_2main_8c_1a89eb04e18fb0d18932bde14763f3c956" kindref="member">NUM_TIMEOUT_THREADS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref><sp/>=<sp/><ref refid="group__fifo__apis_1ga1e2c480e2124116af97e94e7b4435de6" kindref="member">k_fifo_get</ref>(&amp;<ref refid="context_2src_2main_8c_1a83cc293b698e4cbdc4be24ef6b0f7083" kindref="member">timeout_order_fifo</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(750));</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gad78332e6bd37812e56ccc4af601542e4" kindref="member">zassert_not_null</ref>(<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>***<sp/>timeout<sp/>while<sp/>waiting<sp/>for&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>delayed<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>-&gt;timeout_order,<sp/>i,</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>***<sp/>wrong<sp/>delayed<sp/>thread<sp/>ran<sp/>(got<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expected<sp/>%d)\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>-&gt;timeout_order,<sp/>i);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>got<sp/>thread<sp/>(q<sp/>order:<sp/>%d,<sp/>t/o:<sp/>%d)<sp/>as<sp/>expected\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>-&gt;q_order,<sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>-&gt;timeout);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ensure<sp/>no<sp/>more<sp/>thread<sp/>fire<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref><sp/>=<sp/><ref refid="group__fifo__apis_1ga1e2c480e2124116af97e94e7b4435de6" kindref="member">k_fifo_get</ref>(&amp;<ref refid="context_2src_2main_8c_1a83cc293b698e4cbdc4be24ef6b0f7083" kindref="member">timeout_order_fifo</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(750));</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>***<sp/>got<sp/>something<sp/>unexpected<sp/>in<sp/>the<sp/>fifo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>k_thread_create()<sp/>with<sp/>cancellation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;Testing<sp/>k_thread_create()<sp/>with<sp/>cancellations\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cancellations[]<sp/>=<sp/>{<sp/>0,<sp/>3,<sp/>4,<sp/>6<sp/>};</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_cancellations<sp/>=<sp/><ref refid="group__sys-util_1ga70c57aae3eb654e205459b4362c8089a" kindref="member">ARRAY_SIZE</ref>(cancellations);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_cancellation<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/>delayed_threads[<ref refid="context_2src_2main_8c_1a89eb04e18fb0d18932bde14763f3c956" kindref="member">NUM_TIMEOUT_THREADS</ref>];</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="context_2src_2main_8c_1a89eb04e18fb0d18932bde14763f3c956" kindref="member">NUM_TIMEOUT_THREADS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__thread" kindref="compound">k_tid_t</ref><sp/>id;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="context_2src_2main_8c_1a606734fde5ebce45006d5d030016d2b6" kindref="member">timeout_threads</ref>[i],<sp/>timeout_stacks[i],</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1ad21512696d32f82c37a9753f8e27767f" kindref="member">THREAD_STACKSIZE2</ref>,<sp/><ref refid="context_2src_2main_8c_1a49fea4e9756150cea4dedbabdf9f4b1c" kindref="member">delayed_thread</ref>,</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sys-util_1gae236ed18fe2ff18ab47c15d2e7eeb417" kindref="member">INT_TO_POINTER</ref>(i),<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2kernel_8h_1ac145d4747518572acfc8ee1579007d54" kindref="member">K_PRIO_COOP</ref>(5),<sp/>0,</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(<ref refid="context_2src_2main_8c_1a8610a02a502b04dbf6e1342f578a8cdb" kindref="member">timeouts</ref>[i].<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>));</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delayed_threads[i]<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="context_2src_2main_8c_1a89eb04e18fb0d18932bde14763f3c956" kindref="member">NUM_TIMEOUT_THREADS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>cancellations[next_cancellation])<sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>cancelling<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[q<sp/>order:<sp/>%d,<sp/>t/o:<sp/>%d,<sp/>t/o<sp/>order:<sp/>%d]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a8610a02a502b04dbf6e1342f578a8cdb" kindref="member">timeouts</ref>[i].<ref refid="structtimeout__order_1a0948f25937f830e75f981e14eef7970c" kindref="member">q_order</ref>,<sp/><ref refid="context_2src_2main_8c_1a8610a02a502b04dbf6e1342f578a8cdb" kindref="member">timeouts</ref>[i].<ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="context_2src_2main_8c_1a89eb04e18fb0d18932bde14763f3c956" kindref="member">NUM_TIMEOUT_THREADS</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="context_2src_2main_8c_1a8610a02a502b04dbf6e1342f578a8cdb" kindref="member">timeouts</ref>[j].<ref refid="structtimeout__order" kindref="compound">timeout_order</ref><sp/>==<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/><ref refid="context_2src_2main_8c_1a89eb04e18fb0d18932bde14763f3c956" kindref="member">NUM_TIMEOUT_THREADS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga1f44bb0307bea7a97227764ecd7bf963" kindref="member">k_thread_abort</ref>(delayed_threads[j]);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++next_cancellation;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref><sp/>=<sp/><ref refid="group__fifo__apis_1ga1e2c480e2124116af97e94e7b4435de6" kindref="member">k_fifo_get</ref>(&amp;<ref refid="context_2src_2main_8c_1a83cc293b698e4cbdc4be24ef6b0f7083" kindref="member">timeout_order_fifo</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(2750));</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gad78332e6bd37812e56ccc4af601542e4" kindref="member">zassert_not_null</ref>(<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>***<sp/>timeout<sp/>while<sp/>waiting<sp/>for&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>delayed<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>-&gt;timeout_order,<sp/>i,</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>***<sp/>wrong<sp/>delayed<sp/>thread<sp/>ran<sp/>(got<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expected<sp/>%d)\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>-&gt;timeout_order,<sp/>i);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_PRINT(</highlight><highlight class="stringliteral">&quot;<sp/>got<sp/>(q<sp/>order:<sp/>%d,<sp/>t/o:<sp/>%d,<sp/>t/o<sp/>order<sp/>%d)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;as<sp/>expected\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>-&gt;q_order,<sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>-&gt;timeout,</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>-&gt;timeout_order);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(num_cancellations,<sp/>next_cancellation,</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>***<sp/>wrong<sp/>number<sp/>of<sp/>cancellations<sp/>(expected<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;got<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>num_cancellations,<sp/>next_cancellation);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ensure<sp/>no<sp/>more<sp/>thread<sp/>fire<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref><sp/>=<sp/><ref refid="group__fifo__apis_1ga1e2c480e2124116af97e94e7b4435de6" kindref="member">k_fifo_get</ref>(&amp;<ref refid="context_2src_2main_8c_1a83cc293b698e4cbdc4be24ef6b0f7083" kindref="member">timeout_order_fifo</ref>,<sp/><ref refid="group__clock__apis_1ga302af954e87b10a9b731f1ad07775e9f" kindref="member">K_MSEC</ref>(750));</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1gacc41f998b701997e4eafb6ed7b9d537c" kindref="member">zassert_false</ref>(<ref refid="lifo_2lifo__usage_2src_2main_8c_1a26a93d0e90402ec4ab7fef93dedf21fb" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>***<sp/>got<sp/>something<sp/>unexpected<sp/>in<sp/>the<sp/>fifo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1afa2f40318cc4cd619f1e97842e5727e9" kindref="member">test_k_yield</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1aab8ee373d66c7335692a3ce45cebddcd" kindref="member">thread_evidence</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1ga24e50a60c524d1eb22fe21cdf269b6a6" kindref="member">k_thread_priority_set</ref>(<ref refid="group__thread__apis_1ga7ef1ed0fb9513df8096ede1e52fc76b2" kindref="member">k_current_get</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gadcd0e6cfba3392fb887222eafe4c1845" kindref="member">k_sem_init</ref>(&amp;<ref refid="context_2src_2main_8c_1a48ce445f23483a99a9cd1432df58c28e" kindref="member">sem_thread</ref>,<sp/>0,<sp/>UINT_MAX);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="context_2src_2main_8c_1a142b35a972e1d49b2f774510d10c8a74" kindref="member">thread_data1</ref>,<sp/>thread_stack1,<sp/><ref refid="context_2src_2main_8c_1ae23a2e016adb8494df09e0e699d693f8" kindref="member">THREAD_STACKSIZE</ref>,</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a5d35b4440b2af61eef53da4d82f19eb1" kindref="member">k_yield_entry</ref>,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><ref refid="include_2kernel_8h_1ac145d4747518572acfc8ee1579007d54" kindref="member">K_PRIO_COOP</ref>(<ref refid="context_2src_2main_8c_1ad918ca939d6feb90791380688d0cc4fa" kindref="member">THREAD_PRIORITY</ref>),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__assert_1ga107b470a617e5c398353db398a3424e2" kindref="member">zassert_equal</ref>(<ref refid="context_2src_2main_8c_1aab8ee373d66c7335692a3ce45cebddcd" kindref="member">thread_evidence</ref>,<sp/>1,</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Thread<sp/>did<sp/>not<sp/>execute<sp/>as<sp/>expected!:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="context_2src_2main_8c_1aab8ee373d66c7335692a3ce45cebddcd" kindref="member">thread_evidence</ref>);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="context_2src_2main_8c_1a48ce445f23483a99a9cd1432df58c28e" kindref="member">sem_thread</ref>);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="context_2src_2main_8c_1a48ce445f23483a99a9cd1432df58c28e" kindref="member">sem_thread</ref>);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__semaphore__apis_1gab9be3cf1988af2cd6afdace52d497c84" kindref="member">k_sem_give</ref>(&amp;<ref refid="context_2src_2main_8c_1a48ce445f23483a99a9cd1432df58c28e" kindref="member">sem_thread</ref>);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="context_2src_2main_8c_1a58f03fc58dea88701793b90ac85ff4ef" kindref="member">test_kernel_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thread__apis_1gad5b0bff3102f1656089f5875d999a367" kindref="member">k_thread_create</ref>(&amp;<ref refid="context_2src_2main_8c_1acfbe30fba051449e26d9a331942ea996" kindref="member">thread_data3</ref>,<sp/>thread_stack3,<sp/><ref refid="context_2src_2main_8c_1ae23a2e016adb8494df09e0e699d693f8" kindref="member">THREAD_STACKSIZE</ref>,</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1a79d652f09b3067bf9ad37095b16fe518" kindref="member">kernel_thread_entry</ref>,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><ref refid="include_2kernel_8h_1ac145d4747518572acfc8ee1579007d54" kindref="member">K_PRIO_COOP</ref>(<ref refid="context_2src_2main_8c_1ad918ca939d6feb90791380688d0cc4fa" kindref="member">THREAD_PRIORITY</ref>),<sp/>0,<sp/><ref refid="group__clock__apis_1ga3d9541cfe2e8395af66d186efa77362f" kindref="member">K_NO_WAIT</ref>);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="comment">/*test<sp/>case<sp/>main<sp/>entry*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="common_2src_2main_8c_1a8a4533f287d99bb2d7c24c0e29c9a449" kindref="member">test_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<ref refid="context_2src_2main_8c_1aeec0eb7a58c70b7de271a92f94ea69e1" kindref="member">test_k_sleep</ref>;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="context_2src_2main_8c_1abf9d87eeed5ebc5198709ce9766e152f" kindref="member">kernel_init_objects</ref>();</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>timer_interrupts<sp/>test<sp/>MUST<sp/>BE<sp/>LAST,<sp/>see<sp/>note<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga2ad3ecbbedb04310c6a4ac997a8d3550" kindref="member">ztest_test_suite</ref>(context,</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="context_2src_2main_8c_1a48703c0aa7da1b0da578d0089eae9809" kindref="member">test_kernel_interrupts</ref>),</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="context_2src_2main_8c_1a4ece42132ae7172d05ce9e1256a0b880" kindref="member">test_kernel_ctx_thread</ref>),</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="context_2src_2main_8c_1ad163d982bb87ddb35bc9bd159a90a06e" kindref="member">test_busy_wait</ref>),</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="context_2src_2main_8c_1aeec0eb7a58c70b7de271a92f94ea69e1" kindref="member">test_k_sleep</ref>),</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="context_2src_2main_8c_1a6b4bbe2df3140630cf0689f13827bf09" kindref="member">test_kernel_cpu_idle_atomic</ref>),</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1gaf19dfe9baa08c481c11fd0470e30bc3f" kindref="member">ztest_unit_test</ref>(<ref refid="context_2src_2main_8c_1a39919b9ff1c5e0c9c39fbb7d5cfd894e" kindref="member">test_kernel_cpu_idle</ref>),</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="context_2src_2main_8c_1afa2f40318cc4cd619f1e97842e5727e9" kindref="member">test_k_yield</ref>),</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="context_2src_2main_8c_1a58f03fc58dea88701793b90ac85ff4ef" kindref="member">test_kernel_thread</ref>),</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga6bec709a2a48c6065e6f5e01fea69685" kindref="member">ztest_1cpu_unit_test</ref>(<ref refid="context_2src_2main_8c_1a5bb447b5f5b19e446b78d6b186802a6c" kindref="member">test_kernel_timer_interrupts</ref>)</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ztest__test__deprecated_1ga7f76df4df4bf68a605b923fed8e5465c" kindref="member">ztest_run_test_suite</ref>(context);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/kernel/context/src/main.c"/>
  </compounddef>
</doxygen>
