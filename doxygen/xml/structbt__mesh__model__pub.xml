<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structbt__mesh__model__pub" kind="struct" language="C++" prot="public">
    <compoundname>bt_mesh_model_pub</compoundname>
    <includes refid="access_8h" local="no">access.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structbt__mesh__model__pub_1a602f69a0b966922954ca319cc6f64826" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structbt__mesh__model" kindref="compound">bt_mesh_model</ref> *</type>
        <definition>struct bt_mesh_model* bt_mesh_model_pub::mod</definition>
        <argsstring></argsstring>
        <name>mod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The model the context belongs to. Initialized by the stack. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="397" column="20" bodyfile="include/bluetooth/mesh/access.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__pub_1a408c9185168b962f7e7314f9a429fe8c" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t bt_mesh_model_pub::addr</definition>
        <argsstring></argsstring>
        <name>addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Publish Address. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="399" column="10" bodyfile="include/bluetooth/mesh/access.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__pub_1a0ad1809fe74930c9b36b32516a8d146f" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t bt_mesh_model_pub::key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <bitfield>12</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Publish AppKey Index. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="400" column="10" bodyfile="include/bluetooth/mesh/access.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__pub_1a3617adb0c1192419bdac2ad0f37199ac" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t bt_mesh_model_pub::cred</definition>
        <argsstring></argsstring>
        <name>cred</name>
        <bitfield>1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Friendship Credentials Flag. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="401" column="2" bodyfile="include/bluetooth/mesh/access.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__pub_1ab704aedcfd06d374615ef18c6ecc84a9" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t bt_mesh_model_pub::send_rel</definition>
        <argsstring></argsstring>
        <name>send_rel</name>
        <bitfield>1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Force reliable sending (segment acks) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="402" column="2" bodyfile="include/bluetooth/mesh/access.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__pub_1abdbdc3bbc5d4ac5a5d606b55bb2d50ee" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t bt_mesh_model_pub::fast_period</definition>
        <argsstring></argsstring>
        <name>fast_period</name>
        <bitfield>1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use FastPeriodDivisor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="403" column="2" bodyfile="include/bluetooth/mesh/access.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__pub_1a16c13e46c012ab836acd02b8fe5f05e3" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref></type>
        <definition>uint16_t bt_mesh_model_pub::retr_update</definition>
        <argsstring></argsstring>
        <name>retr_update</name>
        <bitfield>1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call update callback on every retransmission. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="404" column="2" bodyfile="include/bluetooth/mesh/access.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__pub_1a820b713aaa1e0c33a4a59c80f805e854" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_model_pub::ttl</definition>
        <argsstring></argsstring>
        <name>ttl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Publish Time to Live. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="406" column="10" bodyfile="include/bluetooth/mesh/access.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__pub_1a3d93d44ff85243dc94e7b4d36cde5b97" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_model_pub::retransmit</definition>
        <argsstring></argsstring>
        <name>retransmit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retransmit Count &amp; Interval Steps. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="407" column="10" bodyfile="include/bluetooth/mesh/access.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__pub_1ae550510e9ca45f8c9fd9802e4e7e0f3d" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_model_pub::period</definition>
        <argsstring></argsstring>
        <name>period</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Publish Period. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="408" column="10" bodyfile="include/bluetooth/mesh/access.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__pub_1a4f2ce8727ffb44f564d1dc0615ebcadf" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_model_pub::period_div</definition>
        <argsstring></argsstring>
        <name>period_div</name>
        <bitfield>4</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Divisor for the Period. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="409" column="10" bodyfile="include/bluetooth/mesh/access.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__pub_1a4e211c851bf91a9b43f035d435e9c93c" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t bt_mesh_model_pub::count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <bitfield>4</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transmissions left. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="410" column="2" bodyfile="include/bluetooth/mesh/access.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__pub_1ab6e00714ea899eb32873d10b0908d278" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>uint32_t bt_mesh_model_pub::period_start</definition>
        <argsstring></argsstring>
        <name>period_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start of the current period. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="412" column="10" bodyfile="include/bluetooth/mesh/access.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__pub_1a5f5639c01d3704ec3d527c418d35f827" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structnet__buf__simple" kindref="compound">net_buf_simple</ref> *</type>
        <definition>struct net_buf_simple* bt_mesh_model_pub::msg</definition>
        <argsstring></argsstring>
        <name>msg</name>
        <briefdescription>
<para>Publication buffer, containing the publication message. </para>
        </briefdescription>
        <detaileddescription>
<para>This will get correctly created when the publication context has been defined using the BT_MESH_MODEL_PUB_DEFINE macro. <verbatim>BT_MESH_MODEL_PUB_DEFINE(name, update, size);
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="421" column="21" bodyfile="include/bluetooth/mesh/access.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__pub_1a20fe8f8697f48a51e1e1c8374c1d3b3d" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* bt_mesh_model_pub::update) (struct bt_mesh_model *mod)</definition>
        <argsstring>)(struct bt_mesh_model *mod)</argsstring>
        <name>update</name>
        <briefdescription>
<para>Callback for updating the publication buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>When set to NULL, the model is assumed not to support periodic publishing. When set to non-NULL the callback will be called periodically and is expected to update <ref refid="structbt__mesh__model__pub_1a5f5639c01d3704ec3d527c418d35f827" kindref="member">bt_mesh_model_pub::msg</ref> with a valid publication message.</para>
<para>If the callback returns non-zero, the publication is skipped and will resume on the next periodic publishing interval.</para>
<para>When <ref refid="structbt__mesh__model__pub_1a16c13e46c012ab836acd02b8fe5f05e3" kindref="member">bt_mesh_model_pub::retr_update</ref> is set to 1, the callback will be called on every retransmission.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>The Model the Publication Context belogs to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success or (negative) error code otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="441" column="1" bodyfile="include/bluetooth/mesh/access.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__pub_1af3771432d13805710e94f013332e8214" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__work__delayable" kindref="compound">k_work_delayable</ref></type>
        <definition>struct k_work_delayable bt_mesh_model_pub::timer</definition>
        <argsstring></argsstring>
        <name>timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Publish Period Timer. Only for stack-internal use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="444" column="23" bodyfile="include/bluetooth/mesh/access.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Model publication context.</para>
<para>The context should primarily be created using the BT_MESH_MODEL_PUB_DEFINE macro. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="15">
        <label>__thread_entry</label>
      </node>
      <node id="13">
        <label>_callee_saved</label>
      </node>
      <node id="17">
        <label>_mem_domain_info</label>
      </node>
      <node id="23">
        <label>_slist</label>
      </node>
      <node id="9">
        <label>_snode</label>
      </node>
      <node id="22">
        <label>_thread_arch</label>
      </node>
      <node id="12">
        <label>_thread_base</label>
      </node>
      <node id="16">
        <label>_thread_stack_info</label>
      </node>
      <node id="24">
        <label>_timeout</label>
      </node>
      <node id="14">
        <label>_wait_q_t</label>
      </node>
      <node id="3">
        <label>bt_mesh_mod_id_vnd</label>
        <link refid="structbt__mesh__mod__id__vnd"/>
      </node>
      <node id="2">
        <label>bt_mesh_model</label>
        <link refid="structbt__mesh__model"/>
        <childnode refid="3" relation="usage">
          <edgelabel>vnd</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>pub</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>op</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>cb</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>bt_mesh_model_cb</label>
        <link refid="structbt__mesh__model__cb"/>
      </node>
      <node id="4">
        <label>bt_mesh_model_op</label>
        <link refid="structbt__mesh__model__op"/>
      </node>
      <node id="1">
        <label>bt_mesh_model_pub</label>
        <link refid="structbt__mesh__model__pub"/>
        <childnode refid="2" relation="usage">
          <edgelabel>mod</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>msg</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>timer</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>k_heap</label>
        <link refid="structk__heap"/>
        <childnode refid="20" relation="usage">
          <edgelabel>heap</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>k_spinlock</label>
        <link refid="structk__spinlock"/>
      </node>
      <node id="11">
        <label>k_thread</label>
        <link refid="structk__thread"/>
        <childnode refid="12" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>callee_saved</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>join_queue</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>entry</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>next_thread</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>stack_info</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>mem_domain_info</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>stack_obj</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>resource_pool</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>arch</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>k_work</label>
        <link refid="structk__work"/>
        <childnode refid="9" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>handler</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>k_work_delayable</label>
        <link refid="structk__work__delayable"/>
        <childnode refid="8" relation="usage">
          <edgelabel>work</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>timeout</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>k_work_q</label>
        <link refid="structk__work__q"/>
        <childnode refid="11" relation="usage">
          <edgelabel>thread</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>pending</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>drainq</edgelabel>
          <edgelabel>notifyq</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>net_buf_simple</label>
        <link refid="structnet__buf__simple"/>
      </node>
      <node id="20">
        <label>sys_heap</label>
        <link refid="structsys__heap"/>
      </node>
      <node id="18">
        <label>z_thread_stack_element</label>
      </node>
    </collaborationgraph>
    <location file="include/bluetooth/mesh/access.h" line="395" column="1" bodyfile="include/bluetooth/mesh/access.h" bodystart="395" bodyend="445"/>
    <listofallmembers>
      <member refid="structbt__mesh__model__pub_1a408c9185168b962f7e7314f9a429fe8c" prot="public" virt="non-virtual"><scope>bt_mesh_model_pub</scope><name>addr</name></member>
      <member refid="structbt__mesh__model__pub_1a4e211c851bf91a9b43f035d435e9c93c" prot="public" virt="non-virtual"><scope>bt_mesh_model_pub</scope><name>count</name></member>
      <member refid="structbt__mesh__model__pub_1a3617adb0c1192419bdac2ad0f37199ac" prot="public" virt="non-virtual"><scope>bt_mesh_model_pub</scope><name>cred</name></member>
      <member refid="structbt__mesh__model__pub_1abdbdc3bbc5d4ac5a5d606b55bb2d50ee" prot="public" virt="non-virtual"><scope>bt_mesh_model_pub</scope><name>fast_period</name></member>
      <member refid="structbt__mesh__model__pub_1a0ad1809fe74930c9b36b32516a8d146f" prot="public" virt="non-virtual"><scope>bt_mesh_model_pub</scope><name>key</name></member>
      <member refid="structbt__mesh__model__pub_1a602f69a0b966922954ca319cc6f64826" prot="public" virt="non-virtual"><scope>bt_mesh_model_pub</scope><name>mod</name></member>
      <member refid="structbt__mesh__model__pub_1a5f5639c01d3704ec3d527c418d35f827" prot="public" virt="non-virtual"><scope>bt_mesh_model_pub</scope><name>msg</name></member>
      <member refid="structbt__mesh__model__pub_1ae550510e9ca45f8c9fd9802e4e7e0f3d" prot="public" virt="non-virtual"><scope>bt_mesh_model_pub</scope><name>period</name></member>
      <member refid="structbt__mesh__model__pub_1a4f2ce8727ffb44f564d1dc0615ebcadf" prot="public" virt="non-virtual"><scope>bt_mesh_model_pub</scope><name>period_div</name></member>
      <member refid="structbt__mesh__model__pub_1ab6e00714ea899eb32873d10b0908d278" prot="public" virt="non-virtual"><scope>bt_mesh_model_pub</scope><name>period_start</name></member>
      <member refid="structbt__mesh__model__pub_1a16c13e46c012ab836acd02b8fe5f05e3" prot="public" virt="non-virtual"><scope>bt_mesh_model_pub</scope><name>retr_update</name></member>
      <member refid="structbt__mesh__model__pub_1a3d93d44ff85243dc94e7b4d36cde5b97" prot="public" virt="non-virtual"><scope>bt_mesh_model_pub</scope><name>retransmit</name></member>
      <member refid="structbt__mesh__model__pub_1ab704aedcfd06d374615ef18c6ecc84a9" prot="public" virt="non-virtual"><scope>bt_mesh_model_pub</scope><name>send_rel</name></member>
      <member refid="structbt__mesh__model__pub_1af3771432d13805710e94f013332e8214" prot="public" virt="non-virtual"><scope>bt_mesh_model_pub</scope><name>timer</name></member>
      <member refid="structbt__mesh__model__pub_1a820b713aaa1e0c33a4a59c80f805e854" prot="public" virt="non-virtual"><scope>bt_mesh_model_pub</scope><name>ttl</name></member>
      <member refid="structbt__mesh__model__pub_1a20fe8f8697f48a51e1e1c8374c1d3b3d" prot="public" virt="non-virtual"><scope>bt_mesh_model_pub</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
