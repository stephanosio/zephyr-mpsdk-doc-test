<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__bt__crypto" kind="group">
    <compoundname>bt_crypto</compoundname>
    <title>Cryptography</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__crypto_1ga2c85d3563547017ae97f22993272fb29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_rand</definition>
        <argsstring>(void *buf, size_t len)</argsstring>
        <name>bt_rand</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Generate random data. </para>
        </briefdescription>
        <detaileddescription>
<para>A random number generation helper which utilizes the Bluetooth controller&apos;s own RNG.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to insert the random data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of random data to generate</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success or error code otherwise, positive in case of protocol error or negative (POSIX) in case of stack internal error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/crypto.h" line="38" column="5" declfile="include/bluetooth/crypto.h" declline="38" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__crypto_1ga54d34c154deaf5b6f1523de15ddec18f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_encrypt_le</definition>
        <argsstring>(const uint8_t key[16], const uint8_t plaintext[16], uint8_t enc_data[16])</argsstring>
        <name>bt_encrypt_le</name>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>key</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>plaintext</declname>
          <array>[16]</array>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>enc_data</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
<para>AES encrypt little-endian data. </para>
        </briefdescription>
        <detaileddescription>
<para>An AES encrypt helper is used to request the Bluetooth controller&apos;s own hardware to encrypt the plaintext using the key and returns the encrypted data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>128 bit LS byte first key for the encryption of the plaintext </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>128 bit LS byte first plaintext data block to be encrypted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enc_data</parametername>
</parameternamelist>
<parameterdescription>
<para>128 bit LS byte first encrypted data block</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success or error code otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/crypto.h" line="52" column="5" declfile="include/bluetooth/crypto.h" declline="52" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__crypto_1gab93f5833e39b39e388bf40ba5c60d60f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_encrypt_be</definition>
        <argsstring>(const uint8_t key[16], const uint8_t plaintext[16], uint8_t enc_data[16])</argsstring>
        <name>bt_encrypt_be</name>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>key</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>plaintext</declname>
          <array>[16]</array>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>enc_data</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
<para>AES encrypt big-endian data. </para>
        </briefdescription>
        <detaileddescription>
<para>An AES encrypt helper is used to request the Bluetooth controller&apos;s own hardware to encrypt the plaintext using the key and returns the encrypted data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>128 bit MS byte first key for the encryption of the plaintext </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>128 bit MS byte first plaintext data block to be encrypted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enc_data</parametername>
</parameternamelist>
<parameterdescription>
<para>128 bit MS byte first encrypted data block</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success or error code otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/crypto.h" line="67" column="5" declfile="include/bluetooth/crypto.h" declline="67" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__crypto_1ga413a29883453982f0da13590dd493166" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_ccm_decrypt</definition>
        <argsstring>(const uint8_t key[16], uint8_t nonce[13], const uint8_t *enc_data, size_t len, const uint8_t *aad, size_t aad_len, uint8_t *plaintext, size_t mic_size)</argsstring>
        <name>bt_ccm_decrypt</name>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>key</declname>
          <array>[16]</array>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>nonce</declname>
          <array>[13]</array>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>enc_data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>aad</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>aad_len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>plaintext</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>mic_size</declname>
        </param>
        <briefdescription>
<para>Decrypt big-endian data with AES-CCM. </para>
        </briefdescription>
        <detaileddescription>
<para>Decrypts and authorizes <computeroutput>enc_data</computeroutput> with AES-CCM, as described in <ulink url="https://tools.ietf.org/html/rfc3610">https://tools.ietf.org/html/rfc3610</ulink>.</para>
<para>Assumes that the MIC follows directly after the encrypted data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>128 bit MS byte first key </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nonce</parametername>
</parameternamelist>
<parameterdescription>
<para>13 byte MS byte first nonce </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enc_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Encrypted data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the encrypted data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional input data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional input data length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>Plaintext buffer to place result in </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mic_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the trailing MIC (in bytes)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully decrypted the data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EBADMSG</parametername>
</parameternamelist>
<parameterdescription>
<para>Authentication failed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/crypto.h" line="91" column="5" declfile="include/bluetooth/crypto.h" declline="91" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__crypto_1ga7235be4697031ca6a0e535bdd707d3e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_ccm_encrypt</definition>
        <argsstring>(const uint8_t key[16], uint8_t nonce[13], const uint8_t *plaintext, size_t len, const uint8_t *aad, size_t aad_len, uint8_t *enc_data, size_t mic_size)</argsstring>
        <name>bt_ccm_encrypt</name>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>key</declname>
          <array>[16]</array>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>nonce</declname>
          <array>[13]</array>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>plaintext</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>aad</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>aad_len</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>enc_data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>mic_size</declname>
        </param>
        <briefdescription>
<para>Encrypt big-endian data with AES-CCM. </para>
        </briefdescription>
        <detaileddescription>
<para>Encrypts and generates a MIC from <computeroutput>plaintext</computeroutput> with AES-CCM, as described in <ulink url="https://tools.ietf.org/html/rfc3610">https://tools.ietf.org/html/rfc3610</ulink>.</para>
<para>Places the MIC directly after the encrypted data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>128 bit MS byte first key </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nonce</parametername>
</parameternamelist>
<parameterdescription>
<para>13 byte MS byte first nonce </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>Plaintext buffer to encrypt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the encrypted data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional input data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional input data length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enc_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to place encrypted data in </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mic_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the trailing MIC (in bytes)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully encrypted the data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/crypto.h" line="115" column="5" declfile="include/bluetooth/crypto.h" declline="115" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Cryptography. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
