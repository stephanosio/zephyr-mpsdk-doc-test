<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structbt__mesh__model__op" kind="struct" language="C++" prot="public">
    <compoundname>bt_mesh_model_op</compoundname>
    <includes refid="access_8h" local="no">access.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structbt__mesh__model__op_1a09c18a889e08bc708b9dc623f8177e39" prot="public" static="no" mutable="no">
        <type>const <ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
        <definition>const uint32_t bt_mesh_model_op::opcode</definition>
        <argsstring></argsstring>
        <name>opcode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OpCode encoded using the BT_MESH_MODEL_OP_* macros </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="167" column="17" bodyfile="include/bluetooth/mesh/access.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__op_1a25445fe2e937a321942c312bd675e486" prot="public" static="no" mutable="no">
        <type>const <ref refid="lib_2libc_2minimal_2include_2sys_2types_8h_1a5c5d83d87790efd59ea916c2b99f9118" kindref="member">ssize_t</ref></type>
        <definition>const ssize_t bt_mesh_model_op::len</definition>
        <argsstring></argsstring>
        <name>len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message length. If the message has variable length then this value indicates minimum message length and should be positive. Handler function should verify precise length based on the contents of the message. If the message has fixed length then this value should be negative. Use BT_MESH_LEN_* macros when defining this value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="175" column="15" bodyfile="include/bluetooth/mesh/access.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__model__op_1a6bffdfd8ae598c71cebc7b101ba5b85a" prot="public" static="no" mutable="no">
        <type>int(*const</type>
        <definition>int(*const bt_mesh_model_op::func) (struct bt_mesh_model *model, struct bt_mesh_msg_ctx *ctx, struct net_buf_simple *buf)</definition>
        <argsstring>)(struct bt_mesh_model *model, struct bt_mesh_msg_ctx *ctx, struct net_buf_simple *buf)</argsstring>
        <name>func</name>
        <briefdescription>
<para>Handler function for this opcode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>Model instance receiving the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context for the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Message buffer containing the message payload, not including the opcode.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success or (negative) error code otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/access.h" line="186" column="1" bodyfile="include/bluetooth/mesh/access.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Model opcode handler. </para>
    </detaileddescription>
    <location file="include/bluetooth/mesh/access.h" line="165" column="1" bodyfile="include/bluetooth/mesh/access.h" bodystart="165" bodyend="189"/>
    <listofallmembers>
      <member refid="structbt__mesh__model__op_1a6bffdfd8ae598c71cebc7b101ba5b85a" prot="public" virt="non-virtual"><scope>bt_mesh_model_op</scope><name>func</name></member>
      <member refid="structbt__mesh__model__op_1a25445fe2e937a321942c312bd675e486" prot="public" virt="non-virtual"><scope>bt_mesh_model_op</scope><name>len</name></member>
      <member refid="structbt__mesh__model__op_1a09c18a889e08bc708b9dc623f8177e39" prot="public" virt="non-virtual"><scope>bt_mesh_model_op</scope><name>opcode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
