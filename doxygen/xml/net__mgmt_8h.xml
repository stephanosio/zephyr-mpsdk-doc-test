<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="net__mgmt_8h" kind="file" language="C++">
    <compoundname>net_mgmt.h</compoundname>
    <includes refid="____assert_8h" local="no">sys/__assert.h</includes>
    <includes refid="net__core_8h" local="no">net/net_core.h</includes>
    <includes refid="net__event_8h" local="no">net/net_event.h</includes>
    <includedby refid="bt_8h" local="no">include/net/bt.h</includedby>
    <includedby refid="ethernet__mgmt_8h" local="no">include/net/ethernet_mgmt.h</includedby>
    <includedby refid="ieee802154_8h" local="no">include/net/ieee802154.h</includedby>
    <includedby refid="ieee802154__mgmt_8h" local="no">include/net/ieee802154_mgmt.h</includedby>
    <includedby refid="net__stats_8h" local="no">include/net/net_stats.h</includedby>
    <includedby refid="ppp_8h" local="no">include/net/ppp.h</includedby>
    <includedby refid="socket__net__mgmt_8h" local="no">include/net/socket_net_mgmt.h</includedby>
    <includedby refid="virtual__mgmt_8h" local="no">include/net/virtual_mgmt.h</includedby>
    <includedby refid="wifi__mgmt_8h" local="no">include/net/wifi_mgmt.h</includedby>
    <incdepgraph>
      <node id="12">
        <label>logging/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>logging/log_core.h</label>
        <link refid="include_2logging_2log__core_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>logging/log_instance.h</label>
        <link refid="log__instance_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>logging/log_msg.h</label>
        <link refid="log__msg_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>logging/log_msg2.h</label>
        <link refid="include_2logging_2log__msg2_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>net/net_core.h</label>
        <link refid="net__core_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>net/net_event.h</label>
        <link refid="net__event_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>net/net_ip.h</label>
        <link refid="net__ip_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>net/net_linkaddr.h</label>
        <link refid="net__linkaddr_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/net/net_mgmt.h</label>
        <link refid="net__mgmt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>net/net_timeout.h</label>
        <link refid="net__timeout_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>sys/atomic.h</label>
        <link refid="atomic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>sys/atomic_builtin.h</label>
        <link refid="atomic__builtin_8h"/>
      </node>
      <node id="43">
        <label>sys/byteorder.h</label>
        <link refid="byteorder_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sys/cbprintf.h</label>
        <link refid="cbprintf_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>sys/cbprintf_cxx.h</label>
        <link refid="cbprintf__cxx_8h"/>
      </node>
      <node id="27">
        <label>sys/cbprintf_internal.h</label>
        <link refid="cbprintf__internal_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>sys/errno_private.h</label>
        <link refid="errno__private_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sys/mpsc_packet.h</label>
        <link refid="mpsc__packet_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="18">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="14">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="3">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="9">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="26">
        <label>stdio.h</label>
        <link refid="stdio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>syscalls/log_core.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__core_8h"/>
      </node>
      <node id="33">
        <label>syscalls/log_msg2.h</label>
        <link refid="subsys_2testsuite_2ztest_2include_2syscalls_2log__msg2_8h"/>
      </node>
      <node id="32">
        <label>alloca.h</label>
      </node>
      <node id="36">
        <label>kernel.h</label>
      </node>
      <node id="7">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="34">
        <label>syscall.h</label>
      </node>
      <node id="30">
        <label>syscalls/errno_private.h</label>
      </node>
      <node id="45">
        <label>syscalls/net_ip.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/net/bt.h</label>
        <link refid="bt_8h"/>
      </node>
      <node id="33">
        <label>include/net/can.h</label>
        <link refid="net_2can_8h"/>
      </node>
      <node id="9">
        <label>include/net/dns_resolve.h</label>
        <link refid="dns__resolve_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>include/net/dsa.h</label>
        <link refid="dsa_8h"/>
      </node>
      <node id="24">
        <label>include/net/dummy.h</label>
        <link refid="dummy_8h"/>
      </node>
      <node id="25">
        <label>include/net/ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/net/ethernet_mgmt.h</label>
        <link refid="ethernet__mgmt_8h"/>
      </node>
      <node id="4">
        <label>include/net/ieee802154.h</label>
        <link refid="ieee802154_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/net/ieee802154_mgmt.h</label>
        <link refid="ieee802154__mgmt_8h"/>
      </node>
      <node id="6">
        <label>include/net/ieee802154_radio.h</label>
        <link refid="ieee802154__radio_8h"/>
      </node>
      <node id="35">
        <label>include/net/igmp.h</label>
        <link refid="igmp_8h"/>
      </node>
      <node id="36">
        <label>include/net/net_config.h</label>
        <link refid="net__config_8h"/>
      </node>
      <node id="8">
        <label>include/net/net_context.h</label>
        <link refid="net__context_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>include/net/net_if.h</label>
        <link refid="net__if_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/net/net_mgmt.h</label>
        <link refid="net__mgmt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>include/net/net_offload.h</label>
        <link refid="net__offload_8h"/>
      </node>
      <node id="23">
        <label>include/net/net_pkt.h</label>
        <link refid="net__pkt_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>include/net/net_pkt_filter.h</label>
        <link refid="net__pkt__filter_8h"/>
      </node>
      <node id="7">
        <label>include/net/net_stats.h</label>
        <link refid="net__stats_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>include/net/openthread.h</label>
        <link refid="openthread_8h"/>
      </node>
      <node id="27">
        <label>include/net/ppp.h</label>
        <link refid="ppp_8h"/>
      </node>
      <node id="28">
        <label>include/net/promiscuous.h</label>
        <link refid="promiscuous_8h"/>
      </node>
      <node id="20">
        <label>include/net/sntp.h</label>
        <link refid="sntp_8h"/>
      </node>
      <node id="10">
        <label>include/net/socket.h</label>
        <link refid="net_2socket_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>include/net/socket_can.h</label>
        <link refid="socket__can_8h"/>
      </node>
      <node id="39">
        <label>include/net/socket_net_mgmt.h</label>
        <link refid="socket__net__mgmt_8h"/>
      </node>
      <node id="11">
        <label>include/net/socket_offload.h</label>
        <link refid="socket__offload_8h"/>
      </node>
      <node id="16">
        <label>include/net/socketutils.h</label>
        <link refid="socketutils_8h"/>
      </node>
      <node id="12">
        <label>include/net/tftp.h</label>
        <link refid="tftp_8h"/>
      </node>
      <node id="29">
        <label>include/net/udp.h</label>
        <link refid="udp_8h"/>
      </node>
      <node id="30">
        <label>include/net/virtual.h</label>
        <link refid="virtual_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>include/net/virtual_mgmt.h</label>
        <link refid="virtual__mgmt_8h"/>
      </node>
      <node id="40">
        <label>include/net/wifi_mgmt.h</label>
        <link refid="wifi__mgmt_8h"/>
      </node>
      <node id="13">
        <label>include/posix/arpa/inet.h</label>
        <link refid="inet_8h"/>
      </node>
      <node id="14">
        <label>include/posix/net/if.h</label>
        <link refid="if_8h"/>
      </node>
      <node id="15">
        <label>include/posix/netdb.h</label>
        <link refid="netdb_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>include/posix/netinet/in.h</label>
        <link refid="in_8h"/>
      </node>
      <node id="18">
        <label>include/posix/netinet/tcp.h</label>
        <link refid="tcp_8h"/>
      </node>
      <node id="19">
        <label>include/posix/poll.h</label>
        <link refid="poll_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>include/posix/sys/socket.h</label>
        <link refid="posix_2sys_2socket_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structnet__mgmt__event__callback" prot="public">net_mgmt_event_callback</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__net__mgmt_1ga40e0f9fc86812ad9f6fe174b4c3804e6" prot="public" static="no">
        <name>net_mgmt</name>
        <param><defname>_mgmt_request</defname></param>
        <param><defname>_iface</defname></param>
        <param><defname>_data</defname></param>
        <param><defname>_len</defname></param>
        <initializer>	net_mgmt_##_mgmt_request(_mgmt_request, _iface, _data, _len)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="92" column="9" bodyfile="include/net/net_mgmt.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__net__mgmt_1ga08bde8717fd8e12a338c517b22b87776" prot="public" static="no">
        <name>NET_MGMT_DEFINE_REQUEST_HANDLER</name>
        <param><defname>_mgmt_request</defname></param>
        <initializer>	extern int net_mgmt_##_mgmt_request(<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> mgmt_request,	\
					    struct <ref refid="structnet__if" kindref="compound">net_if</ref> *iface,	\
					    void *<ref refid="test__stack__fail_8c_1a4bb6fa6c719fd9021449009ab8befc04" kindref="member">data</ref>, size_t len)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="95" column="9" bodyfile="include/net/net_mgmt.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__net__mgmt_1gab67d09d1e65b806ec1957451cbf60501" prot="public" static="no">
        <name>NET_MGMT_REGISTER_REQUEST_HANDLER</name>
        <param><defname>_mgmt_request</defname></param>
        <param><defname>_func</defname></param>
        <initializer>	FUNC_ALIAS(_func, net_mgmt_##_mgmt_request, int)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="100" column="9" bodyfile="include/net/net_mgmt.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__net__mgmt_1gaba005de4dbeb090a384df1ba67251108" prot="public" static="no">
        <type>int(*</type>
        <definition>net_mgmt_request_handler_t</definition>
        <argsstring>)(uint32_t mgmt_request, struct net_if *iface, void *data, size_t len)</argsstring>
        <name>net_mgmt_request_handler_t</name>
        <briefdescription>
<para>Signature which all Net MGMT request handler need to follow. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mgmt_request</parametername>
</parameternamelist>
<parameterdescription>
<para>The exact request value the handler is being called through </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid pointer on struct <ref refid="structnet__if" kindref="compound">net_if</ref> if the request is meant to be tight to a network interface. NULL otherwise. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid pointer on a data understood by the handler. NULL otherwise. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length in byte of the memory pointed by data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="88" column="9" bodyfile="include/net/net_mgmt.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__net__mgmt_1ga01c7010a1ad7e89f314dfedd531dcbd2" prot="public" static="no">
        <type>void(*</type>
        <definition>net_mgmt_event_handler_t</definition>
        <argsstring>)(struct net_mgmt_event_callback *cb, uint32_t mgmt_event, struct net_if *iface)</argsstring>
        <name>net_mgmt_event_handler_t</name>
        <briefdescription>
<para>Define the user&apos;s callback handler function signature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Original struct <ref refid="structnet__mgmt__event__callback" kindref="compound">net_mgmt_event_callback</ref> owning this handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mgmt_event</parametername>
</parameternamelist>
<parameterdescription>
<para>The network event being notified. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer on a struct <ref refid="structnet__if" kindref="compound">net_if</ref> to which the the event belongs to, if it&apos;s an event on an iface. NULL otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="113" column="9" bodyfile="include/net/net_mgmt.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__net__mgmt_1gaa1d086dcdeb54412073e287129bc50e0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void net_mgmt_init_event_callback</definition>
        <argsstring>(struct net_mgmt_event_callback *cb, net_mgmt_event_handler_t handler, uint32_t mgmt_event_mask)</argsstring>
        <name>net_mgmt_init_event_callback</name>
        <param>
          <type>struct <ref refid="structnet__mgmt__event__callback" kindref="compound">net_mgmt_event_callback</ref> *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="group__net__mgmt_1ga01c7010a1ad7e89f314dfedd531dcbd2" kindref="member">net_mgmt_event_handler_t</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>mgmt_event_mask</declname>
        </param>
        <briefdescription>
<para>Helper to initialize a struct <ref refid="structnet__mgmt__event__callback" kindref="compound">net_mgmt_event_callback</ref> properly. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid application&apos;s callback structure pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid handler function pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mgmt_event_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask of relevant events for the handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="174" column="6" bodyfile="include/net/net_mgmt.h" bodystart="174" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="group__net__mgmt_1gae53f5bbc973b0f414107eca75ac0c26f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void net_mgmt_add_event_callback</definition>
        <argsstring>(struct net_mgmt_event_callback *cb)</argsstring>
        <name>net_mgmt_add_event_callback</name>
        <param>
          <type>struct <ref refid="structnet__mgmt__event__callback" kindref="compound">net_mgmt_event_callback</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Add a user callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid pointer on user&apos;s callback to add. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="193" column="6" declfile="include/net/net_mgmt.h" declline="193" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__net__mgmt_1ga4960bfb01ecd891da72c57f17587f946" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void net_mgmt_del_event_callback</definition>
        <argsstring>(struct net_mgmt_event_callback *cb)</argsstring>
        <name>net_mgmt_del_event_callback</name>
        <param>
          <type>struct <ref refid="structnet__mgmt__event__callback" kindref="compound">net_mgmt_event_callback</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Delete a user callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid pointer on user&apos;s callback to delete. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="203" column="6" declfile="include/net/net_mgmt.h" declline="203" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__net__mgmt_1ga10882f80c53400b94401a2a08d31697d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void net_mgmt_event_notify_with_info</definition>
        <argsstring>(uint32_t mgmt_event, struct net_if *iface, const void *info, size_t length)</argsstring>
        <name>net_mgmt_event_notify_with_info</name>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>mgmt_event</declname>
        </param>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Used by the system to notify an event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mgmt_event</parametername>
</parameternamelist>
<parameterdescription>
<para>The actual network event code to notify </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>a valid pointer on a struct <ref refid="structnet__if" kindref="compound">net_if</ref> if only the event is based on an iface. NULL otherwise. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>a valid pointer on the information you want to pass along with the event. NULL otherwise. Note the data pointed there is normalized by the related event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the data pointed by info pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Note: info and length are disabled if CONFIG_NET_MGMT_EVENT_INFO is not defined. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="222" column="6" declfile="include/net/net_mgmt.h" declline="222" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__net__mgmt_1ga0648b82762467395b98a3bc13ab451d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void net_mgmt_event_notify</definition>
        <argsstring>(uint32_t mgmt_event, struct net_if *iface)</argsstring>
        <name>net_mgmt_event_notify</name>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>mgmt_event</declname>
        </param>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="225" column="20" bodyfile="include/net/net_mgmt.h" bodystart="225" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="group__net__mgmt_1gacbaa95c65717747d802dc80eb745aa17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_mgmt_event_wait</definition>
        <argsstring>(uint32_t mgmt_event_mask, uint32_t *raised_event, struct net_if **iface, const void **info, size_t *info_length, k_timeout_t timeout)</argsstring>
        <name>net_mgmt_event_wait</name>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>mgmt_event_mask</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> *</type>
          <declname>raised_event</declname>
        </param>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> **</type>
          <declname>iface</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>info</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>info_length</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Used to wait synchronously on an event mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mgmt_event_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask of relevant events to wait on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raised_event</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer on a uint32_t to get which event from the mask generated the event. Can be NULL if the caller is not interested in that information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer on a place holder for the iface on which the event has originated from. This is valid if only the event mask has bit NET_MGMT_IFACE_BIT set relevantly, depending on events the caller wants to listen to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>a valid pointer if user wants to get the information the event might bring along. NULL otherwise. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info_length</parametername>
</parameternamelist>
<parameterdescription>
<para>tells how long the info memory area is. Only valid if the info is not NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>A timeout delay. K_FOREVER can be used to wait indefinitely.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, a negative error code otherwise. -ETIMEDOUT will be specifically returned if the timeout kick-in instead of an actual event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="256" column="5" declfile="include/net/net_mgmt.h" declline="256" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__mgmt_1ga03c39d5f2af3f2d7a633513fb5ec8a7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int net_mgmt_event_wait_on_iface</definition>
        <argsstring>(struct net_if *iface, uint32_t mgmt_event_mask, uint32_t *raised_event, const void **info, size_t *info_length, k_timeout_t timeout)</argsstring>
        <name>net_mgmt_event_wait_on_iface</name>
        <param>
          <type>struct <ref refid="structnet__if" kindref="compound">net_if</ref> *</type>
          <declname>iface</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>mgmt_event_mask</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref> *</type>
          <declname>raised_event</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>info</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>info_length</declname>
        </param>
        <param>
          <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Used to wait synchronously on an event mask for a specific iface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer on a valid network interface to listen event to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mgmt_event_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask of relevant events to wait on. Listened to events should be relevant to iface events and thus have the bit NET_MGMT_IFACE_BIT set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raised_event</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer on a uint32_t to get which event from the mask generated the event. Can be NULL if the caller is not interested in that information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>a valid pointer if user wants to get the information the event might bring along. NULL otherwise. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info_length</parametername>
</parameternamelist>
<parameterdescription>
<para>tells how long the info memory area is. Only valid if the info is not NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>A timeout delay. K_FOREVER can be used to wait indefinitely.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, a negative error code otherwise. -ETIMEDOUT will be specifically returned if the timeout kick-in instead of an actual event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="294" column="5" declfile="include/net/net_mgmt.h" declline="294" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__net__mgmt_1gaab4fe2e9ea0657bf91fb1910af6729cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void net_mgmt_event_init</definition>
        <argsstring>(void)</argsstring>
        <name>net_mgmt_event_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Used by the core of the network stack to initialize the network event processing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/net_mgmt.h" line="317" column="6" declfile="include/net/net_mgmt.h" declline="317" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Network Management API public header. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016<sp/>Intel<sp/>Corporation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_NET_NET_MGMT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_NET_NET_MGMT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="____assert_8h" kindref="compound">sys/__assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net__core_8h" kindref="compound">net/net_core.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="net__event_8h" kindref="compound">net/net_event.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__if" kindref="compound">net_if</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_EVENT_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_ON_IFACE_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x40000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_LAYER_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x30000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_SYNC_EVENT_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x08000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_LAYER_CODE_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07FF0000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_COMMAND_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0000FFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_EVENT_BIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(31)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_IFACE_BIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(30)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_SYNC_EVENT_BIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(27)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_LAYER(_layer)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(_layer<sp/>&lt;&lt;<sp/>28)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_LAYER_CODE(_code)<sp/><sp/><sp/><sp/><sp/><sp/>(_code<sp/>&lt;&lt;<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_EVENT(mgmt_request)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mgmt_request<sp/>&amp;<sp/>NET_MGMT_EVENT_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_ON_IFACE(mgmt_request)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mgmt_request<sp/>&amp;<sp/>NET_MGMT_ON_IFACE_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_EVENT_SYNCHRONOUS(mgmt_request)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mgmt_request<sp/>&amp;<sp/>NET_MGMT_SYNC_EVENT_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_GET_LAYER(mgmt_request)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((mgmt_request<sp/>&amp;<sp/>NET_MGMT_LAYER_MASK)<sp/>&gt;&gt;<sp/>28)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_GET_LAYER_CODE(mgmt_request)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((mgmt_request<sp/>&amp;<sp/>NET_MGMT_LAYER_CODE_MASK)<sp/>&gt;&gt;<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_GET_COMMAND(mgmt_request)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mgmt_request<sp/>&amp;<sp/>NET_MGMT_COMMAND_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Useful<sp/>generic<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_LAYER_L2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_LAYER_L3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_LAYER_L4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="group__net__mgmt_1gaba005de4dbeb090a384df1ba67251108" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__net__mgmt_1gaba005de4dbeb090a384df1ba67251108" kindref="member">net_mgmt_request_handler_t</ref>)(<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>mgmt_request,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="group__net__mgmt_1ga40e0f9fc86812ad9f6fe174b4c3804e6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>net_mgmt(_mgmt_request,<sp/>_iface,<sp/>_data,<sp/>_len)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>net_mgmt_##_mgmt_request(_mgmt_request,<sp/>_iface,<sp/>_data,<sp/>_len)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="group__net__mgmt_1ga08bde8717fd8e12a338c517b22b87776" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_DEFINE_REQUEST_HANDLER(_mgmt_request)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extern<sp/>int<sp/>net_mgmt_##_mgmt_request(uint32_t<sp/>mgmt_request,<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>net_if<sp/>*iface,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>*data,<sp/>size_t<sp/>len)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="group__net__mgmt_1gab67d09d1e65b806ec1957451cbf60501" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NET_MGMT_REGISTER_REQUEST_HANDLER(_mgmt_request,<sp/>_func)<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNC_ALIAS(_func,<sp/>net_mgmt_##_mgmt_request,<sp/>int)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__mgmt__event__callback" kindref="compound">net_mgmt_event_callback</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="group__net__mgmt_1ga01c7010a1ad7e89f314dfedd531dcbd2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__net__mgmt_1ga01c7010a1ad7e89f314dfedd531dcbd2" kindref="member">net_mgmt_event_handler_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__mgmt__event__callback" kindref="compound">net_mgmt_event_callback</ref><sp/>*cb,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>mgmt_event,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="structnet__mgmt__event__callback" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__mgmt__event__callback" kindref="compound">net_mgmt_event_callback</ref><sp/>{</highlight></codeline>
<codeline lineno="127" refid="structnet__mgmt__event__callback_1a05a4f445731f9f72209a652f2653e1ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="slist_8h_1a69bf43aad81e3ee2d55250c59b857493" kindref="member">sys_snode_t</ref><sp/><ref refid="structnet__mgmt__event__callback_1a05a4f445731f9f72209a652f2653e1ea" kindref="member">node</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132" refid="structnet__mgmt__event__callback_1ada57aabc8acc3e9be93fb2726321f1b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__mgmt_1ga01c7010a1ad7e89f314dfedd531dcbd2" kindref="member">net_mgmt_event_handler_t</ref><sp/><ref refid="structnet__mgmt__event__callback_1ada57aabc8acc3e9be93fb2726321f1b2" kindref="member">handler</ref>;</highlight></codeline>
<codeline lineno="136" refid="structnet__mgmt__event__callback_1a7403d98fe528c492a4b1b449b43c10d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">k_sem<sp/>*<ref refid="structnet__mgmt__event__callback_1a7403d98fe528c492a4b1b449b43c10d3" kindref="member">sync_call</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_NET_MGMT_EVENT_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*info;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>info_length;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="158" refid="structnet__mgmt__event__callback_1acd2d06e59f71b30e6d9089c165c4a589" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structnet__mgmt__event__callback_1acd2d06e59f71b30e6d9089c165c4a589" kindref="member">event_mask</ref>;</highlight></codeline>
<codeline lineno="162" refid="structnet__mgmt__event__callback_1a7c92da4524db9294d9a157606b85c497" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structnet__mgmt__event__callback_1a7c92da4524db9294d9a157606b85c497" kindref="member">raised_event</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="164"><highlight class="normal">};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_NET_MGMT_EVENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="group__net__mgmt_1gaa1d086dcdeb54412073e287129bc50e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__mgmt_1gaa1d086dcdeb54412073e287129bc50e0" kindref="member">net_mgmt_init_event_callback</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__mgmt__event__callback" kindref="compound">net_mgmt_event_callback</ref><sp/>*cb,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__mgmt_1ga01c7010a1ad7e89f314dfedd531dcbd2" kindref="member">net_mgmt_event_handler_t</ref><sp/><ref refid="timer_2starve_2src_2main_8c_1ab28ee8b6412d992f77f819e17b664869" kindref="member">handler</ref>,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>mgmt_event_mask)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT(cb,<sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>pointer<sp/>should<sp/>not<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT(<ref refid="timer_2starve_2src_2main_8c_1ab28ee8b6412d992f77f819e17b664869" kindref="member">handler</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Handler<sp/>pointer<sp/>should<sp/>not<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;<ref refid="structnet__mgmt__event__callback_1ada57aabc8acc3e9be93fb2726321f1b2" kindref="member">handler</ref><sp/>=<sp/><ref refid="timer_2starve_2src_2main_8c_1ab28ee8b6412d992f77f819e17b664869" kindref="member">handler</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;<ref refid="structnet__mgmt__event__callback_1acd2d06e59f71b30e6d9089c165c4a589" kindref="member">event_mask</ref><sp/>=<sp/>mgmt_event_mask;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>net_mgmt_init_event_callback(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_NET_MGMT_EVENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="group__net__mgmt_1gae53f5bbc973b0f414107eca75ac0c26f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__mgmt_1gae53f5bbc973b0f414107eca75ac0c26f" kindref="member">net_mgmt_add_event_callback</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__mgmt__event__callback" kindref="compound">net_mgmt_event_callback</ref><sp/>*cb);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>net_mgmt_add_event_callback(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_NET_MGMT_EVENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="group__net__mgmt_1ga4960bfb01ecd891da72c57f17587f946" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__mgmt_1ga4960bfb01ecd891da72c57f17587f946" kindref="member">net_mgmt_del_event_callback</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__mgmt__event__callback" kindref="compound">net_mgmt_event_callback</ref><sp/>*cb);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>net_mgmt_del_event_callback(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_NET_MGMT_EVENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="group__net__mgmt_1ga10882f80c53400b94401a2a08d31697d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__mgmt_1ga10882f80c53400b94401a2a08d31697d" kindref="member">net_mgmt_event_notify_with_info</ref>(<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>mgmt_event,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*info,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="group__net__mgmt_1ga0648b82762467395b98a3bc13ab451d0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__mgmt_1ga0648b82762467395b98a3bc13ab451d0" kindref="member">net_mgmt_event_notify</ref>(<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>mgmt_event,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__net__mgmt_1ga10882f80c53400b94401a2a08d31697d" kindref="member">net_mgmt_event_notify_with_info</ref>(mgmt_event,<sp/>iface,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>net_mgmt_event_notify(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>net_mgmt_event_notify_with_info(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_NET_MGMT_EVENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="group__net__mgmt_1gacbaa95c65717747d802dc80eb745aa17" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__mgmt_1gacbaa95c65717747d802dc80eb745aa17" kindref="member">net_mgmt_event_wait</ref>(<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>mgmt_event_mask,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>*raised_event,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>**iface,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**info,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*info_length,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__mgmt_1gacbaa95c65717747d802dc80eb745aa17" kindref="member">net_mgmt_event_wait</ref>(<ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>mgmt_event_mask,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>*raised_event,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>**iface,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**info,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*info_length,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_NET_MGMT_EVENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="group__net__mgmt_1ga03c39d5f2af3f2d7a633513fb5ec8a7d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__mgmt_1ga03c39d5f2af3f2d7a633513fb5ec8a7d" kindref="member">net_mgmt_event_wait_on_iface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>mgmt_event_mask,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>*raised_event,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**info,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*info_length,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__net__mgmt_1ga03c39d5f2af3f2d7a633513fb5ec8a7d" kindref="member">net_mgmt_event_wait_on_iface</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnet__if" kindref="compound">net_if</ref><sp/>*iface,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>mgmt_event_mask,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>*raised_event,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**info,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*info_length,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a4c6a88cdddeff1bdde597c2658c9e7d2" kindref="member">timeout</ref>)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_NET_MGMT_EVENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="group__net__mgmt_1gaab4fe2e9ea0657bf91fb1910af6729cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__net__mgmt_1gaab4fe2e9ea0657bf91fb1910af6729cc" kindref="member">net_mgmt_event_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>net_mgmt_event_init(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CONFIG_NET_MGMT_EVENT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_NET_NET_MGMT_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/net/net_mgmt.h"/>
  </compounddef>
</doxygen>
