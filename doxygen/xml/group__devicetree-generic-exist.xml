<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__devicetree-generic-exist" kind="group">
    <compoundname>devicetree-generic-exist</compoundname>
    <title>Existence checks</title>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__devicetree-generic-exist_1ga9d5cf40051d042b853f6b0088fd4500a" prot="public" static="no">
        <name>DT_NODE_EXISTS</name>
        <param><defname>node_id</defname></param>
        <initializer><ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(<ref refid="devicetree_8h_1a8c1e6c5301ff391563977e563117d0f6" kindref="member">DT_CAT</ref>(node_id, _EXISTS))</initializer>
        <briefdescription>
<para>Does a node identifier refer to a node? </para>
        </briefdescription>
        <detaileddescription>
<para>Tests whether a node identifier refers to a node which exists, i.e. is defined in the devicetree.</para>
<para>It doesn&apos;t matter whether or not the node has a matching binding, or what the node&apos;s status value is. This is purely a check of whether the node exists at all.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>a node identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the node identifier refers to a node, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="2076" column="9" bodyfile="include/devicetree.h" bodystart="2076" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__devicetree-generic-exist_1ga3b769d8105c7679e1d0575a1e7f1f653" prot="public" static="no">
        <name>DT_NODE_HAS_STATUS</name>
        <param><defname>node_id</defname></param>
        <param><defname>status</defname></param>
        <initializer>	<ref refid="devicetree_8h_1a8f87097097e3bf344188106ec1cdccbc" kindref="member">DT_NODE_HAS_STATUS_INTERNAL</ref>(node_id, status)</initializer>
        <briefdescription>
<para>Does a node identifier refer to a node with a status? </para>
        </briefdescription>
        <detaileddescription>
<para>Example uses: <verbatim>DT_NODE_HAS_STATUS(DT_PATH(soc, i2c_12340000), okay)
DT_NODE_HAS_STATUS(DT_PATH(soc, i2c_12340000), disabled)
</verbatim> Tests whether a node identifier refers to a node which:</para>
<para><itemizedlist>
<listitem><para>exists in the devicetree, and</para>
</listitem><listitem><para>has a status property matching the second argument (except that either a missing status or an &quot;ok&quot; status in the devicetree is treated as if it were &quot;okay&quot; instead)</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>a node identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>a status as one of the tokens okay or disabled, not a string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the node has the given status, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="2097" column="9" bodyfile="include/devicetree.h" bodystart="2097" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__devicetree-generic-exist_1ga916e11b66fdaab46e93c25241b62b52a" prot="public" static="no">
        <name>DT_HAS_COMPAT_STATUS_OKAY</name>
        <param><defname>compat</defname></param>
        <initializer>	<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(<ref refid="devicetree_8h_1a8c1e6c5301ff391563977e563117d0f6" kindref="member">DT_CAT</ref>(DT_COMPAT_HAS_OKAY_, compat))</initializer>
        <briefdescription>
<para>Does the devicetree have a status &quot;okay&quot; node with a compatible? </para>
        </briefdescription>
        <detaileddescription>
<para>Test for whether the devicetree has any nodes with status &quot;okay&quot; and the given compatible. That is, this returns 1 if and only if there is at least one &quot;node_id&quot; for which both of these expressions return 1: <verbatim>DT_NODE_HAS_STATUS(node_id, okay)
DT_NODE_HAS_COMPAT(node_id, compat)
</verbatim> As usual, both a missing status and an &quot;ok&quot; status are treated as &quot;okay&quot;.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compat</parametername>
</parameternamelist>
<parameterdescription>
<para>lowercase-and-underscores compatible, without quotes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if both of the above conditions are met, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="2117" column="9" bodyfile="include/devicetree.h" bodystart="2117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__devicetree-generic-exist_1ga45c268d7f0d604a72dc0bcf5cd0733b0" prot="public" static="no">
        <name>DT_NUM_INST_STATUS_OKAY</name>
        <param><defname>compat</defname></param>
        <initializer>	<ref refid="group__sys-util_1ga26179b776b4a03143e8be1612ef6d853" kindref="member">UTIL_AND</ref>(<ref refid="group__devicetree-generic-exist_1ga916e11b66fdaab46e93c25241b62b52a" kindref="member">DT_HAS_COMPAT_STATUS_OKAY</ref>(compat),		\
		 <ref refid="util__internal_8h_1a7e7766e792d1638bfbbc9d0f328d3d0d" kindref="member">UTIL_CAT</ref>(DT_N_INST, <ref refid="devicetree_8h_1af3f0bb55f6155a5188345d5ba6caf992" kindref="member">DT_DASH</ref>(compat, NUM_OKAY)))</initializer>
        <briefdescription>
<para>Get the number of instances of a given compatible with status &quot;okay&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compat</parametername>
</parameternamelist>
<parameterdescription>
<para>lowercase-and-underscores compatible, without quotes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of instances with status &quot;okay&quot; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="2126" column="9" bodyfile="include/devicetree.h" bodystart="2126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__devicetree-generic-exist_1gad8912ba5db980713e72257472ded3ced" prot="public" static="no">
        <name>DT_NODE_HAS_COMPAT</name>
        <param><defname>node_id</defname></param>
        <param><defname>compat</defname></param>
        <initializer>	<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(<ref refid="devicetree_8h_1a8c1e6c5301ff391563977e563117d0f6" kindref="member">DT_CAT</ref>(node_id, _COMPAT_MATCHES_##compat))</initializer>
        <briefdescription>
<para>Does a devicetree node match a compatible? </para>
        </briefdescription>
        <detaileddescription>
<para>Example devicetree fragment: <verbatim>n: node {
        compatible = &quot;vnd,specific-device&quot;, &quot;generic-device&quot;;
}
</verbatim> Example usages which evaluate to 1: <verbatim>DT_NODE_HAS_COMPAT(DT_NODELABEL(n), vnd_specific_device)
DT_NODE_HAS_COMPAT(DT_NODELABEL(n), generic_device)
</verbatim> This macro only uses the value of the compatible property. Whether or not a particular compatible has a matching binding has no effect on its value, nor does the node&apos;s status.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compat</parametername>
</parameternamelist>
<parameterdescription>
<para>lowercase-and-underscores compatible, without quotes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the node&apos;s compatible property contains compat, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="2153" column="9" bodyfile="include/devicetree.h" bodystart="2153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__devicetree-generic-exist_1ga9bf6258fbeb0c5cd1fd15b9c9be9228a" prot="public" static="no">
        <name>DT_NODE_HAS_COMPAT_STATUS</name>
        <param><defname>node_id</defname></param>
        <param><defname>compat</defname></param>
        <param><defname>status</defname></param>
        <initializer>	<ref refid="group__devicetree-generic-exist_1gad8912ba5db980713e72257472ded3ced" kindref="member">DT_NODE_HAS_COMPAT</ref>(node_id, compat) &amp;&amp; <ref refid="group__devicetree-generic-exist_1ga3b769d8105c7679e1d0575a1e7f1f653" kindref="member">DT_NODE_HAS_STATUS</ref>(node_id, status)</initializer>
        <briefdescription>
<para>Does a devicetree node have a compatible and status? </para>
        </briefdescription>
        <detaileddescription>
<para>This is equivalent to: <verbatim>(DT_NODE_HAS_COMPAT(node_id, compat) &amp;&amp;
 DT_NODE_HAS_STATUS(node_id, status))
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compat</parametername>
</parameternamelist>
<parameterdescription>
<para>lowercase-and-underscores compatible, without quotes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>okay or disabled as a token, not a string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="2168" column="9" bodyfile="include/devicetree.h" bodystart="2168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__devicetree-generic-exist_1gacce67bf20541cd2d07d8540058964692" prot="public" static="no">
        <name>DT_NODE_HAS_PROP</name>
        <param><defname>node_id</defname></param>
        <param><defname>prop</defname></param>
        <initializer>	<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(<ref refid="devicetree_8h_1a8c1e6c5301ff391563977e563117d0f6" kindref="member">DT_CAT</ref>(node_id, _P_##prop##_EXISTS))</initializer>
        <briefdescription>
<para>Does a devicetree node have a property? </para>
        </briefdescription>
        <detaileddescription>
<para>Tests whether a devicetree node has a property defined.</para>
<para>This tests whether the property is defined at all, not whether a boolean property is true or false. To get a boolean property&apos;s truth value, use <ref refid="group__devicetree-generic-prop_1ga8e1fd9ebacd85d2013df027d041d506b" kindref="member">DT_PROP(node_id, prop)</ref> instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prop</parametername>
</parameternamelist>
<parameterdescription>
<para>lowercase-and-underscores property name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the node has the property, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="2184" column="9" bodyfile="include/devicetree.h" bodystart="2184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__devicetree-generic-exist_1gacfbd6a2cb3038e5aba1e2216d65ebc78" prot="public" static="no">
        <name>DT_PHA_HAS_CELL_AT_IDX</name>
        <param><defname>node_id</defname></param>
        <param><defname>pha</defname></param>
        <param><defname>idx</defname></param>
        <param><defname>cell</defname></param>
        <initializer>	<ref refid="group__sys-util_1ga111fe4e9d63758262fc6810a782cb32a" kindref="member">IS_ENABLED</ref>(<ref refid="group__devicetree-generic-prop_1ga8e1fd9ebacd85d2013df027d041d506b" kindref="member">DT_PROP</ref>(node_id,                                 \
			   pha##_IDX_##idx##_VAL_##cell##_EXISTS))</initializer>
        <briefdescription>
<para>Does a phandle array have a named cell specifier at an index? </para>
        </briefdescription>
        <detaileddescription>
<para>If this returns 1, then the phandle-array property &quot;pha&quot; has a cell named &quot;cell&quot; at index &quot;idx&quot;, and therefore DT_PHA_BY_IDX(node_id, pha, idx, cell) is valid. If it returns 0, it&apos;s an error to use <ref refid="group__devicetree-generic-prop_1ga118b63fd22c20ef940ac2fa073c126ed" kindref="member">DT_PHA_BY_IDX()</ref> with the same arguments.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pha</parametername>
</parameternamelist>
<parameterdescription>
<para>lowercase-and-underscores property with type &quot;phandle-array&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>index to check within &quot;pha&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>lowercase-and-underscores cell name whose existence to check at index &quot;idx&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the named cell exists in the specifier at index idx, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="2204" column="9" bodyfile="include/devicetree.h" bodystart="2204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__devicetree-generic-exist_1gaece280102681cbadf318c5dabfb3d719" prot="public" static="no">
        <name>DT_PHA_HAS_CELL</name>
        <param><defname>node_id</defname></param>
        <param><defname>pha</defname></param>
        <param><defname>cell</defname></param>
        <initializer>	<ref refid="group__devicetree-generic-exist_1gacfbd6a2cb3038e5aba1e2216d65ebc78" kindref="member">DT_PHA_HAS_CELL_AT_IDX</ref>(node_id, pha, 0, cell)</initializer>
        <briefdescription>
<para>Equivalent to <ref refid="group__devicetree-generic-exist_1gacfbd6a2cb3038e5aba1e2216d65ebc78" kindref="member">DT_PHA_HAS_CELL_AT_IDX(node_id, pha, 0, cell)</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pha</parametername>
</parameternamelist>
<parameterdescription>
<para>lowercase-and-underscores property with type &quot;phandle-array&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>lowercase-and-underscores cell name whose existence to check at index &quot;idx&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the named cell exists in the specifier at index 0, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/devicetree.h" line="2217" column="9" bodyfile="include/devicetree.h" bodystart="2217" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
