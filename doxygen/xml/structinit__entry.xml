<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structinit__entry" kind="struct" language="C++" prot="public">
    <compoundname>init_entry</compoundname>
    <includes refid="init_8h" local="no">init.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structinit__entry_1a761fd0635be56ae92c87d86b3d0007af" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* init_entry::init) (const struct device *dev)</definition>
        <argsstring>)(const struct device *dev)</argsstring>
        <name>init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialization function for the init entry which will take the dev attribute as parameter. See below. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/init.h" line="47" column="1" bodyfile="include/init.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structinit__entry_1af03b5e4991da3a75059bc4b254a3e21e" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
        <definition>const struct device* init_entry::dev</definition>
        <argsstring></argsstring>
        <name>dev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to a device driver instance structure. Can be NULL if the init entry is not used for a device driver but a services. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/init.h" line="51" column="19" bodyfile="include/init.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Static init entry structure for each device driver or services. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>init</parametername>
</parameternamelist>
<parameterdescription>
<para>init function for the init entry which will take the dev attribute as parameter. See below. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a device driver instance structure. Can be NULL if the init entry is not used for a device driver but a service. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>device</label>
        <link refid="structdevice"/>
        <childnode refid="3" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>device_state</label>
        <link refid="structdevice__state"/>
      </node>
      <node id="1">
        <label>init_entry</label>
        <link refid="structinit__entry"/>
        <childnode refid="2" relation="usage">
          <edgelabel>dev</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/init.h" line="43" column="1" bodyfile="include/init.h" bodystart="43" bodyend="52"/>
    <listofallmembers>
      <member refid="structinit__entry_1af03b5e4991da3a75059bc4b254a3e21e" prot="public" virt="non-virtual"><scope>init_entry</scope><name>dev</name></member>
      <member refid="structinit__entry_1a761fd0635be56ae92c87d86b3d0007af" prot="public" virt="non-virtual"><scope>init_entry</scope><name>init</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
