<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structdns__resolve__context" kind="struct" language="C++" prot="public">
    <compoundname>dns_resolve_context</compoundname>
    <includes refid="dns__resolve_8h" local="no">dns_resolve.h</includes>
    <innerclass refid="structdns__resolve__context_1_1dns__pending__query" prot="public">dns_resolve_context::dns_pending_query</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdns__resolve__context_1ae54aa9bc3b76924193c0846976ee089b" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref></type>
        <definition>struct sockaddr dns_resolve_context::dns_server</definition>
        <argsstring></argsstring>
        <name>dns_server</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DNS server information </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/dns_resolve.h" line="172" column="15" bodyfile="include/net/dns_resolve.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdns__resolve__context_1abdc166e878040d90362366251730e6df" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structnet__context" kindref="compound">net_context</ref> *</type>
        <definition>struct net_context* dns_resolve_context::net_ctx</definition>
        <argsstring></argsstring>
        <name>net_ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Connection to the DNS server </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/dns_resolve.h" line="175" column="18" bodyfile="include/net/dns_resolve.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdns__resolve__context_1aa6c01844428450cf96c306feb35d491e" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t dns_resolve_context::is_mdns</definition>
        <argsstring></argsstring>
        <name>is_mdns</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is this server mDNS one </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/dns_resolve.h" line="178" column="9" bodyfile="include/net/dns_resolve.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdns__resolve__context_1a503502ac58538d54fddce34e7ae71f2e" prot="public" static="no" mutable="no">
        <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
        <definition>uint8_t dns_resolve_context::is_llmnr</definition>
        <argsstring></argsstring>
        <name>is_llmnr</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is this server LLMNR one </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/dns_resolve.h" line="181" column="9" bodyfile="include/net/dns_resolve.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdns__resolve__context_1ab54571cffed7ab23c523bdd6e91e8056" prot="public" static="no" mutable="no">
        <type>struct dns_resolve_context::@147</type>
        <definition>struct dns_resolve_context::@147 dns_resolve_context::servers[CONFIG_DNS_RESOLVER_MAX_SERVERS + DNS_MAX_MCAST_SERVERS]</definition>
        <argsstring>[CONFIG_DNS_RESOLVER_MAX_SERVERS+DNS_MAX_MCAST_SERVERS]</argsstring>
        <name>servers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/dns_resolve.h" line="182" column="66"/>
      </memberdef>
      <memberdef kind="variable" id="structdns__resolve__context_1a9d1ada3ab20399f750acfee94e8e6cd7" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__mutex" kindref="compound">k_mutex</ref></type>
        <definition>struct k_mutex dns_resolve_context::lock</definition>
        <argsstring></argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prevent concurrent access </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/dns_resolve.h" line="185" column="14" bodyfile="include/net/dns_resolve.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdns__resolve__context_1a402a4a2adfe3859f8dab749b44b7d8e6" prot="public" static="no" mutable="no">
        <type><ref refid="structk__timeout__t" kindref="compound">k_timeout_t</ref></type>
        <definition>k_timeout_t dns_resolve_context::buf_timeout</definition>
        <argsstring></argsstring>
        <name>buf_timeout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This timeout is also used when a buffer is required from the buffer pools. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/dns_resolve.h" line="190" column="13" bodyfile="include/net/dns_resolve.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdns__resolve__context_1a3bec79837b0bce3fd99b29bfbe1da40d" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structdns__resolve__context_1_1dns__pending__query" kindref="compound">dns_resolve_context::dns_pending_query</ref></type>
        <definition>struct dns_resolve_context::dns_pending_query dns_resolve_context::queries[CONFIG_DNS_NUM_CONCUR_QUERIES]</definition>
        <argsstring>[CONFIG_DNS_NUM_CONCUR_QUERIES]</argsstring>
        <name>queries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/dns_resolve.h" line="243" column="40"/>
      </memberdef>
      <memberdef kind="variable" id="structdns__resolve__context_1a88f6600061cdb8e9f34802fe2a0a7d5a" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__dns__resolve_1gaf190da074df1b14130c0af6370bbd56c" kindref="member">dns_resolve_context_state</ref></type>
        <definition>enum dns_resolve_context_state dns_resolve_context::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is this context in use </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/dns_resolve.h" line="246" column="31" bodyfile="include/net/dns_resolve.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>DNS resolve context structure. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="9">
        <label>__thread_entry</label>
      </node>
      <node id="8">
        <label>_callee_saved</label>
      </node>
      <node id="11">
        <label>_mem_domain_info</label>
      </node>
      <node id="23">
        <label>_slist</label>
      </node>
      <node id="21">
        <label>_snode</label>
      </node>
      <node id="16">
        <label>_thread_arch</label>
      </node>
      <node id="7">
        <label>_thread_base</label>
      </node>
      <node id="10">
        <label>_thread_stack_info</label>
      </node>
      <node id="24">
        <label>_timeout</label>
      </node>
      <node id="5">
        <label>_wait_q_t</label>
      </node>
      <node id="25">
        <label>dns_addrinfo</label>
        <link refid="structdns__addrinfo"/>
        <childnode refid="2" relation="usage">
          <edgelabel>ai_addr</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>dns_resolve_context</label>
        <link refid="structdns__resolve__context"/>
        <childnode refid="2" relation="usage">
          <edgelabel>dns_server</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>net_ctx</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>buf_timeout</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>queries</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>dns_resolve_context::dns_pending_query</label>
        <link refid="structdns__resolve__context_1_1dns__pending__query"/>
        <childnode refid="19" relation="usage">
          <edgelabel>timer</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>cb</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>timeout</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>k_heap</label>
        <link refid="structk__heap"/>
        <childnode refid="14" relation="usage">
          <edgelabel>heap</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>k_mutex</label>
        <link refid="structk__mutex"/>
        <childnode refid="5" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>k_spinlock</label>
        <link refid="structk__spinlock"/>
      </node>
      <node id="6">
        <label>k_thread</label>
        <link refid="structk__thread"/>
        <childnode refid="7" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>callee_saved</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>join_queue</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>entry</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>next_thread</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>stack_info</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>mem_domain_info</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>stack_obj</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>resource_pool</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>arch</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>k_timeout_t</label>
        <link refid="structk__timeout__t"/>
      </node>
      <node id="20">
        <label>k_work</label>
        <link refid="structk__work"/>
        <childnode refid="21" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>handler</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>k_work_delayable</label>
        <link refid="structk__work__delayable"/>
        <childnode refid="20" relation="usage">
          <edgelabel>work</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>timeout</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>k_work_q</label>
        <link refid="structk__work__q"/>
        <childnode refid="6" relation="usage">
          <edgelabel>thread</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>pending</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>drainq</edgelabel>
          <edgelabel>notifyq</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>net_context</label>
        <link refid="structnet__context"/>
        <childnode refid="4" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>remote</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>connect_cb</edgelabel>
          <edgelabel>recv_cb</edgelabel>
          <edgelabel>send_cb</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>sockaddr</label>
        <link refid="structsockaddr"/>
      </node>
      <node id="14">
        <label>sys_heap</label>
        <link refid="structsys__heap"/>
      </node>
      <node id="12">
        <label>z_thread_stack_element</label>
      </node>
    </collaborationgraph>
    <location file="include/net/dns_resolve.h" line="169" column="1" bodyfile="include/net/dns_resolve.h" bodystart="169" bodyend="247"/>
    <listofallmembers>
      <member refid="structdns__resolve__context_1a402a4a2adfe3859f8dab749b44b7d8e6" prot="public" virt="non-virtual"><scope>dns_resolve_context</scope><name>buf_timeout</name></member>
      <member refid="structdns__resolve__context_1ae54aa9bc3b76924193c0846976ee089b" prot="public" virt="non-virtual"><scope>dns_resolve_context</scope><name>dns_server</name></member>
      <member refid="structdns__resolve__context_1a503502ac58538d54fddce34e7ae71f2e" prot="public" virt="non-virtual"><scope>dns_resolve_context</scope><name>is_llmnr</name></member>
      <member refid="structdns__resolve__context_1aa6c01844428450cf96c306feb35d491e" prot="public" virt="non-virtual"><scope>dns_resolve_context</scope><name>is_mdns</name></member>
      <member refid="structdns__resolve__context_1a9d1ada3ab20399f750acfee94e8e6cd7" prot="public" virt="non-virtual"><scope>dns_resolve_context</scope><name>lock</name></member>
      <member refid="structdns__resolve__context_1abdc166e878040d90362366251730e6df" prot="public" virt="non-virtual"><scope>dns_resolve_context</scope><name>net_ctx</name></member>
      <member refid="structdns__resolve__context_1a3bec79837b0bce3fd99b29bfbe1da40d" prot="public" virt="non-virtual"><scope>dns_resolve_context</scope><name>queries</name></member>
      <member refid="structdns__resolve__context_1ab54571cffed7ab23c523bdd6e91e8056" prot="public" virt="non-virtual"><scope>dns_resolve_context</scope><name>servers</name></member>
      <member refid="structdns__resolve__context_1a88f6600061cdb8e9f34802fe2a0a7d5a" prot="public" virt="non-virtual"><scope>dns_resolve_context</scope><name>state</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
