<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__gptp" kind="group">
    <compoundname>gptp</compoundname>
    <title>gPTP support</title>
    <innerclass refid="structgptp__scaled__ns" prot="public">gptp_scaled_ns</innerclass>
    <innerclass refid="structgptp__uscaled__ns" prot="public">gptp_uscaled_ns</innerclass>
    <innerclass refid="structgptp__port__identity" prot="public">gptp_port_identity</innerclass>
    <innerclass refid="structgptp__flags" prot="public">gptp_flags</innerclass>
    <innerclass refid="structgptp__hdr" prot="public">gptp_hdr</innerclass>
    <innerclass refid="structgptp__phase__dis__cb" prot="public">gptp_phase_dis_cb</innerclass>
    <innerclass refid="structgptp__clk__src__time__invoke__params" prot="public">gptp_clk_src_time_invoke_params</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__gptp_1ga215907a526f619b70e542d132e910c49" prot="public" static="no">
        <type>void(*</type>
        <definition>gptp_phase_dis_callback_t</definition>
        <argsstring>)(uint8_t *gm_identity, uint16_t *time_base, struct gptp_scaled_ns *last_gm_ph_change, double *last_gm_freq_change)</argsstring>
        <name>gptp_phase_dis_callback_t</name>
        <briefdescription>
<para>Define callback that is called after a phase discontinuity has been sent by the grandmaster. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gm_identity</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to first element of a ClockIdentity array. The size of the array is GPTP_CLOCK_ID_LEN. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time_base</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the value of timeBaseIndicator of the current grandmaster. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last_gm_ph_change</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the value of lastGmPhaseChange received from grandmaster. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last_gm_freq_change</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the value of lastGmFreqChange received from the grandmaster. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/gptp.h" line="211" column="9" bodyfile="include/net/gptp.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gptp_1ga0f05b57ac57308b453215b37cca2424f" prot="public" static="no">
        <type>void(*</type>
        <definition>gptp_port_cb_t</definition>
        <argsstring>)(int port, struct net_if *iface, void *user_data)</argsstring>
        <name>gptp_port_cb_t</name>
        <briefdescription>
<para>Callback used while iterating over gPTP ports. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to network interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid pointer to user data or NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/gptp.h" line="304" column="9" bodyfile="include/net/gptp.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__gptp_1gaad2282df9cbf7f05f557285323af8f07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gptp_register_phase_dis_cb</definition>
        <argsstring>(struct gptp_phase_dis_cb *phase_dis, gptp_phase_dis_callback_t cb)</argsstring>
        <name>gptp_register_phase_dis_cb</name>
        <param>
          <type>struct <ref refid="structgptp__phase__dis__cb" kindref="compound">gptp_phase_dis_cb</ref> *</type>
          <declname>phase_dis</declname>
        </param>
        <param>
          <type><ref refid="group__gptp_1ga215907a526f619b70e542d132e910c49" kindref="member">gptp_phase_dis_callback_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Register a phase discontinuity callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>phase_dis</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller specified handler for the callback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback to register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/gptp.h" line="258" column="6" declfile="include/net/gptp.h" declline="258" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gptp_1ga55d95859e5ec586cb2341929901220dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gptp_unregister_phase_dis_cb</definition>
        <argsstring>(struct gptp_phase_dis_cb *phase_dis)</argsstring>
        <name>gptp_unregister_phase_dis_cb</name>
        <param>
          <type>struct <ref refid="structgptp__phase__dis__cb" kindref="compound">gptp_phase_dis_cb</ref> *</type>
          <declname>phase_dis</declname>
        </param>
        <briefdescription>
<para>Unregister a phase discontinuity callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>phase_dis</parametername>
</parameternamelist>
<parameterdescription>
<para>Caller specified handler for the callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/gptp.h" line="266" column="6" declfile="include/net/gptp.h" declline="266" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gptp_1ga29bf157d06a5ec5bb5a2a8a0e986709d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gptp_call_phase_dis_cb</definition>
        <argsstring>(void)</argsstring>
        <name>gptp_call_phase_dis_cb</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Call a phase discontinuity callback function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/gptp.h" line="271" column="6" declfile="include/net/gptp.h" declline="271" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gptp_1ga9a8e2ccf20d0430b4e62f3302462c6eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gptp_event_capture</definition>
        <argsstring>(struct net_ptp_time *slave_time, bool *gm_present)</argsstring>
        <name>gptp_event_capture</name>
        <param>
          <type>struct <ref refid="structnet__ptp__time" kindref="compound">net_ptp_time</ref> *</type>
          <declname>slave_time</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref> *</type>
          <declname>gm_present</declname>
        </param>
        <briefdescription>
<para>Get gPTP time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slave_time</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to structure where timestamp will be saved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gm_present</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a boolean where status of the presence of a grand master will be saved.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Error code. 0 if no error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/gptp.h" line="282" column="5" declfile="include/net/gptp.h" declline="282" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__gptp_1ga40121c2957d58b0b5bb4468eac5de259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * gptp_sprint_clock_id</definition>
        <argsstring>(const uint8_t *clk_id, char *output, size_t output_len)</argsstring>
        <name>gptp_sprint_clock_id</name>
        <param>
          <type>const <ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>clk_id</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>output_len</declname>
        </param>
        <briefdescription>
<para>Utility function to print clock id to a user supplied buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clk_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Clock id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer len</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to output buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/gptp.h" line="293" column="6" declfile="include/net/gptp.h" declline="293" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gptp_1ga06ddd41c7adf9e387d1b23bcdfccbddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gptp_foreach_port</definition>
        <argsstring>(gptp_port_cb_t cb, void *user_data)</argsstring>
        <name>gptp_foreach_port</name>
        <param>
          <type><ref refid="group__gptp_1ga0f05b57ac57308b453215b37cca2424f" kindref="member">gptp_port_cb_t</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Go through all the gPTP ports and call callback for each of them. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>User-supplied callback function to call </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>User specified data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/gptp.h" line="313" column="6" declfile="include/net/gptp.h" declline="313" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gptp_1gae4c3aac6b88e9ce21a32ba3263b9ad59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct gptp_domain *</type>
        <definition>struct gptp_domain * gptp_get_domain</definition>
        <argsstring>(void)</argsstring>
        <name>gptp_get_domain</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get gPTP domain. </para>
        </briefdescription>
        <detaileddescription>
<para>This contains all the configuration / status of the gPTP domain.</para>
<para><simplesect kind="return"><para>Pointer to domain or NULL if not found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/gptp.h" line="321" column="18" declfile="include/net/gptp.h" declline="321" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__gptp_1ga9b27c9a741fb0ca72eff78e334e629fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gptp_clk_src_time_invoke</definition>
        <argsstring>(struct gptp_clk_src_time_invoke_params *arg)</argsstring>
        <name>gptp_clk_src_time_invoke</name>
        <param>
          <type>struct <ref refid="structgptp__clk__src__time__invoke__params" kindref="compound">gptp_clk_src_time_invoke_params</ref> *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>This interface is used by the ClockSource entity to provide time to the ClockMaster entity of a time-aware system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>Current state and parameters of the ClockSource entity. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/gptp.h" line="329" column="6" declfile="include/net/gptp.h" declline="329" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gptp_1ga5b46fb7bbe1a380e3c327c8f5abbabeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structgptp__hdr" kindref="compound">gptp_hdr</ref> *</type>
        <definition>struct gptp_hdr * gptp_get_hdr</definition>
        <argsstring>(struct net_pkt *pkt)</argsstring>
        <name>gptp_get_hdr</name>
        <param>
          <type>struct <ref refid="structnet__pkt" kindref="compound">net_pkt</ref> *</type>
          <declname>pkt</declname>
        </param>
        <briefdescription>
<para>Return pointer to gPTP packet header in network packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pkt</parametername>
</parameternamelist>
<parameterdescription>
<para>Network packet (received or sent)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to gPTP header. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/gptp.h" line="338" column="15" declfile="include/net/gptp.h" declline="338" declcolumn="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>generic Precision Time Protocol (gPTP) support </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
