<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="tracing__format_8h" kind="file" language="C++">
    <compoundname>tracing_format.h</compoundname>
    <includes refid="common_8h" local="no">toolchain/common.h</includes>
    <incdepgraph>
      <node id="2">
        <label>toolchain/common.h</label>
        <link refid="common_8h"/>
      </node>
      <node id="1">
        <label>include/tracing/tracing_format.h</label>
        <link refid="tracing__format_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structtracing__data" prot="public">tracing_data</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__subsys__tracing__format__apis_1gac6aa3236d7aeb8c4a3f0c421899f74e6" prot="public" static="no">
        <name>TRACING_STRING</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>	do {								       \
		<ref refid="group__subsys__tracing__format__apis_1gaf372e7223a7be6f938cd6a0263815d44" kindref="member">tracing_format_string</ref>(fmt, ##__VA_ARGS__);		       \
	} while (<ref refid="stdbool_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>)</initializer>
        <briefdescription>
<para>Macro to trace a message in string format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>The format string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>The format arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tracing/tracing_format.h" line="35" column="9" bodyfile="include/tracing/tracing_format.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__subsys__tracing__format__apis_1ga5cf7507b0040325a4c04600fcdeb3b21" prot="public" static="no">
        <name>TRACING_FORMAT_DATA</name>
        <param><defname>x</defname></param>
        <initializer>	((struct <ref refid="structtracing__data" kindref="compound">tracing_data</ref>){.<ref refid="test__stack__fail_8c_1a4bb6fa6c719fd9021449009ab8befc04" kindref="member">data</ref> = (<ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *)&amp;(x), .length = sizeof((x))})</initializer>
        <briefdescription>
<para>Macro to format data to tracing data format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Data field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tracing/tracing_format.h" line="45" column="9" bodyfile="include/tracing/tracing_format.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__subsys__tracing__format__apis_1ga1b9265a15c577024edd687edc368ca82" prot="public" static="no">
        <name>TRACING_DATA</name>
        <param><defname>...</defname></param>
        <initializer>	do {								       \
		struct <ref refid="structtracing__data" kindref="compound">tracing_data</ref> arg[] = {__VA_ARGS__};		       \
									       \
		<ref refid="group__subsys__tracing__format__apis_1ga4072def87e770f60de40062617e96256" kindref="member">tracing_format_data</ref>(arg, sizeof(arg) /			       \
				    sizeof(struct <ref refid="structtracing__data" kindref="compound">tracing_data</ref>));	       \
	} while (<ref refid="stdbool_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>)</initializer>
        <briefdescription>
<para>Macro to trace a message in tracing data format. </para>
        </briefdescription>
        <detaileddescription>
<para>All the parameters should be struct <ref refid="structtracing__data" kindref="compound">tracing_data</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tracing/tracing_format.h" line="53" column="9" bodyfile="include/tracing/tracing_format.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__subsys__tracing__format__apis_1ga1a947f2e998d283b58a5e056f7edbb24" prot="public" static="no">
        <type>struct <ref refid="structtracing__data" kindref="compound">tracing_data</ref></type>
        <definition>typedef struct tracing_data tracing_data_t</definition>
        <argsstring></argsstring>
        <name>tracing_data_t</name>
        <briefdescription>
<para>A structure to represent tracing data format. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tracing/tracing_format.h" line="27" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__subsys__tracing__format__apis_1gaf372e7223a7be6f938cd6a0263815d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tracing_format_string</definition>
        <argsstring>(const char *str,...)</argsstring>
        <name>tracing_format_string</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Tracing a message in string format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String to format. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable length arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tracing/tracing_format.h" line="67" column="6" declfile="include/tracing/tracing_format.h" declline="67" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__subsys__tracing__format__apis_1gadb864c39916bc50bad341964fead14f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tracing_format_raw_data</definition>
        <argsstring>(uint8_t *data, uint32_t length)</argsstring>
        <name>tracing_format_raw_data</name>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Tracing a message in raw data format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw data to be traced. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw data length. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tracing/tracing_format.h" line="75" column="6" declfile="include/tracing/tracing_format.h" declline="75" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__subsys__tracing__format__apis_1ga4072def87e770f60de40062617e96256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tracing_format_data</definition>
        <argsstring>(tracing_data_t *tracing_data_array, uint32_t count)</argsstring>
        <name>tracing_format_data</name>
        <param>
          <type><ref refid="group__subsys__tracing__format__apis_1ga1a947f2e998d283b58a5e056f7edbb24" kindref="member">tracing_data_t</ref> *</type>
          <declname>tracing_data_array</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Tracing a message in tracing data format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tracing_data_array</parametername>
</parameternamelist>
<parameterdescription>
<para>Tracing_data format data array to be traced. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Tracing_data array data count. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tracing/tracing_format.h" line="83" column="6" declfile="include/tracing/tracing_format.h" declline="83" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Intel<sp/>corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_TRACING_TRACING_FORMAT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_TRACING_TRACING_FORMAT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="common_8h" kindref="compound">toolchain/common.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structtracing__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtracing__data" kindref="compound">tracing_data</ref><sp/>{</highlight></codeline>
<codeline lineno="25" refid="structtracing__data_1a4aaf5d4b8f7891710878389b6c781a90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="structtracing__data_1a4aaf5d4b8f7891710878389b6c781a90" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="26" refid="structtracing__data_1aee24ee325da9fc10892a38f61dca4dba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structtracing__data_1aee24ee325da9fc10892a38f61dca4dba" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="27" refid="group__subsys__tracing__format__apis_1ga1a947f2e998d283b58a5e056f7edbb24" refkind="member"><highlight class="normal">}<sp/>__packed<sp/><ref refid="group__subsys__tracing__format__apis_1ga1a947f2e998d283b58a5e056f7edbb24" kindref="member">tracing_data_t</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="group__subsys__tracing__format__apis_1gac6aa3236d7aeb8c4a3f0c421899f74e6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRACING_STRING(fmt,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracing_format_string(fmt,<sp/>##__VA_ARGS__);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="group__subsys__tracing__format__apis_1ga5cf7507b0040325a4c04600fcdeb3b21" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRACING_FORMAT_DATA(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((struct<sp/>tracing_data){.data<sp/>=<sp/>(uint8_t<sp/>*)&amp;(x),<sp/>.length<sp/>=<sp/>sizeof((x))})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="group__subsys__tracing__format__apis_1ga1b9265a15c577024edd687edc368ca82" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRACING_DATA(...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>tracing_data<sp/>arg[]<sp/>=<sp/>{__VA_ARGS__};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracing_format_data(arg,<sp/>sizeof(arg)<sp/>/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(struct<sp/>tracing_data));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="group__subsys__tracing__format__apis_1gaf372e7223a7be6f938cd6a0263815d44" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__subsys__tracing__format__apis_1gaf372e7223a7be6f938cd6a0263815d44" kindref="member">tracing_format_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/>...);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="group__subsys__tracing__format__apis_1gadb864c39916bc50bad341964fead14f5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__subsys__tracing__format__apis_1gadb864c39916bc50bad341964fead14f5" kindref="member">tracing_format_raw_data</ref>(<ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>length);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="group__subsys__tracing__format__apis_1ga4072def87e770f60de40062617e96256" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__subsys__tracing__format__apis_1ga4072def87e770f60de40062617e96256" kindref="member">tracing_format_data</ref>(<ref refid="structtracing__data" kindref="compound">tracing_data_t</ref><sp/>*tracing_data_array,<sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="condvar_2condvar__api_2src_2main_8c_1a612635fe60af527de1e4d54f66e27b94" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>subsys_tracing_format_apis<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_TRACING_TRACING_FORMAT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/tracing/tracing_format.h"/>
  </compounddef>
</doxygen>
