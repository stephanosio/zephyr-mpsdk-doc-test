<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structk__thread" kind="struct" language="C++" prot="public">
    <compoundname>k_thread</compoundname>
    <includes refid="kernel_2thread_8h" local="no">thread.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structk__thread_1a09a988f143ab5c4df887894920ff9df8" prot="public" static="no" mutable="no">
        <type>struct _thread_base</type>
        <definition>struct _thread_base k_thread::base</definition>
        <argsstring></argsstring>
        <name>base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread.h" line="218" column="19" bodyfile="include/kernel/thread.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__thread_1ae804efd7a191ed1022dd2cf5f588b0ef" prot="public" static="no" mutable="no">
        <type>struct _callee_saved</type>
        <definition>struct _callee_saved k_thread::callee_saved</definition>
        <argsstring></argsstring>
        <name>callee_saved</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>defined by the architecture, but all archs need these </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread.h" line="221" column="20" bodyfile="include/kernel/thread.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__thread_1a315fe3ad42c5c4c15d4596e6ceaf0694" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* k_thread::init_data</definition>
        <argsstring></argsstring>
        <name>init_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>static thread init data </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread.h" line="224" column="6" bodyfile="include/kernel/thread.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__thread_1aa8c560f5fbaf6cd551be99d491e654f6" prot="public" static="no" mutable="no">
        <type>_wait_q_t</type>
        <definition>_wait_q_t k_thread::join_queue</definition>
        <argsstring></argsstring>
        <name>join_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>threads waiting in <ref refid="group__thread__apis_1ga40a733561eb1f64dcaae0e01b167d233" kindref="member">k_thread_join()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread.h" line="227" column="11" bodyfile="include/kernel/thread.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__thread_1a63d78888376893fe0bdb485c5f114e03" prot="public" static="no" mutable="no">
        <type>struct __thread_entry</type>
        <definition>struct __thread_entry k_thread::entry</definition>
        <argsstring></argsstring>
        <name>entry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>thread entry and parameters description </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread.h" line="242" column="21" bodyfile="include/kernel/thread.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__thread_1a0f0bf272e21ad4709082631a34a8b240" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__thread" kindref="compound">k_thread</ref> *</type>
        <definition>struct k_thread* k_thread::next_thread</definition>
        <argsstring></argsstring>
        <name>next_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>next item in list of all threads </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread.h" line="245" column="15" bodyfile="include/kernel/thread.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__thread_1a459150bfd58cfb97eca88730eab7f325" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* k_thread::custom_data</definition>
        <argsstring></argsstring>
        <name>custom_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>crude thread-local storage </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread.h" line="255" column="6" bodyfile="include/kernel/thread.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__thread_1a8be452e7b016fc901adad8518d7fe518" prot="public" static="no" mutable="no">
        <type>struct _thread_stack_info</type>
        <definition>struct _thread_stack_info k_thread::stack_info</definition>
        <argsstring></argsstring>
        <name>stack_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stack Info </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread.h" line="271" column="25" bodyfile="include/kernel/thread.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__thread_1ab2fe91c58940a2f9d9cb7a30aa91cc55" prot="public" static="no" mutable="no">
        <type>struct _mem_domain_info</type>
        <definition>struct _mem_domain_info k_thread::mem_domain_info</definition>
        <argsstring></argsstring>
        <name>mem_domain_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>memory domain info of the thread </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread.h" line="276" column="23" bodyfile="include/kernel/thread.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__thread_1a40103270ef1e99a43e544b9a6737e96c" prot="public" static="no" mutable="no">
        <type><ref refid="arch__interface_8h_1a3e4bde3075edb41069b258d999333b0e" kindref="member">k_thread_stack_t</ref> *</type>
        <definition>k_thread_stack_t* k_thread::stack_obj</definition>
        <argsstring></argsstring>
        <name>stack_obj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Base address of thread stack </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread.h" line="278" column="18" bodyfile="include/kernel/thread.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__thread_1a7a6114f1bf7993ad7f80a26f71e7a230" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* k_thread::syscall_frame</definition>
        <argsstring></argsstring>
        <name>syscall_frame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>current syscall frame pointer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread.h" line="280" column="6" bodyfile="include/kernel/thread.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__thread_1ae4cbe01f267cc15663c84c03d80aa3c1" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int k_thread::swap_retval</definition>
        <argsstring></argsstring>
        <name>swap_retval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>z_swap() return value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread.h" line="290" column="5" bodyfile="include/kernel/thread.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__thread_1a351c093c8f32f66ab62f364b477128c4" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* k_thread::switch_handle</definition>
        <argsstring></argsstring>
        <name>switch_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Context handle returned via <ref refid="group__arch-threads_1gab411d82ce5b60f062171f5a19e33e025" kindref="member">arch_switch()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread.h" line="293" column="6" bodyfile="include/kernel/thread.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__thread_1a35b859bded3a270f25ccc40efece7583" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structk__heap" kindref="compound">k_heap</ref> *</type>
        <definition>struct k_heap* k_thread::resource_pool</definition>
        <argsstring></argsstring>
        <name>resource_pool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>resource pool </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread.h" line="296" column="13" bodyfile="include/kernel/thread.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structk__thread_1a0fa3dd64d03f6eef06320b51b0623301" prot="public" static="no" mutable="no">
        <type>struct _thread_arch</type>
        <definition>struct _thread_arch k_thread::arch</definition>
        <argsstring></argsstring>
        <name>arch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>arch-specifics: must always be at the end </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/kernel/thread.h" line="309" column="19" bodyfile="include/kernel/thread.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Thread Structure </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>__thread_entry</label>
      </node>
      <node id="3">
        <label>_callee_saved</label>
      </node>
      <node id="7">
        <label>_mem_domain_info</label>
      </node>
      <node id="12">
        <label>_thread_arch</label>
      </node>
      <node id="2">
        <label>_thread_base</label>
      </node>
      <node id="6">
        <label>_thread_stack_info</label>
      </node>
      <node id="4">
        <label>_wait_q_t</label>
      </node>
      <node id="9">
        <label>k_heap</label>
        <link refid="structk__heap"/>
        <childnode refid="10" relation="usage">
          <edgelabel>heap</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>wait_q</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>lock</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>k_spinlock</label>
        <link refid="structk__spinlock"/>
      </node>
      <node id="1">
        <label>k_thread</label>
        <link refid="structk__thread"/>
        <childnode refid="2" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>callee_saved</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>join_queue</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>entry</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>next_thread</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>stack_info</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>mem_domain_info</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>stack_obj</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>resource_pool</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>arch</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>sys_heap</label>
        <link refid="structsys__heap"/>
      </node>
      <node id="8">
        <label>z_thread_stack_element</label>
      </node>
    </collaborationgraph>
    <location file="include/kernel/thread.h" line="216" column="1" bodyfile="include/kernel/thread.h" bodystart="216" bodyend="310"/>
    <listofallmembers>
      <member refid="structk__thread_1a0fa3dd64d03f6eef06320b51b0623301" prot="public" virt="non-virtual"><scope>k_thread</scope><name>arch</name></member>
      <member refid="structk__thread_1a09a988f143ab5c4df887894920ff9df8" prot="public" virt="non-virtual"><scope>k_thread</scope><name>base</name></member>
      <member refid="structk__thread_1ae804efd7a191ed1022dd2cf5f588b0ef" prot="public" virt="non-virtual"><scope>k_thread</scope><name>callee_saved</name></member>
      <member refid="structk__thread_1a459150bfd58cfb97eca88730eab7f325" prot="public" virt="non-virtual"><scope>k_thread</scope><name>custom_data</name></member>
      <member refid="structk__thread_1a63d78888376893fe0bdb485c5f114e03" prot="public" virt="non-virtual"><scope>k_thread</scope><name>entry</name></member>
      <member refid="structk__thread_1a315fe3ad42c5c4c15d4596e6ceaf0694" prot="public" virt="non-virtual"><scope>k_thread</scope><name>init_data</name></member>
      <member refid="structk__thread_1aa8c560f5fbaf6cd551be99d491e654f6" prot="public" virt="non-virtual"><scope>k_thread</scope><name>join_queue</name></member>
      <member refid="structk__thread_1ab2fe91c58940a2f9d9cb7a30aa91cc55" prot="public" virt="non-virtual"><scope>k_thread</scope><name>mem_domain_info</name></member>
      <member refid="structk__thread_1a0f0bf272e21ad4709082631a34a8b240" prot="public" virt="non-virtual"><scope>k_thread</scope><name>next_thread</name></member>
      <member refid="structk__thread_1a35b859bded3a270f25ccc40efece7583" prot="public" virt="non-virtual"><scope>k_thread</scope><name>resource_pool</name></member>
      <member refid="structk__thread_1a8be452e7b016fc901adad8518d7fe518" prot="public" virt="non-virtual"><scope>k_thread</scope><name>stack_info</name></member>
      <member refid="structk__thread_1a40103270ef1e99a43e544b9a6737e96c" prot="public" virt="non-virtual"><scope>k_thread</scope><name>stack_obj</name></member>
      <member refid="structk__thread_1ae4cbe01f267cc15663c84c03d80aa3c1" prot="public" virt="non-virtual"><scope>k_thread</scope><name>swap_retval</name></member>
      <member refid="structk__thread_1a351c093c8f32f66ab62f364b477128c4" prot="public" virt="non-virtual"><scope>k_thread</scope><name>switch_handle</name></member>
      <member refid="structk__thread_1a7a6114f1bf7993ad7f80a26f71e7a230" prot="public" virt="non-virtual"><scope>k_thread</scope><name>syscall_frame</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
