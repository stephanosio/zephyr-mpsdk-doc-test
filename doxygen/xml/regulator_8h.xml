<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="regulator_8h" kind="file" language="C++">
    <compoundname>regulator.h</compoundname>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includes refid="drivers_2gpio_8h" local="no">drivers/gpio.h</includes>
    <includes refid="onoff_8h" local="no">sys/onoff.h</includes>
    <includedby refid="consumer_8h" local="no">include/drivers/regulator/consumer.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>drivers/gpio.h</label>
        <link refid="drivers_2gpio_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/drivers/regulator.h</label>
        <link refid="regulator_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>dt-bindings/gpio/gpio.h</label>
        <link refid="dt-bindings_2gpio_2gpio_8h"/>
      </node>
      <node id="6">
        <label>sys/__assert.h</label>
        <link refid="____assert_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>list_gen.h</label>
        <link refid="list__gen_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>sys/notify.h</label>
        <link refid="notify_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>sys/onoff.h</label>
        <link refid="onoff_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sys/slist.h</label>
        <link refid="slist_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="15">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="2">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="4">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="18">
        <label>device.h</label>
      </node>
      <node id="22">
        <label>kernel.h</label>
      </node>
      <node id="10">
        <label>stdarg.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="20">
        <label>syscalls/gpio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/drivers/regulator.h</label>
        <link refid="regulator_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/drivers/regulator/consumer.h</label>
        <link refid="consumer_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structregulator__driver__api" prot="public">regulator_driver_api</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__regulator__interface_1ga4497407d231cce49b17151e99cd4a2ce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int regulator_enable</definition>
        <argsstring>(const struct device *reg, struct onoff_client *cli)</argsstring>
        <name>regulator_enable</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>struct <ref refid="structonoff__client" kindref="compound">onoff_client</ref> *</type>
          <declname>cli</declname>
        </param>
        <briefdescription>
<para>Enable a regulator. </para>
        </briefdescription>
        <detaileddescription>
<para>Reference-counted request that a regulator be turned on. This is an asynchronous operation; if successfully initiated the result will be communicated through the <computeroutput>cli</computeroutput> parameter.</para>
<para>A regulator is considered &quot;on&quot; when it has reached a stable/usable state.</para>
<para><simplesect kind="note"><para>This function is <emphasis>isr-ok</emphasis> and <emphasis>pre-kernel-ok</emphasis>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>a regulator device</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cli</parametername>
</parameternamelist>
<parameterdescription>
<para>used to notify the caller when the attempt to turn on the regulator has completed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>non-negative on successful initiation of the request. Negative values indicate failures from <ref refid="group__resource__mgmt__onoff__apis_1ga20dcb358e405deb87b7fbb7846ef9d68" kindref="member">onoff_request()</ref> or individual regulator drivers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/regulator.h" line="58" column="19" bodyfile="include/drivers/regulator.h" bodystart="58" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="group__regulator__interface_1ga1f9ec9766986b920ec1f2bbf17c75f6e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int regulator_disable</definition>
        <argsstring>(const struct device *reg)</argsstring>
        <name>regulator_disable</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>reg</declname>
        </param>
        <briefdescription>
<para>Disable a regulator. </para>
        </briefdescription>
        <detaileddescription>
<para>Release a regulator after a previous <ref refid="group__regulator__interface_1ga4497407d231cce49b17151e99cd4a2ce" kindref="member">regulator_enable()</ref> completed successfully.</para>
<para>If the release removes the last dependency on the regulator it will begin a transition to its &quot;off&quot; state. There is currently no mechanism to notify when the regulator has completely turned off.</para>
<para>This must be invoked at most once for each successful <ref refid="group__regulator__interface_1ga4497407d231cce49b17151e99cd4a2ce" kindref="member">regulator_enable()</ref>.</para>
<para><simplesect kind="note"><para>This function is <emphasis>isr-ok</emphasis>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>a regulator device</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>non-negative on successful completion of the release request. Negative values indicate failures from <ref refid="group__resource__mgmt__onoff__apis_1ga19da5359f10fa2e2eb034d1e72235ea6" kindref="member">onoff_release()</ref> or individual regulator drivers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/regulator.h" line="88" column="19" bodyfile="include/drivers/regulator.h" bodystart="88" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>API for voltage and current regulators. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2019-2020<sp/>Peter<sp/>Bigot<sp/>Consulting,<sp/>LLC</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_DRIVERS_REGULATOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_DRIVERS_REGULATOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="drivers_2gpio_8h" kindref="compound">drivers/gpio.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="onoff_8h" kindref="compound">sys/onoff.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structregulator__driver__api" refkind="compound"><highlight class="normal">__subsystem<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structregulator__driver__api" kindref="compound">regulator_driver_api</ref><sp/>{</highlight></codeline>
<codeline lineno="33" refid="structregulator__driver__api_1ad9786c92cd4f31729cfe0581abde14da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structregulator__driver__api_1ad9786c92cd4f31729cfe0581abde14da" kindref="member">enable</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structonoff__client" kindref="compound">onoff_client</ref><sp/>*cli);</highlight></codeline>
<codeline lineno="34" refid="structregulator__driver__api_1addb94c65f97952322b783394a76f6e09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structregulator__driver__api_1addb94c65f97952322b783394a76f6e09" kindref="member">disable</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group__regulator__interface_1ga4497407d231cce49b17151e99cd4a2ce" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__regulator__interface_1ga4497407d231cce49b17151e99cd4a2ce" kindref="member">regulator_enable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structonoff__client" kindref="compound">onoff_client</ref><sp/>*cli)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structregulator__driver__api" kindref="compound">regulator_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structregulator__driver__api" kindref="compound">regulator_driver_api</ref><sp/>*)<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;api;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structregulator__driver__api_1ad9786c92cd4f31729cfe0581abde14da" kindref="member">enable</ref>(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>,<sp/>cli);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="group__regulator__interface_1ga1f9ec9766986b920ec1f2bbf17c75f6e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__regulator__interface_1ga1f9ec9766986b920ec1f2bbf17c75f6e" kindref="member">regulator_disable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structregulator__driver__api" kindref="compound">regulator_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structregulator__driver__api" kindref="compound">regulator_driver_api</ref><sp/>*)<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>-&gt;api;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structregulator__driver__api_1addb94c65f97952322b783394a76f6e09" kindref="member">disable</ref>(<ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_DRIVERS_REGULATOR_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/drivers/regulator.h"/>
  </compounddef>
</doxygen>
